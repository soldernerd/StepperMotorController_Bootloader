

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Feb 24 21:04:16 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=2
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   212                           	dabs	1,0x600,512,_msd_buffer
   213                           	dabs	1,0xD00,48,_BDT
   214                           	dabs	1,0xD40,31,_msd_cbw
   215                           	dabs	1,0xD80,13,_msd_csw
   216                           	dabs	1,0xD38,8,_CtrlTrfData
   217                           	dabs	1,0xD30,8,_SetupPkt
   218  0000                     
   219                           ; Version 2.00
   220                           ; Generated 27/05/2018 GMT
   221                           ; 
   222                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   223                           ; All rights reserved.
   224                           ; 
   225                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   226                           ; 
   227                           ; Redistribution and use in source and binary forms, with or without modification, are
   228                           ; permitted provided that the following conditions are met:
   229                           ; 
   230                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   231                           ;        conditions and the following disclaimer.
   232                           ; 
   233                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   234                           ;        of conditions and the following disclaimer in the documentation and/or other
   235                           ;        materials provided with the distribution.
   236                           ; 
   237                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   238                           ;        software without specific prior written permission.
   239                           ; 
   240                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   241                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   242                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   243                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   244                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   245                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   246                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   247                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   248                           ; 
   249                           ; 
   250                           ; Code-generator required, PIC18F47J53 Definitions
   251                           ; 
   252                           ; SFR Addresses
   253  0000                     
   254                           	psect	intcode
   255  000008  EF04 F048          	goto	36872	;# 
   256                           
   257                           	psect	intcodelo
   258  000018  EF0C F048          	goto	36888	; ;# 
   259  0000                     
   260                           	psect	idataBANK0
   261  007258                     __pidataBANK0:
   262                           	opt stack 0
   263                           
   264                           ;initializer for _file_number
   265  007258  FF                 	db	255
   266                           
   267                           	psect	idataBANK1
   268  006FFC                     __pidataBANK1:
   269                           	opt stack 0
   270                           
   271                           ;initializer for _LUN
   272  006FFC  6C                 	db	low _ExternalFlash_MediaInitialize
   273  006FFD  70                 	db	high _ExternalFlash_MediaInitialize
   274  006FFE  2E                 	db	low _ExternalFlash_CapacityRead
   275  006FFF  71                 	db	high _ExternalFlash_CapacityRead
   276  007000  C6                 	db	low _ExternalFlash_SectorSizeRead
   277  007001  71                 	db	high _ExternalFlash_SectorSizeRead
   278  007002  54                 	db	low _ExternalFlash_MediaDetect
   279  007003  72                 	db	high _ExternalFlash_MediaDetect
   280  007004  B8                 	db	low _ExternalFlash_SectorRead
   281  007005  6C                 	db	high _ExternalFlash_SectorRead
   282  007006  50                 	db	low _ExternalFlash_WriteProtectStateGet
   283  007007  72                 	db	high _ExternalFlash_WriteProtectStateGet
   284  007008  86                 	db	low _ExternalFlash_SectorWrite
   285  007009  6C                 	db	high _ExternalFlash_SectorWrite
   286  00700A  00                 	db	0
   287  00700B  00                 	db	0
   288  00700C  00                 	db	0
   289  00700D  00                 	db	0
   290  00700E  00                 	db	0
   291  00700F  00                 	db	0
   292                           
   293                           ;initializer for _tx_buf
   294  007010  01                 	db	1
   295  007011  02                 	db	2
   296  007012  03                 	db	3
   297  007013  04                 	db	4
   298  007014  05                 	db	5
   299  007015  06                 	db	6
   300  007016  07                 	db	7
   301  007017  08                 	db	8
   302                           
   303                           	psect	idataBANK2
   304  0070E6                     __pidataBANK2:
   305                           	opt stack 0
   306                           
   307                           ;initializer for i2c_display_init@F6826
   308  0070E6  3A                 	db	58
   309  0070E7  1E                 	db	30
   310  0070E8  39                 	db	57
   311  0070E9  0C                 	db	12
   312  0070EA  74                 	db	116
   313  0070EB  5C                 	db	92
   314  0070EC  6D                 	db	109
   315  0070ED  0C                 	db	12
   316  0070EE  01                 	db	1
   317                           
   318                           ;initializer for __i2c_display_send_init_sequence@F6823
   319  0070EF  3A                 	db	58
   320  0070F0  1E                 	db	30
   321  0070F1  39                 	db	57
   322  0070F2  0C                 	db	12
   323  0070F3  74                 	db	116
   324  0070F4  5C                 	db	92
   325  0070F5  6D                 	db	109
   326  0070F6  0C                 	db	12
   327  0070F7  01                 	db	1
   328                           
   329                           	psect	mediumconst
   330  008C6C                     __pmediumconst:
   331                           	opt stack 0
   332  008C6C  00                 	db	0
   333  008C6D                     _checked_line2:
   334                           	opt stack 0
   335  008C6D  46                 	db	70
   336  008C6E  69                 	db	105
   337  008C6F  6C                 	db	108
   338  008C70  65                 	db	101
   339  008C71  20                 	db	32
   340  008C72  63                 	db	99
   341  008C73  68                 	db	104
   342  008C74  65                 	db	101
   343  008C75  63                 	db	99
   344  008C76  6B                 	db	107
   345  008C77  20                 	db	32
   346  008C78  63                 	db	99
   347  008C79  6F                 	db	111
   348  008C7A  6D                 	db	109
   349  008C7B  70                 	db	112
   350  008C7C  6C                 	db	108
   351  008C7D  65                 	db	101
   352  008C7E  74                 	db	116
   353  008C7F  65                 	db	101
   354  008C80  64                 	db	100
   355  008C81  00                 	db	0
   356  008C82                     __end_of_checked_line2:
   357                           	opt stack 0
   358  008C82                     _failed_line3_addressRange:
   359                           	opt stack 0
   360  008C82  41                 	db	65
   361  008C83  64                 	db	100
   362  008C84  64                 	db	100
   363  008C85  72                 	db	114
   364  008C86  2E                 	db	46
   365  008C87  20                 	db	32
   366  008C88  6F                 	db	111
   367  008C89  75                 	db	117
   368  008C8A  74                 	db	116
   369  008C8B  73                 	db	115
   370  008C8C  69                 	db	105
   371  008C8D  64                 	db	100
   372  008C8E  65                 	db	101
   373  008C8F  20                 	db	32
   374  008C90  72                 	db	114
   375  008C91  61                 	db	97
   376  008C92  6E                 	db	110
   377  008C93  67                 	db	103
   378  008C94  65                 	db	101
   379  008C95  00                 	db	0
   380  008C96                     __end_of_failed_line3_addressRange:
   381                           	opt stack 0
   382  008C96                     _search_line3:
   383                           	opt stack 0
   384  008C96  46                 	db	70
   385  008C97  49                 	db	73
   386  008C98  52                 	db	82
   387  008C99  4D                 	db	77
   388  008C9A  57                 	db	87
   389  008C9B  41                 	db	65
   390  008C9C  52                 	db	82
   391  008C9D  45                 	db	69
   392  008C9E  2E                 	db	46
   393  008C9F  48                 	db	72
   394  008CA0  45                 	db	69
   395  008CA1  58                 	db	88
   396  008CA2  20                 	db	32
   397  008CA3  6F                 	db	111
   398  008CA4  6E                 	db	110
   399  008CA5  20                 	db	32
   400  008CA6  55                 	db	85
   401  008CA7  53                 	db	83
   402  008CA8  42                 	db	66
   403  008CA9  00                 	db	0
   404  008CAA                     __end_of_search_line3:
   405                           	opt stack 0
   406  008CAA                     _failed_line3_startCode:
   407                           	opt stack 0
   408  008CAA  4D                 	db	77
   409  008CAB  69                 	db	105
   410  008CAC  73                 	db	115
   411  008CAD  73                 	db	115
   412  008CAE  69                 	db	105
   413  008CAF  6E                 	db	110
   414  008CB0  67                 	db	103
   415  008CB1  20                 	db	32
   416  008CB2  73                 	db	115
   417  008CB3  74                 	db	116
   418  008CB4  61                 	db	97
   419  008CB5  72                 	db	114
   420  008CB6  74                 	db	116
   421  008CB7  20                 	db	32
   422  008CB8  63                 	db	99
   423  008CB9  6F                 	db	111
   424  008CBA  64                 	db	100
   425  008CBB  65                 	db	101
   426  008CBC  00                 	db	0
   427  008CBD                     __end_of_failed_line3_startCode:
   428                           	opt stack 0
   429  008CBD                     _found_line2:
   430                           	opt stack 0
   431  008CBD  46                 	db	70
   432  008CBE  49                 	db	73
   433  008CBF  52                 	db	82
   434  008CC0  4D                 	db	77
   435  008CC1  57                 	db	87
   436  008CC2  41                 	db	65
   437  008CC3  52                 	db	82
   438  008CC4  45                 	db	69
   439  008CC5  2E                 	db	46
   440  008CC6  48                 	db	72
   441  008CC7  45                 	db	69
   442  008CC8  58                 	db	88
   443  008CC9  20                 	db	32
   444  008CCA  66                 	db	102
   445  008CCB  6F                 	db	111
   446  008CCC  75                 	db	117
   447  008CCD  6E                 	db	110
   448  008CCE  64                 	db	100
   449  008CCF  00                 	db	0
   450  008CD0                     __end_of_found_line2:
   451                           	opt stack 0
   452  008CD0                     _programming_line2:
   453                           	opt stack 0
   454  008CD0  50                 	db	80
   455  008CD1  72                 	db	114
   456  008CD2  6F                 	db	111
   457  008CD3  67                 	db	103
   458  008CD4  72                 	db	114
   459  008CD5  61                 	db	97
   460  008CD6  6D                 	db	109
   461  008CD7  6D                 	db	109
   462  008CD8  69                 	db	105
   463  008CD9  6E                 	db	110
   464  008CDA  67                 	db	103
   465  008CDB  20                 	db	32
   466  008CDC  66                 	db	102
   467  008CDD  6C                 	db	108
   468  008CDE  61                 	db	97
   469  008CDF  73                 	db	115
   470  008CE0  68                 	db	104
   471  008CE1  00                 	db	0
   472  008CE2                     __end_of_programming_line2:
   473                           	opt stack 0
   474  008CE2                     _failed_line2:
   475                           	opt stack 0
   476  008CE2  46                 	db	70
   477  008CE3  69                 	db	105
   478  008CE4  6C                 	db	108
   479  008CE5  65                 	db	101
   480  008CE6  20                 	db	32
   481  008CE7  63                 	db	99
   482  008CE8  68                 	db	104
   483  008CE9  65                 	db	101
   484  008CEA  63                 	db	99
   485  008CEB  6B                 	db	107
   486  008CEC  20                 	db	32
   487  008CED  66                 	db	102
   488  008CEE  61                 	db	97
   489  008CEF  69                 	db	105
   490  008CF0  6C                 	db	108
   491  008CF1  65                 	db	101
   492  008CF2  64                 	db	100
   493  008CF3  00                 	db	0
   494  008CF4                     __end_of_failed_line2:
   495                           	opt stack 0
   496  008CF4                     _found_line4:
   497                           	opt stack 0
   498  008CF4  50                 	db	80
   499  008CF5  72                 	db	114
   500  008CF6  65                 	db	101
   501  008CF7  73                 	db	115
   502  008CF8  73                 	db	115
   503  008CF9  20                 	db	32
   504  008CFA  74                 	db	116
   505  008CFB  6F                 	db	111
   506  008CFC  20                 	db	32
   507  008CFD  75                 	db	117
   508  008CFE  73                 	db	115
   509  008CFF  65                 	db	101
   510  008D00  20                 	db	32
   511  008D01  66                 	db	102
   512  008D02  69                 	db	105
   513  008D03  6C                 	db	108
   514  008D04  65                 	db	101
   515  008D05  00                 	db	0
   516  008D06                     __end_of_found_line4:
   517                           	opt stack 0
   518  008D06                     _checked_line4:
   519                           	opt stack 0
   520  008D06  50                 	db	80
   521  008D07  72                 	db	114
   522  008D08  65                 	db	101
   523  008D09  73                 	db	115
   524  008D0A  73                 	db	115
   525  008D0B  20                 	db	32
   526  008D0C  74                 	db	116
   527  008D0D  6F                 	db	111
   528  008D0E  20                 	db	32
   529  008D0F  70                 	db	112
   530  008D10  72                 	db	114
   531  008D11  6F                 	db	111
   532  008D12  67                 	db	103
   533  008D13  72                 	db	114
   534  008D14  61                 	db	97
   535  008D15  6D                 	db	109
   536  008D16  00                 	db	0
   537  008D17                     __end_of_checked_line4:
   538                           	opt stack 0
   539  008D17                     _search_line2:
   540                           	opt stack 0
   541  008D17  4C                 	db	76
   542  008D18  6F                 	db	111
   543  008D19  6F                 	db	111
   544  008D1A  6B                 	db	107
   545  008D1B  69                 	db	105
   546  008D1C  6E                 	db	110
   547  008D1D  67                 	db	103
   548  008D1E  20                 	db	32
   549  008D1F  66                 	db	102
   550  008D20  6F                 	db	111
   551  008D21  72                 	db	114
   552  008D22  20                 	db	32
   553  008D23  66                 	db	102
   554  008D24  69                 	db	105
   555  008D25  6C                 	db	108
   556  008D26  65                 	db	101
   557  008D27  00                 	db	0
   558  008D28                     __end_of_search_line2:
   559                           	opt stack 0
   560  008D28                     _suspended_line4:
   561                           	opt stack 0
   562  008D28  50                 	db	80
   563  008D29  72                 	db	114
   564  008D2A  65                 	db	101
   565  008D2B  73                 	db	115
   566  008D2C  73                 	db	115
   567  008D2D  20                 	db	32
   568  008D2E  74                 	db	116
   569  008D2F  6F                 	db	111
   570  008D30  20                 	db	32
   571  008D31  72                 	db	114
   572  008D32  65                 	db	101
   573  008D33  73                 	db	115
   574  008D34  75                 	db	117
   575  008D35  6D                 	db	109
   576  008D36  65                 	db	101
   577  008D37  00                 	db	0
   578  008D38                     __end_of_suspended_line4:
   579                           	opt stack 0
   580  008D38                     _suspended_line1:
   581                           	opt stack 0
   582  008D38  42                 	db	66
   583  008D39  6F                 	db	111
   584  008D3A  6F                 	db	111
   585  008D3B  74                 	db	116
   586  008D3C  6C                 	db	108
   587  008D3D  6F                 	db	111
   588  008D3E  61                 	db	97
   589  008D3F  64                 	db	100
   590  008D40  65                 	db	101
   591  008D41  72                 	db	114
   592  008D42  20                 	db	32
   593  008D43  4D                 	db	77
   594  008D44  6F                 	db	111
   595  008D45  64                 	db	100
   596  008D46  65                 	db	101
   597  008D47  00                 	db	0
   598  008D48                     __end_of_suspended_line1:
   599                           	opt stack 0
   600  008D48                     _done_line4:
   601                           	opt stack 0
   602  008D48  50                 	db	80
   603  008D49  72                 	db	114
   604  008D4A  65                 	db	101
   605  008D4B  73                 	db	115
   606  008D4C  73                 	db	115
   607  008D4D  20                 	db	32
   608  008D4E  74                 	db	116
   609  008D4F  6F                 	db	111
   610  008D50  20                 	db	32
   611  008D51  72                 	db	114
   612  008D52  65                 	db	101
   613  008D53  62                 	db	98
   614  008D54  6F                 	db	111
   615  008D55  6F                 	db	111
   616  008D56  74                 	db	116
   617  008D57  00                 	db	0
   618  008D58                     __end_of_done_line4:
   619                           	opt stack 0
   620  008D58                     _done_line3:
   621                           	opt stack 0
   622  008D58  50                 	db	80
   623  008D59  61                 	db	97
   624  008D5A  67                 	db	103
   625  008D5B  65                 	db	101
   626  008D5C  73                 	db	115
   627  008D5D  20                 	db	32
   628  008D5E  77                 	db	119
   629  008D5F  72                 	db	114
   630  008D60  69                 	db	105
   631  008D61  74                 	db	116
   632  008D62  74                 	db	116
   633  008D63  65                 	db	101
   634  008D64  6E                 	db	110
   635  008D65  3A                 	db	58
   636  008D66  20                 	db	32
   637  008D67  00                 	db	0
   638  008D68                     __end_of_done_line3:
   639                           	opt stack 0
   640  008D68                     _done_line1:
   641                           	opt stack 0
   642  008D68  42                 	db	66
   643  008D69  6F                 	db	111
   644  008D6A  6F                 	db	111
   645  008D6B  74                 	db	116
   646  008D6C  6C                 	db	108
   647  008D6D  6F                 	db	111
   648  008D6E  61                 	db	97
   649  008D6F  64                 	db	100
   650  008D70  65                 	db	101
   651  008D71  72                 	db	114
   652  008D72  20                 	db	32
   653  008D73  4D                 	db	77
   654  008D74  6F                 	db	111
   655  008D75  64                 	db	100
   656  008D76  65                 	db	101
   657  008D77  00                 	db	0
   658  008D78                     __end_of_done_line1:
   659                           	opt stack 0
   660  008D78                     _programming_line4:
   661                           	opt stack 0
   662  008D78  50                 	db	80
   663  008D79  61                 	db	97
   664  008D7A  67                 	db	103
   665  008D7B  65                 	db	101
   666  008D7C  73                 	db	115
   667  008D7D  20                 	db	32
   668  008D7E  77                 	db	119
   669  008D7F  72                 	db	114
   670  008D80  69                 	db	105
   671  008D81  74                 	db	116
   672  008D82  74                 	db	116
   673  008D83  65                 	db	101
   674  008D84  6E                 	db	110
   675  008D85  3A                 	db	58
   676  008D86  20                 	db	32
   677  008D87  00                 	db	0
   678  008D88                     __end_of_programming_line4:
   679                           	opt stack 0
   680  008D88                     _programming_line1:
   681                           	opt stack 0
   682  008D88  42                 	db	66
   683  008D89  6F                 	db	111
   684  008D8A  6F                 	db	111
   685  008D8B  74                 	db	116
   686  008D8C  6C                 	db	108
   687  008D8D  6F                 	db	111
   688  008D8E  61                 	db	97
   689  008D8F  64                 	db	100
   690  008D90  65                 	db	101
   691  008D91  72                 	db	114
   692  008D92  20                 	db	32
   693  008D93  4D                 	db	77
   694  008D94  6F                 	db	111
   695  008D95  64                 	db	100
   696  008D96  65                 	db	101
   697  008D97  00                 	db	0
   698  008D98                     __end_of_programming_line1:
   699                           	opt stack 0
   700  008D98                     _failed_line1:
   701                           	opt stack 0
   702  008D98  42                 	db	66
   703  008D99  6F                 	db	111
   704  008D9A  6F                 	db	111
   705  008D9B  74                 	db	116
   706  008D9C  6C                 	db	108
   707  008D9D  6F                 	db	111
   708  008D9E  61                 	db	97
   709  008D9F  64                 	db	100
   710  008DA0  65                 	db	101
   711  008DA1  72                 	db	114
   712  008DA2  20                 	db	32
   713  008DA3  4D                 	db	77
   714  008DA4  6F                 	db	111
   715  008DA5  64                 	db	100
   716  008DA6  65                 	db	101
   717  008DA7  00                 	db	0
   718  008DA8                     __end_of_failed_line1:
   719                           	opt stack 0
   720  008DA8                     _checked_line1:
   721                           	opt stack 0
   722  008DA8  42                 	db	66
   723  008DA9  6F                 	db	111
   724  008DAA  6F                 	db	111
   725  008DAB  74                 	db	116
   726  008DAC  6C                 	db	108
   727  008DAD  6F                 	db	111
   728  008DAE  61                 	db	97
   729  008DAF  64                 	db	100
   730  008DB0  65                 	db	101
   731  008DB1  72                 	db	114
   732  008DB2  20                 	db	32
   733  008DB3  4D                 	db	77
   734  008DB4  6F                 	db	111
   735  008DB5  64                 	db	100
   736  008DB6  65                 	db	101
   737  008DB7  00                 	db	0
   738  008DB8                     __end_of_checked_line1:
   739                           	opt stack 0
   740  008DB8                     _verify_line1:
   741                           	opt stack 0
   742  008DB8  42                 	db	66
   743  008DB9  6F                 	db	111
   744  008DBA  6F                 	db	111
   745  008DBB  74                 	db	116
   746  008DBC  6C                 	db	108
   747  008DBD  6F                 	db	111
   748  008DBE  61                 	db	97
   749  008DBF  64                 	db	100
   750  008DC0  65                 	db	101
   751  008DC1  72                 	db	114
   752  008DC2  20                 	db	32
   753  008DC3  4D                 	db	77
   754  008DC4  6F                 	db	111
   755  008DC5  64                 	db	100
   756  008DC6  65                 	db	101
   757  008DC7  00                 	db	0
   758  008DC8                     __end_of_verify_line1:
   759                           	opt stack 0
   760  008DC8                     _found_line1:
   761                           	opt stack 0
   762  008DC8  42                 	db	66
   763  008DC9  6F                 	db	111
   764  008DCA  6F                 	db	111
   765  008DCB  74                 	db	116
   766  008DCC  6C                 	db	108
   767  008DCD  6F                 	db	111
   768  008DCE  61                 	db	97
   769  008DCF  64                 	db	100
   770  008DD0  65                 	db	101
   771  008DD1  72                 	db	114
   772  008DD2  20                 	db	32
   773  008DD3  4D                 	db	77
   774  008DD4  6F                 	db	111
   775  008DD5  64                 	db	100
   776  008DD6  65                 	db	101
   777  008DD7  00                 	db	0
   778  008DD8                     __end_of_found_line1:
   779                           	opt stack 0
   780  008DD8                     _search_line1:
   781                           	opt stack 0
   782  008DD8  42                 	db	66
   783  008DD9  6F                 	db	111
   784  008DDA  6F                 	db	111
   785  008DDB  74                 	db	116
   786  008DDC  6C                 	db	108
   787  008DDD  6F                 	db	111
   788  008DDE  61                 	db	97
   789  008DDF  64                 	db	100
   790  008DE0  65                 	db	101
   791  008DE1  72                 	db	114
   792  008DE2  20                 	db	32
   793  008DE3  4D                 	db	77
   794  008DE4  6F                 	db	111
   795  008DE5  64                 	db	100
   796  008DE6  65                 	db	101
   797  008DE7  00                 	db	0
   798  008DE8                     __end_of_search_line1:
   799                           	opt stack 0
   800  008DE8                     _start_line1:
   801                           	opt stack 0
   802  008DE8  42                 	db	66
   803  008DE9  6F                 	db	111
   804  008DEA  6F                 	db	111
   805  008DEB  74                 	db	116
   806  008DEC  6C                 	db	108
   807  008DED  6F                 	db	111
   808  008DEE  61                 	db	97
   809  008DEF  64                 	db	100
   810  008DF0  65                 	db	101
   811  008DF1  72                 	db	114
   812  008DF2  20                 	db	32
   813  008DF3  4D                 	db	77
   814  008DF4  6F                 	db	111
   815  008DF5  64                 	db	100
   816  008DF6  65                 	db	101
   817  008DF7  00                 	db	0
   818  008DF8                     __end_of_start_line1:
   819                           	opt stack 0
   820  008DF8                     _failed_line3_checksum:
   821                           	opt stack 0
   822  008DF8  43                 	db	67
   823  008DF9  68                 	db	104
   824  008DFA  65                 	db	101
   825  008DFB  63                 	db	99
   826  008DFC  6B                 	db	107
   827  008DFD  73                 	db	115
   828  008DFE  75                 	db	117
   829  008DFF  6D                 	db	109
   830  008E00  20                 	db	32
   831  008E01  65                 	db	101
   832  008E02  72                 	db	114
   833  008E03  72                 	db	114
   834  008E04  6F                 	db	111
   835  008E05  72                 	db	114
   836  008E06  00                 	db	0
   837  008E07                     __end_of_failed_line3_checksum:
   838                           	opt stack 0
   839  008E07                     _failed_line3_noNextRecord:
   840                           	opt stack 0
   841  008E07  4E                 	db	78
   842  008E08  6F                 	db	111
   843  008E09  20                 	db	32
   844  008E0A  6E                 	db	110
   845  008E0B  65                 	db	101
   846  008E0C  78                 	db	120
   847  008E0D  74                 	db	116
   848  008E0E  20                 	db	32
   849  008E0F  72                 	db	114
   850  008E10  65                 	db	101
   851  008E11  63                 	db	99
   852  008E12  6F                 	db	111
   853  008E13  72                 	db	114
   854  008E14  64                 	db	100
   855  008E15  00                 	db	0
   856  008E16                     __end_of_failed_line3_noNextRecord:
   857                           	opt stack 0
   858  008E16                     _start_line4:
   859                           	opt stack 0
   860  008E16  73                 	db	115
   861  008E17  6F                 	db	111
   862  008E18  6C                 	db	108
   863  008E19  64                 	db	100
   864  008E1A  65                 	db	101
   865  008E1B  72                 	db	114
   866  008E1C  6E                 	db	110
   867  008E1D  65                 	db	101
   868  008E1E  72                 	db	114
   869  008E1F  64                 	db	100
   870  008E20  2E                 	db	46
   871  008E21  63                 	db	99
   872  008E22  6F                 	db	111
   873  008E23  6D                 	db	109
   874  008E24  00                 	db	0
   875  008E25                     __end_of_start_line4:
   876                           	opt stack 0
   877  008E25                     _failed_line3_dataTooLong:
   878                           	opt stack 0
   879  008E25  44                 	db	68
   880  008E26  61                 	db	97
   881  008E27  74                 	db	116
   882  008E28  61                 	db	97
   883  008E29  20                 	db	32
   884  008E2A  74                 	db	116
   885  008E2B  6F                 	db	111
   886  008E2C  6F                 	db	111
   887  008E2D  20                 	db	32
   888  008E2E  6C                 	db	108
   889  008E2F  6F                 	db	111
   890  008E30  6E                 	db	110
   891  008E31  67                 	db	103
   892  008E32  00                 	db	0
   893  008E33                     __end_of_failed_line3_dataTooLong:
   894                           	opt stack 0
   895  008E33                     _reboot_line1:
   896                           	opt stack 0
   897  008E33  52                 	db	82
   898  008E34  65                 	db	101
   899  008E35  62                 	db	98
   900  008E36  6F                 	db	111
   901  008E37  6F                 	db	111
   902  008E38  74                 	db	116
   903  008E39  69                 	db	105
   904  008E3A  6E                 	db	110
   905  008E3B  67                 	db	103
   906  008E3C  2E                 	db	46
   907  008E3D  2E                 	db	46
   908  008E3E  2E                 	db	46
   909  008E3F  00                 	db	0
   910  008E40                     __end_of_reboot_line1:
   911                           	opt stack 0
   912  008E40                     _verify_line2:
   913                           	opt stack 0
   914  008E40  56                 	db	86
   915  008E41  65                 	db	101
   916  008E42  72                 	db	114
   917  008E43  69                 	db	105
   918  008E44  66                 	db	102
   919  008E45  79                 	db	121
   920  008E46  69                 	db	105
   921  008E47  6E                 	db	110
   922  008E48  67                 	db	103
   923  008E49  2E                 	db	46
   924  008E4A  2E                 	db	46
   925  008E4B  2E                 	db	46
   926  008E4C  00                 	db	0
   927  008E4D                     __end_of_verify_line2:
   928                           	opt stack 0
   929  008E4D                     _suspended_line2:
   930                           	opt stack 0
   931  008E4D  53                 	db	83
   932  008E4E  75                 	db	117
   933  008E4F  73                 	db	115
   934  008E50  70                 	db	112
   935  008E51  65                 	db	101
   936  008E52  6E                 	db	110
   937  008E53  64                 	db	100
   938  008E54  65                 	db	101
   939  008E55  64                 	db	100
   940  008E56  00                 	db	0
   941  008E57                     __end_of_suspended_line2:
   942                           	opt stack 0
   943  008E57                     _search_line4:
   944                           	opt stack 0
   945  008E57  64                 	db	100
   946  008E58  72                 	db	114
   947  008E59  69                 	db	105
   948  008E5A  76                 	db	118
   949  008E5B  65                 	db	101
   950  008E5C  2E                 	db	46
   951  008E5D  2E                 	db	46
   952  008E5E  2E                 	db	46
   953  008E5F  00                 	db	0
   954  008E60                     __end_of_search_line4:
   955                           	opt stack 0
   956  008E60                     _start_line2:
   957                           	opt stack 0
   958  008E60  56                 	db	86
   959  008E61  65                 	db	101
   960  008E62  72                 	db	114
   961  008E63  73                 	db	115
   962  008E64  69                 	db	105
   963  008E65  6F                 	db	111
   964  008E66  6E                 	db	110
   965  008E67  20                 	db	32
   966  008E68  00                 	db	0
   967  008E69                     __end_of_start_line2:
   968                           	opt stack 0
   969  008E69                     _failed_line4:
   970                           	opt stack 0
   971  008E69  52                 	db	82
   972  008E6A  65                 	db	101
   973  008E6B  63                 	db	99
   974  008E6C  6F                 	db	111
   975  008E6D  72                 	db	114
   976  008E6E  64                 	db	100
   977  008E6F  20                 	db	32
   978  008E70  00                 	db	0
   979  008E71                     __end_of_failed_line4:
   980                           	opt stack 0
   981  008E71                     _checked_line3:
   982                           	opt stack 0
   983  008E71  72                 	db	114
   984  008E72  65                 	db	101
   985  008E73  63                 	db	99
   986  008E74  6F                 	db	111
   987  008E75  72                 	db	114
   988  008E76  64                 	db	100
   989  008E77  73                 	db	115
   990  008E78  00                 	db	0
   991  008E79                     __end_of_checked_line3:
   992                           	opt stack 0
   993  008E79                     _USB_SD_Ptr:
   994                           	opt stack 0
   995  008E79  CB                 	db	low _sd000
   996  008E7A  8F                 	db	high _sd000
   997  008E7B  E7                 	db	low _sd001
   998  008E7C  8E                 	db	high _sd001
   999  008E7D  1B                 	db	low _sd002
  1000  008E7E  8F                 	db	high _sd002
  1001  008E7F  8A                 	db	low _sd003
  1002  008E80  8F                 	db	high _sd003
  1003  008E81                     __end_of_USB_SD_Ptr:
  1004                           	opt stack 0
  1005  008E81                     _programming_line3:
  1006                           	opt stack 0
  1007  008E81  45                 	db	69
  1008  008E82  6E                 	db	110
  1009  008E83  74                 	db	116
  1010  008E84  72                 	db	114
  1011  008E85  79                 	db	121
  1012  008E86  20                 	db	32
  1013  008E87  00                 	db	0
  1014  008E88                     __end_of_programming_line3:
  1015                           	opt stack 0
  1016  008E88                     _verify_line3:
  1017                           	opt stack 0
  1018  008E88  52                 	db	82
  1019  008E89  65                 	db	101
  1020  008E8A  63                 	db	99
  1021  008E8B  6F                 	db	111
  1022  008E8C  72                 	db	114
  1023  008E8D  64                 	db	100
  1024  008E8E  00                 	db	0
  1025  008E8F                     __end_of_verify_line3:
  1026                           	opt stack 0
  1027  008E8F                     _found_line3b:
  1028                           	opt stack 0
  1029  008E8F  20                 	db	32
  1030  008E90  62                 	db	98
  1031  008E91  79                 	db	121
  1032  008E92  74                 	db	116
  1033  008E93  65                 	db	101
  1034  008E94  73                 	db	115
  1035  008E95  00                 	db	0
  1036  008E96                     __end_of_found_line3b:
  1037                           	opt stack 0
  1038  008E96                     _found_line3:
  1039                           	opt stack 0
  1040  008E96  53                 	db	83
  1041  008E97  69                 	db	105
  1042  008E98  7A                 	db	122
  1043  008E99  65                 	db	101
  1044  008E9A  3A                 	db	58
  1045  008E9B  20                 	db	32
  1046  008E9C  00                 	db	0
  1047  008E9D                     __end_of_found_line3:
  1048                           	opt stack 0
  1049  008E9D                     _done_line2:
  1050                           	opt stack 0
  1051  008E9D  44                 	db	68
  1052  008E9E  6F                 	db	111
  1053  008E9F  6E                 	db	110
  1054  008EA0  65                 	db	101
  1055  008EA1  21                 	db	33
  1056  008EA2  00                 	db	0
  1057  008EA3                     __end_of_done_line2:
  1058                           	opt stack 0
  1059  008EA3                     _USB_CD_Ptr:
  1060                           	opt stack 0
  1061  008EA3  A7                 	db	low _configDescriptor1
  1062  008EA4  8E                 	db	high _configDescriptor1
  1063  008EA5                     __end_of_USB_CD_Ptr:
  1064                           	opt stack 0
  1065  008EA5                     _suspended_line3:
  1066                           	opt stack 0
  1067  008EA5  00                 	db	0
  1068  008EA6                     __end_of_suspended_line3:
  1069                           	opt stack 0
  1070  008EA6                     _start_line3:
  1071                           	opt stack 0
  1072  008EA6  00                 	db	0
  1073  008EA7                     __end_of_start_line3:
  1074                           	opt stack 0
  1075  008EA7                     _configDescriptor1:
  1076                           	opt stack 0
  1077  008EA7  09                 	db	9
  1078  008EA8  02                 	db	2
  1079  008EA9  40                 	db	64
  1080  008EAA  00                 	db	0
  1081  008EAB  02                 	db	2
  1082  008EAC  01                 	db	1
  1083  008EAD  00                 	db	0
  1084  008EAE  C0                 	db	192
  1085  008EAF  32                 	db	50
  1086  008EB0  09                 	db	9
  1087  008EB1  04                 	db	4
  1088  008EB2  00                 	db	0
  1089  008EB3  00                 	db	0
  1090  008EB4  02                 	db	2
  1091  008EB5  03                 	db	3
  1092  008EB6  00                 	db	0
  1093  008EB7  00                 	db	0
  1094  008EB8  00                 	db	0
  1095  008EB9  09                 	db	9
  1096  008EBA  21                 	db	33
  1097  008EBB  11                 	db	17
  1098  008EBC  01                 	db	1
  1099  008EBD  00                 	db	0
  1100  008EBE  01                 	db	1
  1101  008EBF  22                 	db	34
  1102  008EC0  1D                 	db	29
  1103  008EC1  00                 	db	0
  1104  008EC2  07                 	db	7
  1105  008EC3  05                 	db	5
  1106  008EC4  81                 	db	129
  1107  008EC5  03                 	db	3
  1108  008EC6  40                 	db	64
  1109  008EC7  00                 	db	0
  1110  008EC8  01                 	db	1
  1111  008EC9  07                 	db	7
  1112  008ECA  05                 	db	5
  1113  008ECB  01                 	db	1
  1114  008ECC  03                 	db	3
  1115  008ECD  40                 	db	64
  1116  008ECE  00                 	db	0
  1117  008ECF  01                 	db	1
  1118  008ED0  09                 	db	9
  1119  008ED1  04                 	db	4
  1120  008ED2  01                 	db	1
  1121  008ED3  00                 	db	0
  1122  008ED4  02                 	db	2
  1123  008ED5  08                 	db	8
  1124  008ED6  06                 	db	6
  1125  008ED7  50                 	db	80
  1126  008ED8  00                 	db	0
  1127  008ED9  07                 	db	7
  1128  008EDA  05                 	db	5
  1129  008EDB  82                 	db	130
  1130  008EDC  02                 	db	2
  1131  008EDD  40                 	db	64
  1132  008EDE  00                 	db	0
  1133  008EDF  01                 	db	1
  1134  008EE0  07                 	db	7
  1135  008EE1  05                 	db	5
  1136  008EE2  02                 	db	2
  1137  008EE3  02                 	db	2
  1138  008EE4  40                 	db	64
  1139  008EE5  00                 	db	0
  1140  008EE6  01                 	db	1
  1141  008EE7                     __end_of_configDescriptor1:
  1142                           	opt stack 0
  1143  008EE7                     _sd001:
  1144                           	opt stack 0
  1145  008EE7  34                 	db	52
  1146  008EE8  03                 	db	3
  1147  008EE9  0053               	dw	83
  1148  008EEB  006F               	dw	111
  1149  008EED  006C               	dw	108
  1150  008EEF  0064               	dw	100
  1151  008EF1  0065               	dw	101
  1152  008EF3  0072               	dw	114
  1153  008EF5  006E               	dw	110
  1154  008EF7  0065               	dw	101
  1155  008EF9  0072               	dw	114
  1156  008EFB  0064               	dw	100
  1157  008EFD  002E               	dw	46
  1158  008EFF  0063               	dw	99
  1159  008F01  006F               	dw	111
  1160  008F03  006D               	dw	109
  1161  008F05  0020               	dw	32
  1162  008F07  0020               	dw	32
  1163  008F09  0020               	dw	32
  1164  008F0B  0020               	dw	32
  1165  008F0D  0020               	dw	32
  1166  008F0F  0020               	dw	32
  1167  008F11  0020               	dw	32
  1168  008F13  0020               	dw	32
  1169  008F15  0020               	dw	32
  1170  008F17  0020               	dw	32
  1171  008F19  0020               	dw	32
  1172  008F1B                     __end_of_sd001:
  1173                           	opt stack 0
  1174  008F1B                     _sd002:
  1175                           	opt stack 0
  1176  008F1B  2E                 	db	46
  1177  008F1C  03                 	db	3
  1178  008F1D  0053               	dw	83
  1179  008F1F  0074               	dw	116
  1180  008F21  0065               	dw	101
  1181  008F23  0070               	dw	112
  1182  008F25  0070               	dw	112
  1183  008F27  0065               	dw	101
  1184  008F29  0072               	dw	114
  1185  008F2B  004D               	dw	77
  1186  008F2D  006F               	dw	111
  1187  008F2F  0074               	dw	116
  1188  008F31  006F               	dw	111
  1189  008F33  0072               	dw	114
  1190  008F35  0043               	dw	67
  1191  008F37  006F               	dw	111
  1192  008F39  006E               	dw	110
  1193  008F3B  0074               	dw	116
  1194  008F3D  0072               	dw	114
  1195  008F3F  006F               	dw	111
  1196  008F41  006C               	dw	108
  1197  008F43  006C               	dw	108
  1198  008F45  0065               	dw	101
  1199  008F47  0072               	dw	114
  1200  008F49                     __end_of_sd002:
  1201                           	opt stack 0
  1202  008F49                     _inq_resp:
  1203                           	opt stack 0
  1204  008F49  00                 	db	0
  1205  008F4A  80                 	db	128
  1206  008F4B  04                 	db	4
  1207  008F4C  02                 	db	2
  1208  008F4D  20                 	db	32
  1209  008F4E  00                 	db	0
  1210  008F4F  00                 	db	0
  1211  008F50  00                 	db	0
  1212  008F51  4D                 	db	77
  1213  008F52  69                 	db	105
  1214  008F53  63                 	db	99
  1215  008F54  72                 	db	114
  1216  008F55  6F                 	db	111
  1217  008F56  63                 	db	99
  1218  008F57  68                 	db	104
  1219  008F58  70                 	db	112
  1220  008F59  4D                 	db	77
  1221  008F5A  61                 	db	97
  1222  008F5B  73                 	db	115
  1223  008F5C  73                 	db	115
  1224  008F5D  20                 	db	32
  1225  008F5E  53                 	db	83
  1226  008F5F  74                 	db	116
  1227  008F60  6F                 	db	111
  1228  008F61  72                 	db	114
  1229  008F62  61                 	db	97
  1230  008F63  67                 	db	103
  1231  008F64  65                 	db	101
  1232  008F65  20                 	db	32
  1233  008F66  20                 	db	32
  1234  008F67  20                 	db	32
  1235  008F68  20                 	db	32
  1236  008F69  30                 	db	48
  1237  008F6A  30                 	db	48
  1238  008F6B  30                 	db	48
  1239  008F6C  31                 	db	49
  1240  008F6D                     __end_of_inq_resp:
  1241                           	opt stack 0
  1242  008F6D                     _hid_rpt01:
  1243                           	opt stack 0
  1244  008F6D  06                 	db	6
  1245  008F6E  00                 	db	0
  1246  008F6F  FF                 	db	255
  1247  008F70  09                 	db	9
  1248  008F71  01                 	db	1
  1249  008F72  A1                 	db	161
  1250  008F73  01                 	db	1
  1251  008F74  19                 	db	25
  1252  008F75  01                 	db	1
  1253  008F76  29                 	db	41
  1254  008F77  40                 	db	64
  1255  008F78  15                 	db	21
  1256  008F79  00                 	db	0
  1257  008F7A  26                 	db	38
  1258  008F7B  FF                 	db	255
  1259  008F7C  00                 	db	0
  1260  008F7D  75                 	db	117
  1261  008F7E  08                 	db	8
  1262  008F7F  95                 	db	149
  1263  008F80  40                 	db	64
  1264  008F81  81                 	db	129
  1265  008F82  00                 	db	0
  1266  008F83  19                 	db	25
  1267  008F84  01                 	db	1
  1268  008F85  29                 	db	41
  1269  008F86  40                 	db	64
  1270  008F87  91                 	db	145
  1271  008F88  00                 	db	0
  1272  008F89  C0                 	db	192
  1273  008F8A                     __end_of_hid_rpt01:
  1274                           	opt stack 0
  1275  008F8A                     _sd003:
  1276                           	opt stack 0
  1277  008F8A  1A                 	db	26
  1278  008F8B  03                 	db	3
  1279  008F8C  0031               	dw	49
  1280  008F8E  0032               	dw	50
  1281  008F90  0033               	dw	51
  1282  008F92  0034               	dw	52
  1283  008F94  0035               	dw	53
  1284  008F96  0036               	dw	54
  1285  008F98  0037               	dw	55
  1286  008F9A  0038               	dw	56
  1287  008F9C  0039               	dw	57
  1288  008F9E  0030               	dw	48
  1289  008FA0  0039               	dw	57
  1290  008FA2  0039               	dw	57
  1291  008FA4                     __end_of_sd003:
  1292                           	opt stack 0
  1293  008FA4                     _device_dsc:
  1294                           	opt stack 0
  1295  008FA4  12                 	db	18
  1296  008FA5  01                 	db	1
  1297  008FA6  0200               	dw	512
  1298  008FA8  00                 	db	0
  1299  008FA9  00                 	db	0
  1300  008FAA  00                 	db	0
  1301  008FAB  08                 	db	8
  1302  008FAC  04D8               	dw	1240
  1303  008FAE  EDCF               	dw	60879
  1304  008FB0  0100               	dw	256
  1305  008FB2  01                 	db	1
  1306  008FB3  02                 	db	2
  1307  008FB4  00                 	db	0
  1308  008FB5  01                 	db	1
  1309  008FB6                     __end_of_device_dsc:
  1310                           	opt stack 0
  1311  008FB6                     _bootloader_filename:
  1312                           	opt stack 0
  1313  008FB6  46                 	db	70
  1314  008FB7  49                 	db	73
  1315  008FB8  52                 	db	82
  1316  008FB9  4D                 	db	77
  1317  008FBA  57                 	db	87
  1318  008FBB  41                 	db	65
  1319  008FBC  52                 	db	82
  1320  008FBD  45                 	db	69
  1321  008FBE  00                 	db	0
  1322  008FBF                     __end_of_bootloader_filename:
  1323                           	opt stack 0
  1324  008FBF                     _flash_command_pagesize_528:
  1325                           	opt stack 0
  1326  008FBF  3D                 	db	61
  1327  008FC0  2A                 	db	42
  1328  008FC1  80                 	db	128
  1329  008FC2  A7                 	db	167
  1330  008FC3                     __end_of_flash_command_pagesize_528:
  1331                           	opt stack 0
  1332  008FC3                     _flash_command_pagesize_512:
  1333                           	opt stack 0
  1334  008FC3  3D                 	db	61
  1335  008FC4  2A                 	db	42
  1336  008FC5  80                 	db	128
  1337  008FC6  A6                 	db	166
  1338  008FC7                     __end_of_flash_command_pagesize_512:
  1339                           	opt stack 0
  1340  008FC7                     _bootloader_extension:
  1341                           	opt stack 0
  1342  008FC7  48                 	db	72
  1343  008FC8  45                 	db	69
  1344  008FC9  58                 	db	88
  1345  008FCA  00                 	db	0
  1346  008FCB                     __end_of_bootloader_extension:
  1347                           	opt stack 0
  1348  008FCB                     _sd000:
  1349                           	opt stack 0
  1350  008FCB  04                 	db	4
  1351  008FCC  03                 	db	3
  1352  008FCD  0409               	dw	1033
  1353  008FCF                     __end_of_sd000:
  1354                           	opt stack 0
  1355  0000                     _RPINR22	set	3837
  1356  0000                     _RPOR23	set	3799
  1357  0000                     _RPOR21	set	3797
  1358  0000                     _RPINR21	set	3836
  1359  0000                     _RPINR2	set	3810
  1360  0000                     _RPINR3	set	3811
  1361  0000                     _RPINR1	set	3809
  1362  0000                     _PPSCONbits	set	3775
  1363  0000                     _ANCON0bits	set	3912
  1364  0000                     _UEP0bits	set	3878
  1365  0000                     _UIEbits	set	3894
  1366  0000                     _UADDR	set	3896
  1367  0000                     _UIE	set	3894
  1368  0000                     _UEIE	set	3895
  1369  0000                     _UCFG	set	3897
  1370  0000                     _UEP1	set	3879
  1371  0000                     _UEP0	set	3878
  1372  0000                     _TBLPTR	set	4086
  1373  0000                     _RXADDRL	set	3945
  1374  0000                     _RXADDRH	set	3944
  1375  0000                     _DMABCL	set	3943
  1376  0000                     _DMABCH	set	3942
  1377  0000                     _TXADDRL	set	3947
  1378  0000                     _TXADDRH	set	3946
  1379  0000                     _DMACON2bits	set	3974
  1380  0000                     _DMACON1bits	set	3976
  1381  0000                     _SSP2CON1bits	set	3954
  1382  0000                     _SSP2STATbits	set	3955
  1383  0000                     _INTCON	set	4082
  1384  0000                     _EECON1	set	4006
  1385  0000                     _TABLAT	set	4085
  1386  0000                     _EECON1bits	set	4006
  1387  0000                     _SSP1BUF	set	4041
  1388  0000                     _SSP1CON2bits	set	4037
  1389  0000                     _SSP1CON1bits	set	4038
  1390  0000                     _SSP1ADD	set	4040
  1391  0000                     _SSP1STATbits	set	4039
  1392  0000                     _TRISBbits	set	3987
  1393  0000                     _TRISEbits	set	3990
  1394  0000                     _LATDbits	set	3980
  1395  0000                     _TRISDbits	set	3989
  1396  0000                     _LATCbits	set	3979
  1397  0000                     _TRISCbits	set	3988
  1398  0000                     _LATAbits	set	3977
  1399  0000                     _TRISAbits	set	3986
  1400  0000                     _T0CONbits	set	4053
  1401  0000                     _INTCON2bits	set	4081
  1402  0000                     _EECON2	set	4007
  1403  0000                     _PORTEbits	set	3972
  1404  0000                     _INTCON3bits	set	4080
  1405  0000                     _TMR0L	set	4054
  1406  0000                     _TMR0H	set	4055
  1407  0000                     _INTCONbits	set	4082
  1408  0000                     _OSCCON	set	4051
  1409  0000                     _OSCTUNEbits	set	3995
  1410  0000                     _PORTAbits	set	3968
  1411  0000                     _USTAT	set	3940
  1412  0000                     _PIR2bits	set	4001
  1413  0000                     _UCON	set	3941
  1414  0000                     _UIRbits	set	3938
  1415  0000                     _UCONbits	set	3941
  1416  0000                     _UIR	set	3938
  1417  0000                     _UEIR	set	3939
  1418  0000                     _PIE2bits	set	4000
  1419  008FCF                     STR_12:
  1420  008FCF  68                 	db	104	;'h'
  1421  008FD0  65                 	db	101	;'e'
  1422  008FD1  6C                 	db	108	;'l'
  1423  008FD2  6C                 	db	108	;'l'
  1424  008FD3  6F                 	db	111	;'o'
  1425  008FD4  20                 	db	32
  1426  008FD5  77                 	db	119	;'w'
  1427  008FD6  6F                 	db	111	;'o'
  1428  008FD7  72                 	db	114	;'r'
  1429  008FD8  6C                 	db	108	;'l'
  1430  008FD9  64                 	db	100	;'d'
  1431  008FDA  21                 	db	33
  1432  008FDB  00                 	db	0
  1433  008FDC                     STR_9:
  1434  008FDC  53                 	db	83	;'S'
  1435  008FDD  74                 	db	116	;'t'
  1436  008FDE  65                 	db	101	;'e'
  1437  008FDF  70                 	db	112	;'p'
  1438  008FE0  70                 	db	112	;'p'
  1439  008FE1  65                 	db	101	;'e'
  1440  008FE2  72                 	db	114	;'r'
  1441  008FE3  43                 	db	67	;'C'
  1442  008FE4  74                 	db	116	;'t'
  1443  008FE5  72                 	db	114	;'r'
  1444  008FE6  6C                 	db	108	;'l'
  1445  008FE7  00                 	db	0
  1446  008FE8                     STR_10:
  1447  008FE8  46                 	db	70	;'F'
  1448  008FE9  49                 	db	73	;'I'
  1449  008FEA  4C                 	db	76	;'L'
  1450  008FEB  45                 	db	69	;'E'
  1451  008FEC  20                 	db	32
  1452  008FED  20                 	db	32
  1453  008FEE  20                 	db	32
  1454  008FEF  20                 	db	32
  1455  008FF0  00                 	db	0
  1456  008FF1                     STR_1:
  1457  008FF1  4D                 	db	77	;'M'
  1458  008FF2  53                 	db	83	;'S'
  1459  008FF3  44                 	db	68	;'D'
  1460  008FF4  4F                 	db	79	;'O'
  1461  008FF5  53                 	db	83	;'S'
  1462  008FF6  35                 	db	53	;'5'
  1463  008FF7  2E                 	db	46
  1464  008FF8  30                 	db	48	;'0'
  1465  008FF9  00                 	db	0
  1466  008FFA                     STR_11:
  1467  008FFA  54                 	db	84	;'T'
  1468  008FFB  58                 	db	88	;'X'
  1469  008FFC  54                 	db	84	;'T'
  1470  008FFD  00                 	db	0
  1471  0000                     
  1472                           ; #config settings
  1473  008FFE  00                 	db	0	; dummy byte at the end
  1474  0000                     
  1475                           	psect	cinit
  1476  00524A                     __pcinit:
  1477                           	opt stack 0
  1478  00524A                     start_initialization:
  1479                           	opt stack 0
  1480  00524A                     __initialization:
  1481                           	opt stack 0
  1482                           
  1483                           ; Initialize objects allocated to BANK2 (18 bytes)
  1484                           ; load TBLPTR registers with __pidataBANK2
  1485  00524A  0EE6               	movlw	low __pidataBANK2
  1486  00524C  6EF6               	movwf	tblptrl,c
  1487  00524E  0E70               	movlw	high __pidataBANK2
  1488  005250  6EF7               	movwf	tblptrh,c
  1489  005252  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1490  005254  6EF8               	movwf	tblptru,c
  1491  005256  EE02  F0B2         	lfsr	0,__pdataBANK2
  1492  00525A  EE10 F012          	lfsr	1,18
  1493  00525E                     copy_data0:
  1494  00525E  0009               	tblrd		*+
  1495  005260  CFF5 FFEE          	movff	tablat,postinc0
  1496  005264  50E5               	movf	postdec1,w,c
  1497  005266  50E1               	movf	fsr1l,w,c
  1498  005268  E1FA               	bnz	copy_data0
  1499                           
  1500                           ; Initialize objects allocated to BANK1 (28 bytes)
  1501                           ; load TBLPTR registers with __pidataBANK1
  1502  00526A  0EFC               	movlw	low __pidataBANK1
  1503  00526C  6EF6               	movwf	tblptrl,c
  1504  00526E  0E6F               	movlw	high __pidataBANK1
  1505  005270  6EF7               	movwf	tblptrh,c
  1506  005272  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1507  005274  6EF8               	movwf	tblptru,c
  1508  005276  EE01  F0E4         	lfsr	0,__pdataBANK1
  1509  00527A  EE10 F01C          	lfsr	1,28
  1510  00527E                     copy_data1:
  1511  00527E  0009               	tblrd		*+
  1512  005280  CFF5 FFEE          	movff	tablat,postinc0
  1513  005284  50E5               	movf	postdec1,w,c
  1514  005286  50E1               	movf	fsr1l,w,c
  1515  005288  E1FA               	bnz	copy_data1
  1516                           
  1517                           ; Initialize objects allocated to BANK0 (1 bytes)
  1518                           ; load TBLPTR registers with __pidataBANK0
  1519  00528A  0E58               	movlw	low __pidataBANK0
  1520  00528C  6EF6               	movwf	tblptrl,c
  1521  00528E  0E72               	movlw	high __pidataBANK0
  1522  005290  6EF7               	movwf	tblptrh,c
  1523  005292  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1524  005294  6EF8               	movwf	tblptru,c
  1525  005296  0009               	tblrd		*+	;fetch initializer
  1526  005298  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1527                           
  1528                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1529  00529C  EE02  F0C4         	lfsr	0,__pbssBIGRAMll
  1530  0052A0  EE12 F000          	lfsr	1,512
  1531  0052A4                     clear_0:
  1532  0052A4  6AEE               	clrf	postinc0,c
  1533  0052A6  50E5               	movf	postdec1,w,c
  1534  0052A8  50E1               	movf	fsr1l,w,c
  1535  0052AA  E1FC               	bnz	clear_0
  1536  0052AC  50E2               	movf	fsr1h,w,c
  1537  0052AE  E1FA               	bnz	clear_0
  1538                           
  1539                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1540  0052B0  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1541  0052B4  EE14 F000          	lfsr	1,1024
  1542  0052B8                     clear_1:
  1543  0052B8  6AEE               	clrf	postinc0,c
  1544  0052BA  50E5               	movf	postdec1,w,c
  1545  0052BC  50E1               	movf	fsr1l,w,c
  1546  0052BE  E1FC               	bnz	clear_1
  1547  0052C0  50E2               	movf	fsr1h,w,c
  1548  0052C2  E1FA               	bnz	clear_1
  1549                           
  1550                           ; Clear objects allocated to BANK2 (178 bytes)
  1551  0052C4  EE02  F000         	lfsr	0,__pbssBANK2
  1552  0052C8  0EB2               	movlw	178
  1553  0052CA                     clear_2:
  1554  0052CA  6AEE               	clrf	postinc0,c
  1555  0052CC  06E8               	decf	wreg,f,c
  1556  0052CE  E1FD               	bnz	clear_2
  1557                           
  1558                           ; Clear objects allocated to BANK1 (228 bytes)
  1559  0052D0  EE01  F000         	lfsr	0,__pbssBANK1
  1560  0052D4  0EE4               	movlw	228
  1561  0052D6                     clear_3:
  1562  0052D6  6AEE               	clrf	postinc0,c
  1563  0052D8  06E8               	decf	wreg,f,c
  1564  0052DA  E1FD               	bnz	clear_3
  1565                           
  1566                           ; Clear objects allocated to BANK0 (86 bytes)
  1567  0052DC  EE00  F060         	lfsr	0,__pbssBANK0
  1568  0052E0  0E56               	movlw	86
  1569  0052E2                     clear_4:
  1570  0052E2  6AEE               	clrf	postinc0,c
  1571  0052E4  06E8               	decf	wreg,f,c
  1572  0052E6  E1FD               	bnz	clear_4
  1573                           
  1574                           ; Clear objects allocated to COMRAM (1 bytes)
  1575  0052E8  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1576  0052EA                     end_of_initialization:
  1577                           	opt stack 0
  1578  0052EA                     __end_of__initialization:
  1579                           	opt stack 0
  1580  0052EA  0100               	movlb	0
  1581  0052EC  EF44  F024         	goto	_main	;jump to C main() function
  1582                           tblptru	equ	0xFF8
  1583                           tblptrh	equ	0xFF7
  1584                           tblptrl	equ	0xFF6
  1585                           tablat	equ	0xFF5
  1586                           postinc0	equ	0xFEE
  1587                           wreg	equ	0xFE8
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           
  1592                           	psect	bssCOMRAM
  1593  00005F                     __pbssCOMRAM:
  1594                           	opt stack 0
  1595  00005F                     _USBDeviceState:
  1596                           	opt stack 0
  1597  00005F                     	ds	1
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           postinc0	equ	0xFEE
  1603                           wreg	equ	0xFE8
  1604                           postdec1	equ	0xFE5
  1605                           fsr1h	equ	0xFE2
  1606                           fsr1l	equ	0xFE1
  1607                           
  1608                           	psect	bssBANK0
  1609  000060                     __pbssBANK0:
  1610                           	opt stack 0
  1611  000060                     _os:
  1612                           	opt stack 0
  1613  000060                     	ds	12
  1614  00006C                     _inPipes:
  1615                           	opt stack 0
  1616  00006C                     	ds	6
  1617  000072                     _pBDTEntryIn:
  1618                           	opt stack 0
  1619  000072                     	ds	6
  1620  000078                     _pBDTEntryOut:
  1621                           	opt stack 0
  1622  000078                     	ds	6
  1623  00007E                     _hex_file_size:
  1624                           	opt stack 0
  1625  00007E                     	ds	4
  1626  000082                     _hex_file_offset:
  1627                           	opt stack 0
  1628  000082                     	ds	4
  1629  000086                     _LBA:
  1630                           	opt stack 0
  1631  000086                     	ds	4
  1632  00008A                     _TransferLength:
  1633                           	opt stack 0
  1634  00008A                     	ds	2
  1635  00008C                     _USBMSDInHandle:
  1636                           	opt stack 0
  1637  00008C                     	ds	2
  1638  00008E                     _USBMSDOutHandle:
  1639                           	opt stack 0
  1640  00008E                     	ds	2
  1641  000090                     _pBDTEntryEP0OutNext:
  1642                           	opt stack 0
  1643  000090                     	ds	2
  1644  000092                     _pBDTEntryEP0OutCurrent:
  1645                           	opt stack 0
  1646  000092                     	ds	2
  1647  000094                     _start_from_byte_next:
  1648                           	opt stack 0
  1649  000094                     	ds	1
  1650  000095                     _last_error:
  1651                           	opt stack 0
  1652  000095                     	ds	1
  1653  000096                     _power_state:
  1654                           	opt stack 0
  1655  000096                     	ds	1
  1656  000097                     _userInterfaceStatus:
  1657                           	opt stack 0
  1658  000097                     	ds	1
  1659  000098                     _MSDCBWValid:
  1660                           	opt stack 0
  1661  000098                     	ds	1
  1662  000099                     _MSDHostNoData:
  1663                           	opt stack 0
  1664  000099                     	ds	1
  1665  00009A                     _SoftDetach:
  1666                           	opt stack 0
  1667  00009A                     	ds	1
  1668  00009B                     _gblCBWLength:
  1669                           	opt stack 0
  1670  00009B                     	ds	1
  1671  00009C                     _MSDRetryAttempt:
  1672                           	opt stack 0
  1673  00009C                     	ds	1
  1674  00009D                     _MSDWriteState:
  1675                           	opt stack 0
  1676  00009D                     	ds	1
  1677  00009E                     _MSDReadState:
  1678                           	opt stack 0
  1679  00009E                     	ds	1
  1680  00009F                     _MSDCommandState:
  1681                           	opt stack 0
  1682  00009F                     	ds	1
  1683  0000A0                     _MSD_State:
  1684                           	opt stack 0
  1685  0000A0                     	ds	1
  1686  0000A1                     _USBTicksSinceSuspendEnd:
  1687                           	opt stack 0
  1688  0000A1                     	ds	1
  1689  0000A2                     _USBDeferOUTDataStagePackets:
  1690                           	opt stack 0
  1691  0000A2                     	ds	1
  1692  0000A3                     _USBDeferINDataStagePackets:
  1693                           	opt stack 0
  1694  0000A3                     	ds	1
  1695  0000A4                     _USBStatusStageEnabledFlag2:
  1696                           	opt stack 0
  1697  0000A4                     	ds	1
  1698  0000A5                     _USBStatusStageEnabledFlag1:
  1699                           	opt stack 0
  1700  0000A5                     	ds	1
  1701  0000A6                     _USBDeferStatusStagePacket:
  1702                           	opt stack 0
  1703  0000A6                     	ds	1
  1704  0000A7                     _USBStatusStageTimeoutCounter:
  1705                           	opt stack 0
  1706  0000A7                     	ds	1
  1707  0000A8                     _BothEP0OutUOWNsSet:
  1708                           	opt stack 0
  1709  0000A8                     	ds	1
  1710  0000A9                     _endpoint_number:
  1711                           	opt stack 0
  1712  0000A9                     	ds	1
  1713  0000AA                     _USBBusIsSuspended:
  1714                           	opt stack 0
  1715  0000AA                     	ds	1
  1716  0000AB                     _RemoteWakeup:
  1717                           	opt stack 0
  1718  0000AB                     	ds	1
  1719  0000AC                     _controlTransferState:
  1720                           	opt stack 0
  1721  0000AC                     	ds	1
  1722  0000AD                     _shortPacketStatus:
  1723                           	opt stack 0
  1724  0000AD                     	ds	1
  1725  0000AE                     _fast_read_cluster_number:
  1726                           	opt stack 0
  1727  0000AE                     	ds	2
  1728  0000B0                     _fast_read_cluster:
  1729                           	opt stack 0
  1730  0000B0                     	ds	2
  1731  0000B2                     _active_protocol:
  1732                           	opt stack 0
  1733  0000B2                     	ds	1
  1734  0000B3                     _idle_rate:
  1735                           	opt stack 0
  1736  0000B3                     	ds	1
  1737  0000B4                     _USTATcopy:
  1738                           	opt stack 0
  1739  0000B4                     	ds	1
  1740  0000B5                     _USBActiveConfiguration:
  1741                           	opt stack 0
  1742  0000B5                     	ds	1
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	dataBANK0
  1754  0000FF                     __pdataBANK0:
  1755                           	opt stack 0
  1756  0000FF                     _file_number:
  1757                           	opt stack 0
  1758  0000FF                     	ds	1
  1759                           tblptru	equ	0xFF8
  1760                           tblptrh	equ	0xFF7
  1761                           tblptrl	equ	0xFF6
  1762                           tablat	equ	0xFF5
  1763                           postinc0	equ	0xFEE
  1764                           wreg	equ	0xFE8
  1765                           postdec1	equ	0xFE5
  1766                           fsr1h	equ	0xFE2
  1767                           fsr1l	equ	0xFE1
  1768                           
  1769                           	psect	bssBANK1
  1770  000100                     __pbssBANK1:
  1771                           	opt stack 0
  1772  000100                     _gblCBW:
  1773                           	opt stack 0
  1774  000100                     	ds	31
  1775  00011F                     _gblSenseData:
  1776                           	opt stack 0
  1777  00011F                     	ds	18
  1778  000131                     _outPipes:
  1779                           	opt stack 0
  1780  000131                     	ds	8
  1781  000139                     _extended_linear_address:
  1782                           	opt stack 0
  1783  000139                     	ds	4
  1784  00013D                     _file_maximum_address:
  1785                           	opt stack 0
  1786  00013D                     	ds	4
  1787  000141                     _file_minimum_address:
  1788                           	opt stack 0
  1789  000141                     	ds	4
  1790  000145                     _gblBLKLen:
  1791                           	opt stack 0
  1792  000145                     	ds	4
  1793  000149                     _gblNumBLKS:
  1794                           	opt stack 0
  1795  000149                     	ds	4
  1796  00014D                     _USB1msTickCount:
  1797                           	opt stack 0
  1798  00014D                     	ds	4
  1799  000151                     _config_external:
  1800                           	opt stack 0
  1801  000151                     	ds	3
  1802  000154                     _config_internal:
  1803                           	opt stack 0
  1804  000154                     	ds	3
  1805  000157                     _ep_data_out:
  1806                           	opt stack 0
  1807  000157                     	ds	3
  1808  00015A                     _ep_data_in:
  1809                           	opt stack 0
  1810  00015A                     	ds	3
  1811  00015D                     _FileAddress:
  1812                           	opt stack 0
  1813  00015D                     	ds	2
  1814  00015F                     _flash_pages_written:
  1815                           	opt stack 0
  1816  00015F                     	ds	2
  1817  000161                     _total_hex_file_entries:
  1818                           	opt stack 0
  1819  000161                     	ds	2
  1820  000163                     _hex_file_entries:
  1821                           	opt stack 0
  1822  000163                     	ds	2
  1823  000165                     _startup_timer:
  1824                           	opt stack 0
  1825  000165                     	ds	2
  1826  000167                     _system_ui_inactive_count:
  1827                           	opt stack 0
  1828  000167                     	ds	2
  1829  000169                     _USBInHandle:
  1830                           	opt stack 0
  1831  000169                     	ds	2
  1832  00016B                     _USBOutHandle:
  1833                           	opt stack 0
  1834  00016B                     	ds	2
  1835  00016D                     _gblMediaPresent:
  1836                           	opt stack 0
  1837  00016D                     	ds	2
  1838  00016F                     _MSBBufferIndex:
  1839                           	opt stack 0
  1840  00016F                     	ds	2
  1841  000171                     _ptrNextData:
  1842                           	opt stack 0
  1843  000171                     	ds	2
  1844  000173                     _pDst:
  1845                           	opt stack 0
  1846  000173                     	ds	2
  1847  000175                     _active_configuration:
  1848                           	opt stack 0
  1849  000175                     	ds	1
  1850  000176                     _display_content:
  1851                           	opt stack 0
  1852  000176                     	ds	80
  1853  0001C6                     _hex_file_entry:
  1854                           	opt stack 0
  1855  0001C6                     	ds	23
  1856  0001DD                     _mediaInformation:
  1857                           	opt stack 0
  1858  0001DD                     	ds	5
  1859  0001E2                     _USBAlternateInterface:
  1860                           	opt stack 0
  1861  0001E2                     	ds	2
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           
  1872                           	psect	dataBANK1
  1873  0001E4                     __pdataBANK1:
  1874                           	opt stack 0
  1875  0001E4                     _LUN:
  1876                           	opt stack 0
  1877  0001E4                     	ds	20
  1878  0001F8                     	ds	8
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1h	equ	0xFE2
  1887                           fsr1l	equ	0xFE1
  1888                           
  1889                           	psect	bssBANK2
  1890  000200                     __pbssBANK2:
  1891                           	opt stack 0
  1892  000200                     _ToSendDataBuffer:
  1893                           	opt stack 0
  1894  000200                     	ds	64
  1895  000240                     _ReceivedDataBuffer:
  1896                           	opt stack 0
  1897  000240                     	ds	64
  1898  000280                     _file_buffer:
  1899                           	opt stack 0
  1900  000280                     	ds	50
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           	psect	dataBANK2
  1912  0002B2                     __pdataBANK2:
  1913                           	opt stack 0
  1914  0002B2                     i2c_display_init@F6826:
  1915                           	opt stack 0
  1916  0002B2                     	ds	9
  1917  0002BB                     __i2c_display_send_init_sequence@F6823:
  1918                           	opt stack 0
  1919  0002BB                     	ds	9
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           postdec1	equ	0xFE5
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           
  1930                           	psect	bssBIGRAMlh
  1931  000800                     __pbssBIGRAMlh:
  1932                           	opt stack 0
  1933  000800                     _pageBuffer:
  1934                           	opt stack 0
  1935  000800                     	ds	1024
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           postinc0	equ	0xFEE
  1941                           wreg	equ	0xFE8
  1942                           postdec1	equ	0xFE5
  1943                           fsr1h	equ	0xFE2
  1944                           fsr1l	equ	0xFE1
  1945                           
  1946                           	psect	bssBIGRAMll
  1947  0002C4                     __pbssBIGRAMll:
  1948                           	opt stack 0
  1949  0002C4                     _buffer:
  1950                           	opt stack 0
  1951  0002C4                     	ds	512
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           postdec1	equ	0xFE5
  1959                           fsr1h	equ	0xFE2
  1960                           fsr1l	equ	0xFE1
  1961                           
  1962                           	psect	cstackBANK0
  1963  0000B6                     __pcstackBANK0:
  1964                           	opt stack 0
  1965  0000B6                     fat_read_from_file_fast@sector:
  1966                           	opt stack 0
  1967                           
  1968                           ; 2 bytes @ 0x0
  1969  0000B6                     	ds	2
  1970  0000B8                     fat_read_from_file_fast@working_cluster:
  1971                           	opt stack 0
  1972                           
  1973                           ; 2 bytes @ 0x2
  1974  0000B8                     	ds	2
  1975  0000BA                     fat_read_from_file_fast@offset:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0x4
  1979  0000BA                     	ds	2
  1980  0000BC                     fat_read_from_file_fast@needed_cluster:
  1981                           	opt stack 0
  1982                           
  1983                           ; 2 bytes @ 0x6
  1984  0000BC                     	ds	2
  1985  0000BE                     fat_read_from_file_fast@read_length:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x8
  1989  0000BE                     	ds	2
  1990  0000C0                     fat_read_from_file_fast@position:
  1991                           	opt stack 0
  1992                           
  1993                           ; 4 bytes @ 0xA
  1994  0000C0                     	ds	4
  1995  0000C4                     ??__bootloader_verify_file:
  1996  0000C4                     ??__bootloader_program:
  1997                           
  1998                           ; 1 bytes @ 0xE
  1999  0000C4                     	ds	8
  2000  0000CC                     __bootloader_program@buffer:
  2001                           	opt stack 0
  2002  0000CC                     __bootloader_verify_file@root:
  2003                           	opt stack 0
  2004                           
  2005                           ; 32 bytes @ 0x16
  2006  0000CC                     	ds	2
  2007  0000CE                     __bootloader_program@entry_page:
  2008                           	opt stack 0
  2009                           
  2010                           ; 2 bytes @ 0x18
  2011  0000CE                     	ds	2
  2012  0000D0                     __bootloader_program@address_within_page:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x1A
  2016  0000D0                     	ds	2
  2017  0000D2                     __bootloader_program@root:
  2018                           	opt stack 0
  2019                           
  2020                           ; 32 bytes @ 0x1C
  2021  0000D2                     	ds	26
  2022  0000EC                     __bootloader_verify_file@rec_counter:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x36
  2026  0000EC                     	ds	1
  2027  0000ED                     __bootloader_verify_file@return_value:
  2028                           	opt stack 0
  2029                           
  2030                           ; 4 bytes @ 0x37
  2031  0000ED                     	ds	4
  2032  0000F1                     __bootloader_verify_file@address32:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0x3B
  2036  0000F1                     	ds	1
  2037  0000F2                     __bootloader_program@return_value:
  2038                           	opt stack 0
  2039                           
  2040                           ; 4 bytes @ 0x3C
  2041  0000F2                     	ds	4
  2042  0000F6                     __bootloader_program@address32:
  2043                           	opt stack 0
  2044                           
  2045                           ; 4 bytes @ 0x40
  2046  0000F6                     	ds	4
  2047  0000FA                     __bootloader_program@start_from_byte:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x44
  2051  0000FA                     	ds	1
  2052  0000FB                     __bootloader_program@cntr:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x45
  2056  0000FB                     	ds	2
  2057  0000FD                     __bootloader_program@page_to_write:
  2058                           	opt stack 0
  2059                           
  2060                           ; 2 bytes @ 0x47
  2061  0000FD                     	ds	2
  2062                           tblptru	equ	0xFF8
  2063                           tblptrh	equ	0xFF7
  2064                           tblptrl	equ	0xFF6
  2065                           tablat	equ	0xFF5
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           postdec1	equ	0xFE5
  2069                           fsr1h	equ	0xFE2
  2070                           fsr1l	equ	0xFE1
  2071                           
  2072                           	psect	cstackCOMRAM
  2073  000001                     __pcstackCOMRAM:
  2074                           	opt stack 0
  2075  000001                     ??_USBStdGetDscHandler:
  2076  000001                     ??_USBStdGetStatusHandler:
  2077  000001                     ??_system_delay_ms:
  2078  000001                     ??__i2c_wait_idle:
  2079  000001                     ??__display_clear:
  2080  000001                     ?_USBTransferOnePacket:
  2081                           	opt stack 0
  2082  000001                     ?_ExternalFlash_MediaInitialize:
  2083                           	opt stack 0
  2084  000001                     ?_ExternalFlash_SectorSizeRead:
  2085                           	opt stack 0
  2086  000001                     ?_bootloader_get_entries:
  2087                           	opt stack 0
  2088  000001                     ?_bootloader_get_total_entries:
  2089                           	opt stack 0
  2090  000001                     ?_bootloader_get_rec_address:
  2091                           	opt stack 0
  2092  000001                     ?_bootloader_get_flashPagesWritten:
  2093                           	opt stack 0
  2094  000001                     ?_strncmp:
  2095                           	opt stack 0
  2096  000001                     ?_internalFlash_pageFromAddress:
  2097                           	opt stack 0
  2098  000001                     ?_internalFlash_getBuffer:
  2099                           	opt stack 0
  2100  000001                     ?__sector_from_file_number:
  2101                           	opt stack 0
  2102  000001                     ?__offset_from_file_number:
  2103                           	opt stack 0
  2104  000001                     ?__data_sector_from_cluster:
  2105                           	opt stack 0
  2106  000001                     ?__fat_sector_from_cluster:
  2107                           	opt stack 0
  2108  000001                     ?__fat_offset_from_cluster:
  2109                           	opt stack 0
  2110  000001                     ?__read_value_from_offset:
  2111                           	opt stack 0
  2112  000001                     ?_bootloader_get_rec_dataLength:
  2113                           	opt stack 0
  2114  000001                     ?___wmul:
  2115                           	opt stack 0
  2116  000001                     ?___lwdiv:
  2117                           	opt stack 0
  2118  000001                     ?___lwmod:
  2119                           	opt stack 0
  2120  000001                     ?_ExternalFlash_CapacityRead:
  2121                           	opt stack 0
  2122  000001                     ?_bootloader_get_file_size:
  2123                           	opt stack 0
  2124  000001                     ?_internalFlash_addressFromPage:
  2125                           	opt stack 0
  2126  000001                     ?___lldiv:
  2127                           	opt stack 0
  2128  000001                     ?___llmod:
  2129                           	opt stack 0
  2130  000001                     USBTransferOnePacket@dir:
  2131                           	opt stack 0
  2132  000001                     USBStallEndpoint@dir:
  2133                           	opt stack 0
  2134  000001                     USBConfigureEndpoint@direction:
  2135                           	opt stack 0
  2136  000001                     USBCtrlTrfTxService@byteToSend:
  2137                           	opt stack 0
  2138  000001                     USBCtrlTrfRxService@i:
  2139                           	opt stack 0
  2140  000001                     __i2c_send@dat:
  2141                           	opt stack 0
  2142  000001                     display_get_character@position:
  2143                           	opt stack 0
  2144  000001                     __display_search@cntr:
  2145                           	opt stack 0
  2146  000001                     __display_rebooting@cntr:
  2147                           	opt stack 0
  2148  000001                     __display_suspended@cntr:
  2149                           	opt stack 0
  2150  000001                     hexCharToUint8@c:
  2151                           	opt stack 0
  2152  000001                     bootloader_get_rec_data@index:
  2153                           	opt stack 0
  2154  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2155                           	opt stack 0
  2156  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2157                           	opt stack 0
  2158  000001                     SYSTEM_Initialize@pll_startup_counter:
  2159                           	opt stack 0
  2160  000001                     ExternalFlash_MediaInitialize@config:
  2161                           	opt stack 0
  2162  000001                     ExternalFlash_SectorSizeRead@config:
  2163                           	opt stack 0
  2164  000001                     ExternalFlash_CapacityRead@config:
  2165                           	opt stack 0
  2166  000001                     ExternalFlash_MediaDetect@config:
  2167                           	opt stack 0
  2168  000001                     ExternalFlash_WriteProtectStateGet@config:
  2169                           	opt stack 0
  2170  000001                     __data_sector_from_cluster@fat_cluster:
  2171                           	opt stack 0
  2172  000001                     __fat_sector_from_cluster@cluster:
  2173                           	opt stack 0
  2174  000001                     __fat_offset_from_cluster@cluster:
  2175                           	opt stack 0
  2176  000001                     __read_value_from_offset@offset:
  2177                           	opt stack 0
  2178  000001                     __get_mbr@idx:
  2179                           	opt stack 0
  2180  000001                     __get_fbr@idx:
  2181                           	opt stack 0
  2182  000001                     __get_fat@idx:
  2183                           	opt stack 0
  2184  000001                     __get_root@idx:
  2185                           	opt stack 0
  2186  000001                     __get_data@idx:
  2187                           	opt stack 0
  2188  000001                     internalFlash_addressFromPage@page:
  2189                           	opt stack 0
  2190  000001                     spi_tx@data:
  2191                           	opt stack 0
  2192  000001                     spi_tx_tx@command:
  2193                           	opt stack 0
  2194  000001                     spi_tx_rx@command:
  2195                           	opt stack 0
  2196  000001                     ___wmul@multiplier:
  2197                           	opt stack 0
  2198  000001                     ___lwdiv@dividend:
  2199                           	opt stack 0
  2200  000001                     ___lwmod@dividend:
  2201                           	opt stack 0
  2202  000001                     memcpy@d1:
  2203                           	opt stack 0
  2204  000001                     memset@p1:
  2205                           	opt stack 0
  2206  000001                     strncmp@s1:
  2207                           	opt stack 0
  2208  000001                     __spi_init@details:
  2209                           	opt stack 0
  2210  000001                     __bootloader_check_address@address:
  2211                           	opt stack 0
  2212  000001                     internalFlash_pageFromAddress@address:
  2213                           	opt stack 0
  2214  000001                     ___lldiv@dividend:
  2215                           	opt stack 0
  2216  000001                     ___llmod@dividend:
  2217                           	opt stack 0
  2218                           
  2219                           ; 4 bytes @ 0x0
  2220  000001                     	ds	1
  2221  000002                     ??_USBConfigureEndpoint:
  2222  000002                     ??_USBStallEndpoint:
  2223  000002                     ??_display_get_character:
  2224  000002                     USBCtrlTrfRxService@byteToRead:
  2225                           	opt stack 0
  2226  000002                     USBCtrlTrfInHandler@lastDTS:
  2227                           	opt stack 0
  2228  000002                     system_delay_ms@ms:
  2229                           	opt stack 0
  2230  000002                     hexCharToUint8@ascii:
  2231                           	opt stack 0
  2232  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2233                           	opt stack 0
  2234  000002                     USBTransferOnePacket@data:
  2235                           	opt stack 0
  2236  000002                     USBStdGetStatusHandler@p:
  2237                           	opt stack 0
  2238                           
  2239                           ; 2 bytes @ 0x1
  2240  000002                     	ds	1
  2241  000003                     ??_MSDComputeDeviceInAndResidue:
  2242  000003                     ??__get_mbr:
  2243  000003                     ??__get_fbr:
  2244  000003                     ??__get_fat:
  2245  000003                     ??__get_root:
  2246  000003                     ?_hexCharsToUint16:
  2247                           	opt stack 0
  2248  000003                     system_delay_ms@cntr:
  2249                           	opt stack 0
  2250  000003                     __display_clear@row:
  2251                           	opt stack 0
  2252  000003                     __sector_from_file_number@file_number:
  2253                           	opt stack 0
  2254  000003                     __offset_from_file_number@file_number:
  2255                           	opt stack 0
  2256  000003                     hexCharsToUint8@c2:
  2257                           	opt stack 0
  2258  000003                     hexCharsToUint16@c2:
  2259                           	opt stack 0
  2260  000003                     SYSTEM_Initialize@pll_startup_counter_2860:
  2261                           	opt stack 0
  2262  000003                     __read_value_from_offset@buffer:
  2263                           	opt stack 0
  2264  000003                     spi_tx@length:
  2265                           	opt stack 0
  2266  000003                     spi_tx_tx@command_length:
  2267                           	opt stack 0
  2268  000003                     spi_tx_rx@command_length:
  2269                           	opt stack 0
  2270  000003                     ___wmul@multiplicand:
  2271                           	opt stack 0
  2272  000003                     ___lwdiv@divisor:
  2273                           	opt stack 0
  2274  000003                     ___lwmod@divisor:
  2275                           	opt stack 0
  2276  000003                     memset@c:
  2277                           	opt stack 0
  2278  000003                     strncmp@s2:
  2279                           	opt stack 0
  2280  000003                     memcpy@s1:
  2281                           	opt stack 0
  2282                           
  2283                           ; 3 bytes @ 0x2
  2284  000003                     	ds	1
  2285  000004                     ??_hexCharsToUint8:
  2286  000004                     USBTransferOnePacket@len:
  2287                           	opt stack 0
  2288  000004                     display_get_character@line:
  2289                           	opt stack 0
  2290  000004                     __display_clear@col:
  2291                           	opt stack 0
  2292  000004                     hexCharsToUint16@c3:
  2293                           	opt stack 0
  2294  000004                     spi_init@configuration:
  2295                           	opt stack 0
  2296  000004                     __sector_from_file_number@sector:
  2297                           	opt stack 0
  2298  000004                     __offset_from_file_number@offset:
  2299                           	opt stack 0
  2300                           
  2301                           ; 2 bytes @ 0x3
  2302  000004                     	ds	1
  2303  000005                     ??_USBTransferOnePacket:
  2304  000005                     ??_spi_tx:
  2305  000005                     ??_internalFlash_pageFromAddress:
  2306  000005                     ??__read_value_from_offset:
  2307  000005                     SYSTEM_Initialize@state:
  2308                           	opt stack 0
  2309  000005                     hexCharsToUint8@c1:
  2310                           	opt stack 0
  2311  000005                     hexCharsToUint16@c4:
  2312                           	opt stack 0
  2313  000005                     __bootloader_check_address@dataLength:
  2314                           	opt stack 0
  2315  000005                     ___lwmod@counter:
  2316                           	opt stack 0
  2317  000005                     __fill_buffer_get_display@outBuffer:
  2318                           	opt stack 0
  2319  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2320                           	opt stack 0
  2321  000005                     spi_tx_tx@data:
  2322                           	opt stack 0
  2323  000005                     spi_tx_rx@data:
  2324                           	opt stack 0
  2325  000005                     ___wmul@product:
  2326                           	opt stack 0
  2327  000005                     ___lwdiv@quotient:
  2328                           	opt stack 0
  2329  000005                     memset@n:
  2330                           	opt stack 0
  2331  000005                     strncmp@len:
  2332                           	opt stack 0
  2333  000005                     internalFlash_addressFromPage@address:
  2334                           	opt stack 0
  2335  000005                     ___lldiv@divisor:
  2336                           	opt stack 0
  2337  000005                     ___llmod@divisor:
  2338                           	opt stack 0
  2339                           
  2340                           ; 4 bytes @ 0x4
  2341  000005                     	ds	1
  2342  000006                     ??_hexCharsToUint16:
  2343  000006                     ??__bootloader_check_address:
  2344  000006                     USBStallEndpoint@ep:
  2345                           	opt stack 0
  2346  000006                     USBConfigureEndpoint@EPNum:
  2347                           	opt stack 0
  2348  000006                     __i2c_eeprom_busy@busy:
  2349                           	opt stack 0
  2350  000006                     hexCharsToUint8@retVal:
  2351                           	opt stack 0
  2352  000006                     __i2c_write@data:
  2353                           	opt stack 0
  2354  000006                     __i2c_read@data:
  2355                           	opt stack 0
  2356  000006                     i2c_display_write_fixed@data:
  2357                           	opt stack 0
  2358  000006                     memcpy@n:
  2359                           	opt stack 0
  2360                           
  2361                           ; 2 bytes @ 0x5
  2362  000006                     	ds	1
  2363  000007                     ??_strncmp:
  2364  000007                     ??__fill_buffer_get_bootloader_details:
  2365  000007                     __fill_buffer_get_display@secondHalf:
  2366                           	opt stack 0
  2367  000007                     ___lwdiv@counter:
  2368                           	opt stack 0
  2369  000007                     USBStallEndpoint@p:
  2370                           	opt stack 0
  2371  000007                     USBConfigureEndpoint@handle:
  2372                           	opt stack 0
  2373  000007                     spi_tx_tx@data_length:
  2374                           	opt stack 0
  2375  000007                     spi_tx_rx@data_length:
  2376                           	opt stack 0
  2377  000007                     memset@p:
  2378                           	opt stack 0
  2379                           
  2380                           ; 2 bytes @ 0x6
  2381  000007                     	ds	1
  2382  000008                     ??__fill_buffer_get_display:
  2383  000008                     __i2c_write@length:
  2384                           	opt stack 0
  2385  000008                     __i2c_read@length:
  2386                           	opt stack 0
  2387  000008                     i2c_display_write_fixed@length:
  2388                           	opt stack 0
  2389  000008                     __read_value_from_offset@value:
  2390                           	opt stack 0
  2391  000008                     utoa@buf:
  2392                           	opt stack 0
  2393  000008                     memcpy@s:
  2394                           	opt stack 0
  2395                           
  2396                           ; 3 bytes @ 0x7
  2397  000008                     	ds	1
  2398  000009                     ??_spi_tx_rx:
  2399  000009                     ??_spi_tx_tx:
  2400  000009                     ??__i2c_read:
  2401  000009                     ?_internalFlash_addressWithinPage:
  2402                           	opt stack 0
  2403  000009                     USBDeviceInit@i:
  2404                           	opt stack 0
  2405  000009                     USBEnableEndpoint@options:
  2406                           	opt stack 0
  2407  000009                     USBTransferOnePacket@ep:
  2408                           	opt stack 0
  2409  000009                     MSDErrorHandler@ErrorCase:
  2410                           	opt stack 0
  2411  000009                     __i2c_write@slave_address:
  2412                           	opt stack 0
  2413  000009                     i2c_display_write_fixed@pos:
  2414                           	opt stack 0
  2415  000009                     __flash_wakeup@command:
  2416                           	opt stack 0
  2417  000009                     hexCharsToUint16@c1:
  2418                           	opt stack 0
  2419  000009                     ___llmod@counter:
  2420                           	opt stack 0
  2421  000009                     internalFlash_erasePage@page:
  2422                           	opt stack 0
  2423  000009                     internalFlash_writePage@page:
  2424                           	opt stack 0
  2425  000009                     internalFlash_addressWithinPage@address:
  2426                           	opt stack 0
  2427  000009                     ___lldiv@quotient:
  2428                           	opt stack 0
  2429                           
  2430                           ; 4 bytes @ 0x8
  2431  000009                     	ds	1
  2432  00000A                     MSDErrorHandler@OldMSD_State:
  2433                           	opt stack 0
  2434  00000A                     __i2c_write@cntr:
  2435                           	opt stack 0
  2436  00000A                     __bootloader_check_address@worst_case:
  2437                           	opt stack 0
  2438  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2439                           	opt stack 0
  2440  00000A                     USBEnableEndpoint@p:
  2441                           	opt stack 0
  2442  00000A                     USBTransferOnePacket@handle:
  2443                           	opt stack 0
  2444  00000A                     hexCharsToUint16@retVal:
  2445                           	opt stack 0
  2446  00000A                     utoa@val:
  2447                           	opt stack 0
  2448                           
  2449                           ; 2 bytes @ 0x9
  2450  00000A                     	ds	1
  2451  00000B                     ??_internalFlash_erasePage:
  2452  00000B                     ??_internalFlash_writePage:
  2453  00000B                     ??_i2c_display_init:
  2454  00000B                     __ic2_display_set_ddram_address@address:
  2455                           	opt stack 0
  2456  00000B                     __bootloader_check_address@byte_status:
  2457                           	opt stack 0
  2458  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2459                           	opt stack 0
  2460  00000B                     i2c_eeprom_writeByte@address:
  2461                           	opt stack 0
  2462  00000B                     memcpy@d:
  2463                           	opt stack 0
  2464  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2465                           	opt stack 0
  2466                           
  2467                           ; 4 bytes @ 0xA
  2468  00000B                     	ds	1
  2469  00000C                     ??_USBMSDInit:
  2470  00000C                     ?_parseHexFileEntry:
  2471                           	opt stack 0
  2472  00000C                     USBEnableEndpoint@ep:
  2473                           	opt stack 0
  2474  00000C                     __bootloader_check_address@cntr:
  2475                           	opt stack 0
  2476  00000C                     _USBCheckMSDRequest$2319:
  2477                           	opt stack 0
  2478  00000C                     MSDTransferTerminated@handle:
  2479                           	opt stack 0
  2480  00000C                     __ic2_display_set_ddram_address@data_array:
  2481                           	opt stack 0
  2482  00000C                     parseHexFileEntry@data:
  2483                           	opt stack 0
  2484  00000C                     utoa@base:
  2485                           	opt stack 0
  2486  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2487                           	opt stack 0
  2488  00000C                     i2c_display_init@init_sequence:
  2489                           	opt stack 0
  2490                           
  2491                           ; 9 bytes @ 0xB
  2492  00000C                     	ds	1
  2493  00000D                     ?__flash_get_status:
  2494                           	opt stack 0
  2495  00000D                     i2c_eeprom_writeByte@data:
  2496                           	opt stack 0
  2497  00000D                     __fill_buffer_get_display@cntr:
  2498                           	opt stack 0
  2499  00000D                     ___lldiv@counter:
  2500                           	opt stack 0
  2501  00000D                     memcpy@tmp:
  2502                           	opt stack 0
  2503  00000D                     internalFlash_addressWithinPage@page:
  2504                           	opt stack 0
  2505                           
  2506                           ; 2 bytes @ 0xC
  2507  00000D                     	ds	1
  2508  00000E                     ??_i2c_eeprom_writeByte:
  2509  00000E                     i2c_display_cursor@position:
  2510                           	opt stack 0
  2511  00000E                     __fill_buffer_get_display@line:
  2512                           	opt stack 0
  2513  00000E                     _USBCheckMSDRequest$2320:
  2514                           	opt stack 0
  2515  00000E                     _MSDTransferTerminated$2407:
  2516                           	opt stack 0
  2517  00000E                     utoa@v:
  2518                           	opt stack 0
  2519  00000E                     __display_itoa_u32@value:
  2520                           	opt stack 0
  2521  00000E                     parseHexFileEntry@offset:
  2522                           	opt stack 0
  2523  00000E                     internalFlash_read@address:
  2524                           	opt stack 0
  2525                           
  2526                           ; 4 bytes @ 0xD
  2527  00000E                     	ds	1
  2528  00000F                     ??_internalFlash_addressWithinPage:
  2529  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2530                           	opt stack 0
  2531  00000F                     i2c_display_cursor@line:
  2532                           	opt stack 0
  2533  00000F                     __flash_get_status@command:
  2534                           	opt stack 0
  2535  00000F                     __fill_buffer_get_display@start_line:
  2536                           	opt stack 0
  2537  00000F                     internalFlash_writePage@cntr:
  2538                           	opt stack 0
  2539  00000F                     internalFlash_erasePage@address:
  2540                           	opt stack 0
  2541                           
  2542                           ; 4 bytes @ 0xE
  2543  00000F                     	ds	1
  2544  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2545                           	opt stack 0
  2546  000010                     __i2c_read@slave_address:
  2547                           	opt stack 0
  2548  000010                     i2c_display_cursor@address:
  2549                           	opt stack 0
  2550  000010                     __fill_buffer_get_display@position:
  2551                           	opt stack 0
  2552  000010                     utoa@c:
  2553                           	opt stack 0
  2554  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2555                           	opt stack 0
  2556  000010                     __flash_get_status@status:
  2557                           	opt stack 0
  2558  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2559                           	opt stack 0
  2560                           
  2561                           ; 2 bytes @ 0xF
  2562  000010                     	ds	1
  2563  000011                     MSDCheckForErrorCases@DeviceNoData:
  2564                           	opt stack 0
  2565  000011                     __i2c_read@cntr:
  2566                           	opt stack 0
  2567  000011                     internalFlash_writePage@block_cntr:
  2568                           	opt stack 0
  2569  000011                     i2c_eeprom_writeByte@dat:
  2570                           	opt stack 0
  2571  000011                     itoa@buf:
  2572                           	opt stack 0
  2573                           
  2574                           ; 2 bytes @ 0x10
  2575  000011                     	ds	1
  2576  000012                     internalFlash_writePage@byte_cntr:
  2577                           	opt stack 0
  2578  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2579                           	opt stack 0
  2580  000012                     i2c_eeprom_readByte@address:
  2581                           	opt stack 0
  2582  000012                     __display_itoa_u32@text:
  2583                           	opt stack 0
  2584  000012                     __flash_is_busy@status:
  2585                           	opt stack 0
  2586  000012                     parseHexFileEntry@hexEntry:
  2587                           	opt stack 0
  2588  000012                     internalFlash_read@data_length:
  2589                           	opt stack 0
  2590                           
  2591                           ; 2 bytes @ 0x11
  2592  000012                     	ds	1
  2593  000013                     i2c_eeprom_writeByte@slave_address:
  2594                           	opt stack 0
  2595  000013                     itoa@val:
  2596                           	opt stack 0
  2597  000013                     internalFlash_writePage@address:
  2598                           	opt stack 0
  2599  000013                     internalFlash_addressWithinPage@page_start_address:
  2600                           	opt stack 0
  2601                           
  2602                           ; 4 bytes @ 0x12
  2603  000013                     	ds	1
  2604  000014                     ??_i2c_eeprom_readByte:
  2605  000014                     ??_parseHexFileEntry:
  2606  000014                     __display_itoa_u32@cntr:
  2607                           	opt stack 0
  2608  000014                     flash_is_busy@result:
  2609                           	opt stack 0
  2610  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2611                           	opt stack 0
  2612  000014                     __flash_compare_page_to_buffer@page:
  2613                           	opt stack 0
  2614  000014                     __flash_write_to_buffer@start:
  2615                           	opt stack 0
  2616  000014                     __flash_write_page_from_buffer@page:
  2617                           	opt stack 0
  2618  000014                     __flash_partial_read@page:
  2619                           	opt stack 0
  2620  000014                     internalFlash_read@buffer:
  2621                           	opt stack 0
  2622  000014                     __flash_set_page_size@command:
  2623                           	opt stack 0
  2624                           
  2625                           ; 4 bytes @ 0x13
  2626  000014                     	ds	1
  2627  000015                     __display_itoa_u32@number_of_digits:
  2628                           	opt stack 0
  2629  000015                     __fill_buffer_get_status@outBuffer:
  2630                           	opt stack 0
  2631  000015                     itoa@base:
  2632                           	opt stack 0
  2633                           
  2634                           ; 2 bytes @ 0x14
  2635  000015                     	ds	1
  2636  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2637  000016                     ??__display_found:
  2638  000016                     __flash_compare_page_to_buffer@buffer:
  2639                           	opt stack 0
  2640  000016                     __flash_write_page_from_buffer@buffer:
  2641                           	opt stack 0
  2642  000016                     __flash_write_to_buffer@data:
  2643                           	opt stack 0
  2644  000016                     __flash_partial_read@start:
  2645                           	opt stack 0
  2646  000016                     internalFlash_readPage@page:
  2647                           	opt stack 0
  2648                           
  2649                           ; 2 bytes @ 0x15
  2650  000016                     	ds	1
  2651  000017                     ??__flash_compare_page_to_buffer:
  2652  000017                     ??__flash_write_page_from_buffer:
  2653  000017                     i2c_eeprom_readByte@slave_address:
  2654                           	opt stack 0
  2655  000017                     api_prepare@inBuffer:
  2656                           	opt stack 0
  2657  000017                     itoa@cp:
  2658                           	opt stack 0
  2659                           
  2660                           ; 2 bytes @ 0x16
  2661  000017                     	ds	1
  2662  000018                     ??_USBStdFeatureReqHandler:
  2663  000018                     USBStdSetCfgHandler@i:
  2664                           	opt stack 0
  2665  000018                     i2c_eeprom_readByte@addr:
  2666                           	opt stack 0
  2667  000018                     __display_found@start:
  2668                           	opt stack 0
  2669  000018                     __flash_set_page_size@size:
  2670                           	opt stack 0
  2671  000018                     __flash_write_to_buffer@data_length:
  2672                           	opt stack 0
  2673  000018                     __flash_partial_read@length:
  2674                           	opt stack 0
  2675  000018                     internalFlash_readPage@address:
  2676                           	opt stack 0
  2677                           
  2678                           ; 4 bytes @ 0x17
  2679  000018                     	ds	1
  2680  000019                     __display_found@cntr:
  2681                           	opt stack 0
  2682  000019                     USBStdFeatureReqHandler@pUEP:
  2683                           	opt stack 0
  2684  000019                     __display_itoa_u16@value:
  2685                           	opt stack 0
  2686  000019                     api_prepare@outBuffer:
  2687                           	opt stack 0
  2688                           
  2689                           ; 2 bytes @ 0x18
  2690  000019                     	ds	1
  2691  00001A                     __flash_write_to_buffer@buffer:
  2692                           	opt stack 0
  2693  00001A                     __flash_compare_page_to_buffer@status:
  2694                           	opt stack 0
  2695  00001A                     __flash_partial_read@data:
  2696                           	opt stack 0
  2697  00001A                     __flash_write_page_from_buffer@command:
  2698                           	opt stack 0
  2699                           
  2700                           ; 4 bytes @ 0x19
  2701  00001A                     	ds	1
  2702  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2703                           	opt stack 0
  2704  00001B                     api_prepare@command:
  2705                           	opt stack 0
  2706  00001B                     __display_itoa_u16@text:
  2707                           	opt stack 0
  2708  00001B                     __flash_write_to_buffer@command:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x1A
  2712  00001B                     	ds	1
  2713  00001C                     ??__flash_partial_read:
  2714  00001C                     parseHexFileEntry@i:
  2715                           	opt stack 0
  2716  00001C                     USBStdFeatureReqHandler@p:
  2717                           	opt stack 0
  2718  00001C                     __flash_compare_page_to_buffer@command:
  2719                           	opt stack 0
  2720                           
  2721                           ; 4 bytes @ 0x1B
  2722  00001C                     	ds	1
  2723  00001D                     ??__display_verify:
  2724  00001D                     ??__display_checked:
  2725  00001D                     __display_start@cntr:
  2726                           	opt stack 0
  2727  00001D                     __display_failed@cntr:
  2728                           	opt stack 0
  2729  00001D                     __display_programming@cntr:
  2730                           	opt stack 0
  2731  00001D                     __display_done@cntr:
  2732                           	opt stack 0
  2733                           
  2734                           ; 1 bytes @ 0x1C
  2735  00001D                     	ds	1
  2736  00001E                     ??_USBCtrlEPService:
  2737  00001E                     
  2738                           ; 1 bytes @ 0x1D
  2739  00001E                     	ds	1
  2740  00001F                     __display_verify@cntr:
  2741                           	opt stack 0
  2742  00001F                     __display_checked@start:
  2743                           	opt stack 0
  2744                           
  2745                           ; 1 bytes @ 0x1E
  2746  00001F                     	ds	1
  2747  000020                     USBDeviceTasks@i:
  2748                           	opt stack 0
  2749  000020                     __display_checked@cntr:
  2750                           	opt stack 0
  2751  000020                     flash_sector_write@page:
  2752                           	opt stack 0
  2753  000020                     __flash_partial_read@command:
  2754                           	opt stack 0
  2755                           
  2756                           ; 4 bytes @ 0x1F
  2757  000020                     	ds	1
  2758  000021                     ??_display_prepare:
  2759                           
  2760                           ; 1 bytes @ 0x20
  2761  000021                     	ds	1
  2762  000022                     flash_sector_write@data:
  2763                           	opt stack 0
  2764                           
  2765                           ; 2 bytes @ 0x21
  2766  000022                     	ds	1
  2767  000023                     display_prepare@mode:
  2768                           	opt stack 0
  2769                           
  2770                           ; 1 bytes @ 0x22
  2771  000023                     	ds	1
  2772  000024                     flash_sector_write@match:
  2773                           	opt stack 0
  2774  000024                     __parse_command_short@cmd:
  2775                           	opt stack 0
  2776  000024                     __flash_partial_read@address:
  2777                           	opt stack 0
  2778                           
  2779                           ; 4 bytes @ 0x23
  2780  000024                     	ds	1
  2781  000025                     ExternalFlash_SectorWrite@config:
  2782                           	opt stack 0
  2783  000025                     fat_format@cntr:
  2784                           	opt stack 0
  2785                           
  2786                           ; 2 bytes @ 0x24
  2787  000025                     	ds	2
  2788  000027                     __parse_format_drive@data:
  2789                           	opt stack 0
  2790  000027                     ExternalFlash_SectorWrite@sector_addr:
  2791                           	opt stack 0
  2792                           
  2793                           ; 4 bytes @ 0x26
  2794  000027                     	ds	1
  2795  000028                     flash_sector_read@page:
  2796                           	opt stack 0
  2797  000028                     flash_partial_read@page:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x27
  2801  000028                     	ds	1
  2802  000029                     __parse_format_drive@out_buffer:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x28
  2806  000029                     	ds	1
  2807  00002A                     flash_sector_read@data:
  2808                           	opt stack 0
  2809  00002A                     flash_partial_read@start:
  2810                           	opt stack 0
  2811                           
  2812                           ; 2 bytes @ 0x29
  2813  00002A                     	ds	1
  2814  00002B                     ExternalFlash_SectorWrite@buffer:
  2815                           	opt stack 0
  2816  00002B                     __parse_format_drive@out_idx_ptr:
  2817                           	opt stack 0
  2818                           
  2819                           ; 2 bytes @ 0x2A
  2820  00002B                     	ds	1
  2821  00002C                     ??_fat_get_format_status:
  2822  00002C                     flash_partial_read@length:
  2823                           	opt stack 0
  2824  00002C                     ExternalFlash_SectorRead@config:
  2825                           	opt stack 0
  2826  00002C                     fat_find_file@name:
  2827                           	opt stack 0
  2828                           
  2829                           ; 2 bytes @ 0x2B
  2830  00002C                     	ds	1
  2831  00002D                     ??__parse_format_drive:
  2832  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2833                           	opt stack 0
  2834                           
  2835                           ; 1 bytes @ 0x2C
  2836  00002D                     	ds	1
  2837  00002E                     __parse_format_drive@return_value:
  2838                           	opt stack 0
  2839  00002E                     flash_partial_read@data:
  2840                           	opt stack 0
  2841  00002E                     ExternalFlash_SectorWrite@page:
  2842                           	opt stack 0
  2843  00002E                     fat_find_file@extension:
  2844                           	opt stack 0
  2845  00002E                     fat_get_format_status@cntr:
  2846                           	opt stack 0
  2847  00002E                     ExternalFlash_SectorRead@sector_addr:
  2848                           	opt stack 0
  2849                           
  2850                           ; 4 bytes @ 0x2D
  2851  00002E                     	ds	1
  2852  00002F                     __parse_command_long@data:
  2853                           	opt stack 0
  2854                           
  2855                           ; 2 bytes @ 0x2E
  2856  00002F                     	ds	1
  2857  000030                     ??_MSDWriteHandler:
  2858  000030                     ??_fat_find_file:
  2859  000030                     ?__read_fat:
  2860                           	opt stack 0
  2861  000030                     __root_is_available@root_sector:
  2862                           	opt stack 0
  2863  000030                     __read_fat@cluster:
  2864                           	opt stack 0
  2865  000030                     fat_get_file_information@data:
  2866                           	opt stack 0
  2867                           
  2868                           ; 2 bytes @ 0x2F
  2869  000030                     	ds	1
  2870  000031                     __parse_command_long@out_buffer:
  2871                           	opt stack 0
  2872                           
  2873                           ; 2 bytes @ 0x30
  2874  000031                     	ds	1
  2875  000032                     fat_find_file@file_number:
  2876                           	opt stack 0
  2877  000032                     ExternalFlash_SectorRead@buffer:
  2878                           	opt stack 0
  2879  000032                     __root_is_available@offset:
  2880                           	opt stack 0
  2881  000032                     __read_fat@sector:
  2882                           	opt stack 0
  2883                           
  2884                           ; 2 bytes @ 0x31
  2885  000032                     	ds	1
  2886  000033                     fat_find_file@sector:
  2887                           	opt stack 0
  2888  000033                     fat_get_file_information@root_sector:
  2889                           	opt stack 0
  2890  000033                     __parse_command_long@out_idx_ptr:
  2891                           	opt stack 0
  2892                           
  2893                           ; 2 bytes @ 0x32
  2894  000033                     	ds	1
  2895  000034                     __root_is_available@file_number:
  2896                           	opt stack 0
  2897  000034                     ExternalFlash_SectorRead@page:
  2898                           	opt stack 0
  2899  000034                     __read_fat@offset:
  2900                           	opt stack 0
  2901                           
  2902                           ; 2 bytes @ 0x33
  2903  000034                     	ds	1
  2904  000035                     __root_is_available@first_byte:
  2905                           	opt stack 0
  2906  000035                     __parse_command_long@length:
  2907                           	opt stack 0
  2908  000035                     fat_find_file@offset:
  2909                           	opt stack 0
  2910  000035                     fat_get_file_information@offset:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x34
  2914  000035                     	ds	1
  2915  000036                     ??_MSDReadHandler:
  2916  000036                     ?_fat_get_file_size:
  2917                           	opt stack 0
  2918  000036                     __read_fat@value:
  2919                           	opt stack 0
  2920  000036                     api_parse@inBuffer:
  2921                           	opt stack 0
  2922                           
  2923                           ; 2 bytes @ 0x35
  2924  000036                     	ds	1
  2925  000037                     fat_get_file_information@file_number:
  2926                           	opt stack 0
  2927                           
  2928                           ; 1 bytes @ 0x36
  2929  000037                     	ds	1
  2930  000038                     ?__find_nth_cluster:
  2931                           	opt stack 0
  2932  000038                     api_parse@receivedDataLength:
  2933                           	opt stack 0
  2934  000038                     __find_nth_cluster@cluster:
  2935                           	opt stack 0
  2936                           
  2937                           ; 2 bytes @ 0x37
  2938  000038                     	ds	1
  2939  000039                     api_parse@outBuffer:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x38
  2943  000039                     	ds	1
  2944  00003A                     ??_MSDProcessCommandMediaPresent:
  2945  00003A                     __find_nth_cluster@n:
  2946                           	opt stack 0
  2947  00003A                     fat_get_file_size@sector:
  2948                           	opt stack 0
  2949                           
  2950                           ; 2 bytes @ 0x39
  2951  00003A                     	ds	1
  2952  00003B                     ??_api_parse:
  2953                           
  2954                           ; 1 bytes @ 0x3A
  2955  00003B                     	ds	1
  2956  00003C                     _MSDProcessCommandMediaPresent$2390:
  2957                           	opt stack 0
  2958  00003C                     __find_nth_cluster@offset:
  2959                           	opt stack 0
  2960  00003C                     fat_get_file_size@offset:
  2961                           	opt stack 0
  2962                           
  2963                           ; 2 bytes @ 0x3B
  2964  00003C                     	ds	1
  2965  00003D                     api_parse@out_idx_ptr:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x3C
  2969  00003D                     	ds	1
  2970  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2971                           	opt stack 0
  2972  00003E                     __find_nth_cluster@sector_in_buffer:
  2973                           	opt stack 0
  2974  00003E                     fat_get_file_size@file_size:
  2975                           	opt stack 0
  2976                           
  2977                           ; 4 bytes @ 0x3D
  2978  00003E                     	ds	1
  2979  00003F                     api_parse@out_idx:
  2980                           	opt stack 0
  2981  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  2982                           	opt stack 0
  2983                           
  2984                           ; 4 bytes @ 0x3E
  2985  00003F                     	ds	1
  2986  000040                     api_parse@in_idx:
  2987                           	opt stack 0
  2988  000040                     __find_nth_cluster@sector:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x3F
  2992  000040                     	ds	1
  2993  000041                     
  2994                           ; 1 bytes @ 0x40
  2995  000041                     	ds	1
  2996  000042                     fat_get_file_size@file_number:
  2997                           	opt stack 0
  2998  000042                     fat_read_from_file_fast@start_byte:
  2999                           	opt stack 0
  3000                           
  3001                           ; 4 bytes @ 0x41
  3002  000042                     	ds	1
  3003  000043                     MSDProcessCommandMediaPresent@capacity:
  3004                           	opt stack 0
  3005                           
  3006                           ; 4 bytes @ 0x42
  3007  000043                     	ds	3
  3008  000046                     fat_read_from_file_fast@length:
  3009                           	opt stack 0
  3010                           
  3011                           ; 4 bytes @ 0x45
  3012  000046                     	ds	1
  3013  000047                     MSDProcessCommandMediaPresent@i:
  3014                           	opt stack 0
  3015                           
  3016                           ; 1 bytes @ 0x46
  3017  000047                     	ds	1
  3018  000048                     ??_MSDProcessCommand:
  3019  000048                     
  3020                           ; 1 bytes @ 0x47
  3021  000048                     	ds	2
  3022  00004A                     fat_read_from_file_fast@data:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x49
  3026  00004A                     	ds	2
  3027  00004C                     fat_read_from_file_fast@cluster:
  3028                           	opt stack 0
  3029                           
  3030                           ; 2 bytes @ 0x4B
  3031  00004C                     	ds	1
  3032  00004D                     ??_MSDTasks:
  3033                           
  3034                           ; 1 bytes @ 0x4C
  3035  00004D                     	ds	1
  3036  00004E                     _MSDTasks$2372:
  3037                           	opt stack 0
  3038  00004E                     fat_read_from_file_fast@cluster_number:
  3039                           	opt stack 0
  3040                           
  3041                           ; 2 bytes @ 0x4D
  3042  00004E                     	ds	2
  3043  000050                     ??_fat_read_from_file_fast:
  3044  000050                     _MSDTasks$2373:
  3045                           	opt stack 0
  3046                           
  3047                           ; 2 bytes @ 0x4F
  3048  000050                     	ds	2
  3049  000052                     MSDTasks@i:
  3050                           	opt stack 0
  3051                           
  3052                           ; 1 bytes @ 0x51
  3053  000052                     	ds	1
  3054  000053                     
  3055                           ; 1 bytes @ 0x52
  3056  000053                     	ds	9
  3057  00005C                     bootloader_run@timeslot:
  3058                           	opt stack 0
  3059                           
  3060                           ; 1 bytes @ 0x5B
  3061  00005C                     	ds	1
  3062  00005D                     ??_main:
  3063                           
  3064                           ; 1 bytes @ 0x5C
  3065  00005D                     	ds	2
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           postdec1	equ	0xFE5
  3073                           fsr1h	equ	0xFE2
  3074                           fsr1l	equ	0xFE1
  3075                           
  3076 ;;
  3077 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3078 ;;
  3079 ;; *************** function _main *****************
  3080 ;; Defined at:
  3081 ;;		line 57 in file "main.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3099 ;;Total ram usage:        2 bytes
  3100 ;; Hardware stack levels required when called:   12
  3101 ;; This function calls:
  3102 ;;		_APP_DeviceCustomHIDTasks
  3103 ;;		_APP_DeviceMSDTasks
  3104 ;;		_SYSTEM_Initialize
  3105 ;;		_USBDeviceInit
  3106 ;;		_USBDeviceTasks
  3107 ;;		__normal_mode
  3108 ;;		_bootloader_run
  3109 ;;		_display_prepare
  3110 ;;		_display_update
  3111 ;;		_jump_to_main_program
  3112 ;;		_system_full_init
  3113 ;;		_system_minimal_init
  3114 ;;		_system_minimal_init_undo
  3115 ;;		_timer_pseudo_isr
  3116 ;;		_ui_get_status
  3117 ;;		_ui_run
  3118 ;; This function is called by:
  3119 ;;		Startup code after reset
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123                           	psect	text0
  3124  004888                     __ptext0:
  3125                           	opt stack 0
  3126  004888                     _main:
  3127                           	opt stack 19
  3128                           
  3129                           ;incstack = 0
  3130  004888  0004               	clrwdt		;# 
  3131                           
  3132                           ;main.c: 64: system_minimal_init();
  3133  00488A  EC7C  F038         	call	_system_minimal_init	;wreg free
  3134                           
  3135                           ;main.c: 67: if(_normal_mode())
  3136  00488E  EC75  F031         	call	__normal_mode	;wreg free
  3137  004892  0900               	iorlw	0
  3138  004894  B4D8               	btfsc	status,2,c
  3139  004896  D004               	goto	l861
  3140                           
  3141                           ;main.c: 68: {;main.c: 70: system_minimal_init_undo();
  3142  004898  EC06  F039         	call	_system_minimal_init_undo	;wreg free
  3143                           
  3144                           ;main.c: 71: jump_to_main_program();
  3145  00489C  EC16  F039         	call	_jump_to_main_program	;wreg free
  3146  0048A0                     l861:
  3147                           
  3148                           ;main.c: 72: };main.c: 76: system_full_init();
  3149  0048A0  EC7D  F034         	call	_system_full_init	;wreg free
  3150                           
  3151                           ;main.c: 80: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3152  0048A4  0E00               	movlw	0
  3153  0048A6  EC26  F033         	call	_SYSTEM_Initialize
  3154                           
  3155                           ;main.c: 81: USBDeviceInit();
  3156  0048AA  ECBB  F019         	call	_USBDeviceInit	;wreg free
  3157  0048AE                     l862:
  3158  0048AE  0004               	clrwdt		;# 
  3159                           
  3160                           ;main.c: 94: USBDeviceTasks();
  3161  0048B0  EC49  F016         	call	_USBDeviceTasks	;wreg free
  3162                           
  3163                           ;main.c: 95: APP_DeviceMSDTasks();
  3164  0048B4  EC8E  F038         	call	_APP_DeviceMSDTasks	;wreg free
  3165                           
  3166                           ;main.c: 96: APP_DeviceCustomHIDTasks();
  3167  0048B8  EC6C  F02A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3168                           
  3169                           ;main.c: 100: timer_pseudo_isr();
  3170  0048BC  EC0F  F036         	call	_timer_pseudo_isr	;wreg free
  3171                           
  3172                           ;main.c: 104: if(!os.done)
  3173  0048C0  0100               	movlb	0	; () banked
  3174  0048C2  5163               	movf	(_os+3)& (0+255),w,b
  3175  0048C4  A4D8               	btfss	status,2,c
  3176  0048C6  D7F3               	goto	l862
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;main.c: 105: {;main.c: 107: ui_run();
  3180  0048C8  EC45  F020         	call	_ui_run	;wreg free
  3181                           
  3182                           ;main.c: 112: switch(os.timeSlot&0b00000111)
  3183  0048CC  D025               	goto	l864
  3184  0048CE                     
  3185                           ;main.c: 115: bootloader_run(0);
  3186  0048CE  0E00               	movlw	0
  3187  0048D0  ECE8  F02F         	call	_bootloader_run
  3188                           
  3189                           ;main.c: 116: break;
  3190  0048D4  D043               	goto	l866
  3191  0048D6                     
  3192                           ;main.c: 119: bootloader_run(1);
  3193  0048D6  0E01               	movlw	1
  3194  0048D8  ECE8  F02F         	call	_bootloader_run
  3195                           
  3196                           ;main.c: 120: break;
  3197  0048DC  D03F               	goto	l866
  3198  0048DE                     
  3199                           ;main.c: 123: bootloader_run(2);
  3200  0048DE  0E02               	movlw	2
  3201  0048E0  ECE8  F02F         	call	_bootloader_run
  3202                           
  3203                           ;main.c: 124: break;
  3204  0048E4  D03B               	goto	l866
  3205  0048E6                     
  3206                           ;main.c: 127: bootloader_run(3);
  3207  0048E6  0E03               	movlw	3
  3208  0048E8  ECE8  F02F         	call	_bootloader_run
  3209                           
  3210                           ;main.c: 128: break;
  3211  0048EC  D037               	goto	l866
  3212  0048EE                     
  3213                           ;main.c: 131: bootloader_run(4);
  3214  0048EE  0E04               	movlw	4
  3215  0048F0  ECE8  F02F         	call	_bootloader_run
  3216                           
  3217                           ;main.c: 132: break;
  3218  0048F4  D033               	goto	l866
  3219  0048F6                     
  3220                           ;main.c: 135: bootloader_run(5);
  3221  0048F6  0E05               	movlw	5
  3222  0048F8  ECE8  F02F         	call	_bootloader_run
  3223                           
  3224                           ;main.c: 136: break;
  3225  0048FC  D02F               	goto	l866
  3226  0048FE                     
  3227                           ;main.c: 139: display_prepare(os.display_mode);
  3228  0048FE  0100               	movlb	0	; () banked
  3229  004900  5165               	movf	(_os+5)& (0+255),w,b
  3230  004902  ECD5  F023         	call	_display_prepare
  3231                           
  3232                           ;main.c: 140: break;
  3233  004906  D02A               	goto	l866
  3234  004908                     
  3235                           ;main.c: 143: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3236  004908  EC22  F039         	call	_ui_get_status	;wreg free
  3237  00490C  0A05               	xorlw	5
  3238  00490E  A4D8               	btfss	status,2,c
  3239  004910  D025               	goto	l866
  3240                           
  3241                           ;main.c: 144: {;main.c: 145: display_update();
  3242  004912  ECB3  F02F         	call	_display_update	;wreg free
  3243                           
  3244                           ;main.c: 148: }
  3245                           
  3246                           ;main.c: 146: };main.c: 147: break;
  3247  004916  D022               	goto	l866
  3248  004918                     l864:
  3249  004918  0100               	movlb	0	; () banked
  3250  00491A  5162               	movf	(_os+2)& (0+255),w,b
  3251  00491C  0B07               	andlw	7
  3252  00491E  6E5D               	movwf	??_main& (0+255),c
  3253  004920  6A5E               	clrf	(??_main+1)& (0+255),c
  3254                           
  3255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3256                           ; Switch size 1, requested type "space"
  3257                           ; Number of cases is 1, Range of values is 0 to 0
  3258                           ; switch strategies available:
  3259                           ; Name         Instructions Cycles
  3260                           ; simple_byte            4     3 (average)
  3261                           ;	Chosen strategy is simple_byte
  3262  004922  505E               	movf	??_main+1,w,c
  3263  004924  0A00               	xorlw	0	; case 0
  3264  004926  A4D8               	btfss	status,2,c
  3265  004928  D019               	goto	l866
  3266                           
  3267                           ; BSR set to: 0
  3268                           ; Switch size 1, requested type "space"
  3269                           ; Number of cases is 8, Range of values is 0 to 7
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte           25    13 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274  00492A  505D               	movf	??_main,w,c
  3275  00492C  0A00               	xorlw	0	; case 0
  3276  00492E  B4D8               	btfsc	status,2,c
  3277  004930  D7CE               	goto	l865
  3278  004932  0A01               	xorlw	1	; case 1
  3279  004934  B4D8               	btfsc	status,2,c
  3280  004936  D7CF               	goto	l867
  3281  004938  0A03               	xorlw	3	; case 2
  3282  00493A  B4D8               	btfsc	status,2,c
  3283  00493C  D7D0               	goto	l868
  3284  00493E  0A01               	xorlw	1	; case 3
  3285  004940  B4D8               	btfsc	status,2,c
  3286  004942  D7D1               	goto	l869
  3287  004944  0A07               	xorlw	7	; case 4
  3288  004946  B4D8               	btfsc	status,2,c
  3289  004948  D7D2               	goto	l870
  3290  00494A  0A01               	xorlw	1	; case 5
  3291  00494C  B4D8               	btfsc	status,2,c
  3292  00494E  D7D3               	goto	l871
  3293  004950  0A03               	xorlw	3	; case 6
  3294  004952  B4D8               	btfsc	status,2,c
  3295  004954  D7D4               	goto	l872
  3296  004956  0A01               	xorlw	1	; case 7
  3297  004958  B4D8               	btfsc	status,2,c
  3298  00495A  D7D6               	goto	l873
  3299  00495C                     l866:
  3300                           
  3301                           ;main.c: 149: os.done = 1;
  3302                           
  3303                           ; BSR set to: 0
  3304  00495C  0E01               	movlw	1
  3305  00495E  0100               	movlb	0	; () banked
  3306  004960  6F63               	movwf	(_os+3)& (0+255),b
  3307                           
  3308                           ; BSR set to: 0
  3309                           
  3310                           ; BSR set to: 0
  3311  004962  D7A5               	goto	l862
  3312  004964                     __end_of_main:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           postinc0	equ	0xFEE
  3319                           wreg	equ	0xFE8
  3320                           postdec1	equ	0xFE5
  3321                           fsr1h	equ	0xFE2
  3322                           fsr1l	equ	0xFE1
  3323                           status	equ	0xFD8
  3324                           
  3325 ;; *************** function _ui_run *****************
  3326 ;; Defined at:
  3327 ;;		line 119 in file "ui.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;		None
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      void 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;Total ram usage:        0 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    8
  3348 ;; This function calls:
  3349 ;;		__ui_encoder
  3350 ;;		_i2c_display_init
  3351 ;;		_system_encoder_enable
  3352 ;;		_ui_init
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text1
  3359  00408A                     __ptext1:
  3360                           	opt stack 0
  3361  00408A                     _ui_run:
  3362                           	opt stack 22
  3363                           
  3364                           ;ui.c: 121: switch(userInterfaceStatus)
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;incstack = 0
  3368  00408A  D067               	goto	l1275
  3369  00408C                     
  3370                           ;ui.c: 125: if (os.buttonCount!=0)
  3371  00408C  0100               	movlb	0	; () banked
  3372  00408E  5161               	movf	(_os+1)& (0+255),w,b
  3373  004090  B4D8               	btfsc	status,2,c
  3374  004092  0012               	return	
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;ui.c: 126: {;ui.c: 127: ui_init();
  3378  004094  EC85  F038         	call	_ui_init	;wreg free
  3379                           
  3380                           ;ui.c: 128: os.buttonCount = 0;
  3381  004098  0E00               	movlw	0
  3382  00409A  0100               	movlb	0	; () banked
  3383  00409C  6F61               	movwf	(_os+1)& (0+255),b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;ui.c: 129: };ui.c: 130: break;
  3387  00409E  0012               	return	
  3388  0040A0                     
  3389                           ; BSR set to: 0
  3390                           ;ui.c: 135: system_ui_inactive_count = 0;
  3391                           
  3392                           ; BSR set to: 0
  3393  0040A0  0E00               	movlw	0
  3394  0040A2  0101               	movlb	1	; () banked
  3395  0040A4  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3396  0040A6  0E00               	movlw	0
  3397  0040A8  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3398                           
  3399                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3400  0040AA  0E02               	movlw	2
  3401  0040AC  0100               	movlb	0	; () banked
  3402  0040AE  6F97               	movwf	_userInterfaceStatus& (0+255),b
  3403                           
  3404                           ;ui.c: 137: break;
  3405  0040B0  0012               	return	
  3406  0040B2                     l1280:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;ui.c: 141: LATAbits.LA3 = 0;
  3410  0040B2  9689               	bcf	3977,3,c	;volatile
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;ui.c: 143: system_ui_inactive_count = 0;
  3414  0040B4  0E00               	movlw	0
  3415  0040B6  0101               	movlb	1	; () banked
  3416  0040B8  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3417  0040BA  0E00               	movlw	0
  3418  0040BC  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3419                           
  3420                           ;ui.c: 144: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3421  0040BE  0E03               	movlw	3
  3422  0040C0  0100               	movlb	0	; () banked
  3423  0040C2  6F97               	movwf	_userInterfaceStatus& (0+255),b
  3424                           
  3425                           ;ui.c: 145: break;
  3426  0040C4  0012               	return	
  3427  0040C6                     
  3428                           ; BSR set to: 0
  3429                           ;ui.c: 148: ++system_ui_inactive_count;
  3430                           
  3431                           ; BSR set to: 0
  3432  0040C6  0101               	movlb	1	; () banked
  3433  0040C8  4B67               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3434  0040CA  2B68               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;ui.c: 150: if (system_ui_inactive_count>3)
  3438  0040CC  5168               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3439  0040CE  E104               	bnz	u12070
  3440  0040D0  0E04               	movlw	4
  3441  0040D2  5D67               	subwf	_system_ui_inactive_count& (0+255),w,b
  3442  0040D4  A0D8               	btfss	status,0,c
  3443  0040D6  0012               	return	
  3444  0040D8                     u12070:
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;ui.c: 151: {;ui.c: 152: LATAbits.LA3 = 1;
  3448  0040D8  8689               	bsf	3977,3,c	;volatile
  3449                           
  3450                           ; BSR set to: 1
  3451                           ;ui.c: 153: system_ui_inactive_count = 0;
  3452  0040DA  0E00               	movlw	0
  3453  0040DC  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3454  0040DE  0E00               	movlw	0
  3455  0040E0  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3456                           
  3457                           ;ui.c: 154: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3458  0040E2  0E04               	movlw	4
  3459  0040E4  0100               	movlb	0	; () banked
  3460  0040E6  6F97               	movwf	_userInterfaceStatus& (0+255),b
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;ui.c: 155: };ui.c: 156: break;
  3464  0040E8  0012               	return	
  3465  0040EA                     
  3466                           ; BSR set to: 0
  3467                           ;ui.c: 160: i2c_display_init();
  3468                           
  3469                           ; BSR set to: 0
  3470  0040EA  ECEE  F033         	call	_i2c_display_init	;wreg free
  3471                           
  3472                           ;ui.c: 163: LATCbits.LC1 = 1;
  3473  0040EE  828B               	bsf	3979,1,c	;volatile
  3474                           
  3475                           ;ui.c: 165: system_encoder_enable();
  3476  0040F0  ECA9  F038         	call	_system_encoder_enable	;wreg free
  3477                           
  3478                           ;ui.c: 167: system_ui_inactive_count = 0;
  3479  0040F4  0E00               	movlw	0
  3480  0040F6  0101               	movlb	1	; () banked
  3481  0040F8  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3482  0040FA  0E00               	movlw	0
  3483  0040FC  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;ui.c: 168: startup_timer = 0;
  3487  0040FE  0E00               	movlw	0
  3488  004100  6F66               	movwf	(_startup_timer+1)& (0+255),b
  3489  004102  0E00               	movlw	0
  3490  004104  6F65               	movwf	_startup_timer& (0+255),b
  3491                           
  3492                           ; BSR set to: 1
  3493                           ;ui.c: 169: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3494  004106  0E05               	movlw	5
  3495  004108  0100               	movlb	0	; () banked
  3496  00410A  6F97               	movwf	_userInterfaceStatus& (0+255),b
  3497                           
  3498                           ;ui.c: 170: break;
  3499  00410C  0012               	return	
  3500  00410E                     
  3501                           ; BSR set to: 0
  3502                           ;ui.c: 173: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3503                           
  3504                           ; BSR set to: 0
  3505  00410E  5165               	movf	(_os+5)& (0+255),w,b
  3506  004110  A4D8               	btfss	status,2,c
  3507  004112  D00B               	goto	l1286
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;ui.c: 174: {;ui.c: 175: ++startup_timer;
  3511  004114  0101               	movlb	1	; () banked
  3512  004116  4B65               	infsnz	_startup_timer& (0+255),f,b
  3513  004118  2B66               	incf	(_startup_timer+1)& (0+255),f,b
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;ui.c: 176: if(startup_timer==250)
  3517  00411A  0EFA               	movlw	250
  3518  00411C  1965               	xorwf	_startup_timer& (0+255),w,b
  3519  00411E  1166               	iorwf	(_startup_timer+1)& (0+255),w,b
  3520  004120  A4D8               	btfss	status,2,c
  3521  004122  D003               	goto	l1286
  3522                           
  3523                           ; BSR set to: 1
  3524                           ;ui.c: 177: {;ui.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3525  004124  0E10               	movlw	16
  3526  004126  0100               	movlb	0	; () banked
  3527  004128  6F65               	movwf	(_os+5)& (0+255),b
  3528  00412A                     l1286:
  3529                           
  3530                           ;ui.c: 179: };ui.c: 180: };ui.c: 181: if (os.encoderCount==0 && os.buttonCount==0)
  3531                           
  3532                           ; BSR set to: 0
  3533  00412A  0100               	movlb	0	; () banked
  3534  00412C  5160               	movf	_os& (0+255),w,b
  3535  00412E  A4D8               	btfss	status,2,c
  3536  004130  D00C               	goto	l1287
  3537                           
  3538                           ; BSR set to: 0
  3539  004132  5161               	movf	(_os+1)& (0+255),w,b
  3540  004134  A4D8               	btfss	status,2,c
  3541  004136  D009               	goto	l1287
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;ui.c: 182: {;ui.c: 183: if(system_ui_inactive_count<0xFFFF)
  3545  004138  0101               	movlb	1	; () banked
  3546  00413A  2967               	incf	_system_ui_inactive_count& (0+255),w,b
  3547  00413C  E103               	bnz	u12120
  3548  00413E  2968               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3549  004140  B4D8               	btfsc	status,2,c
  3550  004142  0012               	return	
  3551  004144                     u12120:
  3552                           
  3553                           ; BSR set to: 1
  3554                           ;ui.c: 184: ++system_ui_inactive_count;
  3555  004144  4B67               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3556  004146  2B68               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3557                           
  3558                           ; BSR set to: 1
  3559                           ;ui.c: 185: }
  3560  004148  0012               	return	
  3561  00414A                     l1287:
  3562                           
  3563                           ;ui.c: 186: else;ui.c: 187: {;ui.c: 188: system_ui_inactive_count = 0;
  3564                           
  3565                           ; BSR set to: 1
  3566  00414A  0E00               	movlw	0
  3567  00414C  0101               	movlb	1	; () banked
  3568  00414E  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3569  004150  0E00               	movlw	0
  3570  004152  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;ui.c: 189: _ui_encoder();
  3574  004154  EC45  F01F         	call	__ui_encoder	;wreg free
  3575                           
  3576                           ;ui.c: 192: }
  3577                           
  3578                           ;ui.c: 190: };ui.c: 191: break;
  3579  004158  0012               	return	
  3580  00415A                     l1275:
  3581  00415A  0100               	movlb	0	; () banked
  3582  00415C  5197               	movf	_userInterfaceStatus& (0+255),w,b
  3583                           
  3584                           ; Switch size 1, requested type "space"
  3585                           ; Number of cases is 6, Range of values is 0 to 5
  3586                           ; switch strategies available:
  3587                           ; Name         Instructions Cycles
  3588                           ; simple_byte           19    10 (average)
  3589                           ;	Chosen strategy is simple_byte
  3590  00415E  0A00               	xorlw	0	; case 0
  3591  004160  B4D8               	btfsc	status,2,c
  3592  004162  D794               	goto	l1276
  3593  004164  0A01               	xorlw	1	; case 1
  3594  004166  B4D8               	btfsc	status,2,c
  3595  004168  D79B               	goto	l1279
  3596  00416A  0A03               	xorlw	3	; case 2
  3597  00416C  B4D8               	btfsc	status,2,c
  3598  00416E  D7A1               	goto	l1280
  3599  004170  0A01               	xorlw	1	; case 3
  3600  004172  B4D8               	btfsc	status,2,c
  3601  004174  D7A8               	goto	l1281
  3602  004176  0A07               	xorlw	7	; case 4
  3603  004178  B4D8               	btfsc	status,2,c
  3604  00417A  D7B7               	goto	l1283
  3605  00417C  0A01               	xorlw	1	; case 5
  3606  00417E  A4D8               	btfss	status,2,c
  3607  004180  0012               	return	
  3608  004182  D7C5               	goto	l1284
  3609  004184                     __end_of_ui_run:
  3610                           	opt stack 0
  3611                           tblptru	equ	0xFF8
  3612                           tblptrh	equ	0xFF7
  3613                           tblptrl	equ	0xFF6
  3614                           tablat	equ	0xFF5
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           postdec1	equ	0xFE5
  3618                           fsr1h	equ	0xFE2
  3619                           fsr1l	equ	0xFE1
  3620                           status	equ	0xFD8
  3621                           
  3622 ;; *************** function _system_encoder_enable *****************
  3623 ;; Defined at:
  3624 ;;		line 97 in file "os.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_ui_run
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text2
  3652  007152                     __ptext2:
  3653                           	opt stack 0
  3654  007152                     _system_encoder_enable:
  3655                           	opt stack 29
  3656                           
  3657                           ;os.c: 100: INTCON3bits.INT2IF = 0;
  3658                           
  3659                           ;incstack = 0
  3660  007152  92F0               	bcf	intcon3,1,c	;volatile
  3661                           
  3662                           ;os.c: 101: INTCON3bits.INT3IF = 0;
  3663  007154  94F0               	bcf	intcon3,2,c	;volatile
  3664                           
  3665                           ;os.c: 104: os.encoderCount = 0;
  3666  007156  0E00               	movlw	0
  3667  007158  0100               	movlb	0	; () banked
  3668  00715A  6F60               	movwf	_os& (0+255),b
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;os.c: 107: INTCON3bits.INT2IE = 1;
  3672  00715C  88F0               	bsf	intcon3,4,c	;volatile
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;os.c: 108: INTCON3bits.INT3IE = 1;
  3676  00715E  8AF0               	bsf	intcon3,5,c	;volatile
  3677                           
  3678                           ; BSR set to: 0
  3679  007160  0012               	return		;funcret
  3680  007162                     __end_of_system_encoder_enable:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           intcon3	equ	0xFF0
  3687                           postinc0	equ	0xFEE
  3688                           wreg	equ	0xFE8
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _i2c_display_init *****************
  3695 ;; Defined at:
  3696 ;;		line 297 in file "i2c.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  init_sequenc    9   11[COMRAM] unsigned char [9]
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;Total ram usage:       10 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		__i2c_write
  3719 ;; This function is called by:
  3720 ;;		_ui_run
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text3
  3725  0067DC                     __ptext3:
  3726                           	opt stack 0
  3727  0067DC                     _i2c_display_init:
  3728                           	opt stack 27
  3729                           
  3730                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;incstack = 0
  3734  0067DC  EE22  F0B2         	lfsr	2,i2c_display_init@F6826
  3735  0067E0  EE10  F00C         	lfsr	1,i2c_display_init@init_sequence
  3736  0067E4  0E08               	movlw	8
  3737  0067E6                     u11171:
  3738  0067E6  CFDB FFE3          	movff	plusw2,plusw1
  3739  0067EA  06E8               	decf	wreg,f,c
  3740  0067EC  E2FC               	bc	u11171
  3741                           
  3742                           ;i2c.c: 314: LATAbits.LA3 = 0;
  3743  0067EE  9689               	bcf	3977,3,c	;volatile
  3744                           
  3745                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
  3746  0067F0  0E1A               	movlw	26
  3747  0067F2  6E0B               	movwf	??_i2c_display_init& (0+255),c
  3748  0067F4  0EF8               	movlw	248
  3749  0067F6                     u13127:
  3750  0067F6  2EE8               	decfsz	wreg,f,c
  3751  0067F8  D7FE               	bra	u13127
  3752  0067FA  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  3753  0067FC  D7FC               	bra	u13127
  3754  0067FE  D000               	nop2	
  3755                           
  3756                           ;i2c.c: 316: LATAbits.LA3 = 1;
  3757  006800  8689               	bsf	3977,3,c	;volatile
  3758                           
  3759                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
  3760  006802  0E82               	movlw	130
  3761  006804  6E0B               	movwf	??_i2c_display_init& (0+255),c
  3762  006806  0EDE               	movlw	222
  3763  006808                     u13137:
  3764  006808  2EE8               	decfsz	wreg,f,c
  3765  00680A  D7FE               	bra	u13137
  3766  00680C  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  3767  00680E  D7FC               	bra	u13137
  3768                           
  3769                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
  3770  006810  0E0C               	movlw	low i2c_display_init@init_sequence
  3771  006812  6E06               	movwf	__i2c_write@data,c
  3772  006814  0E00               	movlw	high i2c_display_init@init_sequence
  3773  006816  6E07               	movwf	__i2c_write@data+1,c
  3774  006818  0E09               	movlw	9
  3775  00681A  6E08               	movwf	__i2c_write@length,c
  3776  00681C  0E78               	movlw	120
  3777  00681E  EC36  F034         	call	__i2c_write
  3778  006822  0012               	return		;funcret
  3779  006824                     __end_of_i2c_display_init:
  3780                           	opt stack 0
  3781                           tblptru	equ	0xFF8
  3782                           tblptrh	equ	0xFF7
  3783                           tblptrl	equ	0xFF6
  3784                           tablat	equ	0xFF5
  3785                           intcon3	equ	0xFF0
  3786                           postinc0	equ	0xFEE
  3787                           wreg	equ	0xFE8
  3788                           postdec1	equ	0xFE5
  3789                           plusw1	equ	0xFE3
  3790                           fsr1h	equ	0xFE2
  3791                           fsr1l	equ	0xFE1
  3792                           plusw2	equ	0xFDB
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function __ui_encoder *****************
  3796 ;; Defined at:
  3797 ;;		line 24 in file "ui.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:    7
  3818 ;; This function calls:
  3819 ;;		_i2c_eeprom_writeByte
  3820 ;;		_reboot
  3821 ;;		_system_delay_ms
  3822 ;; This function is called by:
  3823 ;;		_ui_run
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text4
  3828  003E8A                     __ptext4:
  3829                           	opt stack 0
  3830  003E8A                     __ui_encoder:
  3831                           	opt stack 22
  3832                           
  3833                           ;ui.c: 26: switch(os.display_mode)
  3834                           
  3835                           ;incstack = 0
  3836  003E8A  D061               	goto	l1246
  3837  003E8C                     
  3838                           ;ui.c: 29: if(os.buttonCount>0)
  3839  003E8C  0100               	movlb	0	; () banked
  3840  003E8E  5161               	movf	(_os+1)& (0+255),w,b
  3841  003E90  0A80               	xorlw	128
  3842  003E92  0F7F               	addlw	-129
  3843  003E94  A0D8               	btfss	status,0,c
  3844  003E96  0012               	return	
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;ui.c: 30: {;ui.c: 31: os.buttonCount = 0;
  3848  003E98  0E00               	movlw	0
  3849  003E9A  6F61               	movwf	(_os+1)& (0+255),b
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;ui.c: 32: };ui.c: 33: break;
  3853  003E9C  0012               	return	
  3854  003E9E                     
  3855                           ; BSR set to: 0
  3856                           ;ui.c: 36: if(os.buttonCount>0)
  3857                           
  3858                           ; BSR set to: 0
  3859  003E9E  5161               	movf	(_os+1)& (0+255),w,b
  3860  003EA0  0A80               	xorlw	128
  3861  003EA2  0F7F               	addlw	-129
  3862  003EA4  A0D8               	btfss	status,0,c
  3863  003EA6  0012               	return	
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;ui.c: 37: {;ui.c: 38: os.buttonCount = 0;
  3867  003EA8  0E00               	movlw	0
  3868  003EAA  6F61               	movwf	(_os+1)& (0+255),b
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;ui.c: 39: };ui.c: 40: break;
  3872  003EAC  0012               	return	
  3873  003EAE                     
  3874                           ; BSR set to: 0
  3875                           ;ui.c: 43: if(os.buttonCount>0)
  3876                           
  3877                           ; BSR set to: 0
  3878  003EAE  5161               	movf	(_os+1)& (0+255),w,b
  3879  003EB0  0A80               	xorlw	128
  3880  003EB2  0F7F               	addlw	-129
  3881  003EB4  A0D8               	btfss	status,0,c
  3882  003EB6  0012               	return	
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;ui.c: 44: {;ui.c: 45: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  3886  003EB8  0E30               	movlw	48
  3887  003EBA  6F64               	movwf	(_os+4)& (0+255),b
  3888                           
  3889                           ;ui.c: 46: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  3890  003EBC  0E30               	movlw	48
  3891  003EBE  6F65               	movwf	(_os+5)& (0+255),b
  3892                           
  3893                           ;ui.c: 47: os.buttonCount = 0;
  3894  003EC0  0E00               	movlw	0
  3895  003EC2  6F61               	movwf	(_os+1)& (0+255),b
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;ui.c: 48: };ui.c: 49: break;
  3899  003EC4  0012               	return	
  3900  003EC6                     
  3901                           ; BSR set to: 0
  3902                           ;ui.c: 52: if(os.buttonCount>0)
  3903                           
  3904                           ; BSR set to: 0
  3905  003EC6  5161               	movf	(_os+1)& (0+255),w,b
  3906  003EC8  0A80               	xorlw	128
  3907  003ECA  0F7F               	addlw	-129
  3908  003ECC  A0D8               	btfss	status,0,c
  3909  003ECE  0012               	return	
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;ui.c: 53: {;ui.c: 54: os.buttonCount = 0;
  3913  003ED0  0E00               	movlw	0
  3914  003ED2  6F61               	movwf	(_os+1)& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;ui.c: 55: };ui.c: 56: break;
  3918  003ED4  0012               	return	
  3919  003ED6                     
  3920                           ; BSR set to: 0
  3921                           ;ui.c: 59: if(os.buttonCount>0)
  3922                           
  3923                           ; BSR set to: 0
  3924  003ED6  5161               	movf	(_os+1)& (0+255),w,b
  3925  003ED8  0A80               	xorlw	128
  3926  003EDA  0F7F               	addlw	-129
  3927  003EDC  A0D8               	btfss	status,0,c
  3928  003EDE  0012               	return	
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;ui.c: 60: {;ui.c: 61: os.buttonCount = 0;
  3932  003EE0  0E00               	movlw	0
  3933  003EE2  6F61               	movwf	(_os+1)& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;ui.c: 62: };ui.c: 63: break;
  3937  003EE4  0012               	return	
  3938  003EE6                     
  3939                           ; BSR set to: 0
  3940                           ;ui.c: 66: if(os.buttonCount>0)
  3941                           
  3942                           ; BSR set to: 0
  3943  003EE6  5161               	movf	(_os+1)& (0+255),w,b
  3944  003EE8  0A80               	xorlw	128
  3945  003EEA  0F7F               	addlw	-129
  3946  003EEC  A0D8               	btfss	status,0,c
  3947  003EEE  0012               	return	
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;ui.c: 67: {;ui.c: 68: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  3951  003EF0  0E60               	movlw	96
  3952  003EF2  6F64               	movwf	(_os+4)& (0+255),b
  3953                           
  3954                           ;ui.c: 69: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  3955  003EF4  0E60               	movlw	96
  3956  003EF6  6F65               	movwf	(_os+5)& (0+255),b
  3957                           
  3958                           ;ui.c: 70: os.buttonCount = 0;
  3959  003EF8  0E00               	movlw	0
  3960  003EFA  6F61               	movwf	(_os+1)& (0+255),b
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;ui.c: 71: };ui.c: 72: break;
  3964  003EFC  0012               	return	
  3965  003EFE                     
  3966                           ; BSR set to: 0
  3967                           ;ui.c: 75: if(os.buttonCount>0)
  3968                           
  3969                           ; BSR set to: 0
  3970  003EFE  5161               	movf	(_os+1)& (0+255),w,b
  3971  003F00  0A80               	xorlw	128
  3972  003F02  0F7F               	addlw	-129
  3973  003F04  A0D8               	btfss	status,0,c
  3974  003F06  0012               	return	
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;ui.c: 76: {;ui.c: 77: os.buttonCount = 0;
  3978  003F08  0E00               	movlw	0
  3979  003F0A  6F61               	movwf	(_os+1)& (0+255),b
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;ui.c: 78: };ui.c: 79: break;
  3983  003F0C  0012               	return	
  3984  003F0E                     
  3985                           ; BSR set to: 0
  3986                           ;ui.c: 82: if(os.buttonCount>0)
  3987                           
  3988                           ; BSR set to: 0
  3989  003F0E  5161               	movf	(_os+1)& (0+255),w,b
  3990  003F10  0A80               	xorlw	128
  3991  003F12  0F7F               	addlw	-129
  3992  003F14  A0D8               	btfss	status,0,c
  3993  003F16  0012               	return	
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;ui.c: 83: {;ui.c: 84: i2c_eeprom_writeByte(0x100, 0x78);
  3997  003F18  0E01               	movlw	1
  3998  003F1A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  3999  003F1C  0E00               	movlw	0
  4000  003F1E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4001  003F20  0E78               	movlw	120
  4002  003F22  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4003  003F24  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
  4004                           
  4005                           ;ui.c: 85: system_delay_ms(10);
  4006  003F28  0E0A               	movlw	10
  4007  003F2A  EC9B  F037         	call	_system_delay_ms
  4008                           
  4009                           ;ui.c: 86: reboot();
  4010  003F2E  EC43  F038         	call	_reboot	;wreg free
  4011                           
  4012                           ;ui.c: 87: };ui.c: 88: break;
  4013  003F32  0012               	return	
  4014  003F34                     
  4015                           ;ui.c: 91: if(os.buttonCount>0)
  4016  003F34  0100               	movlb	0	; () banked
  4017  003F36  5161               	movf	(_os+1)& (0+255),w,b
  4018  003F38  0A80               	xorlw	128
  4019  003F3A  0F7F               	addlw	-129
  4020  003F3C  A0D8               	btfss	status,0,c
  4021  003F3E  0012               	return	
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;ui.c: 92: {;ui.c: 93: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4025  003F40  0E10               	movlw	16
  4026  003F42  6F64               	movwf	(_os+4)& (0+255),b
  4027                           
  4028                           ;ui.c: 94: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4029  003F44  0E10               	movlw	16
  4030  003F46  6F65               	movwf	(_os+5)& (0+255),b
  4031                           
  4032                           ;ui.c: 95: os.buttonCount = 0;
  4033  003F48  0E00               	movlw	0
  4034  003F4A  6F61               	movwf	(_os+1)& (0+255),b
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;ui.c: 98: }
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;ui.c: 96: };ui.c: 97: break;
  4041  003F4C  0012               	return	
  4042  003F4E                     l1246:
  4043                           
  4044                           ; BSR set to: 0
  4045  003F4E  0100               	movlb	0	; () banked
  4046  003F50  5165               	movf	(_os+5)& (0+255),w,b
  4047                           
  4048                           ; Switch size 1, requested type "space"
  4049                           ; Number of cases is 9, Range of values is 0 to 144
  4050                           ; switch strategies available:
  4051                           ; Name         Instructions Cycles
  4052                           ; simple_byte           28    15 (average)
  4053                           ;	Chosen strategy is simple_byte
  4054  003F52  0A00               	xorlw	0	; case 0
  4055  003F54  B4D8               	btfsc	status,2,c
  4056  003F56  D79A               	goto	l1247
  4057  003F58  0A10               	xorlw	16	; case 16
  4058  003F5A  B4D8               	btfsc	status,2,c
  4059  003F5C  D7A0               	goto	l1250
  4060  003F5E  0A30               	xorlw	48	; case 32
  4061  003F60  B4D8               	btfsc	status,2,c
  4062  003F62  D7A5               	goto	l1252
  4063  003F64  0A10               	xorlw	16	; case 48
  4064  003F66  B4D8               	btfsc	status,2,c
  4065  003F68  D7AE               	goto	l1254
  4066  003F6A  0A70               	xorlw	112	; case 64
  4067  003F6C  B4D8               	btfsc	status,2,c
  4068  003F6E  D7BB               	goto	l1258
  4069  003F70  0A10               	xorlw	16	; case 80
  4070  003F72  B4D8               	btfsc	status,2,c
  4071  003F74  D7B0               	goto	l1256
  4072  003F76  0A30               	xorlw	48	; case 96
  4073  003F78  B4D8               	btfsc	status,2,c
  4074  003F7A  D7C1               	goto	l1260
  4075  003F7C  0A10               	xorlw	16	; case 112
  4076  003F7E  B4D8               	btfsc	status,2,c
  4077  003F80  D7C6               	goto	l1262
  4078  003F82  0AE0               	xorlw	224	; case 144
  4079  003F84  A4D8               	btfss	status,2,c
  4080  003F86  0012               	return	
  4081  003F88  D7D5               	goto	l1264
  4082  003F8A                     __end_of__ui_encoder:
  4083                           	opt stack 0
  4084                           tblptru	equ	0xFF8
  4085                           tblptrh	equ	0xFF7
  4086                           tblptrl	equ	0xFF6
  4087                           tablat	equ	0xFF5
  4088                           intcon3	equ	0xFF0
  4089                           postinc0	equ	0xFEE
  4090                           wreg	equ	0xFE8
  4091                           postdec1	equ	0xFE5
  4092                           plusw1	equ	0xFE3
  4093                           fsr1h	equ	0xFE2
  4094                           fsr1l	equ	0xFE1
  4095                           plusw2	equ	0xFDB
  4096                           status	equ	0xFD8
  4097                           
  4098 ;; *************** function _timer_pseudo_isr *****************
  4099 ;; Defined at:
  4100 ;;		line 20 in file "os.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;		None
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  1    wreg      void 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;Total ram usage:        0 bytes
  4119 ;; Hardware stack levels used:    1
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text5
  4128  006C1E                     __ptext5:
  4129                           	opt stack 0
  4130  006C1E                     _timer_pseudo_isr:
  4131                           	opt stack 30
  4132                           
  4133                           ;os.c: 23: if(INTCONbits.T0IF==0)
  4134                           
  4135                           ;incstack = 0
  4136  006C1E  A4F2               	btfss	intcon,2,c	;volatile
  4137  006C20  0012               	return	
  4138                           
  4139                           ;os.c: 26: };os.c: 30: TMR0H = 0xD1;
  4140                           
  4141                           ;os.c: 24: {;os.c: 25: return;
  4142  006C22  0ED1               	movlw	209
  4143  006C24  6ED7               	movwf	4055,c	;volatile
  4144                           
  4145                           ;os.c: 31: TMR0L = 0x20;
  4146  006C26  0E20               	movlw	32
  4147  006C28  6ED6               	movwf	4054,c	;volatile
  4148                           
  4149                           ;os.c: 32: ++os.timeSlot;
  4150  006C2A  0100               	movlb	0	; () banked
  4151  006C2C  2B62               	incf	(_os+2)& (0+255),f,b
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;os.c: 34: os.done = 0;
  4155  006C2E  0E00               	movlw	0
  4156  006C30  6F63               	movwf	(_os+3)& (0+255),b
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;os.c: 35: INTCONbits.T0IF = 0;
  4160  006C32  94F2               	bcf	intcon,2,c	;volatile
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;os.c: 38: if(INTCON3bits.INT1IF)
  4164  006C34  A0F0               	btfss	intcon3,0,c	;volatile
  4165  006C36  D002               	goto	l1039
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;os.c: 39: {;os.c: 40: ++os.buttonCount;
  4169  006C38  2B61               	incf	(_os+1)& (0+255),f,b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;os.c: 41: INTCON3bits.INT1IF = 0;
  4173  006C3A  90F0               	bcf	intcon3,0,c	;volatile
  4174  006C3C                     l1039:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;os.c: 42: };os.c: 45: if(INTCON3bits.INT2IF)
  4178                           
  4179                           ; BSR set to: 0
  4180  006C3C  A2F0               	btfss	intcon3,1,c	;volatile
  4181  006C3E  D003               	goto	l1040
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;os.c: 46: {;os.c: 47: if(!PORTEbits.RE0)
  4185  006C40  A084               	btfss	3972,0,c	;volatile
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;os.c: 48: {;os.c: 49: --os.encoderCount;
  4189  006C42  0760               	decf	_os& (0+255),f,b
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;os.c: 50: };os.c: 51: INTCON3bits.INT2IF = 0;
  4193                           
  4194                           ; BSR set to: 0
  4195  006C44  92F0               	bcf	intcon3,1,c	;volatile
  4196  006C46                     l1040:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;os.c: 52: };os.c: 53: if(INTCON3bits.INT3IF)
  4200                           
  4201                           ; BSR set to: 0
  4202  006C46  A4F0               	btfss	intcon3,2,c	;volatile
  4203  006C48  0012               	return	
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;os.c: 54: {;os.c: 55: if(!PORTEbits.RE2)
  4207  006C4A  A484               	btfss	3972,2,c	;volatile
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;os.c: 56: {;os.c: 57: ++os.encoderCount;
  4211  006C4C  2B60               	incf	_os& (0+255),f,b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;os.c: 58: };os.c: 59: INTCON3bits.INT3IF = 0;
  4215                           
  4216                           ; BSR set to: 0
  4217  006C4E  94F0               	bcf	intcon3,2,c	;volatile
  4218  006C50  0012               	return	
  4219  006C52                     __end_of_timer_pseudo_isr:
  4220                           	opt stack 0
  4221                           tblptru	equ	0xFF8
  4222                           tblptrh	equ	0xFF7
  4223                           tblptrl	equ	0xFF6
  4224                           tablat	equ	0xFF5
  4225                           intcon	equ	0xFF2
  4226                           intcon3	equ	0xFF0
  4227                           postinc0	equ	0xFEE
  4228                           wreg	equ	0xFE8
  4229                           postdec1	equ	0xFE5
  4230                           plusw1	equ	0xFE3
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           plusw2	equ	0xFDB
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function _system_minimal_init_undo *****************
  4237 ;; Defined at:
  4238 ;;		line 154 in file "os.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		None
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;Total ram usage:        0 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_main
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text6
  4266  00720C                     __ptext6:
  4267                           	opt stack 0
  4268  00720C                     _system_minimal_init_undo:
  4269                           	opt stack 30
  4270                           
  4271                           ;os.c: 160: TRISAbits.TRISA1 = 1;
  4272                           
  4273                           ;incstack = 0
  4274  00720C  8292               	bsf	3986,1,c	;volatile
  4275                           
  4276                           ;os.c: 161: ANCON0bits.PCFG1 = 0;
  4277  00720E  010F               	movlb	15	; () banked
  4278  007210  9348               	bcf	72,1,b	;volatile
  4279                           
  4280                           ; BSR set to: 15
  4281  007212  0012               	return		;funcret
  4282  007214                     __end_of_system_minimal_init_undo:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           tblptrh	equ	0xFF7
  4286                           tblptrl	equ	0xFF6
  4287                           tablat	equ	0xFF5
  4288                           intcon	equ	0xFF2
  4289                           intcon3	equ	0xFF0
  4290                           postinc0	equ	0xFEE
  4291                           wreg	equ	0xFE8
  4292                           postdec1	equ	0xFE5
  4293                           plusw1	equ	0xFE3
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           plusw2	equ	0xFDB
  4297                           status	equ	0xFD8
  4298                           
  4299 ;; *************** function _system_minimal_init *****************
  4300 ;; Defined at:
  4301 ;;		line 140 in file "os.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;                  1    wreg      void 
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 0/0
  4312 ;;		On exit  : 0/0
  4313 ;;		Unchanged: 0/0
  4314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    1
  4322 ;; This function calls:
  4323 ;;		_i2c_init
  4324 ;;		_system_delay_ms
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text7
  4331  0070F8                     __ptext7:
  4332                           	opt stack 0
  4333  0070F8                     _system_minimal_init:
  4334                           	opt stack 29
  4335                           
  4336                           ;os.c: 143: TRISAbits.TRISA1 = 1;
  4337                           
  4338                           ; BSR set to: 15
  4339                           ;incstack = 0
  4340  0070F8  8292               	bsf	3986,1,c	;volatile
  4341                           
  4342                           ;os.c: 144: ANCON0bits.PCFG1 = 1;
  4343  0070FA  010F               	movlb	15	; () banked
  4344  0070FC  8348               	bsf	72,1,b	;volatile
  4345                           
  4346                           ; BSR set to: 15
  4347                           ;os.c: 147: i2c_init();
  4348  0070FE  EC0C  F038         	call	_i2c_init	;wreg free
  4349                           
  4350                           ;os.c: 150: system_delay_ms(50);
  4351  007102  0E32               	movlw	50
  4352  007104  EC9B  F037         	call	_system_delay_ms
  4353  007108  0012               	return		;funcret
  4354  00710A                     __end_of_system_minimal_init:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           intcon	equ	0xFF2
  4361                           intcon3	equ	0xFF0
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           plusw1	equ	0xFE3
  4366                           fsr1h	equ	0xFE2
  4367                           fsr1l	equ	0xFE1
  4368                           plusw2	equ	0xFDB
  4369                           status	equ	0xFD8
  4370                           
  4371 ;; *************** function _i2c_init *****************
  4372 ;; Defined at:
  4373 ;;		line 24 in file "i2c.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;		None
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;		None
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      void 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;Total ram usage:        0 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; This function calls:
  4394 ;;		Nothing
  4395 ;; This function is called by:
  4396 ;;		_system_minimal_init
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text8
  4401  007018                     __ptext8:
  4402                           	opt stack 0
  4403  007018                     _i2c_init:
  4404                           	opt stack 29
  4405                           
  4406                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  4407                           
  4408                           ;incstack = 0
  4409  007018  8A93               	bsf	3987,5,c	;volatile
  4410                           
  4411                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  4412  00701A  8893               	bsf	3987,4,c	;volatile
  4413                           
  4414                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  4415  00701C  9EC7               	bcf	4039,7,c	;volatile
  4416                           
  4417                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  4418  00701E  9CC7               	bcf	4039,6,c	;volatile
  4419                           
  4420                           ;i2c.c: 31: SSP1ADD = 119;
  4421  007020  0E77               	movlw	119
  4422  007022  6EC8               	movwf	4040,c	;volatile
  4423                           
  4424                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  4425  007024  9EC6               	bcf	4038,7,c	;volatile
  4426                           
  4427                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  4428  007026  9CC6               	bcf	4038,6,c	;volatile
  4429                           
  4430                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  4431  007028  50C6               	movf	4038,w,c	;volatile
  4432  00702A  0BF0               	andlw	-16
  4433  00702C  0908               	iorlw	8
  4434  00702E  6EC6               	movwf	4038,c	;volatile
  4435                           
  4436                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  4437  007030  8AC6               	bsf	4038,5,c	;volatile
  4438  007032  0012               	return		;funcret
  4439  007034                     __end_of_i2c_init:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           tblptrh	equ	0xFF7
  4443                           tblptrl	equ	0xFF6
  4444                           tablat	equ	0xFF5
  4445                           intcon	equ	0xFF2
  4446                           intcon3	equ	0xFF0
  4447                           postinc0	equ	0xFEE
  4448                           wreg	equ	0xFE8
  4449                           postdec1	equ	0xFE5
  4450                           plusw1	equ	0xFE3
  4451                           fsr1h	equ	0xFE2
  4452                           fsr1l	equ	0xFE1
  4453                           plusw2	equ	0xFDB
  4454                           status	equ	0xFD8
  4455                           
  4456 ;; *************** function _system_full_init *****************
  4457 ;; Defined at:
  4458 ;;		line 165 in file "os.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;		None
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    7
  4479 ;; This function calls:
  4480 ;;		__system_encoder_init
  4481 ;;		__system_timer0_init
  4482 ;;		_fat_init
  4483 ;;		_flash_init
  4484 ;;		_ui_init
  4485 ;; This function is called by:
  4486 ;;		_main
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text9
  4491  0068FA                     __ptext9:
  4492                           	opt stack 0
  4493  0068FA                     _system_full_init:
  4494                           	opt stack 23
  4495                           
  4496                           ;os.c: 172: TRISAbits.TRISA3 = 0;
  4497                           
  4498                           ;incstack = 0
  4499  0068FA  9692               	bcf	3986,3,c	;volatile
  4500                           
  4501                           ;os.c: 173: LATAbits.LA3 = 0;
  4502  0068FC  9689               	bcf	3977,3,c	;volatile
  4503                           
  4504                           ;os.c: 176: TRISCbits.TRISC1 = 0;
  4505  0068FE  9294               	bcf	3988,1,c	;volatile
  4506                           
  4507                           ;os.c: 177: LATCbits.LC1 = 1;
  4508  006900  828B               	bsf	3979,1,c	;volatile
  4509                           
  4510                           ;os.c: 180: TRISCbits.TRISC6 = 0;
  4511  006902  9C94               	bcf	3988,6,c	;volatile
  4512                           
  4513                           ;os.c: 181: LATCbits.LC6 = 0;
  4514  006904  9C8B               	bcf	3979,6,c	;volatile
  4515                           
  4516                           ;os.c: 184: TRISAbits.TRISA5 = 0;
  4517  006906  9A92               	bcf	3986,5,c	;volatile
  4518                           
  4519                           ;os.c: 185: LATAbits.LA5 = 0;
  4520  006908  9A89               	bcf	3977,5,c	;volatile
  4521                           
  4522                           ;os.c: 188: TRISDbits.TRISD5 = 1;
  4523  00690A  8A95               	bsf	3989,5,c	;volatile
  4524                           
  4525                           ;os.c: 189: TRISDbits.TRISD4 = 0;
  4526  00690C  9895               	bcf	3989,4,c	;volatile
  4527                           
  4528                           ;os.c: 190: TRISDbits.TRISD6 = 0;
  4529  00690E  9C95               	bcf	3989,6,c	;volatile
  4530                           
  4531                           ;os.c: 191: TRISDbits.TRISD7 = 0;
  4532  006910  9E95               	bcf	3989,7,c	;volatile
  4533                           
  4534                           ;os.c: 192: LATDbits.LD7 = 1;
  4535  006912  8E8C               	bsf	3980,7,c	;volatile
  4536                           
  4537                           ;os.c: 195: TRISEbits.TRISE2 = 1;
  4538  006914  8496               	bsf	3990,2,c	;volatile
  4539                           
  4540                           ;os.c: 196: TRISEbits.TRISE0 = 1;
  4541  006916  8096               	bsf	3990,0,c	;volatile
  4542                           
  4543                           ;os.c: 197: TRISEbits.TRISE1 = 1;
  4544  006918  8296               	bsf	3990,1,c	;volatile
  4545                           
  4546                           ;os.c: 198: TRISAbits.TRISA0 = 1;
  4547  00691A  8092               	bsf	3986,0,c	;volatile
  4548                           
  4549                           ;os.c: 199: TRISAbits.TRISA2 = 1;
  4550  00691C  8492               	bsf	3986,2,c	;volatile
  4551                           
  4552                           ;os.c: 202: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4553  00691E  0E10               	movlw	16
  4554  006920  0100               	movlb	0	; () banked
  4555  006922  6F64               	movwf	(_os+4)& (0+255),b
  4556                           
  4557                           ;os.c: 203: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4558  006924  0E00               	movlw	0
  4559  006926  6F65               	movwf	(_os+5)& (0+255),b
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;os.c: 206: flash_init();
  4563  006928  ECC1  F038         	call	_flash_init	;wreg free
  4564                           
  4565                           ;os.c: 209: fat_init();
  4566  00692C  ECB1  F038         	call	_fat_init	;wreg free
  4567                           
  4568                           ;os.c: 213: _system_encoder_init();
  4569  006930  EC82  F035         	call	__system_encoder_init	;wreg free
  4570                           
  4571                           ;os.c: 216: ui_init();
  4572  006934  EC85  F038         	call	_ui_init	;wreg free
  4573                           
  4574                           ;os.c: 219: _system_timer0_init();
  4575  006938  ECCF  F037         	call	__system_timer0_init	;wreg free
  4576  00693C  0012               	return		;funcret
  4577  00693E                     __end_of_system_full_init:
  4578                           	opt stack 0
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           intcon	equ	0xFF2
  4584                           intcon3	equ	0xFF0
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postdec1	equ	0xFE5
  4588                           plusw1	equ	0xFE3
  4589                           fsr1h	equ	0xFE2
  4590                           fsr1l	equ	0xFE1
  4591                           plusw2	equ	0xFDB
  4592                           status	equ	0xFD8
  4593                           
  4594 ;; *************** function _ui_init *****************
  4595 ;; Defined at:
  4596 ;;		line 112 in file "ui.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_system_full_init
  4620 ;;		_ui_run
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text10
  4625  00710A                     __ptext10:
  4626                           	opt stack 0
  4627  00710A                     _ui_init:
  4628                           	opt stack 29
  4629                           
  4630                           ;ui.c: 114: system_ui_inactive_count = 0;
  4631                           
  4632                           ;incstack = 0
  4633  00710A  0E00               	movlw	0
  4634  00710C  0101               	movlb	1	; () banked
  4635  00710E  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4636  007110  0E00               	movlw	0
  4637  007112  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  4638                           
  4639                           ;ui.c: 115: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4640  007114  0E01               	movlw	1
  4641  007116  0100               	movlb	0	; () banked
  4642  007118  6F97               	movwf	_userInterfaceStatus& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645  00711A  0012               	return		;funcret
  4646  00711C                     __end_of_ui_init:
  4647                           	opt stack 0
  4648                           tblptru	equ	0xFF8
  4649                           tblptrh	equ	0xFF7
  4650                           tblptrl	equ	0xFF6
  4651                           tablat	equ	0xFF5
  4652                           intcon	equ	0xFF2
  4653                           intcon3	equ	0xFF0
  4654                           postinc0	equ	0xFEE
  4655                           wreg	equ	0xFE8
  4656                           postdec1	equ	0xFE5
  4657                           plusw1	equ	0xFE3
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           plusw2	equ	0xFDB
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _flash_init *****************
  4664 ;; Defined at:
  4665 ;;		line 361 in file "flash.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;Total ram usage:        0 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    4
  4686 ;; This function calls:
  4687 ;;		__flash_set_page_size
  4688 ;;		_spi_init
  4689 ;; This function is called by:
  4690 ;;		_system_full_init
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text11
  4695  007182                     __ptext11:
  4696                           	opt stack 0
  4697  007182                     _flash_init:
  4698                           	opt stack 25
  4699                           
  4700                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;incstack = 0
  4704  007182  0E00               	movlw	0
  4705  007184  EC46  F035         	call	_spi_init
  4706                           
  4707                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  4708  007188  0E00               	movlw	0
  4709  00718A  EC20  F02E         	call	__flash_set_page_size
  4710  00718E  0012               	return		;funcret
  4711  007190                     __end_of_flash_init:
  4712                           	opt stack 0
  4713                           tblptru	equ	0xFF8
  4714                           tblptrh	equ	0xFF7
  4715                           tblptrl	equ	0xFF6
  4716                           tablat	equ	0xFF5
  4717                           intcon	equ	0xFF2
  4718                           intcon3	equ	0xFF0
  4719                           postinc0	equ	0xFEE
  4720                           wreg	equ	0xFE8
  4721                           postdec1	equ	0xFE5
  4722                           plusw1	equ	0xFE3
  4723                           fsr1h	equ	0xFE2
  4724                           fsr1l	equ	0xFE1
  4725                           plusw2	equ	0xFDB
  4726                           status	equ	0xFD8
  4727                           
  4728 ;; *************** function _spi_init *****************
  4729 ;; Defined at:
  4730 ;;		line 89 in file "spi.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  configuratio    1    wreg     enum E6746
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  configuratio    1    3[COMRAM] enum E6746
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      void 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2, status,0, cstack
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;Total ram usage:        1 bytes
  4749 ;; Hardware stack levels used:    1
  4750 ;; Hardware stack levels required when called:    1
  4751 ;; This function calls:
  4752 ;;		__spi_init
  4753 ;; This function is called by:
  4754 ;;		_flash_init
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text12
  4759  006A8C                     __ptext12:
  4760                           	opt stack 0
  4761  006A8C                     _spi_init:
  4762                           	opt stack 27
  4763                           
  4764                           ;incstack = 0
  4765                           ;spi_init@configuration stored from wreg
  4766  006A8C  6E04               	movwf	spi_init@configuration,c
  4767                           
  4768                           ;spi.c: 91: switch(configuration)
  4769  006A8E  D012               	goto	l2784
  4770  006A90                     
  4771                           ;spi.c: 94: _spi_init(config_internal);
  4772  006A90  C154  F001         	movff	_config_internal,__spi_init@details
  4773  006A94  C155  F002         	movff	_config_internal+1,__spi_init@details+1
  4774  006A98  C156  F003         	movff	_config_internal+2,__spi_init@details+2
  4775  006A9C  ECBC  F035         	call	__spi_init	;wreg free
  4776                           
  4777                           ;spi.c: 95: break;
  4778  006AA0  D010               	goto	l2786
  4779  006AA2                     
  4780                           ;spi.c: 98: _spi_init(config_external);
  4781  006AA2  C151  F001         	movff	_config_external,__spi_init@details
  4782  006AA6  C152  F002         	movff	_config_external+1,__spi_init@details+1
  4783  006AAA  C153  F003         	movff	_config_external+2,__spi_init@details+2
  4784  006AAE  ECBC  F035         	call	__spi_init	;wreg free
  4785                           
  4786                           ;spi.c: 100: }
  4787                           
  4788                           ;spi.c: 99: break;
  4789  006AB2  D007               	goto	l2786
  4790  006AB4                     l2784:
  4791  006AB4  5004               	movf	spi_init@configuration,w,c
  4792                           
  4793                           ; Switch size 1, requested type "space"
  4794                           ; Number of cases is 2, Range of values is 0 to 1
  4795                           ; switch strategies available:
  4796                           ; Name         Instructions Cycles
  4797                           ; simple_byte            7     4 (average)
  4798                           ;	Chosen strategy is simple_byte
  4799  006AB6  0A00               	xorlw	0	; case 0
  4800  006AB8  B4D8               	btfsc	status,2,c
  4801  006ABA  D7EA               	goto	l2785
  4802  006ABC  0A01               	xorlw	1	; case 1
  4803  006ABE  B4D8               	btfsc	status,2,c
  4804  006AC0  D7F0               	goto	l2787
  4805  006AC2                     l2786:
  4806                           
  4807                           ;spi.c: 102: active_configuration = configuration;
  4808  006AC2  C004  F175         	movff	spi_init@configuration,_active_configuration
  4809  006AC6  0012               	return		;funcret
  4810  006AC8                     __end_of_spi_init:
  4811                           	opt stack 0
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           intcon	equ	0xFF2
  4817                           intcon3	equ	0xFF0
  4818                           postinc0	equ	0xFEE
  4819                           wreg	equ	0xFE8
  4820                           postdec1	equ	0xFE5
  4821                           plusw1	equ	0xFE3
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           plusw2	equ	0xFDB
  4825                           status	equ	0xFD8
  4826                           
  4827 ;; *************** function __spi_init *****************
  4828 ;; Defined at:
  4829 ;;		line 24 in file "spi.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  details         3    0[COMRAM] struct .
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4843 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;Total ram usage:        3 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_spi_init
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           	psect	text13
  4857  006B78                     __ptext13:
  4858                           	opt stack 0
  4859  006B78                     __spi_init:
  4860                           	opt stack 27
  4861                           
  4862                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  4863                           
  4864                           ;incstack = 0
  4865  006B78  0E55               	movlw	85
  4866  006B7A  6EA7               	movwf	4007,c	;volsfr
  4867  006B7C  0EAA               	movlw	170
  4868  006B7E  6EA7               	movwf	4007,c	;volsfr
  4869  006B80  010E               	movlb	14	; () banked
  4870  006B82  91BF               	bcf	191,0,b	;volatile
  4871                           
  4872                           ;spi.c: 31: RPINR21 = 22;
  4873  006B84  0E16               	movlw	22
  4874  006B86  6FFC               	movwf	252,b	;volatile
  4875                           
  4876                           ;spi.c: 32: RPOR21 = 10;
  4877  006B88  0E0A               	movlw	10
  4878  006B8A  6FD5               	movwf	213,b	;volatile
  4879                           
  4880                           ;spi.c: 34: RPOR23 = 11;
  4881  006B8C  0E0B               	movlw	11
  4882  006B8E  6FD7               	movwf	215,b	;volatile
  4883                           
  4884                           ;spi.c: 35: RPINR22 = 23;
  4885  006B90  0E17               	movlw	23
  4886  006B92  6FFD               	movwf	253,b	;volatile
  4887                           
  4888                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  4889  006B94  0E55               	movlw	85
  4890  006B96  6EA7               	movwf	4007,c	;volsfr
  4891  006B98  0EAA               	movlw	170
  4892  006B9A  6EA7               	movwf	4007,c	;volsfr
  4893                           
  4894                           ; BSR set to: 14
  4895  006B9C  81BF               	bsf	191,0,b	;volatile
  4896                           
  4897                           ; BSR set to: 14
  4898                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  4899  006B9E  8E73               	bsf	3955,7,c	;volatile
  4900                           
  4901                           ; BSR set to: 14
  4902                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  4903  006BA0  8C73               	bsf	3955,6,c	;volatile
  4904                           
  4905                           ; BSR set to: 14
  4906                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  4907  006BA2  9872               	bcf	3954,4,c	;volatile
  4908                           
  4909                           ; BSR set to: 14
  4910                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  4911  006BA4  9072               	bcf	3954,0,c	;volatile
  4912  006BA6  9272               	bcf	3954,1,c	;volatile
  4913  006BA8  9472               	bcf	3954,2,c	;volatile
  4914  006BAA  9672               	bcf	3954,3,c	;volatile
  4915                           
  4916                           ; BSR set to: 14
  4917                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  4918  006BAC  8A72               	bsf	3954,5,c	;volatile
  4919                           
  4920                           ; BSR set to: 14
  4921  006BAE  0012               	return		;funcret
  4922  006BB0                     __end_of__spi_init:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           intcon	equ	0xFF2
  4929                           intcon3	equ	0xFF0
  4930                           postinc0	equ	0xFEE
  4931                           wreg	equ	0xFE8
  4932                           postdec1	equ	0xFE5
  4933                           plusw1	equ	0xFE3
  4934                           fsr1h	equ	0xFE2
  4935                           fsr1l	equ	0xFE1
  4936                           plusw2	equ	0xFDB
  4937                           status	equ	0xFD8
  4938                           
  4939 ;; *************** function __flash_set_page_size *****************
  4940 ;; Defined at:
  4941 ;;		line 99 in file "flash.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  size            1    wreg     enum E6888
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  size            1   23[COMRAM] enum E6888
  4946 ;;  command         4   19[COMRAM] unsigned char [4]
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;Total ram usage:        5 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:    3
  4963 ;; This function calls:
  4964 ;;		__flash_is_busy
  4965 ;;		_memcpy
  4966 ;;		_spi_tx
  4967 ;; This function is called by:
  4968 ;;		_flash_init
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text14
  4973  005C40                     __ptext14:
  4974                           	opt stack 0
  4975  005C40                     __flash_set_page_size:
  4976                           	opt stack 25
  4977                           
  4978                           ; BSR set to: 14
  4979                           ;incstack = 0
  4980                           ;__flash_set_page_size@size stored from wreg
  4981  005C40  6E18               	movwf	__flash_set_page_size@size,c
  4982  005C42                     
  4983                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  4984  005C42  ECBE  F037         	call	__flash_is_busy	;wreg free
  4985  005C46  0900               	iorlw	0
  4986  005C48  A4D8               	btfss	status,2,c
  4987  005C4A  D7FB               	goto	l12771
  4988                           
  4989                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  4990  005C4C  5018               	movf	__flash_set_page_size@size,w,c
  4991  005C4E  A4D8               	btfss	status,2,c
  4992  005C50  D013               	goto	l1728
  4993                           
  4994                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  4995  005C52  0E14               	movlw	low __flash_set_page_size@command
  4996  005C54  6E01               	movwf	memcpy@d1,c
  4997  005C56  0E00               	movlw	high __flash_set_page_size@command
  4998  005C58  6E02               	movwf	memcpy@d1+1,c
  4999  005C5A  0EC3               	movlw	low _flash_command_pagesize_512
  5000  005C5C  6E03               	movwf	memcpy@s1,c
  5001  005C5E  0E8F               	movlw	high _flash_command_pagesize_512
  5002  005C60  6E04               	movwf	memcpy@s1+1,c
  5003  005C62  5003               	movf	memcpy@s1,w,c
  5004  005C64  1004               	iorwf	memcpy@s1+1,w,c
  5005  005C66  A4D8               	btfss	status,2,c
  5006  005C68  0E00               	movlw	low (__mediumconst shr (0+16))
  5007  005C6A  6E05               	movwf	memcpy@s1+2,c
  5008  005C6C  0E00               	movlw	0
  5009  005C6E  6E07               	movwf	memcpy@n+1,c
  5010  005C70  0E04               	movlw	4
  5011  005C72  6E06               	movwf	memcpy@n,c
  5012  005C74  EC1C  F030         	call	_memcpy	;wreg free
  5013  005C78                     l1728:
  5014                           
  5015                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  5016  005C78  0418               	decf	__flash_set_page_size@size,w,c
  5017  005C7A  A4D8               	btfss	status,2,c
  5018  005C7C  D013               	goto	l1729
  5019                           
  5020                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  5021  005C7E  0E14               	movlw	low __flash_set_page_size@command
  5022  005C80  6E01               	movwf	memcpy@d1,c
  5023  005C82  0E00               	movlw	high __flash_set_page_size@command
  5024  005C84  6E02               	movwf	memcpy@d1+1,c
  5025  005C86  0EBF               	movlw	low _flash_command_pagesize_528
  5026  005C88  6E03               	movwf	memcpy@s1,c
  5027  005C8A  0E8F               	movlw	high _flash_command_pagesize_528
  5028  005C8C  6E04               	movwf	memcpy@s1+1,c
  5029  005C8E  5003               	movf	memcpy@s1,w,c
  5030  005C90  1004               	iorwf	memcpy@s1+1,w,c
  5031  005C92  A4D8               	btfss	status,2,c
  5032  005C94  0E00               	movlw	low (__mediumconst shr (0+16))
  5033  005C96  6E05               	movwf	memcpy@s1+2,c
  5034  005C98  0E00               	movlw	0
  5035  005C9A  6E07               	movwf	memcpy@n+1,c
  5036  005C9C  0E04               	movlw	4
  5037  005C9E  6E06               	movwf	memcpy@n,c
  5038  005CA0  EC1C  F030         	call	_memcpy	;wreg free
  5039  005CA4                     l1729:
  5040                           
  5041                           ;flash.c: 113: spi_tx(command, 4);
  5042  005CA4  0E14               	movlw	low __flash_set_page_size@command
  5043  005CA6  6E01               	movwf	spi_tx@data,c
  5044  005CA8  0E00               	movlw	high __flash_set_page_size@command
  5045  005CAA  6E02               	movwf	spi_tx@data+1,c
  5046  005CAC  0E00               	movlw	0
  5047  005CAE  6E04               	movwf	spi_tx@length+1,c
  5048  005CB0  0E04               	movlw	4
  5049  005CB2  6E03               	movwf	spi_tx@length,c
  5050  005CB4  ECF9  F031         	call	_spi_tx	;wreg free
  5051  005CB8  0012               	return		;funcret
  5052  005CBA                     __end_of__flash_set_page_size:
  5053                           	opt stack 0
  5054                           tblptru	equ	0xFF8
  5055                           tblptrh	equ	0xFF7
  5056                           tblptrl	equ	0xFF6
  5057                           tablat	equ	0xFF5
  5058                           intcon	equ	0xFF2
  5059                           intcon3	equ	0xFF0
  5060                           postinc0	equ	0xFEE
  5061                           wreg	equ	0xFE8
  5062                           postdec1	equ	0xFE5
  5063                           plusw1	equ	0xFE3
  5064                           fsr1h	equ	0xFE2
  5065                           fsr1l	equ	0xFE1
  5066                           plusw2	equ	0xFDB
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _fat_init *****************
  5070 ;; Defined at:
  5071 ;;		line 1382 in file "fat16.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    6
  5092 ;; This function calls:
  5093 ;;		_fat_format
  5094 ;;		_fat_get_format_status
  5095 ;; This function is called by:
  5096 ;;		_system_full_init
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text15
  5101  007162                     __ptext15:
  5102                           	opt stack 0
  5103  007162                     _fat_init:
  5104                           	opt stack 23
  5105                           
  5106                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5107                           
  5108                           ;incstack = 0
  5109  007162  EC78  F029         	call	_fat_get_format_status	;wreg free
  5110  007166  0900               	iorlw	0
  5111  007168  A4D8               	btfss	status,2,c
  5112  00716A  0012               	return	
  5113                           
  5114                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  5115  00716C  EC1E  F00F         	call	_fat_format	;wreg free
  5116  007170  0012               	return	
  5117  007172                     __end_of_fat_init:
  5118                           	opt stack 0
  5119                           tblptru	equ	0xFF8
  5120                           tblptrh	equ	0xFF7
  5121                           tblptrl	equ	0xFF6
  5122                           tablat	equ	0xFF5
  5123                           intcon	equ	0xFF2
  5124                           intcon3	equ	0xFF0
  5125                           postinc0	equ	0xFEE
  5126                           wreg	equ	0xFE8
  5127                           postdec1	equ	0xFE5
  5128                           plusw1	equ	0xFE3
  5129                           fsr1h	equ	0xFE2
  5130                           fsr1l	equ	0xFE1
  5131                           plusw2	equ	0xFDB
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function _fat_get_format_status *****************
  5135 ;; Defined at:
  5136 ;;		line 1292 in file "fat16.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;		None
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  cntr            2   45[COMRAM] unsigned int 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      enum E6862
  5143 ;; Registers used:
  5144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;Total ram usage:        4 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    5
  5157 ;; This function calls:
  5158 ;;		__get_fbr
  5159 ;;		__get_mbr
  5160 ;;		_flash_sector_read
  5161 ;; This function is called by:
  5162 ;;		_fat_init
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text16
  5167  0052F0                     __ptext16:
  5168                           	opt stack 0
  5169  0052F0                     _fat_get_format_status:
  5170                           	opt stack 23
  5171                           
  5172                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  5173                           
  5174                           ;incstack = 0
  5175  0052F0  0E00               	movlw	0
  5176  0052F2  6E29               	movwf	flash_sector_read@page+1,c
  5177  0052F4  0E00               	movlw	0
  5178  0052F6  6E28               	movwf	flash_sector_read@page,c
  5179  0052F8  0EC4               	movlw	low _buffer
  5180  0052FA  6E2A               	movwf	flash_sector_read@data,c
  5181  0052FC  0E02               	movlw	high _buffer
  5182  0052FE  6E2B               	movwf	flash_sector_read@data+1,c
  5183  005300  EC62  F037         	call	_flash_sector_read	;wreg free
  5184                           
  5185                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  5186  005304  0E00               	movlw	0
  5187  005306  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5188  005308  0E00               	movlw	0
  5189  00530A  6E2E               	movwf	fat_get_format_status@cntr,c
  5190  00530C                     l12923:
  5191  00530C  0E02               	movlw	2
  5192  00530E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5193  005310  B0D8               	btfsc	status,0,c
  5194  005312  D016               	goto	u10360
  5195                           
  5196                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  5197  005314  0EC4               	movlw	low _buffer
  5198  005316  242E               	addwf	fat_get_format_status@cntr,w,c
  5199  005318  6ED9               	movwf	fsr2l,c
  5200  00531A  0E02               	movlw	high _buffer
  5201  00531C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5202  00531E  6EDA               	movwf	fsr2h,c
  5203  005320  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5204  005324  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5205  005328  EC89  F025         	call	__get_mbr	;wreg free
  5206  00532C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5207  00532E  50DE               	movf	postinc2,w,c
  5208  005330  182D               	xorwf	??_fat_get_format_status+1,w,c
  5209  005332  B4D8               	btfsc	status,2,c
  5210  005334  D002               	goto	l2248
  5211                           
  5212                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  5213  005336  0E00               	movlw	0
  5214  005338  0012               	return	
  5215  00533A                     l2248:
  5216  00533A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5217  00533C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5218  00533E  D7E6               	goto	l12923
  5219  005340                     u10360:
  5220                           
  5221                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  5222  005340  0E00               	movlw	0
  5223  005342  6E29               	movwf	flash_sector_read@page+1,c
  5224  005344  0E01               	movlw	1
  5225  005346  6E28               	movwf	flash_sector_read@page,c
  5226  005348  0EC4               	movlw	low _buffer
  5227  00534A  6E2A               	movwf	flash_sector_read@data,c
  5228  00534C  0E02               	movlw	high _buffer
  5229  00534E  6E2B               	movwf	flash_sector_read@data+1,c
  5230  005350  EC62  F037         	call	_flash_sector_read	;wreg free
  5231                           
  5232                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  5233  005354  0E00               	movlw	0
  5234  005356  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5235  005358  0E00               	movlw	0
  5236  00535A  6E2E               	movwf	fat_get_format_status@cntr,c
  5237  00535C                     l12941:
  5238  00535C  0E02               	movlw	2
  5239  00535E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5240  005360  B0D8               	btfsc	status,0,c
  5241  005362  D016               	goto	u10390
  5242                           
  5243                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  5244  005364  0EC4               	movlw	low _buffer
  5245  005366  242E               	addwf	fat_get_format_status@cntr,w,c
  5246  005368  6ED9               	movwf	fsr2l,c
  5247  00536A  0E02               	movlw	high _buffer
  5248  00536C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5249  00536E  6EDA               	movwf	fsr2h,c
  5250  005370  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5251  005374  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5252  005378  ECAD  F00B         	call	__get_fbr	;wreg free
  5253  00537C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5254  00537E  50DE               	movf	postinc2,w,c
  5255  005380  182D               	xorwf	??_fat_get_format_status+1,w,c
  5256  005382  B4D8               	btfsc	status,2,c
  5257  005384  D002               	goto	l2252
  5258                           
  5259                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  5260  005386  0E00               	movlw	0
  5261  005388  0012               	return	
  5262  00538A                     l2252:
  5263  00538A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5264  00538C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5265  00538E  D7E6               	goto	l12941
  5266  005390                     u10390:
  5267                           
  5268                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  5269  005390  0E01               	movlw	1
  5270  005392  0012               	return	
  5271  005394                     __end_of_fat_get_format_status:
  5272                           	opt stack 0
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           intcon	equ	0xFF2
  5278                           intcon3	equ	0xFF0
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           postdec1	equ	0xFE5
  5282                           plusw1	equ	0xFE3
  5283                           fsr1h	equ	0xFE2
  5284                           fsr1l	equ	0xFE1
  5285                           postinc2	equ	0xFDE
  5286                           plusw2	equ	0xFDB
  5287                           fsr2h	equ	0xFDA
  5288                           fsr2l	equ	0xFD9
  5289                           status	equ	0xFD8
  5290                           
  5291 ;; *************** function __system_timer0_init *****************
  5292 ;; Defined at:
  5293 ;;		line 113 in file "os.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, status,2
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_system_full_init
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text17
  5321  006F9E                     __ptext17:
  5322                           	opt stack 0
  5323  006F9E                     __system_timer0_init:
  5324                           	opt stack 29
  5325                           
  5326                           ;os.c: 116: T0CONbits.T0CS = 0;
  5327                           
  5328                           ;incstack = 0
  5329  006F9E  9AD5               	bcf	4053,5,c	;volatile
  5330                           
  5331                           ;os.c: 118: T0CONbits.T08BIT = 0;
  5332  006FA0  9CD5               	bcf	4053,6,c	;volatile
  5333                           
  5334                           ;os.c: 120: T0CONbits.T0PS2 = 0;
  5335  006FA2  94D5               	bcf	4053,2,c	;volatile
  5336                           
  5337                           ;os.c: 121: T0CONbits.T0PS1 = 1;
  5338  006FA4  82D5               	bsf	4053,1,c	;volatile
  5339                           
  5340                           ;os.c: 122: T0CONbits.T0PS0 = 0;
  5341  006FA6  90D5               	bcf	4053,0,c	;volatile
  5342                           
  5343                           ;os.c: 124: T0CONbits.PSA = 0;
  5344  006FA8  96D5               	bcf	4053,3,c	;volatile
  5345                           
  5346                           ;os.c: 126: TMR0H = 0xD1;
  5347  006FAA  0ED1               	movlw	209
  5348  006FAC  6ED7               	movwf	4055,c	;volatile
  5349                           
  5350                           ;os.c: 127: TMR0L = 0x20;
  5351  006FAE  0E20               	movlw	32
  5352  006FB0  6ED6               	movwf	4054,c	;volatile
  5353                           
  5354                           ;os.c: 129: T0CONbits.TMR0ON = 1;
  5355  006FB2  8ED5               	bsf	4053,7,c	;volatile
  5356                           
  5357                           ;os.c: 133: INTCONbits.TMR0IF = 0;
  5358  006FB4  94F2               	bcf	intcon,2,c	;volatile
  5359                           
  5360                           ;os.c: 136: os.timeSlot = 0;
  5361  006FB6  0E00               	movlw	0
  5362  006FB8  0100               	movlb	0	; () banked
  5363  006FBA  6F62               	movwf	(_os+2)& (0+255),b
  5364                           
  5365                           ; BSR set to: 0
  5366  006FBC  0012               	return		;funcret
  5367  006FBE                     __end_of__system_timer0_init:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           intcon	equ	0xFF2
  5374                           intcon3	equ	0xFF0
  5375                           postinc0	equ	0xFEE
  5376                           wreg	equ	0xFE8
  5377                           postdec1	equ	0xFE5
  5378                           plusw1	equ	0xFE3
  5379                           fsr1h	equ	0xFE2
  5380                           fsr1l	equ	0xFE1
  5381                           postinc2	equ	0xFDE
  5382                           plusw2	equ	0xFDB
  5383                           fsr2h	equ	0xFDA
  5384                           fsr2l	equ	0xFD9
  5385                           status	equ	0xFD8
  5386                           
  5387 ;; *************** function __system_encoder_init *****************
  5388 ;; Defined at:
  5389 ;;		line 74 in file "os.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;		None
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;		None
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;Total ram usage:        0 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_system_full_init
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           	psect	text18
  5417  006B04                     __ptext18:
  5418                           	opt stack 0
  5419  006B04                     __system_encoder_init:
  5420                           	opt stack 29
  5421                           
  5422                           ;os.c: 76: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;incstack = 0
  5426  006B04  0E55               	movlw	85
  5427  006B06  6EA7               	movwf	4007,c	;volsfr
  5428  006B08  0EAA               	movlw	170
  5429  006B0A  6EA7               	movwf	4007,c	;volsfr
  5430  006B0C  010E               	movlb	14	; () banked
  5431  006B0E  91BF               	bcf	191,0,b	;volatile
  5432                           
  5433                           ;os.c: 77: RPINR1 = 1;
  5434  006B10  0E01               	movlw	1
  5435  006B12  6FE1               	movwf	225,b	;volatile
  5436                           
  5437                           ;os.c: 78: RPINR3 = 0;
  5438  006B14  0E00               	movlw	0
  5439  006B16  6FE3               	movwf	227,b	;volatile
  5440                           
  5441                           ;os.c: 79: RPINR2 = 2;
  5442  006B18  0E02               	movlw	2
  5443  006B1A  6FE2               	movwf	226,b	;volatile
  5444                           
  5445                           ;os.c: 80: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  5446  006B1C  0E55               	movlw	85
  5447  006B1E  6EA7               	movwf	4007,c	;volsfr
  5448  006B20  0EAA               	movlw	170
  5449  006B22  6EA7               	movwf	4007,c	;volsfr
  5450                           
  5451                           ; BSR set to: 14
  5452  006B24  91BF               	bcf	191,0,b	;volatile
  5453                           
  5454                           ; BSR set to: 14
  5455                           ;os.c: 83: INTCON2bits.INTEDG1 = 0;
  5456  006B26  9AF1               	bcf	intcon2,5,c	;volatile
  5457                           
  5458                           ; BSR set to: 14
  5459                           ;os.c: 84: INTCON3bits.INT1IF = 0;
  5460  006B28  90F0               	bcf	intcon3,0,c	;volatile
  5461                           
  5462                           ; BSR set to: 14
  5463                           ;os.c: 86: INTCON2bits.INTEDG2 = 1;
  5464  006B2A  88F1               	bsf	intcon2,4,c	;volatile
  5465                           
  5466                           ; BSR set to: 14
  5467                           ;os.c: 87: INTCON3bits.INT2IF = 0;
  5468  006B2C  92F0               	bcf	intcon3,1,c	;volatile
  5469                           
  5470                           ; BSR set to: 14
  5471                           ;os.c: 89: INTCON2bits.INTEDG3 = 1;
  5472  006B2E  86F1               	bsf	intcon2,3,c	;volatile
  5473                           
  5474                           ; BSR set to: 14
  5475                           ;os.c: 90: INTCON3bits.INT3IF = 0;
  5476  006B30  94F0               	bcf	intcon3,2,c	;volatile
  5477                           
  5478                           ;os.c: 92: os.encoderCount = 0;
  5479  006B32  0E00               	movlw	0
  5480  006B34  0100               	movlb	0	; () banked
  5481  006B36  6F60               	movwf	_os& (0+255),b
  5482                           
  5483                           ;os.c: 93: os.buttonCount = 0;
  5484  006B38  0E00               	movlw	0
  5485  006B3A  6F61               	movwf	(_os+1)& (0+255),b
  5486                           
  5487                           ; BSR set to: 0
  5488  006B3C  0012               	return		;funcret
  5489  006B3E                     __end_of__system_encoder_init:
  5490                           	opt stack 0
  5491                           tblptru	equ	0xFF8
  5492                           tblptrh	equ	0xFF7
  5493                           tblptrl	equ	0xFF6
  5494                           tablat	equ	0xFF5
  5495                           intcon	equ	0xFF2
  5496                           intcon2	equ	0xFF1
  5497                           intcon3	equ	0xFF0
  5498                           postinc0	equ	0xFEE
  5499                           wreg	equ	0xFE8
  5500                           postdec1	equ	0xFE5
  5501                           plusw1	equ	0xFE3
  5502                           fsr1h	equ	0xFE2
  5503                           fsr1l	equ	0xFE1
  5504                           postinc2	equ	0xFDE
  5505                           plusw2	equ	0xFDB
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _jump_to_main_program *****************
  5511 ;; Defined at:
  5512 ;;		line 227 in file "os.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		None
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_main
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text19
  5540  00722C                     __ptext19:
  5541                           	opt stack 0
  5542  00722C                     _jump_to_main_program:
  5543                           	opt stack 30
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;incstack = 0
  5547  00722C  EF00 F048          	goto	36864	; ;# 
  5548  007230  0012               	return		;funcret
  5549  007232                     __end_of_jump_to_main_program:
  5550                           	opt stack 0
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           intcon	equ	0xFF2
  5556                           intcon2	equ	0xFF1
  5557                           intcon3	equ	0xFF0
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           postdec1	equ	0xFE5
  5561                           plusw1	equ	0xFE3
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           postinc2	equ	0xFDE
  5565                           plusw2	equ	0xFDB
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _bootloader_run *****************
  5571 ;; Defined at:
  5572 ;;		line 63 in file "bootloader.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  timeslot        1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  timeslot        1   91[COMRAM] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;Total ram usage:        1 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    9
  5593 ;; This function calls:
  5594 ;;		__bootloader_find_file
  5595 ;;		__bootloader_program
  5596 ;;		__bootloader_verify_file
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text20
  5603  005FD0                     __ptext20:
  5604                           	opt stack 0
  5605  005FD0                     _bootloader_run:
  5606                           	opt stack 21
  5607                           
  5608                           ;incstack = 0
  5609                           ;bootloader_run@timeslot stored from wreg
  5610  005FD0  6E5C               	movwf	bootloader_run@timeslot,c
  5611                           
  5612                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  5613  005FD2  0100               	movlb	0	; () banked
  5614  005FD4  5165               	movf	(_os+5)& (0+255),w,b
  5615  005FD6  B4D8               	btfsc	status,2,c
  5616  005FD8  0012               	return	
  5617  005FDA  D015               	goto	l2406
  5618  005FDC                     
  5619                           ; BSR set to: 0
  5620                           ;bootloader.c: 74: if(timeslot==0)
  5621                           
  5622                           ; BSR set to: 0
  5623  005FDC  505C               	movf	bootloader_run@timeslot,w,c
  5624  005FDE  A4D8               	btfss	status,2,c
  5625  005FE0  0012               	return	
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  5629  005FE2  EC1C  F02A         	call	__bootloader_find_file	;wreg free
  5630                           
  5631                           ;bootloader.c: 77: };bootloader.c: 78: break;
  5632  005FE6  0012               	return	
  5633  005FE8                     
  5634                           ;bootloader.c: 81: if(timeslot==0)
  5635  005FE8  505C               	movf	bootloader_run@timeslot,w,c
  5636  005FEA  A4D8               	btfss	status,2,c
  5637  005FEC  0012               	return	
  5638                           
  5639                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  5640  005FEE  EC1C  F02A         	call	__bootloader_find_file	;wreg free
  5641                           
  5642                           ;bootloader.c: 84: };bootloader.c: 85: break;
  5643  005FF2  0012               	return	
  5644  005FF4                     
  5645                           ;bootloader.c: 88: _bootloader_verify_file();
  5646  005FF4  EC07  F006         	call	__bootloader_verify_file	;wreg free
  5647                           
  5648                           ;bootloader.c: 95: break;
  5649                           
  5650                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  5651                           
  5652                           ;bootloader.c: 92: break;
  5653                           
  5654                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  5655                           
  5656                           ;bootloader.c: 89: break;
  5657  005FF8  0012               	return	
  5658  005FFA                     
  5659                           ;bootloader.c: 98: if(timeslot==0)
  5660  005FFA  505C               	movf	bootloader_run@timeslot,w,c
  5661  005FFC  A4D8               	btfss	status,2,c
  5662  005FFE  0012               	return	
  5663                           
  5664                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  5665  006000  EC2D  F004         	call	__bootloader_program	;wreg free
  5666                           
  5667                           ;bootloader.c: 109: }
  5668                           
  5669                           ;bootloader.c: 108: break;
  5670                           
  5671                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  5672                           
  5673                           ;bootloader.c: 105: break;
  5674                           
  5675                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  5676                           
  5677                           ;bootloader.c: 101: };bootloader.c: 102: break;
  5678  006004  0012               	return	
  5679  006006                     l2406:
  5680  006006  0100               	movlb	0	; () banked
  5681  006008  5164               	movf	(_os+4)& (0+255),w,b
  5682                           
  5683                           ; Switch size 1, requested type "space"
  5684                           ; Number of cases is 8, Range of values is 16 to 144
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte           25    13 (average)
  5688                           ;	Chosen strategy is simple_byte
  5689  00600A  0A10               	xorlw	16	; case 16
  5690  00600C  B4D8               	btfsc	status,2,c
  5691  00600E  D7E6               	goto	l2407
  5692  006010  0A30               	xorlw	48	; case 32
  5693  006012  B4D8               	btfsc	status,2,c
  5694  006014  D7E9               	goto	l2410
  5695  006016  0A10               	xorlw	16	; case 48
  5696  006018  B4D8               	btfsc	status,2,c
  5697  00601A  D7EC               	goto	l2412
  5698  00601C  0A70               	xorlw	112	; case 64
  5699  00601E  B4D8               	btfsc	status,2,c
  5700  006020  0012               	return	
  5701  006022  0A10               	xorlw	16	; case 80
  5702  006024  B4D8               	btfsc	status,2,c
  5703  006026  0012               	return	
  5704  006028  0A30               	xorlw	48	; case 96
  5705  00602A  B4D8               	btfsc	status,2,c
  5706  00602C  D7E6               	goto	l2415
  5707  00602E  0A10               	xorlw	16	; case 112
  5708  006030  B4D8               	btfsc	status,2,c
  5709  006032  0012               	return	
  5710  006034  0AE0               	xorlw	224	; case 144
  5711  006036  0012               	return	
  5712  006038                     __end_of_bootloader_run:
  5713                           	opt stack 0
  5714                           tblptru	equ	0xFF8
  5715                           tblptrh	equ	0xFF7
  5716                           tblptrl	equ	0xFF6
  5717                           tablat	equ	0xFF5
  5718                           intcon	equ	0xFF2
  5719                           intcon2	equ	0xFF1
  5720                           intcon3	equ	0xFF0
  5721                           postinc0	equ	0xFEE
  5722                           wreg	equ	0xFE8
  5723                           postdec1	equ	0xFE5
  5724                           plusw1	equ	0xFE3
  5725                           fsr1h	equ	0xFE2
  5726                           fsr1l	equ	0xFE1
  5727                           postinc2	equ	0xFDE
  5728                           plusw2	equ	0xFDB
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function __bootloader_verify_file *****************
  5734 ;; Defined at:
  5735 ;;		line 185 in file "bootloader.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  root           32   22[BANK0 ] struct .
  5740 ;;  address32       4   59[BANK0 ] unsigned long 
  5741 ;;  return_value    4   55[BANK0 ] unsigned long 
  5742 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5756 ;;Total ram usage:       49 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    8
  5759 ;; This function calls:
  5760 ;;		__bootloader_check_address
  5761 ;;		_fat_get_file_information
  5762 ;;		_fat_get_file_size
  5763 ;;		_fat_read_from_file_fast
  5764 ;;		_parseHexFileEntry
  5765 ;; This function is called by:
  5766 ;;		_bootloader_run
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text21
  5771  000C0E                     __ptext21:
  5772                           	opt stack 0
  5773  000C0E                     __bootloader_verify_file:
  5774                           	opt stack 21
  5775                           
  5776                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  5777                           
  5778                           ;incstack = 0
  5779  000C0E  0E00               	movlw	0
  5780  000C10  0100               	movlb	0	; () banked
  5781  000C12  6FED               	movwf	__bootloader_verify_file@return_value& (0+255),b
  5782  000C14  0E00               	movlw	0
  5783  000C16  6FEE               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  5784  000C18  0E00               	movlw	0
  5785  000C1A  6FEF               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  5786  000C1C  0E00               	movlw	0
  5787  000C1E  6FF0               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  5791  000C20  5182               	movf	_hex_file_offset& (0+255),w,b
  5792  000C22  1183               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  5793  000C24  1184               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  5794  000C26  1185               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  5795  000C28  A4D8               	btfss	status,2,c
  5796  000C2A  D010               	goto	l2438
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  5800  000C2C  0ECC               	movlw	low __bootloader_verify_file@root
  5801  000C2E  6E30               	movwf	fat_get_file_information@data,c
  5802  000C30  0E00               	movlw	high __bootloader_verify_file@root
  5803  000C32  6E31               	movwf	fat_get_file_information@data+1,c
  5804  000C34  51FF               	movf	_file_number& (0+255),w,b
  5805  000C36  ECD5  F02E         	call	_fat_get_file_information
  5806                           
  5807                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  5808  000C3A  C0E6  F0B0         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  5809  000C3E  C0E7  F0B1         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  5810                           
  5811                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  5812  000C42  0E00               	movlw	0
  5813  000C44  0100               	movlb	0	; () banked
  5814  000C46  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  5815  000C48  0E00               	movlw	0
  5816  000C4A  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  5817  000C4C                     l2438:
  5818                           
  5819                           ; BSR set to: 0
  5820                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  5821                           
  5822                           ; BSR set to: 0
  5823  000C4C  51FF               	movf	_file_number& (0+255),w,b
  5824  000C4E  EC46  F02F         	call	_fat_get_file_size
  5825  000C52  C036  F07E         	movff	?_fat_get_file_size,_hex_file_size
  5826  000C56  C037  F07F         	movff	?_fat_get_file_size+1,_hex_file_size+1
  5827  000C5A  C038  F080         	movff	?_fat_get_file_size+2,_hex_file_size+2
  5828  000C5E  C039  F081         	movff	?_fat_get_file_size+3,_hex_file_size+3
  5829                           
  5830                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  5831  000C62  0E00               	movlw	0
  5832  000C64  0100               	movlb	0	; () banked
  5833  000C66  6FEC               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  5834  000C68                     l13887:
  5835                           
  5836                           ; BSR set to: 0
  5837  000C68  0E0F               	movlw	15
  5838  000C6A  65EC               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  5839  000C6C  D001               	goto	l2439
  5840  000C6E  0012               	return	
  5841  000C70                     l2439:
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  5845                           
  5846                           ; BSR set to: 0
  5847  000C70  C082  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  5848  000C74  C083  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  5849  000C78  C084  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  5850  000C7C  C085  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  5851  000C80  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  5852  000C82  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  5853  000C84  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  5854  000C86  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  5855  000C88  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  5856  000C8A  0E00               	movlw	0
  5857  000C8C  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  5858  000C8E  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  5859  000C90  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  5860  000C92  517E               	movf	_hex_file_size& (0+255),w,b
  5861  000C94  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  5862  000C96  6FC8               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  5863  000C98  517F               	movf	(_hex_file_size+1)& (0+255),w,b
  5864  000C9A  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  5865  000C9C  6FC9               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  5866  000C9E  5180               	movf	(_hex_file_size+2)& (0+255),w,b
  5867  000CA0  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  5868  000CA2  6FCA               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  5869  000CA4  5181               	movf	(_hex_file_size+3)& (0+255),w,b
  5870  000CA6  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  5871  000CA8  6FCB               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  5872  000CAA  51CB               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  5873  000CAC  11CA               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  5874  000CAE  11C9               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  5875  000CB0  E104               	bnz	u11460
  5876  000CB2  0E32               	movlw	50
  5877  000CB4  5DC8               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  5878  000CB6  A0D8               	btfss	status,0,c
  5879  000CB8  D01F               	goto	l2441
  5880  000CBA                     u11460:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  5884  000CBA  C082  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  5885  000CBE  C083  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  5886  000CC2  C084  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  5887  000CC6  C085  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  5888  000CCA  0E32               	movlw	50
  5889  000CCC  6E46               	movwf	fat_read_from_file_fast@length,c
  5890  000CCE  0E00               	movlw	0
  5891  000CD0  6E47               	movwf	fat_read_from_file_fast@length+1,c
  5892  000CD2  0E00               	movlw	0
  5893  000CD4  6E48               	movwf	fat_read_from_file_fast@length+2,c
  5894  000CD6  0E00               	movlw	0
  5895  000CD8  6E49               	movwf	fat_read_from_file_fast@length+3,c
  5896  000CDA  0E80               	movlw	low _file_buffer
  5897  000CDC  6E4A               	movwf	fat_read_from_file_fast@data,c
  5898  000CDE  0E02               	movlw	high _file_buffer
  5899  000CE0  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  5900  000CE2  0EB0               	movlw	low _fast_read_cluster
  5901  000CE4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  5902  000CE6  0E00               	movlw	high _fast_read_cluster
  5903  000CE8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  5904  000CEA  0EAE               	movlw	low _fast_read_cluster_number
  5905  000CEC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  5906  000CEE  0E00               	movlw	high _fast_read_cluster_number
  5907  000CF0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  5908  000CF2  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  5909                           
  5910                           ;bootloader.c: 211: }
  5911  000CF6  D034               	goto	l2442
  5912  000CF8                     l2441:
  5913                           
  5914                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  5915  000CF8  C082  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  5916  000CFC  C083  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  5917  000D00  C084  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  5918  000D04  C085  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  5919  000D08  C082  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  5920  000D0C  C083  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  5921  000D10  C084  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  5922  000D14  C085  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  5923  000D18  0100               	movlb	0	; () banked
  5924  000D1A  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  5925  000D1C  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  5926  000D1E  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  5927  000D20  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  5928  000D22  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  5929  000D24  0E00               	movlw	0
  5930  000D26  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  5931  000D28  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  5932  000D2A  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  5933  000D2C  517E               	movf	_hex_file_size& (0+255),w,b
  5934  000D2E  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  5935  000D30  6E46               	movwf	fat_read_from_file_fast@length,c
  5936  000D32  517F               	movf	(_hex_file_size+1)& (0+255),w,b
  5937  000D34  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  5938  000D36  6E47               	movwf	fat_read_from_file_fast@length+1,c
  5939  000D38  5180               	movf	(_hex_file_size+2)& (0+255),w,b
  5940  000D3A  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  5941  000D3C  6E48               	movwf	fat_read_from_file_fast@length+2,c
  5942  000D3E  5181               	movf	(_hex_file_size+3)& (0+255),w,b
  5943  000D40  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  5944  000D42  6E49               	movwf	fat_read_from_file_fast@length+3,c
  5945  000D44  0E80               	movlw	low _file_buffer
  5946  000D46  6E4A               	movwf	fat_read_from_file_fast@data,c
  5947  000D48  0E02               	movlw	high _file_buffer
  5948  000D4A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  5949  000D4C  0EB0               	movlw	low _fast_read_cluster
  5950  000D4E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  5951  000D50  0E00               	movlw	high _fast_read_cluster
  5952  000D52  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  5953  000D54  0EAE               	movlw	low _fast_read_cluster_number
  5954  000D56  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  5955  000D58  0E00               	movlw	high _fast_read_cluster_number
  5956  000D5A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  5957  000D5C  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  5958  000D60                     l2442:
  5959                           
  5960                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  5961  000D60  0E80               	movlw	low _file_buffer
  5962  000D62  6E0C               	movwf	parseHexFileEntry@data,c
  5963  000D64  0E02               	movlw	high _file_buffer
  5964  000D66  6E0D               	movwf	parseHexFileEntry@data+1,c
  5965  000D68  0E00               	movlw	0
  5966  000D6A  6E0E               	movwf	parseHexFileEntry@offset,c
  5967  000D6C  0E00               	movlw	0
  5968  000D6E  6E0F               	movwf	parseHexFileEntry@offset+1,c
  5969  000D70  0E00               	movlw	0
  5970  000D72  6E10               	movwf	parseHexFileEntry@offset+2,c
  5971  000D74  0E00               	movlw	0
  5972  000D76  6E11               	movwf	parseHexFileEntry@offset+3,c
  5973  000D78  0EC6               	movlw	low _hex_file_entry
  5974  000D7A  6E12               	movwf	parseHexFileEntry@hexEntry,c
  5975  000D7C  0E01               	movlw	high _hex_file_entry
  5976  000D7E  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  5977  000D80  EC10  F000         	call	_parseHexFileEntry	;wreg free
  5978  000D84  C00C  F0ED         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  5979  000D88  C00D  F0EE         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  5980  000D8C  C00E  F0EF         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  5981  000D90  C00F  F0F0         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  5982                           
  5983                           ;bootloader.c: 222: ++hex_file_entries;
  5984  000D94  0101               	movlb	1	; () banked
  5985  000D96  4B63               	infsnz	_hex_file_entries& (0+255),f,b
  5986  000D98  2B64               	incf	(_hex_file_entries+1)& (0+255),f,b
  5987                           
  5988                           ; BSR set to: 1
  5989                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  5990  000D9A  0E04               	movlw	4
  5991  000D9C  19CA               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  5992  000D9E  A4D8               	btfss	status,2,c
  5993  000DA0  D01C               	goto	l2443
  5994                           
  5995                           ; BSR set to: 1
  5996                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  5997  000DA2  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
  5998  000DA4  6F39               	movwf	_extended_linear_address& (0+255),b
  5999  000DA6  6B3A               	clrf	(_extended_linear_address+1)& (0+255),b
  6000  000DA8  6B3B               	clrf	(_extended_linear_address+2)& (0+255),b
  6001  000DAA  6B3C               	clrf	(_extended_linear_address+3)& (0+255),b
  6002                           
  6003                           ; BSR set to: 1
  6004                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6005  000DAC  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6006  000DB0  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6007  000DB4  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6008  000DB8  6B39               	clrf	_extended_linear_address& (0+255),b
  6009                           
  6010                           ; BSR set to: 1
  6011                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  6012  000DBA  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
  6013  000DBC  1339               	iorwf	_extended_linear_address& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 1
  6016                           ;bootloader.c: 230: extended_linear_address <<= 8;
  6017  000DBE  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6018  000DC2  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6019  000DC6  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6020  000DCA  6B39               	clrf	_extended_linear_address& (0+255),b
  6021                           
  6022                           ; BSR set to: 1
  6023                           ;bootloader.c: 231: extended_linear_address <<= 8;
  6024  000DCC  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6025  000DD0  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6026  000DD4  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6027  000DD8  6B39               	clrf	_extended_linear_address& (0+255),b
  6028  000DDA                     l2443:
  6029                           
  6030                           ; BSR set to: 1
  6031                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  6032                           
  6033                           ; BSR set to: 1
  6034  000DDA  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
  6035  000DDC  A4D8               	btfss	status,2,c
  6036  000DDE  D05D               	goto	l2447
  6037                           
  6038                           ; BSR set to: 1
  6039                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6040  000DE0  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
  6041  000DE2  2539               	addwf	_extended_linear_address& (0+255),w,b
  6042  000DE4  0100               	movlb	0	; () banked
  6043  000DE6  6FF1               	movwf	__bootloader_verify_file@address32& (0+255),b
  6044  000DE8  0101               	movlb	1	; () banked
  6045  000DEA  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
  6046  000DEC  213A               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6047  000DEE  0100               	movlb	0	; () banked
  6048  000DF0  6FF2               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6049  000DF2  0E00               	movlw	0
  6050  000DF4  0101               	movlb	1	; () banked
  6051  000DF6  213B               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6052  000DF8  0100               	movlb	0	; () banked
  6053  000DFA  6FF3               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6054  000DFC  0E00               	movlw	0
  6055  000DFE  0101               	movlb	1	; () banked
  6056  000E00  213C               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6057  000E02  0100               	movlb	0	; () banked
  6058  000E04  6FF4               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6059                           
  6060                           ;bootloader.c: 241: if(address32<file_minimum_address)
  6061  000E06  0101               	movlb	1	; () banked
  6062  000E08  5141               	movf	_file_minimum_address& (0+255),w,b
  6063  000E0A  0100               	movlb	0	; () banked
  6064  000E0C  5DF1               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6065  000E0E  0101               	movlb	1	; () banked
  6066  000E10  5142               	movf	(_file_minimum_address+1)& (0+255),w,b
  6067  000E12  0100               	movlb	0	; () banked
  6068  000E14  59F2               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6069  000E16  0101               	movlb	1	; () banked
  6070  000E18  5143               	movf	(_file_minimum_address+2)& (0+255),w,b
  6071  000E1A  0100               	movlb	0	; () banked
  6072  000E1C  59F3               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6073  000E1E  0101               	movlb	1	; () banked
  6074  000E20  5144               	movf	(_file_minimum_address+3)& (0+255),w,b
  6075  000E22  0100               	movlb	0	; () banked
  6076  000E24  59F4               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6077  000E26  B0D8               	btfsc	status,0,c
  6078  000E28  D008               	goto	l2445
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  6082  000E2A  C0F1  F141         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6083  000E2E  C0F2  F142         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6084  000E32  C0F3  F143         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6085  000E36  C0F4  F144         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6086  000E3A                     l2445:
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  6090                           
  6091                           ; BSR set to: 0
  6092  000E3A  51F1               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6093  000E3C  0101               	movlb	1	; () banked
  6094  000E3E  5D3D               	subwf	_file_maximum_address& (0+255),w,b
  6095  000E40  0100               	movlb	0	; () banked
  6096  000E42  51F2               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6097  000E44  0101               	movlb	1	; () banked
  6098  000E46  593E               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6099  000E48  0100               	movlb	0	; () banked
  6100  000E4A  51F3               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6101  000E4C  0101               	movlb	1	; () banked
  6102  000E4E  593F               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6103  000E50  0100               	movlb	0	; () banked
  6104  000E52  51F4               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6105  000E54  0101               	movlb	1	; () banked
  6106  000E56  5940               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6107  000E58  B0D8               	btfsc	status,0,c
  6108  000E5A  D008               	goto	l2446
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  6112  000E5C  C0F1  F13D         	movff	__bootloader_verify_file@address32,_file_maximum_address
  6113  000E60  C0F2  F13E         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  6114  000E64  C0F3  F13F         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  6115  000E68  C0F4  F140         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  6116  000E6C                     l2446:
  6117                           
  6118                           ; BSR set to: 1
  6119                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  6120                           
  6121                           ; BSR set to: 1
  6122  000E6C  C0F1  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  6123  000E70  C0F2  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  6124  000E74  C0F3  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  6125  000E78  C0F4  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  6126  000E7C  C1C6  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  6127  000E80  ECB2  F024         	call	__bootloader_check_address	;wreg free
  6128  000E84  0AFF               	xorlw	255
  6129  000E86  A4D8               	btfss	status,2,c
  6130  000E88  D008               	goto	l2447
  6131                           
  6132                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  6133  000E8A  0E0B               	movlw	11
  6134  000E8C  0100               	movlb	0	; () banked
  6135  000E8E  6F95               	movwf	_last_error& (0+255),b
  6136                           
  6137                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  6138  000E90  0E50               	movlw	80
  6139  000E92  6F64               	movwf	(_os+4)& (0+255),b
  6140                           
  6141                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6142  000E94  0E50               	movlw	80
  6143  000E96  6F65               	movwf	(_os+5)& (0+255),b
  6144                           
  6145                           ;bootloader.c: 258: break;
  6146  000E98  0012               	return	
  6147  000E9A                     l2447:
  6148                           
  6149                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  6150                           
  6151                           ; BSR set to: 0
  6152                           
  6153                           ; BSR set to: 0
  6154  000E9A  0100               	movlb	0	; () banked
  6155  000E9C  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6156  000E9E  11EE               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6157  000EA0  11EF               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6158  000EA2  11F0               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6159  000EA4  A4D8               	btfss	status,2,c
  6160  000EA6  D027               	goto	l2448
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  6164  000EA8  C163  F161         	movff	_hex_file_entries,_total_hex_file_entries
  6165  000EAC  C164  F162         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;bootloader.c: 267: hex_file_entries = 0;
  6169  000EB0  0E00               	movlw	0
  6170  000EB2  0101               	movlb	1	; () banked
  6171  000EB4  6F64               	movwf	(_hex_file_entries+1)& (0+255),b
  6172  000EB6  0E00               	movlw	0
  6173  000EB8  6F63               	movwf	_hex_file_entries& (0+255),b
  6174                           
  6175                           ;bootloader.c: 268: hex_file_offset = 0;
  6176  000EBA  0E00               	movlw	0
  6177  000EBC  0100               	movlb	0	; () banked
  6178  000EBE  6F82               	movwf	_hex_file_offset& (0+255),b
  6179  000EC0  0E00               	movlw	0
  6180  000EC2  6F83               	movwf	(_hex_file_offset+1)& (0+255),b
  6181  000EC4  0E00               	movlw	0
  6182  000EC6  6F84               	movwf	(_hex_file_offset+2)& (0+255),b
  6183  000EC8  0E00               	movlw	0
  6184  000ECA  6F85               	movwf	(_hex_file_offset+3)& (0+255),b
  6185                           
  6186                           ;bootloader.c: 269: extended_linear_address = 0;
  6187  000ECC  0E00               	movlw	0
  6188  000ECE  0101               	movlb	1	; () banked
  6189  000ED0  6F39               	movwf	_extended_linear_address& (0+255),b
  6190  000ED2  0E00               	movlw	0
  6191  000ED4  6F3A               	movwf	(_extended_linear_address+1)& (0+255),b
  6192  000ED6  0E00               	movlw	0
  6193  000ED8  6F3B               	movwf	(_extended_linear_address+2)& (0+255),b
  6194  000EDA  0E00               	movlw	0
  6195  000EDC  6F3C               	movwf	(_extended_linear_address+3)& (0+255),b
  6196                           
  6197                           ;bootloader.c: 270: flash_pages_written = 0;
  6198  000EDE  0E00               	movlw	0
  6199  000EE0  6F60               	movwf	(_flash_pages_written+1)& (0+255),b
  6200  000EE2  0E00               	movlw	0
  6201  000EE4  6F5F               	movwf	_flash_pages_written& (0+255),b
  6202                           
  6203                           ;bootloader.c: 271: start_from_byte_next = 0;
  6204  000EE6  0E00               	movlw	0
  6205  000EE8  0100               	movlb	0	; () banked
  6206  000EEA  6F94               	movwf	_start_from_byte_next& (0+255),b
  6207                           
  6208                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  6209  000EEC  0E40               	movlw	64
  6210  000EEE  6F64               	movwf	(_os+4)& (0+255),b
  6211                           
  6212                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  6213  000EF0  0E40               	movlw	64
  6214  000EF2  6F65               	movwf	(_os+5)& (0+255),b
  6215                           
  6216                           ;bootloader.c: 275: break;
  6217  000EF4  0012               	return	
  6218  000EF6                     l2448:
  6219                           
  6220                           ; BSR set to: 0
  6221                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  6222                           
  6223                           ; BSR set to: 0
  6224  000EF6  0EF1               	movlw	241
  6225  000EF8  5DED               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  6226  000EFA  0EFF               	movlw	255
  6227  000EFC  59EE               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6228  000EFE  0EFF               	movlw	255
  6229  000F00  59EF               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6230  000F02  0EFF               	movlw	255
  6231  000F04  59F0               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6232  000F06  A0D8               	btfss	status,0,c
  6233  000F08  D007               	goto	l2450
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  6237  000F0A  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6238  000F0C  0B0F               	andlw	15
  6239  000F0E  6F95               	movwf	_last_error& (0+255),b
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  6243  000F10  0E50               	movlw	80
  6244  000F12  6F64               	movwf	(_os+4)& (0+255),b
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6248  000F14  0E50               	movlw	80
  6249  000F16  D7ED               	goto	L1
  6250  000F18                     l2450:
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  6254                           
  6255                           ; BSR set to: 0
  6256  000F18  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6257  000F1A  2782               	addwf	_hex_file_offset& (0+255),f,b
  6258  000F1C  51EE               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6259  000F1E  2383               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  6260  000F20  51EF               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6261  000F22  2384               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  6262  000F24  51F0               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6263  000F26  2385               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  6264                           
  6265                           ; BSR set to: 0
  6266                           
  6267                           ; BSR set to: 0
  6268                           
  6269                           ; BSR set to: 0
  6270  000F28  2BEC               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  6271  000F2A  D69E               	goto	l13887
  6272  000F2C                     __end_of__bootloader_verify_file:
  6273                           	opt stack 0
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           intcon	equ	0xFF2
  6279                           intcon2	equ	0xFF1
  6280                           intcon3	equ	0xFF0
  6281                           postinc0	equ	0xFEE
  6282                           wreg	equ	0xFE8
  6283                           postdec1	equ	0xFE5
  6284                           plusw1	equ	0xFE3
  6285                           fsr1h	equ	0xFE2
  6286                           fsr1l	equ	0xFE1
  6287                           postinc2	equ	0xFDE
  6288                           plusw2	equ	0xFDB
  6289                           fsr2h	equ	0xFDA
  6290                           fsr2l	equ	0xFD9
  6291                           status	equ	0xFD8
  6292                           
  6293 ;; *************** function __bootloader_program *****************
  6294 ;; Defined at:
  6295 ;;		line 294 in file "bootloader.c"
  6296 ;; Parameters:    Size  Location     Type
  6297 ;;		None
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  root           32   28[BANK0 ] struct .
  6300 ;;  address32       4   64[BANK0 ] unsigned long 
  6301 ;;  return_value    4   60[BANK0 ] unsigned long 
  6302 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  6303 ;;  cntr            2   69[BANK0 ] unsigned int 
  6304 ;;  address_with    2   26[BANK0 ] unsigned int 
  6305 ;;  entry_page      2   24[BANK0 ] unsigned int 
  6306 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  6307 ;;		 -> pageBuffer(1024), 
  6308 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;Total ram usage:       59 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    8
  6325 ;; This function calls:
  6326 ;;		__bootloader_check_address
  6327 ;;		_fat_get_file_information
  6328 ;;		_fat_read_from_file_fast
  6329 ;;		_internalFlash_addressWithinPage
  6330 ;;		_internalFlash_erasePage
  6331 ;;		_internalFlash_getBuffer
  6332 ;;		_internalFlash_pageFromAddress
  6333 ;;		_internalFlash_readPage
  6334 ;;		_internalFlash_writePage
  6335 ;;		_parseHexFileEntry
  6336 ;; This function is called by:
  6337 ;;		_bootloader_run
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text22
  6342  00085A                     __ptext22:
  6343                           	opt stack 0
  6344  00085A                     __bootloader_program:
  6345                           	opt stack 21
  6346                           
  6347                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;incstack = 0
  6351  00085A  0E00               	movlw	0
  6352  00085C  0100               	movlb	0	; () banked
  6353  00085E  6FFE               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  6354  000860  0E00               	movlw	0
  6355  000862  6FFD               	movwf	__bootloader_program@page_to_write& (0+255),b
  6356                           
  6357                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  6358  000864  0E00               	movlw	0
  6359  000866  6FF2               	movwf	__bootloader_program@return_value& (0+255),b
  6360  000868  0E00               	movlw	0
  6361  00086A  6FF3               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  6362  00086C  0E00               	movlw	0
  6363  00086E  6FF4               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  6364  000870  0E00               	movlw	0
  6365  000872  6FF5               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  6369  000874  5182               	movf	_hex_file_offset& (0+255),w,b
  6370  000876  1183               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6371  000878  1184               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6372  00087A  1185               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6373  00087C  A4D8               	btfss	status,2,c
  6374  00087E  D010               	goto	l2455
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  6378  000880  0ED2               	movlw	low __bootloader_program@root
  6379  000882  6E30               	movwf	fat_get_file_information@data,c
  6380  000884  0E00               	movlw	high __bootloader_program@root
  6381  000886  6E31               	movwf	fat_get_file_information@data+1,c
  6382  000888  51FF               	movf	_file_number& (0+255),w,b
  6383  00088A  ECD5  F02E         	call	_fat_get_file_information
  6384                           
  6385                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  6386  00088E  C0EC  F0B0         	movff	__bootloader_program@root+26,_fast_read_cluster
  6387  000892  C0ED  F0B1         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  6388                           
  6389                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  6390  000896  0E00               	movlw	0
  6391  000898  0100               	movlb	0	; () banked
  6392  00089A  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6393  00089C  0E00               	movlw	0
  6394  00089E  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  6395  0008A0                     l2455:
  6396                           
  6397                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  6398                           
  6399                           ; BSR set to: 0
  6400                           
  6401                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  6402                           
  6403                           ; BSR set to: 0
  6404  0008A0  C082  F0C4         	movff	_hex_file_offset,??__bootloader_program
  6405  0008A4  C083  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  6406  0008A8  C084  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  6407  0008AC  C085  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  6408  0008B0  0100               	movlb	0	; () banked
  6409  0008B2  1FC4               	comf	??__bootloader_program& (0+255),f,b
  6410  0008B4  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  6411  0008B6  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  6412  0008B8  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  6413  0008BA  2BC4               	incf	??__bootloader_program& (0+255),f,b
  6414  0008BC  0E00               	movlw	0
  6415  0008BE  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  6416  0008C0  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  6417  0008C2  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  6418  0008C4  517E               	movf	_hex_file_size& (0+255),w,b
  6419  0008C6  25C4               	addwf	??__bootloader_program& (0+255),w,b
  6420  0008C8  6FC8               	movwf	(??__bootloader_program+4)& (0+255),b
  6421  0008CA  517F               	movf	(_hex_file_size+1)& (0+255),w,b
  6422  0008CC  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  6423  0008CE  6FC9               	movwf	(??__bootloader_program+5)& (0+255),b
  6424  0008D0  5180               	movf	(_hex_file_size+2)& (0+255),w,b
  6425  0008D2  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  6426  0008D4  6FCA               	movwf	(??__bootloader_program+6)& (0+255),b
  6427  0008D6  5181               	movf	(_hex_file_size+3)& (0+255),w,b
  6428  0008D8  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  6429  0008DA  6FCB               	movwf	(??__bootloader_program+7)& (0+255),b
  6430  0008DC  51CB               	movf	(??__bootloader_program+7)& (0+255),w,b
  6431  0008DE  11CA               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  6432  0008E0  11C9               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  6433  0008E2  E104               	bnz	u11560
  6434  0008E4  0E32               	movlw	50
  6435  0008E6  5DC8               	subwf	(??__bootloader_program+4)& (0+255),w,b
  6436  0008E8  A0D8               	btfss	status,0,c
  6437  0008EA  D01F               	goto	l2457
  6438  0008EC                     u11560:
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6442  0008EC  C082  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6443  0008F0  C083  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6444  0008F4  C084  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6445  0008F8  C085  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6446  0008FC  0E32               	movlw	50
  6447  0008FE  6E46               	movwf	fat_read_from_file_fast@length,c
  6448  000900  0E00               	movlw	0
  6449  000902  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6450  000904  0E00               	movlw	0
  6451  000906  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6452  000908  0E00               	movlw	0
  6453  00090A  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6454  00090C  0E80               	movlw	low _file_buffer
  6455  00090E  6E4A               	movwf	fat_read_from_file_fast@data,c
  6456  000910  0E02               	movlw	high _file_buffer
  6457  000912  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6458  000914  0EB0               	movlw	low _fast_read_cluster
  6459  000916  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6460  000918  0E00               	movlw	high _fast_read_cluster
  6461  00091A  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6462  00091C  0EAE               	movlw	low _fast_read_cluster_number
  6463  00091E  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6464  000920  0E00               	movlw	high _fast_read_cluster_number
  6465  000922  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6466  000924  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6467                           
  6468                           ;bootloader.c: 325: }
  6469  000928  D034               	goto	l2458
  6470  00092A                     l2457:
  6471                           
  6472                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6473  00092A  C082  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6474  00092E  C083  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6475  000932  C084  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6476  000936  C085  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6477  00093A  C082  F0C4         	movff	_hex_file_offset,??__bootloader_program
  6478  00093E  C083  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  6479  000942  C084  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  6480  000946  C085  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  6481  00094A  0100               	movlb	0	; () banked
  6482  00094C  1FC4               	comf	??__bootloader_program& (0+255),f,b
  6483  00094E  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  6484  000950  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  6485  000952  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  6486  000954  2BC4               	incf	??__bootloader_program& (0+255),f,b
  6487  000956  0E00               	movlw	0
  6488  000958  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  6489  00095A  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  6490  00095C  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  6491  00095E  517E               	movf	_hex_file_size& (0+255),w,b
  6492  000960  25C4               	addwf	??__bootloader_program& (0+255),w,b
  6493  000962  6E46               	movwf	fat_read_from_file_fast@length,c
  6494  000964  517F               	movf	(_hex_file_size+1)& (0+255),w,b
  6495  000966  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  6496  000968  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6497  00096A  5180               	movf	(_hex_file_size+2)& (0+255),w,b
  6498  00096C  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  6499  00096E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6500  000970  5181               	movf	(_hex_file_size+3)& (0+255),w,b
  6501  000972  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  6502  000974  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6503  000976  0E80               	movlw	low _file_buffer
  6504  000978  6E4A               	movwf	fat_read_from_file_fast@data,c
  6505  00097A  0E02               	movlw	high _file_buffer
  6506  00097C  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6507  00097E  0EB0               	movlw	low _fast_read_cluster
  6508  000980  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6509  000982  0E00               	movlw	high _fast_read_cluster
  6510  000984  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6511  000986  0EAE               	movlw	low _fast_read_cluster_number
  6512  000988  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6513  00098A  0E00               	movlw	high _fast_read_cluster_number
  6514  00098C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6515  00098E  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6516  000992                     l2458:
  6517                           
  6518                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6519  000992  0E80               	movlw	low _file_buffer
  6520  000994  6E0C               	movwf	parseHexFileEntry@data,c
  6521  000996  0E02               	movlw	high _file_buffer
  6522  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  6523  00099A  0E00               	movlw	0
  6524  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  6525  00099E  0E00               	movlw	0
  6526  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6527  0009A2  0E00               	movlw	0
  6528  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  6529  0009A6  0E00               	movlw	0
  6530  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  6531  0009AA  0EC6               	movlw	low _hex_file_entry
  6532  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6533  0009AE  0E01               	movlw	high _hex_file_entry
  6534  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6535  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6536  0009B6  C00C  F0F2         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  6537  0009BA  C00D  F0F3         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  6538  0009BE  C00E  F0F4         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  6539  0009C2  C00F  F0F5         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  6540                           
  6541                           ;bootloader.c: 336: ++hex_file_entries;
  6542  0009C6  0101               	movlb	1	; () banked
  6543  0009C8  4B63               	infsnz	_hex_file_entries& (0+255),f,b
  6544  0009CA  2B64               	incf	(_hex_file_entries+1)& (0+255),f,b
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  6548  0009CC  0EF1               	movlw	241
  6549  0009CE  0100               	movlb	0	; () banked
  6550  0009D0  5DF2               	subwf	__bootloader_program@return_value& (0+255),w,b
  6551  0009D2  0EFF               	movlw	255
  6552  0009D4  59F3               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  6553  0009D6  0EFF               	movlw	255
  6554  0009D8  59F4               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  6555  0009DA  0EFF               	movlw	255
  6556  0009DC  59F5               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  6557  0009DE  A0D8               	btfss	status,0,c
  6558  0009E0  D005               	goto	l2459
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  6562  0009E2  0E50               	movlw	80
  6563  0009E4  6F64               	movwf	(_os+4)& (0+255),b
  6564                           
  6565                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6566  0009E6  0E50               	movlw	80
  6567  0009E8  6F65               	movwf	(_os+5)& (0+255),b
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;bootloader.c: 344: return;
  6571  0009EA  0012               	return	
  6572  0009EC                     l2459:
  6573                           
  6574                           ; BSR set to: 0
  6575                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  6576                           
  6577                           ; BSR set to: 0
  6578  0009EC  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  6579  0009EE  2782               	addwf	_hex_file_offset& (0+255),f,b
  6580  0009F0  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  6581  0009F2  2383               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  6582  0009F4  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  6583  0009F6  2384               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  6584  0009F8  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  6585  0009FA  2385               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  6586                           
  6587                           ; BSR set to: 0
  6588                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  6589  0009FC  D0FC               	goto	l2462
  6590  0009FE                     
  6591                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  6592                           
  6593                           ; BSR set to: 0
  6594  0009FE  0101               	movlb	1	; () banked
  6595  000A00  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
  6596  000A02  6F39               	movwf	_extended_linear_address& (0+255),b
  6597  000A04  6B3A               	clrf	(_extended_linear_address+1)& (0+255),b
  6598  000A06  6B3B               	clrf	(_extended_linear_address+2)& (0+255),b
  6599  000A08  6B3C               	clrf	(_extended_linear_address+3)& (0+255),b
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;bootloader.c: 359: extended_linear_address <<= 8;
  6603  000A0A  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6604  000A0E  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6605  000A12  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6606  000A16  6B39               	clrf	_extended_linear_address& (0+255),b
  6607                           
  6608                           ; BSR set to: 1
  6609                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  6610  000A18  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
  6611  000A1A  1339               	iorwf	_extended_linear_address& (0+255),f,b
  6612                           
  6613                           ; BSR set to: 1
  6614                           ;bootloader.c: 361: extended_linear_address <<= 8;
  6615  000A1C  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6616  000A20  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6617  000A24  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6618  000A28  6B39               	clrf	_extended_linear_address& (0+255),b
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;bootloader.c: 362: extended_linear_address <<= 8;
  6622  000A2A  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6623  000A2E  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6624  000A32  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6625  000A36  6B39               	clrf	_extended_linear_address& (0+255),b
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;bootloader.c: 364: break;
  6629                           
  6630                           ;bootloader.c: 363: continue;
  6631  000A38  D733               	goto	l2455
  6632  000A3A                     l2466:
  6633                           
  6634                           ; BSR set to: 1
  6635                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  6636  000A3A  C094  F0FA         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  6637                           
  6638                           ; BSR set to: 1
  6639                           ;bootloader.c: 371: start_from_byte_next = 0;
  6640  000A3E  0E00               	movlw	0
  6641  000A40  0100               	movlb	0	; () banked
  6642  000A42  6F94               	movwf	_start_from_byte_next& (0+255),b
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  6646  000A44  0101               	movlb	1	; () banked
  6647  000A46  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
  6648  000A48  2539               	addwf	_extended_linear_address& (0+255),w,b
  6649  000A4A  0100               	movlb	0	; () banked
  6650  000A4C  6FF6               	movwf	__bootloader_program@address32& (0+255),b
  6651  000A4E  0101               	movlb	1	; () banked
  6652  000A50  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
  6653  000A52  213A               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6654  000A54  0100               	movlb	0	; () banked
  6655  000A56  6FF7               	movwf	(__bootloader_program@address32+1)& (0+255),b
  6656  000A58  0E00               	movlw	0
  6657  000A5A  0101               	movlb	1	; () banked
  6658  000A5C  213B               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6659  000A5E  0100               	movlb	0	; () banked
  6660  000A60  6FF8               	movwf	(__bootloader_program@address32+2)& (0+255),b
  6661  000A62  0E00               	movlw	0
  6662  000A64  0101               	movlb	1	; () banked
  6663  000A66  213C               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6664  000A68  0100               	movlb	0	; () banked
  6665  000A6A  6FF9               	movwf	(__bootloader_program@address32+3)& (0+255),b
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  6669  000A6C  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6670  000A6E  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6671  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  6672  000A72  0E00               	movlw	0
  6673  000A74  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6674  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  6675  000A78  0E00               	movlw	0
  6676  000A7A  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6677  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  6678  000A7E  0E00               	movlw	0
  6679  000A80  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6680  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  6681  000A84  EC28  F038         	call	_internalFlash_pageFromAddress	;wreg free
  6682  000A88  C001  F0CE         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  6683  000A8C  C002  F0CF         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  6684                           
  6685                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  6686  000A90  0100               	movlb	0	; () banked
  6687  000A92  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6688  000A94  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6689  000A96  6E01               	movwf	__bootloader_check_address@address,c
  6690  000A98  0E00               	movlw	0
  6691  000A9A  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6692  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  6693  000A9E  0E00               	movlw	0
  6694  000AA0  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6695  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  6696  000AA4  0E00               	movlw	0
  6697  000AA6  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6698  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  6699  000AAA  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6700  000AAC  0800               	sublw	0
  6701  000AAE  0101               	movlb	1	; () banked
  6702  000AB0  25C6               	addwf	_hex_file_entry& (0+255),w,b
  6703  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  6704  000AB4  ECB2  F024         	call	__bootloader_check_address	;wreg free
  6705  000AB8  0900               	iorlw	0
  6706  000ABA  A4D8               	btfss	status,2,c
  6707  000ABC  D6F1               	goto	l2455
  6708                           
  6709                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  6710                           
  6711                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  6712  000ABE  0100               	movlb	0	; () banked
  6713  000AC0  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6714  000AC2  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6715  000AC4  A4D8               	btfss	status,2,c
  6716  000AC6  D010               	goto	l2468
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  6720  000AC8  C0CE  F0FD         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  6721  000ACC  C0CF  F0FE         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  6722                           
  6723                           ; BSR set to: 0
  6724                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  6725  000AD0  C0FD  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  6726  000AD4  C0FE  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  6727  000AD8  ECE3  F034         	call	_internalFlash_readPage	;wreg free
  6728                           
  6729                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  6730  000ADC  ECCF  F038         	call	_internalFlash_getBuffer	;wreg free
  6731  000AE0  C001  F0CC         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  6732  000AE4  C002  F0CD         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  6733  000AE8                     l2468:
  6734                           
  6735                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  6736  000AE8  C0FA  F0FB         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  6737  000AEC  0100               	movlb	0	; () banked
  6738  000AEE  6BFC               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  6739  000AF0  D05D               	goto	l2469
  6740  000AF2                     
  6741                           ; BSR set to: 0
  6742                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  6743                           
  6744                           ; BSR set to: 0
  6745  000AF2  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  6746  000AF4  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6747  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  6748  000AF8  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  6749  000AFA  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6750  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  6751  000AFE  0E00               	movlw	0
  6752  000B00  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6753  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  6754  000B04  0E00               	movlw	0
  6755  000B06  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6756  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  6757  000B0A  EC28  F038         	call	_internalFlash_pageFromAddress	;wreg free
  6758  000B0E  0100               	movlb	0	; () banked
  6759  000B10  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6760  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  6761  000B14  E12A               	bnz	l14019
  6762  000B16  51FE               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6763  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  6764  000B1A  A4D8               	btfss	status,2,c
  6765  000B1C  D026               	goto	l2471
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  6769  000B1E  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  6770  000B20  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6771  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  6772  000B24  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  6773  000B26  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6774  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  6775  000B2A  0E00               	movlw	0
  6776  000B2C  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6777  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  6778  000B30  0E00               	movlw	0
  6779  000B32  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6780  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  6781  000B36  C0FD  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  6782  000B3A  C0FE  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  6783  000B3E  EC15  F031         	call	_internalFlash_addressWithinPage	;wreg free
  6784  000B42  C009  F0D0         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  6785  000B46  C00A  F0D1         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  6786                           
  6787                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  6788  000B4A  0ECB               	movlw	low (_hex_file_entry+5)
  6789  000B4C  0100               	movlb	0	; () banked
  6790  000B4E  25FB               	addwf	__bootloader_program@cntr& (0+255),w,b
  6791  000B50  6ED9               	movwf	fsr2l,c
  6792  000B52  0E01               	movlw	high (_hex_file_entry+5)
  6793  000B54  21FC               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  6794  000B56  6EDA               	movwf	fsr2h,c
  6795  000B58  51D0               	movf	__bootloader_program@address_within_page& (0+255),w,b
  6796  000B5A  25CC               	addwf	__bootloader_program@buffer& (0+255),w,b
  6797  000B5C  6EE1               	movwf	fsr1l,c
  6798  000B5E  51D1               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  6799  000B60  21CD               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  6800  000B62  6EE2               	movwf	fsr1h,c
  6801  000B64  CFDF FFE7          	movff	indf2,indf1
  6802                           
  6803                           ;bootloader.c: 401: }
  6804  000B68  D01E               	goto	l2472
  6805  000B6A                     l2471:
  6806  000B6A                     l14019:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  6810  000B6A  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  6811  000B6C  5F82               	subwf	_hex_file_offset& (0+255),f,b
  6812  000B6E  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  6813  000B70  5B83               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  6814  000B72  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  6815  000B74  5B84               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  6816  000B76  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  6817  000B78  5B85               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;bootloader.c: 406: --hex_file_entries;
  6821  000B7A  0101               	movlb	1	; () banked
  6822  000B7C  0763               	decf	_hex_file_entries& (0+255),f,b
  6823  000B7E  A0D8               	btfss	status,0,c
  6824  000B80  0764               	decf	(_hex_file_entries+1)& (0+255),f,b
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;bootloader.c: 408: start_from_byte_next = cntr;
  6828  000B82  C0FB  F094         	movff	__bootloader_program@cntr,_start_from_byte_next
  6829                           
  6830                           ; BSR set to: 1
  6831                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  6832  000B86  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  6833  000B8A  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  6834  000B8E  EC7D  F02F         	call	_internalFlash_erasePage	;wreg free
  6835                           
  6836                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  6837  000B92  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  6838  000B96  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  6839  000B9A  EC17  F027         	call	_internalFlash_writePage	;wreg free
  6840                           
  6841                           ;bootloader.c: 412: ++flash_pages_written;
  6842  000B9E  0101               	movlb	1	; () banked
  6843  000BA0  4B5F               	infsnz	_flash_pages_written& (0+255),f,b
  6844  000BA2  2B60               	incf	(_flash_pages_written+1)& (0+255),f,b
  6845                           
  6846                           ; BSR set to: 1
  6847                           ;bootloader.c: 414: return;
  6848  000BA4  0012               	return	
  6849  000BA6                     l2472:
  6850                           
  6851                           ; BSR set to: 1
  6852  000BA6  0100               	movlb	0	; () banked
  6853  000BA8  4BFB               	infsnz	__bootloader_program@cntr& (0+255),f,b
  6854  000BAA  2BFC               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  6855  000BAC                     l2469:
  6856                           
  6857                           ; BSR set to: 0
  6858                           
  6859                           ; BSR set to: 0
  6860  000BAC  0101               	movlb	1	; () banked
  6861  000BAE  51C6               	movf	_hex_file_entry& (0+255),w,b
  6862  000BB0  0100               	movlb	0	; () banked
  6863  000BB2  5DFB               	subwf	__bootloader_program@cntr& (0+255),w,b
  6864  000BB4  0101               	movlb	1	; () banked
  6865  000BB6  51C7               	movf	(_hex_file_entry+1)& (0+255),w,b
  6866  000BB8  0100               	movlb	0	; () banked
  6867  000BBA  59FC               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  6868  000BBC  B0D8               	btfsc	status,0,c
  6869  000BBE  D670               	goto	l2455
  6870  000BC0  D798               	goto	l2470
  6871  000BC2                     
  6872                           ;bootloader.c: 422: if(page_to_write!=0)
  6873                           
  6874                           ; BSR set to: 0
  6875  000BC2  0100               	movlb	0	; () banked
  6876  000BC4  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6877  000BC6  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6878  000BC8  B4D8               	btfsc	status,2,c
  6879  000BCA  0012               	return	
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  6883  000BCC  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  6884  000BD0  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  6885  000BD4  EC7D  F02F         	call	_internalFlash_erasePage	;wreg free
  6886                           
  6887                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  6888  000BD8  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  6889  000BDC  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  6890  000BE0  EC17  F027         	call	_internalFlash_writePage	;wreg free
  6891                           
  6892                           ;bootloader.c: 427: ++flash_pages_written;
  6893  000BE4  0101               	movlb	1	; () banked
  6894  000BE6  4B5F               	infsnz	_flash_pages_written& (0+255),f,b
  6895  000BE8  2B60               	incf	(_flash_pages_written+1)& (0+255),f,b
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  6899  000BEA  0E70               	movlw	112
  6900  000BEC  0100               	movlb	0	; () banked
  6901  000BEE  6F64               	movwf	(_os+4)& (0+255),b
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  6905  000BF0  0E70               	movlw	112
  6906  000BF2  6F65               	movwf	(_os+5)& (0+255),b
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;bootloader.c: 431: };bootloader.c: 433: return;
  6910                           
  6911                           ; BSR set to: 0
  6912  000BF4  0012               	return	
  6913  000BF6                     l2462:
  6914                           
  6915                           ; BSR set to: 0
  6916                           
  6917                           ; BSR set to: 0
  6918  000BF6  0101               	movlb	1	; () banked
  6919  000BF8  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
  6920                           
  6921                           ; Switch size 1, requested type "space"
  6922                           ; Number of cases is 3, Range of values is 0 to 4
  6923                           ; switch strategies available:
  6924                           ; Name         Instructions Cycles
  6925                           ; simple_byte           10     6 (average)
  6926                           ;	Chosen strategy is simple_byte
  6927  000BFA  0A00               	xorlw	0	; case 0
  6928  000BFC  B4D8               	btfsc	status,2,c
  6929  000BFE  D71D               	goto	l2466
  6930  000C00  0A01               	xorlw	1	; case 1
  6931  000C02  B4D8               	btfsc	status,2,c
  6932  000C04  D7DE               	goto	l2474
  6933  000C06  0A05               	xorlw	5	; case 4
  6934  000C08  B4D8               	btfsc	status,2,c
  6935  000C0A  D6F9               	goto	l2463
  6936                           
  6937                           ; BSR set to: 1
  6938                           
  6939                           ; BSR set to: 1
  6940  000C0C  D649               	goto	l2455
  6941  000C0E                     __end_of__bootloader_program:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           intcon	equ	0xFF2
  6948                           intcon2	equ	0xFF1
  6949                           intcon3	equ	0xFF0
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           indf1	equ	0xFE7
  6953                           postdec1	equ	0xFE5
  6954                           plusw1	equ	0xFE3
  6955                           fsr1h	equ	0xFE2
  6956                           fsr1l	equ	0xFE1
  6957                           indf2	equ	0xFDF
  6958                           postinc2	equ	0xFDE
  6959                           plusw2	equ	0xFDB
  6960                           fsr2h	equ	0xFDA
  6961                           fsr2l	equ	0xFD9
  6962                           status	equ	0xFD8
  6963                           
  6964 ;; *************** function _parseHexFileEntry *****************
  6965 ;; Defined at:
  6966 ;;		line 59 in file "hex.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  data            2   11[COMRAM] PTR unsigned char 
  6969 ;;		 -> file_buffer(50), 
  6970 ;;  offset          4   13[COMRAM] unsigned long 
  6971 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  6972 ;;		 -> hex_file_entry(23), 
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  i               1   27[COMRAM] unsigned char 
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  4   11[COMRAM] unsigned long 
  6977 ;; Registers used:
  6978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;Total ram usage:       17 bytes
  6989 ;; Hardware stack levels used:    1
  6990 ;; Hardware stack levels required when called:    2
  6991 ;; This function calls:
  6992 ;;		_hexCharsToUint16
  6993 ;;		_hexCharsToUint8
  6994 ;; This function is called by:
  6995 ;;		__bootloader_verify_file
  6996 ;;		__bootloader_program
  6997 ;; This function uses a non-reentrant model
  6998 ;;
  6999                           
  7000                           	psect	text23
  7001  000020                     __ptext23:
  7002                           	opt stack 0
  7003  000020                     _parseHexFileEntry:
  7004                           	opt stack 26
  7005                           
  7006                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7007                           
  7008                           ;incstack = 0
  7009  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7010  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7011  000024  6ED9               	movwf	fsr2l,c
  7012  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7013  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7014  00002A  6EDA               	movwf	fsr2h,c
  7015  00002C  0E3A               	movlw	58
  7016  00002E  18DE               	xorwf	postinc2,w,c
  7017  000030  B4D8               	btfsc	status,2,c
  7018  000032  D005               	goto	l2318
  7019                           
  7020                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7021  000034  680C               	setf	?_parseHexFileEntry,c
  7022  000036  680D               	setf	?_parseHexFileEntry+1,c
  7023  000038  680E               	setf	?_parseHexFileEntry+2,c
  7024  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7025  00003C  0012               	return	
  7026  00003E                     l2318:
  7027                           
  7028                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7029  00003E  0E02               	movlw	2
  7030  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7031  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7032  000044  0E00               	movlw	0
  7033  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7034  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7035  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7036  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7037  00004E  6ED9               	movwf	fsr2l,c
  7038  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7039  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7040  000054  6EDA               	movwf	fsr2h,c
  7041  000056  50DF               	movf	indf2,w,c
  7042  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7043  00005A  0E01               	movlw	1
  7044  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7045  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7046  000060  0E00               	movlw	0
  7047  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7048  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7049  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7050  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7051  00006A  6ED9               	movwf	fsr2l,c
  7052  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7053  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7054  000070  6EDA               	movwf	fsr2h,c
  7055  000072  50DF               	movf	indf2,w,c
  7056  000074  EC1A  F038         	call	_hexCharsToUint8
  7057  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7058  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7059  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7060  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7061  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7062  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7063                           
  7064                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7065  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7066  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7067  000094  0E01               	movlw	1
  7068  000096  50DB               	movf	plusw2,w,c
  7069  000098  E104               	bnz	u10410
  7070  00009A  0E11               	movlw	17
  7071  00009C  5CDE               	subwf	postinc2,w,c
  7072  00009E  A0D8               	btfss	status,0,c
  7073  0000A0  D009               	goto	l2320
  7074  0000A2                     u10410:
  7075                           
  7076                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7077  0000A2  0EFC               	movlw	252
  7078  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7079  0000A6  0EFF               	movlw	255
  7080  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7081  0000AA  0EFF               	movlw	255
  7082  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7083  0000AE  0EFF               	movlw	255
  7084  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7085  0000B2  0012               	return	
  7086  0000B4                     l2320:
  7087                           
  7088                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7089  0000B4  0E04               	movlw	4
  7090  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7091  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7092  0000BA  0E00               	movlw	0
  7093  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7094  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7095  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7096  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7097  0000C4  6ED9               	movwf	fsr2l,c
  7098  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7099  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7100  0000CA  6EDA               	movwf	fsr2h,c
  7101  0000CC  50DF               	movf	indf2,w,c
  7102  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7103  0000D0  0E05               	movlw	5
  7104  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7105  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7106  0000D6  0E00               	movlw	0
  7107  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7108  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7109  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  7110  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  7111  0000E0  6ED9               	movwf	fsr2l,c
  7112  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  7113  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7114  0000E6  6EDA               	movwf	fsr2h,c
  7115  0000E8  50DF               	movf	indf2,w,c
  7116  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  7117  0000EC  0E06               	movlw	6
  7118  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  7119  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7120  0000F2  0E00               	movlw	0
  7121  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7122  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7123  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  7124  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  7125  0000FC  6ED9               	movwf	fsr2l,c
  7126  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  7127  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7128  000102  6EDA               	movwf	fsr2h,c
  7129  000104  50DF               	movf	indf2,w,c
  7130  000106  6E05               	movwf	hexCharsToUint16@c4,c
  7131  000108  0E03               	movlw	3
  7132  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  7133  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  7134  00010E  0E00               	movlw	0
  7135  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7136  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  7137  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  7138  000116  240C               	addwf	parseHexFileEntry@data,w,c
  7139  000118  6ED9               	movwf	fsr2l,c
  7140  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  7141  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7142  00011E  6EDA               	movwf	fsr2h,c
  7143  000120  50DF               	movf	indf2,w,c
  7144  000122  EC0E  F02F         	call	_hexCharsToUint16
  7145  000126  EE20 F002          	lfsr	2,2
  7146  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7147  00012C  26D9               	addwf	fsr2l,f,c
  7148  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7149  000130  22DA               	addwfc	fsr2h,f,c
  7150  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  7151  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  7152                           
  7153                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  7154  00013A  EE20 F004          	lfsr	2,4
  7155  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7156  000140  26D9               	addwf	fsr2l,f,c
  7157  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7158  000144  22DA               	addwfc	fsr2h,f,c
  7159  000146  0E08               	movlw	8
  7160  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  7161  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7162  00014C  0E00               	movlw	0
  7163  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7164  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7165  000152  5014               	movf	??_parseHexFileEntry,w,c
  7166  000154  240C               	addwf	parseHexFileEntry@data,w,c
  7167  000156  6EE1               	movwf	fsr1l,c
  7168  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  7169  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7170  00015C  6EE2               	movwf	fsr1h,c
  7171  00015E  50E7               	movf	indf1,w,c
  7172  000160  6E03               	movwf	hexCharsToUint8@c2,c
  7173  000162  0E07               	movlw	7
  7174  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  7175  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7176  000168  0E00               	movlw	0
  7177  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7178  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7179  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  7180  000170  240C               	addwf	parseHexFileEntry@data,w,c
  7181  000172  6EE1               	movwf	fsr1l,c
  7182  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  7183  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7184  000178  6EE2               	movwf	fsr1h,c
  7185  00017A  50E7               	movf	indf1,w,c
  7186  00017C  EC1A  F038         	call	_hexCharsToUint8
  7187  000180  6EDF               	movwf	indf2,c
  7188                           
  7189                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  7190  000182  0E00               	movlw	0
  7191  000184  6E1C               	movwf	parseHexFileEntry@i,c
  7192  000186  D03D               	goto	l2321
  7193  000188                     
  7194                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  7195  000188  501C               	movf	parseHexFileEntry@i,w,c
  7196  00018A  0D01               	mullw	1
  7197  00018C  0E05               	movlw	5
  7198  00018E  26F3               	addwf	prodl,f,c
  7199  000190  0E00               	movlw	0
  7200  000192  22F4               	addwfc	prodh,f,c
  7201  000194  50F3               	movf	prodl,w,c
  7202  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  7203  000198  6ED9               	movwf	fsr2l,c
  7204  00019A  50F4               	movf	prodh,w,c
  7205  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  7206  00019E  6EDA               	movwf	fsr2h,c
  7207  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  7208  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7209  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7210  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  7211  0001AA  0E00               	movlw	0
  7212  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7213  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  7214  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  7215  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  7216  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7217  0001B6  0E0A               	movlw	10
  7218  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  7219  0001BA  0E00               	movlw	0
  7220  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7221  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  7222  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  7223  0001C2  6EE1               	movwf	fsr1l,c
  7224  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  7225  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7226  0001C8  6EE2               	movwf	fsr1h,c
  7227  0001CA  50E7               	movf	indf1,w,c
  7228  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  7229  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  7230  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  7231  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7232  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  7233  0001D8  0E00               	movlw	0
  7234  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7235  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  7236  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  7237  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  7238  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7239  0001E4  0E09               	movlw	9
  7240  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  7241  0001E8  0E00               	movlw	0
  7242  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7243  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  7244  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  7245  0001F0  6EE1               	movwf	fsr1l,c
  7246  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  7247  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7248  0001F6  6EE2               	movwf	fsr1h,c
  7249  0001F8  50E7               	movf	indf1,w,c
  7250  0001FA  EC1A  F038         	call	_hexCharsToUint8
  7251  0001FE  6EDF               	movwf	indf2,c
  7252  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  7253  000202                     l2321:
  7254  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7255  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7256  00020A  501C               	movf	parseHexFileEntry@i,w,c
  7257  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7258  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7259  000210  50DE               	movf	postinc2,w,c
  7260  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  7261  000214  50DE               	movf	postinc2,w,c
  7262  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  7263  000218  A0D8               	btfss	status,0,c
  7264  00021A  D7B6               	goto	l2322
  7265                           
  7266                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  7267  00021C  EE20 F015          	lfsr	2,21
  7268  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7269  000222  26D9               	addwf	fsr2l,f,c
  7270  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7271  000226  22DA               	addwfc	fsr2h,f,c
  7272  000228  501C               	movf	parseHexFileEntry@i,w,c
  7273  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7274  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7275  000230  2614               	addwf	??_parseHexFileEntry,f,c
  7276  000232  0E00               	movlw	0
  7277  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7278  000236  500E               	movf	parseHexFileEntry@offset,w,c
  7279  000238  2614               	addwf	??_parseHexFileEntry,f,c
  7280  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  7281  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7282  00023E  0E0A               	movlw	10
  7283  000240  2614               	addwf	??_parseHexFileEntry,f,c
  7284  000242  0E00               	movlw	0
  7285  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7286  000246  5014               	movf	??_parseHexFileEntry,w,c
  7287  000248  240C               	addwf	parseHexFileEntry@data,w,c
  7288  00024A  6EE1               	movwf	fsr1l,c
  7289  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  7290  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7291  000250  6EE2               	movwf	fsr1h,c
  7292  000252  50E7               	movf	indf1,w,c
  7293  000254  6E03               	movwf	hexCharsToUint8@c2,c
  7294  000256  501C               	movf	parseHexFileEntry@i,w,c
  7295  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  7296  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7297  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  7298  000260  0E00               	movlw	0
  7299  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7300  000264  500E               	movf	parseHexFileEntry@offset,w,c
  7301  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  7302  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  7303  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7304  00026C  0E09               	movlw	9
  7305  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  7306  000270  0E00               	movlw	0
  7307  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7308  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  7309  000276  240C               	addwf	parseHexFileEntry@data,w,c
  7310  000278  6EE1               	movwf	fsr1l,c
  7311  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  7312  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7313  00027E  6EE2               	movwf	fsr1h,c
  7314  000280  50E7               	movf	indf1,w,c
  7315  000282  EC1A  F038         	call	_hexCharsToUint8
  7316  000286  6EDF               	movwf	indf2,c
  7317                           
  7318                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  7319  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7320  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7321  000290  EE10 F016          	lfsr	1,22
  7322  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7323  000296  26E1               	addwf	fsr1l,f,c
  7324  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7325  00029A  22E2               	addwfc	fsr1h,f,c
  7326  00029C  CFDF FFE7          	movff	indf2,indf1
  7327                           
  7328                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  7329  0002A0  EE20 F002          	lfsr	2,2
  7330  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7331  0002A6  26D9               	addwf	fsr2l,f,c
  7332  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7333  0002AA  22DA               	addwfc	fsr2h,f,c
  7334  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  7335  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  7336  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  7337  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  7338  0002BA  EE20 F016          	lfsr	2,22
  7339  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7340  0002C0  26D9               	addwf	fsr2l,f,c
  7341  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7342  0002C4  22DA               	addwfc	fsr2h,f,c
  7343  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  7344  0002C8  26DF               	addwf	indf2,f,c
  7345                           
  7346                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  7347  0002CA  EE20 F002          	lfsr	2,2
  7348  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7349  0002D0  26D9               	addwf	fsr2l,f,c
  7350  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7351  0002D4  22DA               	addwfc	fsr2h,f,c
  7352  0002D6  50DF               	movf	indf2,w,c
  7353  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7354  0002DA  EE20 F016          	lfsr	2,22
  7355  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7356  0002E0  26D9               	addwf	fsr2l,f,c
  7357  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7358  0002E4  22DA               	addwfc	fsr2h,f,c
  7359  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  7360  0002E8  26DF               	addwf	indf2,f,c
  7361                           
  7362                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  7363  0002EA  EE20 F004          	lfsr	2,4
  7364  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7365  0002F0  26D9               	addwf	fsr2l,f,c
  7366  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7367  0002F4  22DA               	addwfc	fsr2h,f,c
  7368  0002F6  50DF               	movf	indf2,w,c
  7369  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7370  0002FA  EE20 F016          	lfsr	2,22
  7371  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7372  000300  26D9               	addwf	fsr2l,f,c
  7373  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7374  000304  22DA               	addwfc	fsr2h,f,c
  7375  000306  5014               	movf	??_parseHexFileEntry,w,c
  7376  000308  26DF               	addwf	indf2,f,c
  7377                           
  7378                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  7379  00030A  0E00               	movlw	0
  7380  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  7381  00030E  D017               	goto	l2324
  7382  000310                     
  7383                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  7384  000310  501C               	movf	parseHexFileEntry@i,w,c
  7385  000312  0D01               	mullw	1
  7386  000314  0E05               	movlw	5
  7387  000316  26F3               	addwf	prodl,f,c
  7388  000318  0E00               	movlw	0
  7389  00031A  22F4               	addwfc	prodh,f,c
  7390  00031C  50F3               	movf	prodl,w,c
  7391  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  7392  000320  6ED9               	movwf	fsr2l,c
  7393  000322  50F4               	movf	prodh,w,c
  7394  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  7395  000326  6EDA               	movwf	fsr2h,c
  7396  000328  50DF               	movf	indf2,w,c
  7397  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7398  00032C  EE20 F016          	lfsr	2,22
  7399  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7400  000332  26D9               	addwf	fsr2l,f,c
  7401  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7402  000336  22DA               	addwfc	fsr2h,f,c
  7403  000338  5014               	movf	??_parseHexFileEntry,w,c
  7404  00033A  26DF               	addwf	indf2,f,c
  7405  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  7406  00033E                     l2324:
  7407  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7408  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7409  000346  501C               	movf	parseHexFileEntry@i,w,c
  7410  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7411  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7412  00034C  50DE               	movf	postinc2,w,c
  7413  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  7414  000350  50DE               	movf	postinc2,w,c
  7415  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  7416  000354  A0D8               	btfss	status,0,c
  7417  000356  D7DC               	goto	l2325
  7418                           
  7419                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  7420  000358  EE20 F015          	lfsr	2,21
  7421  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7422  00035E  26D9               	addwf	fsr2l,f,c
  7423  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7424  000362  22DA               	addwfc	fsr2h,f,c
  7425  000364  50DF               	movf	indf2,w,c
  7426  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7427  000368  EE20 F016          	lfsr	2,22
  7428  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7429  00036E  26D9               	addwf	fsr2l,f,c
  7430  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7431  000372  22DA               	addwfc	fsr2h,f,c
  7432  000374  5014               	movf	??_parseHexFileEntry,w,c
  7433  000376  26DF               	addwf	indf2,f,c
  7434                           
  7435                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  7436  000378  EE20 F016          	lfsr	2,22
  7437  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7438  00037E  26D9               	addwf	fsr2l,f,c
  7439  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7440  000382  22DA               	addwfc	fsr2h,f,c
  7441  000384  50DF               	movf	indf2,w,c
  7442  000386  B4D8               	btfsc	status,2,c
  7443  000388  D009               	goto	l2327
  7444                           
  7445                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  7446  00038A  0EFE               	movlw	254
  7447  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  7448  00038E  0EFF               	movlw	255
  7449  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  7450  000392  0EFF               	movlw	255
  7451  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  7452  000396  0EFF               	movlw	255
  7453  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  7454  00039A  0012               	return	
  7455  00039C                     l2327:
  7456                           
  7457                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  7458  00039C  EE20 F004          	lfsr	2,4
  7459  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7460  0003A2  26D9               	addwf	fsr2l,f,c
  7461  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7462  0003A6  22DA               	addwfc	fsr2h,f,c
  7463  0003A8  04DE               	decf	postinc2,w,c
  7464  0003AA  A4D8               	btfss	status,2,c
  7465  0003AC  D009               	goto	l2328
  7466                           
  7467                           ;hex.c: 110: {;hex.c: 112: return 0;
  7468  0003AE  0E00               	movlw	0
  7469  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  7470  0003B2  0E00               	movlw	0
  7471  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  7472  0003B6  0E00               	movlw	0
  7473  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  7474  0003BA  0E00               	movlw	0
  7475  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  7476                           
  7477                           ;hex.c: 113: }
  7478  0003BE  0012               	return	
  7479  0003C0                     l2328:
  7480                           
  7481                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  7482  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  7483  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7484  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7485  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  7486  0003CA  0E00               	movlw	0
  7487  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7488  0003CE  0E0B               	movlw	11
  7489  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  7490  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7491  0003D4  0E00               	movlw	0
  7492  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  7493  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7494  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  7495  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  7496  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  7497  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  7498  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7499  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  7500  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  7501  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  7502  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7503  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  7504  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7505  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  7506  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7507                           
  7508                           ;hex.c: 117: if (data[++offset] == ':')
  7509  0003F4  0E01               	movlw	1
  7510  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  7511  0003F8  0E00               	movlw	0
  7512  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7513  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7514  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7515  000400  500E               	movf	parseHexFileEntry@offset,w,c
  7516  000402  240C               	addwf	parseHexFileEntry@data,w,c
  7517  000404  6ED9               	movwf	fsr2l,c
  7518  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  7519  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7520  00040A  6EDA               	movwf	fsr2h,c
  7521  00040C  0E3A               	movlw	58
  7522  00040E  18DE               	xorwf	postinc2,w,c
  7523  000410  A4D8               	btfss	status,2,c
  7524  000412  D009               	goto	l2330
  7525                           
  7526                           ;hex.c: 118: {;hex.c: 119: return offset;
  7527  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7528  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7529  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7530  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7531                           
  7532                           ;hex.c: 120: }
  7533  000424  0012               	return	
  7534  000426                     l2330:
  7535                           
  7536                           ;hex.c: 121: else if (data[++offset] == ':')
  7537  000426  0E01               	movlw	1
  7538  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  7539  00042A  0E00               	movlw	0
  7540  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7541  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7542  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7543  000432  500E               	movf	parseHexFileEntry@offset,w,c
  7544  000434  240C               	addwf	parseHexFileEntry@data,w,c
  7545  000436  6ED9               	movwf	fsr2l,c
  7546  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  7547  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7548  00043C  6EDA               	movwf	fsr2h,c
  7549  00043E  0E3A               	movlw	58
  7550  000440  18DE               	xorwf	postinc2,w,c
  7551  000442  A4D8               	btfss	status,2,c
  7552  000444  D009               	goto	l2332
  7553                           
  7554                           ;hex.c: 122: {;hex.c: 123: return offset;
  7555  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7556  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7557  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7558  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7559                           
  7560                           ;hex.c: 124: }
  7561  000456  0012               	return	
  7562  000458                     l2332:
  7563                           
  7564                           ;hex.c: 125: else if (data[++offset] == ':')
  7565  000458  0E01               	movlw	1
  7566  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  7567  00045C  0E00               	movlw	0
  7568  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7569  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7570  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7571  000464  500E               	movf	parseHexFileEntry@offset,w,c
  7572  000466  240C               	addwf	parseHexFileEntry@data,w,c
  7573  000468  6ED9               	movwf	fsr2l,c
  7574  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  7575  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7576  00046E  6EDA               	movwf	fsr2h,c
  7577  000470  0E3A               	movlw	58
  7578  000472  18DE               	xorwf	postinc2,w,c
  7579  000474  A4D8               	btfss	status,2,c
  7580  000476  D009               	goto	l2334
  7581                           
  7582                           ;hex.c: 126: {;hex.c: 127: return offset;
  7583  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7584  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7585  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7586  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7587                           
  7588                           ;hex.c: 128: }
  7589  000488  0012               	return	
  7590  00048A                     l2334:
  7591                           
  7592                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  7593  00048A  0EFD               	movlw	253
  7594  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  7595  00048E  0EFF               	movlw	255
  7596  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  7597  000492  0EFF               	movlw	255
  7598  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  7599  000496  0EFF               	movlw	255
  7600  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  7601  00049A  0012               	return	
  7602  00049C                     __end_of_parseHexFileEntry:
  7603                           	opt stack 0
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           intcon	equ	0xFF2
  7611                           intcon2	equ	0xFF1
  7612                           intcon3	equ	0xFF0
  7613                           postinc0	equ	0xFEE
  7614                           wreg	equ	0xFE8
  7615                           indf1	equ	0xFE7
  7616                           postdec1	equ	0xFE5
  7617                           plusw1	equ	0xFE3
  7618                           fsr1h	equ	0xFE2
  7619                           fsr1l	equ	0xFE1
  7620                           indf2	equ	0xFDF
  7621                           postinc2	equ	0xFDE
  7622                           postdec2	equ	0xFDD
  7623                           plusw2	equ	0xFDB
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _hexCharsToUint8 *****************
  7629 ;; Defined at:
  7630 ;;		line 42 in file "hex.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  c1              1    wreg     unsigned char 
  7633 ;;  c2              1    2[COMRAM] unsigned char 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  c1              1    4[COMRAM] unsigned char 
  7636 ;;  retVal          1    5[COMRAM] unsigned char 
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      unsigned char 
  7639 ;; Registers used:
  7640 ;;		wreg, status,2, status,0, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7646 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;Total ram usage:        4 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:    1
  7653 ;; This function calls:
  7654 ;;		_hexCharToUint8
  7655 ;; This function is called by:
  7656 ;;		_parseHexFileEntry
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text24
  7661  007034                     __ptext24:
  7662                           	opt stack 0
  7663  007034                     _hexCharsToUint8:
  7664                           	opt stack 26
  7665                           
  7666                           ;incstack = 0
  7667                           ;hexCharsToUint8@c1 stored from wreg
  7668  007034  6E05               	movwf	hexCharsToUint8@c1,c
  7669                           
  7670                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  7671  007036  5005               	movf	hexCharsToUint8@c1,w,c
  7672  007038  ECBD  F036         	call	_hexCharToUint8
  7673  00703C  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  7674  00703E  3804               	swapf	??_hexCharsToUint8,w,c
  7675  007040  0BF0               	andlw	240
  7676  007042  6E06               	movwf	hexCharsToUint8@retVal,c
  7677                           
  7678                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  7679  007044  5003               	movf	hexCharsToUint8@c2,w,c
  7680  007046  ECBD  F036         	call	_hexCharToUint8
  7681  00704A  1206               	iorwf	hexCharsToUint8@retVal,f,c
  7682                           
  7683                           ;hex.c: 46: return retVal;
  7684  00704C  5006               	movf	hexCharsToUint8@retVal,w,c
  7685  00704E  0012               	return	
  7686  007050                     __end_of_hexCharsToUint8:
  7687                           	opt stack 0
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           prodh	equ	0xFF4
  7693                           prodl	equ	0xFF3
  7694                           intcon	equ	0xFF2
  7695                           intcon2	equ	0xFF1
  7696                           intcon3	equ	0xFF0
  7697                           postinc0	equ	0xFEE
  7698                           wreg	equ	0xFE8
  7699                           indf1	equ	0xFE7
  7700                           postdec1	equ	0xFE5
  7701                           plusw1	equ	0xFE3
  7702                           fsr1h	equ	0xFE2
  7703                           fsr1l	equ	0xFE1
  7704                           indf2	equ	0xFDF
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           plusw2	equ	0xFDB
  7708                           fsr2h	equ	0xFDA
  7709                           fsr2l	equ	0xFD9
  7710                           status	equ	0xFD8
  7711                           
  7712 ;; *************** function _hexCharsToUint16 *****************
  7713 ;; Defined at:
  7714 ;;		line 49 in file "hex.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;  c1              1    wreg     unsigned char 
  7717 ;;  c2              1    2[COMRAM] unsigned char 
  7718 ;;  c3              1    3[COMRAM] unsigned char 
  7719 ;;  c4              1    4[COMRAM] unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  c1              1    8[COMRAM] unsigned char 
  7722 ;;  retVal          2    9[COMRAM] unsigned int 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  2    2[COMRAM] unsigned int 
  7725 ;; Registers used:
  7726 ;;		wreg, status,2, status,0, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7735 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;Total ram usage:        9 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    1
  7739 ;; This function calls:
  7740 ;;		_hexCharToUint8
  7741 ;; This function is called by:
  7742 ;;		_parseHexFileEntry
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text25
  7747  005E1C                     __ptext25:
  7748                           	opt stack 0
  7749  005E1C                     _hexCharsToUint16:
  7750                           	opt stack 26
  7751                           
  7752                           ;incstack = 0
  7753                           ;hexCharsToUint16@c1 stored from wreg
  7754  005E1C  6E09               	movwf	hexCharsToUint16@c1,c
  7755                           
  7756                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  7757  005E1E  5009               	movf	hexCharsToUint16@c1,w,c
  7758  005E20  ECBD  F036         	call	_hexCharToUint8
  7759  005E24  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7760  005E26  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7761  005E28  0E0C               	movlw	12
  7762  005E2A                     u9855:
  7763  005E2A  90D8               	bcf	status,0,c
  7764  005E2C  3606               	rlcf	??_hexCharsToUint16,f,c
  7765  005E2E  3607               	rlcf	??_hexCharsToUint16+1,f,c
  7766  005E30  2EE8               	decfsz	wreg,f,c
  7767  005E32  D7FB               	goto	u9855
  7768  005E34  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  7769  005E38  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  7770                           
  7771                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  7772  005E3C  5003               	movf	hexCharsToUint16@c2,w,c
  7773  005E3E  ECBD  F036         	call	_hexCharToUint8
  7774  005E42  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7775  005E44  5006               	movf	??_hexCharsToUint16,w,c
  7776  005E46  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  7777  005E48  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7778  005E4A  5007               	movf	??_hexCharsToUint16+1,w,c
  7779  005E4C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7780  005E4E  5008               	movf	??_hexCharsToUint16+2,w,c
  7781  005E50  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  7782                           
  7783                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  7784  005E52  5004               	movf	hexCharsToUint16@c3,w,c
  7785  005E54  ECBD  F036         	call	_hexCharToUint8
  7786  005E58  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7787  005E5A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7788  005E5C  3A06               	swapf	??_hexCharsToUint16,f,c
  7789  005E5E  3A07               	swapf	??_hexCharsToUint16+1,f,c
  7790  005E60  0EF0               	movlw	240
  7791  005E62  1607               	andwf	??_hexCharsToUint16+1,f,c
  7792  005E64  5006               	movf	??_hexCharsToUint16,w,c
  7793  005E66  0B0F               	andlw	15
  7794  005E68  1207               	iorwf	??_hexCharsToUint16+1,f,c
  7795  005E6A  0EF0               	movlw	240
  7796  005E6C  1606               	andwf	??_hexCharsToUint16,f,c
  7797  005E6E  5006               	movf	??_hexCharsToUint16,w,c
  7798  005E70  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7799  005E72  5007               	movf	??_hexCharsToUint16+1,w,c
  7800  005E74  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  7801                           
  7802                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  7803  005E76  5005               	movf	hexCharsToUint16@c4,w,c
  7804  005E78  ECBD  F036         	call	_hexCharToUint8
  7805  005E7C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7806  005E7E  5006               	movf	??_hexCharsToUint16,w,c
  7807  005E80  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7808                           
  7809                           ;hex.c: 55: return retVal;
  7810  005E82  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  7811  005E86  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  7812  005E8A  0012               	return	
  7813  005E8C                     __end_of_hexCharsToUint16:
  7814                           	opt stack 0
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           intcon2	equ	0xFF1
  7823                           intcon3	equ	0xFF0
  7824                           postinc0	equ	0xFEE
  7825                           wreg	equ	0xFE8
  7826                           indf1	equ	0xFE7
  7827                           postdec1	equ	0xFE5
  7828                           plusw1	equ	0xFE3
  7829                           fsr1h	equ	0xFE2
  7830                           fsr1l	equ	0xFE1
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           plusw2	equ	0xFDB
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function _hexCharToUint8 *****************
  7840 ;; Defined at:
  7841 ;;		line 11 in file "hex.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  c               1    wreg     unsigned char 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  c               1    0[COMRAM] unsigned char 
  7846 ;;  ascii           1    1[COMRAM] unsigned char 
  7847 ;; Return value:  Size  Location     Type
  7848 ;;                  1    wreg      unsigned char 
  7849 ;; Registers used:
  7850 ;;		wreg, status,2, status,0
  7851 ;; Tracked objects:
  7852 ;;		On entry : 0/0
  7853 ;;		On exit  : 0/0
  7854 ;;		Unchanged: 0/0
  7855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7859 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7860 ;;Total ram usage:        2 bytes
  7861 ;; Hardware stack levels used:    1
  7862 ;; This function calls:
  7863 ;;		Nothing
  7864 ;; This function is called by:
  7865 ;;		_hexCharsToUint8
  7866 ;;		_hexCharsToUint16
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text26
  7871  006D7A                     __ptext26:
  7872                           	opt stack 0
  7873  006D7A                     _hexCharToUint8:
  7874                           	opt stack 26
  7875                           
  7876                           ;incstack = 0
  7877                           ;hexCharToUint8@c stored from wreg
  7878  006D7A  6E01               	movwf	hexCharToUint8@c,c
  7879                           
  7880                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  7881  006D7C  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  7882                           
  7883                           ;hex.c: 16: if (ascii >= 97)
  7884  006D80  0E60               	movlw	96
  7885  006D82  6402               	cpfsgt	hexCharToUint8@ascii,c
  7886  006D84  D002               	goto	l2303
  7887                           
  7888                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  7889  006D86  0E57               	movlw	87
  7890  006D88  D006               	goto	L3
  7891  006D8A                     l2303:
  7892                           
  7893                           ;hex.c: 21: else if (ascii >= 65)
  7894  006D8A  0E40               	movlw	64
  7895  006D8C  6402               	cpfsgt	hexCharToUint8@ascii,c
  7896  006D8E  D002               	goto	l2305
  7897                           
  7898                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  7899  006D90  0E37               	movlw	55
  7900  006D92  D001               	goto	L3
  7901  006D94                     l2305:
  7902                           
  7903                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  7904  006D94  0E30               	movlw	48
  7905  006D96                     L3:
  7906  006D96  5E02               	subwf	hexCharToUint8@ascii,f,c
  7907                           
  7908                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  7909  006D98  0E0F               	movlw	15
  7910  006D9A  6402               	cpfsgt	hexCharToUint8@ascii,c
  7911  006D9C  D002               	goto	l2307
  7912                           
  7913                           ;hex.c: 32: {;hex.c: 33: return 0;
  7914  006D9E  0E00               	movlw	0
  7915                           
  7916                           ;hex.c: 34: }
  7917  006DA0  0012               	return	
  7918  006DA2                     l2307:
  7919                           
  7920                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  7921  006DA2  5002               	movf	hexCharToUint8@ascii,w,c
  7922  006DA4  0012               	return	
  7923  006DA6                     __end_of_hexCharToUint8:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           intcon	equ	0xFF2
  7932                           intcon2	equ	0xFF1
  7933                           intcon3	equ	0xFF0
  7934                           postinc0	equ	0xFEE
  7935                           wreg	equ	0xFE8
  7936                           indf1	equ	0xFE7
  7937                           postdec1	equ	0xFE5
  7938                           plusw1	equ	0xFE3
  7939                           fsr1h	equ	0xFE2
  7940                           fsr1l	equ	0xFE1
  7941                           indf2	equ	0xFDF
  7942                           postinc2	equ	0xFDE
  7943                           postdec2	equ	0xFDD
  7944                           plusw2	equ	0xFDB
  7945                           fsr2h	equ	0xFDA
  7946                           fsr2l	equ	0xFD9
  7947                           status	equ	0xFD8
  7948                           
  7949 ;; *************** function _internalFlash_writePage *****************
  7950 ;; Defined at:
  7951 ;;		line 65 in file "internal_flash.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;  page            2    8[COMRAM] unsigned int 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  address         4   18[COMRAM] unsigned long 
  7956 ;;  cntr            2   14[COMRAM] unsigned int 
  7957 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  7958 ;;  block_cntr      1   16[COMRAM] unsigned char 
  7959 ;;  i               1    0        unsigned char 
  7960 ;;  gie             1    0        unsigned char 
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7974 ;;Total ram usage:       14 bytes
  7975 ;; Hardware stack levels used:    1
  7976 ;; Hardware stack levels required when called:    1
  7977 ;; This function calls:
  7978 ;;		__internalFlash_unlockAndActivate
  7979 ;;		_internalFlash_addressFromPage
  7980 ;; This function is called by:
  7981 ;;		__bootloader_program
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text27
  7986  004E2E                     __ptext27:
  7987                           	opt stack 0
  7988  004E2E                     _internalFlash_writePage:
  7989                           	opt stack 27
  7990                           
  7991                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  7992                           
  7993                           ;incstack = 0
  7994  004E2E  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  7995  004E32  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  7996  004E36  ECA6  F036         	call	_internalFlash_addressFromPage	;wreg free
  7997  004E3A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  7998  004E3E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  7999  004E42  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  8000  004E46  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  8001                           
  8002                           ;internal_flash.c: 76: TBLPTR = address;
  8003  004E4A  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8004  004E4E  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8005  004E52  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8006                           
  8007                           ;internal_flash.c: 79: if((address<0x9000) || (address+1023>=0x1FFFF))
  8008  004E56  5016               	movf	internalFlash_writePage@address+3,w,c
  8009  004E58  1015               	iorwf	internalFlash_writePage@address+2,w,c
  8010  004E5A  E104               	bnz	u10590
  8011  004E5C  0E90               	movlw	144
  8012  004E5E  5C14               	subwf	internalFlash_writePage@address+1,w,c
  8013  004E60  A0D8               	btfss	status,0,c
  8014  004E62  0012               	return	
  8015  004E64                     u10590:
  8016  004E64  0EFF               	movlw	255
  8017  004E66  2413               	addwf	internalFlash_writePage@address,w,c
  8018  004E68  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  8019  004E6A  0E03               	movlw	3
  8020  004E6C  2014               	addwfc	internalFlash_writePage@address+1,w,c
  8021  004E6E  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  8022  004E70  0E00               	movlw	0
  8023  004E72  2015               	addwfc	internalFlash_writePage@address+2,w,c
  8024  004E74  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  8025  004E76  0E00               	movlw	0
  8026  004E78  2016               	addwfc	internalFlash_writePage@address+3,w,c
  8027  004E7A  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  8028  004E7C  500E               	movf	??_internalFlash_writePage+3,w,c
  8029  004E7E  E132               	bnz	l2560
  8030  004E80  280B               	incf	??_internalFlash_writePage,w,c
  8031  004E82  0EFF               	movlw	255
  8032  004E84  580C               	subwfb	??_internalFlash_writePage+1,w,c
  8033  004E86  0E01               	movlw	1
  8034  004E88  580D               	subwfb	??_internalFlash_writePage+2,w,c
  8035  004E8A  B0D8               	btfsc	status,0,c
  8036  004E8C  0012               	return	
  8037                           
  8038                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  8039                           
  8040                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  8041  004E8E  0E00               	movlw	0
  8042  004E90  6E10               	movwf	internalFlash_writePage@cntr+1,c
  8043  004E92  0E00               	movlw	0
  8044  004E94  6E0F               	movwf	internalFlash_writePage@cntr,c
  8045                           
  8046                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8047  004E96  0E00               	movlw	0
  8048  004E98  6E11               	movwf	internalFlash_writePage@block_cntr,c
  8049  004E9A                     l13113:
  8050  004E9A  0E0F               	movlw	15
  8051  004E9C  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  8052  004E9E  D001               	goto	l2561
  8053  004EA0  0012               	return	
  8054  004EA2                     l2561:
  8055                           
  8056                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8057  004EA2  0E00               	movlw	0
  8058  004EA4  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  8059  004EA6                     l13119:
  8060  004EA6  0E3F               	movlw	63
  8061  004EA8  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8062  004EAA  D001               	goto	l2563
  8063  004EAC  D00D               	goto	u10630
  8064  004EAE                     l2563:
  8065                           
  8066                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  8067  004EAE  0E00               	movlw	low _pageBuffer
  8068  004EB0  240F               	addwf	internalFlash_writePage@cntr,w,c
  8069  004EB2  6ED9               	movwf	fsr2l,c
  8070  004EB4  0E08               	movlw	high _pageBuffer
  8071  004EB6  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  8072  004EB8  6EDA               	movwf	fsr2h,c
  8073  004EBA  50DF               	movf	indf2,w,c
  8074  004EBC  6EF5               	movwf	tablat,c	;volatile
  8075  004EBE  000D               	tblwt		*+	;# 
  8076                           
  8077                           ;internal_flash.c: 97: ++cntr;
  8078  004EC0  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  8079  004EC2  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  8080  004EC4  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  8081  004EC6  D7EF               	goto	l13119
  8082  004EC8                     u10630:
  8083  004EC8  000A               	tblrd		*-	;# 
  8084                           
  8085                           ;internal_flash.c: 104: EECON1 = 0x84;
  8086  004ECA  0E84               	movlw	132
  8087  004ECC  6EA6               	movwf	4006,c	;volsfr
  8088                           
  8089                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8090  004ECE  0EB5               	movlw	181
  8091  004ED0  EC14  F037         	call	__internalFlash_unlockAndActivate
  8092                           
  8093                           ;internal_flash.c: 106: TBLPTR++;
  8094  004ED4  0E01               	movlw	1
  8095  004ED6  26F6               	addwf	tblptrl,f,c	;volatile
  8096  004ED8  0E00               	movlw	0
  8097  004EDA  22F7               	addwfc	tblptrh,f,c	;volatile
  8098  004EDC  0E00               	movlw	0
  8099  004EDE  22F8               	addwfc	tblptru,f,c	;volatile
  8100  004EE0  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  8101  004EE2  D7DB               	goto	l13113
  8102  004EE4                     l2560:
  8103  004EE4  0012               	return		;funcret
  8104  004EE6                     __end_of_internalFlash_writePage:
  8105                           	opt stack 0
  8106                           tblptru	equ	0xFF8
  8107                           tblptrh	equ	0xFF7
  8108                           tblptrl	equ	0xFF6
  8109                           tablat	equ	0xFF5
  8110                           prodh	equ	0xFF4
  8111                           prodl	equ	0xFF3
  8112                           intcon	equ	0xFF2
  8113                           intcon2	equ	0xFF1
  8114                           intcon3	equ	0xFF0
  8115                           postinc0	equ	0xFEE
  8116                           wreg	equ	0xFE8
  8117                           indf1	equ	0xFE7
  8118                           postdec1	equ	0xFE5
  8119                           plusw1	equ	0xFE3
  8120                           fsr1h	equ	0xFE2
  8121                           fsr1l	equ	0xFE1
  8122                           indf2	equ	0xFDF
  8123                           postinc2	equ	0xFDE
  8124                           postdec2	equ	0xFDD
  8125                           plusw2	equ	0xFDB
  8126                           fsr2h	equ	0xFDA
  8127                           fsr2l	equ	0xFD9
  8128                           status	equ	0xFD8
  8129                           
  8130 ;; *************** function _internalFlash_readPage *****************
  8131 ;; Defined at:
  8132 ;;		line 37 in file "internal_flash.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  page            2   21[COMRAM] unsigned int 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;  address         4   23[COMRAM] unsigned long 
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1    wreg      void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8141 ;; Tracked objects:
  8142 ;;		On entry : 0/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;Total ram usage:        6 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    2
  8153 ;; This function calls:
  8154 ;;		_internalFlash_addressFromPage
  8155 ;;		_internalFlash_read
  8156 ;; This function is called by:
  8157 ;;		__bootloader_program
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text28
  8162  0069C6                     __ptext28:
  8163                           	opt stack 0
  8164  0069C6                     _internalFlash_readPage:
  8165                           	opt stack 26
  8166                           
  8167                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  8168                           
  8169                           ;incstack = 0
  8170  0069C6  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  8171  0069CA  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  8172  0069CE  ECA6  F036         	call	_internalFlash_addressFromPage	;wreg free
  8173  0069D2  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  8174  0069D6  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  8175  0069DA  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  8176  0069DE  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  8177                           
  8178                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  8179  0069E2  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  8180  0069E6  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  8181  0069EA  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  8182  0069EE  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  8183  0069F2  0E04               	movlw	4
  8184  0069F4  6E13               	movwf	internalFlash_read@data_length+1,c
  8185  0069F6  0E00               	movlw	0
  8186  0069F8  6E12               	movwf	internalFlash_read@data_length,c
  8187  0069FA  0E00               	movlw	low _pageBuffer
  8188  0069FC  6E14               	movwf	internalFlash_read@buffer,c
  8189  0069FE  0E08               	movlw	high _pageBuffer
  8190  006A00  6E15               	movwf	internalFlash_read@buffer+1,c
  8191  006A02  ECF4  F035         	call	_internalFlash_read	;wreg free
  8192  006A06  0012               	return		;funcret
  8193  006A08                     __end_of_internalFlash_readPage:
  8194                           	opt stack 0
  8195                           tblptru	equ	0xFF8
  8196                           tblptrh	equ	0xFF7
  8197                           tblptrl	equ	0xFF6
  8198                           tablat	equ	0xFF5
  8199                           prodh	equ	0xFF4
  8200                           prodl	equ	0xFF3
  8201                           intcon	equ	0xFF2
  8202                           intcon2	equ	0xFF1
  8203                           intcon3	equ	0xFF0
  8204                           postinc0	equ	0xFEE
  8205                           wreg	equ	0xFE8
  8206                           indf1	equ	0xFE7
  8207                           postdec1	equ	0xFE5
  8208                           plusw1	equ	0xFE3
  8209                           fsr1h	equ	0xFE2
  8210                           fsr1l	equ	0xFE1
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           plusw2	equ	0xFDB
  8215                           fsr2h	equ	0xFDA
  8216                           fsr2l	equ	0xFD9
  8217                           status	equ	0xFD8
  8218                           
  8219 ;; *************** function _internalFlash_read *****************
  8220 ;; Defined at:
  8221 ;;		line 150 in file "internal_flash.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  address         4   13[COMRAM] unsigned long 
  8224 ;;  data_length     2   17[COMRAM] unsigned int 
  8225 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  8226 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;		None
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      unsigned char 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 0/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8238 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;Total ram usage:        8 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:    1
  8245 ;; This function calls:
  8246 ;;		_memcpy
  8247 ;; This function is called by:
  8248 ;;		_internalFlash_readPage
  8249 ;;		__bootloader_verify_program_memory
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text29
  8254  006BE8                     __ptext29:
  8255                           	opt stack 0
  8256  006BE8                     _internalFlash_read:
  8257                           	opt stack 26
  8258                           
  8259                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  8260                           
  8261                           ;incstack = 0
  8262  006BE8  5011               	movf	internalFlash_read@address+3,w,c
  8263  006BEA  E118               	bnz	l2576
  8264  006BEC  280E               	incf	internalFlash_read@address,w,c
  8265  006BEE  0EFF               	movlw	255
  8266  006BF0  580F               	subwfb	internalFlash_read@address+1,w,c
  8267  006BF2  0E01               	movlw	1
  8268  006BF4  5810               	subwfb	internalFlash_read@address+2,w,c
  8269  006BF6  B0D8               	btfsc	status,0,c
  8270  006BF8  0012               	return	
  8271                           
  8272                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  8273                           
  8274                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  8275  006BFA  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  8276  006BFE  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  8277  006C02  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  8278  006C06  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  8279  006C0A  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  8280  006C0E  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  8281  006C12  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  8282  006C16  EC1C  F030         	call	_memcpy	;wreg free
  8283  006C1A  0012               	return	
  8284  006C1C                     l2576:
  8285  006C1C  0012               	return		;funcret
  8286  006C1E                     __end_of_internalFlash_read:
  8287                           	opt stack 0
  8288                           tblptru	equ	0xFF8
  8289                           tblptrh	equ	0xFF7
  8290                           tblptrl	equ	0xFF6
  8291                           tablat	equ	0xFF5
  8292                           prodh	equ	0xFF4
  8293                           prodl	equ	0xFF3
  8294                           intcon	equ	0xFF2
  8295                           intcon2	equ	0xFF1
  8296                           intcon3	equ	0xFF0
  8297                           postinc0	equ	0xFEE
  8298                           wreg	equ	0xFE8
  8299                           indf1	equ	0xFE7
  8300                           postdec1	equ	0xFE5
  8301                           plusw1	equ	0xFE3
  8302                           fsr1h	equ	0xFE2
  8303                           fsr1l	equ	0xFE1
  8304                           indf2	equ	0xFDF
  8305                           postinc2	equ	0xFDE
  8306                           postdec2	equ	0xFDD
  8307                           plusw2	equ	0xFDB
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312 ;; *************** function _internalFlash_pageFromAddress *****************
  8313 ;; Defined at:
  8314 ;;		line 171 in file "internal_flash.c"
  8315 ;; Parameters:    Size  Location     Type
  8316 ;;  address         4    0[COMRAM] unsigned long 
  8317 ;; Auto vars:     Size  Location     Type
  8318 ;;		None
  8319 ;; Return value:  Size  Location     Type
  8320 ;;                  2    0[COMRAM] unsigned int 
  8321 ;; Registers used:
  8322 ;;		wreg, status,2, status,0
  8323 ;; Tracked objects:
  8324 ;;		On entry : 0/0
  8325 ;;		On exit  : 0/0
  8326 ;;		Unchanged: 0/0
  8327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8331 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8332 ;;Total ram usage:        5 bytes
  8333 ;; Hardware stack levels used:    1
  8334 ;; This function calls:
  8335 ;;		Nothing
  8336 ;; This function is called by:
  8337 ;;		__bootloader_program
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           	psect	text30
  8342  007050                     __ptext30:
  8343                           	opt stack 0
  8344  007050                     _internalFlash_pageFromAddress:
  8345                           	opt stack 28
  8346                           
  8347                           ;internal_flash.c: 173: address >>= 10;
  8348                           
  8349                           ;incstack = 0
  8350  007050  0E0A               	movlw	10
  8351  007052  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  8352  007054                     u10565:
  8353  007054  90D8               	bcf	status,0,c
  8354  007056  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  8355  007058  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  8356  00705A  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  8357  00705C  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  8358  00705E  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  8359  007060  D7F9               	goto	u10565
  8360                           
  8361                           ;internal_flash.c: 174: return (uint16_t) address;
  8362  007062  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  8363  007066  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  8364  00706A  0012               	return	
  8365  00706C                     __end_of_internalFlash_pageFromAddress:
  8366                           	opt stack 0
  8367                           tblptru	equ	0xFF8
  8368                           tblptrh	equ	0xFF7
  8369                           tblptrl	equ	0xFF6
  8370                           tablat	equ	0xFF5
  8371                           prodh	equ	0xFF4
  8372                           prodl	equ	0xFF3
  8373                           intcon	equ	0xFF2
  8374                           intcon2	equ	0xFF1
  8375                           intcon3	equ	0xFF0
  8376                           postinc0	equ	0xFEE
  8377                           wreg	equ	0xFE8
  8378                           indf1	equ	0xFE7
  8379                           postdec1	equ	0xFE5
  8380                           plusw1	equ	0xFE3
  8381                           fsr1h	equ	0xFE2
  8382                           fsr1l	equ	0xFE1
  8383                           indf2	equ	0xFDF
  8384                           postinc2	equ	0xFDE
  8385                           postdec2	equ	0xFDD
  8386                           plusw2	equ	0xFDB
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function _internalFlash_getBuffer *****************
  8392 ;; Defined at:
  8393 ;;		line 32 in file "internal_flash.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  2    0[COMRAM] PTR unsigned char 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;Total ram usage:        2 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		__bootloader_program
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text31
  8421  00719E                     __ptext31:
  8422                           	opt stack 0
  8423  00719E                     _internalFlash_getBuffer:
  8424                           	opt stack 28
  8425                           
  8426                           ;internal_flash.c: 34: return pageBuffer;
  8427                           
  8428                           ;incstack = 0
  8429  00719E  0E00               	movlw	low _pageBuffer
  8430  0071A0  6E01               	movwf	?_internalFlash_getBuffer,c
  8431  0071A2  0E08               	movlw	high _pageBuffer
  8432  0071A4  6E02               	movwf	?_internalFlash_getBuffer+1,c
  8433  0071A6  0012               	return	
  8434  0071A8                     __end_of_internalFlash_getBuffer:
  8435                           	opt stack 0
  8436                           tblptru	equ	0xFF8
  8437                           tblptrh	equ	0xFF7
  8438                           tblptrl	equ	0xFF6
  8439                           tablat	equ	0xFF5
  8440                           prodh	equ	0xFF4
  8441                           prodl	equ	0xFF3
  8442                           intcon	equ	0xFF2
  8443                           intcon2	equ	0xFF1
  8444                           intcon3	equ	0xFF0
  8445                           postinc0	equ	0xFEE
  8446                           wreg	equ	0xFE8
  8447                           indf1	equ	0xFE7
  8448                           postdec1	equ	0xFE5
  8449                           plusw1	equ	0xFE3
  8450                           fsr1h	equ	0xFE2
  8451                           fsr1l	equ	0xFE1
  8452                           indf2	equ	0xFDF
  8453                           postinc2	equ	0xFDE
  8454                           postdec2	equ	0xFDD
  8455                           plusw2	equ	0xFDB
  8456                           fsr2h	equ	0xFDA
  8457                           fsr2l	equ	0xFD9
  8458                           status	equ	0xFD8
  8459                           
  8460 ;; *************** function _internalFlash_erasePage *****************
  8461 ;; Defined at:
  8462 ;;		line 44 in file "internal_flash.c"
  8463 ;; Parameters:    Size  Location     Type
  8464 ;;  page            2    8[COMRAM] unsigned int 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  address         4   14[COMRAM] unsigned long 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      void 
  8469 ;; Registers used:
  8470 ;;		wreg, status,2, status,0, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;Total ram usage:       10 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:    1
  8483 ;; This function calls:
  8484 ;;		__internalFlash_unlockAndActivate
  8485 ;;		_internalFlash_addressFromPage
  8486 ;; This function is called by:
  8487 ;;		__bootloader_program
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text32
  8492  005EFA                     __ptext32:
  8493                           	opt stack 0
  8494  005EFA                     _internalFlash_erasePage:
  8495                           	opt stack 27
  8496                           
  8497                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  8498                           
  8499                           ;incstack = 0
  8500  005EFA  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  8501  005EFE  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  8502  005F02  ECA6  F036         	call	_internalFlash_addressFromPage	;wreg free
  8503  005F06  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  8504  005F0A  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  8505  005F0E  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  8506  005F12  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  8507                           
  8508                           ;internal_flash.c: 50: TBLPTR = address;
  8509  005F16  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  8510  005F1A  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  8511  005F1E  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  8512                           
  8513                           ;internal_flash.c: 53: if((address<0x9000) || (address+1023>=0x1FFFF))
  8514  005F22  5012               	movf	internalFlash_erasePage@address+3,w,c
  8515  005F24  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  8516  005F26  E104               	bnz	u10570
  8517  005F28  0E90               	movlw	144
  8518  005F2A  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  8519  005F2C  A0D8               	btfss	status,0,c
  8520  005F2E  0012               	return	
  8521  005F30                     u10570:
  8522  005F30  0EFF               	movlw	255
  8523  005F32  240F               	addwf	internalFlash_erasePage@address,w,c
  8524  005F34  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  8525  005F36  0E03               	movlw	3
  8526  005F38  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  8527  005F3A  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  8528  005F3C  0E00               	movlw	0
  8529  005F3E  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  8530  005F40  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  8531  005F42  0E00               	movlw	0
  8532  005F44  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  8533  005F46  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  8534  005F48  500E               	movf	??_internalFlash_erasePage+3,w,c
  8535  005F4A  E10C               	bnz	l2554
  8536  005F4C  280B               	incf	??_internalFlash_erasePage,w,c
  8537  005F4E  0EFF               	movlw	255
  8538  005F50  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  8539  005F52  0E01               	movlw	1
  8540  005F54  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  8541  005F56  B0D8               	btfsc	status,0,c
  8542  005F58  0012               	return	
  8543                           
  8544                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  8545                           
  8546                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  8547  005F5A  84A6               	bsf	4006,2,c	;volsfr
  8548                           
  8549                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  8550  005F5C  88A6               	bsf	4006,4,c	;volsfr
  8551                           
  8552                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8553  005F5E  0EB5               	movlw	181
  8554  005F60  EC14  F037         	call	__internalFlash_unlockAndActivate
  8555  005F64                     l2554:
  8556  005F64  0012               	return		;funcret
  8557  005F66                     __end_of_internalFlash_erasePage:
  8558                           	opt stack 0
  8559                           tblptru	equ	0xFF8
  8560                           tblptrh	equ	0xFF7
  8561                           tblptrl	equ	0xFF6
  8562                           tablat	equ	0xFF5
  8563                           prodh	equ	0xFF4
  8564                           prodl	equ	0xFF3
  8565                           intcon	equ	0xFF2
  8566                           intcon2	equ	0xFF1
  8567                           intcon3	equ	0xFF0
  8568                           postinc0	equ	0xFEE
  8569                           wreg	equ	0xFE8
  8570                           indf1	equ	0xFE7
  8571                           postdec1	equ	0xFE5
  8572                           plusw1	equ	0xFE3
  8573                           fsr1h	equ	0xFE2
  8574                           fsr1l	equ	0xFE1
  8575                           indf2	equ	0xFDF
  8576                           postinc2	equ	0xFDE
  8577                           postdec2	equ	0xFDD
  8578                           plusw2	equ	0xFDB
  8579                           fsr2h	equ	0xFDA
  8580                           fsr2l	equ	0xFD9
  8581                           status	equ	0xFD8
  8582                           
  8583 ;; *************** function __internalFlash_unlockAndActivate *****************
  8584 ;; Defined at:
  8585 ;;		line 112 in file "internal_flash.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;  UnlockKey       1    wreg     unsigned char 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  8590 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;Total ram usage:        2 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_internalFlash_erasePage
  8610 ;;		_internalFlash_writePage
  8611 ;;		_EraseBlock
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text33
  8616  006E28                     __ptext33:
  8617                           	opt stack 0
  8618  006E28                     __internalFlash_unlockAndActivate:
  8619                           	opt stack 27
  8620                           
  8621                           ;incstack = 0
  8622                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  8623  006E28  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  8624                           
  8625                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  8626  006E2A  0EB5               	movlw	181
  8627  006E2C  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  8628  006E2E  B4D8               	btfsc	status,2,c
  8629  006E30  D002               	goto	l2567
  8630                           
  8631                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
  8632  006E32  94A6               	bcf	4006,2,c	;volsfr
  8633                           
  8634                           ;internal_flash.c: 124: return;
  8635  006E34  0012               	return	
  8636  006E36                     l2567:
  8637                           
  8638                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
  8639  006E36  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  8640                           
  8641                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
  8642  006E3A  9EF2               	bcf	intcon,7,c	;volatile
  8643                           
  8644                           ;internal_flash.c: 129: EECON2 = 0x55;
  8645  006E3C  0E55               	movlw	85
  8646  006E3E  6EA7               	movwf	4007,c	;volsfr
  8647                           
  8648                           ;internal_flash.c: 130: EECON2 = 0xAA;
  8649  006E40  0EAA               	movlw	170
  8650  006E42  6EA7               	movwf	4007,c	;volsfr
  8651                           
  8652                           ;internal_flash.c: 131: EECON1bits.WR = 1;
  8653  006E44  82A6               	bsf	4006,1,c	;volsfr
  8654                           
  8655                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
  8656  006E46  94A6               	bcf	4006,2,c	;volsfr
  8657                           
  8658                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
  8659  006E48  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  8660  006E4A  0012               	return	
  8661                           
  8662                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
  8663  006E4C  8EF2               	bsf	intcon,7,c	;volatile
  8664  006E4E  0012               	return	
  8665  006E50                     __end_of__internalFlash_unlockAndActivate:
  8666                           	opt stack 0
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           intcon	equ	0xFF2
  8674                           intcon2	equ	0xFF1
  8675                           intcon3	equ	0xFF0
  8676                           postinc0	equ	0xFEE
  8677                           wreg	equ	0xFE8
  8678                           indf1	equ	0xFE7
  8679                           postdec1	equ	0xFE5
  8680                           plusw1	equ	0xFE3
  8681                           fsr1h	equ	0xFE2
  8682                           fsr1l	equ	0xFE1
  8683                           indf2	equ	0xFDF
  8684                           postinc2	equ	0xFDE
  8685                           postdec2	equ	0xFDD
  8686                           plusw2	equ	0xFDB
  8687                           fsr2h	equ	0xFDA
  8688                           fsr2l	equ	0xFD9
  8689                           status	equ	0xFD8
  8690                           
  8691 ;; *************** function _internalFlash_addressWithinPage *****************
  8692 ;; Defined at:
  8693 ;;		line 185 in file "internal_flash.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;  address         4    8[COMRAM] unsigned long 
  8696 ;;  page            2   12[COMRAM] unsigned int 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;  page_start_a    4   18[COMRAM] unsigned long 
  8699 ;; Return value:  Size  Location     Type
  8700 ;;                  2    8[COMRAM] unsigned int 
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8708 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8710 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8712 ;;Total ram usage:       14 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    1
  8715 ;; This function calls:
  8716 ;;		_internalFlash_addressFromPage
  8717 ;; This function is called by:
  8718 ;;		__bootloader_program
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text34
  8723  00622A                     __ptext34:
  8724                           	opt stack 0
  8725  00622A                     _internalFlash_addressWithinPage:
  8726                           	opt stack 27
  8727                           
  8728                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  8729                           
  8730                           ;incstack = 0
  8731  00622A  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  8732  00622E  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  8733  006232  ECA6  F036         	call	_internalFlash_addressFromPage	;wreg free
  8734  006236  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  8735  00623A  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  8736  00623E  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  8737  006242  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  8738                           
  8739                           ;internal_flash.c: 189: address = address - page_start_address;
  8740  006246  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  8741  00624A  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  8742  00624E  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  8743  006252  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  8744  006256  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  8745  006258  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  8746  00625A  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  8747  00625C  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  8748  00625E  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  8749  006260  0E00               	movlw	0
  8750  006262  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  8751  006264  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  8752  006266  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  8753  006268  5009               	movf	internalFlash_addressWithinPage@address,w,c
  8754  00626A  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  8755  00626C  6E09               	movwf	internalFlash_addressWithinPage@address,c
  8756  00626E  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  8757  006270  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  8758  006272  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  8759  006274  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  8760  006276  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  8761  006278  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  8762  00627A  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  8763  00627C  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  8764  00627E  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  8765                           
  8766                           ;internal_flash.c: 190: return (uint16_t) address;
  8767  006280  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  8768  006284  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  8769  006288  0012               	return	
  8770  00628A                     __end_of_internalFlash_addressWithinPage:
  8771                           	opt stack 0
  8772                           tblptru	equ	0xFF8
  8773                           tblptrh	equ	0xFF7
  8774                           tblptrl	equ	0xFF6
  8775                           tablat	equ	0xFF5
  8776                           prodh	equ	0xFF4
  8777                           prodl	equ	0xFF3
  8778                           intcon	equ	0xFF2
  8779                           intcon2	equ	0xFF1
  8780                           intcon3	equ	0xFF0
  8781                           postinc0	equ	0xFEE
  8782                           wreg	equ	0xFE8
  8783                           indf1	equ	0xFE7
  8784                           postdec1	equ	0xFE5
  8785                           plusw1	equ	0xFE3
  8786                           fsr1h	equ	0xFE2
  8787                           fsr1l	equ	0xFE1
  8788                           indf2	equ	0xFDF
  8789                           postinc2	equ	0xFDE
  8790                           postdec2	equ	0xFDD
  8791                           plusw2	equ	0xFDB
  8792                           fsr2h	equ	0xFDA
  8793                           fsr2l	equ	0xFD9
  8794                           status	equ	0xFD8
  8795                           
  8796 ;; *************** function _internalFlash_addressFromPage *****************
  8797 ;; Defined at:
  8798 ;;		line 177 in file "internal_flash.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  page            2    0[COMRAM] unsigned int 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  address         4    4[COMRAM] unsigned long 
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  4    0[COMRAM] unsigned long 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8815 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;Total ram usage:        8 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_internalFlash_readPage
  8822 ;;		_internalFlash_erasePage
  8823 ;;		_internalFlash_writePage
  8824 ;;		_internalFlash_addressWithinPage
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text35
  8829  006D4C                     __ptext35:
  8830                           	opt stack 0
  8831  006D4C                     _internalFlash_addressFromPage:
  8832                           	opt stack 27
  8833                           
  8834                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
  8835                           
  8836                           ;incstack = 0
  8837  006D4C  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  8838  006D50  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  8839  006D54  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  8840  006D56  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  8841                           
  8842                           ;internal_flash.c: 181: address <<= 10;
  8843  006D58  0E0A               	movlw	10
  8844  006D5A                     u9875:
  8845  006D5A  90D8               	bcf	status,0,c
  8846  006D5C  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  8847  006D5E  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  8848  006D60  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  8849  006D62  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  8850  006D64  2EE8               	decfsz	wreg,f,c
  8851  006D66  D7F9               	goto	u9875
  8852                           
  8853                           ;internal_flash.c: 182: return address;
  8854  006D68  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  8855  006D6C  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  8856  006D70  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  8857  006D74  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  8858  006D78  0012               	return	
  8859  006D7A                     __end_of_internalFlash_addressFromPage:
  8860                           	opt stack 0
  8861                           tblptru	equ	0xFF8
  8862                           tblptrh	equ	0xFF7
  8863                           tblptrl	equ	0xFF6
  8864                           tablat	equ	0xFF5
  8865                           prodh	equ	0xFF4
  8866                           prodl	equ	0xFF3
  8867                           intcon	equ	0xFF2
  8868                           intcon2	equ	0xFF1
  8869                           intcon3	equ	0xFF0
  8870                           postinc0	equ	0xFEE
  8871                           wreg	equ	0xFE8
  8872                           indf1	equ	0xFE7
  8873                           postdec1	equ	0xFE5
  8874                           plusw1	equ	0xFE3
  8875                           fsr1h	equ	0xFE2
  8876                           fsr1l	equ	0xFE1
  8877                           indf2	equ	0xFDF
  8878                           postinc2	equ	0xFDE
  8879                           postdec2	equ	0xFDD
  8880                           plusw2	equ	0xFDB
  8881                           fsr2h	equ	0xFDA
  8882                           fsr2l	equ	0xFD9
  8883                           status	equ	0xFD8
  8884                           
  8885 ;; *************** function _fat_read_from_file_fast *****************
  8886 ;; Defined at:
  8887 ;;		line 787 in file "fat16.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  start_byte      4   65[COMRAM] unsigned long 
  8890 ;;  length          4   69[COMRAM] unsigned long 
  8891 ;;  data            2   73[COMRAM] PTR unsigned char 
  8892 ;;		 -> file_buffer(50), 
  8893 ;;  cluster         2   75[COMRAM] PTR unsigned int 
  8894 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
  8895 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
  8896 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
  8897 ;; Auto vars:     Size  Location     Type
  8898 ;;  position        4   10[BANK0 ] unsigned long 
  8899 ;;  read_length     2    8[BANK0 ] unsigned int 
  8900 ;;  needed_clust    2    6[BANK0 ] unsigned int 
  8901 ;;  offset          2    4[BANK0 ] unsigned int 
  8902 ;;  working_clus    2    2[BANK0 ] unsigned int 
  8903 ;;  sector          2    0[BANK0 ] unsigned int 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      unsigned char 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8913 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8917 ;;Total ram usage:       40 bytes
  8918 ;; Hardware stack levels used:    1
  8919 ;; Hardware stack levels required when called:    7
  8920 ;; This function calls:
  8921 ;;		__data_sector_from_cluster
  8922 ;;		__find_nth_cluster
  8923 ;;		__read_fat
  8924 ;;		_flash_partial_read
  8925 ;; This function is called by:
  8926 ;;		__bootloader_verify_file
  8927 ;;		__bootloader_program
  8928 ;;		_fat_read_from_file
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text36
  8933  001C16                     __ptext36:
  8934                           	opt stack 0
  8935  001C16                     _fat_read_from_file_fast:
  8936                           	opt stack 21
  8937                           
  8938                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
  8939                           
  8940                           ;incstack = 0
  8941  001C16  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
  8942  001C1A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
  8943  001C1E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
  8944  001C22  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
  8945  001C26  0E0A               	movlw	10
  8946  001C28  D005               	goto	u10280
  8947  001C2A                     u10285:
  8948  001C2A  90D8               	bcf	status,0,c
  8949  001C2C  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
  8950  001C2E  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
  8951  001C30  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
  8952  001C32  3250               	rrcf	??_fat_read_from_file_fast,f,c
  8953  001C34                     u10280:
  8954  001C34  2EE8               	decfsz	wreg,f,c
  8955  001C36  D7F9               	goto	u10285
  8956  001C38  C050  F0BC         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
  8957  001C3C  C051  F0BD         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
  8958                           
  8959                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
  8960  001C40  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  8961  001C44  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  8962  001C48  50DE               	movf	postinc2,w,c
  8963  001C4A  0100               	movlb	0	; () banked
  8964  001C4C  5DBC               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  8965  001C4E  50DE               	movf	postinc2,w,c
  8966  001C50  59BD               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  8967  001C52  B0D8               	btfsc	status,0,c
  8968  001C54  D002               	goto	l2082
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
  8972  001C56  0EFF               	movlw	255
  8973                           
  8974                           ; BSR set to: 0
  8975  001C58  0012               	return	
  8976  001C5A                     l2082:
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
  8980                           
  8981                           ; BSR set to: 0
  8982  001C5A  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  8983  001C5E  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  8984  001C62  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
  8985  001C66  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
  8986  001C6A  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  8987  001C6E  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  8988  001C72  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
  8989  001C76  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
  8990  001C7A  1E50               	comf	??_fat_read_from_file_fast,f,c
  8991  001C7C  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  8992  001C7E  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  8993  001C80  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  8994  001C82  51BC               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  8995  001C84  2450               	addwf	??_fat_read_from_file_fast,w,c
  8996  001C86  6E3A               	movwf	__find_nth_cluster@n,c
  8997  001C88  51BD               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  8998  001C8A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  8999  001C8C  6E3B               	movwf	__find_nth_cluster@n+1,c
  9000  001C8E  ECBC  F02A         	call	__find_nth_cluster	;wreg free
  9001  001C92  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9002  001C96  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9003  001C9A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
  9004  001C9E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
  9005                           
  9006                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
  9007  001CA2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9008  001CA6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9009  001CAA  C0BC  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
  9010  001CAE  C0BD  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
  9011                           
  9012                           ;fat16.c: 813: working_cluster = (*cluster);
  9013  001CB2  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9014  001CB6  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9015  001CBA  CFDE F0B8          	movff	postinc2,fat_read_from_file_fast@working_cluster
  9016  001CBE  CFDD F0B9          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
  9017                           
  9018                           ;fat16.c: 816: position = (needed_cluster << 9);
  9019  001CC2  C0BC  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
  9020  001CC6  C0BD  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
  9021  001CCA  0E09               	movlw	9
  9022  001CCC                     u10305:
  9023  001CCC  90D8               	bcf	status,0,c
  9024  001CCE  3650               	rlcf	??_fat_read_from_file_fast,f,c
  9025  001CD0  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
  9026  001CD2  2EE8               	decfsz	wreg,f,c
  9027  001CD4  D7FB               	goto	u10305
  9028  001CD6  C050  F0C0         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
  9029  001CDA  C051  F0C1         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
  9030  001CDE  0100               	movlb	0	; () banked
  9031  001CE0  6BC2               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
  9032  001CE2  6BC3               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;fat16.c: 817: offset = start_byte - position;
  9036  001CE4  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9037  001CE8  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9038  001CEC  1E50               	comf	??_fat_read_from_file_fast,f,c
  9039  001CEE  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9040  001CF0  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9041  001CF2  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9042  001CF4  5042               	movf	fat_read_from_file_fast@start_byte,w,c
  9043  001CF6  2450               	addwf	??_fat_read_from_file_fast,w,c
  9044  001CF8  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9045  001CFA  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
  9046  001CFC  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9047  001CFE  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;fat16.c: 820: position = 0;
  9051  001D00  0E00               	movlw	0
  9052  001D02  6FC0               	movwf	fat_read_from_file_fast@position& (0+255),b
  9053  001D04  0E00               	movlw	0
  9054  001D06  6FC1               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
  9055  001D08  0E00               	movlw	0
  9056  001D0A  6FC2               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
  9057  001D0C  0E00               	movlw	0
  9058  001D0E  6FC3               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
  9059                           
  9060                           ;fat16.c: 821: while(position < length)
  9061  001D10  D089               	goto	l2084
  9062  001D12                     
  9063                           ; BSR set to: 0
  9064                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
  9065                           
  9066                           ; BSR set to: 0
  9067  001D12  0E02               	movlw	2
  9068  001D14  19BB               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
  9069  001D16  11BA               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
  9070  001D18  A4D8               	btfss	status,2,c
  9071  001D1A  D00F               	goto	l2086
  9072                           
  9073                           ; BSR set to: 0
  9074                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
  9075  001D1C  C0B8  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
  9076  001D20  C0B9  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
  9077  001D24  EC25  F032         	call	__read_fat	;wreg free
  9078  001D28  C030  F0B8         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
  9079  001D2C  C031  F0B9         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
  9080                           
  9081                           ;fat16.c: 828: offset = 0;
  9082  001D30  0E00               	movlw	0
  9083  001D32  0100               	movlb	0	; () banked
  9084  001D34  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9085  001D36  0E00               	movlw	0
  9086  001D38  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9087  001D3A                     l2086:
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
  9091                           
  9092                           ; BSR set to: 0
  9093  001D3A  C0B8  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
  9094  001D3E  C0B9  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
  9095  001D42  ECC8  F038         	call	__data_sector_from_cluster	;wreg free
  9096  001D46  C001  F0B6         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
  9097  001D4A  C002  F0B7         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
  9098                           
  9099                           ;fat16.c: 835: read_length = 512 - offset;
  9100  001D4E  C0BA  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
  9101  001D52  C0BB  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
  9102  001D56  1E50               	comf	??_fat_read_from_file_fast,f,c
  9103  001D58  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9104  001D5A  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9105  001D5C  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9106  001D5E  0E00               	movlw	0
  9107  001D60  2450               	addwf	??_fat_read_from_file_fast,w,c
  9108  001D62  0100               	movlb	0	; () banked
  9109  001D64  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9110  001D66  0E02               	movlw	2
  9111  001D68  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9112  001D6A  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9113                           
  9114                           ; BSR set to: 0
  9115                           ;fat16.c: 836: if(read_length > (length-position))
  9116  001D6C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9117  001D6E  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
  9118  001D70  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9119  001D72  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
  9120  001D74  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
  9121  001D76  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
  9122  001D78  C0C0  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
  9123  001D7C  C0C1  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
  9124  001D80  C0C2  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
  9125  001D84  C0C3  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
  9126  001D88  1E54               	comf	??_fat_read_from_file_fast+4,f,c
  9127  001D8A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
  9128  001D8C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
  9129  001D8E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
  9130  001D90  2A54               	incf	??_fat_read_from_file_fast+4,f,c
  9131  001D92  0E00               	movlw	0
  9132  001D94  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
  9133  001D96  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
  9134  001D98  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
  9135  001D9A  5046               	movf	fat_read_from_file_fast@length,w,c
  9136  001D9C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
  9137  001D9E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
  9138  001DA0  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9139  001DA2  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
  9140  001DA4  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
  9141  001DA6  5048               	movf	fat_read_from_file_fast@length+2,w,c
  9142  001DA8  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
  9143  001DAA  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
  9144  001DAC  5049               	movf	fat_read_from_file_fast@length+3,w,c
  9145  001DAE  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
  9146  001DB0  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
  9147  001DB2  5050               	movf	??_fat_read_from_file_fast,w,c
  9148  001DB4  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
  9149  001DB6  5051               	movf	??_fat_read_from_file_fast+1,w,c
  9150  001DB8  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
  9151  001DBA  5052               	movf	??_fat_read_from_file_fast+2,w,c
  9152  001DBC  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
  9153  001DBE  5053               	movf	??_fat_read_from_file_fast+3,w,c
  9154  001DC0  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
  9155  001DC2  B0D8               	btfsc	status,0,c
  9156  001DC4  D00E               	goto	l2087
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
  9160  001DC6  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9161  001DCA  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9162  001DCE  1E50               	comf	??_fat_read_from_file_fast,f,c
  9163  001DD0  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9164  001DD2  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9165  001DD4  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9166  001DD6  5046               	movf	fat_read_from_file_fast@length,w,c
  9167  001DD8  2450               	addwf	??_fat_read_from_file_fast,w,c
  9168  001DDA  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9169  001DDC  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9170  001DDE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9171  001DE0  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9172  001DE2                     l2087:
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
  9176                           
  9177                           ; BSR set to: 0
  9178  001DE2  C0B6  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
  9179  001DE6  C0B7  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
  9180  001DEA  C0BA  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
  9181  001DEE  C0BB  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
  9182  001DF2  C0BE  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
  9183  001DF6  C0BF  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
  9184  001DFA  51C0               	movf	fat_read_from_file_fast@position& (0+255),w,b
  9185  001DFC  244A               	addwf	fat_read_from_file_fast@data,w,c
  9186  001DFE  6E2E               	movwf	flash_partial_read@data,c
  9187  001E00  51C1               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
  9188  001E02  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
  9189  001E04  6E2F               	movwf	flash_partial_read@data+1,c
  9190  001E06  EC3C  F037         	call	_flash_partial_read	;wreg free
  9191                           
  9192                           ;fat16.c: 846: position += read_length;
  9193  001E0A  0100               	movlb	0	; () banked
  9194  001E0C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9195  001E0E  27C0               	addwf	fat_read_from_file_fast@position& (0+255),f,b
  9196  001E10  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9197  001E12  23C1               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
  9198  001E14  0E00               	movlw	0
  9199  001E16  23C2               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
  9200  001E18  0E00               	movlw	0
  9201  001E1A  23C3               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;fat16.c: 847: offset += read_length;
  9205  001E1C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9206  001E1E  27BA               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
  9207  001E20  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9208  001E22  23BB               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
  9209  001E24                     l2084:
  9210                           
  9211                           ; BSR set to: 0
  9212                           
  9213                           ; BSR set to: 0
  9214  001E24  5046               	movf	fat_read_from_file_fast@length,w,c
  9215  001E26  5DC0               	subwf	fat_read_from_file_fast@position& (0+255),w,b
  9216  001E28  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9217  001E2A  59C1               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
  9218  001E2C  5048               	movf	fat_read_from_file_fast@length+2,w,c
  9219  001E2E  59C2               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
  9220  001E30  5049               	movf	fat_read_from_file_fast@length+3,w,c
  9221  001E32  59C3               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
  9222  001E34  A0D8               	btfss	status,0,c
  9223  001E36  D76D               	goto	l2085
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
  9227                           
  9228                           ; BSR set to: 0
  9229  001E38  0E00               	movlw	0
  9230  001E3A  0012               	return	
  9231  001E3C                     __end_of_fat_read_from_file_fast:
  9232                           	opt stack 0
  9233                           tblptru	equ	0xFF8
  9234                           tblptrh	equ	0xFF7
  9235                           tblptrl	equ	0xFF6
  9236                           tablat	equ	0xFF5
  9237                           prodh	equ	0xFF4
  9238                           prodl	equ	0xFF3
  9239                           intcon	equ	0xFF2
  9240                           intcon2	equ	0xFF1
  9241                           intcon3	equ	0xFF0
  9242                           postinc0	equ	0xFEE
  9243                           wreg	equ	0xFE8
  9244                           indf1	equ	0xFE7
  9245                           postdec1	equ	0xFE5
  9246                           plusw1	equ	0xFE3
  9247                           fsr1h	equ	0xFE2
  9248                           fsr1l	equ	0xFE1
  9249                           indf2	equ	0xFDF
  9250                           postinc2	equ	0xFDE
  9251                           postdec2	equ	0xFDD
  9252                           plusw2	equ	0xFDB
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8
  9256                           
  9257 ;; *************** function __find_nth_cluster *****************
  9258 ;; Defined at:
  9259 ;;		line 182 in file "fat16.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  cluster         2   55[COMRAM] unsigned int 
  9262 ;;  n               2   57[COMRAM] unsigned int 
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  sector          2   63[COMRAM] unsigned int 
  9265 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
  9266 ;;  offset          2   59[COMRAM] unsigned int 
  9267 ;; Return value:  Size  Location     Type
  9268 ;;                  2   55[COMRAM] unsigned int 
  9269 ;; Registers used:
  9270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9271 ;; Tracked objects:
  9272 ;;		On entry : 0/0
  9273 ;;		On exit  : 0/0
  9274 ;;		Unchanged: 0/0
  9275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;Total ram usage:       10 bytes
  9281 ;; Hardware stack levels used:    1
  9282 ;; Hardware stack levels required when called:    6
  9283 ;; This function calls:
  9284 ;;		__fat_offset_from_cluster
  9285 ;;		__fat_sector_from_cluster
  9286 ;;		__read_fat
  9287 ;;		__read_value_from_offset
  9288 ;;		_flash_sector_read
  9289 ;; This function is called by:
  9290 ;;		_fat_read_from_file_fast
  9291 ;;		_fat_modify_file
  9292 ;;		_fat_copy_sector_to_buffer
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text37
  9297  005578                     __ptext37:
  9298                           	opt stack 0
  9299  005578                     __find_nth_cluster:
  9300                           	opt stack 21
  9301                           
  9302                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;incstack = 0
  9306  005578  0E00               	movlw	0
  9307  00557A  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
  9308  00557C  0E00               	movlw	0
  9309  00557E  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
  9310                           
  9311                           ;fat16.c: 189: if(n==1)
  9312  005580  043A               	decf	__find_nth_cluster@n,w,c
  9313  005582  103B               	iorwf	__find_nth_cluster@n+1,w,c
  9314  005584  A4D8               	btfss	status,2,c
  9315  005586  D03E               	goto	l1969
  9316                           
  9317                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
  9318  005588  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
  9319  00558C  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
  9320  005590  EC25  F032         	call	__read_fat	;wreg free
  9321  005594  C030  F038         	movff	?__read_fat,?__find_nth_cluster
  9322  005598  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
  9323  00559C  0012               	return	
  9324  00559E                     
  9325                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
  9326  00559E  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
  9327  0055A2  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
  9328  0055A6  EC50  F038         	call	__fat_sector_from_cluster	;wreg free
  9329  0055AA  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
  9330  0055AE  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
  9331                           
  9332                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
  9333  0055B2  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
  9334  0055B6  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
  9335  0055BA  EC5C  F038         	call	__fat_offset_from_cluster	;wreg free
  9336  0055BE  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
  9337  0055C2  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
  9338                           
  9339                           ;fat16.c: 201: if(sector != sector_in_buffer)
  9340  0055C6  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
  9341  0055C8  1840               	xorwf	__find_nth_cluster@sector,w,c
  9342  0055CA  E104               	bnz	u9770
  9343  0055CC  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
  9344  0055CE  1841               	xorwf	__find_nth_cluster@sector+1,w,c
  9345  0055D0  B4D8               	btfsc	status,2,c
  9346  0055D2  D00A               	goto	l1971
  9347  0055D4                     u9770:
  9348                           
  9349                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
  9350  0055D4  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
  9351  0055D8  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
  9352  0055DC  0EC4               	movlw	low _buffer
  9353  0055DE  6E2A               	movwf	flash_sector_read@data,c
  9354  0055E0  0E02               	movlw	high _buffer
  9355  0055E2  6E2B               	movwf	flash_sector_read@data+1,c
  9356  0055E4  EC62  F037         	call	_flash_sector_read	;wreg free
  9357  0055E8                     l1971:
  9358                           
  9359                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
  9360  0055E8  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
  9361  0055EC  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
  9362  0055F0  0EC4               	movlw	low _buffer
  9363  0055F2  6E03               	movwf	__read_value_from_offset@buffer,c
  9364  0055F4  0E02               	movlw	high _buffer
  9365  0055F6  6E04               	movwf	__read_value_from_offset@buffer+1,c
  9366  0055F8  EC5A  F034         	call	__read_value_from_offset	;wreg free
  9367  0055FC  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
  9368  005600  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
  9369  005604                     l1969:
  9370  005604  503A               	movf	__find_nth_cluster@n,w,c
  9371  005606  103B               	iorwf	__find_nth_cluster@n+1,w,c
  9372  005608  A4D8               	btfss	status,2,c
  9373  00560A  D7C9               	goto	l1970
  9374                           
  9375                           ;fat16.c: 208: };fat16.c: 210: return cluster;
  9376  00560C  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
  9377  005610  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
  9378  005614  0012               	return		;funcret
  9379  005616                     __end_of__find_nth_cluster:
  9380                           	opt stack 0
  9381                           tblptru	equ	0xFF8
  9382                           tblptrh	equ	0xFF7
  9383                           tblptrl	equ	0xFF6
  9384                           tablat	equ	0xFF5
  9385                           prodh	equ	0xFF4
  9386                           prodl	equ	0xFF3
  9387                           intcon	equ	0xFF2
  9388                           intcon2	equ	0xFF1
  9389                           intcon3	equ	0xFF0
  9390                           postinc0	equ	0xFEE
  9391                           wreg	equ	0xFE8
  9392                           indf1	equ	0xFE7
  9393                           postdec1	equ	0xFE5
  9394                           plusw1	equ	0xFE3
  9395                           fsr1h	equ	0xFE2
  9396                           fsr1l	equ	0xFE1
  9397                           indf2	equ	0xFDF
  9398                           postinc2	equ	0xFDE
  9399                           postdec2	equ	0xFDD
  9400                           plusw2	equ	0xFDB
  9401                           fsr2h	equ	0xFDA
  9402                           fsr2l	equ	0xFD9
  9403                           status	equ	0xFD8
  9404                           
  9405 ;; *************** function __read_value_from_offset *****************
  9406 ;; Defined at:
  9407 ;;		line 114 in file "fat16.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  offset          2    0[COMRAM] unsigned int 
  9410 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  9411 ;;		 -> buffer(512), 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  value           2    7[COMRAM] unsigned int 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  2    0[COMRAM] unsigned int 
  9416 ;; Registers used:
  9417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;Total ram usage:        9 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; This function calls:
  9430 ;;		Nothing
  9431 ;; This function is called by:
  9432 ;;		__find_nth_cluster
  9433 ;;		__make_cluster_chain
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           	psect	text38
  9438  0068B4                     __ptext38:
  9439                           	opt stack 0
  9440  0068B4                     __read_value_from_offset:
  9441                           	opt stack 26
  9442                           
  9443                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
  9444                           
  9445                           ;incstack = 0
  9446  0068B4  0E01               	movlw	1
  9447  0068B6  2401               	addwf	__read_value_from_offset@offset,w,c
  9448  0068B8  6E05               	movwf	??__read_value_from_offset& (0+255),c
  9449  0068BA  0E00               	movlw	0
  9450  0068BC  2002               	addwfc	__read_value_from_offset@offset+1,w,c
  9451  0068BE  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
  9452  0068C0  5005               	movf	??__read_value_from_offset,w,c
  9453  0068C2  2403               	addwf	__read_value_from_offset@buffer,w,c
  9454  0068C4  6ED9               	movwf	fsr2l,c
  9455  0068C6  5006               	movf	??__read_value_from_offset+1,w,c
  9456  0068C8  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
  9457  0068CA  6EDA               	movwf	fsr2h,c
  9458  0068CC  50DF               	movf	indf2,w,c
  9459  0068CE  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
  9460  0068D0  5007               	movf	??__read_value_from_offset+2,w,c
  9461  0068D2  6E08               	movwf	__read_value_from_offset@value,c
  9462  0068D4  6A09               	clrf	__read_value_from_offset@value+1,c
  9463                           
  9464                           ;fat16.c: 118: value <<= 8;
  9465  0068D6  5008               	movf	__read_value_from_offset@value,w,c
  9466  0068D8  6E09               	movwf	__read_value_from_offset@value+1,c
  9467  0068DA  6A08               	clrf	__read_value_from_offset@value,c
  9468                           
  9469                           ;fat16.c: 119: value |= buffer[offset];
  9470  0068DC  5001               	movf	__read_value_from_offset@offset,w,c
  9471  0068DE  2403               	addwf	__read_value_from_offset@buffer,w,c
  9472  0068E0  6ED9               	movwf	fsr2l,c
  9473  0068E2  5002               	movf	__read_value_from_offset@offset+1,w,c
  9474  0068E4  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
  9475  0068E6  6EDA               	movwf	fsr2h,c
  9476  0068E8  50DF               	movf	indf2,w,c
  9477  0068EA  6E05               	movwf	??__read_value_from_offset& (0+255),c
  9478  0068EC  5005               	movf	??__read_value_from_offset,w,c
  9479  0068EE  1208               	iorwf	__read_value_from_offset@value,f,c
  9480                           
  9481                           ;fat16.c: 120: return value;
  9482  0068F0  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
  9483  0068F4  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
  9484  0068F8  0012               	return	
  9485  0068FA                     __end_of__read_value_from_offset:
  9486                           	opt stack 0
  9487                           tblptru	equ	0xFF8
  9488                           tblptrh	equ	0xFF7
  9489                           tblptrl	equ	0xFF6
  9490                           tablat	equ	0xFF5
  9491                           prodh	equ	0xFF4
  9492                           prodl	equ	0xFF3
  9493                           intcon	equ	0xFF2
  9494                           intcon2	equ	0xFF1
  9495                           intcon3	equ	0xFF0
  9496                           postinc0	equ	0xFEE
  9497                           wreg	equ	0xFE8
  9498                           indf1	equ	0xFE7
  9499                           postdec1	equ	0xFE5
  9500                           plusw1	equ	0xFE3
  9501                           fsr1h	equ	0xFE2
  9502                           fsr1l	equ	0xFE1
  9503                           indf2	equ	0xFDF
  9504                           postinc2	equ	0xFDE
  9505                           postdec2	equ	0xFDD
  9506                           plusw2	equ	0xFDB
  9507                           fsr2h	equ	0xFDA
  9508                           fsr2l	equ	0xFD9
  9509                           status	equ	0xFD8
  9510                           
  9511 ;; *************** function __read_fat *****************
  9512 ;; Defined at:
  9513 ;;		line 456 in file "fat16.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  cluster         2   47[COMRAM] unsigned int 
  9516 ;; Auto vars:     Size  Location     Type
  9517 ;;  value           2   53[COMRAM] unsigned int 
  9518 ;;  offset          2   51[COMRAM] unsigned int 
  9519 ;;  sector          2   49[COMRAM] unsigned int 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  2   47[COMRAM] unsigned int 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0, cstack
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9532 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9533 ;;Total ram usage:        8 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    5
  9536 ;; This function calls:
  9537 ;;		__fat_offset_from_cluster
  9538 ;;		__fat_sector_from_cluster
  9539 ;;		_flash_partial_read
  9540 ;; This function is called by:
  9541 ;;		__find_nth_cluster
  9542 ;;		_fat_read_from_file_fast
  9543 ;;		_fat_modify_file
  9544 ;; This function uses a non-reentrant model
  9545 ;;
  9546                           
  9547                           	psect	text39
  9548  00644A                     __ptext39:
  9549                           	opt stack 0
  9550  00644A                     __read_fat:
  9551                           	opt stack 22
  9552                           
  9553                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
  9554                           
  9555                           ;incstack = 0
  9556  00644A  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
  9557  00644E  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
  9558  006452  EC50  F038         	call	__fat_sector_from_cluster	;wreg free
  9559  006456  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
  9560  00645A  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
  9561                           
  9562                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
  9563  00645E  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
  9564  006462  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
  9565  006466  EC5C  F038         	call	__fat_offset_from_cluster	;wreg free
  9566  00646A  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
  9567  00646E  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
  9568                           
  9569                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
  9570  006472  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
  9571  006476  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
  9572  00647A  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
  9573  00647E  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
  9574  006482  0E00               	movlw	0
  9575  006484  6E2D               	movwf	flash_partial_read@length+1,c
  9576  006486  0E02               	movlw	2
  9577  006488  6E2C               	movwf	flash_partial_read@length,c
  9578  00648A  0E36               	movlw	low __read_fat@value
  9579  00648C  6E2E               	movwf	flash_partial_read@data,c
  9580  00648E  0E00               	movlw	high __read_fat@value
  9581  006490  6E2F               	movwf	flash_partial_read@data+1,c
  9582  006492  EC3C  F037         	call	_flash_partial_read	;wreg free
  9583                           
  9584                           ;fat16.c: 470: return value;
  9585  006496  C036  F030         	movff	__read_fat@value,?__read_fat
  9586  00649A  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
  9587  00649E  0012               	return	
  9588  0064A0                     __end_of__read_fat:
  9589                           	opt stack 0
  9590                           tblptru	equ	0xFF8
  9591                           tblptrh	equ	0xFF7
  9592                           tblptrl	equ	0xFF6
  9593                           tablat	equ	0xFF5
  9594                           prodh	equ	0xFF4
  9595                           prodl	equ	0xFF3
  9596                           intcon	equ	0xFF2
  9597                           intcon2	equ	0xFF1
  9598                           intcon3	equ	0xFF0
  9599                           postinc0	equ	0xFEE
  9600                           wreg	equ	0xFE8
  9601                           indf1	equ	0xFE7
  9602                           postdec1	equ	0xFE5
  9603                           plusw1	equ	0xFE3
  9604                           fsr1h	equ	0xFE2
  9605                           fsr1l	equ	0xFE1
  9606                           indf2	equ	0xFDF
  9607                           postinc2	equ	0xFDE
  9608                           postdec2	equ	0xFDD
  9609                           plusw2	equ	0xFDB
  9610                           fsr2h	equ	0xFDA
  9611                           fsr2l	equ	0xFD9
  9612                           status	equ	0xFD8
  9613                           
  9614 ;; *************** function __fat_sector_from_cluster *****************
  9615 ;; Defined at:
  9616 ;;		line 75 in file "fat16.c"
  9617 ;; Parameters:    Size  Location     Type
  9618 ;;  cluster         2    0[COMRAM] unsigned int 
  9619 ;; Auto vars:     Size  Location     Type
  9620 ;;		None
  9621 ;; Return value:  Size  Location     Type
  9622 ;;                  2    0[COMRAM] unsigned int 
  9623 ;; Registers used:
  9624 ;;		wreg, status,2, status,0
  9625 ;; Tracked objects:
  9626 ;;		On entry : 0/0
  9627 ;;		On exit  : 0/0
  9628 ;;		Unchanged: 0/0
  9629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;Total ram usage:        2 bytes
  9635 ;; Hardware stack levels used:    1
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		__find_nth_cluster
  9640 ;;		__read_fat
  9641 ;;		__make_cluster_chain
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text40
  9646  0070A0                     __ptext40:
  9647                           	opt stack 0
  9648  0070A0                     __fat_sector_from_cluster:
  9649                           	opt stack 26
  9650                           
  9651                           ;fat16.c: 77: cluster >>= 8;
  9652                           
  9653                           ;incstack = 0
  9654  0070A0  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
  9655  0070A2  6E01               	movwf	__fat_sector_from_cluster@cluster,c
  9656  0070A4  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
  9657                           
  9658                           ;fat16.c: 78: cluster += 2;
  9659  0070A6  0E02               	movlw	2
  9660  0070A8  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
  9661  0070AA  0E00               	movlw	0
  9662  0070AC  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
  9663                           
  9664                           ;fat16.c: 79: return cluster;
  9665  0070AE  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
  9666  0070B2  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
  9667  0070B6  0012               	return	
  9668  0070B8                     __end_of__fat_sector_from_cluster:
  9669                           	opt stack 0
  9670                           tblptru	equ	0xFF8
  9671                           tblptrh	equ	0xFF7
  9672                           tblptrl	equ	0xFF6
  9673                           tablat	equ	0xFF5
  9674                           prodh	equ	0xFF4
  9675                           prodl	equ	0xFF3
  9676                           intcon	equ	0xFF2
  9677                           intcon2	equ	0xFF1
  9678                           intcon3	equ	0xFF0
  9679                           postinc0	equ	0xFEE
  9680                           wreg	equ	0xFE8
  9681                           indf1	equ	0xFE7
  9682                           postdec1	equ	0xFE5
  9683                           plusw1	equ	0xFE3
  9684                           fsr1h	equ	0xFE2
  9685                           fsr1l	equ	0xFE1
  9686                           indf2	equ	0xFDF
  9687                           postinc2	equ	0xFDE
  9688                           postdec2	equ	0xFDD
  9689                           plusw2	equ	0xFDB
  9690                           fsr2h	equ	0xFDA
  9691                           fsr2l	equ	0xFD9
  9692                           status	equ	0xFD8
  9693                           
  9694 ;; *************** function __fat_offset_from_cluster *****************
  9695 ;; Defined at:
  9696 ;;		line 82 in file "fat16.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  cluster         2    0[COMRAM] unsigned int 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  2    0[COMRAM] unsigned int 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;Total ram usage:        2 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		__find_nth_cluster
  9720 ;;		__read_fat
  9721 ;;		__make_cluster_chain
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text41
  9726  0070B8                     __ptext41:
  9727                           	opt stack 0
  9728  0070B8                     __fat_offset_from_cluster:
  9729                           	opt stack 26
  9730                           
  9731                           ;fat16.c: 84: cluster &= 0xFF;
  9732                           
  9733                           ;incstack = 0
  9734  0070B8  0EFF               	movlw	255
  9735  0070BA  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
  9736  0070BC  0E00               	movlw	0
  9737  0070BE  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
  9738                           
  9739                           ;fat16.c: 85: cluster <<= 1;
  9740  0070C0  90D8               	bcf	status,0,c
  9741  0070C2  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
  9742  0070C4  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
  9743                           
  9744                           ;fat16.c: 86: return cluster;
  9745  0070C6  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
  9746  0070CA  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
  9747  0070CE  0012               	return	
  9748  0070D0                     __end_of__fat_offset_from_cluster:
  9749                           	opt stack 0
  9750                           tblptru	equ	0xFF8
  9751                           tblptrh	equ	0xFF7
  9752                           tblptrl	equ	0xFF6
  9753                           tablat	equ	0xFF5
  9754                           prodh	equ	0xFF4
  9755                           prodl	equ	0xFF3
  9756                           intcon	equ	0xFF2
  9757                           intcon2	equ	0xFF1
  9758                           intcon3	equ	0xFF0
  9759                           postinc0	equ	0xFEE
  9760                           wreg	equ	0xFE8
  9761                           indf1	equ	0xFE7
  9762                           postdec1	equ	0xFE5
  9763                           plusw1	equ	0xFE3
  9764                           fsr1h	equ	0xFE2
  9765                           fsr1l	equ	0xFE1
  9766                           indf2	equ	0xFDF
  9767                           postinc2	equ	0xFDE
  9768                           postdec2	equ	0xFDD
  9769                           plusw2	equ	0xFDB
  9770                           fsr2h	equ	0xFDA
  9771                           fsr2l	equ	0xFD9
  9772                           status	equ	0xFD8
  9773                           
  9774 ;; *************** function __data_sector_from_cluster *****************
  9775 ;; Defined at:
  9776 ;;		line 70 in file "fat16.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  fat_cluster     2    0[COMRAM] unsigned int 
  9779 ;; Auto vars:     Size  Location     Type
  9780 ;;		None
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  2    0[COMRAM] unsigned int 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:        2 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; This function calls:
  9797 ;;		Nothing
  9798 ;; This function is called by:
  9799 ;;		_fat_read_from_file_fast
  9800 ;;		_fat_modify_file
  9801 ;;		_fat_copy_sector_to_buffer
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text42
  9806  007190                     __ptext42:
  9807                           	opt stack 0
  9808  007190                     __data_sector_from_cluster:
  9809                           	opt stack 27
  9810                           
  9811                           ;fat16.c: 72: return fat_cluster + 38 - 2;
  9812                           
  9813                           ;incstack = 0
  9814  007190  0E24               	movlw	36
  9815  007192  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
  9816  007194  6E01               	movwf	?__data_sector_from_cluster,c
  9817  007196  0E00               	movlw	0
  9818  007198  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
  9819  00719A  6E02               	movwf	?__data_sector_from_cluster+1,c
  9820  00719C  0012               	return	
  9821  00719E                     __end_of__data_sector_from_cluster:
  9822                           	opt stack 0
  9823                           tblptru	equ	0xFF8
  9824                           tblptrh	equ	0xFF7
  9825                           tblptrl	equ	0xFF6
  9826                           tablat	equ	0xFF5
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           intcon2	equ	0xFF1
  9831                           intcon3	equ	0xFF0
  9832                           postinc0	equ	0xFEE
  9833                           wreg	equ	0xFE8
  9834                           indf1	equ	0xFE7
  9835                           postdec1	equ	0xFE5
  9836                           plusw1	equ	0xFE3
  9837                           fsr1h	equ	0xFE2
  9838                           fsr1l	equ	0xFE1
  9839                           indf2	equ	0xFDF
  9840                           postinc2	equ	0xFDE
  9841                           postdec2	equ	0xFDD
  9842                           plusw2	equ	0xFDB
  9843                           fsr2h	equ	0xFDA
  9844                           fsr2l	equ	0xFD9
  9845                           status	equ	0xFD8
  9846                           
  9847 ;; *************** function _fat_get_file_information *****************
  9848 ;; Defined at:
  9849 ;;		line 1391 in file "fat16.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;  file_number     1    wreg     unsigned char 
  9852 ;;  data            2   47[COMRAM] PTR struct .
  9853 ;;		 -> _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@root(32), fat_resize_file@root(3
      +2), 
  9854 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), 
  9855 ;; Auto vars:     Size  Location     Type
  9856 ;;  file_number     1   54[COMRAM] unsigned char 
  9857 ;;  offset          2   52[COMRAM] unsigned int 
  9858 ;;  root_sector     2   50[COMRAM] unsigned int 
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      unsigned char 
  9861 ;; Registers used:
  9862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9869 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9872 ;;Total ram usage:        8 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:    5
  9875 ;; This function calls:
  9876 ;;		__offset_from_file_number
  9877 ;;		__sector_from_file_number
  9878 ;;		_flash_partial_read
  9879 ;; This function is called by:
  9880 ;;		__bootloader_verify_file
  9881 ;;		__bootloader_program
  9882 ;;		_fat_rename_file
  9883 ;;		_fat_read_from_file
  9884 ;;		_fat_resize_file
  9885 ;;		_fat_modify_file
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           	psect	text43
  9890  005DAA                     __ptext43:
  9891                           	opt stack 0
  9892  005DAA                     _fat_get_file_information:
  9893                           	opt stack 23
  9894                           
  9895                           ;incstack = 0
  9896                           ;fat_get_file_information@file_number stored from wreg
  9897  005DAA  6E37               	movwf	fat_get_file_information@file_number,c
  9898                           
  9899                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
  9900  005DAC  0E3F               	movlw	63
  9901  005DAE  6437               	cpfsgt	fat_get_file_information@file_number,c
  9902  005DB0  D002               	goto	l2280
  9903                           
  9904                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
  9905  005DB2  0E01               	movlw	1
  9906  005DB4  0012               	return	
  9907  005DB6                     l2280:
  9908                           
  9909                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
  9910  005DB6  5037               	movf	fat_get_file_information@file_number,w,c
  9911  005DB8  ECD3  F036         	call	__sector_from_file_number
  9912  005DBC  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
  9913  005DC0  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
  9914                           
  9915                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
  9916  005DC4  5037               	movf	fat_get_file_information@file_number,w,c
  9917  005DC6  EC4F  F037         	call	__offset_from_file_number
  9918  005DCA  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
  9919  005DCE  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
  9920                           
  9921                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
  9922  005DD2  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
  9923  005DD6  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
  9924  005DDA  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
  9925  005DDE  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
  9926  005DE2  0E00               	movlw	0
  9927  005DE4  6E2D               	movwf	flash_partial_read@length+1,c
  9928  005DE6  0E20               	movlw	32
  9929  005DE8  6E2C               	movwf	flash_partial_read@length,c
  9930  005DEA  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
  9931  005DEE  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
  9932  005DF2  EC3C  F037         	call	_flash_partial_read	;wreg free
  9933                           
  9934                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
  9935  005DF6  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
  9936  005DFA  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
  9937  005DFE  50DF               	movf	indf2,w,c
  9938  005E00  B4D8               	btfsc	status,2,c
  9939  005E02  D008               	goto	u10270
  9940  005E04  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
  9941  005E08  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
  9942  005E0C  0EE5               	movlw	229
  9943  005E0E  18DE               	xorwf	postinc2,w,c
  9944  005E10  A4D8               	btfss	status,2,c
  9945  005E12  D002               	goto	l2282
  9946  005E14                     u10270:
  9947                           
  9948                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
  9949  005E14  0E02               	movlw	2
  9950  005E16  0012               	return	
  9951  005E18                     l2282:
  9952                           
  9953                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
  9954  005E18  0E00               	movlw	0
  9955  005E1A  0012               	return	
  9956  005E1C                     __end_of_fat_get_file_information:
  9957                           	opt stack 0
  9958                           tblptru	equ	0xFF8
  9959                           tblptrh	equ	0xFF7
  9960                           tblptrl	equ	0xFF6
  9961                           tablat	equ	0xFF5
  9962                           prodh	equ	0xFF4
  9963                           prodl	equ	0xFF3
  9964                           intcon	equ	0xFF2
  9965                           intcon2	equ	0xFF1
  9966                           intcon3	equ	0xFF0
  9967                           postinc0	equ	0xFEE
  9968                           wreg	equ	0xFE8
  9969                           indf1	equ	0xFE7
  9970                           postdec1	equ	0xFE5
  9971                           plusw1	equ	0xFE3
  9972                           fsr1h	equ	0xFE2
  9973                           fsr1l	equ	0xFE1
  9974                           indf2	equ	0xFDF
  9975                           postinc2	equ	0xFDE
  9976                           postdec2	equ	0xFDD
  9977                           plusw2	equ	0xFDB
  9978                           fsr2h	equ	0xFDA
  9979                           fsr2l	equ	0xFD9
  9980                           status	equ	0xFD8
  9981                           
  9982 ;; *************** function __bootloader_check_address *****************
  9983 ;; Defined at:
  9984 ;;		line 112 in file "bootloader.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  address         4    0[COMRAM] unsigned long 
  9987 ;;  dataLength      1    4[COMRAM] unsigned char 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  cntr            1   11[COMRAM] unsigned char 
  9990 ;;  byte_status     1   10[COMRAM] enum E6953
  9991 ;;  worst_case      1    9[COMRAM] enum E6953
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      enum E6953
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10001 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10004 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10005 ;;Total ram usage:       12 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; This function calls:
 10008 ;;		Nothing
 10009 ;; This function is called by:
 10010 ;;		__bootloader_verify_file
 10011 ;;		__bootloader_program
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text44
 10016  004964                     __ptext44:
 10017                           	opt stack 0
 10018  004964                     __bootloader_check_address:
 10019                           	opt stack 28
 10020                           
 10021                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10022                           
 10023                           ;incstack = 0
 10024  004964  0E00               	movlw	0
 10025  004966  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10026                           
 10027                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10028  004968  0E00               	movlw	0
 10029  00496A  6E0C               	movwf	__bootloader_check_address@cntr,c
 10030  00496C  D062               	goto	l2421
 10031  00496E                     
 10032                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 10033  00496E  500C               	movf	__bootloader_check_address@cntr,w,c
 10034  004970  2401               	addwf	__bootloader_check_address@address,w,c
 10035  004972  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10036  004974  0E00               	movlw	0
 10037  004976  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10038  004978  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10039  00497A  0E00               	movlw	0
 10040  00497C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10041  00497E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10042  004980  0E00               	movlw	0
 10043  004982  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10044  004984  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10045  004986  5009               	movf	??__bootloader_check_address+3,w,c
 10046  004988  1008               	iorwf	??__bootloader_check_address+2,w,c
 10047  00498A  E104               	bnz	u10490
 10048  00498C  0E90               	movlw	144
 10049  00498E  5C07               	subwf	??__bootloader_check_address+1,w,c
 10050  004990  A0D8               	btfss	status,0,c
 10051  004992  D018               	goto	l2423
 10052  004994                     u10490:
 10053  004994  500C               	movf	__bootloader_check_address@cntr,w,c
 10054  004996  2401               	addwf	__bootloader_check_address@address,w,c
 10055  004998  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10056  00499A  0E00               	movlw	0
 10057  00499C  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10058  00499E  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10059  0049A0  0E00               	movlw	0
 10060  0049A2  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10061  0049A4  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10062  0049A6  0E00               	movlw	0
 10063  0049A8  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10064  0049AA  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10065  0049AC  5009               	movf	??__bootloader_check_address+3,w,c
 10066  0049AE  E10A               	bnz	l13047
 10067  0049B0  0EF8               	movlw	248
 10068  0049B2  5C06               	subwf	??__bootloader_check_address,w,c
 10069  0049B4  0EFF               	movlw	255
 10070  0049B6  5807               	subwfb	??__bootloader_check_address+1,w,c
 10071  0049B8  0E01               	movlw	1
 10072  0049BA  5808               	subwfb	??__bootloader_check_address+2,w,c
 10073  0049BC  B0D8               	btfsc	status,0,c
 10074  0049BE  D002               	goto	l2423
 10075                           
 10076                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10077  0049C0  0E00               	movlw	0
 10078  0049C2  D029               	goto	L4
 10079  0049C4                     l2423:
 10080  0049C4                     l13047:
 10081                           
 10082                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10083  0049C4  500C               	movf	__bootloader_check_address@cntr,w,c
 10084  0049C6  2401               	addwf	__bootloader_check_address@address,w,c
 10085  0049C8  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10086  0049CA  0E00               	movlw	0
 10087  0049CC  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10088  0049CE  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10089  0049D0  0E00               	movlw	0
 10090  0049D2  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10091  0049D4  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10092  0049D6  0E00               	movlw	0
 10093  0049D8  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10094  0049DA  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10095  0049DC  5009               	movf	??__bootloader_check_address+3,w,c
 10096  0049DE  E108               	bnz	u10510
 10097  0049E0  0EF8               	movlw	248
 10098  0049E2  5C06               	subwf	??__bootloader_check_address,w,c
 10099  0049E4  0EFF               	movlw	255
 10100  0049E6  5807               	subwfb	??__bootloader_check_address+1,w,c
 10101  0049E8  0E01               	movlw	1
 10102  0049EA  5808               	subwfb	??__bootloader_check_address+2,w,c
 10103  0049EC  A0D8               	btfss	status,0,c
 10104  0049EE  D015               	goto	l2425
 10105  0049F0                     u10510:
 10106  0049F0  500C               	movf	__bootloader_check_address@cntr,w,c
 10107  0049F2  2401               	addwf	__bootloader_check_address@address,w,c
 10108  0049F4  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10109  0049F6  0E00               	movlw	0
 10110  0049F8  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10111  0049FA  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10112  0049FC  0E00               	movlw	0
 10113  0049FE  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10114  004A00  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10115  004A02  0E00               	movlw	0
 10116  004A04  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10117  004A06  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10118  004A08  5009               	movf	??__bootloader_check_address+3,w,c
 10119  004A0A  E107               	bnz	l2425
 10120  004A0C  0E02               	movlw	2
 10121  004A0E  5C08               	subwf	??__bootloader_check_address+2,w,c
 10122  004A10  B0D8               	btfsc	status,0,c
 10123  004A12  D003               	goto	l2425
 10124                           
 10125                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10126  004A14  0E01               	movlw	1
 10127  004A16                     L4:
 10128  004A16  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10129                           
 10130                           ;bootloader.c: 133: }
 10131  004A18  D001               	goto	l2426
 10132  004A1A                     l2425:
 10133                           
 10134                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10135  004A1A  680B               	setf	__bootloader_check_address@byte_status,c
 10136  004A1C                     l2426:
 10137                           
 10138                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10139  004A1C  280B               	incf	__bootloader_check_address@byte_status,w,c
 10140  004A1E  A4D8               	btfss	status,2,c
 10141  004A20  D002               	goto	l2427
 10142                           
 10143                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10144  004A22  0EFF               	movlw	255
 10145  004A24  0012               	return	
 10146  004A26                     l2427:
 10147                           
 10148                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10149  004A26  500B               	movf	__bootloader_check_address@byte_status,w,c
 10150  004A28  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10151  004A2A  A0D8               	btfss	status,0,c
 10152                           
 10153                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10154  004A2C  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10155  004A30  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10156  004A32                     l2421:
 10157  004A32  5005               	movf	__bootloader_check_address@dataLength,w,c
 10158  004A34  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10159  004A36  A0D8               	btfss	status,0,c
 10160  004A38  D79A               	goto	l2422
 10161                           
 10162                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10163  004A3A  500A               	movf	__bootloader_check_address@worst_case,w,c
 10164  004A3C  0012               	return	
 10165  004A3E                     __end_of__bootloader_check_address:
 10166                           	opt stack 0
 10167                           tblptru	equ	0xFF8
 10168                           tblptrh	equ	0xFF7
 10169                           tblptrl	equ	0xFF6
 10170                           tablat	equ	0xFF5
 10171                           prodh	equ	0xFF4
 10172                           prodl	equ	0xFF3
 10173                           intcon	equ	0xFF2
 10174                           intcon2	equ	0xFF1
 10175                           intcon3	equ	0xFF0
 10176                           postinc0	equ	0xFEE
 10177                           wreg	equ	0xFE8
 10178                           indf1	equ	0xFE7
 10179                           postdec1	equ	0xFE5
 10180                           plusw1	equ	0xFE3
 10181                           fsr1h	equ	0xFE2
 10182                           fsr1l	equ	0xFE1
 10183                           indf2	equ	0xFDF
 10184                           postinc2	equ	0xFDE
 10185                           postdec2	equ	0xFDD
 10186                           plusw2	equ	0xFDB
 10187                           fsr2h	equ	0xFDA
 10188                           fsr2l	equ	0xFD9
 10189                           status	equ	0xFD8
 10190                           
 10191 ;; *************** function __bootloader_find_file *****************
 10192 ;; Defined at:
 10193 ;;		line 155 in file "bootloader.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;		None
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  1    wreg      void 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;Total ram usage:        0 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    7
 10214 ;; This function calls:
 10215 ;;		_fat_find_file
 10216 ;;		_fat_get_file_size
 10217 ;; This function is called by:
 10218 ;;		_bootloader_run
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221                           
 10222                           	psect	text45
 10223  005438                     __ptext45:
 10224                           	opt stack 0
 10225  005438                     __bootloader_find_file:
 10226                           	opt stack 22
 10227                           
 10228                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10229                           
 10230                           ;incstack = 0
 10231  005438  0EB6               	movlw	low _bootloader_filename
 10232  00543A  6E2C               	movwf	fat_find_file@name,c
 10233  00543C  0E8F               	movlw	high _bootloader_filename
 10234  00543E  6E2D               	movwf	fat_find_file@name+1,c
 10235  005440  0EC7               	movlw	low _bootloader_extension
 10236  005442  6E2E               	movwf	fat_find_file@extension,c
 10237  005444  0E8F               	movlw	high _bootloader_extension
 10238  005446  6E2F               	movwf	fat_find_file@extension+1,c
 10239  005448  EC86  F022         	call	_fat_find_file	;wreg free
 10240  00544C  0100               	movlb	0	; () banked
 10241  00544E  6FFF               	movwf	_file_number& (0+255),b
 10242                           
 10243                           ; BSR set to: 0
 10244                           ;bootloader.c: 161: if(file_number!=0xFF)
 10245  005450  29FF               	incf	_file_number& (0+255),w,b
 10246  005452  B4D8               	btfsc	status,2,c
 10247  005454  D034               	goto	l2433
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 10251  005456  51FF               	movf	_file_number& (0+255),w,b
 10252  005458  EC46  F02F         	call	_fat_get_file_size
 10253  00545C  C036  F07E         	movff	?_fat_get_file_size,_hex_file_size
 10254  005460  C037  F07F         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10255  005464  C038  F080         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10256  005468  C039  F081         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10257                           
 10258                           ;bootloader.c: 166: hex_file_entries = 0;
 10259  00546C  0E00               	movlw	0
 10260  00546E  0101               	movlb	1	; () banked
 10261  005470  6F64               	movwf	(_hex_file_entries+1)& (0+255),b
 10262  005472  0E00               	movlw	0
 10263  005474  6F63               	movwf	_hex_file_entries& (0+255),b
 10264                           
 10265                           ; BSR set to: 1
 10266                           ;bootloader.c: 167: hex_file_offset = 0;
 10267  005476  0E00               	movlw	0
 10268  005478  0100               	movlb	0	; () banked
 10269  00547A  6F82               	movwf	_hex_file_offset& (0+255),b
 10270  00547C  0E00               	movlw	0
 10271  00547E  6F83               	movwf	(_hex_file_offset+1)& (0+255),b
 10272  005480  0E00               	movlw	0
 10273  005482  6F84               	movwf	(_hex_file_offset+2)& (0+255),b
 10274  005484  0E00               	movlw	0
 10275  005486  6F85               	movwf	(_hex_file_offset+3)& (0+255),b
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 10279  005488  0101               	movlb	1	; () banked
 10280  00548A  6941               	setf	_file_minimum_address& (0+255),b
 10281  00548C  6942               	setf	(_file_minimum_address+1)& (0+255),b
 10282  00548E  6943               	setf	(_file_minimum_address+2)& (0+255),b
 10283  005490  6944               	setf	(_file_minimum_address+3)& (0+255),b
 10284                           
 10285                           ; BSR set to: 1
 10286                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 10287  005492  0E00               	movlw	0
 10288  005494  6F3D               	movwf	_file_maximum_address& (0+255),b
 10289  005496  0E00               	movlw	0
 10290  005498  6F3E               	movwf	(_file_maximum_address+1)& (0+255),b
 10291  00549A  0E00               	movlw	0
 10292  00549C  6F3F               	movwf	(_file_maximum_address+2)& (0+255),b
 10293  00549E  0E00               	movlw	0
 10294  0054A0  6F40               	movwf	(_file_maximum_address+3)& (0+255),b
 10295                           
 10296                           ; BSR set to: 1
 10297                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 10298  0054A2  0E00               	movlw	0
 10299  0054A4  6F39               	movwf	_extended_linear_address& (0+255),b
 10300  0054A6  0E00               	movlw	0
 10301  0054A8  6F3A               	movwf	(_extended_linear_address+1)& (0+255),b
 10302  0054AA  0E00               	movlw	0
 10303  0054AC  6F3B               	movwf	(_extended_linear_address+2)& (0+255),b
 10304  0054AE  0E00               	movlw	0
 10305  0054B0  6F3C               	movwf	(_extended_linear_address+3)& (0+255),b
 10306                           
 10307                           ; BSR set to: 1
 10308                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10309  0054B2  0E20               	movlw	32
 10310  0054B4  0100               	movlb	0	; () banked
 10311  0054B6  6F64               	movwf	(_os+4)& (0+255),b
 10312                           
 10313                           ; BSR set to: 0
 10314                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10315  0054B8  0E20               	movlw	32
 10316  0054BA  6F65               	movwf	(_os+5)& (0+255),b
 10317                           
 10318                           ;bootloader.c: 173: }
 10319  0054BC  0012               	return	
 10320  0054BE                     l2433:
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 10324                           
 10325                           ; BSR set to: 0
 10326  0054BE  0E00               	movlw	0
 10327  0054C0  6F7E               	movwf	_hex_file_size& (0+255),b
 10328  0054C2  0E00               	movlw	0
 10329  0054C4  6F7F               	movwf	(_hex_file_size+1)& (0+255),b
 10330  0054C6  0E00               	movlw	0
 10331  0054C8  6F80               	movwf	(_hex_file_size+2)& (0+255),b
 10332  0054CA  0E00               	movlw	0
 10333  0054CC  6F81               	movwf	(_hex_file_size+3)& (0+255),b
 10334                           
 10335                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10336  0054CE  0E10               	movlw	16
 10337  0054D0  6F64               	movwf	(_os+4)& (0+255),b
 10338                           
 10339                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10340  0054D2  0E10               	movlw	16
 10341  0054D4  6F65               	movwf	(_os+5)& (0+255),b
 10342  0054D6  0012               	return	
 10343  0054D8                     __end_of__bootloader_find_file:
 10344                           	opt stack 0
 10345                           tblptru	equ	0xFF8
 10346                           tblptrh	equ	0xFF7
 10347                           tblptrl	equ	0xFF6
 10348                           tablat	equ	0xFF5
 10349                           prodh	equ	0xFF4
 10350                           prodl	equ	0xFF3
 10351                           intcon	equ	0xFF2
 10352                           intcon2	equ	0xFF1
 10353                           intcon3	equ	0xFF0
 10354                           postinc0	equ	0xFEE
 10355                           wreg	equ	0xFE8
 10356                           indf1	equ	0xFE7
 10357                           postdec1	equ	0xFE5
 10358                           plusw1	equ	0xFE3
 10359                           fsr1h	equ	0xFE2
 10360                           fsr1l	equ	0xFE1
 10361                           indf2	equ	0xFDF
 10362                           postinc2	equ	0xFDE
 10363                           postdec2	equ	0xFDD
 10364                           plusw2	equ	0xFDB
 10365                           fsr2h	equ	0xFDA
 10366                           fsr2l	equ	0xFD9
 10367                           status	equ	0xFD8
 10368                           
 10369 ;; *************** function _fat_get_file_size *****************
 10370 ;; Defined at:
 10371 ;;		line 562 in file "fat16.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  file_number     1    wreg     unsigned char 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  file_number     1   65[COMRAM] unsigned char 
 10376 ;;  file_size       4   61[COMRAM] unsigned long 
 10377 ;;  offset          2   59[COMRAM] unsigned int 
 10378 ;;  sector          2   57[COMRAM] unsigned int 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  4   53[COMRAM] unsigned long 
 10381 ;; Registers used:
 10382 ;;		wreg, status,2, status,0, cstack
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10389 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10391 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10392 ;;Total ram usage:       13 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    6
 10395 ;; This function calls:
 10396 ;;		__offset_from_file_number
 10397 ;;		__root_is_available
 10398 ;;		__sector_from_file_number
 10399 ;;		_flash_partial_read
 10400 ;; This function is called by:
 10401 ;;		__bootloader_find_file
 10402 ;;		__bootloader_verify_file
 10403 ;;		_fat_append_to_file
 10404 ;;		_fat_copy_file
 10405 ;;		_fat_copy_sector_to_buffer
 10406 ;;		_fat_write_sector_from_buffer
 10407 ;; This function uses a non-reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text46
 10411  005E8C                     __ptext46:
 10412                           	opt stack 0
 10413  005E8C                     _fat_get_file_size:
 10414                           	opt stack 22
 10415                           
 10416                           ; BSR set to: 0
 10417                           ;incstack = 0
 10418                           ;fat_get_file_size@file_number stored from wreg
 10419  005E8C  6E42               	movwf	fat_get_file_size@file_number,c
 10420                           
 10421                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 10422  005E8E  5042               	movf	fat_get_file_size@file_number,w,c
 10423  005E90  EC82  F030         	call	__root_is_available
 10424  005E94  0900               	iorlw	0
 10425  005E96  B4D8               	btfsc	status,2,c
 10426  005E98  D005               	goto	l2047
 10427                           
 10428                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 10429  005E9A  6836               	setf	?_fat_get_file_size,c
 10430  005E9C  6837               	setf	?_fat_get_file_size+1,c
 10431  005E9E  6838               	setf	?_fat_get_file_size+2,c
 10432  005EA0  6839               	setf	?_fat_get_file_size+3,c
 10433  005EA2  0012               	return	
 10434  005EA4                     l2047:
 10435                           
 10436                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 10437  005EA4  5042               	movf	fat_get_file_size@file_number,w,c
 10438  005EA6  ECD3  F036         	call	__sector_from_file_number
 10439  005EAA  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 10440  005EAE  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 10441                           
 10442                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 10443  005EB2  5042               	movf	fat_get_file_size@file_number,w,c
 10444  005EB4  EC4F  F037         	call	__offset_from_file_number
 10445  005EB8  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 10446  005EBC  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 10447                           
 10448                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 10449  005EC0  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 10450  005EC4  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 10451  005EC8  0E1C               	movlw	28
 10452  005ECA  243C               	addwf	fat_get_file_size@offset,w,c
 10453  005ECC  6E2A               	movwf	flash_partial_read@start,c
 10454  005ECE  0E00               	movlw	0
 10455  005ED0  203D               	addwfc	fat_get_file_size@offset+1,w,c
 10456  005ED2  6E2B               	movwf	flash_partial_read@start+1,c
 10457  005ED4  0E00               	movlw	0
 10458  005ED6  6E2D               	movwf	flash_partial_read@length+1,c
 10459  005ED8  0E04               	movlw	4
 10460  005EDA  6E2C               	movwf	flash_partial_read@length,c
 10461  005EDC  0E3E               	movlw	low fat_get_file_size@file_size
 10462  005EDE  6E2E               	movwf	flash_partial_read@data,c
 10463  005EE0  0E00               	movlw	high fat_get_file_size@file_size
 10464  005EE2  6E2F               	movwf	flash_partial_read@data+1,c
 10465  005EE4  EC3C  F037         	call	_flash_partial_read	;wreg free
 10466                           
 10467                           ;fat16.c: 583: return file_size;
 10468  005EE8  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 10469  005EEC  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 10470  005EF0  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 10471  005EF4  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 10472  005EF8  0012               	return	
 10473  005EFA                     __end_of_fat_get_file_size:
 10474                           	opt stack 0
 10475                           tblptru	equ	0xFF8
 10476                           tblptrh	equ	0xFF7
 10477                           tblptrl	equ	0xFF6
 10478                           tablat	equ	0xFF5
 10479                           prodh	equ	0xFF4
 10480                           prodl	equ	0xFF3
 10481                           intcon	equ	0xFF2
 10482                           intcon2	equ	0xFF1
 10483                           intcon3	equ	0xFF0
 10484                           postinc0	equ	0xFEE
 10485                           wreg	equ	0xFE8
 10486                           indf1	equ	0xFE7
 10487                           postdec1	equ	0xFE5
 10488                           plusw1	equ	0xFE3
 10489                           fsr1h	equ	0xFE2
 10490                           fsr1l	equ	0xFE1
 10491                           indf2	equ	0xFDF
 10492                           postinc2	equ	0xFDE
 10493                           postdec2	equ	0xFDD
 10494                           plusw2	equ	0xFDB
 10495                           fsr2h	equ	0xFDA
 10496                           fsr2l	equ	0xFD9
 10497                           status	equ	0xFD8
 10498                           
 10499 ;; *************** function __root_is_available *****************
 10500 ;; Defined at:
 10501 ;;		line 408 in file "fat16.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  file_number     1    wreg     unsigned char 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  file_number     1   51[COMRAM] unsigned char 
 10506 ;;  offset          2   49[COMRAM] unsigned int 
 10507 ;;  root_sector     2   47[COMRAM] unsigned int 
 10508 ;;  first_byte      1   52[COMRAM] unsigned char 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  1    wreg      unsigned char 
 10511 ;; Registers used:
 10512 ;;		wreg, status,2, status,0, cstack
 10513 ;; Tracked objects:
 10514 ;;		On entry : 0/0
 10515 ;;		On exit  : 0/0
 10516 ;;		Unchanged: 0/0
 10517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10519 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10521 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10522 ;;Total ram usage:        6 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:    5
 10525 ;; This function calls:
 10526 ;;		__offset_from_file_number
 10527 ;;		__sector_from_file_number
 10528 ;;		_flash_partial_read
 10529 ;; This function is called by:
 10530 ;;		_fat_get_file_size
 10531 ;;		__get_available_root_entry
 10532 ;;		_fat_delete_file
 10533 ;;		_fat_append_to_file
 10534 ;;		_fat_copy_file
 10535 ;;		_fat_resize_file
 10536 ;;		_fat_copy_sector_to_buffer
 10537 ;;		_fat_write_sector_from_buffer
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           	psect	text47
 10542  006104                     __ptext47:
 10543                           	opt stack 0
 10544  006104                     __root_is_available:
 10545                           	opt stack 22
 10546                           
 10547                           ;incstack = 0
 10548                           ;__root_is_available@file_number stored from wreg
 10549  006104  6E34               	movwf	__root_is_available@file_number,c
 10550                           
 10551                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 10552  006106  0E3F               	movlw	63
 10553  006108  6434               	cpfsgt	__root_is_available@file_number,c
 10554  00610A  D002               	goto	l2008
 10555                           
 10556                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 10557  00610C  0E00               	movlw	0
 10558  00610E  0012               	return	
 10559  006110                     l2008:
 10560                           
 10561                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 10562  006110  5034               	movf	__root_is_available@file_number,w,c
 10563  006112  ECD3  F036         	call	__sector_from_file_number
 10564  006116  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 10565  00611A  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 10566                           
 10567                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 10568  00611E  5034               	movf	__root_is_available@file_number,w,c
 10569  006120  EC4F  F037         	call	__offset_from_file_number
 10570  006124  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 10571  006128  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 10572                           
 10573                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 10574  00612C  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 10575  006130  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 10576  006134  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 10577  006138  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 10578  00613C  0E00               	movlw	0
 10579  00613E  6E2D               	movwf	flash_partial_read@length+1,c
 10580  006140  0E01               	movlw	1
 10581  006142  6E2C               	movwf	flash_partial_read@length,c
 10582  006144  0E35               	movlw	low __root_is_available@first_byte
 10583  006146  6E2E               	movwf	flash_partial_read@data,c
 10584  006148  0E00               	movlw	high __root_is_available@first_byte
 10585  00614A  6E2F               	movwf	flash_partial_read@data+1,c
 10586  00614C  EC3C  F037         	call	_flash_partial_read	;wreg free
 10587                           
 10588                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 10589  006150  5035               	movf	__root_is_available@first_byte,w,c
 10590  006152  B4D8               	btfsc	status,2,c
 10591  006154  D004               	goto	u9810
 10592  006156  0EE5               	movlw	229
 10593  006158  1835               	xorwf	__root_is_available@first_byte,w,c
 10594  00615A  A4D8               	btfss	status,2,c
 10595  00615C  D002               	goto	l2010
 10596  00615E                     u9810:
 10597                           
 10598                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 10599  00615E  0E01               	movlw	1
 10600                           
 10601                           ;fat16.c: 434: }
 10602  006160  0012               	return	
 10603  006162                     l2010:
 10604                           
 10605                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 10606  006162  0E00               	movlw	0
 10607  006164  0012               	return	
 10608  006166                     __end_of__root_is_available:
 10609                           	opt stack 0
 10610                           tblptru	equ	0xFF8
 10611                           tblptrh	equ	0xFF7
 10612                           tblptrl	equ	0xFF6
 10613                           tablat	equ	0xFF5
 10614                           prodh	equ	0xFF4
 10615                           prodl	equ	0xFF3
 10616                           intcon	equ	0xFF2
 10617                           intcon2	equ	0xFF1
 10618                           intcon3	equ	0xFF0
 10619                           postinc0	equ	0xFEE
 10620                           wreg	equ	0xFE8
 10621                           indf1	equ	0xFE7
 10622                           postdec1	equ	0xFE5
 10623                           plusw1	equ	0xFE3
 10624                           fsr1h	equ	0xFE2
 10625                           fsr1l	equ	0xFE1
 10626                           indf2	equ	0xFDF
 10627                           postinc2	equ	0xFDE
 10628                           postdec2	equ	0xFDD
 10629                           plusw2	equ	0xFDB
 10630                           fsr2h	equ	0xFDA
 10631                           fsr2l	equ	0xFD9
 10632                           status	equ	0xFD8
 10633                           
 10634 ;; *************** function _flash_partial_read *****************
 10635 ;; Defined at:
 10636 ;;		line 452 in file "flash.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  page            2   39[COMRAM] unsigned int 
 10639 ;;  start           2   41[COMRAM] unsigned int 
 10640 ;;  length          2   43[COMRAM] unsigned int 
 10641 ;;  data            2   45[COMRAM] PTR unsigned char 
 10642 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 10643 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 10644 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10656 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;Total ram usage:        8 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    4
 10663 ;; This function calls:
 10664 ;;		__flash_partial_read
 10665 ;; This function is called by:
 10666 ;;		__root_is_available
 10667 ;;		__read_fat
 10668 ;;		_fat_get_file_size
 10669 ;;		_fat_read_from_file_fast
 10670 ;;		_fat_get_file_information
 10671 ;;		__get_first_cluster
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           	psect	text48
 10676  006E78                     __ptext48:
 10677                           	opt stack 0
 10678  006E78                     _flash_partial_read:
 10679                           	opt stack 23
 10680                           
 10681                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 10682                           
 10683                           ;incstack = 0
 10684  006E78  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 10685  006E7C  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 10686  006E80  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 10687  006E84  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 10688  006E88  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 10689  006E8C  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 10690  006E90  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 10691  006E94  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 10692  006E98  EC5D  F02E         	call	__flash_partial_read	;wreg free
 10693  006E9C  0012               	return		;funcret
 10694  006E9E                     __end_of_flash_partial_read:
 10695                           	opt stack 0
 10696                           tblptru	equ	0xFF8
 10697                           tblptrh	equ	0xFF7
 10698                           tblptrl	equ	0xFF6
 10699                           tablat	equ	0xFF5
 10700                           prodh	equ	0xFF4
 10701                           prodl	equ	0xFF3
 10702                           intcon	equ	0xFF2
 10703                           intcon2	equ	0xFF1
 10704                           intcon3	equ	0xFF0
 10705                           postinc0	equ	0xFEE
 10706                           wreg	equ	0xFE8
 10707                           indf1	equ	0xFE7
 10708                           postdec1	equ	0xFE5
 10709                           plusw1	equ	0xFE3
 10710                           fsr1h	equ	0xFE2
 10711                           fsr1l	equ	0xFE1
 10712                           indf2	equ	0xFDF
 10713                           postinc2	equ	0xFDE
 10714                           postdec2	equ	0xFDD
 10715                           plusw2	equ	0xFDB
 10716                           fsr2h	equ	0xFDA
 10717                           fsr2l	equ	0xFD9
 10718                           status	equ	0xFD8
 10719                           
 10720 ;; *************** function __sector_from_file_number *****************
 10721 ;; Defined at:
 10722 ;;		line 52 in file "fat16.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  file_number     1    wreg     unsigned char 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  file_number     1    2[COMRAM] unsigned char 
 10727 ;;  sector          2    3[COMRAM] unsigned int 
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  2    0[COMRAM] unsigned int 
 10730 ;; Registers used:
 10731 ;;		wreg, status,2, status,0
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;Total ram usage:        5 bytes
 10742 ;; Hardware stack levels used:    1
 10743 ;; This function calls:
 10744 ;;		Nothing
 10745 ;; This function is called by:
 10746 ;;		__root_is_available
 10747 ;;		_fat_get_file_size
 10748 ;;		_fat_get_file_information
 10749 ;;		__write_root
 10750 ;;		__delete_root
 10751 ;;		__get_first_cluster
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text49
 10756  006DA6                     __ptext49:
 10757                           	opt stack 0
 10758  006DA6                     __sector_from_file_number:
 10759                           	opt stack 27
 10760                           
 10761                           ;incstack = 0
 10762                           ;__sector_from_file_number@file_number stored from wreg
 10763  006DA6  6E03               	movwf	__sector_from_file_number@file_number,c
 10764                           
 10765                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 10766  006DA8  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 10767  006DAC  6A05               	clrf	__sector_from_file_number@sector+1,c
 10768                           
 10769                           ;fat16.c: 56: sector >>= 4;
 10770  006DAE  3A04               	swapf	__sector_from_file_number@sector,f,c
 10771  006DB0  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 10772  006DB2  0E0F               	movlw	15
 10773  006DB4  1604               	andwf	__sector_from_file_number@sector,f,c
 10774  006DB6  5005               	movf	__sector_from_file_number@sector+1,w,c
 10775  006DB8  0BF0               	andlw	240
 10776  006DBA  1204               	iorwf	__sector_from_file_number@sector,f,c
 10777  006DBC  0E0F               	movlw	15
 10778  006DBE  1605               	andwf	__sector_from_file_number@sector+1,f,c
 10779                           
 10780                           ;fat16.c: 57: sector += 34;
 10781  006DC0  0E22               	movlw	34
 10782  006DC2  2604               	addwf	__sector_from_file_number@sector,f,c
 10783  006DC4  0E00               	movlw	0
 10784  006DC6  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 10785                           
 10786                           ;fat16.c: 58: return sector;
 10787  006DC8  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 10788  006DCC  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 10789  006DD0  0012               	return	
 10790  006DD2                     __end_of__sector_from_file_number:
 10791                           	opt stack 0
 10792                           tblptru	equ	0xFF8
 10793                           tblptrh	equ	0xFF7
 10794                           tblptrl	equ	0xFF6
 10795                           tablat	equ	0xFF5
 10796                           prodh	equ	0xFF4
 10797                           prodl	equ	0xFF3
 10798                           intcon	equ	0xFF2
 10799                           intcon2	equ	0xFF1
 10800                           intcon3	equ	0xFF0
 10801                           postinc0	equ	0xFEE
 10802                           wreg	equ	0xFE8
 10803                           indf1	equ	0xFE7
 10804                           postdec1	equ	0xFE5
 10805                           plusw1	equ	0xFE3
 10806                           fsr1h	equ	0xFE2
 10807                           fsr1l	equ	0xFE1
 10808                           indf2	equ	0xFDF
 10809                           postinc2	equ	0xFDE
 10810                           postdec2	equ	0xFDD
 10811                           plusw2	equ	0xFDB
 10812                           fsr2h	equ	0xFDA
 10813                           fsr2l	equ	0xFD9
 10814                           status	equ	0xFD8
 10815                           
 10816 ;; *************** function __offset_from_file_number *****************
 10817 ;; Defined at:
 10818 ;;		line 61 in file "fat16.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;  file_number     1    wreg     unsigned char 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  file_number     1    2[COMRAM] unsigned char 
 10823 ;;  offset          2    3[COMRAM] unsigned int 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  2    0[COMRAM] unsigned int 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10833 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;Total ram usage:        5 bytes
 10838 ;; Hardware stack levels used:    1
 10839 ;; This function calls:
 10840 ;;		Nothing
 10841 ;; This function is called by:
 10842 ;;		__root_is_available
 10843 ;;		_fat_get_file_size
 10844 ;;		_fat_get_file_information
 10845 ;;		__write_root
 10846 ;;		__delete_root
 10847 ;;		__get_first_cluster
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text50
 10852  006E9E                     __ptext50:
 10853                           	opt stack 0
 10854  006E9E                     __offset_from_file_number:
 10855                           	opt stack 26
 10856                           
 10857                           ;incstack = 0
 10858                           ;__offset_from_file_number@file_number stored from wreg
 10859  006E9E  6E03               	movwf	__offset_from_file_number@file_number,c
 10860                           
 10861                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 10862  006EA0  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 10863  006EA4  6A05               	clrf	__offset_from_file_number@offset+1,c
 10864                           
 10865                           ;fat16.c: 65: offset &= 0b1111;
 10866  006EA6  0E0F               	movlw	15
 10867  006EA8  1604               	andwf	__offset_from_file_number@offset,f,c
 10868  006EAA  0E00               	movlw	0
 10869  006EAC  1605               	andwf	__offset_from_file_number@offset+1,f,c
 10870                           
 10871                           ;fat16.c: 66: offset <<= 5;
 10872  006EAE  0E05               	movlw	5
 10873  006EB0                     u9345:
 10874  006EB0  90D8               	bcf	status,0,c
 10875  006EB2  3604               	rlcf	__offset_from_file_number@offset,f,c
 10876  006EB4  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 10877  006EB6  2EE8               	decfsz	wreg,f,c
 10878  006EB8  D7FB               	goto	u9345
 10879                           
 10880                           ;fat16.c: 67: return offset;
 10881  006EBA  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 10882  006EBE  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 10883  006EC2  0012               	return	
 10884  006EC4                     __end_of__offset_from_file_number:
 10885                           	opt stack 0
 10886                           tblptru	equ	0xFF8
 10887                           tblptrh	equ	0xFF7
 10888                           tblptrl	equ	0xFF6
 10889                           tablat	equ	0xFF5
 10890                           prodh	equ	0xFF4
 10891                           prodl	equ	0xFF3
 10892                           intcon	equ	0xFF2
 10893                           intcon2	equ	0xFF1
 10894                           intcon3	equ	0xFF0
 10895                           postinc0	equ	0xFEE
 10896                           wreg	equ	0xFE8
 10897                           indf1	equ	0xFE7
 10898                           postdec1	equ	0xFE5
 10899                           plusw1	equ	0xFE3
 10900                           fsr1h	equ	0xFE2
 10901                           fsr1l	equ	0xFE1
 10902                           indf2	equ	0xFDF
 10903                           postinc2	equ	0xFDE
 10904                           postdec2	equ	0xFDD
 10905                           plusw2	equ	0xFDB
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _fat_find_file *****************
 10911 ;; Defined at:
 10912 ;;		line 517 in file "fat16.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  name            2   43[COMRAM] PTR unsigned char 
 10915 ;;		 -> bootloader_filename(9), 
 10916 ;;  extension       2   45[COMRAM] PTR unsigned char 
 10917 ;;		 -> bootloader_extension(4), 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  offset          2   52[COMRAM] unsigned int 
 10920 ;;  sector          2   50[COMRAM] unsigned int 
 10921 ;;  file_number     1   49[COMRAM] unsigned char 
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      unsigned char 
 10924 ;; Registers used:
 10925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;Total ram usage:       11 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    5
 10938 ;; This function calls:
 10939 ;;		_flash_sector_read
 10940 ;;		_strncmp
 10941 ;; This function is called by:
 10942 ;;		__bootloader_find_file
 10943 ;;		_fat_create_file
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text51
 10948  00450C                     __ptext51:
 10949                           	opt stack 0
 10950  00450C                     _fat_find_file:
 10951                           	opt stack 23
 10952                           
 10953                           ;fat16.c: 519: uint8_t file_number = 0;
 10954                           
 10955                           ;incstack = 0
 10956  00450C  0E00               	movlw	0
 10957  00450E  6E32               	movwf	fat_find_file@file_number,c
 10958                           
 10959                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 10960  004510  0E00               	movlw	0
 10961  004512  6E34               	movwf	fat_find_file@sector+1,c
 10962  004514  0E22               	movlw	34
 10963  004516  6E33               	movwf	fat_find_file@sector,c
 10964  004518  5034               	movf	fat_find_file@sector+1,w,c
 10965  00451A  E166               	bnz	l2035
 10966  00451C  0E26               	movlw	38
 10967  00451E  5C33               	subwf	fat_find_file@sector,w,c
 10968  004520  B0D8               	btfsc	status,0,c
 10969  004522  D062               	goto	u10230
 10970                           
 10971                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 10972  004524  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 10973  004528  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 10974  00452C  0EC4               	movlw	low _buffer
 10975  00452E  6E2A               	movwf	flash_sector_read@data,c
 10976  004530  0E02               	movlw	high _buffer
 10977  004532  6E2B               	movwf	flash_sector_read@data+1,c
 10978  004534  EC62  F037         	call	_flash_sector_read	;wreg free
 10979                           
 10980                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 10981  004538  0E00               	movlw	0
 10982  00453A  6E36               	movwf	fat_find_file@offset+1,c
 10983  00453C  0E00               	movlw	0
 10984  00453E  6E35               	movwf	fat_find_file@offset,c
 10985  004540                     l12805:
 10986  004540  0E02               	movlw	2
 10987  004542  5C36               	subwf	fat_find_file@offset+1,w,c
 10988  004544  B0D8               	btfsc	status,0,c
 10989  004546  D04B               	goto	u10220
 10990                           
 10991                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 10992  004548  0EC4               	movlw	low _buffer
 10993  00454A  2435               	addwf	fat_find_file@offset,w,c
 10994  00454C  6ED9               	movwf	fsr2l,c
 10995  00454E  0E02               	movlw	high _buffer
 10996  004550  2036               	addwfc	fat_find_file@offset+1,w,c
 10997  004552  6EDA               	movwf	fsr2h,c
 10998  004554  50DF               	movf	indf2,w,c
 10999  004556  A4D8               	btfss	status,2,c
 11000  004558  D002               	goto	l2038
 11001                           
 11002                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 11003  00455A  0EFF               	movlw	255
 11004  00455C  0012               	return	
 11005  00455E                     l2038:
 11006                           
 11007                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 11008  00455E  0EC4               	movlw	low _buffer
 11009  004560  2435               	addwf	fat_find_file@offset,w,c
 11010  004562  6ED9               	movwf	fsr2l,c
 11011  004564  0E02               	movlw	high _buffer
 11012  004566  2036               	addwfc	fat_find_file@offset+1,w,c
 11013  004568  6EDA               	movwf	fsr2h,c
 11014  00456A  0EE5               	movlw	229
 11015  00456C  18DE               	xorwf	postinc2,w,c
 11016  00456E  B4D8               	btfsc	status,2,c
 11017  004570  D030               	goto	l2044
 11018                           
 11019                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 11020                           
 11021                           ;fat16.c: 537: {;fat16.c: 541: }
 11022  004572  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 11023  004576  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 11024  00457A  0EC4               	movlw	low _buffer
 11025  00457C  2435               	addwf	fat_find_file@offset,w,c
 11026  00457E  6E03               	movwf	strncmp@s2,c
 11027  004580  0E02               	movlw	high _buffer
 11028  004582  2036               	addwfc	fat_find_file@offset+1,w,c
 11029  004584  6E04               	movwf	strncmp@s2+1,c
 11030  004586  0E00               	movlw	0
 11031  004588  6E06               	movwf	strncmp@len+1,c
 11032  00458A  0E08               	movlw	8
 11033  00458C  6E05               	movwf	strncmp@len,c
 11034  00458E  EC9D  F02D         	call	_strncmp	;wreg free
 11035  004592  5001               	movf	?_strncmp,w,c
 11036  004594  1002               	iorwf	?_strncmp+1,w,c
 11037  004596  A4D8               	btfss	status,2,c
 11038  004598  D01C               	goto	l2044
 11039                           
 11040                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 11041  00459A  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 11042  00459E  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 11043  0045A2  0E08               	movlw	8
 11044  0045A4  2435               	addwf	fat_find_file@offset,w,c
 11045  0045A6  6E30               	movwf	??_fat_find_file& (0+255),c
 11046  0045A8  0E00               	movlw	0
 11047  0045AA  2036               	addwfc	fat_find_file@offset+1,w,c
 11048  0045AC  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 11049  0045AE  0EC4               	movlw	low _buffer
 11050  0045B0  2430               	addwf	??_fat_find_file,w,c
 11051  0045B2  6E03               	movwf	strncmp@s2,c
 11052  0045B4  0E02               	movlw	high _buffer
 11053  0045B6  2031               	addwfc	??_fat_find_file+1,w,c
 11054  0045B8  6E04               	movwf	strncmp@s2+1,c
 11055  0045BA  0E00               	movlw	0
 11056  0045BC  6E06               	movwf	strncmp@len+1,c
 11057  0045BE  0E03               	movlw	3
 11058  0045C0  6E05               	movwf	strncmp@len,c
 11059  0045C2  EC9D  F02D         	call	_strncmp	;wreg free
 11060  0045C6  5001               	movf	?_strncmp,w,c
 11061  0045C8  1002               	iorwf	?_strncmp+1,w,c
 11062  0045CA  A4D8               	btfss	status,2,c
 11063  0045CC  D002               	goto	l2044
 11064                           
 11065                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 11066  0045CE  5032               	movf	fat_find_file@file_number,w,c
 11067  0045D0  0012               	return	
 11068  0045D2                     l2044:
 11069                           
 11070                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 11071  0045D2  2A32               	incf	fat_find_file@file_number,f,c
 11072  0045D4  0E20               	movlw	32
 11073  0045D6  2635               	addwf	fat_find_file@offset,f,c
 11074  0045D8  0E00               	movlw	0
 11075  0045DA  2236               	addwfc	fat_find_file@offset+1,f,c
 11076  0045DC  D7B1               	goto	l12805
 11077  0045DE                     u10220:
 11078  0045DE  4A33               	infsnz	fat_find_file@sector,f,c
 11079  0045E0  2A34               	incf	fat_find_file@sector+1,f,c
 11080  0045E2  5034               	movf	fat_find_file@sector+1,w,c
 11081  0045E4  E101               	bnz	l12839
 11082  0045E6  D79A               	goto	L5
 11083  0045E8                     u10230:
 11084  0045E8                     l2035:
 11085  0045E8                     l12839:
 11086                           
 11087                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 11088  0045E8  0EFF               	movlw	255
 11089  0045EA  0012               	return	
 11090  0045EC                     __end_of_fat_find_file:
 11091                           	opt stack 0
 11092                           tblptru	equ	0xFF8
 11093                           tblptrh	equ	0xFF7
 11094                           tblptrl	equ	0xFF6
 11095                           tablat	equ	0xFF5
 11096                           prodh	equ	0xFF4
 11097                           prodl	equ	0xFF3
 11098                           intcon	equ	0xFF2
 11099                           intcon2	equ	0xFF1
 11100                           intcon3	equ	0xFF0
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           indf1	equ	0xFE7
 11104                           postdec1	equ	0xFE5
 11105                           plusw1	equ	0xFE3
 11106                           fsr1h	equ	0xFE2
 11107                           fsr1l	equ	0xFE1
 11108                           indf2	equ	0xFDF
 11109                           postinc2	equ	0xFDE
 11110                           postdec2	equ	0xFDD
 11111                           plusw2	equ	0xFDB
 11112                           fsr2h	equ	0xFDA
 11113                           fsr2l	equ	0xFD9
 11114                           status	equ	0xFD8
 11115                           
 11116 ;; *************** function _strncmp *****************
 11117 ;; Defined at:
 11118 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 11119 ;; Parameters:    Size  Location     Type
 11120 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 11121 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 11122 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 11123 ;;		 -> buffer(512), 
 11124 ;;  len             2    4[COMRAM] unsigned int 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  2    0[COMRAM] int 
 11129 ;; Registers used:
 11130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;Total ram usage:        8 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_fat_find_file
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text52
 11150  005B3A                     __ptext52:
 11151                           	opt stack 0
 11152  005B3A                     _strncmp:
 11153                           	opt stack 27
 11154                           
 11155                           ;incstack = 0
 11156  005B3A  D034               	goto	l3509
 11157  005B3C                     l12519:
 11158  005B3C  C001  FFF6         	movff	strncmp@s1,tblptrl
 11159  005B40  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11160  005B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11161  005B44  6AF8               	clrf	tblptru,c
 11162  005B46                     	endif
 11163  005B46                     	if	0	;tblptru may be non-zero
 11164  005B46                     	endif
 11165  005B46  0008               	tblrd		*
 11166  005B48  50F5               	movf	tablat,w,c
 11167  005B4A  0900               	iorlw	0
 11168  005B4C  B4D8               	btfsc	status,2,c
 11169  005B4E  D00E               	goto	u9830
 11170  005B50  C003  FFD9         	movff	strncmp@s2,fsr2l
 11171  005B54  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11172  005B58  C001  FFF6         	movff	strncmp@s1,tblptrl
 11173  005B5C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11174  005B60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11175  005B60  6AF8               	clrf	tblptru,c
 11176  005B62                     	endif
 11177  005B62                     	if	0	;tblptru may be non-zero
 11178  005B62                     	endif
 11179  005B62  50DE               	movf	postinc2,w,c
 11180  005B64  0009               	tblrd		*+
 11181  005B66  18F5               	xorwf	tablat,w,c
 11182  005B68  B4D8               	btfsc	status,2,c
 11183  005B6A  D018               	goto	l3511
 11184  005B6C                     u9830:
 11185  005B6C  C003  FFD9         	movff	strncmp@s2,fsr2l
 11186  005B70  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11187  005B74  50DF               	movf	indf2,w,c
 11188  005B76  6E07               	movwf	??_strncmp& (0+255),c
 11189  005B78  6A08               	clrf	(??_strncmp+1)& (0+255),c
 11190  005B7A  1E07               	comf	??_strncmp,f,c
 11191  005B7C  1E08               	comf	??_strncmp+1,f,c
 11192  005B7E  4A07               	infsnz	??_strncmp,f,c
 11193  005B80  2A08               	incf	??_strncmp+1,f,c
 11194  005B82  C001  FFF6         	movff	strncmp@s1,tblptrl
 11195  005B86  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11196  005B8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11197  005B8A  6AF8               	clrf	tblptru,c
 11198  005B8C                     	endif
 11199  005B8C                     	if	0	;tblptru may be non-zero
 11200  005B8C                     	endif
 11201  005B8C  0008               	tblrd		*
 11202  005B8E  50F5               	movf	tablat,w,c
 11203  005B90  2407               	addwf	??_strncmp,w,c
 11204  005B92  6E01               	movwf	?_strncmp,c
 11205  005B94  0E00               	movlw	0
 11206  005B96  2008               	addwfc	??_strncmp+1,w,c
 11207  005B98  6E02               	movwf	?_strncmp+1,c
 11208  005B9A  0012               	return	
 11209  005B9C                     l3511:
 11210  005B9C  4A01               	infsnz	strncmp@s1,f,c
 11211  005B9E  2A02               	incf	strncmp@s1+1,f,c
 11212  005BA0  4A03               	infsnz	strncmp@s2,f,c
 11213  005BA2  2A04               	incf	strncmp@s2+1,f,c
 11214  005BA4                     l3509:
 11215  005BA4  0605               	decf	strncmp@len,f,c
 11216  005BA6  A0D8               	btfss	status,0,c
 11217  005BA8  0606               	decf	strncmp@len+1,f,c
 11218  005BAA  2805               	incf	strncmp@len,w,c
 11219  005BAC  E1C7               	bnz	l12519
 11220  005BAE  2806               	incf	strncmp@len+1,w,c
 11221  005BB0  A4D8               	btfss	status,2,c
 11222  005BB2  D7C4               	goto	l3510
 11223  005BB4  0E00               	movlw	0
 11224  005BB6  6E02               	movwf	?_strncmp+1,c
 11225  005BB8  0E00               	movlw	0
 11226  005BBA  6E01               	movwf	?_strncmp,c
 11227  005BBC  0012               	return	
 11228  005BBE                     __end_of_strncmp:
 11229                           	opt stack 0
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           intcon2	equ	0xFF1
 11238                           intcon3	equ	0xFF0
 11239                           postinc0	equ	0xFEE
 11240                           wreg	equ	0xFE8
 11241                           indf1	equ	0xFE7
 11242                           postdec1	equ	0xFE5
 11243                           plusw1	equ	0xFE3
 11244                           fsr1h	equ	0xFE2
 11245                           fsr1l	equ	0xFE1
 11246                           indf2	equ	0xFDF
 11247                           postinc2	equ	0xFDE
 11248                           postdec2	equ	0xFDD
 11249                           plusw2	equ	0xFDB
 11250                           fsr2h	equ	0xFDA
 11251                           fsr2l	equ	0xFD9
 11252                           status	equ	0xFD8
 11253                           
 11254 ;; *************** function __normal_mode *****************
 11255 ;; Defined at:
 11256 ;;		line 161 in file "main.c"
 11257 ;; Parameters:    Size  Location     Type
 11258 ;;		None
 11259 ;; Auto vars:     Size  Location     Type
 11260 ;;		None
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      unsigned char 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11274 ;;Total ram usage:        0 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    3
 11277 ;; This function calls:
 11278 ;;		_i2c_eeprom_readByte
 11279 ;;		_i2c_eeprom_writeByte
 11280 ;; This function is called by:
 11281 ;;		_main
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           
 11285                           	psect	text53
 11286  0062EA                     __ptext53:
 11287                           	opt stack 0
 11288  0062EA                     __normal_mode:
 11289                           	opt stack 27
 11290                           
 11291                           ;main.c: 163: if(i2c_eeprom_readByte(0x100)==0x94)
 11292                           
 11293                           ;incstack = 0
 11294  0062EA  0E01               	movlw	1
 11295  0062EC  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11296  0062EE  0E00               	movlw	0
 11297  0062F0  6E12               	movwf	i2c_eeprom_readByte@address,c
 11298  0062F2  ECFC  F032         	call	_i2c_eeprom_readByte	;wreg free
 11299  0062F6  0A94               	xorlw	148
 11300  0062F8  A4D8               	btfss	status,2,c
 11301  0062FA  D00A               	goto	l880
 11302                           
 11303                           ;main.c: 164: {;main.c: 166: i2c_eeprom_writeByte(0x100, 0x00);
 11304  0062FC  0E01               	movlw	1
 11305  0062FE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11306  006300  0E00               	movlw	0
 11307  006302  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11308  006304  0E00               	movlw	0
 11309  006306  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11310  006308  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
 11311                           
 11312                           ;main.c: 168: return 0;
 11313  00630C  0E00               	movlw	0
 11314  00630E  0012               	return	
 11315  006310                     l880:
 11316                           
 11317                           ;main.c: 170: else if(i2c_eeprom_readByte(0x100)==0x78)
 11318  006310  0E01               	movlw	1
 11319  006312  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11320  006314  0E00               	movlw	0
 11321  006316  6E12               	movwf	i2c_eeprom_readByte@address,c
 11322  006318  ECFC  F032         	call	_i2c_eeprom_readByte	;wreg free
 11323  00631C  0A78               	xorlw	120
 11324  00631E  A4D8               	btfss	status,2,c
 11325  006320  D00A               	goto	l883
 11326                           
 11327                           ;main.c: 171: {;main.c: 173: i2c_eeprom_writeByte(0x100, 0x00);
 11328  006322  0E01               	movlw	1
 11329  006324  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11330  006326  0E00               	movlw	0
 11331  006328  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11332  00632A  0E00               	movlw	0
 11333  00632C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11334  00632E  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
 11335                           
 11336                           ;main.c: 175: return 1;
 11337  006332  0E01               	movlw	1
 11338  006334  0012               	return	
 11339  006336                     l883:
 11340                           
 11341                           ;main.c: 176: };main.c: 178: if(PORTAbits.RA1)
 11342  006336  A280               	btfss	3968,1,c	;volatile
 11343  006338  D002               	goto	l884
 11344                           
 11345                           ;main.c: 179: {;main.c: 181: return 0;
 11346  00633A  0E00               	movlw	0
 11347                           
 11348                           ;main.c: 182: }
 11349  00633C  0012               	return	
 11350  00633E                     l884:
 11351                           
 11352                           ;main.c: 183: else;main.c: 184: {;main.c: 186: return 1;
 11353  00633E  0E01               	movlw	1
 11354  006340  0012               	return	
 11355  006342                     __end_of__normal_mode:
 11356                           	opt stack 0
 11357                           tblptru	equ	0xFF8
 11358                           tblptrh	equ	0xFF7
 11359                           tblptrl	equ	0xFF6
 11360                           tablat	equ	0xFF5
 11361                           prodh	equ	0xFF4
 11362                           prodl	equ	0xFF3
 11363                           intcon	equ	0xFF2
 11364                           intcon2	equ	0xFF1
 11365                           intcon3	equ	0xFF0
 11366                           postinc0	equ	0xFEE
 11367                           wreg	equ	0xFE8
 11368                           indf1	equ	0xFE7
 11369                           postdec1	equ	0xFE5
 11370                           plusw1	equ	0xFE3
 11371                           fsr1h	equ	0xFE2
 11372                           fsr1l	equ	0xFE1
 11373                           indf2	equ	0xFDF
 11374                           postinc2	equ	0xFDE
 11375                           postdec2	equ	0xFDD
 11376                           plusw2	equ	0xFDB
 11377                           fsr2h	equ	0xFDA
 11378                           fsr2l	equ	0xFD9
 11379                           status	equ	0xFD8
 11380                           
 11381 ;; *************** function _i2c_eeprom_readByte *****************
 11382 ;; Defined at:
 11383 ;;		line 202 in file "i2c.c"
 11384 ;; Parameters:    Size  Location     Type
 11385 ;;  address         2   17[COMRAM] unsigned int 
 11386 ;; Auto vars:     Size  Location     Type
 11387 ;;  addr            1   23[COMRAM] unsigned char 
 11388 ;;  slave_addres    1   22[COMRAM] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      unsigned char 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11402 ;;Total ram usage:        7 bytes
 11403 ;; Hardware stack levels used:    1
 11404 ;; Hardware stack levels required when called:    2
 11405 ;; This function calls:
 11406 ;;		__i2c_eeprom_busy
 11407 ;;		__i2c_read
 11408 ;;		__i2c_write
 11409 ;; This function is called by:
 11410 ;;		__normal_mode
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	text54
 11415  0065F8                     __ptext54:
 11416                           	opt stack 0
 11417  0065F8                     _i2c_eeprom_readByte:
 11418                           	opt stack 27
 11419                           
 11420                           ;i2c.c: 204: uint8_t slave_address;;i2c.c: 205: uint8_t addr;;i2c.c: 206: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 11421                           
 11422                           ;incstack = 0
 11423  0065F8  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 11424  0065FC  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 11425  006600  0E07               	movlw	7
 11426  006602  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 11427  006604                     u11085:
 11428  006604  90D8               	bcf	status,0,c
 11429  006606  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 11430  006608  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 11431  00660A  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 11432  00660C  D7FB               	goto	u11085
 11433  00660E  5014               	movf	??_i2c_eeprom_readByte,w,c
 11434  006610  0B0E               	andlw	14
 11435  006612  09A0               	iorlw	160
 11436  006614  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 11437                           
 11438                           ;i2c.c: 207: addr = address & 0xFF;
 11439  006616  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 11440  00661A  EC88  F037         	call	__i2c_eeprom_busy	;wreg free
 11441  00661E  0900               	iorlw	0
 11442  006620  A4D8               	btfss	status,2,c
 11443  006622  D7FB               	goto	l1168
 11444                           
 11445                           ;i2c.c: 212: _i2c_write(slave_address, &addr, 1);
 11446  006624  0E18               	movlw	low i2c_eeprom_readByte@addr
 11447  006626  6E06               	movwf	__i2c_write@data,c
 11448  006628  0E00               	movlw	high i2c_eeprom_readByte@addr
 11449  00662A  6E07               	movwf	__i2c_write@data+1,c
 11450  00662C  0E01               	movlw	1
 11451  00662E  6E08               	movwf	__i2c_write@length,c
 11452  006630  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11453  006632  EC36  F034         	call	__i2c_write
 11454                           
 11455                           ;i2c.c: 213: _i2c_read(slave_address, &addr, 1);
 11456  006636  0E18               	movlw	low i2c_eeprom_readByte@addr
 11457  006638  6E06               	movwf	__i2c_read@data,c
 11458  00663A  0E00               	movlw	high i2c_eeprom_readByte@addr
 11459  00663C  6E07               	movwf	__i2c_read@data+1,c
 11460  00663E  0E01               	movlw	1
 11461  006640  6E08               	movwf	__i2c_read@length,c
 11462  006642  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11463  006644  ECCE  F02C         	call	__i2c_read
 11464                           
 11465                           ;i2c.c: 214: return addr;
 11466  006648  5018               	movf	i2c_eeprom_readByte@addr,w,c
 11467  00664A  0012               	return	
 11468  00664C                     __end_of_i2c_eeprom_readByte:
 11469                           	opt stack 0
 11470                           tblptru	equ	0xFF8
 11471                           tblptrh	equ	0xFF7
 11472                           tblptrl	equ	0xFF6
 11473                           tablat	equ	0xFF5
 11474                           prodh	equ	0xFF4
 11475                           prodl	equ	0xFF3
 11476                           intcon	equ	0xFF2
 11477                           intcon2	equ	0xFF1
 11478                           intcon3	equ	0xFF0
 11479                           postinc0	equ	0xFEE
 11480                           wreg	equ	0xFE8
 11481                           indf1	equ	0xFE7
 11482                           postdec1	equ	0xFE5
 11483                           plusw1	equ	0xFE3
 11484                           fsr1h	equ	0xFE2
 11485                           fsr1l	equ	0xFE1
 11486                           indf2	equ	0xFDF
 11487                           postinc2	equ	0xFDE
 11488                           postdec2	equ	0xFDD
 11489                           plusw2	equ	0xFDB
 11490                           fsr2h	equ	0xFDA
 11491                           fsr2l	equ	0xFD9
 11492                           status	equ	0xFD8
 11493                           
 11494 ;; *************** function __i2c_read *****************
 11495 ;; Defined at:
 11496 ;;		line 102 in file "i2c.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  slave_addres    1    wreg     unsigned char 
 11499 ;;  data            2    5[COMRAM] PTR unsigned char 
 11500 ;;		 -> i2c_eeprom_readByte@addr(1), 
 11501 ;;  length          1    7[COMRAM] unsigned char 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  slave_addres    1   15[COMRAM] unsigned char 
 11504 ;;  cntr            1   16[COMRAM] unsigned char 
 11505 ;; Return value:  Size  Location     Type
 11506 ;;                  1    wreg      void 
 11507 ;; Registers used:
 11508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11509 ;; Tracked objects:
 11510 ;;		On entry : 0/0
 11511 ;;		On exit  : 0/0
 11512 ;;		Unchanged: 0/0
 11513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11516 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11518 ;;Total ram usage:       12 bytes
 11519 ;; Hardware stack levels used:    1
 11520 ;; Hardware stack levels required when called:    1
 11521 ;; This function calls:
 11522 ;;		__i2c_acknowledge
 11523 ;;		__i2c_get
 11524 ;;		__i2c_not_acknowledge
 11525 ;;		__i2c_send
 11526 ;;		__i2c_start
 11527 ;;		__i2c_stop
 11528 ;;		__i2c_wait_idle
 11529 ;; This function is called by:
 11530 ;;		_i2c_eeprom_readByte
 11531 ;;		_i2c_eeprom_read
 11532 ;; This function uses a non-reentrant model
 11533 ;;
 11534                           
 11535                           	psect	text55
 11536  00599C                     __ptext55:
 11537                           	opt stack 0
 11538  00599C                     __i2c_read:
 11539                           	opt stack 27
 11540                           
 11541                           ;incstack = 0
 11542                           ;__i2c_read@slave_address stored from wreg
 11543  00599C  6E10               	movwf	__i2c_read@slave_address,c
 11544                           
 11545                           ;i2c.c: 104: uint8_t cntr;;i2c.c: 106: _i2c_wait_idle();
 11546  00599E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11547                           
 11548                           ;i2c.c: 107: _i2c_start();
 11549  0059A2  EC0E  F039         	call	__i2c_start	;wreg free
 11550                           
 11551                           ;i2c.c: 108: _i2c_wait_idle();
 11552  0059A6  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11553                           
 11554                           ;i2c.c: 109: _i2c_send(slave_address | 0x01);
 11555  0059AA  5010               	movf	__i2c_read@slave_address,w,c
 11556  0059AC  0901               	iorlw	1
 11557  0059AE  EC12  F039         	call	__i2c_send
 11558                           
 11559                           ;i2c.c: 110: _i2c_wait_idle();
 11560  0059B2  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11561                           
 11562                           ;i2c.c: 120: for(cntr=0; cntr<length-1; ++cntr)
 11563  0059B6  0E00               	movlw	0
 11564  0059B8  6E11               	movwf	__i2c_read@cntr,c
 11565  0059BA  D00E               	goto	l1146
 11566  0059BC                     
 11567                           ;i2c.c: 121: {;i2c.c: 122: data[cntr] = _i2c_get();
 11568  0059BC  5011               	movf	__i2c_read@cntr,w,c
 11569  0059BE  0D01               	mullw	1
 11570  0059C0  50F3               	movf	prodl,w,c
 11571  0059C2  2406               	addwf	__i2c_read@data,w,c
 11572  0059C4  6ED9               	movwf	fsr2l,c
 11573  0059C6  50F4               	movf	prodh,w,c
 11574  0059C8  2007               	addwfc	__i2c_read@data+1,w,c
 11575  0059CA  6EDA               	movwf	fsr2h,c
 11576  0059CC  ECD9  F038         	call	__i2c_get	;wreg free
 11577  0059D0  6EDF               	movwf	indf2,c
 11578                           
 11579                           ;i2c.c: 123: _i2c_acknowledge();
 11580  0059D2  ECDE  F038         	call	__i2c_acknowledge	;wreg free
 11581  0059D6  2A11               	incf	__i2c_read@cntr,f,c
 11582  0059D8                     l1146:
 11583  0059D8  0EFF               	movlw	255
 11584  0059DA  6E09               	movwf	??__i2c_read& (0+255),c
 11585  0059DC  0EFF               	movlw	255
 11586  0059DE  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 11587  0059E0  5008               	movf	__i2c_read@length,w,c
 11588  0059E2  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 11589  0059E4  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 11590  0059E6  5009               	movf	??__i2c_read,w,c
 11591  0059E8  260B               	addwf	??__i2c_read+2,f,c
 11592  0059EA  500A               	movf	??__i2c_read+1,w,c
 11593  0059EC  220C               	addwfc	??__i2c_read+3,f,c
 11594  0059EE  5011               	movf	__i2c_read@cntr,w,c
 11595  0059F0  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 11596  0059F2  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 11597  0059F4  500B               	movf	??__i2c_read+2,w,c
 11598  0059F6  5C0D               	subwf	??__i2c_read+4,w,c
 11599  0059F8  500E               	movf	??__i2c_read+5,w,c
 11600  0059FA  0A80               	xorlw	128
 11601  0059FC  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 11602  0059FE  500C               	movf	??__i2c_read+3,w,c
 11603  005A00  0A80               	xorlw	128
 11604  005A02  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 11605  005A04  A0D8               	btfss	status,0,c
 11606  005A06  D7DA               	goto	l1147
 11607                           
 11608                           ;i2c.c: 124: };i2c.c: 125: data[cntr] = _i2c_get();
 11609  005A08  5011               	movf	__i2c_read@cntr,w,c
 11610  005A0A  0D01               	mullw	1
 11611  005A0C  50F3               	movf	prodl,w,c
 11612  005A0E  2406               	addwf	__i2c_read@data,w,c
 11613  005A10  6ED9               	movwf	fsr2l,c
 11614  005A12  50F4               	movf	prodh,w,c
 11615  005A14  2007               	addwfc	__i2c_read@data+1,w,c
 11616  005A16  6EDA               	movwf	fsr2h,c
 11617  005A18  ECD9  F038         	call	__i2c_get	;wreg free
 11618  005A1C  6EDF               	movwf	indf2,c
 11619                           
 11620                           ;i2c.c: 126: _i2c_not_acknowledge();
 11621  005A1E  ECD4  F038         	call	__i2c_not_acknowledge	;wreg free
 11622                           
 11623                           ;i2c.c: 128: _i2c_stop();
 11624  005A22  EC0A  F039         	call	__i2c_stop	;wreg free
 11625  005A26  0012               	return		;funcret
 11626  005A28                     __end_of__i2c_read:
 11627                           	opt stack 0
 11628                           tblptru	equ	0xFF8
 11629                           tblptrh	equ	0xFF7
 11630                           tblptrl	equ	0xFF6
 11631                           tablat	equ	0xFF5
 11632                           prodh	equ	0xFF4
 11633                           prodl	equ	0xFF3
 11634                           intcon	equ	0xFF2
 11635                           intcon2	equ	0xFF1
 11636                           intcon3	equ	0xFF0
 11637                           postinc0	equ	0xFEE
 11638                           wreg	equ	0xFE8
 11639                           indf1	equ	0xFE7
 11640                           postdec1	equ	0xFE5
 11641                           plusw1	equ	0xFE3
 11642                           fsr1h	equ	0xFE2
 11643                           fsr1l	equ	0xFE1
 11644                           indf2	equ	0xFDF
 11645                           postinc2	equ	0xFDE
 11646                           postdec2	equ	0xFDD
 11647                           plusw2	equ	0xFDB
 11648                           fsr2h	equ	0xFDA
 11649                           fsr2l	equ	0xFD9
 11650                           status	equ	0xFD8
 11651                           
 11652 ;; *************** function __i2c_not_acknowledge *****************
 11653 ;; Defined at:
 11654 ;;		line 75 in file "i2c.c"
 11655 ;; Parameters:    Size  Location     Type
 11656 ;;		None
 11657 ;; Auto vars:     Size  Location     Type
 11658 ;;		None
 11659 ;; Return value:  Size  Location     Type
 11660 ;;                  1    wreg      void 
 11661 ;; Registers used:
 11662 ;;		None
 11663 ;; Tracked objects:
 11664 ;;		On entry : 0/0
 11665 ;;		On exit  : 0/0
 11666 ;;		Unchanged: 0/0
 11667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11672 ;;Total ram usage:        0 bytes
 11673 ;; Hardware stack levels used:    1
 11674 ;; This function calls:
 11675 ;;		Nothing
 11676 ;; This function is called by:
 11677 ;;		__i2c_read
 11678 ;;		_i2c_adc_read
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text56
 11683  0071A8                     __ptext56:
 11684                           	opt stack 0
 11685  0071A8                     __i2c_not_acknowledge:
 11686                           	opt stack 27
 11687                           
 11688                           ;i2c.c: 77: SSP1CON2bits.ACKDT = 1;
 11689                           
 11690                           ;incstack = 0
 11691  0071A8  8AC5               	bsf	4037,5,c	;volatile
 11692                           
 11693                           ;i2c.c: 78: SSP1CON2bits.ACKEN = 1;
 11694  0071AA  88C5               	bsf	4037,4,c	;volatile
 11695  0071AC  A8C5               	btfss	4037,4,c	;volatile
 11696  0071AE  0012               	return	
 11697  0071B0  D7FD               	goto	l1135
 11698  0071B2                     __end_of__i2c_not_acknowledge:
 11699                           	opt stack 0
 11700                           tblptru	equ	0xFF8
 11701                           tblptrh	equ	0xFF7
 11702                           tblptrl	equ	0xFF6
 11703                           tablat	equ	0xFF5
 11704                           prodh	equ	0xFF4
 11705                           prodl	equ	0xFF3
 11706                           intcon	equ	0xFF2
 11707                           intcon2	equ	0xFF1
 11708                           intcon3	equ	0xFF0
 11709                           postinc0	equ	0xFEE
 11710                           wreg	equ	0xFE8
 11711                           indf1	equ	0xFE7
 11712                           postdec1	equ	0xFE5
 11713                           plusw1	equ	0xFE3
 11714                           fsr1h	equ	0xFE2
 11715                           fsr1l	equ	0xFE1
 11716                           indf2	equ	0xFDF
 11717                           postinc2	equ	0xFDE
 11718                           postdec2	equ	0xFDD
 11719                           plusw2	equ	0xFDB
 11720                           fsr2h	equ	0xFDA
 11721                           fsr2l	equ	0xFD9
 11722                           status	equ	0xFD8
 11723                           
 11724 ;; *************** function __i2c_get *****************
 11725 ;; Defined at:
 11726 ;;		line 55 in file "i2c.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      unsigned char 
 11733 ;; Registers used:
 11734 ;;		wreg, status,2
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		__i2c_read
 11750 ;;		_i2c_adc_read
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text57
 11755  0071B2                     __ptext57:
 11756                           	opt stack 0
 11757  0071B2                     __i2c_get:
 11758                           	opt stack 27
 11759                           
 11760                           ;i2c.c: 57: SSP1CON2bits.RCEN = 1 ;
 11761                           
 11762                           ;incstack = 0
 11763  0071B2  86C5               	bsf	4037,3,c	;volatile
 11764  0071B4  B6C5               	btfsc	4037,3,c	;volatile
 11765  0071B6  D7FE               	goto	l1117
 11766                           
 11767                           ;i2c.c: 59: return SSP1BUF;
 11768  0071B8  50C9               	movf	4041,w,c	;volatile
 11769  0071BA  0012               	return	
 11770  0071BC                     __end_of__i2c_get:
 11771                           	opt stack 0
 11772                           tblptru	equ	0xFF8
 11773                           tblptrh	equ	0xFF7
 11774                           tblptrl	equ	0xFF6
 11775                           tablat	equ	0xFF5
 11776                           prodh	equ	0xFF4
 11777                           prodl	equ	0xFF3
 11778                           intcon	equ	0xFF2
 11779                           intcon2	equ	0xFF1
 11780                           intcon3	equ	0xFF0
 11781                           postinc0	equ	0xFEE
 11782                           wreg	equ	0xFE8
 11783                           indf1	equ	0xFE7
 11784                           postdec1	equ	0xFE5
 11785                           plusw1	equ	0xFE3
 11786                           fsr1h	equ	0xFE2
 11787                           fsr1l	equ	0xFE1
 11788                           indf2	equ	0xFDF
 11789                           postinc2	equ	0xFDE
 11790                           postdec2	equ	0xFDD
 11791                           plusw2	equ	0xFDB
 11792                           fsr2h	equ	0xFDA
 11793                           fsr2l	equ	0xFD9
 11794                           status	equ	0xFD8
 11795                           
 11796 ;; *************** function __i2c_acknowledge *****************
 11797 ;; Defined at:
 11798 ;;		line 68 in file "i2c.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;		None
 11801 ;; Auto vars:     Size  Location     Type
 11802 ;;		None
 11803 ;; Return value:  Size  Location     Type
 11804 ;;                  1    wreg      void 
 11805 ;; Registers used:
 11806 ;;		None
 11807 ;; Tracked objects:
 11808 ;;		On entry : 0/0
 11809 ;;		On exit  : 0/0
 11810 ;;		Unchanged: 0/0
 11811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11816 ;;Total ram usage:        0 bytes
 11817 ;; Hardware stack levels used:    1
 11818 ;; This function calls:
 11819 ;;		Nothing
 11820 ;; This function is called by:
 11821 ;;		__i2c_read
 11822 ;;		_i2c_adc_read
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text58
 11827  0071BC                     __ptext58:
 11828                           	opt stack 0
 11829  0071BC                     __i2c_acknowledge:
 11830                           	opt stack 27
 11831                           
 11832                           ;i2c.c: 70: SSP1CON2bits.ACKDT = 0;
 11833                           
 11834                           ;incstack = 0
 11835  0071BC  9AC5               	bcf	4037,5,c	;volatile
 11836                           
 11837                           ;i2c.c: 71: SSP1CON2bits.ACKEN = 1;
 11838  0071BE  88C5               	bsf	4037,4,c	;volatile
 11839  0071C0  A8C5               	btfss	4037,4,c	;volatile
 11840  0071C2  0012               	return	
 11841  0071C4  D7FD               	goto	l1129
 11842  0071C6                     __end_of__i2c_acknowledge:
 11843                           	opt stack 0
 11844                           tblptru	equ	0xFF8
 11845                           tblptrh	equ	0xFF7
 11846                           tblptrl	equ	0xFF6
 11847                           tablat	equ	0xFF5
 11848                           prodh	equ	0xFF4
 11849                           prodl	equ	0xFF3
 11850                           intcon	equ	0xFF2
 11851                           intcon2	equ	0xFF1
 11852                           intcon3	equ	0xFF0
 11853                           postinc0	equ	0xFEE
 11854                           wreg	equ	0xFE8
 11855                           indf1	equ	0xFE7
 11856                           postdec1	equ	0xFE5
 11857                           plusw1	equ	0xFE3
 11858                           fsr1h	equ	0xFE2
 11859                           fsr1l	equ	0xFE1
 11860                           indf2	equ	0xFDF
 11861                           postinc2	equ	0xFDE
 11862                           postdec2	equ	0xFDD
 11863                           plusw2	equ	0xFDB
 11864                           fsr2h	equ	0xFDA
 11865                           fsr2l	equ	0xFD9
 11866                           status	equ	0xFD8
 11867                           
 11868 ;; *************** function _USBDeviceTasks *****************
 11869 ;; Defined at:
 11870 ;;		line 477 in file "usb_device.c"
 11871 ;; Parameters:    Size  Location     Type
 11872 ;;		None
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;  i               1   31[COMRAM] unsigned char 
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11888 ;;Total ram usage:        1 bytes
 11889 ;; Hardware stack levels used:    1
 11890 ;; Hardware stack levels required when called:    8
 11891 ;; This function calls:
 11892 ;;		_USBCtrlEPAllowStatusStage
 11893 ;;		_USBCtrlEPService
 11894 ;;		_USBDeviceInit
 11895 ;;		_USBIncrement1msInternalTimers
 11896 ;;		_USBStallHandler
 11897 ;;		_USBSuspend
 11898 ;;		_USBWakeFromSuspend
 11899 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11900 ;; This function is called by:
 11901 ;;		_main
 11902 ;; This function uses a non-reentrant model
 11903 ;;
 11904                           
 11905                           	psect	text59
 11906  002C92                     __ptext59:
 11907                           	opt stack 0
 11908  002C92                     _USBDeviceTasks:
 11909                           	opt stack 22
 11910                           
 11911                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 11912                           
 11913                           ; BSR set to: 15
 11914                           
 11915                           ; BSR set to: 15
 11916                           ;usb_device.c: 543: return;
 11917                           
 11918                           ; BSR set to: 15
 11919                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 11920                           
 11921                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 11922                           
 11923                           ;usb_device.c: 511: UIE = 0;
 11924                           
 11925                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 11926                           
 11927                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 11928                           
 11929                           ;incstack = 0
 11930  002C92  505F               	movf	_USBDeviceState,w,c
 11931  002C94  A4D8               	btfss	status,2,c
 11932  002C96  D011               	goto	l150
 11933                           
 11934                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 11935  002C98  0E00               	movlw	0
 11936  002C9A  6E65               	movwf	3941,c	;volatile
 11937                           
 11938                           ;usb_device.c: 572: UIE = 0;
 11939  002C9C  0E00               	movlw	0
 11940  002C9E  010F               	movlb	15	; () banked
 11941  002CA0  6F36               	movwf	54,b	;volatile
 11942                           
 11943                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11944  002CA2  0E16               	movlw	22
 11945  002CA4  6F39               	movwf	57,b	;volatile
 11946  002CA6  0E9F               	movlw	159
 11947  002CA8  6F37               	movwf	55,b	;volatile
 11948  002CAA  0E7B               	movlw	123
 11949  002CAC  6F36               	movwf	54,b	;volatile
 11950                           
 11951                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11952  002CAE  D001               	goto	l151
 11953  002CB0                     l152:
 11954  002CB0  8665               	bsf	3941,3,c	;volatile
 11955  002CB2                     l151:
 11956  002CB2  A665               	btfss	3941,3,c	;volatile
 11957  002CB4  D7FD               	goto	l152
 11958                           
 11959                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11960  002CB6  0E01               	movlw	1
 11961  002CB8  6E5F               	movwf	_USBDeviceState,c
 11962  002CBA                     l150:
 11963                           
 11964                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11965  002CBA  045F               	decf	_USBDeviceState,w,c
 11966  002CBC  B4D8               	btfsc	status,2,c
 11967                           
 11968                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11969  002CBE  BA65               	btfsc	3941,5,c	;volatile
 11970  002CC0  D009               	goto	l155
 11971                           
 11972                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11973  002CC2  0E00               	movlw	0
 11974  002CC4  6E62               	movwf	3938,c	;volatile
 11975                           
 11976                           ;usb_device.c: 612: UIE=0;
 11977  002CC6  0E00               	movlw	0
 11978  002CC8  010F               	movlb	15	; () banked
 11979  002CCA  6F36               	movwf	54,b	;volatile
 11980                           
 11981                           ; BSR set to: 15
 11982                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11983  002CCC  8136               	bsf	54,0,b	;volatile
 11984                           
 11985                           ; BSR set to: 15
 11986                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11987  002CCE  8936               	bsf	54,4,b	;volatile
 11988                           
 11989                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11990  002CD0  0E02               	movlw	2
 11991  002CD2  6E5F               	movwf	_USBDeviceState,c
 11992  002CD4                     l155:
 11993                           
 11994                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11995                           
 11996                           ; BSR set to: 15
 11997                           
 11998                           ; BSR set to: 15
 11999  002CD4  A462               	btfss	3938,2,c	;volatile
 12000  002CD6  D006               	goto	l156
 12001  002CD8  010F               	movlb	15	; () banked
 12002  002CDA  A536               	btfss	54,2,b	;volatile
 12003  002CDC  D003               	goto	l156
 12004                           
 12005                           ; BSR set to: 15
 12006                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12007  002CDE  9462               	bcf	3938,2,c	;volatile
 12008                           
 12009                           ; BSR set to: 15
 12010                           ;usb_device.c: 640: USBWakeFromSuspend();
 12011  002CE0  ECD8  F035         	call	_USBWakeFromSuspend	;wreg free
 12012  002CE4                     l156:
 12013                           
 12014                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12015  002CE4  A265               	btfss	3941,1,c	;volatile
 12016  002CE6  D002               	goto	l157
 12017                           
 12018                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12019  002CE8  98A1               	bcf	4001,4,c	;volatile
 12020                           
 12021                           ;usb_device.c: 650: return;
 12022  002CEA  0012               	return	
 12023  002CEC                     l157:
 12024                           
 12025                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12026  002CEC  A062               	btfss	3938,0,c	;volatile
 12027  002CEE  D008               	goto	l158
 12028  002CF0  010F               	movlb	15	; () banked
 12029  002CF2  A136               	btfss	54,0,b	;volatile
 12030  002CF4  D005               	goto	l158
 12031                           
 12032                           ; BSR set to: 15
 12033                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12034  002CF6  ECBB  F019         	call	_USBDeviceInit	;wreg free
 12035                           
 12036                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12037  002CFA  0E04               	movlw	4
 12038  002CFC  6E5F               	movwf	_USBDeviceState,c
 12039                           
 12040                           ;usb_device.c: 681: (UIR &= 0xFE);
 12041  002CFE  9062               	bcf	3938,0,c	;volatile
 12042  002D00                     l158:
 12043                           
 12044                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12045  002D00  A862               	btfss	3938,4,c	;volatile
 12046  002D02  D004               	goto	l159
 12047  002D04  010F               	movlb	15	; () banked
 12048  002D06  B936               	btfsc	54,4,b	;volatile
 12049                           
 12050                           ; BSR set to: 15
 12051                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12052  002D08  EC8E  F036         	call	_USBSuspend	;wreg free
 12053  002D0C                     l159:
 12054                           
 12055                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12056  002D0C  AC62               	btfss	3938,6,c	;volatile
 12057  002D0E  D01C               	goto	l163
 12058                           
 12059                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12060  002D10  010F               	movlb	15	; () banked
 12061  002D12  AD36               	btfss	54,6,b	;volatile
 12062  002D14  D00E               	goto	l161
 12063                           
 12064                           ; BSR set to: 15
 12065                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12066  002D16  0E00               	movlw	0
 12067  002D18  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12068  002D1A  0E73               	movlw	115
 12069  002D1C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12070  002D1E  0E00               	movlw	0
 12071  002D20  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12072  002D22  0E00               	movlw	0
 12073  002D24  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12074  002D26  0E00               	movlw	0
 12075  002D28  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12076  002D2A  0E01               	movlw	1
 12077  002D2C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12078  002D2E  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12079  002D32                     l161:
 12080                           
 12081                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12082  002D32  9C62               	bcf	3938,6,c	;volatile
 12083                           
 12084                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12085  002D34  ECAD  F037         	call	_USBIncrement1msInternalTimers	;wreg free
 12086                           
 12087                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12088  002D38  0100               	movlb	0	; () banked
 12089  002D3A  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12090  002D3C  A4D8               	btfss	status,2,c
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12094  002D3E  07A7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12098                           
 12099                           ; BSR set to: 0
 12100  002D40  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12101  002D42  B4D8               	btfsc	status,2,c
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12105  002D44  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12106  002D48                     l163:
 12107                           
 12108                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12109  002D48  AA62               	btfss	3938,5,c	;volatile
 12110  002D4A  D004               	goto	l164
 12111  002D4C  010F               	movlb	15	; () banked
 12112  002D4E  BB36               	btfsc	54,5,b	;volatile
 12113                           
 12114                           ; BSR set to: 15
 12115                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12116  002D50  EC9F  F034         	call	_USBStallHandler	;wreg free
 12117  002D54                     l164:
 12118                           
 12119                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12120  002D54  A262               	btfss	3938,1,c	;volatile
 12121  002D56  D012               	goto	l165
 12122  002D58  010F               	movlb	15	; () banked
 12123  002D5A  A336               	btfss	54,1,b	;volatile
 12124  002D5C  D00F               	goto	l165
 12125                           
 12126                           ; BSR set to: 15
 12127                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12128  002D5E  0E7F               	movlw	127
 12129  002D60  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12130  002D62  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12131  002D64  0E00               	movlw	0
 12132  002D66  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12133  002D68  0E00               	movlw	0
 12134  002D6A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12135  002D6C  0E00               	movlw	0
 12136  002D6E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12137  002D70  0E01               	movlw	1
 12138  002D72  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12139  002D74  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12140                           
 12141                           ;usb_device.c: 759: {UEIR = 0;};
 12142  002D78  0E00               	movlw	0
 12143  002D7A  6E63               	movwf	3939,c	;volatile
 12144  002D7C                     l165:
 12145                           
 12146                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12147  002D7C  0E04               	movlw	4
 12148  002D7E  605F               	cpfslt	_USBDeviceState,c
 12149  002D80  D002               	goto	l166
 12150                           
 12151                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12152  002D82  98A1               	bcf	4001,4,c	;volatile
 12153                           
 12154                           ;usb_device.c: 777: return;
 12155  002D84  0012               	return	
 12156  002D86                     l166:
 12157                           
 12158                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12159  002D86  010F               	movlb	15	; () banked
 12160  002D88  A736               	btfss	54,3,b	;volatile
 12161  002D8A  D03C               	goto	u11880
 12162                           
 12163                           ; BSR set to: 15
 12164                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12165  002D8C  0E00               	movlw	0
 12166  002D8E  6E20               	movwf	USBDeviceTasks@i,c
 12167  002D90                     l14145:
 12168                           
 12169                           ; BSR set to: 15
 12170  002D90  0E03               	movlw	3
 12171  002D92  6420               	cpfsgt	USBDeviceTasks@i,c
 12172  002D94  D001               	goto	l168
 12173  002D96  D036               	goto	u11880
 12174  002D98                     l168:
 12175                           
 12176                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12177  002D98  A662               	btfss	3938,3,c	;volatile
 12178  002D9A  D034               	goto	u11880
 12179                           
 12180                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12181  002D9C  CF64 F0B4          	movff	3940,_USTATcopy	;volatile
 12182                           
 12183                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12184  002DA0  0100               	movlb	0	; () banked
 12185  002DA2  31B4               	rrcf	_USTATcopy& (0+255),w,b
 12186  002DA4  32E8               	rrcf	wreg,f,c
 12187  002DA6  32E8               	rrcf	wreg,f,c
 12188  002DA8  0B0F               	andlw	15
 12189  002DAA  6FA9               	movwf	_endpoint_number& (0+255),b
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;usb_device.c: 793: (UIR &= 0xF7);
 12193  002DAC  9662               	bcf	3938,3,c	;volatile
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12197  002DAE  B5B4               	btfsc	_USTATcopy& (0+255),2,b
 12198  002DB0  D007               	goto	l171
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12202  002DB2  51A9               	movf	_endpoint_number& (0+255),w,b
 12203  002DB4  0D01               	mullw	1
 12204  002DB6  0E57               	movlw	low _ep_data_out
 12205  002DB8  24F3               	addwf	prodl,w,c
 12206  002DBA  6ED9               	movwf	fsr2l,c
 12207  002DBC  0E01               	movlw	high _ep_data_out
 12208  002DBE  D007               	goto	L6
 12209  002DC0                     l171:
 12210                           
 12211                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12212                           
 12213                           ; BSR set to: 1
 12214  002DC0  0100               	movlb	0	; () banked
 12215  002DC2  51A9               	movf	_endpoint_number& (0+255),w,b
 12216  002DC4  0D01               	mullw	1
 12217  002DC6  0E5A               	movlw	low _ep_data_in
 12218  002DC8  24F3               	addwf	prodl,w,c
 12219  002DCA  6ED9               	movwf	fsr2l,c
 12220  002DCC  0E01               	movlw	high _ep_data_in
 12221  002DCE                     L6:
 12222  002DCE  20F4               	addwfc	prodh,w,c
 12223  002DD0  6EDA               	movwf	fsr2h,c
 12224  002DD2  0101               	movlb	1	; () banked
 12225  002DD4  70DF               	btg	indf2,0,c
 12226                           
 12227                           ; BSR set to: 1
 12228                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 12229                           
 12230                           ; BSR set to: 1
 12231  002DD6  0100               	movlb	0	; () banked
 12232  002DD8  51A9               	movf	_endpoint_number& (0+255),w,b
 12233  002DDA  A4D8               	btfss	status,2,c
 12234  002DDC  D003               	goto	l173
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 12238  002DDE  EC25  F028         	call	_USBCtrlEPService	;wreg free
 12239                           
 12240                           ;usb_device.c: 813: }
 12241  002DE2  D00E               	goto	l175
 12242  002DE4                     l173:
 12243                           
 12244                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 12245  002DE4  0E00               	movlw	0
 12246  002DE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12247  002DE8  0E72               	movlw	114
 12248  002DEA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12249  002DEC  0EB4               	movlw	low _USTATcopy
 12250  002DEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12251  002DF0  0E00               	movlw	high _USTATcopy
 12252  002DF2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12253  002DF4  0E00               	movlw	0
 12254  002DF6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12255  002DF8  0E00               	movlw	0
 12256  002DFA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12257  002DFC  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12258  002E00                     l175:
 12259  002E00  2A20               	incf	USBDeviceTasks@i,f,c
 12260  002E02  D7C6               	goto	l14145
 12261  002E04                     u11880:
 12262                           
 12263                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 12264  002E04  98A1               	bcf	4001,4,c	;volatile
 12265  002E06  0012               	return		;funcret
 12266  002E08                     __end_of_USBDeviceTasks:
 12267                           	opt stack 0
 12268                           tblptru	equ	0xFF8
 12269                           tblptrh	equ	0xFF7
 12270                           tblptrl	equ	0xFF6
 12271                           tablat	equ	0xFF5
 12272                           prodh	equ	0xFF4
 12273                           prodl	equ	0xFF3
 12274                           intcon	equ	0xFF2
 12275                           intcon2	equ	0xFF1
 12276                           intcon3	equ	0xFF0
 12277                           postinc0	equ	0xFEE
 12278                           wreg	equ	0xFE8
 12279                           indf1	equ	0xFE7
 12280                           postdec1	equ	0xFE5
 12281                           plusw1	equ	0xFE3
 12282                           fsr1h	equ	0xFE2
 12283                           fsr1l	equ	0xFE1
 12284                           indf2	equ	0xFDF
 12285                           postinc2	equ	0xFDE
 12286                           postdec2	equ	0xFDD
 12287                           plusw2	equ	0xFDB
 12288                           fsr2h	equ	0xFDA
 12289                           fsr2l	equ	0xFD9
 12290                           status	equ	0xFD8
 12291                           
 12292 ;; *************** function _USBWakeFromSuspend *****************
 12293 ;; Defined at:
 12294 ;;		line 2305 in file "usb_device.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    4
 12315 ;; This function calls:
 12316 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12317 ;; This function is called by:
 12318 ;;		_USBDeviceTasks
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           	psect	text60
 12323  006BB0                     __ptext60:
 12324                           	opt stack 0
 12325  006BB0                     _USBWakeFromSuspend:
 12326                           	opt stack 25
 12327                           
 12328                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 12329                           
 12330                           ;incstack = 0
 12331  006BB0  0E00               	movlw	0
 12332  006BB2  0100               	movlb	0	; () banked
 12333  006BB4  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12337  006BB6  0E00               	movlw	0
 12338  006BB8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12339  006BBA  0E74               	movlw	116
 12340  006BBC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12341  006BBE  0E00               	movlw	0
 12342  006BC0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12343  006BC2  0E00               	movlw	0
 12344  006BC4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12345  006BC6  0E00               	movlw	0
 12346  006BC8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12347  006BCA  0E00               	movlw	0
 12348  006BCC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12349  006BCE  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12350                           
 12351                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 12352  006BD2  9265               	bcf	3941,1,c	;volatile
 12353                           
 12354                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 12355  006BD4  010F               	movlb	15	; () banked
 12356  006BD6  9536               	bcf	54,2,b	;volatile
 12357                           
 12358                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 12359  006BD8  D001               	goto	l303
 12360  006BDA                     
 12361                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 12362                           
 12363                           ; BSR set to: 15
 12364  006BDA  9462               	bcf	3938,2,c	;volatile
 12365  006BDC                     l303:
 12366  006BDC  B462               	btfsc	3938,2,c	;volatile
 12367  006BDE  D7FD               	goto	l304
 12368                           
 12369                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 12370  006BE0  0E00               	movlw	0
 12371  006BE2  0100               	movlb	0	; () banked
 12372  006BE4  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12373                           
 12374                           ; BSR set to: 0
 12375  006BE6  0012               	return		;funcret
 12376  006BE8                     __end_of_USBWakeFromSuspend:
 12377                           	opt stack 0
 12378                           tblptru	equ	0xFF8
 12379                           tblptrh	equ	0xFF7
 12380                           tblptrl	equ	0xFF6
 12381                           tablat	equ	0xFF5
 12382                           prodh	equ	0xFF4
 12383                           prodl	equ	0xFF3
 12384                           intcon	equ	0xFF2
 12385                           intcon2	equ	0xFF1
 12386                           intcon3	equ	0xFF0
 12387                           postinc0	equ	0xFEE
 12388                           wreg	equ	0xFE8
 12389                           indf1	equ	0xFE7
 12390                           postdec1	equ	0xFE5
 12391                           plusw1	equ	0xFE3
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           indf2	equ	0xFDF
 12395                           postinc2	equ	0xFDE
 12396                           postdec2	equ	0xFDD
 12397                           plusw2	equ	0xFDB
 12398                           fsr2h	equ	0xFDA
 12399                           fsr2l	equ	0xFD9
 12400                           status	equ	0xFD8
 12401                           
 12402 ;; *************** function _USBSuspend *****************
 12403 ;; Defined at:
 12404 ;;		line 2247 in file "usb_device.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;		None
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12422 ;;Total ram usage:        0 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    4
 12425 ;; This function calls:
 12426 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12427 ;; This function is called by:
 12428 ;;		_USBDeviceTasks
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           
 12432                           	psect	text61
 12433  006D1C                     __ptext61:
 12434                           	opt stack 0
 12435  006D1C                     _USBSuspend:
 12436                           	opt stack 25
 12437                           
 12438                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;incstack = 0
 12442  006D1C  010F               	movlb	15	; () banked
 12443  006D1E  8536               	bsf	54,2,b	;volatile
 12444                           
 12445                           ; BSR set to: 15
 12446                           ;usb_device.c: 2273: (UIR &= 0xEF);
 12447  006D20  9862               	bcf	3938,4,c	;volatile
 12448                           
 12449                           ; BSR set to: 15
 12450                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 12451  006D22  8265               	bsf	3941,1,c	;volatile
 12452                           
 12453                           ; BSR set to: 15
 12454                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 12455  006D24  0E01               	movlw	1
 12456  006D26  0100               	movlb	0	; () banked
 12457  006D28  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 12461  006D2A  0E00               	movlw	0
 12462  006D2C  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12466  006D2E  0E00               	movlw	0
 12467  006D30  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12468  006D32  0E75               	movlw	117
 12469  006D34  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12470  006D36  0E00               	movlw	0
 12471  006D38  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12472  006D3A  0E00               	movlw	0
 12473  006D3C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12474  006D3E  0E00               	movlw	0
 12475  006D40  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12476  006D42  0E00               	movlw	0
 12477  006D44  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12478  006D46  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12479  006D4A  0012               	return		;funcret
 12480  006D4C                     __end_of_USBSuspend:
 12481                           	opt stack 0
 12482                           tblptru	equ	0xFF8
 12483                           tblptrh	equ	0xFF7
 12484                           tblptrl	equ	0xFF6
 12485                           tablat	equ	0xFF5
 12486                           prodh	equ	0xFF4
 12487                           prodl	equ	0xFF3
 12488                           intcon	equ	0xFF2
 12489                           intcon2	equ	0xFF1
 12490                           intcon3	equ	0xFF0
 12491                           postinc0	equ	0xFEE
 12492                           wreg	equ	0xFE8
 12493                           indf1	equ	0xFE7
 12494                           postdec1	equ	0xFE5
 12495                           plusw1	equ	0xFE3
 12496                           fsr1h	equ	0xFE2
 12497                           fsr1l	equ	0xFE1
 12498                           indf2	equ	0xFDF
 12499                           postinc2	equ	0xFDE
 12500                           postdec2	equ	0xFDD
 12501                           plusw2	equ	0xFDB
 12502                           fsr2h	equ	0xFDA
 12503                           fsr2l	equ	0xFD9
 12504                           status	equ	0xFD8
 12505                           
 12506 ;; *************** function _USBStallHandler *****************
 12507 ;; Defined at:
 12508 ;;		line 2204 in file "usb_device.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;		None
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;		None
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      void 
 12515 ;; Registers used:
 12516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;Total ram usage:        1 bytes
 12527 ;; Hardware stack levels used:    1
 12528 ;; This function calls:
 12529 ;;		Nothing
 12530 ;; This function is called by:
 12531 ;;		_USBDeviceTasks
 12532 ;; This function uses a non-reentrant model
 12533 ;;
 12534                           
 12535                           	psect	text62
 12536  00693E                     __ptext62:
 12537                           	opt stack 0
 12538  00693E                     _USBStallHandler:
 12539                           	opt stack 29
 12540                           
 12541                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12542                           
 12543                           ;incstack = 0
 12544  00693E  010F               	movlb	15	; () banked
 12545  006940  A126               	btfss	38,0,b	;volatile
 12546  006942  D01D               	goto	l295
 12547                           
 12548                           ; BSR set to: 15
 12549                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 12550  006944  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12551  006948  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12552  00694C  0E80               	movlw	128
 12553  00694E  18DE               	xorwf	postinc2,w,c
 12554  006950  A4D8               	btfss	status,2,c
 12555  006952  D014               	goto	l296
 12556                           
 12557                           ; BSR set to: 15
 12558  006954  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 12559  006958  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12560  00695C  0E84               	movlw	132
 12561  00695E  18DE               	xorwf	postinc2,w,c
 12562  006960  A4D8               	btfss	status,2,c
 12563  006962  D00C               	goto	l296
 12564                           
 12565                           ; BSR set to: 15
 12566                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 12567  006964  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12568  006968  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12569  00696C  0E0C               	movlw	12
 12570  00696E  6EDF               	movwf	indf2,c
 12571                           
 12572                           ; BSR set to: 15
 12573                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12574  006970  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12575  006974  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12576  006978  0E00               	movlw	0
 12577  00697A  8EDB               	bsf	plusw2,7,c
 12578  00697C                     l296:
 12579                           
 12580                           ; BSR set to: 15
 12581                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 12582                           
 12583                           ; BSR set to: 15
 12584  00697C  9126               	bcf	38,0,b	;volatile
 12585  00697E                     l295:
 12586                           
 12587                           ; BSR set to: 15
 12588                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 12589  00697E  9A62               	bcf	3938,5,c	;volatile
 12590                           
 12591                           ; BSR set to: 15
 12592  006980  0012               	return		;funcret
 12593  006982                     __end_of_USBStallHandler:
 12594                           	opt stack 0
 12595                           tblptru	equ	0xFF8
 12596                           tblptrh	equ	0xFF7
 12597                           tblptrl	equ	0xFF6
 12598                           tablat	equ	0xFF5
 12599                           prodh	equ	0xFF4
 12600                           prodl	equ	0xFF3
 12601                           intcon	equ	0xFF2
 12602                           intcon2	equ	0xFF1
 12603                           intcon3	equ	0xFF0
 12604                           postinc0	equ	0xFEE
 12605                           wreg	equ	0xFE8
 12606                           indf1	equ	0xFE7
 12607                           postdec1	equ	0xFE5
 12608                           plusw1	equ	0xFE3
 12609                           fsr1h	equ	0xFE2
 12610                           fsr1l	equ	0xFE1
 12611                           indf2	equ	0xFDF
 12612                           postinc2	equ	0xFDE
 12613                           postdec2	equ	0xFDD
 12614                           plusw2	equ	0xFDB
 12615                           fsr2h	equ	0xFDA
 12616                           fsr2l	equ	0xFD9
 12617                           status	equ	0xFD8
 12618                           
 12619 ;; *************** function _USBIncrement1msInternalTimers *****************
 12620 ;; Defined at:
 12621 ;;		line 3027 in file "usb_device.c"
 12622 ;; Parameters:    Size  Location     Type
 12623 ;;		None
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;		None
 12626 ;; Return value:  Size  Location     Type
 12627 ;;                  1    wreg      void 
 12628 ;; Registers used:
 12629 ;;		wreg, status,2, status,0
 12630 ;; Tracked objects:
 12631 ;;		On entry : 0/0
 12632 ;;		On exit  : 0/0
 12633 ;;		Unchanged: 0/0
 12634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12639 ;;Total ram usage:        0 bytes
 12640 ;; Hardware stack levels used:    1
 12641 ;; This function calls:
 12642 ;;		Nothing
 12643 ;; This function is called by:
 12644 ;;		_USBDeviceTasks
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           	psect	text63
 12649  006F5A                     __ptext63:
 12650                           	opt stack 0
 12651  006F5A                     _USBIncrement1msInternalTimers:
 12652                           	opt stack 29
 12653                           
 12654                           ;usb_device.c: 3035: USB1msTickCount++;
 12655                           
 12656                           ; BSR set to: 15
 12657                           ;incstack = 0
 12658  006F5A  0E01               	movlw	1
 12659  006F5C  0101               	movlb	1	; () banked
 12660  006F5E  274D               	addwf	_USB1msTickCount& (0+255),f,b
 12661  006F60  0E00               	movlw	0
 12662  006F62  234E               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 12663  006F64  234F               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 12664  006F66  2350               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 12665                           
 12666                           ; BSR set to: 1
 12667                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 12668  006F68  0100               	movlb	0	; () banked
 12669  006F6A  51AA               	movf	_USBBusIsSuspended& (0+255),w,b
 12670  006F6C  A4D8               	btfss	status,2,c
 12671  006F6E  0012               	return	
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 12675  006F70  2BA1               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 12679  006F72  51A1               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 12680  006F74  A4D8               	btfss	status,2,c
 12681  006F76  0012               	return	
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 12685  006F78  69A1               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688  006F7A  0012               	return	
 12689  006F7C                     __end_of_USBIncrement1msInternalTimers:
 12690                           	opt stack 0
 12691                           tblptru	equ	0xFF8
 12692                           tblptrh	equ	0xFF7
 12693                           tblptrl	equ	0xFF6
 12694                           tablat	equ	0xFF5
 12695                           prodh	equ	0xFF4
 12696                           prodl	equ	0xFF3
 12697                           intcon	equ	0xFF2
 12698                           intcon2	equ	0xFF1
 12699                           intcon3	equ	0xFF0
 12700                           postinc0	equ	0xFEE
 12701                           wreg	equ	0xFE8
 12702                           indf1	equ	0xFE7
 12703                           postdec1	equ	0xFE5
 12704                           plusw1	equ	0xFE3
 12705                           fsr1h	equ	0xFE2
 12706                           fsr1l	equ	0xFE1
 12707                           indf2	equ	0xFDF
 12708                           postinc2	equ	0xFDE
 12709                           postdec2	equ	0xFDD
 12710                           plusw2	equ	0xFDB
 12711                           fsr2h	equ	0xFDA
 12712                           fsr2l	equ	0xFD9
 12713                           status	equ	0xFD8
 12714                           
 12715 ;; *************** function _USBDeviceInit *****************
 12716 ;; Defined at:
 12717 ;;		line 277 in file "usb_device.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;		None
 12720 ;; Auto vars:     Size  Location     Type
 12721 ;;  i               1    8[COMRAM] unsigned char 
 12722 ;; Return value:  Size  Location     Type
 12723 ;;                  1    wreg      void 
 12724 ;; Registers used:
 12725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12726 ;; Tracked objects:
 12727 ;;		On entry : 0/0
 12728 ;;		On exit  : 0/0
 12729 ;;		Unchanged: 0/0
 12730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12735 ;;Total ram usage:        1 bytes
 12736 ;; Hardware stack levels used:    1
 12737 ;; Hardware stack levels required when called:    1
 12738 ;; This function calls:
 12739 ;;		_memset
 12740 ;; This function is called by:
 12741 ;;		_USBDeviceTasks
 12742 ;;		_main
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           	psect	text64
 12747  003376                     __ptext64:
 12748                           	opt stack 0
 12749  003376                     _USBDeviceInit:
 12750                           	opt stack 28
 12751                           
 12752                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;incstack = 0
 12756  003376  98A0               	bcf	4000,4,c	;volatile
 12757                           
 12758                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 12759  003378  0E00               	movlw	0
 12760  00337A  6E63               	movwf	3939,c	;volatile
 12761                           
 12762                           ;usb_device.c: 291: {UIR = 0;};
 12763  00337C  0E00               	movlw	0
 12764  00337E  6E62               	movwf	3938,c	;volatile
 12765                           
 12766                           ;usb_device.c: 294: UEP0 = 0;
 12767  003380  0E00               	movlw	0
 12768  003382  010F               	movlb	15	; () banked
 12769  003384  6F26               	movwf	38,b	;volatile
 12770                           
 12771                           ; BSR set to: 15
 12772                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 12773  003386  0E27               	movlw	39
 12774  003388  6E01               	movwf	memset@p1,c
 12775  00338A  0E0F               	movlw	15
 12776  00338C  6E02               	movwf	memset@p1+1,c
 12777  00338E  0E00               	movlw	0
 12778  003390  6E04               	movwf	memset@c+1,c
 12779  003392  0E00               	movlw	0
 12780  003394  6E03               	movwf	memset@c,c
 12781  003396  0E00               	movlw	0
 12782  003398  6E06               	movwf	memset@n+1,c
 12783  00339A  0E02               	movlw	2
 12784  00339C  6E05               	movwf	memset@n,c
 12785  00339E  ECE9  F036         	call	_memset	;wreg free
 12786                           
 12787                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12788  0033A2  0E16               	movlw	22
 12789  0033A4  010F               	movlb	15	; () banked
 12790  0033A6  6F39               	movwf	57,b	;volatile
 12791                           
 12792                           ; BSR set to: 15
 12793  0033A8  0E9F               	movlw	159
 12794  0033AA  6F37               	movwf	55,b	;volatile
 12795                           
 12796                           ; BSR set to: 15
 12797  0033AC  0E7B               	movlw	123
 12798  0033AE  6F36               	movwf	54,b	;volatile
 12799                           
 12800                           ; BSR set to: 15
 12801                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 12802  0033B0  0E00               	movlw	0
 12803  0033B2  6E09               	movwf	USBDeviceInit@i,c
 12804  0033B4                     l13329:
 12805                           
 12806                           ; BSR set to: 15
 12807  0033B4  0E0B               	movlw	11
 12808  0033B6  6409               	cpfsgt	USBDeviceInit@i,c
 12809  0033B8  D001               	goto	l139
 12810  0033BA  D00E               	goto	u10730
 12811  0033BC                     l139:
 12812                           
 12813                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 12814                           
 12815                           ; BSR set to: 15
 12816  0033BC  5009               	movf	USBDeviceInit@i,w,c
 12817  0033BE  0D04               	mullw	4
 12818  0033C0  0E00               	movlw	0
 12819  0033C2  24F3               	addwf	prodl,w,c
 12820  0033C4  6ED9               	movwf	fsr2l,c
 12821  0033C6  0E0D               	movlw	13
 12822  0033C8  20F4               	addwfc	prodh,w,c
 12823  0033CA  6EDA               	movwf	fsr2h,c
 12824  0033CC  6ADE               	clrf	postinc2,c
 12825  0033CE  6ADE               	clrf	postinc2,c
 12826  0033D0  6ADE               	clrf	postinc2,c
 12827  0033D2  6ADD               	clrf	postdec2,c
 12828  0033D4  2A09               	incf	USBDeviceInit@i,f,c
 12829  0033D6  D7EE               	goto	l13329
 12830  0033D8                     u10730:
 12831                           
 12832                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 12833  0033D8  8C65               	bsf	3941,6,c	;volatile
 12834                           
 12835                           ;usb_device.c: 316: UADDR = 0x00;
 12836  0033DA  0E00               	movlw	0
 12837  0033DC  010F               	movlb	15	; () banked
 12838  0033DE  6F38               	movwf	56,b	;volatile
 12839                           
 12840                           ; BSR set to: 15
 12841                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12842  0033E0  9865               	bcf	3941,4,c	;volatile
 12843                           
 12844                           ; BSR set to: 15
 12845                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12846  0033E2  9C65               	bcf	3941,6,c	;volatile
 12847  0033E4                     
 12848                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 12849                           
 12850                           ; BSR set to: 15
 12851  0033E4  9662               	bcf	3938,3,c	;volatile
 12852                           
 12853                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12854  0033E6  0E00               	movlw	0
 12855  0033E8  0100               	movlb	0	; () banked
 12856  0033EA  6F6F               	movwf	(_inPipes+3)& (0+255),b
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12860  0033EC  0E00               	movlw	0
 12861  0033EE  0101               	movlb	1	; () banked
 12862  0033F0  6F34               	movwf	(_outPipes+3)& (0+255),b
 12863                           
 12864                           ; BSR set to: 1
 12865                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12866  0033F2  0E00               	movlw	0
 12867  0033F4  6F36               	movwf	(_outPipes+5)& (0+255),b
 12868  0033F6  0E00               	movlw	0
 12869  0033F8  6F35               	movwf	(_outPipes+4)& (0+255),b
 12870                           
 12871                           ; BSR set to: 1
 12872                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12873  0033FA  B662               	btfsc	3938,3,c	;volatile
 12874  0033FC  D7F3               	goto	l141
 12875                           
 12876                           ; BSR set to: 1
 12877                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12878                           
 12879                           ; BSR set to: 1
 12880  0033FE  0E01               	movlw	1
 12881  003400  0100               	movlb	0	; () banked
 12882  003402  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12883                           
 12884                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12885  003404  0E01               	movlw	1
 12886  003406  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12887                           
 12888                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12889  003408  0E00               	movlw	0
 12890  00340A  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12891                           
 12892                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12893  00340C  0E00               	movlw	0
 12894  00340E  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12895                           
 12896                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12897  003410  0E00               	movlw	0
 12898  003412  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12899                           
 12900                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12901  003414  0E00               	movlw	0
 12902  003416  6E09               	movwf	USBDeviceInit@i,c
 12903  003418                     l13357:
 12904                           
 12905                           ; BSR set to: 0
 12906  003418  0E02               	movlw	2
 12907  00341A  6409               	cpfsgt	USBDeviceInit@i,c
 12908  00341C  D001               	goto	l143
 12909  00341E  D02E               	goto	u10760
 12910  003420                     l143:
 12911                           
 12912                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 12913                           
 12914                           ; BSR set to: 0
 12915  003420  5009               	movf	USBDeviceInit@i,w,c
 12916  003422  0D02               	mullw	2
 12917  003424  0E72               	movlw	low _pBDTEntryIn
 12918  003426  24F3               	addwf	prodl,w,c
 12919  003428  6ED9               	movwf	fsr2l,c
 12920  00342A  0E00               	movlw	high _pBDTEntryIn
 12921  00342C  20F4               	addwfc	prodh,w,c
 12922  00342E  6EDA               	movwf	fsr2h,c
 12923  003430  0E00               	movlw	0
 12924  003432  6EDE               	movwf	postinc2,c
 12925  003434  0E00               	movlw	0
 12926  003436  6EDD               	movwf	postdec2,c
 12927                           
 12928                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12929  003438  5009               	movf	USBDeviceInit@i,w,c
 12930  00343A  0D02               	mullw	2
 12931  00343C  0E78               	movlw	low _pBDTEntryOut
 12932  00343E  24F3               	addwf	prodl,w,c
 12933  003440  6ED9               	movwf	fsr2l,c
 12934  003442  0E00               	movlw	high _pBDTEntryOut
 12935  003444  20F4               	addwfc	prodh,w,c
 12936  003446  6EDA               	movwf	fsr2h,c
 12937  003448  0E00               	movlw	0
 12938  00344A  6EDE               	movwf	postinc2,c
 12939  00344C  0E00               	movlw	0
 12940  00344E  6EDD               	movwf	postdec2,c
 12941                           
 12942                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12943  003450  5009               	movf	USBDeviceInit@i,w,c
 12944  003452  0D01               	mullw	1
 12945  003454  0E5A               	movlw	low _ep_data_in
 12946  003456  24F3               	addwf	prodl,w,c
 12947  003458  6ED9               	movwf	fsr2l,c
 12948  00345A  0E01               	movlw	high _ep_data_in
 12949  00345C  20F4               	addwfc	prodh,w,c
 12950  00345E  6EDA               	movwf	fsr2h,c
 12951  003460  0E00               	movlw	0
 12952  003462  6EDF               	movwf	indf2,c
 12953                           
 12954                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12955  003464  5009               	movf	USBDeviceInit@i,w,c
 12956  003466  0D01               	mullw	1
 12957  003468  0E57               	movlw	low _ep_data_out
 12958  00346A  24F3               	addwf	prodl,w,c
 12959  00346C  6ED9               	movwf	fsr2l,c
 12960  00346E  0E01               	movlw	high _ep_data_out
 12961  003470  20F4               	addwfc	prodh,w,c
 12962  003472  6EDA               	movwf	fsr2h,c
 12963  003474  0E00               	movlw	0
 12964  003476  6EDF               	movwf	indf2,c
 12965  003478  2A09               	incf	USBDeviceInit@i,f,c
 12966  00347A  D7CE               	goto	l13357
 12967  00347C                     u10760:
 12968                           
 12969                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12970  00347C  0E08               	movlw	8
 12971  00347E  0100               	movlb	0	; () banked
 12972  003480  6F72               	movwf	_pBDTEntryIn& (0+255),b
 12973  003482  0E0D               	movlw	13
 12974  003484  6F73               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12978  003486  0E16               	movlw	22
 12979  003488  010F               	movlb	15	; () banked
 12980  00348A  6F26               	movwf	38,b	;volatile
 12981                           
 12982                           ; BSR set to: 15
 12983                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12984  00348C  0E0D               	movlw	13
 12985  00348E  010D               	movlb	13	; () banked
 12986  003490  6F03               	movwf	3,b	;volatile
 12987  003492  0E30               	movlw	48
 12988  003494  6F02               	movwf	2,b	;volatile
 12989                           
 12990                           ; BSR set to: 13
 12991                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12992  003496  0E08               	movlw	8
 12993  003498  6F01               	movwf	1,b	;volatile
 12994                           
 12995                           ; BSR set to: 13
 12996                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12997  00349A  0E04               	movlw	4
 12998  00349C  6F00               	movwf	0,b	;volatile
 12999                           
 13000                           ; BSR set to: 13
 13001                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13002  00349E  8F00               	bsf	0,7,b	;volatile
 13003                           
 13004                           ; BSR set to: 13
 13005                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13006  0034A0  0E00               	movlw	0
 13007  0034A2  0100               	movlb	0	; () banked
 13008  0034A4  6FB5               	movwf	_USBActiveConfiguration& (0+255),b
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;usb_device.c: 366: USB1msTickCount = 0;
 13012  0034A6  0E00               	movlw	0
 13013  0034A8  0101               	movlb	1	; () banked
 13014  0034AA  6F4D               	movwf	_USB1msTickCount& (0+255),b
 13015  0034AC  0E00               	movlw	0
 13016  0034AE  6F4E               	movwf	(_USB1msTickCount+1)& (0+255),b
 13017  0034B0  0E00               	movlw	0
 13018  0034B2  6F4F               	movwf	(_USB1msTickCount+2)& (0+255),b
 13019  0034B4  0E00               	movlw	0
 13020  0034B6  6F50               	movwf	(_USB1msTickCount+3)& (0+255),b
 13021                           
 13022                           ; BSR set to: 1
 13023                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13024  0034B8  0E00               	movlw	0
 13025  0034BA  0100               	movlb	0	; () banked
 13026  0034BC  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13030  0034BE  0E00               	movlw	0
 13031  0034C0  6E5F               	movwf	_USBDeviceState,c
 13032                           
 13033                           ; BSR set to: 0
 13034  0034C2  0012               	return		;funcret
 13035  0034C4                     __end_of_USBDeviceInit:
 13036                           	opt stack 0
 13037                           tblptru	equ	0xFF8
 13038                           tblptrh	equ	0xFF7
 13039                           tblptrl	equ	0xFF6
 13040                           tablat	equ	0xFF5
 13041                           prodh	equ	0xFF4
 13042                           prodl	equ	0xFF3
 13043                           intcon	equ	0xFF2
 13044                           intcon2	equ	0xFF1
 13045                           intcon3	equ	0xFF0
 13046                           postinc0	equ	0xFEE
 13047                           wreg	equ	0xFE8
 13048                           indf1	equ	0xFE7
 13049                           postdec1	equ	0xFE5
 13050                           plusw1	equ	0xFE3
 13051                           fsr1h	equ	0xFE2
 13052                           fsr1l	equ	0xFE1
 13053                           indf2	equ	0xFDF
 13054                           postinc2	equ	0xFDE
 13055                           postdec2	equ	0xFDD
 13056                           plusw2	equ	0xFDB
 13057                           fsr2h	equ	0xFDA
 13058                           fsr2l	equ	0xFD9
 13059                           status	equ	0xFD8
 13060                           
 13061 ;; *************** function _USBCtrlEPService *****************
 13062 ;; Defined at:
 13063 ;;		line 2374 in file "usb_device.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;		None
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;		None
 13068 ;; Return value:  Size  Location     Type
 13069 ;;                  1    wreg      void 
 13070 ;; Registers used:
 13071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13072 ;; Tracked objects:
 13073 ;;		On entry : 0/0
 13074 ;;		On exit  : 0/0
 13075 ;;		Unchanged: 0/0
 13076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13079 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13081 ;;Total ram usage:        2 bytes
 13082 ;; Hardware stack levels used:    1
 13083 ;; Hardware stack levels required when called:    7
 13084 ;; This function calls:
 13085 ;;		_USBCtrlTrfInHandler
 13086 ;;		_USBCtrlTrfOutHandler
 13087 ;;		_USBCtrlTrfSetupHandler
 13088 ;;		_memcpy
 13089 ;; This function is called by:
 13090 ;;		_USBDeviceTasks
 13091 ;; This function uses a non-reentrant model
 13092 ;;
 13093                           
 13094                           	psect	text65
 13095  00504A                     __ptext65:
 13096                           	opt stack 0
 13097  00504A                     _USBCtrlEPService:
 13098                           	opt stack 22
 13099                           
 13100                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;incstack = 0
 13104  00504A  0E2D               	movlw	45
 13105  00504C  0100               	movlb	0	; () banked
 13106  00504E  6FA7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13110  005050  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13111  005054  0EFD               	movlw	253
 13112  005056  161E               	andwf	??_USBCtrlEPService,f,c
 13113  005058  A4D8               	btfss	status,2,c
 13114  00505A  D044               	goto	l309
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13118  00505C  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13119  005060  90D8               	bcf	status,0,c
 13120  005062  321E               	rrcf	??_USBCtrlEPService,f,c
 13121  005064  0E3F               	movlw	63
 13122  005066  161E               	andwf	??_USBCtrlEPService,f,c
 13123  005068  501E               	movf	??_USBCtrlEPService,w,c
 13124  00506A  0D04               	mullw	4
 13125  00506C  0E00               	movlw	0
 13126  00506E  24F3               	addwf	prodl,w,c
 13127  005070  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13128  005072  0E0D               	movlw	13
 13129  005074  20F4               	addwfc	prodh,w,c
 13130  005076  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13134  005078  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13135  00507C  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13139  005080  0E04               	movlw	4
 13140  005082  1990               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13141  005084  6F90               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13142  005086  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13143  005088  6F91               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13147  00508A  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13148  00508E  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13149  005092  30DF               	rrcf	223,w,c
 13150  005094  32E8               	rrcf	wreg,f,c
 13151  005096  0B0F               	andlw	15
 13152  005098  0A0D               	xorlw	13
 13153  00509A  A4D8               	btfss	status,2,c
 13154  00509C  D020               	goto	l310
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13158  00509E  0E30               	movlw	48
 13159  0050A0  6E01               	movwf	memcpy@d1,c
 13160  0050A2  0E0D               	movlw	13
 13161  0050A4  6E02               	movwf	memcpy@d1+1,c
 13162  0050A6  EE20 F002          	lfsr	2,2
 13163  0050AA  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13164  0050AC  26D9               	addwf	fsr2l,f,c
 13165  0050AE  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13166  0050B0  22DA               	addwfc	fsr2h,f,c
 13167  0050B2  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13168  0050B6  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13169  0050BA  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13170  0050BE  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13171  0050C2  5003               	movf	memcpy@s1,w,c
 13172  0050C4  1004               	iorwf	memcpy@s1+1,w,c
 13173  0050C6  A4D8               	btfss	status,2,c
 13174  0050C8  0E20               	movlw	32
 13175  0050CA  6E05               	movwf	memcpy@s1+2,c
 13176  0050CC  0E00               	movlw	0
 13177  0050CE  6E07               	movwf	memcpy@n+1,c
 13178  0050D0  0E08               	movlw	8
 13179  0050D2  6E06               	movwf	memcpy@n,c
 13180  0050D4  EC1C  F030         	call	_memcpy	;wreg free
 13181                           
 13182                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13183  0050D8  EC3C  F02C         	call	_USBCtrlTrfSetupHandler	;wreg free
 13184                           
 13185                           ;usb_device.c: 2411: }
 13186  0050DC  0012               	return	
 13187  0050DE                     l310:
 13188                           
 13189                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13190  0050DE  EC45  F031         	call	_USBCtrlTrfOutHandler	;wreg free
 13191                           
 13192                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13193  0050E2  0012               	return	
 13194  0050E4                     l309:
 13195                           
 13196                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13197  0050E4  0100               	movlb	0	; () banked
 13198  0050E6  51B4               	movf	_USTATcopy& (0+255),w,b
 13199  0050E8  0BFD               	andlw	253
 13200  0050EA  0A04               	xorlw	4
 13201  0050EC  A4D8               	btfss	status,2,c
 13202  0050EE  0012               	return	
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13206  0050F0  ECF0  F025         	call	_USBCtrlTrfInHandler	;wreg free
 13207  0050F4  0012               	return	
 13208  0050F6                     __end_of_USBCtrlEPService:
 13209                           	opt stack 0
 13210                           tblptru	equ	0xFF8
 13211                           tblptrh	equ	0xFF7
 13212                           tblptrl	equ	0xFF6
 13213                           tablat	equ	0xFF5
 13214                           prodh	equ	0xFF4
 13215                           prodl	equ	0xFF3
 13216                           intcon	equ	0xFF2
 13217                           intcon2	equ	0xFF1
 13218                           intcon3	equ	0xFF0
 13219                           postinc0	equ	0xFEE
 13220                           wreg	equ	0xFE8
 13221                           indf1	equ	0xFE7
 13222                           postdec1	equ	0xFE5
 13223                           plusw1	equ	0xFE3
 13224                           fsr1h	equ	0xFE2
 13225                           fsr1l	equ	0xFE1
 13226                           indf2	equ	0xFDF
 13227                           postinc2	equ	0xFDE
 13228                           postdec2	equ	0xFDD
 13229                           plusw2	equ	0xFDB
 13230                           fsr2h	equ	0xFDA
 13231                           fsr2l	equ	0xFD9
 13232                           status	equ	0xFD8
 13233                           
 13234 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13235 ;; Defined at:
 13236 ;;		line 2467 in file "usb_device.c"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;		None
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;		None
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13254 ;;Total ram usage:        0 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:    6
 13257 ;; This function calls:
 13258 ;;		_USBCheckStdRequest
 13259 ;;		_USBCtrlEPServiceComplete
 13260 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13261 ;; This function is called by:
 13262 ;;		_USBCtrlEPService
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	text66
 13267  005878                     __ptext66:
 13268                           	opt stack 0
 13269  005878                     _USBCtrlTrfSetupHandler:
 13270                           	opt stack 22
 13271                           
 13272                           ;usb_device.c: 2472: shortPacketStatus = 0;
 13273                           
 13274                           ;incstack = 0
 13275  005878  0E00               	movlw	0
 13276  00587A  0100               	movlb	0	; () banked
 13277  00587C  6FAD               	movwf	_shortPacketStatus& (0+255),b
 13278                           
 13279                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 13280  00587E  0E00               	movlw	0
 13281  005880  6FA6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 13282                           
 13283                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 13284  005882  0E00               	movlw	0
 13285  005884  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13286                           
 13287                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 13288  005886  0E00               	movlw	0
 13289  005888  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13290                           
 13291                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 13292  00588A  0E00               	movlw	0
 13293  00588C  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13294                           
 13295                           ;usb_device.c: 2477: controlTransferState = 0;
 13296  00588E  0E00               	movlw	0
 13297  005890  6FAC               	movwf	_controlTransferState& (0+255),b
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13301  005892  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13302  005896  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13303  00589A  0E7F               	movlw	127
 13304  00589C  16DF               	andwf	indf2,f,c
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13308  00589E  0E04               	movlw	4
 13309  0058A0  1972               	xorwf	_pBDTEntryIn& (0+255),w,b
 13310  0058A2  6F72               	movwf	_pBDTEntryIn& (0+255),b
 13311  0058A4  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13312  0058A6  6F73               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13316  0058A8  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13317  0058AC  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13318  0058B0  0E7F               	movlw	127
 13319  0058B2  16DF               	andwf	indf2,f,c
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13323  0058B4  0E04               	movlw	4
 13324  0058B6  1972               	xorwf	_pBDTEntryIn& (0+255),w,b
 13325  0058B8  6F72               	movwf	_pBDTEntryIn& (0+255),b
 13326  0058BA  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13327  0058BC  6F73               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13331  0058BE  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13332  0058C2  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13333  0058C6  0E7F               	movlw	127
 13334  0058C8  16DF               	andwf	indf2,f,c
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 13338  0058CA  0E00               	movlw	0
 13339  0058CC  6F6F               	movwf	(_inPipes+3)& (0+255),b
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 13343  0058CE  0E00               	movlw	0
 13344  0058D0  6F71               	movwf	(_inPipes+5)& (0+255),b
 13345  0058D2  0E00               	movlw	0
 13346  0058D4  6F70               	movwf	(_inPipes+4)& (0+255),b
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 13350  0058D6  0E00               	movlw	0
 13351  0058D8  0101               	movlb	1	; () banked
 13352  0058DA  6F34               	movwf	(_outPipes+3)& (0+255),b
 13353                           
 13354                           ; BSR set to: 1
 13355                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 13356  0058DC  0E00               	movlw	0
 13357  0058DE  6F36               	movwf	(_outPipes+5)& (0+255),b
 13358  0058E0  0E00               	movlw	0
 13359  0058E2  6F35               	movwf	(_outPipes+4)& (0+255),b
 13360                           
 13361                           ; BSR set to: 1
 13362                           ;usb_device.c: 2502: USBCheckStdRequest();
 13363  0058E4  ECC2  F020         	call	_USBCheckStdRequest	;wreg free
 13364                           
 13365                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13366  0058E8  0E00               	movlw	0
 13367  0058EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13368  0058EC  0E03               	movlw	3
 13369  0058EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13370  0058F0  0E00               	movlw	0
 13371  0058F2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13372  0058F4  0E00               	movlw	0
 13373  0058F6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13374  0058F8  0E00               	movlw	0
 13375  0058FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13376  0058FC  0E00               	movlw	0
 13377  0058FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13378  005900  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13379                           
 13380                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 13381  005904  ECC5  F01F         	call	_USBCtrlEPServiceComplete	;wreg free
 13382  005908  0012               	return		;funcret
 13383  00590A                     __end_of_USBCtrlTrfSetupHandler:
 13384                           	opt stack 0
 13385                           tblptru	equ	0xFF8
 13386                           tblptrh	equ	0xFF7
 13387                           tblptrl	equ	0xFF6
 13388                           tablat	equ	0xFF5
 13389                           prodh	equ	0xFF4
 13390                           prodl	equ	0xFF3
 13391                           intcon	equ	0xFF2
 13392                           intcon2	equ	0xFF1
 13393                           intcon3	equ	0xFF0
 13394                           postinc0	equ	0xFEE
 13395                           wreg	equ	0xFE8
 13396                           indf1	equ	0xFE7
 13397                           postdec1	equ	0xFE5
 13398                           plusw1	equ	0xFE3
 13399                           fsr1h	equ	0xFE2
 13400                           fsr1l	equ	0xFE1
 13401                           indf2	equ	0xFDF
 13402                           postinc2	equ	0xFDE
 13403                           postdec2	equ	0xFDD
 13404                           plusw2	equ	0xFDB
 13405                           fsr2h	equ	0xFDA
 13406                           fsr2l	equ	0xFD9
 13407                           status	equ	0xFD8
 13408                           
 13409 ;; *************** function _USBCtrlEPServiceComplete *****************
 13410 ;; Defined at:
 13411 ;;		line 1618 in file "usb_device.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13429 ;;Total ram usage:        0 bytes
 13430 ;; Hardware stack levels used:    1
 13431 ;; Hardware stack levels required when called:    2
 13432 ;; This function calls:
 13433 ;;		_USBCtrlEPAllowDataStage
 13434 ;;		_USBCtrlEPAllowStatusStage
 13435 ;; This function is called by:
 13436 ;;		_USBCtrlTrfSetupHandler
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text67
 13441  003F8A                     __ptext67:
 13442                           	opt stack 0
 13443  003F8A                     _USBCtrlEPServiceComplete:
 13444                           	opt stack 25
 13445                           
 13446                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 13447                           
 13448                           ;incstack = 0
 13449  003F8A  9865               	bcf	3941,4,c	;volatile
 13450                           
 13451                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 13452  003F8C  0100               	movlb	0	; () banked
 13453  003F8E  BF6F               	btfsc	(_inPipes+3)& (0+255),7,b
 13454  003F90  D03C               	goto	l219
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 13458  003F92  0101               	movlb	1	; () banked
 13459  003F94  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 13460  003F96  D00D               	goto	l220
 13461                           
 13462                           ; BSR set to: 1
 13463                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 13464  003F98  0E02               	movlw	2
 13465  003F9A  0100               	movlb	0	; () banked
 13466  003F9C  6FAC               	movwf	_controlTransferState& (0+255),b
 13467                           
 13468                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 13469  003F9E  51A2               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 13470  003FA0  B4D8               	btfsc	status,2,c
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 13474  003FA2  EC0B  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 13475                           
 13476                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 13477  003FA6  0E00               	movlw	0
 13478  003FA8  0100               	movlb	0	; () banked
 13479  003FAA  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 13483  003FAC  0E00               	movlw	0
 13484  003FAE  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13485                           
 13486                           ;usb_device.c: 1654: }
 13487  003FB0  0012               	return	
 13488  003FB2                     l220:
 13489                           
 13490                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 13491                           
 13492                           ; BSR set to: 0
 13493  003FB2  0100               	movlb	0	; () banked
 13494  003FB4  EE20 F001          	lfsr	2,1
 13495  003FB8  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13496  003FBA  26D9               	addwf	fsr2l,f,c
 13497  003FBC  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13498  003FBE  22DA               	addwfc	fsr2h,f,c
 13499  003FC0  0E08               	movlw	8
 13500  003FC2  6EDF               	movwf	indf2,c
 13501                           
 13502                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13503  003FC4  EE20 F002          	lfsr	2,2
 13504  003FC8  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13505  003FCA  26D9               	addwf	fsr2l,f,c
 13506  003FCC  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13507  003FCE  22DA               	addwfc	fsr2h,f,c
 13508  003FD0  0E30               	movlw	48
 13509  003FD2  6EDE               	movwf	postinc2,c
 13510  003FD4  0E0D               	movlw	13
 13511  003FD6  6EDD               	movwf	postdec2,c
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13515  003FD8  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13516  003FDC  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13517  003FE0  0E0C               	movlw	12
 13518  003FE2  6EDF               	movwf	indf2,c
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13522  003FE4  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13523  003FE8  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13524  003FEC  0E00               	movlw	0
 13525  003FEE  8EDB               	bsf	plusw2,7,c
 13526                           
 13527                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 13528  003FF0  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13529  003FF4  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13530  003FF8  0E04               	movlw	4
 13531  003FFA  6EDF               	movwf	indf2,c
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13535  003FFC  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13536  004000  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13537  004004  0E00               	movlw	0
 13538  004006  8EDB               	bsf	plusw2,7,c
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13542  004008  0012               	return	
 13543  00400A                     l219:
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 13547  00400A  010D               	movlb	13	; () banked
 13548  00400C  AF30               	btfss	48,7,b	;volatile
 13549  00400E  D012               	goto	l224
 13550                           
 13551                           ; BSR set to: 13
 13552                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 13553  004010  0E01               	movlw	1
 13554  004012  0100               	movlb	0	; () banked
 13555  004014  6FAC               	movwf	_controlTransferState& (0+255),b
 13556                           
 13557                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 13558  004016  51A3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 13559  004018  B4D8               	btfsc	status,2,c
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 13563  00401A  EC0B  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 13564                           
 13565                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 13566  00401E  0E00               	movlw	0
 13567  004020  0100               	movlb	0	; () banked
 13568  004022  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 13572  004024  0E00               	movlw	0
 13573  004026  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 13577  004028  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13578  00402A  A4D8               	btfss	status,2,c
 13579  00402C  0012               	return	
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 13583  00402E  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13584                           
 13585                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 13586  004032  0012               	return	
 13587  004034                     l224:
 13588                           
 13589                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 13590  004034  0E02               	movlw	2
 13591  004036  0100               	movlb	0	; () banked
 13592  004038  6FAC               	movwf	_controlTransferState& (0+255),b
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13596  00403A  EE20 F001          	lfsr	2,1
 13597  00403E  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13598  004040  26D9               	addwf	fsr2l,f,c
 13599  004042  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13600  004044  22DA               	addwfc	fsr2h,f,c
 13601  004046  0E08               	movlw	8
 13602  004048  6EDF               	movwf	indf2,c
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13606  00404A  EE20 F002          	lfsr	2,2
 13607  00404E  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13608  004050  26D9               	addwf	fsr2l,f,c
 13609  004052  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13610  004054  22DA               	addwfc	fsr2h,f,c
 13611  004056  0E30               	movlw	48
 13612  004058  6EDE               	movwf	postinc2,c
 13613  00405A  0E0D               	movlw	13
 13614  00405C  6EDD               	movwf	postdec2,c
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13618  00405E  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13619  004062  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13620  004066  0E04               	movlw	4
 13621  004068  6EDF               	movwf	indf2,c
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13625  00406A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13626  00406E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13627  004072  0E00               	movlw	0
 13628  004074  8EDB               	bsf	plusw2,7,c
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13632  004076  0E00               	movlw	0
 13633  004078  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 13637  00407A  0E00               	movlw	0
 13638  00407C  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 13642  00407E  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13643  004080  A4D8               	btfss	status,2,c
 13644  004082  0012               	return	
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 13648  004084  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13649  004088  0012               	return	
 13650  00408A                     __end_of_USBCtrlEPServiceComplete:
 13651                           	opt stack 0
 13652                           tblptru	equ	0xFF8
 13653                           tblptrh	equ	0xFF7
 13654                           tblptrl	equ	0xFF6
 13655                           tablat	equ	0xFF5
 13656                           prodh	equ	0xFF4
 13657                           prodl	equ	0xFF3
 13658                           intcon	equ	0xFF2
 13659                           intcon2	equ	0xFF1
 13660                           intcon3	equ	0xFF0
 13661                           postinc0	equ	0xFEE
 13662                           wreg	equ	0xFE8
 13663                           indf1	equ	0xFE7
 13664                           postdec1	equ	0xFE5
 13665                           plusw1	equ	0xFE3
 13666                           fsr1h	equ	0xFE2
 13667                           fsr1l	equ	0xFE1
 13668                           indf2	equ	0xFDF
 13669                           postinc2	equ	0xFDE
 13670                           postdec2	equ	0xFDD
 13671                           plusw2	equ	0xFDB
 13672                           fsr2h	equ	0xFDA
 13673                           fsr2l	equ	0xFD9
 13674                           status	equ	0xFD8
 13675                           
 13676 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13677 ;; Defined at:
 13678 ;;		line 1490 in file "usb_device.c"
 13679 ;; Parameters:    Size  Location     Type
 13680 ;;		None
 13681 ;; Auto vars:     Size  Location     Type
 13682 ;;		None
 13683 ;; Return value:  Size  Location     Type
 13684 ;;                  1    wreg      void 
 13685 ;; Registers used:
 13686 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13687 ;; Tracked objects:
 13688 ;;		On entry : 0/0
 13689 ;;		On exit  : 0/0
 13690 ;;		Unchanged: 0/0
 13691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13696 ;;Total ram usage:        0 bytes
 13697 ;; Hardware stack levels used:    1
 13698 ;; Hardware stack levels required when called:    1
 13699 ;; This function calls:
 13700 ;;		_USBCtrlTrfTxService
 13701 ;; This function is called by:
 13702 ;;		_USBCtrlEPServiceComplete
 13703 ;; This function uses a non-reentrant model
 13704 ;;
 13705                           
 13706                           	psect	text68
 13707  005616                     __ptext68:
 13708                           	opt stack 0
 13709  005616                     _USBCtrlEPAllowDataStage:
 13710                           	opt stack 25
 13711                           
 13712                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 13713                           
 13714                           ;incstack = 0
 13715  005616  0E00               	movlw	0
 13716  005618  0100               	movlb	0	; () banked
 13717  00561A  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13718                           
 13719                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 13720  00561C  0E00               	movlw	0
 13721  00561E  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;usb_device.c: 1495: if(controlTransferState == 2)
 13725  005620  0E02               	movlw	2
 13726  005622  19AC               	xorwf	_controlTransferState& (0+255),w,b
 13727  005624  A4D8               	btfss	status,2,c
 13728  005626  D01F               	goto	l208
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 13732  005628  EE20 F001          	lfsr	2,1
 13733  00562C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13734  00562E  26D9               	addwf	fsr2l,f,c
 13735  005630  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13736  005632  22DA               	addwfc	fsr2h,f,c
 13737  005634  0E08               	movlw	8
 13738  005636  6EDF               	movwf	indf2,c
 13739                           
 13740                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13741  005638  EE20 F002          	lfsr	2,2
 13742  00563C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13743  00563E  26D9               	addwf	fsr2l,f,c
 13744  005640  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13745  005642  22DA               	addwfc	fsr2h,f,c
 13746  005644  0E38               	movlw	56
 13747  005646  6EDE               	movwf	postinc2,c
 13748  005648  0E0D               	movlw	13
 13749  00564A  6EDD               	movwf	postdec2,c
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13753  00564C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13754  005650  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13755  005654  0E48               	movlw	72
 13756  005656  6EDF               	movwf	indf2,c
 13757                           
 13758                           ; BSR set to: 0
 13759                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13760  005658  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13761  00565C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13762  005660  0E00               	movlw	0
 13763  005662  8EDB               	bsf	plusw2,7,c
 13764                           
 13765                           ;usb_device.c: 1502: }
 13766  005664  0012               	return	
 13767  005666                     l208:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 13771                           
 13772                           ; BSR set to: 0
 13773  005666  5170               	movf	(_inPipes+4)& (0+255),w,b
 13774  005668  010D               	movlb	13	; () banked
 13775  00566A  5D36               	subwf	54,w,b	;volatile
 13776  00566C  0100               	movlb	0	; () banked
 13777  00566E  5171               	movf	(_inPipes+5)& (0+255),w,b
 13778  005670  010D               	movlb	13	; () banked
 13779  005672  5937               	subwfb	55,w,b	;volatile
 13780  005674  B0D8               	btfsc	status,0,c
 13781  005676  D004               	goto	l210
 13782                           
 13783                           ; BSR set to: 13
 13784                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 13785  005678  CD36 F070          	movff	3382,_inPipes+4	;volatile
 13786  00567C  CD37 F071          	movff	3383,_inPipes+5	;volatile
 13787  005680                     l210:
 13788                           
 13789                           ; BSR set to: 13
 13790                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 13791                           
 13792                           ; BSR set to: 13
 13793  005680  EC1F  F025         	call	_USBCtrlTrfTxService	;wreg free
 13794                           
 13795                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13796  005684  0100               	movlb	0	; () banked
 13797  005686  EE20 F002          	lfsr	2,2
 13798  00568A  5172               	movf	_pBDTEntryIn& (0+255),w,b
 13799  00568C  26D9               	addwf	fsr2l,f,c
 13800  00568E  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13801  005690  22DA               	addwfc	fsr2h,f,c
 13802  005692  0E38               	movlw	56
 13803  005694  6EDE               	movwf	postinc2,c
 13804  005696  0E0D               	movlw	13
 13805  005698  6EDD               	movwf	postdec2,c
 13806                           
 13807                           ; BSR set to: 0
 13808                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13809  00569A  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13810  00569E  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13811  0056A2  0E48               	movlw	72
 13812  0056A4  6EDF               	movwf	indf2,c
 13813                           
 13814                           ; BSR set to: 0
 13815                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13816  0056A6  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 13817  0056AA  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13818  0056AE  0E00               	movlw	0
 13819  0056B0  8EDB               	bsf	plusw2,7,c
 13820  0056B2  0012               	return	
 13821  0056B4                     __end_of_USBCtrlEPAllowDataStage:
 13822                           	opt stack 0
 13823                           tblptru	equ	0xFF8
 13824                           tblptrh	equ	0xFF7
 13825                           tblptrl	equ	0xFF6
 13826                           tablat	equ	0xFF5
 13827                           prodh	equ	0xFF4
 13828                           prodl	equ	0xFF3
 13829                           intcon	equ	0xFF2
 13830                           intcon2	equ	0xFF1
 13831                           intcon3	equ	0xFF0
 13832                           postinc0	equ	0xFEE
 13833                           wreg	equ	0xFE8
 13834                           indf1	equ	0xFE7
 13835                           postdec1	equ	0xFE5
 13836                           plusw1	equ	0xFE3
 13837                           fsr1h	equ	0xFE2
 13838                           fsr1l	equ	0xFE1
 13839                           indf2	equ	0xFDF
 13840                           postinc2	equ	0xFDE
 13841                           postdec2	equ	0xFDD
 13842                           plusw2	equ	0xFDB
 13843                           fsr2h	equ	0xFDA
 13844                           fsr2l	equ	0xFD9
 13845                           status	equ	0xFD8
 13846                           
 13847 ;; *************** function _USBCheckStdRequest *****************
 13848 ;; Defined at:
 13849 ;;		line 2688 in file "usb_device.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13867 ;;Total ram usage:        0 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:    5
 13870 ;; This function calls:
 13871 ;;		_USBStdFeatureReqHandler
 13872 ;;		_USBStdGetDscHandler
 13873 ;;		_USBStdGetStatusHandler
 13874 ;;		_USBStdSetCfgHandler
 13875 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13876 ;; This function is called by:
 13877 ;;		_USBCtrlTrfSetupHandler
 13878 ;; This function uses a non-reentrant model
 13879 ;;
 13880                           
 13881                           	psect	text69
 13882  004184                     __ptext69:
 13883                           	opt stack 0
 13884  004184                     _USBCheckStdRequest:
 13885                           	opt stack 22
 13886                           
 13887                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;incstack = 0
 13891  004184  010D               	movlb	13	; () banked
 13892  004186  3930               	swapf	48,w,b	;volatile
 13893  004188  32E8               	rrcf	wreg,f,c
 13894  00418A  0B03               	andlw	3
 13895  00418C  0900               	iorlw	0
 13896  00418E  A4D8               	btfss	status,2,c
 13897  004190  0012               	return	
 13898  004192  D047               	goto	l343
 13899  004194                     l344:
 13900                           
 13901                           ; BSR set to: 13
 13902                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 13903  004194  0100               	movlb	0	; () banked
 13904  004196  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 13908  004198  0E08               	movlw	8
 13909  00419A  6E5F               	movwf	_USBDeviceState,c
 13910                           
 13911                           ;usb_device.c: 2698: break;
 13912  00419C  0012               	return	
 13913  00419E                     
 13914                           ;usb_device.c: 2700: USBStdGetDscHandler();
 13915                           
 13916                           ; BSR set to: 0
 13917  00419E  EC62  F01A         	call	_USBStdGetDscHandler	;wreg free
 13918                           
 13919                           ;usb_device.c: 2701: break;
 13920  0041A2  0012               	return	
 13921  0041A4                     
 13922                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 13923  0041A4  ECF6  F022         	call	_USBStdSetCfgHandler	;wreg free
 13924                           
 13925                           ;usb_device.c: 2704: break;
 13926  0041A8  0012               	return	
 13927  0041AA                     
 13928                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13929  0041AA  0EB5               	movlw	low _USBActiveConfiguration
 13930  0041AC  0100               	movlb	0	; () banked
 13931  0041AE  6F6C               	movwf	_inPipes& (0+255),b
 13932  0041B0  0E00               	movlw	high _USBActiveConfiguration
 13933  0041B2  6F6D               	movwf	(_inPipes+1)& (0+255),b
 13934                           
 13935                           ; BSR set to: 0
 13936                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13937  0041B4  816F               	bsf	(_inPipes+3)& (0+255),0,b
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13941  0041B6  0E01               	movlw	1
 13942  0041B8  6F70               	movwf	(_inPipes+4)& (0+255),b
 13943                           
 13944                           ; BSR set to: 0
 13945                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13946  0041BA  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 13947                           
 13948                           ;usb_device.c: 2710: break;
 13949  0041BC  0012               	return	
 13950  0041BE                     
 13951                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13952                           
 13953                           ; BSR set to: 0
 13954  0041BE  EC7B  F028         	call	_USBStdGetStatusHandler	;wreg free
 13955                           
 13956                           ;usb_device.c: 2713: break;
 13957  0041C2  0012               	return	
 13958  0041C4                     
 13959                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13960  0041C4  EC6B  F00A         	call	_USBStdFeatureReqHandler	;wreg free
 13961                           
 13962                           ;usb_device.c: 2717: break;
 13963  0041C8  0012               	return	
 13964  0041CA                     
 13965                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13966  0041CA  010D               	movlb	13	; () banked
 13967  0041CC  5134               	movf	52,w,b	;volatile
 13968  0041CE  0D01               	mullw	1
 13969  0041D0  0EE2               	movlw	low _USBAlternateInterface
 13970  0041D2  24F3               	addwf	prodl,w,c
 13971  0041D4  0100               	movlb	0	; () banked
 13972  0041D6  6F6C               	movwf	_inPipes& (0+255),b
 13973  0041D8  0E01               	movlw	high _USBAlternateInterface
 13974  0041DA  20F4               	addwfc	prodh,w,c
 13975  0041DC  6F6D               	movwf	(_inPipes+1)& (0+255),b
 13976                           
 13977                           ; BSR set to: 0
 13978                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13979  0041DE  816F               	bsf	(_inPipes+3)& (0+255),0,b
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13983  0041E0  0E01               	movlw	1
 13984  0041E2  6F70               	movwf	(_inPipes+4)& (0+255),b
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13988  0041E4  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 13989                           
 13990                           ;usb_device.c: 2723: break;
 13991  0041E6  0012               	return	
 13992  0041E8                     l353:
 13993                           
 13994                           ; BSR set to: 13
 13995                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13996  0041E8  0100               	movlb	0	; () banked
 13997  0041EA  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14001  0041EC  010D               	movlb	13	; () banked
 14002  0041EE  5134               	movf	52,w,b	;volatile
 14003  0041F0  0D01               	mullw	1
 14004  0041F2  0EE2               	movlw	low _USBAlternateInterface
 14005  0041F4  24F3               	addwf	prodl,w,c
 14006  0041F6  6ED9               	movwf	fsr2l,c
 14007  0041F8  0E01               	movlw	high _USBAlternateInterface
 14008  0041FA  20F4               	addwfc	prodh,w,c
 14009  0041FC  6EDA               	movwf	fsr2h,c
 14010  0041FE  CD32 FFDF          	movff	3378,indf2	;volatile
 14011                           
 14012                           ;usb_device.c: 2727: break;
 14013  004202  0012               	return	
 14014  004204                     
 14015                           ; BSR set to: 13
 14016                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14017                           
 14018                           ; BSR set to: 13
 14019  004204  0E00               	movlw	0
 14020  004206  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14021  004208  0E02               	movlw	2
 14022  00420A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14023  00420C  0E00               	movlw	0
 14024  00420E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14025  004210  0E00               	movlw	0
 14026  004212  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14027  004214  0E00               	movlw	0
 14028  004216  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14029  004218  0E00               	movlw	0
 14030  00421A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14031  00421C  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14032                           
 14033                           ;usb_device.c: 2734: }
 14034                           
 14035                           ;usb_device.c: 2733: break;
 14036                           
 14037                           ;usb_device.c: 2732: default:
 14038                           
 14039                           ;usb_device.c: 2731: case 12:
 14040                           
 14041                           ;usb_device.c: 2730: break;
 14042  004220  0012               	return	
 14043  004222                     l343:
 14044  004222  010D               	movlb	13	; () banked
 14045  004224  5131               	movf	49,w,b	;volatile
 14046                           
 14047                           ; Switch size 1, requested type "space"
 14048                           ; Number of cases is 11, Range of values is 0 to 12
 14049                           ; switch strategies available:
 14050                           ; Name         Instructions Cycles
 14051                           ; simple_byte           34    18 (average)
 14052                           ;	Chosen strategy is simple_byte
 14053  004226  0A00               	xorlw	0	; case 0
 14054  004228  B4D8               	btfsc	status,2,c
 14055  00422A  D7C9               	goto	l349
 14056  00422C  0A01               	xorlw	1	; case 1
 14057  00422E  B4D8               	btfsc	status,2,c
 14058  004230  D7C9               	goto	l350
 14059  004232  0A02               	xorlw	2	; case 3
 14060  004234  B4D8               	btfsc	status,2,c
 14061  004236  D7C6               	goto	l350
 14062  004238  0A06               	xorlw	6	; case 5
 14063  00423A  B4D8               	btfsc	status,2,c
 14064  00423C  D7AB               	goto	l344
 14065  00423E  0A03               	xorlw	3	; case 6
 14066  004240  B4D8               	btfsc	status,2,c
 14067  004242  D7AD               	goto	l346
 14068  004244  0A01               	xorlw	1	; case 7
 14069  004246  B4D8               	btfsc	status,2,c
 14070  004248  D7DD               	goto	l354
 14071  00424A  0A0F               	xorlw	15	; case 8
 14072  00424C  B4D8               	btfsc	status,2,c
 14073  00424E  D7AD               	goto	l348
 14074  004250  0A01               	xorlw	1	; case 9
 14075  004252  B4D8               	btfsc	status,2,c
 14076  004254  D7A7               	goto	l347
 14077  004256  0A03               	xorlw	3	; case 10
 14078  004258  B4D8               	btfsc	status,2,c
 14079  00425A  D7B7               	goto	l352
 14080  00425C  0A01               	xorlw	1	; case 11
 14081  00425E  B4D8               	btfsc	status,2,c
 14082  004260  D7C3               	goto	l353
 14083  004262  0A07               	xorlw	7	; case 12
 14084  004264  0012               	return	
 14085  004266                     __end_of_USBCheckStdRequest:
 14086                           	opt stack 0
 14087                           tblptru	equ	0xFF8
 14088                           tblptrh	equ	0xFF7
 14089                           tblptrl	equ	0xFF6
 14090                           tablat	equ	0xFF5
 14091                           prodh	equ	0xFF4
 14092                           prodl	equ	0xFF3
 14093                           intcon	equ	0xFF2
 14094                           intcon2	equ	0xFF1
 14095                           intcon3	equ	0xFF0
 14096                           postinc0	equ	0xFEE
 14097                           wreg	equ	0xFE8
 14098                           indf1	equ	0xFE7
 14099                           postdec1	equ	0xFE5
 14100                           plusw1	equ	0xFE3
 14101                           fsr1h	equ	0xFE2
 14102                           fsr1l	equ	0xFE1
 14103                           indf2	equ	0xFDF
 14104                           postinc2	equ	0xFDE
 14105                           postdec2	equ	0xFDD
 14106                           plusw2	equ	0xFDB
 14107                           fsr2h	equ	0xFDA
 14108                           fsr2l	equ	0xFD9
 14109                           status	equ	0xFD8
 14110                           
 14111 ;; *************** function _USBStdSetCfgHandler *****************
 14112 ;; Defined at:
 14113 ;;		line 1970 in file "usb_device.c"
 14114 ;; Parameters:    Size  Location     Type
 14115 ;;		None
 14116 ;; Auto vars:     Size  Location     Type
 14117 ;;  i               1   23[COMRAM] unsigned char 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  1    wreg      void 
 14120 ;; Registers used:
 14121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 0/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;Total ram usage:        1 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    4
 14134 ;; This function calls:
 14135 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14136 ;;		_memset
 14137 ;; This function is called by:
 14138 ;;		_USBCheckStdRequest
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           	psect	text70
 14143  0045EC                     __ptext70:
 14144                           	opt stack 0
 14145  0045EC                     _USBStdSetCfgHandler:
 14146                           	opt stack 22
 14147                           
 14148                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14149                           
 14150                           ;incstack = 0
 14151  0045EC  0100               	movlb	0	; () banked
 14152  0045EE  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 14153                           
 14154                           ; BSR set to: 0
 14155                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14156  0045F0  0E27               	movlw	39
 14157  0045F2  6E01               	movwf	memset@p1,c
 14158  0045F4  0E0F               	movlw	15
 14159  0045F6  6E02               	movwf	memset@p1+1,c
 14160  0045F8  0E00               	movlw	0
 14161  0045FA  6E04               	movwf	memset@c+1,c
 14162  0045FC  0E00               	movlw	0
 14163  0045FE  6E03               	movwf	memset@c,c
 14164  004600  0E00               	movlw	0
 14165  004602  6E06               	movwf	memset@n+1,c
 14166  004604  0E02               	movlw	2
 14167  004606  6E05               	movwf	memset@n,c
 14168  004608  ECE9  F036         	call	_memset	;wreg free
 14169                           
 14170                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14171  00460C  0E00               	movlw	0
 14172  00460E  6E01               	movwf	memset@p1,c
 14173  004610  0E0D               	movlw	13
 14174  004612  6E02               	movwf	memset@p1+1,c
 14175  004614  0E00               	movlw	0
 14176  004616  6E04               	movwf	memset@c+1,c
 14177  004618  0E00               	movlw	0
 14178  00461A  6E03               	movwf	memset@c,c
 14179  00461C  0E00               	movlw	0
 14180  00461E  6E06               	movwf	memset@n+1,c
 14181  004620  0E30               	movlw	48
 14182  004622  6E05               	movwf	memset@n,c
 14183  004624  ECE9  F036         	call	_memset	;wreg free
 14184                           
 14185                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14186  004628  8C65               	bsf	3941,6,c	;volatile
 14187                           
 14188                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14189  00462A  0E00               	movlw	0
 14190  00462C  6E18               	movwf	USBStdSetCfgHandler@i,c
 14191  00462E                     l11699:
 14192  00462E  0E02               	movlw	2
 14193  004630  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14194  004632  D001               	goto	l260
 14195  004634  D016               	goto	u8810
 14196  004636                     l260:
 14197                           
 14198                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14199  004636  5018               	movf	USBStdSetCfgHandler@i,w,c
 14200  004638  0D01               	mullw	1
 14201  00463A  0E5A               	movlw	low _ep_data_in
 14202  00463C  24F3               	addwf	prodl,w,c
 14203  00463E  6ED9               	movwf	fsr2l,c
 14204  004640  0E01               	movlw	high _ep_data_in
 14205  004642  20F4               	addwfc	prodh,w,c
 14206  004644  6EDA               	movwf	fsr2h,c
 14207  004646  0E00               	movlw	0
 14208  004648  6EDF               	movwf	indf2,c
 14209                           
 14210                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14211  00464A  5018               	movf	USBStdSetCfgHandler@i,w,c
 14212  00464C  0D01               	mullw	1
 14213  00464E  0E57               	movlw	low _ep_data_out
 14214  004650  24F3               	addwf	prodl,w,c
 14215  004652  6ED9               	movwf	fsr2l,c
 14216  004654  0E01               	movlw	high _ep_data_out
 14217  004656  20F4               	addwfc	prodh,w,c
 14218  004658  6EDA               	movwf	fsr2h,c
 14219  00465A  0E00               	movlw	0
 14220  00465C  6EDF               	movwf	indf2,c
 14221  00465E  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14222  004660  D7E6               	goto	l11699
 14223  004662                     u8810:
 14224                           
 14225                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14226  004662  0EE2               	movlw	low _USBAlternateInterface
 14227  004664  6E01               	movwf	memset@p1,c
 14228  004666  0E01               	movlw	high _USBAlternateInterface
 14229  004668  6E02               	movwf	memset@p1+1,c
 14230  00466A  0E00               	movlw	0
 14231  00466C  6E04               	movwf	memset@c+1,c
 14232  00466E  0E00               	movlw	0
 14233  004670  6E03               	movwf	memset@c,c
 14234  004672  0E00               	movlw	0
 14235  004674  6E06               	movwf	memset@n+1,c
 14236  004676  0E02               	movlw	2
 14237  004678  6E05               	movwf	memset@n,c
 14238  00467A  ECE9  F036         	call	_memset	;wreg free
 14239                           
 14240                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 14241  00467E  9C65               	bcf	3941,6,c	;volatile
 14242                           
 14243                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14244  004680  0E08               	movlw	8
 14245  004682  0100               	movlb	0	; () banked
 14246  004684  6F72               	movwf	_pBDTEntryIn& (0+255),b
 14247  004686  0E0D               	movlw	13
 14248  004688  6F73               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14252  00468A  0E00               	movlw	0
 14253  00468C  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 14254  00468E  0E0D               	movlw	13
 14255  004690  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 14256                           
 14257                           ; BSR set to: 0
 14258                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14259  004692  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14260  004696  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14264  00469A  CD32 F0B5          	movff	3378,_USBActiveConfiguration	;volatile
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 14268  00469E  51B5               	movf	_USBActiveConfiguration& (0+255),w,b
 14269  0046A0  A4D8               	btfss	status,2,c
 14270  0046A2  D003               	goto	l262
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 14274  0046A4  0E10               	movlw	16
 14275  0046A6  6E5F               	movwf	_USBDeviceState,c
 14276                           
 14277                           ;usb_device.c: 2015: }
 14278  0046A8  0012               	return	
 14279  0046AA                     l262:
 14280                           
 14281                           ; BSR set to: 0
 14282                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 14283                           
 14284                           ; BSR set to: 0
 14285  0046AA  0E00               	movlw	0
 14286  0046AC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14287  0046AE  0E01               	movlw	1
 14288  0046B0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14289  0046B2  0EB5               	movlw	low _USBActiveConfiguration
 14290  0046B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14291  0046B6  0E00               	movlw	high _USBActiveConfiguration
 14292  0046B8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14293  0046BA  0E00               	movlw	0
 14294  0046BC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14295  0046BE  0E01               	movlw	1
 14296  0046C0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14297  0046C2  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14298                           
 14299                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 14300  0046C6  0E20               	movlw	32
 14301  0046C8  6E5F               	movwf	_USBDeviceState,c
 14302  0046CA  0012               	return	
 14303  0046CC                     __end_of_USBStdSetCfgHandler:
 14304                           	opt stack 0
 14305                           tblptru	equ	0xFF8
 14306                           tblptrh	equ	0xFF7
 14307                           tblptrl	equ	0xFF6
 14308                           tablat	equ	0xFF5
 14309                           prodh	equ	0xFF4
 14310                           prodl	equ	0xFF3
 14311                           intcon	equ	0xFF2
 14312                           intcon2	equ	0xFF1
 14313                           intcon3	equ	0xFF0
 14314                           postinc0	equ	0xFEE
 14315                           wreg	equ	0xFE8
 14316                           indf1	equ	0xFE7
 14317                           postdec1	equ	0xFE5
 14318                           plusw1	equ	0xFE3
 14319                           fsr1h	equ	0xFE2
 14320                           fsr1l	equ	0xFE1
 14321                           indf2	equ	0xFDF
 14322                           postinc2	equ	0xFDE
 14323                           postdec2	equ	0xFDD
 14324                           plusw2	equ	0xFDB
 14325                           fsr2h	equ	0xFDA
 14326                           fsr2l	equ	0xFD9
 14327                           status	equ	0xFD8
 14328                           
 14329 ;; *************** function _memset *****************
 14330 ;; Defined at:
 14331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 14332 ;; Parameters:    Size  Location     Type
 14333 ;;  p1              2    0[COMRAM] PTR void 
 14334 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14335 ;;  c               2    2[COMRAM] int 
 14336 ;;  n               2    4[COMRAM] unsigned int 
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;  p               2    6[COMRAM] PTR unsigned char 
 14339 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14340 ;; Return value:  Size  Location     Type
 14341 ;;                  2    0[COMRAM] PTR void 
 14342 ;; Registers used:
 14343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14344 ;; Tracked objects:
 14345 ;;		On entry : 0/0
 14346 ;;		On exit  : 0/0
 14347 ;;		Unchanged: 0/0
 14348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14349 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;Total ram usage:        8 bytes
 14354 ;; Hardware stack levels used:    1
 14355 ;; This function calls:
 14356 ;;		Nothing
 14357 ;; This function is called by:
 14358 ;;		_USBDeviceInit
 14359 ;;		_USBStdSetCfgHandler
 14360 ;; This function uses a non-reentrant model
 14361 ;;
 14362                           
 14363                           	psect	text71
 14364  006DD2                     __ptext71:
 14365                           	opt stack 0
 14366  006DD2                     _memset:
 14367                           	opt stack 28
 14368                           
 14369                           ;incstack = 0
 14370  006DD2  C001  F007         	movff	memset@p1,memset@p
 14371  006DD6  C002  F008         	movff	memset@p1+1,memset@p+1
 14372  006DDA  D008               	goto	l3497
 14373  006DDC                     l10465:
 14374  006DDC  C007  FFD9         	movff	memset@p,fsr2l
 14375  006DE0  C008  FFDA         	movff	memset@p+1,fsr2h
 14376  006DE4  C003  FFDF         	movff	memset@c,indf2
 14377  006DE8  4A07               	infsnz	memset@p,f,c
 14378  006DEA  2A08               	incf	memset@p+1,f,c
 14379  006DEC                     l3497:
 14380  006DEC  0605               	decf	memset@n,f,c
 14381  006DEE  A0D8               	btfss	status,0,c
 14382  006DF0  0606               	decf	memset@n+1,f,c
 14383  006DF2  2805               	incf	memset@n,w,c
 14384  006DF4  E1F3               	bnz	l10465
 14385  006DF6  2806               	incf	memset@n+1,w,c
 14386  006DF8  B4D8               	btfsc	status,2,c
 14387  006DFA  0012               	return	
 14388  006DFC  D7EF               	goto	l3498
 14389  006DFE                     __end_of_memset:
 14390                           	opt stack 0
 14391                           tblptru	equ	0xFF8
 14392                           tblptrh	equ	0xFF7
 14393                           tblptrl	equ	0xFF6
 14394                           tablat	equ	0xFF5
 14395                           prodh	equ	0xFF4
 14396                           prodl	equ	0xFF3
 14397                           intcon	equ	0xFF2
 14398                           intcon2	equ	0xFF1
 14399                           intcon3	equ	0xFF0
 14400                           postinc0	equ	0xFEE
 14401                           wreg	equ	0xFE8
 14402                           indf1	equ	0xFE7
 14403                           postdec1	equ	0xFE5
 14404                           plusw1	equ	0xFE3
 14405                           fsr1h	equ	0xFE2
 14406                           fsr1l	equ	0xFE1
 14407                           indf2	equ	0xFDF
 14408                           postinc2	equ	0xFDE
 14409                           postdec2	equ	0xFDD
 14410                           plusw2	equ	0xFDB
 14411                           fsr2h	equ	0xFDA
 14412                           fsr2l	equ	0xFD9
 14413                           status	equ	0xFD8
 14414                           
 14415 ;; *************** function _USBStdGetStatusHandler *****************
 14416 ;; Defined at:
 14417 ;;		line 2131 in file "usb_device.c"
 14418 ;; Parameters:    Size  Location     Type
 14419 ;;		None
 14420 ;; Auto vars:     Size  Location     Type
 14421 ;;  p               2    1[COMRAM] PTR struct __BDT
 14422 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14423 ;; Return value:  Size  Location     Type
 14424 ;;                  1    wreg      void 
 14425 ;; Registers used:
 14426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14427 ;; Tracked objects:
 14428 ;;		On entry : 0/0
 14429 ;;		On exit  : 0/0
 14430 ;;		Unchanged: 0/0
 14431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14434 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14435 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14436 ;;Total ram usage:        3 bytes
 14437 ;; Hardware stack levels used:    1
 14438 ;; This function calls:
 14439 ;;		Nothing
 14440 ;; This function is called by:
 14441 ;;		_USBCheckStdRequest
 14442 ;; This function uses a non-reentrant model
 14443 ;;
 14444                           
 14445                           	psect	text72
 14446  0050F6                     __ptext72:
 14447                           	opt stack 0
 14448  0050F6                     _USBStdGetStatusHandler:
 14449                           	opt stack 26
 14450                           
 14451                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 14452                           
 14453                           ;incstack = 0
 14454  0050F6  0E00               	movlw	0
 14455  0050F8  010D               	movlb	13	; () banked
 14456  0050FA  6F38               	movwf	56,b	;volatile
 14457                           
 14458                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 14459  0050FC  0E00               	movlw	0
 14460  0050FE  6F39               	movwf	57,b	;volatile
 14461                           
 14462                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 14463  005100  D039               	goto	l281
 14464  005102                     l282:
 14465                           
 14466                           ; BSR set to: 13
 14467                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 14468  005102  0100               	movlb	0	; () banked
 14469  005104  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 14470                           
 14471                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 14472                           
 14473                           ; BSR set to: 13
 14474                           
 14475                           ; BSR set to: 0
 14476                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 14477                           
 14478                           ;usb_device.c: 2144: if(0 == 1)
 14479  005106  0100               	movlb	0	; () banked
 14480  005108  05AB               	decf	_RemoteWakeup& (0+255),w,b
 14481  00510A  A4D8               	btfss	status,2,c
 14482  00510C  D03E               	goto	l285
 14483                           
 14484                           ; BSR set to: 0
 14485                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 14486  00510E  010D               	movlb	13	; () banked
 14487  005110  8338               	bsf	56,1,b	;volatile
 14488                           
 14489                           ; BSR set to: 13
 14490                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 14491  005112  D03B               	goto	l285
 14492  005114                     l286:
 14493                           
 14494                           ; BSR set to: 13
 14495                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 14496  005114  0100               	movlb	0	; () banked
 14497  005116  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 14498                           
 14499                           ;usb_device.c: 2156: break;
 14500  005118  D038               	goto	l285
 14501  00511A                     l287:
 14502                           
 14503                           ; BSR set to: 13
 14504                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 14505  00511A  0100               	movlb	0	; () banked
 14506  00511C  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 14507                           
 14508                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 14509  00511E  010D               	movlb	13	; () banked
 14510  005120  BF34               	btfsc	52,7,b	;volatile
 14511  005122  D00A               	goto	l288
 14512                           
 14513                           ; BSR set to: 13
 14514                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14515  005124  5134               	movf	52,w,b	;volatile
 14516  005126  0B0F               	andlw	15
 14517  005128  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14518  00512A  5001               	movf	??_USBStdGetStatusHandler,w,c
 14519  00512C  0D02               	mullw	2
 14520  00512E  0E78               	movlw	low _pBDTEntryOut
 14521  005130  24F3               	addwf	prodl,w,c
 14522  005132  6ED9               	movwf	fsr2l,c
 14523  005134  0E00               	movlw	high _pBDTEntryOut
 14524  005136  D009               	goto	L7
 14525  005138                     l288:
 14526                           
 14527                           ; BSR set to: 13
 14528                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14529                           
 14530                           ; BSR set to: 13
 14531  005138  5134               	movf	52,w,b	;volatile
 14532  00513A  0B0F               	andlw	15
 14533  00513C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14534  00513E  5001               	movf	??_USBStdGetStatusHandler,w,c
 14535  005140  0D02               	mullw	2
 14536  005142  0E72               	movlw	low _pBDTEntryIn
 14537  005144  24F3               	addwf	prodl,w,c
 14538  005146  6ED9               	movwf	fsr2l,c
 14539  005148  0E00               	movlw	high _pBDTEntryIn
 14540  00514A                     L7:
 14541  00514A  20F4               	addwfc	prodh,w,c
 14542  00514C  6EDA               	movwf	fsr2h,c
 14543  00514E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14544  005152  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14545                           
 14546                           ; BSR set to: 13
 14547                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 14548                           
 14549                           ; BSR set to: 13
 14550  005156  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14551  00515A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14552  00515E  AEDF               	btfss	indf2,7,c
 14553  005160  D014               	goto	l285
 14554                           
 14555                           ; BSR set to: 13
 14556  005162  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14557  005166  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14558  00516A  A4DF               	btfss	indf2,2,c
 14559  00516C  D00E               	goto	l285
 14560                           
 14561                           ; BSR set to: 13
 14562                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 14563  00516E  0E01               	movlw	1
 14564  005170  6F38               	movwf	56,b	;volatile
 14565                           
 14566                           ; BSR set to: 13
 14567                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 14568                           
 14569                           ; BSR set to: 13
 14570                           ;usb_device.c: 2176: break;
 14571  005172  D00B               	goto	l285
 14572  005174                     l281:
 14573                           
 14574                           ; BSR set to: 13
 14575                           
 14576                           ; BSR set to: 13
 14577  005174  5130               	movf	48,w,b	;volatile
 14578  005176  0B1F               	andlw	31
 14579                           
 14580                           ; Switch size 1, requested type "space"
 14581                           ; Number of cases is 3, Range of values is 0 to 2
 14582                           ; switch strategies available:
 14583                           ; Name         Instructions Cycles
 14584                           ; simple_byte           10     6 (average)
 14585                           ;	Chosen strategy is simple_byte
 14586  005178  0A00               	xorlw	0	; case 0
 14587  00517A  B4D8               	btfsc	status,2,c
 14588  00517C  D7C2               	goto	l282
 14589  00517E  0A01               	xorlw	1	; case 1
 14590  005180  B4D8               	btfsc	status,2,c
 14591  005182  D7C8               	goto	l286
 14592  005184  0A03               	xorlw	3	; case 2
 14593  005186  B4D8               	btfsc	status,2,c
 14594  005188  D7C8               	goto	l287
 14595  00518A                     l285:
 14596                           
 14597                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14598  00518A  0100               	movlb	0	; () banked
 14599  00518C  AF6F               	btfss	(_inPipes+3)& (0+255),7,b
 14600  00518E  0012               	return	
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14604  005190  0E38               	movlw	56
 14605  005192  6F6C               	movwf	_inPipes& (0+255),b
 14606  005194  0E0D               	movlw	13
 14607  005196  6F6D               	movwf	(_inPipes+1)& (0+255),b
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14611  005198  816F               	bsf	(_inPipes+3)& (0+255),0,b
 14612                           
 14613                           ; BSR set to: 0
 14614                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14615  00519A  0E02               	movlw	2
 14616  00519C  6F70               	movwf	(_inPipes+4)& (0+255),b
 14617  00519E  0012               	return	
 14618  0051A0                     __end_of_USBStdGetStatusHandler:
 14619                           	opt stack 0
 14620                           tblptru	equ	0xFF8
 14621                           tblptrh	equ	0xFF7
 14622                           tblptrl	equ	0xFF6
 14623                           tablat	equ	0xFF5
 14624                           prodh	equ	0xFF4
 14625                           prodl	equ	0xFF3
 14626                           intcon	equ	0xFF2
 14627                           intcon2	equ	0xFF1
 14628                           intcon3	equ	0xFF0
 14629                           postinc0	equ	0xFEE
 14630                           wreg	equ	0xFE8
 14631                           indf1	equ	0xFE7
 14632                           postdec1	equ	0xFE5
 14633                           plusw1	equ	0xFE3
 14634                           fsr1h	equ	0xFE2
 14635                           fsr1l	equ	0xFE1
 14636                           indf2	equ	0xFDF
 14637                           postinc2	equ	0xFDE
 14638                           postdec2	equ	0xFDD
 14639                           plusw2	equ	0xFDB
 14640                           fsr2h	equ	0xFDA
 14641                           fsr2l	equ	0xFD9
 14642                           status	equ	0xFD8
 14643                           
 14644 ;; *************** function _USBStdGetDscHandler *****************
 14645 ;; Defined at:
 14646 ;;		line 2045 in file "usb_device.c"
 14647 ;; Parameters:    Size  Location     Type
 14648 ;;		None
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;		None
 14651 ;; Return value:  Size  Location     Type
 14652 ;;                  1    wreg      void 
 14653 ;; Registers used:
 14654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14655 ;; Tracked objects:
 14656 ;;		On entry : 0/0
 14657 ;;		On exit  : 0/0
 14658 ;;		Unchanged: 0/0
 14659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14662 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14663 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14664 ;;Total ram usage:        2 bytes
 14665 ;; Hardware stack levels used:    1
 14666 ;; This function calls:
 14667 ;;		Nothing
 14668 ;; This function is called by:
 14669 ;;		_USBCheckStdRequest
 14670 ;; This function uses a non-reentrant model
 14671 ;;
 14672                           
 14673                           	psect	text73
 14674  0034C4                     __ptext73:
 14675                           	opt stack 0
 14676  0034C4                     _USBStdGetDscHandler:
 14677                           	opt stack 26
 14678                           
 14679                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 14680                           
 14681                           ; BSR set to: 0
 14682                           ;incstack = 0
 14683  0034C4  0E80               	movlw	128
 14684  0034C6  010D               	movlb	13	; () banked
 14685  0034C8  1930               	xorwf	48,w,b	;volatile
 14686  0034CA  A4D8               	btfss	status,2,c
 14687  0034CC  0012               	return	
 14688                           
 14689                           ; BSR set to: 13
 14690                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14691  0034CE  0EC0               	movlw	192
 14692  0034D0  0100               	movlb	0	; () banked
 14693  0034D2  6F6F               	movwf	(_inPipes+3)& (0+255),b
 14694                           
 14695                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 14696  0034D4  D088               	goto	l268
 14697  0034D6                     
 14698                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14699                           
 14700                           ; BSR set to: 0
 14701  0034D6  0EA4               	movlw	low _device_dsc
 14702  0034D8  0100               	movlb	0	; () banked
 14703  0034DA  6F6C               	movwf	_inPipes& (0+255),b
 14704  0034DC  0E8F               	movlw	high _device_dsc
 14705  0034DE  6F6D               	movwf	(_inPipes+1)& (0+255),b
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 14709  0034E0  0E00               	movlw	0
 14710  0034E2  6F71               	movwf	(_inPipes+5)& (0+255),b
 14711  0034E4  0E12               	movlw	18
 14712  0034E6  6F70               	movwf	(_inPipes+4)& (0+255),b
 14713                           
 14714                           ;usb_device.c: 2060: break;
 14715  0034E8  0012               	return	
 14716  0034EA                     
 14717                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 14718                           
 14719                           ; BSR set to: 0
 14720  0034EA  010D               	movlb	13	; () banked
 14721  0034EC  5132               	movf	50,w,b	;volatile
 14722  0034EE  A4D8               	btfss	status,2,c
 14723  0034F0  D043               	goto	l272
 14724                           
 14725                           ; BSR set to: 13
 14726                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 14727  0034F2  5132               	movf	50,w,b	;volatile
 14728  0034F4  0D02               	mullw	2
 14729  0034F6  0EA3               	movlw	low _USB_CD_Ptr
 14730  0034F8  24F3               	addwf	prodl,w,c
 14731  0034FA  6EF6               	movwf	tblptrl,c
 14732  0034FC  0E8E               	movlw	high _USB_CD_Ptr
 14733  0034FE  20F4               	addwfc	prodh,w,c
 14734  003500  6EF7               	movwf	tblptrh,c
 14735  003502                     	if	1	;There are 3 active tblptr bytes
 14736  003502  6AF8               	clrf	tblptru,c
 14737  003504  0E00               	movlw	low (__mediumconst shr (0+16))
 14738  003506  22F8               	addwfc	tblptru,f,c
 14739  003508                     	endif
 14740  003508  0009               	tblrd		*+
 14741  00350A  CFF5 F06C          	movff	tablat,_inPipes
 14742  00350E  000A               	tblrd		*-
 14743  003510  CFF5 F06D          	movff	tablat,_inPipes+1
 14744                           
 14745                           ; BSR set to: 13
 14746                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14747  003514  0E02               	movlw	2
 14748  003516  0100               	movlb	0	; () banked
 14749  003518  256C               	addwf	_inPipes& (0+255),w,b
 14750  00351A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14751  00351C  0E00               	movlw	0
 14752  00351E  216D               	addwfc	(_inPipes+1)& (0+255),w,b
 14753  003520  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14754  003522  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14755  003526  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14756  00352A  6AF8               	clrf	tblptru,c
 14757  00352C  0E0E               	movlw	(high __ramtop+-1)
 14758  00352E  64F7               	cpfsgt	tblptrh,c
 14759  003530  D003               	bra	u8857
 14760  003532  0008               	tblrd		*
 14761  003534  50F5               	movf	tablat,w,c
 14762  003536  D005               	bra	u8850
 14763  003538                     u8857:
 14764  003538  CFF6 FFE9          	movff	tblptrl,fsr0l
 14765  00353C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14766  003540  50EF               	movf	indf0,w,c
 14767  003542                     u8850:
 14768  003542  0100               	movlb	0	; () banked
 14769  003544  6F70               	movwf	(_inPipes+4)& (0+255),b
 14770                           
 14771                           ; BSR set to: 0
 14772                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14773  003546  0E03               	movlw	3
 14774  003548  256C               	addwf	_inPipes& (0+255),w,b
 14775  00354A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14776  00354C  0E00               	movlw	0
 14777  00354E  216D               	addwfc	(_inPipes+1)& (0+255),w,b
 14778  003550  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14779  003552  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14780  003556  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14781  00355A  6AF8               	clrf	tblptru,c
 14782  00355C  0E0E               	movlw	(high __ramtop+-1)
 14783  00355E  64F7               	cpfsgt	tblptrh,c
 14784  003560  D003               	bra	u8867
 14785  003562  0008               	tblrd		*
 14786  003564  50F5               	movf	tablat,w,c
 14787  003566  D005               	bra	u8860
 14788  003568                     u8867:
 14789  003568  CFF6 FFE9          	movff	tblptrl,fsr0l
 14790  00356C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14791  003570  50EF               	movf	indf0,w,c
 14792  003572                     u8860:
 14793  003572  0100               	movlb	0	; () banked
 14794  003574  6F71               	movwf	(_inPipes+5)& (0+255),b
 14795                           
 14796                           ;usb_device.c: 2078: }
 14797  003576  0012               	return	
 14798  003578                     l272:
 14799                           
 14800                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 14801                           
 14802                           ; BSR set to: 0
 14803  003578  0E00               	movlw	0
 14804  00357A  0100               	movlb	0	; () banked
 14805  00357C  6F6F               	movwf	(_inPipes+3)& (0+255),b
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 14809  00357E  0012               	return	
 14810  003580                     
 14811                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 14812                           
 14813                           ; BSR set to: 0
 14814  003580  0E04               	movlw	4
 14815  003582  010D               	movlb	13	; () banked
 14816  003584  6132               	cpfslt	50,b	;volatile
 14817  003586  D027               	goto	l275
 14818                           
 14819                           ; BSR set to: 13
 14820                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 14821  003588  5132               	movf	50,w,b	;volatile
 14822  00358A  0D02               	mullw	2
 14823  00358C  0E79               	movlw	low _USB_SD_Ptr
 14824  00358E  24F3               	addwf	prodl,w,c
 14825  003590  6EF6               	movwf	tblptrl,c
 14826  003592  0E8E               	movlw	high _USB_SD_Ptr
 14827  003594  20F4               	addwfc	prodh,w,c
 14828  003596  6EF7               	movwf	tblptrh,c
 14829  003598                     	if	1	;There are 3 active tblptr bytes
 14830  003598  6AF8               	clrf	tblptru,c
 14831  00359A  0E00               	movlw	low (__mediumconst shr (0+16))
 14832  00359C  22F8               	addwfc	tblptru,f,c
 14833  00359E                     	endif
 14834  00359E  0009               	tblrd		*+
 14835  0035A0  CFF5 F06C          	movff	tablat,_inPipes
 14836  0035A4  000A               	tblrd		*-
 14837  0035A6  CFF5 F06D          	movff	tablat,_inPipes+1
 14838                           
 14839                           ; BSR set to: 13
 14840                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14841  0035AA  C06C  FFF6         	movff	_inPipes,tblptrl
 14842  0035AE  C06D  FFF7         	movff	_inPipes+1,tblptrh
 14843  0035B2  6AF8               	clrf	tblptru,c
 14844  0035B4  0E0E               	movlw	(high __ramtop+-1)
 14845  0035B6  64F7               	cpfsgt	tblptrh,c
 14846  0035B8  D003               	bra	u8887
 14847  0035BA  0008               	tblrd		*
 14848  0035BC  50F5               	movf	tablat,w,c
 14849  0035BE  D005               	bra	u8880
 14850  0035C0                     u8887:
 14851  0035C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 14852  0035C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 14853  0035C8  50EF               	movf	indf0,w,c
 14854  0035CA                     u8880:
 14855  0035CA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14856  0035CC  5001               	movf	??_USBStdGetDscHandler,w,c
 14857  0035CE  0100               	movlb	0	; () banked
 14858  0035D0  6F70               	movwf	(_inPipes+4)& (0+255),b
 14859  0035D2  6B71               	clrf	(_inPipes+5)& (0+255),b
 14860                           
 14861                           ;usb_device.c: 2094: }
 14862  0035D4  0012               	return	
 14863  0035D6                     l275:
 14864                           
 14865                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 14866                           
 14867                           ; BSR set to: 0
 14868  0035D6  0E00               	movlw	0
 14869  0035D8  0100               	movlb	0	; () banked
 14870  0035DA  6F6F               	movwf	(_inPipes+3)& (0+255),b
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 14874  0035DC  0012               	return	
 14875  0035DE                     
 14876                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 14877                           
 14878                           ; BSR set to: 0
 14879  0035DE  0E00               	movlw	0
 14880  0035E0  0100               	movlb	0	; () banked
 14881  0035E2  6F6F               	movwf	(_inPipes+3)& (0+255),b
 14882                           
 14883                           ; BSR set to: 0
 14884                           ;usb_device.c: 2112: }
 14885                           
 14886                           ;usb_device.c: 2111: break;
 14887  0035E4  0012               	return	
 14888  0035E6                     l268:
 14889                           
 14890                           ; BSR set to: 0
 14891                           
 14892                           ; BSR set to: 0
 14893  0035E6  010D               	movlb	13	; () banked
 14894  0035E8  5133               	movf	51,w,b	;volatile
 14895                           
 14896                           ; Switch size 1, requested type "space"
 14897                           ; Number of cases is 3, Range of values is 1 to 3
 14898                           ; switch strategies available:
 14899                           ; Name         Instructions Cycles
 14900                           ; simple_byte           10     6 (average)
 14901                           ;	Chosen strategy is simple_byte
 14902  0035EA  0A01               	xorlw	1	; case 1
 14903  0035EC  B4D8               	btfsc	status,2,c
 14904  0035EE  D773               	goto	l269
 14905  0035F0  0A03               	xorlw	3	; case 2
 14906  0035F2  B4D8               	btfsc	status,2,c
 14907  0035F4  D77A               	goto	l271
 14908  0035F6  0A01               	xorlw	1	; case 3
 14909  0035F8  B4D8               	btfsc	status,2,c
 14910  0035FA  D7C2               	goto	l274
 14911  0035FC  D7F0               	goto	l277
 14912  0035FE                     __end_of_USBStdGetDscHandler:
 14913                           	opt stack 0
 14914                           tblptru	equ	0xFF8
 14915                           tblptrh	equ	0xFF7
 14916                           tblptrl	equ	0xFF6
 14917                           tablat	equ	0xFF5
 14918                           prodh	equ	0xFF4
 14919                           prodl	equ	0xFF3
 14920                           intcon	equ	0xFF2
 14921                           intcon2	equ	0xFF1
 14922                           intcon3	equ	0xFF0
 14923                           indf0	equ	0xFEF
 14924                           postinc0	equ	0xFEE
 14925                           fsr0h	equ	0xFEA
 14926                           fsr0l	equ	0xFE9
 14927                           wreg	equ	0xFE8
 14928                           indf1	equ	0xFE7
 14929                           postdec1	equ	0xFE5
 14930                           plusw1	equ	0xFE3
 14931                           fsr1h	equ	0xFE2
 14932                           fsr1l	equ	0xFE1
 14933                           indf2	equ	0xFDF
 14934                           postinc2	equ	0xFDE
 14935                           postdec2	equ	0xFDD
 14936                           plusw2	equ	0xFDB
 14937                           fsr2h	equ	0xFDA
 14938                           fsr2l	equ	0xFD9
 14939                           status	equ	0xFD8
 14940                           
 14941 ;; *************** function _USBStdFeatureReqHandler *****************
 14942 ;; Defined at:
 14943 ;;		line 2756 in file "usb_device.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;		None
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  p               2   27[COMRAM] PTR struct __BDT
 14948 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14949 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14950 ;;		 -> UEP0(1), 
 14951 ;;  current_ep_d    1   26[COMRAM] struct .
 14952 ;; Return value:  Size  Location     Type
 14953 ;;                  1    wreg      void 
 14954 ;; Registers used:
 14955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14962 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14965 ;;Total ram usage:        6 bytes
 14966 ;; Hardware stack levels used:    1
 14967 ;; Hardware stack levels required when called:    4
 14968 ;; This function calls:
 14969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14970 ;; This function is called by:
 14971 ;;		_USBCheckStdRequest
 14972 ;; This function uses a non-reentrant model
 14973 ;;
 14974                           
 14975                           	psect	text74
 14976  0014D6                     __ptext74:
 14977                           	opt stack 0
 14978  0014D6                     _USBStdFeatureReqHandler:
 14979                           	opt stack 22
 14980                           
 14981                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14982                           
 14983                           ;incstack = 0
 14984  0014D6  010D               	movlb	13	; () banked
 14985  0014D8  0532               	decf	50,w,b	;volatile
 14986  0014DA  A4D8               	btfss	status,2,c
 14987  0014DC  D011               	goto	l361
 14988                           
 14989                           ; BSR set to: 13
 14990  0014DE  5130               	movf	48,w,b	;volatile
 14991  0014E0  0B1F               	andlw	31
 14992  0014E2  0900               	iorlw	0
 14993  0014E4  A4D8               	btfss	status,2,c
 14994  0014E6  D00C               	goto	l361
 14995                           
 14996                           ; BSR set to: 13
 14997                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14998  0014E8  0100               	movlb	0	; () banked
 14999  0014EA  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 15000                           
 15001                           ; BSR set to: 0
 15002                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15003  0014EC  0E03               	movlw	3
 15004  0014EE  010D               	movlb	13	; () banked
 15005  0014F0  1931               	xorwf	49,w,b	;volatile
 15006  0014F2  A4D8               	btfss	status,2,c
 15007  0014F4  D002               	goto	l360
 15008                           
 15009                           ; BSR set to: 13
 15010                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15011  0014F6  0E01               	movlw	1
 15012  0014F8  D001               	goto	L8
 15013  0014FA                     l360:
 15014                           
 15015                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15016                           
 15017                           ; BSR set to: 0
 15018  0014FA  0E00               	movlw	0
 15019  0014FC                     L8:
 15020  0014FC  0100               	movlb	0	; () banked
 15021  0014FE  6FAB               	movwf	_RemoteWakeup& (0+255),b
 15022  001500                     l361:
 15023                           
 15024                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15025                           
 15026                           ; BSR set to: 0
 15027  001500  010D               	movlb	13	; () banked
 15028  001502  5132               	movf	50,w,b	;volatile
 15029  001504  A4D8               	btfss	status,2,c
 15030  001506  0012               	return	
 15031                           
 15032                           ; BSR set to: 13
 15033  001508  5130               	movf	48,w,b	;volatile
 15034  00150A  0B1F               	andlw	31
 15035  00150C  0A02               	xorlw	2
 15036  00150E  A4D8               	btfss	status,2,c
 15037  001510  0012               	return	
 15038                           
 15039                           ; BSR set to: 13
 15040  001512  5134               	movf	52,w,b	;volatile
 15041  001514  0B0F               	andlw	15
 15042  001516  0900               	iorlw	0
 15043  001518  B4D8               	btfsc	status,2,c
 15044  00151A  0012               	return	
 15045                           
 15046                           ; BSR set to: 13
 15047  00151C  5134               	movf	52,w,b	;volatile
 15048  00151E  0B0F               	andlw	15
 15049  001520  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15050  001522  0E03               	movlw	3
 15051  001524  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15052  001526  0012               	return	
 15053                           
 15054                           ; BSR set to: 13
 15055  001528  0E20               	movlw	32
 15056  00152A  185F               	xorwf	_USBDeviceState,w,c
 15057  00152C  A4D8               	btfss	status,2,c
 15058  00152E  0012               	return	
 15059                           
 15060                           ; BSR set to: 13
 15061                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15062  001530  0100               	movlb	0	; () banked
 15063  001532  8F6F               	bsf	(_inPipes+3)& (0+255),7,b
 15064                           
 15065                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15066  001534  010D               	movlb	13	; () banked
 15067  001536  BF34               	btfsc	52,7,b	;volatile
 15068  001538  D019               	goto	l363
 15069                           
 15070                           ; BSR set to: 13
 15071                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15072  00153A  5134               	movf	52,w,b	;volatile
 15073  00153C  0B0F               	andlw	15
 15074  00153E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15075  001540  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15076  001542  0D02               	mullw	2
 15077  001544  0E78               	movlw	low _pBDTEntryOut
 15078  001546  24F3               	addwf	prodl,w,c
 15079  001548  6ED9               	movwf	fsr2l,c
 15080  00154A  0E00               	movlw	high _pBDTEntryOut
 15081  00154C  20F4               	addwfc	prodh,w,c
 15082  00154E  6EDA               	movwf	fsr2h,c
 15083  001550  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15084  001554  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15085                           
 15086                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15087  001558  5134               	movf	52,w,b	;volatile
 15088  00155A  0B0F               	andlw	15
 15089  00155C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15090  00155E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15091  001560  0D01               	mullw	1
 15092  001562  0E57               	movlw	low _ep_data_out
 15093  001564  24F3               	addwf	prodl,w,c
 15094  001566  6ED9               	movwf	fsr2l,c
 15095  001568  0E01               	movlw	high _ep_data_out
 15096  00156A  D018               	goto	L9
 15097  00156C                     l363:
 15098                           
 15099                           ; BSR set to: 13
 15100                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15101                           
 15102                           ; BSR set to: 13
 15103  00156C  5134               	movf	52,w,b	;volatile
 15104  00156E  0B0F               	andlw	15
 15105  001570  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15106  001572  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15107  001574  0D02               	mullw	2
 15108  001576  0E72               	movlw	low _pBDTEntryIn
 15109  001578  24F3               	addwf	prodl,w,c
 15110  00157A  6ED9               	movwf	fsr2l,c
 15111  00157C  0E00               	movlw	high _pBDTEntryIn
 15112  00157E  20F4               	addwfc	prodh,w,c
 15113  001580  6EDA               	movwf	fsr2h,c
 15114  001582  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15115  001586  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15116                           
 15117                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15118  00158A  5134               	movf	52,w,b	;volatile
 15119  00158C  0B0F               	andlw	15
 15120  00158E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15121  001590  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15122  001592  0D01               	mullw	1
 15123  001594  0E5A               	movlw	low _ep_data_in
 15124  001596  24F3               	addwf	prodl,w,c
 15125  001598  6ED9               	movwf	fsr2l,c
 15126  00159A  0E01               	movlw	high _ep_data_in
 15127  00159C                     L9:
 15128  00159C  20F4               	addwfc	prodh,w,c
 15129  00159E  6EDA               	movwf	fsr2h,c
 15130  0015A0  50DF               	movf	indf2,w,c
 15131  0015A2  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15132                           
 15133                           ; BSR set to: 13
 15134                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15135                           
 15136                           ; BSR set to: 13
 15137  0015A4  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15138  0015A6  D006               	goto	l365
 15139                           
 15140                           ; BSR set to: 13
 15141                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15142  0015A8  0EFB               	movlw	251
 15143  0015AA  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15144  0015AC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15145  0015AE  0EFF               	movlw	255
 15146  0015B0  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15147  0015B2  D004               	goto	L10
 15148  0015B4                     l365:
 15149                           
 15150                           ; BSR set to: 13
 15151                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15152                           
 15153                           ; BSR set to: 13
 15154  0015B4  0E04               	movlw	4
 15155  0015B6  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15156  0015B8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15157  0015BA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15158  0015BC                     L10:
 15159  0015BC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15160                           
 15161                           ; BSR set to: 13
 15162                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15163                           
 15164                           ; BSR set to: 13
 15165  0015BE  BF34               	btfsc	52,7,b	;volatile
 15166  0015C0  D00A               	goto	l367
 15167                           
 15168                           ; BSR set to: 13
 15169                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15170  0015C2  5134               	movf	52,w,b	;volatile
 15171  0015C4  0B0F               	andlw	15
 15172  0015C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15173  0015C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15174  0015CA  0D02               	mullw	2
 15175  0015CC  0E78               	movlw	low _pBDTEntryOut
 15176  0015CE  24F3               	addwf	prodl,w,c
 15177  0015D0  6ED9               	movwf	fsr2l,c
 15178  0015D2  0E00               	movlw	high _pBDTEntryOut
 15179  0015D4  D009               	goto	L11
 15180  0015D6                     l367:
 15181                           
 15182                           ; BSR set to: 13
 15183                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15184                           
 15185                           ; BSR set to: 13
 15186  0015D6  5134               	movf	52,w,b	;volatile
 15187  0015D8  0B0F               	andlw	15
 15188  0015DA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15189  0015DC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15190  0015DE  0D02               	mullw	2
 15191  0015E0  0E72               	movlw	low _pBDTEntryIn
 15192  0015E2  24F3               	addwf	prodl,w,c
 15193  0015E4  6ED9               	movwf	fsr2l,c
 15194  0015E6  0E00               	movlw	high _pBDTEntryIn
 15195  0015E8                     L11:
 15196  0015E8  20F4               	addwfc	prodh,w,c
 15197  0015EA  6EDA               	movwf	fsr2h,c
 15198  0015EC  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15199  0015F0  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15200                           
 15201                           ; BSR set to: 13
 15202                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15203                           
 15204                           ; BSR set to: 13
 15205  0015F4  0E03               	movlw	3
 15206  0015F6  1931               	xorwf	49,w,b	;volatile
 15207  0015F8  A4D8               	btfss	status,2,c
 15208  0015FA  D02D               	goto	l369
 15209                           
 15210                           ; BSR set to: 13
 15211                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15212  0015FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15213  001600  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15214  001604  AEDF               	btfss	indf2,7,c
 15215  001606  D01A               	goto	l372
 15216                           
 15217                           ; BSR set to: 13
 15218                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15219  001608  BF34               	btfsc	52,7,b	;volatile
 15220  00160A  D00A               	goto	l371
 15221                           
 15222                           ; BSR set to: 13
 15223                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15224  00160C  5134               	movf	52,w,b	;volatile
 15225  00160E  0B0F               	andlw	15
 15226  001610  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15227  001612  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15228  001614  0D01               	mullw	1
 15229  001616  0E57               	movlw	low _ep_data_out
 15230  001618  24F3               	addwf	prodl,w,c
 15231  00161A  6ED9               	movwf	fsr2l,c
 15232  00161C  0E01               	movlw	high _ep_data_out
 15233  00161E  D00A               	goto	L12
 15234  001620                     l371:
 15235                           
 15236                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15237                           
 15238                           ; BSR set to: 1
 15239  001620  010D               	movlb	13	; () banked
 15240  001622  5134               	movf	52,w,b	;volatile
 15241  001624  0B0F               	andlw	15
 15242  001626  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15243  001628  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15244  00162A  0D01               	mullw	1
 15245  00162C  0E5A               	movlw	low _ep_data_in
 15246  00162E  24F3               	addwf	prodl,w,c
 15247  001630  6ED9               	movwf	fsr2l,c
 15248  001632  0E01               	movlw	high _ep_data_in
 15249  001634                     L12:
 15250  001634  20F4               	addwfc	prodh,w,c
 15251  001636  6EDA               	movwf	fsr2h,c
 15252  001638  0101               	movlb	1	; () banked
 15253  00163A  82DF               	bsf	indf2,1,c
 15254  00163C                     l372:
 15255                           
 15256                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 15257                           
 15258                           ; BSR set to: 1
 15259                           
 15260                           ; BSR set to: 1
 15261  00163C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15262  001640  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15263  001644  0E00               	movlw	0
 15264  001646  84DB               	bsf	plusw2,2,c
 15265                           
 15266                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 15267  001648  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15268  00164C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15269  001650  0E00               	movlw	0
 15270  001652  8EDB               	bsf	plusw2,7,c
 15271                           
 15272                           ;usb_device.c: 2878: }
 15273  001654  0012               	return	
 15274  001656                     l369:
 15275                           
 15276                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 15277  001656  0E04               	movlw	4
 15278  001658  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15279  00165A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15280  00165C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15281  00165E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15282                           
 15283                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 15284  001660  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15285  001664  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15286  001668  AEDF               	btfss	indf2,7,c
 15287  00166A  D01B               	goto	l374
 15288                           
 15289                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 15290  00166C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15291  001670  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15292  001674  0E7F               	movlw	127
 15293  001676  16DF               	andwf	indf2,f,c
 15294                           
 15295                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 15296  001678  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15297  00167C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15298  001680  0E00               	movlw	0
 15299  001682  8CDB               	bsf	plusw2,6,c
 15300                           
 15301                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15302  001684  0E00               	movlw	0
 15303  001686  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15304  001688  0E05               	movlw	5
 15305  00168A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15306  00168C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15307  001690  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15308  001694  0E00               	movlw	0
 15309  001696  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15310  001698  0E02               	movlw	2
 15311  00169A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15312  00169C  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15313                           
 15314                           ;usb_device.c: 2893: }
 15315  0016A0  D006               	goto	l375
 15316  0016A2                     l374:
 15317                           
 15318                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 15319  0016A2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15320  0016A6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15321  0016AA  0E00               	movlw	0
 15322  0016AC  8CDB               	bsf	plusw2,6,c
 15323  0016AE                     l375:
 15324                           
 15325                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 15326  0016AE  0E04               	movlw	4
 15327  0016B0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15328  0016B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15329  0016B4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15330  0016B6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15331                           
 15332                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15333  0016B8  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15334  0016BA  D006               	goto	u9100
 15335  0016BC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15336  0016C0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15337  0016C4  AEDF               	btfss	indf2,7,c
 15338  0016C6  D030               	goto	l376
 15339  0016C8                     u9100:
 15340                           
 15341                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 15342  0016C8  010D               	movlb	13	; () banked
 15343  0016CA  BF34               	btfsc	52,7,b	;volatile
 15344  0016CC  D00A               	goto	l379
 15345                           
 15346                           ; BSR set to: 13
 15347                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 15348  0016CE  5134               	movf	52,w,b	;volatile
 15349  0016D0  0B0F               	andlw	15
 15350  0016D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15351  0016D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15352  0016D6  0D01               	mullw	1
 15353  0016D8  0E57               	movlw	low _ep_data_out
 15354  0016DA  24F3               	addwf	prodl,w,c
 15355  0016DC  6ED9               	movwf	fsr2l,c
 15356  0016DE  0E01               	movlw	high _ep_data_out
 15357  0016E0  D00A               	goto	L13
 15358  0016E2                     l379:
 15359                           
 15360                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 15361                           
 15362                           ; BSR set to: 1
 15363  0016E2  010D               	movlb	13	; () banked
 15364  0016E4  5134               	movf	52,w,b	;volatile
 15365  0016E6  0B0F               	andlw	15
 15366  0016E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15367  0016EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15368  0016EC  0D01               	mullw	1
 15369  0016EE  0E5A               	movlw	low _ep_data_in
 15370  0016F0  24F3               	addwf	prodl,w,c
 15371  0016F2  6ED9               	movwf	fsr2l,c
 15372  0016F4  0E01               	movlw	high _ep_data_in
 15373  0016F6                     L13:
 15374  0016F6  20F4               	addwfc	prodh,w,c
 15375  0016F8  6EDA               	movwf	fsr2h,c
 15376  0016FA  0101               	movlb	1	; () banked
 15377  0016FC  92DF               	bcf	indf2,1,c
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15381                           
 15382                           ; BSR set to: 1
 15383  0016FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15384  001702  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15385  001706  0E3B               	movlw	59
 15386  001708  16DF               	andwf	indf2,f,c
 15387                           
 15388                           ; BSR set to: 1
 15389                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15390  00170A  0E00               	movlw	0
 15391  00170C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15392  00170E  0E05               	movlw	5
 15393  001710  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15394  001712  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15395  001716  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15396  00171A  0E00               	movlw	0
 15397  00171C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15398  00171E  0E02               	movlw	2
 15399  001720  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15400  001722  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15401                           
 15402                           ;usb_device.c: 2923: }
 15403  001726  D006               	goto	l381
 15404  001728                     l376:
 15405                           
 15406                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 15407  001728  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15408  00172C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15409  001730  0E3B               	movlw	59
 15410  001732  16DF               	andwf	indf2,f,c
 15411  001734                     l381:
 15412                           
 15413                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 15414  001734  010D               	movlb	13	; () banked
 15415  001736  5134               	movf	52,w,b	;volatile
 15416  001738  0B0F               	andlw	15
 15417  00173A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15418  00173C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15419  00173E  0D01               	mullw	1
 15420  001740  0E26               	movlw	38
 15421  001742  24F3               	addwf	prodl,w,c
 15422  001744  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 15423  001746  0E0F               	movlw	15
 15424  001748  20F4               	addwfc	prodh,w,c
 15425  00174A  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15426                           
 15427                           ; BSR set to: 13
 15428                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 15429  00174C  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15430  001750  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15431  001754  0EFE               	movlw	254
 15432  001756  16DF               	andwf	indf2,f,c
 15433                           
 15434                           ; BSR set to: 13
 15435  001758  0012               	return	
 15436  00175A                     __end_of_USBStdFeatureReqHandler:
 15437                           	opt stack 0
 15438                           tblptru	equ	0xFF8
 15439                           tblptrh	equ	0xFF7
 15440                           tblptrl	equ	0xFF6
 15441                           tablat	equ	0xFF5
 15442                           prodh	equ	0xFF4
 15443                           prodl	equ	0xFF3
 15444                           intcon	equ	0xFF2
 15445                           intcon2	equ	0xFF1
 15446                           intcon3	equ	0xFF0
 15447                           indf0	equ	0xFEF
 15448                           postinc0	equ	0xFEE
 15449                           fsr0h	equ	0xFEA
 15450                           fsr0l	equ	0xFE9
 15451                           wreg	equ	0xFE8
 15452                           indf1	equ	0xFE7
 15453                           postdec1	equ	0xFE5
 15454                           plusw1	equ	0xFE3
 15455                           fsr1h	equ	0xFE2
 15456                           fsr1l	equ	0xFE1
 15457                           indf2	equ	0xFDF
 15458                           postinc2	equ	0xFDE
 15459                           postdec2	equ	0xFDD
 15460                           plusw2	equ	0xFDB
 15461                           fsr2h	equ	0xFDA
 15462                           fsr2l	equ	0xFD9
 15463                           status	equ	0xFD8
 15464                           
 15465 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15466 ;; Defined at:
 15467 ;;		line 54 in file "usb_events.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;  event           2   15[COMRAM] enum E6832
 15470 ;;  pdata           2   17[COMRAM] PTR void 
 15471 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15472 ;;		 -> BDT(48), 
 15473 ;;  size            2   19[COMRAM] unsigned int 
 15474 ;; Auto vars:     Size  Location     Type
 15475 ;;		None
 15476 ;; Return value:  Size  Location     Type
 15477 ;;                  1    wreg      unsigned char 
 15478 ;; Registers used:
 15479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15480 ;; Tracked objects:
 15481 ;;		On entry : 0/0
 15482 ;;		On exit  : 0/0
 15483 ;;		Unchanged: 0/0
 15484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15485 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15488 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15489 ;;Total ram usage:        8 bytes
 15490 ;; Hardware stack levels used:    1
 15491 ;; Hardware stack levels required when called:    3
 15492 ;; This function calls:
 15493 ;;		_APP_DeviceCustomHIDInitialize
 15494 ;;		_APP_DeviceMSDInitialize
 15495 ;;		_MSDTransferTerminated
 15496 ;;		_SYSTEM_Initialize
 15497 ;;		_USBCheckHIDRequest
 15498 ;;		_USBCheckMSDRequest
 15499 ;; This function is called by:
 15500 ;;		_USBDeviceTasks
 15501 ;;		_USBStdSetCfgHandler
 15502 ;;		_USBSuspend
 15503 ;;		_USBWakeFromSuspend
 15504 ;;		_USBCtrlTrfSetupHandler
 15505 ;;		_USBCheckStdRequest
 15506 ;;		_USBStdFeatureReqHandler
 15507 ;; This function uses a non-reentrant model
 15508 ;;
 15509                           
 15510                           	psect	text75
 15511  005AB4                     __ptext75:
 15512                           	opt stack 0
 15513  005AB4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15514                           	opt stack 26
 15515                           
 15516                           ;usb_events.c: 56: switch((int)event)
 15517                           
 15518                           ;incstack = 0
 15519  005AB4  D019               	goto	l800
 15520  005AB6                     
 15521                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 15522  005AB6  0E01               	movlw	1
 15523  005AB8  EC26  F033         	call	_SYSTEM_Initialize
 15524                           
 15525                           ;usb_events.c: 79: break;
 15526  005ABC  0012               	return	
 15527  005ABE                     
 15528                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 15529  005ABE  0E02               	movlw	2
 15530  005AC0  EC26  F033         	call	_SYSTEM_Initialize
 15531                           
 15532                           ;usb_events.c: 90: break;
 15533  005AC4  0012               	return	
 15534  005AC6                     
 15535                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15536  005AC6  EC29  F036         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15537                           
 15538                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15539  005ACA  ECB9  F038         	call	_APP_DeviceMSDInitialize	;wreg free
 15540                           
 15541                           ;usb_events.c: 100: break;
 15542                           
 15543                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15544                           
 15545                           ;usb_events.c: 97: break;
 15546  005ACE  0012               	return	
 15547  005AD0                     
 15548                           ;usb_events.c: 105: USBCheckHIDRequest();
 15549  005AD0  EC33  F021         	call	_USBCheckHIDRequest	;wreg free
 15550                           
 15551                           ;usb_events.c: 108: USBCheckMSDRequest();
 15552  005AD4  ECB6  F026         	call	_USBCheckMSDRequest	;wreg free
 15553                           
 15554                           ;usb_events.c: 112: break;
 15555                           
 15556                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 15557                           
 15558                           ;usb_events.c: 109: break;
 15559  005AD8  0012               	return	
 15560  005ADA                     
 15561                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 15562  005ADA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 15563  005ADE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 15564  005AE2  EC50  F032         	call	_MSDTransferTerminated	;wreg free
 15565                           
 15566                           ;usb_events.c: 129: }
 15567                           
 15568                           ;usb_events.c: 128: break;
 15569                           
 15570                           ;usb_events.c: 127: default:
 15571                           
 15572                           ;usb_events.c: 125: break;
 15573  005AE6  0012               	return	
 15574  005AE8                     l800:
 15575  005AE8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15576  005AEC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15577                           
 15578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15579                           ; Switch size 1, requested type "space"
 15580                           ; Number of cases is 2, Range of values is 0 to 127
 15581                           ; switch strategies available:
 15582                           ; Name         Instructions Cycles
 15583                           ; simple_byte            7     4 (average)
 15584                           ;	Chosen strategy is simple_byte
 15585  005AF0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15586  005AF2  0A00               	xorlw	0	; case 0
 15587  005AF4  B4D8               	btfsc	status,2,c
 15588  005AF6  D004               	goto	l15333
 15589  005AF8  0A7F               	xorlw	127	; case 127
 15590  005AFA  A4D8               	btfss	status,2,c
 15591  005AFC  0012               	return	
 15592  005AFE  D01A               	goto	l15335
 15593  005B00                     l15333:
 15594                           
 15595                           ; Switch size 1, requested type "space"
 15596                           ; Number of cases is 8, Range of values is 1 to 117
 15597                           ; switch strategies available:
 15598                           ; Name         Instructions Cycles
 15599                           ; simple_byte           25    13 (average)
 15600                           ;	Chosen strategy is simple_byte
 15601  005B00  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15602  005B02  0A01               	xorlw	1	; case 1
 15603  005B04  B4D8               	btfsc	status,2,c
 15604  005B06  D7DF               	goto	l806
 15605  005B08  0A03               	xorlw	3	; case 2
 15606  005B0A  B4D8               	btfsc	status,2,c
 15607  005B0C  0012               	return	
 15608  005B0E  0A01               	xorlw	1	; case 3
 15609  005B10  B4D8               	btfsc	status,2,c
 15610  005B12  D7DE               	goto	l808
 15611  005B14  0A06               	xorlw	6	; case 5
 15612  005B16  B4D8               	btfsc	status,2,c
 15613  005B18  D7E0               	goto	l810
 15614  005B1A  0A77               	xorlw	119	; case 114
 15615  005B1C  B4D8               	btfsc	status,2,c
 15616  005B1E  0012               	return	
 15617  005B20  0A01               	xorlw	1	; case 115
 15618  005B22  B4D8               	btfsc	status,2,c
 15619  005B24  0012               	return	
 15620  005B26  0A07               	xorlw	7	; case 116
 15621  005B28  B4D8               	btfsc	status,2,c
 15622  005B2A  D7C9               	goto	l805
 15623  005B2C  0A01               	xorlw	1	; case 117
 15624  005B2E  A4D8               	btfss	status,2,c
 15625  005B30  0012               	return	
 15626  005B32  D7C1               	goto	l804
 15627  005B34                     l15335:
 15628                           
 15629                           ; Switch size 1, requested type "space"
 15630                           ; Number of cases is 1, Range of values is 255 to 255
 15631                           ; switch strategies available:
 15632                           ; Name         Instructions Cycles
 15633                           ; simple_byte            4     3 (average)
 15634                           ;	Chosen strategy is simple_byte
 15635  005B34  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15636  005B36  0AFF               	xorlw	255	; case 255
 15637  005B38  0012               	return	
 15638  005B3A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15639                           	opt stack 0
 15640                           tblptru	equ	0xFF8
 15641                           tblptrh	equ	0xFF7
 15642                           tblptrl	equ	0xFF6
 15643                           tablat	equ	0xFF5
 15644                           prodh	equ	0xFF4
 15645                           prodl	equ	0xFF3
 15646                           intcon	equ	0xFF2
 15647                           intcon2	equ	0xFF1
 15648                           intcon3	equ	0xFF0
 15649                           indf0	equ	0xFEF
 15650                           postinc0	equ	0xFEE
 15651                           fsr0h	equ	0xFEA
 15652                           fsr0l	equ	0xFE9
 15653                           wreg	equ	0xFE8
 15654                           indf1	equ	0xFE7
 15655                           postdec1	equ	0xFE5
 15656                           plusw1	equ	0xFE3
 15657                           fsr1h	equ	0xFE2
 15658                           fsr1l	equ	0xFE1
 15659                           indf2	equ	0xFDF
 15660                           postinc2	equ	0xFDE
 15661                           postdec2	equ	0xFDD
 15662                           plusw2	equ	0xFDB
 15663                           fsr2h	equ	0xFDA
 15664                           fsr2l	equ	0xFD9
 15665                           status	equ	0xFD8
 15666                           
 15667 ;; *************** function _USBCheckMSDRequest *****************
 15668 ;; Defined at:
 15669 ;;		line 218 in file "usb_device_msd.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;		None
 15672 ;; Auto vars:     Size  Location     Type
 15673 ;;		None
 15674 ;; Return value:  Size  Location     Type
 15675 ;;                  1    wreg      void 
 15676 ;; Registers used:
 15677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15678 ;; Tracked objects:
 15679 ;;		On entry : 0/0
 15680 ;;		On exit  : 0/0
 15681 ;;		Unchanged: 0/0
 15682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15684 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15687 ;;Total ram usage:        4 bytes
 15688 ;; Hardware stack levels used:    1
 15689 ;; Hardware stack levels required when called:    1
 15690 ;; This function calls:
 15691 ;;		_USBTransferOnePacket
 15692 ;; This function is called by:
 15693 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15694 ;; This function uses a non-reentrant model
 15695 ;;
 15696                           
 15697                           	psect	text76
 15698  004D6C                     __ptext76:
 15699                           	opt stack 0
 15700  004D6C                     _USBCheckMSDRequest:
 15701                           	opt stack 27
 15702                           
 15703                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 15704                           
 15705                           ;incstack = 0
 15706  004D6C  010D               	movlb	13	; () banked
 15707  004D6E  5130               	movf	48,w,b	;volatile
 15708  004D70  0B1F               	andlw	31
 15709  004D72  06E8               	decf	wreg,f,c
 15710  004D74  A4D8               	btfss	status,2,c
 15711  004D76  0012               	return	
 15712                           
 15713                           ; BSR set to: 13
 15714                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 15715                           
 15716                           ; BSR set to: 13
 15717                           
 15718                           ; BSR set to: 13
 15719                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 15720  004D78  5134               	movf	52,w,b	;volatile
 15721  004D7A  A4D8               	btfss	status,2,c
 15722  004D7C  0012               	return	
 15723  004D7E  D04E               	goto	l529
 15724  004D80                     
 15725                           ; BSR set to: 13
 15726                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 15727                           
 15728                           ; BSR set to: 13
 15729  004D80  5132               	movf	50,w,b	;volatile
 15730  004D82  1133               	iorwf	51,w,b	;volatile
 15731  004D84  A4D8               	btfss	status,2,c
 15732  004D86  0012               	return	
 15733                           
 15734                           ; BSR set to: 13
 15735  004D88  5136               	movf	54,w,b	;volatile
 15736  004D8A  1137               	iorwf	55,w,b	;volatile
 15737  004D8C  A4D8               	btfss	status,2,c
 15738  004D8E  0012               	return	
 15739                           
 15740                           ; BSR set to: 13
 15741                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 15742                           
 15743                           ; BSR set to: 13
 15744                           
 15745                           ; BSR set to: 13
 15746                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 15747  004D90  0E00               	movlw	0
 15748  004D92  0100               	movlb	0	; () banked
 15749  004D94  6FA0               	movwf	_MSD_State& (0+255),b
 15750                           
 15751                           ; BSR set to: 0
 15752                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 15753  004D96  699F               	setf	_MSDCommandState& (0+255),b
 15754                           
 15755                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 15756  004D98  0E00               	movlw	0
 15757  004D9A  6F9E               	movwf	_MSDReadState& (0+255),b
 15758                           
 15759                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 15760  004D9C  0E00               	movlw	0
 15761  004D9E  6F9D               	movwf	_MSDWriteState& (0+255),b
 15762                           
 15763                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 15764  004DA0  0E01               	movlw	1
 15765  004DA2  6F98               	movwf	_MSDCBWValid& (0+255),b
 15766                           
 15767                           ; BSR set to: 0
 15768                           
 15769                           ; BSR set to: 0
 15770                           
 15771                           ; BSR set to: 0
 15772                           
 15773                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 15774  004DA4  C07C  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 15775  004DA8  C07D  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 15776                           
 15777                           ; BSR set to: 0
 15778  004DAC  500C               	movf	_USBCheckMSDRequest$2319,w,c
 15779  004DAE  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 15780  004DB0  B4D8               	btfsc	status,2,c
 15781  004DB2  D00A               	goto	u7370
 15782                           
 15783                           ; BSR set to: 0
 15784                           
 15785                           ; BSR set to: 0
 15786                           
 15787                           ; BSR set to: 0
 15788                           
 15789                           ; BSR set to: 0
 15790  004DB4  C07C  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 15791  004DB8  C07D  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 15792                           
 15793                           ; BSR set to: 0
 15794                           
 15795                           ; BSR set to: 0
 15796  004DBC  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 15797  004DC0  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 15798  004DC4  BEDF               	btfsc	indf2,7,c
 15799  004DC6  D00F               	goto	l534
 15800  004DC8                     u7370:
 15801                           
 15802                           ; BSR set to: 0
 15803                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 15804                           
 15805                           ; BSR set to: 0
 15806  004DC8  0E00               	movlw	0
 15807  004DCA  6E01               	movwf	USBTransferOnePacket@dir,c
 15808  004DCC  0E40               	movlw	64
 15809  004DCE  6E02               	movwf	USBTransferOnePacket@data,c
 15810  004DD0  0E0D               	movlw	13
 15811  004DD2  6E03               	movwf	USBTransferOnePacket@data+1,c
 15812  004DD4  0E40               	movlw	64
 15813  004DD6  6E04               	movwf	USBTransferOnePacket@len,c
 15814  004DD8  0E02               	movlw	2
 15815  004DDA  ECC4  F01E         	call	_USBTransferOnePacket
 15816  004DDE  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15817  004DE2  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15818  004DE6                     l534:
 15819                           
 15820                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 15821  004DE6  0E80               	movlw	128
 15822  004DE8  0100               	movlb	0	; () banked
 15823  004DEA  6F6F               	movwf	(_inPipes+3)& (0+255),b
 15824                           
 15825                           ;usb_device_msd.c: 263: break;
 15826  004DEC  0012               	return	
 15827  004DEE                     
 15828                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 15829                           
 15830                           ; BSR set to: 0
 15831  004DEE  010D               	movlb	13	; () banked
 15832  004DF0  5132               	movf	50,w,b	;volatile
 15833  004DF2  1133               	iorwf	51,w,b	;volatile
 15834  004DF4  A4D8               	btfss	status,2,c
 15835  004DF6  0012               	return	
 15836                           
 15837                           ; BSR set to: 13
 15838  004DF8  0536               	decf	54,w,b	;volatile
 15839  004DFA  1137               	iorwf	55,w,b	;volatile
 15840  004DFC  A4D8               	btfss	status,2,c
 15841  004DFE  0012               	return	
 15842                           
 15843                           ; BSR set to: 13
 15844                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 15845                           
 15846                           ; BSR set to: 13
 15847                           
 15848                           ; BSR set to: 13
 15849                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 15850  004E00  0E00               	movlw	0
 15851  004E02  6F38               	movwf	56,b	;volatile
 15852                           
 15853                           ; BSR set to: 13
 15854                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15855  004E04  0E38               	movlw	56
 15856  004E06  0100               	movlb	0	; () banked
 15857  004E08  6F6C               	movwf	_inPipes& (0+255),b
 15858  004E0A  0E0D               	movlw	13
 15859  004E0C  6F6D               	movwf	(_inPipes+1)& (0+255),b
 15860                           
 15861                           ; BSR set to: 0
 15862  004E0E  0E00               	movlw	0
 15863  004E10  6F71               	movwf	(_inPipes+5)& (0+255),b
 15864  004E12  0E01               	movlw	1
 15865  004E14  6F70               	movwf	(_inPipes+4)& (0+255),b
 15866                           
 15867                           ; BSR set to: 0
 15868  004E16  0EC1               	movlw	193
 15869  004E18  6F6F               	movwf	(_inPipes+3)& (0+255),b
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;usb_device_msd.c: 278: }
 15873                           
 15874                           ;usb_device_msd.c: 277: break;
 15875  004E1A  0012               	return	
 15876  004E1C                     l529:
 15877                           
 15878                           ; BSR set to: 0
 15879  004E1C  010D               	movlb	13	; () banked
 15880  004E1E  5131               	movf	49,w,b	;volatile
 15881                           
 15882                           ; Switch size 1, requested type "space"
 15883                           ; Number of cases is 2, Range of values is 254 to 255
 15884                           ; switch strategies available:
 15885                           ; Name         Instructions Cycles
 15886                           ; simple_byte            7     4 (average)
 15887                           ;	Chosen strategy is simple_byte
 15888  004E20  0AFE               	xorlw	254	; case 254
 15889  004E22  B4D8               	btfsc	status,2,c
 15890  004E24  D7E4               	goto	l546
 15891  004E26  0A01               	xorlw	1	; case 255
 15892  004E28  A4D8               	btfss	status,2,c
 15893  004E2A  0012               	return	
 15894  004E2C  D7A9               	goto	l530
 15895  004E2E                     __end_of_USBCheckMSDRequest:
 15896                           	opt stack 0
 15897                           tblptru	equ	0xFF8
 15898                           tblptrh	equ	0xFF7
 15899                           tblptrl	equ	0xFF6
 15900                           tablat	equ	0xFF5
 15901                           prodh	equ	0xFF4
 15902                           prodl	equ	0xFF3
 15903                           intcon	equ	0xFF2
 15904                           intcon2	equ	0xFF1
 15905                           intcon3	equ	0xFF0
 15906                           indf0	equ	0xFEF
 15907                           postinc0	equ	0xFEE
 15908                           fsr0h	equ	0xFEA
 15909                           fsr0l	equ	0xFE9
 15910                           wreg	equ	0xFE8
 15911                           indf1	equ	0xFE7
 15912                           postdec1	equ	0xFE5
 15913                           plusw1	equ	0xFE3
 15914                           fsr1h	equ	0xFE2
 15915                           fsr1l	equ	0xFE1
 15916                           indf2	equ	0xFDF
 15917                           postinc2	equ	0xFDE
 15918                           postdec2	equ	0xFDD
 15919                           plusw2	equ	0xFDB
 15920                           fsr2h	equ	0xFDA
 15921                           fsr2l	equ	0xFD9
 15922                           status	equ	0xFD8
 15923                           
 15924 ;; *************** function _USBCheckHIDRequest *****************
 15925 ;; Defined at:
 15926 ;;		line 153 in file "usb_device_hid.c"
 15927 ;; Parameters:    Size  Location     Type
 15928 ;;		None
 15929 ;; Auto vars:     Size  Location     Type
 15930 ;;		None
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  1    wreg      void 
 15933 ;; Registers used:
 15934 ;;		wreg, status,2, status,0
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15944 ;;Total ram usage:        0 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; This function calls:
 15947 ;;		Nothing
 15948 ;; This function is called by:
 15949 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           	psect	text77
 15954  004266                     __ptext77:
 15955                           	opt stack 0
 15956  004266                     _USBCheckHIDRequest:
 15957                           	opt stack 28
 15958                           
 15959                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15960                           
 15961                           ;incstack = 0
 15962  004266  010D               	movlb	13	; () banked
 15963  004268  5130               	movf	48,w,b	;volatile
 15964  00426A  0B1F               	andlw	31
 15965  00426C  06E8               	decf	wreg,f,c
 15966  00426E  A4D8               	btfss	status,2,c
 15967  004270  0012               	return	
 15968                           
 15969                           ; BSR set to: 13
 15970                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15971                           
 15972                           ; BSR set to: 13
 15973                           
 15974                           ; BSR set to: 13
 15975  004272  5134               	movf	52,w,b	;volatile
 15976  004274  A4D8               	btfss	status,2,c
 15977  004276  0012               	return	
 15978                           
 15979                           ; BSR set to: 13
 15980                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15981                           
 15982                           ; BSR set to: 13
 15983                           
 15984                           ; BSR set to: 13
 15985  004278  0E06               	movlw	6
 15986  00427A  1931               	xorwf	49,w,b	;volatile
 15987  00427C  B4D8               	btfsc	status,2,c
 15988  00427E  D01A               	goto	l411
 15989  004280  D022               	goto	l414
 15990  004282                     
 15991                           ; BSR set to: 13
 15992                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15993                           
 15994                           ; BSR set to: 13
 15995  004282  0100               	movlb	0	; () banked
 15996  004284  05B5               	decf	_USBActiveConfiguration& (0+255),w,b
 15997  004286  A4D8               	btfss	status,2,c
 15998  004288  D01E               	goto	l414
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16002  00428A  0EB9               	movlw	low (_configDescriptor1+18)
 16003  00428C  6F6C               	movwf	_inPipes& (0+255),b
 16004  00428E  0E8E               	movlw	high (_configDescriptor1+18)
 16005  004290  6F6D               	movwf	(_inPipes+1)& (0+255),b
 16006                           
 16007                           ; BSR set to: 0
 16008  004292  0E00               	movlw	0
 16009  004294  6F71               	movwf	(_inPipes+5)& (0+255),b
 16010  004296  0E09               	movlw	9
 16011  004298  D00B               	goto	L14
 16012  00429A                     l10101:
 16013                           
 16014                           ; BSR set to: 0
 16015  00429A  0EC0               	movlw	192
 16016  00429C  6F6F               	movwf	(_inPipes+3)& (0+255),b
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16020  00429E  D013               	goto	l414
 16021  0042A0                     
 16022                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16023                           
 16024                           ; BSR set to: 0
 16025  0042A0  0E6D               	movlw	low _hid_rpt01
 16026  0042A2  0100               	movlb	0	; () banked
 16027  0042A4  6F6C               	movwf	_inPipes& (0+255),b
 16028  0042A6  0E8F               	movlw	high _hid_rpt01
 16029  0042A8  6F6D               	movwf	(_inPipes+1)& (0+255),b
 16030                           
 16031                           ; BSR set to: 0
 16032  0042AA  0E00               	movlw	0
 16033  0042AC  6F71               	movwf	(_inPipes+5)& (0+255),b
 16034  0042AE  0E1D               	movlw	29
 16035  0042B0                     L14:
 16036  0042B0  6F70               	movwf	(_inPipes+4)& (0+255),b
 16037  0042B2  D7F3               	goto	l10101
 16038  0042B4                     l411:
 16039                           
 16040                           ; BSR set to: 0
 16041  0042B4  010D               	movlb	13	; () banked
 16042  0042B6  5133               	movf	51,w,b	;volatile
 16043                           
 16044                           ; Switch size 1, requested type "space"
 16045                           ; Number of cases is 3, Range of values is 33 to 35
 16046                           ; switch strategies available:
 16047                           ; Name         Instructions Cycles
 16048                           ; simple_byte           10     6 (average)
 16049                           ;	Chosen strategy is simple_byte
 16050  0042B8  0A21               	xorlw	33	; case 33
 16051  0042BA  B4D8               	btfsc	status,2,c
 16052  0042BC  D7E2               	goto	l412
 16053  0042BE  0A03               	xorlw	3	; case 34
 16054  0042C0  B4D8               	btfsc	status,2,c
 16055  0042C2  D7EE               	goto	l415
 16056  0042C4  0A01               	xorlw	1	; case 35
 16057  0042C6                     l414:
 16058                           
 16059                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16060                           
 16061                           ; BSR set to: 13
 16062                           
 16063                           ; BSR set to: 13
 16064  0042C6  010D               	movlb	13	; () banked
 16065  0042C8  3930               	swapf	48,w,b	;volatile
 16066  0042CA  32E8               	rrcf	wreg,f,c
 16067  0042CC  0B03               	andlw	3
 16068  0042CE  06E8               	decf	wreg,f,c
 16069  0042D0  A4D8               	btfss	status,2,c
 16070  0042D2  0012               	return	
 16071  0042D4  D024               	goto	l418
 16072  0042D6                     
 16073                           ; BSR set to: 13
 16074                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16075                           
 16076                           ; BSR set to: 13
 16077  0042D6  0EB3               	movlw	low _idle_rate
 16078  0042D8  0100               	movlb	0	; () banked
 16079  0042DA  6F6C               	movwf	_inPipes& (0+255),b
 16080  0042DC  0E00               	movlw	high _idle_rate
 16081  0042DE  6F6D               	movwf	(_inPipes+1)& (0+255),b
 16082                           
 16083                           ; BSR set to: 0
 16084  0042E0  0E00               	movlw	0
 16085  0042E2  6F71               	movwf	(_inPipes+5)& (0+255),b
 16086  0042E4  0E01               	movlw	1
 16087  0042E6  6F70               	movwf	(_inPipes+4)& (0+255),b
 16088                           
 16089                           ; BSR set to: 0
 16090  0042E8  0EC1               	movlw	193
 16091  0042EA  6F6F               	movwf	(_inPipes+3)& (0+255),b
 16092                           
 16093                           ;usb_device_hid.c: 223: break;
 16094  0042EC  0012               	return	
 16095  0042EE                     
 16096                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16097                           
 16098                           ; BSR set to: 0
 16099  0042EE  0E80               	movlw	128
 16100  0042F0  0100               	movlb	0	; () banked
 16101  0042F2  6F6F               	movwf	(_inPipes+3)& (0+255),b
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16105  0042F4  CD33 F0B3          	movff	3379,_idle_rate	;volatile
 16106                           
 16107                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16108  0042F8  0012               	return	
 16109  0042FA                     
 16110                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16111                           
 16112                           ; BSR set to: 0
 16113  0042FA  0EB2               	movlw	low _active_protocol
 16114  0042FC  0100               	movlb	0	; () banked
 16115  0042FE  6F6C               	movwf	_inPipes& (0+255),b
 16116  004300  0E00               	movlw	high _active_protocol
 16117  004302  6F6D               	movwf	(_inPipes+1)& (0+255),b
 16118                           
 16119                           ; BSR set to: 0
 16120  004304  0E00               	movlw	0
 16121  004306  6F71               	movwf	(_inPipes+5)& (0+255),b
 16122  004308  0E01               	movlw	1
 16123  00430A  6F70               	movwf	(_inPipes+4)& (0+255),b
 16124                           
 16125                           ; BSR set to: 0
 16126  00430C  0E81               	movlw	129
 16127  00430E  6F6F               	movwf	(_inPipes+3)& (0+255),b
 16128                           
 16129                           ;usb_device_hid.c: 234: break;
 16130  004310  0012               	return	
 16131  004312                     
 16132                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16133                           
 16134                           ; BSR set to: 0
 16135  004312  0E80               	movlw	128
 16136  004314  0100               	movlb	0	; () banked
 16137  004316  6F6F               	movwf	(_inPipes+3)& (0+255),b
 16138                           
 16139                           ; BSR set to: 0
 16140                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16141  004318  CD32 F0B2          	movff	3378,_active_protocol	;volatile
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;usb_device_hid.c: 239: }
 16145                           
 16146                           ;usb_device_hid.c: 238: break;
 16147  00431C  0012               	return	
 16148  00431E                     l418:
 16149                           
 16150                           ; BSR set to: 0
 16151  00431E  010D               	movlb	13	; () banked
 16152  004320  5131               	movf	49,w,b	;volatile
 16153                           
 16154                           ; Switch size 1, requested type "space"
 16155                           ; Number of cases is 6, Range of values is 1 to 11
 16156                           ; switch strategies available:
 16157                           ; Name         Instructions Cycles
 16158                           ; simple_byte           19    10 (average)
 16159                           ;	Chosen strategy is simple_byte
 16160  004322  0A01               	xorlw	1	; case 1
 16161  004324  B4D8               	btfsc	status,2,c
 16162  004326  0012               	return	
 16163  004328  0A03               	xorlw	3	; case 2
 16164  00432A  B4D8               	btfsc	status,2,c
 16165  00432C  D7D4               	goto	l422
 16166  00432E  0A01               	xorlw	1	; case 3
 16167  004330  B4D8               	btfsc	status,2,c
 16168  004332  D7E3               	goto	l424
 16169  004334  0A0A               	xorlw	10	; case 9
 16170  004336  B4D8               	btfsc	status,2,c
 16171  004338  0012               	return	
 16172  00433A  0A03               	xorlw	3	; case 10
 16173  00433C  B4D8               	btfsc	status,2,c
 16174  00433E  D7D7               	goto	l423
 16175  004340  0A01               	xorlw	1	; case 11
 16176  004342  A4D8               	btfss	status,2,c
 16177  004344  0012               	return	
 16178  004346  D7E5               	goto	l425
 16179  004348                     __end_of_USBCheckHIDRequest:
 16180                           	opt stack 0
 16181                           tblptru	equ	0xFF8
 16182                           tblptrh	equ	0xFF7
 16183                           tblptrl	equ	0xFF6
 16184                           tablat	equ	0xFF5
 16185                           prodh	equ	0xFF4
 16186                           prodl	equ	0xFF3
 16187                           intcon	equ	0xFF2
 16188                           intcon2	equ	0xFF1
 16189                           intcon3	equ	0xFF0
 16190                           indf0	equ	0xFEF
 16191                           postinc0	equ	0xFEE
 16192                           fsr0h	equ	0xFEA
 16193                           fsr0l	equ	0xFE9
 16194                           wreg	equ	0xFE8
 16195                           indf1	equ	0xFE7
 16196                           postdec1	equ	0xFE5
 16197                           plusw1	equ	0xFE3
 16198                           fsr1h	equ	0xFE2
 16199                           fsr1l	equ	0xFE1
 16200                           indf2	equ	0xFDF
 16201                           postinc2	equ	0xFDE
 16202                           postdec2	equ	0xFDD
 16203                           plusw2	equ	0xFDB
 16204                           fsr2h	equ	0xFDA
 16205                           fsr2l	equ	0xFD9
 16206                           status	equ	0xFD8
 16207                           
 16208 ;; *************** function _SYSTEM_Initialize *****************
 16209 ;; Defined at:
 16210 ;;		line 37 in file "system.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;  state           1    wreg     enum E6623
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;  state           1    4[COMRAM] enum E6623
 16215 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16216 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  1    wreg      void 
 16219 ;; Registers used:
 16220 ;;		wreg, status,2, status,0
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/0
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16227 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16229 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16230 ;;Total ram usage:        5 bytes
 16231 ;; Hardware stack levels used:    1
 16232 ;; This function calls:
 16233 ;;		Nothing
 16234 ;; This function is called by:
 16235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16236 ;;		_main
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           	psect	text78
 16241  00664C                     __ptext78:
 16242                           	opt stack 0
 16243  00664C                     _SYSTEM_Initialize:
 16244                           	opt stack 28
 16245                           
 16246                           ;incstack = 0
 16247                           ;SYSTEM_Initialize@state stored from wreg
 16248  00664C  6E05               	movwf	SYSTEM_Initialize@state,c
 16249                           
 16250                           ;system.c: 39: switch(state)
 16251  00664E  D01D               	goto	l892
 16252  006650                     
 16253                           ;system.c: 48: {;system.c: 49: unsigned int pll_startup_counter = 600;
 16254  006650  0E02               	movlw	2
 16255  006652  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 16256  006654  0E58               	movlw	88
 16257  006656  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 16258                           
 16259                           ;system.c: 50: OSCTUNEbits.PLLEN = 1;
 16260  006658  8C9B               	bsf	3995,6,c	;volatile
 16261  00665A                     l10287:
 16262  00665A  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 16263  00665C  A0D8               	btfss	status,0,c
 16264  00665E  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 16265  006660  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 16266  006662  E1FB               	bnz	l10287
 16267  006664  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 16268  006666  B4D8               	btfsc	status,2,c
 16269  006668  0012               	return	
 16270  00666A  D7F7               	goto	l895
 16271  00666C                     
 16272                           ;system.c: 76: OSCCON = 0x70;
 16273  00666C  0E70               	movlw	112
 16274  00666E  6ED3               	movwf	4051,c	;volatile
 16275                           
 16276                           ;system.c: 82: {;system.c: 83: unsigned int pll_startup_counter = 800;
 16277  006670  0E03               	movlw	3
 16278  006672  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2860+1,c
 16279  006674  0E20               	movlw	32
 16280  006676  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2860,c
 16281  006678                     l10291:
 16282  006678  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2860,f,c
 16283  00667A  A0D8               	btfss	status,0,c
 16284  00667C  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2860+1,f,c
 16285  00667E  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2860,w,c
 16286  006680  E1FB               	bnz	l10291
 16287  006682  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2860+1,w,c
 16288  006684  B4D8               	btfsc	status,2,c
 16289  006686  0012               	return	
 16290  006688  D7F7               	goto	l901
 16291  00668A                     l892:
 16292  00668A  5005               	movf	SYSTEM_Initialize@state,w,c
 16293                           
 16294                           ; Switch size 1, requested type "space"
 16295                           ; Number of cases is 3, Range of values is 0 to 2
 16296                           ; switch strategies available:
 16297                           ; Name         Instructions Cycles
 16298                           ; simple_byte           10     6 (average)
 16299                           ;	Chosen strategy is simple_byte
 16300  00668C  0A00               	xorlw	0	; case 0
 16301  00668E  B4D8               	btfsc	status,2,c
 16302  006690  D7DF               	goto	l893
 16303  006692  0A01               	xorlw	1	; case 1
 16304  006694  B4D8               	btfsc	status,2,c
 16305  006696  0012               	return	
 16306  006698  0A03               	xorlw	3	; case 2
 16307  00669A  A4D8               	btfss	status,2,c
 16308  00669C  0012               	return	
 16309  00669E  D7E6               	goto	l899
 16310  0066A0                     __end_of_SYSTEM_Initialize:
 16311                           	opt stack 0
 16312                           tblptru	equ	0xFF8
 16313                           tblptrh	equ	0xFF7
 16314                           tblptrl	equ	0xFF6
 16315                           tablat	equ	0xFF5
 16316                           prodh	equ	0xFF4
 16317                           prodl	equ	0xFF3
 16318                           intcon	equ	0xFF2
 16319                           intcon2	equ	0xFF1
 16320                           intcon3	equ	0xFF0
 16321                           indf0	equ	0xFEF
 16322                           postinc0	equ	0xFEE
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postdec1	equ	0xFE5
 16328                           plusw1	equ	0xFE3
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           plusw2	equ	0xFDB
 16335                           fsr2h	equ	0xFDA
 16336                           fsr2l	equ	0xFD9
 16337                           status	equ	0xFD8
 16338                           
 16339 ;; *************** function _MSDTransferTerminated *****************
 16340 ;; Defined at:
 16341 ;;		line 1674 in file "usb_device_msd.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  handle          2   11[COMRAM] PTR void 
 16344 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16345 ;;		 -> BDT(48), 
 16346 ;; Auto vars:     Size  Location     Type
 16347 ;;		None
 16348 ;; Return value:  Size  Location     Type
 16349 ;;                  1    wreg      void 
 16350 ;; Registers used:
 16351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16352 ;; Tracked objects:
 16353 ;;		On entry : 0/0
 16354 ;;		On exit  : 0/0
 16355 ;;		Unchanged: 0/0
 16356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16361 ;;Total ram usage:        4 bytes
 16362 ;; Hardware stack levels used:    1
 16363 ;; Hardware stack levels required when called:    1
 16364 ;; This function calls:
 16365 ;;		_USBStallEndpoint
 16366 ;;		_USBTransferOnePacket
 16367 ;; This function is called by:
 16368 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16369 ;; This function uses a non-reentrant model
 16370 ;;
 16371                           
 16372                           	psect	text79
 16373  0064A0                     __ptext79:
 16374                           	opt stack 0
 16375  0064A0                     _MSDTransferTerminated:
 16376                           	opt stack 27
 16377                           
 16378                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 16379                           
 16380                           ;incstack = 0
 16381  0064A0  0100               	movlb	0	; () banked
 16382  0064A2  5198               	movf	_MSDCBWValid& (0+255),w,b
 16383  0064A4  A4D8               	btfss	status,2,c
 16384  0064A6  D00B               	goto	l764
 16385                           
 16386                           ; BSR set to: 0
 16387                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 16388  0064A8  0E01               	movlw	1
 16389  0064AA  6E01               	movwf	USBStallEndpoint@dir,c
 16390  0064AC  0E02               	movlw	2
 16391  0064AE  EC3A  F01D         	call	_USBStallEndpoint
 16392                           
 16393                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 16394  0064B2  0E00               	movlw	0
 16395  0064B4  6E01               	movwf	USBStallEndpoint@dir,c
 16396  0064B6  0E02               	movlw	2
 16397  0064B8  EC3A  F01D         	call	_USBStallEndpoint
 16398                           
 16399                           ;usb_device_msd.c: 1681: }
 16400  0064BC  0012               	return	
 16401  0064BE                     l764:
 16402  0064BE  C07C  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 16403  0064C2  C07D  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 16404  0064C6  500E               	movf	_MSDTransferTerminated$2407,w,c
 16405  0064C8  180C               	xorwf	MSDTransferTerminated@handle,w,c
 16406  0064CA  E114               	bnz	l767
 16407  0064CC  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 16408  0064CE  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 16409  0064D0  A4D8               	btfss	status,2,c
 16410  0064D2  0012               	return	
 16411                           
 16412                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 16413  0064D4  0E00               	movlw	0
 16414  0064D6  6E01               	movwf	USBTransferOnePacket@dir,c
 16415  0064D8  0E40               	movlw	64
 16416  0064DA  6E02               	movwf	USBTransferOnePacket@data,c
 16417  0064DC  0E0D               	movlw	13
 16418  0064DE  6E03               	movwf	USBTransferOnePacket@data+1,c
 16419  0064E0  0E40               	movlw	64
 16420  0064E2  6E04               	movwf	USBTransferOnePacket@len,c
 16421  0064E4  0E02               	movlw	2
 16422  0064E6  ECC4  F01E         	call	_USBTransferOnePacket
 16423  0064EA  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16424  0064EE  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16425  0064F2  0012               	return	
 16426  0064F4                     l767:
 16427  0064F4  0012               	return		;funcret
 16428  0064F6                     __end_of_MSDTransferTerminated:
 16429                           	opt stack 0
 16430                           tblptru	equ	0xFF8
 16431                           tblptrh	equ	0xFF7
 16432                           tblptrl	equ	0xFF6
 16433                           tablat	equ	0xFF5
 16434                           prodh	equ	0xFF4
 16435                           prodl	equ	0xFF3
 16436                           intcon	equ	0xFF2
 16437                           intcon2	equ	0xFF1
 16438                           intcon3	equ	0xFF0
 16439                           indf0	equ	0xFEF
 16440                           postinc0	equ	0xFEE
 16441                           fsr0h	equ	0xFEA
 16442                           fsr0l	equ	0xFE9
 16443                           wreg	equ	0xFE8
 16444                           indf1	equ	0xFE7
 16445                           postdec1	equ	0xFE5
 16446                           plusw1	equ	0xFE3
 16447                           fsr1h	equ	0xFE2
 16448                           fsr1l	equ	0xFE1
 16449                           indf2	equ	0xFDF
 16450                           postinc2	equ	0xFDE
 16451                           postdec2	equ	0xFDD
 16452                           plusw2	equ	0xFDB
 16453                           fsr2h	equ	0xFDA
 16454                           fsr2l	equ	0xFD9
 16455                           status	equ	0xFD8
 16456                           
 16457 ;; *************** function _APP_DeviceMSDInitialize *****************
 16458 ;; Defined at:
 16459 ;;		line 84 in file "app_device_msd.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;		None
 16462 ;; Auto vars:     Size  Location     Type
 16463 ;;		None
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  1    wreg      void 
 16466 ;; Registers used:
 16467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16468 ;; Tracked objects:
 16469 ;;		On entry : 0/0
 16470 ;;		On exit  : 0/0
 16471 ;;		Unchanged: 0/0
 16472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16477 ;;Total ram usage:        0 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:    2
 16480 ;; This function calls:
 16481 ;;		_USBEnableEndpoint
 16482 ;;		_USBMSDInit
 16483 ;; This function is called by:
 16484 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16485 ;; This function uses a non-reentrant model
 16486 ;;
 16487                           
 16488                           	psect	text80
 16489  007172                     __ptext80:
 16490                           	opt stack 0
 16491  007172                     _APP_DeviceMSDInitialize:
 16492                           	opt stack 26
 16493                           
 16494                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 16495                           
 16496                           ;incstack = 0
 16497  007172  0E1E               	movlw	30
 16498  007174  6E09               	movwf	USBEnableEndpoint@options,c
 16499  007176  0E02               	movlw	2
 16500  007178  EC64  F035         	call	_USBEnableEndpoint
 16501                           
 16502                           ;app_device_msd.c: 93: USBMSDInit();
 16503  00717C  ECBE  F01D         	call	_USBMSDInit	;wreg free
 16504  007180  0012               	return		;funcret
 16505  007182                     __end_of_APP_DeviceMSDInitialize:
 16506                           	opt stack 0
 16507                           tblptru	equ	0xFF8
 16508                           tblptrh	equ	0xFF7
 16509                           tblptrl	equ	0xFF6
 16510                           tablat	equ	0xFF5
 16511                           prodh	equ	0xFF4
 16512                           prodl	equ	0xFF3
 16513                           intcon	equ	0xFF2
 16514                           intcon2	equ	0xFF1
 16515                           intcon3	equ	0xFF0
 16516                           indf0	equ	0xFEF
 16517                           postinc0	equ	0xFEE
 16518                           fsr0h	equ	0xFEA
 16519                           fsr0l	equ	0xFE9
 16520                           wreg	equ	0xFE8
 16521                           indf1	equ	0xFE7
 16522                           postdec1	equ	0xFE5
 16523                           plusw1	equ	0xFE3
 16524                           fsr1h	equ	0xFE2
 16525                           fsr1l	equ	0xFE1
 16526                           indf2	equ	0xFDF
 16527                           postinc2	equ	0xFDE
 16528                           postdec2	equ	0xFDD
 16529                           plusw2	equ	0xFDB
 16530                           fsr2h	equ	0xFDA
 16531                           fsr2l	equ	0xFD9
 16532                           status	equ	0xFD8
 16533                           
 16534 ;; *************** function _USBMSDInit *****************
 16535 ;; Defined at:
 16536 ;;		line 142 in file "usb_device_msd.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;		None
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;		None
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1    wreg      void 
 16543 ;; Registers used:
 16544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16545 ;; Tracked objects:
 16546 ;;		On entry : 0/0
 16547 ;;		On exit  : 0/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16552 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16554 ;;Total ram usage:        3 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    1
 16557 ;; This function calls:
 16558 ;;		_ExternalFlash_MediaDetect
 16559 ;;		_ExternalFlash_MediaInitialize
 16560 ;;		_ResetSenseData
 16561 ;;		_USBTransferOnePacket
 16562 ;; This function is called by:
 16563 ;;		_APP_DeviceMSDInitialize
 16564 ;; This function uses a non-reentrant model
 16565 ;;
 16566                           
 16567                           	psect	text81
 16568  003B7C                     __ptext81:
 16569                           	opt stack 0
 16570  003B7C                     _USBMSDInit:
 16571                           	opt stack 26
 16572                           
 16573                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 16574                           
 16575                           ;incstack = 0
 16576  003B7C  0E00               	movlw	0
 16577  003B7E  6E01               	movwf	USBTransferOnePacket@dir,c
 16578  003B80  0E40               	movlw	64
 16579  003B82  6E02               	movwf	USBTransferOnePacket@data,c
 16580  003B84  0E0D               	movlw	13
 16581  003B86  6E03               	movwf	USBTransferOnePacket@data+1,c
 16582  003B88  0E40               	movlw	64
 16583  003B8A  6E04               	movwf	USBTransferOnePacket@len,c
 16584  003B8C  0E02               	movlw	2
 16585  003B8E  ECC4  F01E         	call	_USBTransferOnePacket
 16586  003B92  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16587  003B96  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16588  003B9A  C076  F08C         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 16589  003B9E  C077  F08D         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 16590                           
 16591                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16592  003BA2  0E00               	movlw	0
 16593  003BA4  0100               	movlb	0	; () banked
 16594  003BA6  6FA0               	movwf	_MSD_State& (0+255),b
 16595                           
 16596                           ; BSR set to: 0
 16597                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16598  003BA8  699F               	setf	_MSDCommandState& (0+255),b
 16599                           
 16600                           ; BSR set to: 0
 16601                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16602  003BAA  0E00               	movlw	0
 16603  003BAC  6F9E               	movwf	_MSDReadState& (0+255),b
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16607  003BAE  0E00               	movlw	0
 16608  003BB0  6F9D               	movwf	_MSDWriteState& (0+255),b
 16609                           
 16610                           ; BSR set to: 0
 16611                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16612  003BB2  0E00               	movlw	0
 16613  003BB4  6F99               	movwf	_MSDHostNoData& (0+255),b
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16617  003BB6  0E00               	movlw	0
 16618  003BB8  0101               	movlb	1	; () banked
 16619  003BBA  6F49               	movwf	_gblNumBLKS& (0+255),b
 16620  003BBC  0E00               	movlw	0
 16621  003BBE  6F4A               	movwf	(_gblNumBLKS+1)& (0+255),b
 16622  003BC0  0E00               	movlw	0
 16623  003BC2  6F4B               	movwf	(_gblNumBLKS+2)& (0+255),b
 16624  003BC4  0E00               	movlw	0
 16625  003BC6  6F4C               	movwf	(_gblNumBLKS+3)& (0+255),b
 16626                           
 16627                           ; BSR set to: 1
 16628                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16629  003BC8  0E00               	movlw	0
 16630  003BCA  6F45               	movwf	_gblBLKLen& (0+255),b
 16631  003BCC  0E00               	movlw	0
 16632  003BCE  6F46               	movwf	(_gblBLKLen+1)& (0+255),b
 16633  003BD0  0E00               	movlw	0
 16634  003BD2  6F47               	movwf	(_gblBLKLen+2)& (0+255),b
 16635  003BD4  0E00               	movlw	0
 16636  003BD6  6F48               	movwf	(_gblBLKLen+3)& (0+255),b
 16637                           
 16638                           ; BSR set to: 1
 16639                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 16640  003BD8  0E01               	movlw	1
 16641  003BDA  0100               	movlb	0	; () banked
 16642  003BDC  6F98               	movwf	_MSDCBWValid& (0+255),b
 16643                           
 16644                           ; BSR set to: 0
 16645                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 16646  003BDE  0E00               	movlw	0
 16647  003BE0  0101               	movlb	1	; () banked
 16648  003BE2  6F6E               	movwf	(_gblMediaPresent+1)& (0+255),b
 16649  003BE4  0E00               	movlw	0
 16650  003BE6  6F6D               	movwf	_gblMediaPresent& (0+255),b
 16651                           
 16652                           ; BSR set to: 1
 16653                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 16654  003BE8  0E00               	movlw	0
 16655  003BEA  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 16656  003BEC  D046               	goto	l518
 16657  003BEE                     
 16658                           ; BSR set to: 1
 16659                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 16660                           
 16661                           ; BSR set to: 1
 16662  003BEE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16663  003BF0  0D01               	mullw	1
 16664  003BF2  0E9A               	movlw	low _SoftDetach
 16665  003BF4  24F3               	addwf	prodl,w,c
 16666  003BF6  6ED9               	movwf	fsr2l,c
 16667  003BF8  0E00               	movlw	high _SoftDetach
 16668  003BFA  20F4               	addwfc	prodh,w,c
 16669  003BFC  6EDA               	movwf	fsr2h,c
 16670  003BFE  0E00               	movlw	0
 16671  003C00  6EDF               	movwf	indf2,c
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 16675  003C02  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 16676  003C06  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 16677  003C0A  D801               	call	u7068
 16678  003C0C  D009               	goto	u7069
 16679  003C0E                     u7068:
 16680  003C0E  0005               	push	
 16681  003C10  6EFA               	movwf	pclath,c
 16682  003C12  51EA               	movf	(_LUN+6)& (0+255),w,b
 16683  003C14  6EFD               	movwf	tosl,c
 16684  003C16  51EB               	movf	(_LUN+7)& (0+255),w,b
 16685  003C18  6EFE               	movwf	tosh,c
 16686  003C1A  6AFF               	clrf	tosu,c
 16687  003C1C  50FA               	movf	pclath,w,c
 16688  003C1E  0012               	return		;indir
 16689  003C20                     u7069:
 16690  003C20  0900               	iorlw	0
 16691  003C22  B4D8               	btfsc	status,2,c
 16692  003C24  D026               	goto	l521
 16693                           
 16694                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 16695  003C26  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 16696  003C2A  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 16697  003C2E  D801               	call	u7088
 16698  003C30  D00A               	goto	u7089
 16699  003C32                     u7088:
 16700  003C32  0005               	push	
 16701  003C34  6EFA               	movwf	pclath,c
 16702  003C36  0101               	movlb	1	; () banked
 16703  003C38  51E4               	movf	_LUN& (0+255),w,b
 16704  003C3A  6EFD               	movwf	tosl,c
 16705  003C3C  51E5               	movf	(_LUN+1)& (0+255),w,b
 16706  003C3E  6EFE               	movwf	tosh,c
 16707  003C40  6AFF               	clrf	tosu,c
 16708  003C42  50FA               	movf	pclath,w,c
 16709  003C44  0012               	return		;indir
 16710  003C46                     u7089:
 16711  003C46  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 16712  003C48  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 16713  003C4A  B4D8               	btfsc	status,2,c
 16714  003C4C  D012               	goto	l521
 16715                           
 16716                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 16717  003C4E  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 16718  003C52  0E01               	movlw	1
 16719  003C54  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 16720  003C56  0E00               	movlw	0
 16721  003C58  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 16722  003C5A  2A0C               	incf	??_USBMSDInit,f,c
 16723  003C5C  D003               	goto	u7104
 16724  003C5E                     u7105:
 16725  003C5E  90D8               	bcf	status,0,c
 16726  003C60  360D               	rlcf	??_USBMSDInit+1,f,c
 16727  003C62  360E               	rlcf	??_USBMSDInit+2,f,c
 16728  003C64                     u7104:
 16729  003C64  2E0C               	decfsz	??_USBMSDInit,f,c
 16730  003C66  D7FB               	goto	u7105
 16731  003C68  500D               	movf	??_USBMSDInit+1,w,c
 16732  003C6A  0101               	movlb	1	; () banked
 16733  003C6C  136D               	iorwf	_gblMediaPresent& (0+255),f,b
 16734  003C6E  500E               	movf	??_USBMSDInit+2,w,c
 16735  003C70  136E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 16736  003C72                     l521:
 16737                           
 16738                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 16739                           
 16740                           ; BSR set to: 1
 16741                           
 16742                           ; BSR set to: 1
 16743  003C72  ECE4  F030         	call	_ResetSenseData	;wreg free
 16744  003C76  0101               	movlb	1	; () banked
 16745  003C78  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 16746  003C7A                     l518:
 16747                           
 16748                           ; BSR set to: 1
 16749                           
 16750                           ; BSR set to: 1
 16751  003C7A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16752  003C7C  A4D8               	btfss	status,2,c
 16753  003C7E  0012               	return	
 16754  003C80  D7B6               	goto	l519
 16755  003C82                     __end_of_USBMSDInit:
 16756                           	opt stack 0
 16757                           tosu	equ	0xFFF
 16758                           tosh	equ	0xFFE
 16759                           tosl	equ	0xFFD
 16760                           pclath	equ	0xFFA
 16761                           tblptru	equ	0xFF8
 16762                           tblptrh	equ	0xFF7
 16763                           tblptrl	equ	0xFF6
 16764                           tablat	equ	0xFF5
 16765                           prodh	equ	0xFF4
 16766                           prodl	equ	0xFF3
 16767                           intcon	equ	0xFF2
 16768                           intcon2	equ	0xFF1
 16769                           intcon3	equ	0xFF0
 16770                           indf0	equ	0xFEF
 16771                           postinc0	equ	0xFEE
 16772                           fsr0h	equ	0xFEA
 16773                           fsr0l	equ	0xFE9
 16774                           wreg	equ	0xFE8
 16775                           indf1	equ	0xFE7
 16776                           postdec1	equ	0xFE5
 16777                           plusw1	equ	0xFE3
 16778                           fsr1h	equ	0xFE2
 16779                           fsr1l	equ	0xFE1
 16780                           indf2	equ	0xFDF
 16781                           postinc2	equ	0xFDE
 16782                           postdec2	equ	0xFDD
 16783                           plusw2	equ	0xFDB
 16784                           fsr2h	equ	0xFDA
 16785                           fsr2l	equ	0xFD9
 16786                           status	equ	0xFD8
 16787                           
 16788 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 16789 ;; Defined at:
 16790 ;;		line 46 in file "app_device_custom_hid.c"
 16791 ;; Parameters:    Size  Location     Type
 16792 ;;		None
 16793 ;; Auto vars:     Size  Location     Type
 16794 ;;		None
 16795 ;; Return value:  Size  Location     Type
 16796 ;;                  1    wreg      void 
 16797 ;; Registers used:
 16798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16799 ;; Tracked objects:
 16800 ;;		On entry : 0/0
 16801 ;;		On exit  : 0/0
 16802 ;;		Unchanged: 0/0
 16803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16808 ;;Total ram usage:        0 bytes
 16809 ;; Hardware stack levels used:    1
 16810 ;; Hardware stack levels required when called:    2
 16811 ;; This function calls:
 16812 ;;		_USBEnableEndpoint
 16813 ;;		_USBTransferOnePacket
 16814 ;; This function is called by:
 16815 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16816 ;; This function uses a non-reentrant model
 16817 ;;
 16818                           
 16819                           	psect	text82
 16820  006C52                     __ptext82:
 16821                           	opt stack 0
 16822  006C52                     _APP_DeviceCustomHIDInitialize:
 16823                           	opt stack 26
 16824                           
 16825                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 16826                           
 16827                           ; BSR set to: 1
 16828                           ;incstack = 0
 16829  006C52  0E00               	movlw	0
 16830  006C54  0101               	movlb	1	; () banked
 16831  006C56  6F69               	movwf	_USBInHandle& (0+255),b
 16832  006C58  0E00               	movlw	0
 16833  006C5A  6F6A               	movwf	(_USBInHandle+1)& (0+255),b
 16834                           
 16835                           ; BSR set to: 1
 16836                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 16837  006C5C  0E1E               	movlw	30
 16838  006C5E  6E09               	movwf	USBEnableEndpoint@options,c
 16839  006C60  0E01               	movlw	1
 16840  006C62  EC64  F035         	call	_USBEnableEndpoint
 16841                           
 16842                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 16843  006C66  0E00               	movlw	0
 16844  006C68  6E01               	movwf	USBTransferOnePacket@dir,c
 16845  006C6A  0E40               	movlw	low _ReceivedDataBuffer
 16846  006C6C  6E02               	movwf	USBTransferOnePacket@data,c
 16847  006C6E  0E02               	movlw	high _ReceivedDataBuffer
 16848  006C70  6E03               	movwf	USBTransferOnePacket@data+1,c
 16849  006C72  0E40               	movlw	64
 16850  006C74  6E04               	movwf	USBTransferOnePacket@len,c
 16851  006C76  0E01               	movlw	1
 16852  006C78  ECC4  F01E         	call	_USBTransferOnePacket
 16853  006C7C  C001  F16B         	movff	?_USBTransferOnePacket,_USBOutHandle
 16854  006C80  C002  F16C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 16855  006C84  0012               	return		;funcret
 16856  006C86                     __end_of_APP_DeviceCustomHIDInitialize:
 16857                           	opt stack 0
 16858                           tosu	equ	0xFFF
 16859                           tosh	equ	0xFFE
 16860                           tosl	equ	0xFFD
 16861                           pclath	equ	0xFFA
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           intcon2	equ	0xFF1
 16870                           intcon3	equ	0xFF0
 16871                           indf0	equ	0xFEF
 16872                           postinc0	equ	0xFEE
 16873                           fsr0h	equ	0xFEA
 16874                           fsr0l	equ	0xFE9
 16875                           wreg	equ	0xFE8
 16876                           indf1	equ	0xFE7
 16877                           postdec1	equ	0xFE5
 16878                           plusw1	equ	0xFE3
 16879                           fsr1h	equ	0xFE2
 16880                           fsr1l	equ	0xFE1
 16881                           indf2	equ	0xFDF
 16882                           postinc2	equ	0xFDE
 16883                           postdec2	equ	0xFDD
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _USBEnableEndpoint *****************
 16890 ;; Defined at:
 16891 ;;		line 878 in file "usb_device.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  ep              1    wreg     unsigned char 
 16894 ;;  options         1    8[COMRAM] unsigned char 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  ep              1   11[COMRAM] unsigned char 
 16897 ;;  p               2    9[COMRAM] PTR unsigned char 
 16898 ;;		 -> UEP0(1), 
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  1    wreg      void 
 16901 ;; Registers used:
 16902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16909 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16911 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16912 ;;Total ram usage:        4 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; Hardware stack levels required when called:    1
 16915 ;; This function calls:
 16916 ;;		_USBConfigureEndpoint
 16917 ;; This function is called by:
 16918 ;;		_APP_DeviceCustomHIDInitialize
 16919 ;;		_APP_DeviceMSDInitialize
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text83
 16924  006AC8                     __ptext83:
 16925                           	opt stack 0
 16926  006AC8                     _USBEnableEndpoint:
 16927                           	opt stack 26
 16928                           
 16929                           ;incstack = 0
 16930                           ;USBEnableEndpoint@ep stored from wreg
 16931  006AC8  6E0C               	movwf	USBEnableEndpoint@ep,c
 16932                           
 16933                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 16934  006ACA  A409               	btfss	USBEnableEndpoint@options,2,c
 16935  006ACC  D005               	goto	l178
 16936                           
 16937                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16938  006ACE  0E00               	movlw	0
 16939  006AD0  6E01               	movwf	USBConfigureEndpoint@direction,c
 16940  006AD2  500C               	movf	USBEnableEndpoint@ep,w,c
 16941  006AD4  ECA8  F02B         	call	_USBConfigureEndpoint
 16942  006AD8                     l178:
 16943                           
 16944                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16945  006AD8  A209               	btfss	USBEnableEndpoint@options,1,c
 16946  006ADA  D005               	goto	l179
 16947                           
 16948                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16949  006ADC  0E01               	movlw	1
 16950  006ADE  6E01               	movwf	USBConfigureEndpoint@direction,c
 16951  006AE0  500C               	movf	USBEnableEndpoint@ep,w,c
 16952  006AE2  ECA8  F02B         	call	_USBConfigureEndpoint
 16953  006AE6                     l179:
 16954                           
 16955                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16956  006AE6  500C               	movf	USBEnableEndpoint@ep,w,c
 16957  006AE8  0D01               	mullw	1
 16958  006AEA  0E26               	movlw	38
 16959  006AEC  24F3               	addwf	prodl,w,c
 16960  006AEE  6E0A               	movwf	USBEnableEndpoint@p,c
 16961  006AF0  0E0F               	movlw	15
 16962  006AF2  20F4               	addwfc	prodh,w,c
 16963  006AF4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16964                           
 16965                           ;usb_device.c: 901: *p = options;
 16966  006AF6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16967  006AFA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16968  006AFE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16969  006B02  0012               	return		;funcret
 16970  006B04                     __end_of_USBEnableEndpoint:
 16971                           	opt stack 0
 16972                           tosu	equ	0xFFF
 16973                           tosh	equ	0xFFE
 16974                           tosl	equ	0xFFD
 16975                           pclath	equ	0xFFA
 16976                           tblptru	equ	0xFF8
 16977                           tblptrh	equ	0xFF7
 16978                           tblptrl	equ	0xFF6
 16979                           tablat	equ	0xFF5
 16980                           prodh	equ	0xFF4
 16981                           prodl	equ	0xFF3
 16982                           intcon	equ	0xFF2
 16983                           intcon2	equ	0xFF1
 16984                           intcon3	equ	0xFF0
 16985                           indf0	equ	0xFEF
 16986                           postinc0	equ	0xFEE
 16987                           fsr0h	equ	0xFEA
 16988                           fsr0l	equ	0xFE9
 16989                           wreg	equ	0xFE8
 16990                           indf1	equ	0xFE7
 16991                           postdec1	equ	0xFE5
 16992                           plusw1	equ	0xFE3
 16993                           fsr1h	equ	0xFE2
 16994                           fsr1l	equ	0xFE1
 16995                           indf2	equ	0xFDF
 16996                           postinc2	equ	0xFDE
 16997                           postdec2	equ	0xFDD
 16998                           plusw2	equ	0xFDB
 16999                           fsr2h	equ	0xFDA
 17000                           fsr2l	equ	0xFD9
 17001                           status	equ	0xFD8
 17002                           
 17003 ;; *************** function _USBConfigureEndpoint *****************
 17004 ;; Defined at:
 17005 ;;		line 1545 in file "usb_device.c"
 17006 ;; Parameters:    Size  Location     Type
 17007 ;;  EPNum           1    wreg     unsigned char 
 17008 ;;  direction       1    0[COMRAM] unsigned char 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  EPNum           1    5[COMRAM] unsigned char 
 17011 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17012 ;;		 -> BDT(48), 
 17013 ;; Return value:  Size  Location     Type
 17014 ;;                  1    wreg      void 
 17015 ;; Registers used:
 17016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17017 ;; Tracked objects:
 17018 ;;		On entry : 0/0
 17019 ;;		On exit  : 0/0
 17020 ;;		Unchanged: 0/0
 17021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17022 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17023 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17024 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17025 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17026 ;;Total ram usage:        8 bytes
 17027 ;; Hardware stack levels used:    1
 17028 ;; This function calls:
 17029 ;;		Nothing
 17030 ;; This function is called by:
 17031 ;;		_USBEnableEndpoint
 17032 ;; This function uses a non-reentrant model
 17033 ;;
 17034                           
 17035                           	psect	text84
 17036  005750                     __ptext84:
 17037                           	opt stack 0
 17038  005750                     _USBConfigureEndpoint:
 17039                           	opt stack 26
 17040                           
 17041                           ;incstack = 0
 17042                           ;USBConfigureEndpoint@EPNum stored from wreg
 17043  005750  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17044                           
 17045                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17046  005752  0E00               	movlw	0
 17047  005754  6E07               	movwf	USBConfigureEndpoint@handle,c
 17048  005756  0E0D               	movlw	13
 17049  005758  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17050                           
 17051                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17052  00575A  5001               	movf	USBConfigureEndpoint@direction,w,c
 17053  00575C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17054  00575E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17055  005760  90D8               	bcf	status,0,c
 17056  005762  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17057  005764  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17058  005766  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17059  005768  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17060  00576A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17061  00576C  90D8               	bcf	status,0,c
 17062  00576E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17063  005770  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17064  005772  90D8               	bcf	status,0,c
 17065  005774  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17066  005776  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17067  005778  5002               	movf	??_USBConfigureEndpoint,w,c
 17068  00577A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17069  00577C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17070  00577E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17071  005780  90D8               	bcf	status,0,c
 17072  005782  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17073  005784  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17074  005786  90D8               	bcf	status,0,c
 17075  005788  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17076  00578A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17077  00578C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17078  00578E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17079  005790  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17080  005792  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17081                           
 17082                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17083  005794  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17084  005798  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17085  00579C  9EDF               	bcf	indf2,7,c
 17086                           
 17087                           ;usb_device.c: 1559: if(direction == 0)
 17088  00579E  5001               	movf	USBConfigureEndpoint@direction,w,c
 17089  0057A0  A4D8               	btfss	status,2,c
 17090  0057A2  D007               	goto	l214
 17091                           
 17092                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17093  0057A4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17094  0057A6  0D02               	mullw	2
 17095  0057A8  0E78               	movlw	low _pBDTEntryOut
 17096  0057AA  24F3               	addwf	prodl,w,c
 17097  0057AC  6ED9               	movwf	fsr2l,c
 17098  0057AE  0E00               	movlw	high _pBDTEntryOut
 17099  0057B0  D006               	goto	L15
 17100  0057B2                     l214:
 17101                           
 17102                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17103  0057B2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17104  0057B4  0D02               	mullw	2
 17105  0057B6  0E72               	movlw	low _pBDTEntryIn
 17106  0057B8  24F3               	addwf	prodl,w,c
 17107  0057BA  6ED9               	movwf	fsr2l,c
 17108  0057BC  0E00               	movlw	high _pBDTEntryIn
 17109  0057BE                     L15:
 17110  0057BE  20F4               	addwfc	prodh,w,c
 17111  0057C0  6EDA               	movwf	fsr2h,c
 17112  0057C2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17113  0057C6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17114                           
 17115                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17116  0057CA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17117  0057CE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17118  0057D2  9CDF               	bcf	indf2,6,c
 17119                           
 17120                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17121  0057D4  EE20 F004          	lfsr	2,4
 17122  0057D8  5007               	movf	USBConfigureEndpoint@handle,w,c
 17123  0057DA  26D9               	addwf	fsr2l,f,c
 17124  0057DC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17125  0057DE  22DA               	addwfc	fsr2h,f,c
 17126  0057E0  8CDF               	bsf	indf2,6,c
 17127  0057E2  0012               	return		;funcret
 17128  0057E4                     __end_of_USBConfigureEndpoint:
 17129                           	opt stack 0
 17130                           tosu	equ	0xFFF
 17131                           tosh	equ	0xFFE
 17132                           tosl	equ	0xFFD
 17133                           pclath	equ	0xFFA
 17134                           tblptru	equ	0xFF8
 17135                           tblptrh	equ	0xFF7
 17136                           tblptrl	equ	0xFF6
 17137                           tablat	equ	0xFF5
 17138                           prodh	equ	0xFF4
 17139                           prodl	equ	0xFF3
 17140                           intcon	equ	0xFF2
 17141                           intcon2	equ	0xFF1
 17142                           intcon3	equ	0xFF0
 17143                           indf0	equ	0xFEF
 17144                           postinc0	equ	0xFEE
 17145                           fsr0h	equ	0xFEA
 17146                           fsr0l	equ	0xFE9
 17147                           wreg	equ	0xFE8
 17148                           indf1	equ	0xFE7
 17149                           postdec1	equ	0xFE5
 17150                           plusw1	equ	0xFE3
 17151                           fsr1h	equ	0xFE2
 17152                           fsr1l	equ	0xFE1
 17153                           indf2	equ	0xFDF
 17154                           postinc2	equ	0xFDE
 17155                           postdec2	equ	0xFDD
 17156                           plusw2	equ	0xFDB
 17157                           fsr2h	equ	0xFDA
 17158                           fsr2l	equ	0xFD9
 17159                           status	equ	0xFD8
 17160                           
 17161 ;; *************** function _USBCtrlTrfOutHandler *****************
 17162 ;; Defined at:
 17163 ;;		line 2540 in file "usb_device.c"
 17164 ;; Parameters:    Size  Location     Type
 17165 ;;		None
 17166 ;; Auto vars:     Size  Location     Type
 17167 ;;		None
 17168 ;; Return value:  Size  Location     Type
 17169 ;;                  1    wreg      void 
 17170 ;; Registers used:
 17171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17172 ;; Tracked objects:
 17173 ;;		On entry : 0/0
 17174 ;;		On exit  : 0/0
 17175 ;;		Unchanged: 0/0
 17176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17181 ;;Total ram usage:        0 bytes
 17182 ;; Hardware stack levels used:    1
 17183 ;; Hardware stack levels required when called:    2
 17184 ;; This function calls:
 17185 ;;		_USBCtrlTrfRxService
 17186 ;; This function is called by:
 17187 ;;		_USBCtrlEPService
 17188 ;; This function uses a non-reentrant model
 17189 ;;
 17190                           
 17191                           	psect	text85
 17192  00628A                     __ptext85:
 17193                           	opt stack 0
 17194  00628A                     _USBCtrlTrfOutHandler:
 17195                           	opt stack 26
 17196                           
 17197                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17198                           
 17199                           ;incstack = 0
 17200  00628A  0E02               	movlw	2
 17201  00628C  0100               	movlb	0	; () banked
 17202  00628E  19AC               	xorwf	_controlTransferState& (0+255),w,b
 17203  006290  A4D8               	btfss	status,2,c
 17204  006292  D003               	goto	l320
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17208  006294  EC25  F01C         	call	_USBCtrlTrfRxService	;wreg free
 17209                           
 17210                           ;usb_device.c: 2545: }
 17211  006298  0012               	return	
 17212  00629A                     l320:
 17213                           
 17214                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17215  00629A  0E00               	movlw	0
 17216  00629C  0100               	movlb	0	; () banked
 17217  00629E  6FAC               	movwf	_controlTransferState& (0+255),b
 17218                           
 17219                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17220  0062A0  51A8               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17221  0062A2  A4D8               	btfss	status,2,c
 17222  0062A4  D01F               	goto	l322
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17226  0062A6  EE20 F001          	lfsr	2,1
 17227  0062AA  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17228  0062AC  26D9               	addwf	fsr2l,f,c
 17229  0062AE  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17230  0062B0  22DA               	addwfc	fsr2h,f,c
 17231  0062B2  0E08               	movlw	8
 17232  0062B4  6EDF               	movwf	indf2,c
 17233                           
 17234                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17235  0062B6  EE20 F002          	lfsr	2,2
 17236  0062BA  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17237  0062BC  26D9               	addwf	fsr2l,f,c
 17238  0062BE  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17239  0062C0  22DA               	addwfc	fsr2h,f,c
 17240  0062C2  0E30               	movlw	48
 17241  0062C4  6EDE               	movwf	postinc2,c
 17242  0062C6  0E0D               	movlw	13
 17243  0062C8  6EDD               	movwf	postdec2,c
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17247  0062CA  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17248  0062CE  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17249  0062D2  0E0C               	movlw	12
 17250  0062D4  6EDF               	movwf	indf2,c
 17251                           
 17252                           ; BSR set to: 0
 17253                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17254  0062D6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17255  0062DA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17256  0062DE  0E00               	movlw	0
 17257  0062E0  8EDB               	bsf	plusw2,7,c
 17258                           
 17259                           ;usb_device.c: 2563: }
 17260  0062E2  0012               	return	
 17261  0062E4                     l322:
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 17265                           
 17266                           ; BSR set to: 0
 17267  0062E4  0E00               	movlw	0
 17268  0062E6  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17269                           
 17270                           ; BSR set to: 0
 17271  0062E8  0012               	return	
 17272  0062EA                     __end_of_USBCtrlTrfOutHandler:
 17273                           	opt stack 0
 17274                           tosu	equ	0xFFF
 17275                           tosh	equ	0xFFE
 17276                           tosl	equ	0xFFD
 17277                           pclath	equ	0xFFA
 17278                           tblptru	equ	0xFF8
 17279                           tblptrh	equ	0xFF7
 17280                           tblptrl	equ	0xFF6
 17281                           tablat	equ	0xFF5
 17282                           prodh	equ	0xFF4
 17283                           prodl	equ	0xFF3
 17284                           intcon	equ	0xFF2
 17285                           intcon2	equ	0xFF1
 17286                           intcon3	equ	0xFF0
 17287                           indf0	equ	0xFEF
 17288                           postinc0	equ	0xFEE
 17289                           fsr0h	equ	0xFEA
 17290                           fsr0l	equ	0xFE9
 17291                           wreg	equ	0xFE8
 17292                           indf1	equ	0xFE7
 17293                           postdec1	equ	0xFE5
 17294                           plusw1	equ	0xFE3
 17295                           fsr1h	equ	0xFE2
 17296                           fsr1l	equ	0xFE1
 17297                           indf2	equ	0xFDF
 17298                           postinc2	equ	0xFDE
 17299                           postdec2	equ	0xFDD
 17300                           plusw2	equ	0xFDB
 17301                           fsr2h	equ	0xFDA
 17302                           fsr2l	equ	0xFD9
 17303                           status	equ	0xFD8
 17304                           
 17305 ;; *************** function _USBCtrlTrfRxService *****************
 17306 ;; Defined at:
 17307 ;;		line 1854 in file "usb_device.c"
 17308 ;; Parameters:    Size  Location     Type
 17309 ;;		None
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17312 ;;  i               1    0[COMRAM] unsigned char 
 17313 ;; Return value:  Size  Location     Type
 17314 ;;                  1    wreg      void 
 17315 ;; Registers used:
 17316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17317 ;; Tracked objects:
 17318 ;;		On entry : 0/0
 17319 ;;		On exit  : 0/0
 17320 ;;		Unchanged: 0/0
 17321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17325 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17326 ;;Total ram usage:        2 bytes
 17327 ;; Hardware stack levels used:    1
 17328 ;; Hardware stack levels required when called:    1
 17329 ;; This function calls:
 17330 ;;		_USBCtrlEPAllowStatusStage
 17331 ;; This function is called by:
 17332 ;;		_USBCtrlTrfOutHandler
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           	psect	text86
 17337  00384A                     __ptext86:
 17338                           	opt stack 0
 17339  00384A                     _USBCtrlTrfRxService:
 17340                           	opt stack 26
 17341                           
 17342                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17343                           
 17344                           ;incstack = 0
 17345  00384A  0100               	movlb	0	; () banked
 17346  00384C  EE20 F001          	lfsr	2,1
 17347  003850  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17348  003852  26D9               	addwf	fsr2l,f,c
 17349  003854  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17350  003856  22DA               	addwfc	fsr2h,f,c
 17351  003858  50DF               	movf	indf2,w,c
 17352  00385A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 17356  00385C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17357  00385E  0101               	movlb	1	; () banked
 17358  003860  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 17359  003862  0E00               	movlw	0
 17360  003864  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 17361  003866  A0D8               	btfss	status,0,c
 17362                           
 17363                           ; BSR set to: 1
 17364                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 17365  003868  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 17366                           
 17367                           ; BSR set to: 1
 17368                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 17369                           
 17370                           ; BSR set to: 1
 17371  00386C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17372  00386E  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 17373  003870  0E00               	movlw	0
 17374  003872  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 17375                           
 17376                           ; BSR set to: 1
 17377                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 17378  003874  0E00               	movlw	0
 17379  003876  6E01               	movwf	USBCtrlTrfRxService@i,c
 17380  003878  D011               	goto	l248
 17381  00387A                     
 17382                           ; BSR set to: 1
 17383                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17384                           
 17385                           ; BSR set to: 1
 17386  00387A  5001               	movf	USBCtrlTrfRxService@i,w,c
 17387  00387C  0D01               	mullw	1
 17388  00387E  0E38               	movlw	56
 17389  003880  24F3               	addwf	prodl,w,c
 17390  003882  6ED9               	movwf	fsr2l,c
 17391  003884  0E0D               	movlw	13
 17392  003886  20F4               	addwfc	prodh,w,c
 17393  003888  6EDA               	movwf	fsr2h,c
 17394  00388A  C131  FFE1         	movff	_outPipes,fsr1l
 17395  00388E  C132  FFE2         	movff	_outPipes+1,fsr1h
 17396  003892  CFDF FFE7          	movff	indf2,indf1
 17397                           
 17398                           ; BSR set to: 1
 17399  003896  4B31               	infsnz	_outPipes& (0+255),f,b
 17400  003898  2B32               	incf	(_outPipes+1)& (0+255),f,b
 17401                           
 17402                           ; BSR set to: 1
 17403  00389A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 17404  00389C                     l248:
 17405                           
 17406                           ; BSR set to: 1
 17407                           
 17408                           ; BSR set to: 1
 17409  00389C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17410  00389E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 17411  0038A0  A0D8               	btfss	status,0,c
 17412  0038A2  D7EB               	goto	l249
 17413                           
 17414                           ; BSR set to: 1
 17415                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 17416                           
 17417                           ; BSR set to: 1
 17418  0038A4  5135               	movf	(_outPipes+4)& (0+255),w,b
 17419  0038A6  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 17420  0038A8  B4D8               	btfsc	status,2,c
 17421  0038AA  D033               	goto	l251
 17422                           
 17423                           ; BSR set to: 1
 17424                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 17425  0038AC  0100               	movlb	0	; () banked
 17426  0038AE  EE20 F001          	lfsr	2,1
 17427  0038B2  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17428  0038B4  26D9               	addwf	fsr2l,f,c
 17429  0038B6  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17430  0038B8  22DA               	addwfc	fsr2h,f,c
 17431  0038BA  0E08               	movlw	8
 17432  0038BC  6EDF               	movwf	indf2,c
 17433                           
 17434                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17435  0038BE  EE20 F002          	lfsr	2,2
 17436  0038C2  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17437  0038C4  26D9               	addwf	fsr2l,f,c
 17438  0038C6  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17439  0038C8  22DA               	addwfc	fsr2h,f,c
 17440  0038CA  0E38               	movlw	56
 17441  0038CC  6EDE               	movwf	postinc2,c
 17442  0038CE  0E0D               	movlw	13
 17443  0038D0  6EDD               	movwf	postdec2,c
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17447  0038D2  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17448  0038D6  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17449  0038DA  BCDF               	btfsc	indf2,6,c
 17450  0038DC  D00D               	goto	l252
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 17454  0038DE  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17455  0038E2  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17456  0038E6  0E48               	movlw	72
 17457  0038E8  6EDF               	movwf	indf2,c
 17458                           
 17459                           ; BSR set to: 0
 17460                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17461  0038EA  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17462  0038EE  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17463  0038F2  0E00               	movlw	0
 17464  0038F4  8EDB               	bsf	plusw2,7,c
 17465                           
 17466                           ;usb_device.c: 1891: }
 17467  0038F6  0012               	return	
 17468  0038F8                     l252:
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 17472                           
 17473                           ; BSR set to: 0
 17474  0038F8  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17475  0038FC  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17476  003900  0E08               	movlw	8
 17477  003902  6EDF               	movwf	indf2,c
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17481  003904  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17482  003908  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17483  00390C  0E00               	movlw	0
 17484  00390E  8EDB               	bsf	plusw2,7,c
 17485                           
 17486                           ; BSR set to: 0
 17487                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 17488  003910  0012               	return	
 17489  003912                     l251:
 17490                           
 17491                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17492                           
 17493                           ; BSR set to: 0
 17494  003912  0100               	movlb	0	; () banked
 17495  003914  EE20 F001          	lfsr	2,1
 17496  003918  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17497  00391A  26D9               	addwf	fsr2l,f,c
 17498  00391C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17499  00391E  22DA               	addwfc	fsr2h,f,c
 17500  003920  0E08               	movlw	8
 17501  003922  6EDF               	movwf	indf2,c
 17502                           
 17503                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17504  003924  EE20 F002          	lfsr	2,2
 17505  003928  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17506  00392A  26D9               	addwf	fsr2l,f,c
 17507  00392C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17508  00392E  22DA               	addwfc	fsr2h,f,c
 17509  003930  0E30               	movlw	48
 17510  003932  6EDE               	movwf	postinc2,c
 17511  003934  0E0D               	movlw	13
 17512  003936  6EDD               	movwf	postdec2,c
 17513                           
 17514                           ; BSR set to: 0
 17515                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17516  003938  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17517  00393C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17518  003940  0E04               	movlw	4
 17519  003942  6EDF               	movwf	indf2,c
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17523  003944  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17524  003948  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17525  00394C  0E00               	movlw	0
 17526  00394E  8EDB               	bsf	plusw2,7,c
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17530                           
 17531                           ; BSR set to: 0
 17532  003950  0101               	movlb	1	; () banked
 17533  003952  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17534                           
 17535                           ; BSR set to: 1
 17536                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17537  003954  0100               	movlb	0	; () banked
 17538  003956  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17539  003958  A4D8               	btfss	status,2,c
 17540  00395A  0012               	return	
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17544  00395C  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17545  003960  0012               	return	
 17546  003962                     __end_of_USBCtrlTrfRxService:
 17547                           	opt stack 0
 17548                           tosu	equ	0xFFF
 17549                           tosh	equ	0xFFE
 17550                           tosl	equ	0xFFD
 17551                           pclath	equ	0xFFA
 17552                           tblptru	equ	0xFF8
 17553                           tblptrh	equ	0xFF7
 17554                           tblptrl	equ	0xFF6
 17555                           tablat	equ	0xFF5
 17556                           prodh	equ	0xFF4
 17557                           prodl	equ	0xFF3
 17558                           intcon	equ	0xFF2
 17559                           intcon2	equ	0xFF1
 17560                           intcon3	equ	0xFF0
 17561                           indf0	equ	0xFEF
 17562                           postinc0	equ	0xFEE
 17563                           fsr0h	equ	0xFEA
 17564                           fsr0l	equ	0xFE9
 17565                           wreg	equ	0xFE8
 17566                           indf1	equ	0xFE7
 17567                           postdec1	equ	0xFE5
 17568                           plusw1	equ	0xFE3
 17569                           fsr1h	equ	0xFE2
 17570                           fsr1l	equ	0xFE1
 17571                           indf2	equ	0xFDF
 17572                           postinc2	equ	0xFDE
 17573                           postdec2	equ	0xFDD
 17574                           plusw2	equ	0xFDB
 17575                           fsr2h	equ	0xFDA
 17576                           fsr2l	equ	0xFD9
 17577                           status	equ	0xFD8
 17578                           
 17579 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 17580 ;; Defined at:
 17581 ;;		line 1418 in file "usb_device.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;		None
 17584 ;; Auto vars:     Size  Location     Type
 17585 ;;		None
 17586 ;; Return value:  Size  Location     Type
 17587 ;;                  1    wreg      void 
 17588 ;; Registers used:
 17589 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17590 ;; Tracked objects:
 17591 ;;		On entry : 0/0
 17592 ;;		On exit  : 0/0
 17593 ;;		Unchanged: 0/0
 17594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17599 ;;Total ram usage:        0 bytes
 17600 ;; Hardware stack levels used:    1
 17601 ;; This function calls:
 17602 ;;		Nothing
 17603 ;; This function is called by:
 17604 ;;		_USBDeviceTasks
 17605 ;;		_USBCtrlEPServiceComplete
 17606 ;;		_USBCtrlTrfRxService
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           	psect	text87
 17611  004CA8                     __ptext87:
 17612                           	opt stack 0
 17613  004CA8                     _USBCtrlEPAllowStatusStage:
 17614                           	opt stack 26
 17615                           
 17616                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17617                           
 17618                           ;incstack = 0
 17619  004CA8  0100               	movlb	0	; () banked
 17620  004CAA  51A5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17621  004CAC  A4D8               	btfss	status,2,c
 17622  004CAE  0012               	return	
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17626  004CB0  0E01               	movlw	1
 17627  004CB2  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17628                           
 17629                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17630  004CB4  51A4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17631  004CB6  A4D8               	btfss	status,2,c
 17632  004CB8  0012               	return	
 17633                           
 17634                           ; BSR set to: 0
 17635                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 17636  004CBA  0E01               	movlw	1
 17637  004CBC  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17638                           
 17639                           ; BSR set to: 0
 17640                           ;usb_device.c: 1434: if(controlTransferState == 2)
 17641  004CBE  0E02               	movlw	2
 17642  004CC0  19AC               	xorwf	_controlTransferState& (0+255),w,b
 17643  004CC2  A4D8               	btfss	status,2,c
 17644  004CC4  D015               	goto	l202
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 17648  004CC6  EE20 F001          	lfsr	2,1
 17649  004CCA  5172               	movf	_pBDTEntryIn& (0+255),w,b
 17650  004CCC  26D9               	addwf	fsr2l,f,c
 17651  004CCE  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17652  004CD0  22DA               	addwfc	fsr2h,f,c
 17653  004CD2  0E00               	movlw	0
 17654  004CD4  6EDF               	movwf	indf2,c
 17655                           
 17656                           ; BSR set to: 0
 17657                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17658  004CD6  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17659  004CDA  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17660  004CDE  0E48               	movlw	72
 17661  004CE0  6EDF               	movwf	indf2,c
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17665  004CE2  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17666  004CE6  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17667  004CEA  0E00               	movlw	0
 17668  004CEC  8EDB               	bsf	plusw2,7,c
 17669                           
 17670                           ;usb_device.c: 1439: }
 17671  004CEE  0012               	return	
 17672  004CF0                     l202:
 17673                           
 17674                           ; BSR set to: 0
 17675                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 17676                           
 17677                           ; BSR set to: 0
 17678  004CF0  05AC               	decf	_controlTransferState& (0+255),w,b
 17679  004CF2  A4D8               	btfss	status,2,c
 17680  004CF4  0012               	return	
 17681                           
 17682                           ; BSR set to: 0
 17683                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 17684  004CF6  0E00               	movlw	0
 17685  004CF8  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17686                           
 17687                           ; BSR set to: 0
 17688                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 17689  004CFA  EE20 F001          	lfsr	2,1
 17690  004CFE  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17691  004D00  26D9               	addwf	fsr2l,f,c
 17692  004D02  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17693  004D04  22DA               	addwfc	fsr2h,f,c
 17694  004D06  0E08               	movlw	8
 17695  004D08  6EDF               	movwf	indf2,c
 17696                           
 17697                           ; BSR set to: 0
 17698                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 17699  004D0A  EE20 F002          	lfsr	2,2
 17700  004D0E  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17701  004D10  26D9               	addwf	fsr2l,f,c
 17702  004D12  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17703  004D14  22DA               	addwfc	fsr2h,f,c
 17704  004D16  0E30               	movlw	48
 17705  004D18  6EDE               	movwf	postinc2,c
 17706  004D1A  0E0D               	movlw	13
 17707  004D1C  6EDD               	movwf	postdec2,c
 17708                           
 17709                           ; BSR set to: 0
 17710                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 17711  004D1E  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17712  004D22  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17713  004D26  0E04               	movlw	4
 17714  004D28  6EDF               	movwf	indf2,c
 17715                           
 17716                           ; BSR set to: 0
 17717                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17718  004D2A  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17719  004D2E  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17720  004D32  0E00               	movlw	0
 17721  004D34  8EDB               	bsf	plusw2,7,c
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 17725  004D36  0E01               	movlw	1
 17726  004D38  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 17730  004D3A  EE20 F001          	lfsr	2,1
 17731  004D3E  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17732  004D40  26D9               	addwf	fsr2l,f,c
 17733  004D42  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17734  004D44  22DA               	addwfc	fsr2h,f,c
 17735  004D46  0E08               	movlw	8
 17736  004D48  6EDF               	movwf	indf2,c
 17737                           
 17738                           ; BSR set to: 0
 17739                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17740  004D4A  EE20 F002          	lfsr	2,2
 17741  004D4E  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17742  004D50  26D9               	addwf	fsr2l,f,c
 17743  004D52  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17744  004D54  22DA               	addwfc	fsr2h,f,c
 17745  004D56  0E30               	movlw	48
 17746  004D58  6EDE               	movwf	postinc2,c
 17747  004D5A  0E0D               	movlw	13
 17748  004D5C  6EDD               	movwf	postdec2,c
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 17752  004D5E  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17753  004D62  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17754  004D66  0E80               	movlw	128
 17755  004D68  6EDF               	movwf	indf2,c
 17756                           
 17757                           ; BSR set to: 0
 17758                           
 17759                           ; BSR set to: 0
 17760                           
 17761                           ; BSR set to: 0
 17762  004D6A  0012               	return	
 17763  004D6C                     __end_of_USBCtrlEPAllowStatusStage:
 17764                           	opt stack 0
 17765                           tosu	equ	0xFFF
 17766                           tosh	equ	0xFFE
 17767                           tosl	equ	0xFFD
 17768                           pclath	equ	0xFFA
 17769                           tblptru	equ	0xFF8
 17770                           tblptrh	equ	0xFF7
 17771                           tblptrl	equ	0xFF6
 17772                           tablat	equ	0xFF5
 17773                           prodh	equ	0xFF4
 17774                           prodl	equ	0xFF3
 17775                           intcon	equ	0xFF2
 17776                           intcon2	equ	0xFF1
 17777                           intcon3	equ	0xFF0
 17778                           indf0	equ	0xFEF
 17779                           postinc0	equ	0xFEE
 17780                           fsr0h	equ	0xFEA
 17781                           fsr0l	equ	0xFE9
 17782                           wreg	equ	0xFE8
 17783                           indf1	equ	0xFE7
 17784                           postdec1	equ	0xFE5
 17785                           plusw1	equ	0xFE3
 17786                           fsr1h	equ	0xFE2
 17787                           fsr1l	equ	0xFE1
 17788                           indf2	equ	0xFDF
 17789                           postinc2	equ	0xFDE
 17790                           postdec2	equ	0xFDD
 17791                           plusw2	equ	0xFDB
 17792                           fsr2h	equ	0xFDA
 17793                           fsr2l	equ	0xFD9
 17794                           status	equ	0xFD8
 17795                           
 17796 ;; *************** function _USBCtrlTrfInHandler *****************
 17797 ;; Defined at:
 17798 ;;		line 2594 in file "usb_device.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;		None
 17801 ;; Auto vars:     Size  Location     Type
 17802 ;;  lastDTS         1    1[COMRAM] unsigned char 
 17803 ;; Return value:  Size  Location     Type
 17804 ;;                  1    wreg      void 
 17805 ;; Registers used:
 17806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17807 ;; Tracked objects:
 17808 ;;		On entry : 0/0
 17809 ;;		On exit  : 0/0
 17810 ;;		Unchanged: 0/0
 17811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17816 ;;Total ram usage:        1 bytes
 17817 ;; Hardware stack levels used:    1
 17818 ;; Hardware stack levels required when called:    1
 17819 ;; This function calls:
 17820 ;;		_USBCtrlTrfTxService
 17821 ;; This function is called by:
 17822 ;;		_USBCtrlEPService
 17823 ;; This function uses a non-reentrant model
 17824 ;;
 17825                           
 17826                           	psect	text88
 17827  004BE0                     __ptext88:
 17828                           	opt stack 0
 17829  004BE0                     _USBCtrlTrfInHandler:
 17830                           	opt stack 27
 17831                           
 17832                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;incstack = 0
 17836  004BE0  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17837  004BE4  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17838  004BE8  0100               	movlb	0	; () banked
 17839  004BEA  0E00               	movlw	0
 17840  004BEC  BCDF               	btfsc	indf2,6,c
 17841  004BEE  0E01               	movlw	1
 17842  004BF0  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17843                           
 17844                           ; BSR set to: 0
 17845                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17846  004BF2  0E04               	movlw	4
 17847  004BF4  1972               	xorwf	_pBDTEntryIn& (0+255),w,b
 17848  004BF6  6F72               	movwf	_pBDTEntryIn& (0+255),b
 17849  004BF8  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17850  004BFA  6F73               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 17854  004BFC  0E08               	movlw	8
 17855  004BFE  185F               	xorwf	_USBDeviceState,w,c
 17856  004C00  A4D8               	btfss	status,2,c
 17857  004C02  D00C               	goto	l329
 17858                           
 17859                           ; BSR set to: 0
 17860                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 17861  004C04  010D               	movlb	13	; () banked
 17862  004C06  5132               	movf	50,w,b	;volatile
 17863  004C08  0B7F               	andlw	127
 17864  004C0A  010F               	movlb	15	; () banked
 17865  004C0C  6F38               	movwf	56,b	;volatile
 17866                           
 17867                           ; BSR set to: 15
 17868                           ;usb_device.c: 2609: if(UADDR != 0u)
 17869  004C0E  5138               	movf	56,w,b	;volatile
 17870  004C10  B4D8               	btfsc	status,2,c
 17871  004C12  D002               	goto	l328
 17872                           
 17873                           ; BSR set to: 15
 17874                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 17875  004C14  0E10               	movlw	16
 17876  004C16  D001               	goto	L16
 17877  004C18                     l328:
 17878                           
 17879                           ; BSR set to: 15
 17880                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 17881                           
 17882                           ; BSR set to: 15
 17883  004C18  0E04               	movlw	4
 17884  004C1A                     L16:
 17885  004C1A  6E5F               	movwf	_USBDeviceState,c
 17886  004C1C                     l329:
 17887                           
 17888                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 17889                           
 17890                           ; BSR set to: 15
 17891                           
 17892                           ; BSR set to: 15
 17893  004C1C  0100               	movlb	0	; () banked
 17894  004C1E  05AC               	decf	_controlTransferState& (0+255),w,b
 17895  004C20  A4D8               	btfss	status,2,c
 17896  004C22  D03B               	goto	l330
 17897                           
 17898                           ; BSR set to: 0
 17899                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 17900  004C24  EE20 F002          	lfsr	2,2
 17901  004C28  5172               	movf	_pBDTEntryIn& (0+255),w,b
 17902  004C2A  26D9               	addwf	fsr2l,f,c
 17903  004C2C  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17904  004C2E  22DA               	addwfc	fsr2h,f,c
 17905  004C30  0E38               	movlw	56
 17906  004C32  6EDE               	movwf	postinc2,c
 17907  004C34  0E0D               	movlw	13
 17908  004C36  6EDD               	movwf	postdec2,c
 17909                           
 17910                           ; BSR set to: 0
 17911                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 17912  004C38  EC1F  F025         	call	_USBCtrlTrfTxService	;wreg free
 17913                           
 17914                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 17915  004C3C  0E02               	movlw	2
 17916  004C3E  0100               	movlb	0	; () banked
 17917  004C40  19AD               	xorwf	_shortPacketStatus& (0+255),w,b
 17918  004C42  A4D8               	btfss	status,2,c
 17919  004C44  D00D               	goto	l331
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 17923  004C46  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17924  004C4A  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17925  004C4E  0E04               	movlw	4
 17926  004C50  6EDF               	movwf	indf2,c
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17930  004C52  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17931  004C56  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17932  004C5A  0E00               	movlw	0
 17933  004C5C  8EDB               	bsf	plusw2,7,c
 17934                           
 17935                           ;usb_device.c: 2635: }
 17936  004C5E  0012               	return	
 17937  004C60                     l331:
 17938                           
 17939                           ; BSR set to: 0
 17940                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17941                           
 17942                           ; BSR set to: 0
 17943  004C60  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17944  004C62  A4D8               	btfss	status,2,c
 17945  004C64  D00D               	goto	l333
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17949  004C66  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17950  004C6A  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17951  004C6E  0E48               	movlw	72
 17952  004C70  6EDF               	movwf	indf2,c
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17956  004C72  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17957  004C76  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17958  004C7A  0E00               	movlw	0
 17959  004C7C  8EDB               	bsf	plusw2,7,c
 17960                           
 17961                           ;usb_device.c: 2642: }
 17962  004C7E  0012               	return	
 17963  004C80                     l333:
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17967                           
 17968                           ; BSR set to: 0
 17969  004C80  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17970  004C84  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17971  004C88  0E08               	movlw	8
 17972  004C8A  6EDF               	movwf	indf2,c
 17973                           
 17974                           ; BSR set to: 0
 17975                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17976  004C8C  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 17977  004C90  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17978  004C94  0E00               	movlw	0
 17979  004C96  8EDB               	bsf	plusw2,7,c
 17980                           
 17981                           ; BSR set to: 0
 17982                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17983                           
 17984                           ; BSR set to: 0
 17985  004C98  0012               	return	
 17986  004C9A                     l330:
 17987                           
 17988                           ; BSR set to: 0
 17989                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17990  004C9A  0101               	movlb	1	; () banked
 17991  004C9C  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17992                           
 17993                           ; BSR set to: 1
 17994                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17995                           
 17996                           ; BSR set to: 1
 17997  004C9E  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17998                           
 17999                           ; BSR set to: 1
 18000                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18001                           
 18002                           ; BSR set to: 1
 18003  004CA0  0E00               	movlw	0
 18004  004CA2  0100               	movlb	0	; () banked
 18005  004CA4  6FAC               	movwf	_controlTransferState& (0+255),b
 18006  004CA6  0012               	return	
 18007  004CA8                     __end_of_USBCtrlTrfInHandler:
 18008                           	opt stack 0
 18009                           tosu	equ	0xFFF
 18010                           tosh	equ	0xFFE
 18011                           tosl	equ	0xFFD
 18012                           pclath	equ	0xFFA
 18013                           tblptru	equ	0xFF8
 18014                           tblptrh	equ	0xFF7
 18015                           tblptrl	equ	0xFF6
 18016                           tablat	equ	0xFF5
 18017                           prodh	equ	0xFF4
 18018                           prodl	equ	0xFF3
 18019                           intcon	equ	0xFF2
 18020                           intcon2	equ	0xFF1
 18021                           intcon3	equ	0xFF0
 18022                           indf0	equ	0xFEF
 18023                           postinc0	equ	0xFEE
 18024                           fsr0h	equ	0xFEA
 18025                           fsr0l	equ	0xFE9
 18026                           wreg	equ	0xFE8
 18027                           indf1	equ	0xFE7
 18028                           postdec1	equ	0xFE5
 18029                           plusw1	equ	0xFE3
 18030                           fsr1h	equ	0xFE2
 18031                           fsr1l	equ	0xFE1
 18032                           indf2	equ	0xFDF
 18033                           postinc2	equ	0xFDE
 18034                           postdec2	equ	0xFDD
 18035                           plusw2	equ	0xFDB
 18036                           fsr2h	equ	0xFDA
 18037                           fsr2l	equ	0xFD9
 18038                           status	equ	0xFD8
 18039                           
 18040 ;; *************** function _USBCtrlTrfTxService *****************
 18041 ;; Defined at:
 18042 ;;		line 1773 in file "usb_device.c"
 18043 ;; Parameters:    Size  Location     Type
 18044 ;;		None
 18045 ;; Auto vars:     Size  Location     Type
 18046 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      void 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18060 ;;Total ram usage:        1 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; This function calls:
 18063 ;;		Nothing
 18064 ;; This function is called by:
 18065 ;;		_USBCtrlEPAllowDataStage
 18066 ;;		_USBCtrlTrfInHandler
 18067 ;; This function uses a non-reentrant model
 18068 ;;
 18069                           
 18070                           	psect	text89
 18071  004A3E                     __ptext89:
 18072                           	opt stack 0
 18073  004A3E                     _USBCtrlTrfTxService:
 18074                           	opt stack 25
 18075                           
 18076                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18077                           
 18078                           ; BSR set to: 0
 18079                           ;incstack = 0
 18080  004A3E  0E08               	movlw	8
 18081  004A40  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18082                           
 18083                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18084  004A42  0100               	movlb	0	; () banked
 18085  004A44  5171               	movf	(_inPipes+5)& (0+255),w,b
 18086  004A46  E110               	bnz	l10513
 18087  004A48  0E08               	movlw	8
 18088  004A4A  5D70               	subwf	(_inPipes+4)& (0+255),w,b
 18089  004A4C  B0D8               	btfsc	status,0,c
 18090  004A4E  D00C               	goto	l235
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18094  004A50  C070  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18095                           
 18096                           ; BSR set to: 0
 18097                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18098  004A54  51AD               	movf	_shortPacketStatus& (0+255),w,b
 18099  004A56  A4D8               	btfss	status,2,c
 18100  004A58  D002               	goto	l233
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18104  004A5A  0E01               	movlw	1
 18105  004A5C  D004               	goto	L17
 18106  004A5E                     l233:
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18110                           
 18111                           ; BSR set to: 0
 18112  004A5E  05AD               	decf	_shortPacketStatus& (0+255),w,b
 18113  004A60  A4D8               	btfss	status,2,c
 18114  004A62  D002               	goto	l235
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18118  004A64  0E02               	movlw	2
 18119  004A66                     L17:
 18120  004A66  6FAD               	movwf	_shortPacketStatus& (0+255),b
 18121  004A68                     l235:
 18122  004A68                     l10513:
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18126  004A68  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18127  004A6A  5F70               	subwf	(_inPipes+4)& (0+255),f,b
 18128  004A6C  0E00               	movlw	0
 18129  004A6E  5B71               	subwfb	(_inPipes+5)& (0+255),f,b
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18133  004A70  EE20 F001          	lfsr	2,1
 18134  004A74  5172               	movf	_pBDTEntryIn& (0+255),w,b
 18135  004A76  26D9               	addwf	fsr2l,f,c
 18136  004A78  5173               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18137  004A7A  22DA               	addwfc	fsr2h,f,c
 18138  004A7C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18139                           
 18140                           ; BSR set to: 0
 18141                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18142  004A80  0E38               	movlw	56
 18143  004A82  0101               	movlb	1	; () banked
 18144  004A84  6F73               	movwf	_pDst& (0+255),b
 18145  004A86  0E0D               	movlw	13
 18146  004A88  6F74               	movwf	(_pDst+1)& (0+255),b
 18147                           
 18148                           ; BSR set to: 1
 18149                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18150  004A8A  0100               	movlb	0	; () banked
 18151  004A8C  A16F               	btfss	(_inPipes+3)& (0+255),0,b
 18152  004A8E  D01D               	goto	l237
 18153  004A90  D03C               	goto	l241
 18154  004A92                     
 18155                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18156                           
 18157                           ; BSR set to: 0
 18158  004A92  C06C  FFF6         	movff	_inPipes,tblptrl
 18159  004A96  C06D  FFF7         	movff	_inPipes+1,tblptrh
 18160  004A9A  6AF8               	clrf	tblptru,c
 18161  004A9C  C173  FFD9         	movff	_pDst,fsr2l
 18162  004AA0  C174  FFDA         	movff	_pDst+1,fsr2h
 18163  004AA4  0E0E               	movlw	(high __ramtop+-1)
 18164  004AA6  64F7               	cpfsgt	tblptrh,c
 18165  004AA8  D003               	bra	u7847
 18166  004AAA  0008               	tblrd		*
 18167  004AAC  50F5               	movf	tablat,w,c
 18168  004AAE  D005               	bra	u7840
 18169  004AB0                     u7847:
 18170  004AB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18171  004AB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18172  004AB8  50EF               	movf	indf0,w,c
 18173  004ABA                     u7840:
 18174  004ABA  6EDF               	movwf	indf2,c
 18175  004ABC  0100               	movlb	0	; () banked
 18176  004ABE  4B6C               	infsnz	_inPipes& (0+255),f,b
 18177  004AC0  2B6D               	incf	(_inPipes+1)& (0+255),f,b
 18178                           
 18179                           ; BSR set to: 0
 18180  004AC2  0101               	movlb	1	; () banked
 18181  004AC4  4B73               	infsnz	_pDst& (0+255),f,b
 18182  004AC6  2B74               	incf	(_pDst+1)& (0+255),f,b
 18183                           
 18184                           ; BSR set to: 1
 18185                           ;usb_device.c: 1816: byteToSend--;
 18186  004AC8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18187  004ACA                     l237:
 18188                           
 18189                           ; BSR set to: 1
 18190  004ACA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18191  004ACC  B4D8               	btfsc	status,2,c
 18192  004ACE  0012               	return	
 18193  004AD0  D7E0               	goto	l238
 18194  004AD2                     
 18195                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18196  004AD2  C06C  FFF6         	movff	_inPipes,tblptrl
 18197  004AD6  C06D  FFF7         	movff	_inPipes+1,tblptrh
 18198  004ADA  6AF8               	clrf	tblptru,c
 18199  004ADC  C173  FFD9         	movff	_pDst,fsr2l
 18200  004AE0  C174  FFDA         	movff	_pDst+1,fsr2h
 18201  004AE4  0E0E               	movlw	(high __ramtop+-1)
 18202  004AE6  64F7               	cpfsgt	tblptrh,c
 18203  004AE8  D003               	bra	u7867
 18204  004AEA  0008               	tblrd		*
 18205  004AEC  50F5               	movf	tablat,w,c
 18206  004AEE  D005               	bra	u7860
 18207  004AF0                     u7867:
 18208  004AF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18209  004AF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18210  004AF8  50EF               	movf	indf0,w,c
 18211  004AFA                     u7860:
 18212  004AFA  6EDF               	movwf	indf2,c
 18213  004AFC  0100               	movlb	0	; () banked
 18214  004AFE  4B6C               	infsnz	_inPipes& (0+255),f,b
 18215  004B00  2B6D               	incf	(_inPipes+1)& (0+255),f,b
 18216                           
 18217                           ; BSR set to: 0
 18218  004B02  0101               	movlb	1	; () banked
 18219  004B04  4B73               	infsnz	_pDst& (0+255),f,b
 18220  004B06  2B74               	incf	(_pDst+1)& (0+255),f,b
 18221                           
 18222                           ; BSR set to: 1
 18223                           ;usb_device.c: 1824: byteToSend--;
 18224  004B08  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18225  004B0A                     l241:
 18226                           
 18227                           ; BSR set to: 1
 18228  004B0A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18229  004B0C  B4D8               	btfsc	status,2,c
 18230  004B0E  0012               	return	
 18231  004B10  D7E0               	goto	l242
 18232  004B12                     __end_of_USBCtrlTrfTxService:
 18233                           	opt stack 0
 18234                           tosu	equ	0xFFF
 18235                           tosh	equ	0xFFE
 18236                           tosl	equ	0xFFD
 18237                           pclath	equ	0xFFA
 18238                           tblptru	equ	0xFF8
 18239                           tblptrh	equ	0xFF7
 18240                           tblptrl	equ	0xFF6
 18241                           tablat	equ	0xFF5
 18242                           prodh	equ	0xFF4
 18243                           prodl	equ	0xFF3
 18244                           intcon	equ	0xFF2
 18245                           intcon2	equ	0xFF1
 18246                           intcon3	equ	0xFF0
 18247                           indf0	equ	0xFEF
 18248                           postinc0	equ	0xFEE
 18249                           fsr0h	equ	0xFEA
 18250                           fsr0l	equ	0xFE9
 18251                           wreg	equ	0xFE8
 18252                           indf1	equ	0xFE7
 18253                           postdec1	equ	0xFE5
 18254                           plusw1	equ	0xFE3
 18255                           fsr1h	equ	0xFE2
 18256                           fsr1l	equ	0xFE1
 18257                           indf2	equ	0xFDF
 18258                           postinc2	equ	0xFDE
 18259                           postdec2	equ	0xFDD
 18260                           plusw2	equ	0xFDB
 18261                           fsr2h	equ	0xFDA
 18262                           fsr2l	equ	0xFD9
 18263                           status	equ	0xFD8
 18264                           
 18265 ;; *************** function _APP_DeviceMSDTasks *****************
 18266 ;; Defined at:
 18267 ;;		line 110 in file "app_device_msd.c"
 18268 ;; Parameters:    Size  Location     Type
 18269 ;;		None
 18270 ;; Auto vars:     Size  Location     Type
 18271 ;;		None
 18272 ;; Return value:  Size  Location     Type
 18273 ;;                  1    wreg      void 
 18274 ;; Registers used:
 18275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18276 ;; Tracked objects:
 18277 ;;		On entry : 0/0
 18278 ;;		On exit  : 0/0
 18279 ;;		Unchanged: 0/0
 18280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18285 ;;Total ram usage:        0 bytes
 18286 ;; Hardware stack levels used:    1
 18287 ;; Hardware stack levels required when called:   11
 18288 ;; This function calls:
 18289 ;;		_MSDTasks
 18290 ;; This function is called by:
 18291 ;;		_main
 18292 ;; This function uses a non-reentrant model
 18293 ;;
 18294                           
 18295                           	psect	text90
 18296  00711C                     __ptext90:
 18297                           	opt stack 0
 18298  00711C                     _APP_DeviceMSDTasks:
 18299                           	opt stack 19
 18300                           
 18301                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 18302                           
 18303                           ;incstack = 0
 18304  00711C  0E20               	movlw	32
 18305  00711E  605F               	cpfslt	_USBDeviceState,c
 18306  007120  D001               	goto	l974
 18307  007122  0012               	return	
 18308  007124                     l974:
 18309                           
 18310                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 18311  007124  B265               	btfsc	3941,1,c	;volatile
 18312  007126  0012               	return	
 18313                           
 18314                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 18315                           
 18316                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 18317  007128  ECDF  F00C         	call	_MSDTasks	;wreg free
 18318  00712C  0012               	return		;funcret
 18319  00712E                     __end_of_APP_DeviceMSDTasks:
 18320                           	opt stack 0
 18321                           tosu	equ	0xFFF
 18322                           tosh	equ	0xFFE
 18323                           tosl	equ	0xFFD
 18324                           pclath	equ	0xFFA
 18325                           tblptru	equ	0xFF8
 18326                           tblptrh	equ	0xFF7
 18327                           tblptrl	equ	0xFF6
 18328                           tablat	equ	0xFF5
 18329                           prodh	equ	0xFF4
 18330                           prodl	equ	0xFF3
 18331                           intcon	equ	0xFF2
 18332                           intcon2	equ	0xFF1
 18333                           intcon3	equ	0xFF0
 18334                           indf0	equ	0xFEF
 18335                           postinc0	equ	0xFEE
 18336                           fsr0h	equ	0xFEA
 18337                           fsr0l	equ	0xFE9
 18338                           wreg	equ	0xFE8
 18339                           indf1	equ	0xFE7
 18340                           postdec1	equ	0xFE5
 18341                           plusw1	equ	0xFE3
 18342                           fsr1h	equ	0xFE2
 18343                           fsr1l	equ	0xFE1
 18344                           indf2	equ	0xFDF
 18345                           postinc2	equ	0xFDE
 18346                           postdec2	equ	0xFDD
 18347                           plusw2	equ	0xFDB
 18348                           fsr2h	equ	0xFDA
 18349                           fsr2l	equ	0xFD9
 18350                           status	equ	0xFD8
 18351                           
 18352 ;; *************** function _MSDTasks *****************
 18353 ;; Defined at:
 18354 ;;		line 335 in file "usb_device_msd.c"
 18355 ;; Parameters:    Size  Location     Type
 18356 ;;		None
 18357 ;; Auto vars:     Size  Location     Type
 18358 ;;  i               1   81[COMRAM] unsigned char 
 18359 ;; Return value:  Size  Location     Type
 18360 ;;                  1    wreg      unsigned char 
 18361 ;; Registers used:
 18362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18363 ;; Tracked objects:
 18364 ;;		On entry : 0/0
 18365 ;;		On exit  : 0/0
 18366 ;;		Unchanged: 0/0
 18367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18369 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18371 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18372 ;;Total ram usage:        6 bytes
 18373 ;; Hardware stack levels used:    1
 18374 ;; Hardware stack levels required when called:   10
 18375 ;; This function calls:
 18376 ;;		_MSDProcessCommand
 18377 ;;		_USBStallEndpoint
 18378 ;;		_USBTransferOnePacket
 18379 ;; This function is called by:
 18380 ;;		_APP_DeviceMSDTasks
 18381 ;; This function uses a non-reentrant model
 18382 ;;
 18383                           
 18384                           	psect	text91
 18385  0019BE                     __ptext91:
 18386                           	opt stack 0
 18387  0019BE                     _MSDTasks:
 18388                           	opt stack 19
 18389                           
 18390                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 18391                           
 18392                           ;incstack = 0
 18393  0019BE  0E20               	movlw	32
 18394  0019C0  185F               	xorwf	_USBDeviceState,w,c
 18395  0019C2  A4D8               	btfss	status,2,c
 18396  0019C4  0012               	return	
 18397  0019C6  D118               	goto	l554
 18398  0019C8                     
 18399                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 18400  0019C8  0100               	movlb	0	; () banked
 18401  0019CA  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 18402  0019CC  118F               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18403  0019CE  B4D8               	btfsc	status,2,c
 18404  0019D0  D006               	goto	u10880
 18405                           
 18406                           ; BSR set to: 0
 18407  0019D2  C08E  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18408  0019D6  C08F  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18409  0019DA  BEDF               	btfsc	indf2,7,c
 18410  0019DC  0012               	return	
 18411  0019DE                     u10880:
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 18415                           
 18416                           ; BSR set to: 0
 18417  0019DE  0E00               	movlw	0
 18418  0019E0  6E52               	movwf	MSDTasks@i,c
 18419  0019E2                     l13467:
 18420                           
 18421                           ; BSR set to: 0
 18422  0019E2  0E1E               	movlw	30
 18423  0019E4  6452               	cpfsgt	MSDTasks@i,c
 18424  0019E6  D001               	goto	l559
 18425  0019E8  D014               	goto	u10900
 18426  0019EA                     l559:
 18427                           
 18428                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 18429                           
 18430                           ; BSR set to: 0
 18431  0019EA  5052               	movf	MSDTasks@i,w,c
 18432  0019EC  0D01               	mullw	1
 18433  0019EE  0E40               	movlw	64
 18434  0019F0  24F3               	addwf	prodl,w,c
 18435  0019F2  6ED9               	movwf	fsr2l,c
 18436  0019F4  0E0D               	movlw	13
 18437  0019F6  20F4               	addwfc	prodh,w,c
 18438  0019F8  6EDA               	movwf	fsr2h,c
 18439  0019FA  5052               	movf	MSDTasks@i,w,c
 18440  0019FC  0D01               	mullw	1
 18441  0019FE  0E00               	movlw	low _gblCBW
 18442  001A00  24F3               	addwf	prodl,w,c
 18443  001A02  6EE1               	movwf	fsr1l,c
 18444  001A04  0E01               	movlw	high _gblCBW
 18445  001A06  20F4               	addwfc	prodh,w,c
 18446  001A08  6EE2               	movwf	fsr1h,c
 18447  001A0A  CFDF FFE7          	movff	indf2,indf1
 18448  001A0E  2A52               	incf	MSDTasks@i,f,c
 18449  001A10  D7E8               	goto	l13467
 18450  001A12                     u10900:
 18451                           
 18452                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 18453  001A12  0100               	movlb	0	; () banked
 18454  001A14  EE20 F001          	lfsr	2,1
 18455  001A18  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 18456  001A1A  26D9               	addwf	fsr2l,f,c
 18457  001A1C  518F               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 18458  001A1E  22DA               	addwfc	fsr2h,f,c
 18459  001A20  0E1F               	movlw	31
 18460  001A22  18DE               	xorwf	postinc2,w,c
 18461  001A24  A4D8               	btfss	status,2,c
 18462  001A26  D072               	goto	l561
 18463                           
 18464                           ; BSR set to: 0
 18465  001A28  0E55               	movlw	85
 18466  001A2A  0101               	movlb	1	; () banked
 18467  001A2C  1900               	xorwf	_gblCBW& (0+255),w,b
 18468  001A2E  E16E               	bnz	l561
 18469  001A30  0E53               	movlw	83
 18470  001A32  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 18471  001A34  E16B               	bnz	l561
 18472  001A36  0E42               	movlw	66
 18473  001A38  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 18474  001A3A  E168               	bnz	l561
 18475  001A3C  0E43               	movlw	67
 18476  001A3E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 18477  001A40  A4D8               	btfss	status,2,c
 18478  001A42  D064               	goto	l561
 18479                           
 18480                           ; BSR set to: 1
 18481                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 18482  001A44  0E01               	movlw	1
 18483  001A46  0100               	movlb	0	; () banked
 18484  001A48  6F98               	movwf	_MSDCBWValid& (0+255),b
 18485                           
 18486                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 18487  001A4A  0101               	movlb	1	; () banked
 18488  001A4C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18489  001A4E  A4D8               	btfss	status,2,c
 18490  001A50  D052               	goto	l562
 18491                           
 18492                           ; BSR set to: 1
 18493  001A52  0E11               	movlw	17
 18494  001A54  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 18495  001A56  D04F               	goto	l562
 18496                           
 18497                           ; BSR set to: 1
 18498  001A58  510E               	movf	(_gblCBW+14)& (0+255),w,b
 18499  001A5A  B4D8               	btfsc	status,2,c
 18500  001A5C  D04C               	goto	l562
 18501                           
 18502                           ; BSR set to: 1
 18503  001A5E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 18504  001A62  0E3F               	movlw	63
 18505  001A64  164D               	andwf	??_MSDTasks,f,c
 18506  001A66  A4D8               	btfss	status,2,c
 18507  001A68  D046               	goto	l562
 18508                           
 18509                           ; BSR set to: 1
 18510                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 18511  001A6A  0E55               	movlw	85
 18512  001A6C  010D               	movlb	13	; () banked
 18513  001A6E  6F80               	movwf	128,b	;volatile
 18514  001A70  0E53               	movlw	83
 18515  001A72  6F81               	movwf	129,b	;volatile
 18516  001A74  0E42               	movlw	66
 18517  001A76  6F82               	movwf	130,b	;volatile
 18518  001A78  0E53               	movlw	83
 18519  001A7A  6F83               	movwf	131,b	;volatile
 18520                           
 18521                           ; BSR set to: 13
 18522                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18523  001A7C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18524  001A80  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18525  001A84  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18526  001A88  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18527                           
 18528                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18529  001A8C  0E00               	movlw	0
 18530  001A8E  6F88               	movwf	136,b	;volatile
 18531  001A90  0E00               	movlw	0
 18532  001A92  6F89               	movwf	137,b	;volatile
 18533  001A94  0E00               	movlw	0
 18534  001A96  6F8A               	movwf	138,b	;volatile
 18535  001A98  0E00               	movlw	0
 18536  001A9A  6F8B               	movwf	139,b	;volatile
 18537                           
 18538                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18539  001A9C  0E00               	movlw	0
 18540  001A9E  6F8C               	movwf	140,b	;volatile
 18541                           
 18542                           ; BSR set to: 13
 18543                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18544  001AA0  0100               	movlb	0	; () banked
 18545  001AA2  699F               	setf	_MSDCommandState& (0+255),b
 18546                           
 18547                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 18548  001AA4  0E00               	movlw	0
 18549  001AA6  6F9E               	movwf	_MSDReadState& (0+255),b
 18550                           
 18551                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 18552  001AA8  0E00               	movlw	0
 18553  001AAA  6F9D               	movwf	_MSDWriteState& (0+255),b
 18554                           
 18555                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 18556  001AAC  0E00               	movlw	0
 18557  001AAE  6F9C               	movwf	_MSDRetryAttempt& (0+255),b
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 18561  001AB0  0E03               	movlw	3
 18562  001AB2  0101               	movlb	1	; () banked
 18563  001AB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 18564  001AB6  B4D8               	btfsc	status,2,c
 18565  001AB8  D008               	goto	l563
 18566                           
 18567                           ; BSR set to: 1
 18568                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 18569  001ABA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 18570  001ABC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 18571  001ABE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 18572  001AC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 18573                           
 18574                           ; BSR set to: 1
 18575                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 18576  001AC2  0E00               	movlw	0
 18577  001AC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18578                           
 18579                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 18580  001AC6  0E00               	movlw	0
 18581  001AC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18582  001ACA                     l563:
 18583                           
 18584                           ; BSR set to: 1
 18585                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18586                           
 18587                           ; BSR set to: 1
 18588  001ACA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18589  001ACC  D002               	goto	l564
 18590                           
 18591                           ; BSR set to: 1
 18592                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18593  001ACE  0E01               	movlw	1
 18594  001AD0  D001               	goto	L18
 18595  001AD2                     l564:
 18596                           
 18597                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18598                           
 18599                           ; BSR set to: 0
 18600  001AD2  0E02               	movlw	2
 18601  001AD4                     L18:
 18602  001AD4  0100               	movlb	0	; () banked
 18603  001AD6  6FA0               	movwf	_MSD_State& (0+255),b
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18607                           
 18608                           ; BSR set to: 0
 18609  001AD8  0101               	movlb	1	; () banked
 18610  001ADA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18611  001ADC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18612  001ADE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18613  001AE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18614  001AE2  B4D8               	btfsc	status,2,c
 18615  001AE4  D002               	goto	l566
 18616                           
 18617                           ; BSR set to: 1
 18618                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18619  001AE6  0E00               	movlw	0
 18620  001AE8  D001               	goto	L19
 18621  001AEA                     l566:
 18622                           
 18623                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 18624                           
 18625                           ; BSR set to: 0
 18626  001AEA  0E01               	movlw	1
 18627  001AEC                     L19:
 18628  001AEC  0100               	movlb	0	; () banked
 18629  001AEE  6F99               	movwf	_MSDHostNoData& (0+255),b
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 18633                           
 18634                           ; BSR set to: 0
 18635  001AF0  C10F  F09F         	movff	_gblCBW+15,_MSDCommandState
 18636                           
 18637                           ;usb_device_msd.c: 454: }
 18638  001AF4  0012               	return	
 18639  001AF6                     l562:
 18640                           
 18641                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 18642                           
 18643                           ; BSR set to: 0
 18644  001AF6  0E01               	movlw	1
 18645  001AF8  6E01               	movwf	USBStallEndpoint@dir,c
 18646  001AFA  0E02               	movlw	2
 18647  001AFC  EC3A  F01D         	call	_USBStallEndpoint
 18648                           
 18649                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 18650  001B00  0E00               	movlw	0
 18651  001B02  6E01               	movwf	USBStallEndpoint@dir,c
 18652  001B04  0E02               	movlw	2
 18653  001B06  EC3A  F01D         	call	_USBStallEndpoint
 18654                           
 18655                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 18656  001B0A  0012               	return	
 18657  001B0C                     l561:
 18658                           
 18659                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 18660  001B0C  0E01               	movlw	1
 18661  001B0E  6E01               	movwf	USBStallEndpoint@dir,c
 18662  001B10  0E02               	movlw	2
 18663  001B12  EC3A  F01D         	call	_USBStallEndpoint
 18664                           
 18665                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 18666  001B16  0E00               	movlw	0
 18667  001B18  6E01               	movwf	USBStallEndpoint@dir,c
 18668  001B1A  0E02               	movlw	2
 18669  001B1C  EC3A  F01D         	call	_USBStallEndpoint
 18670                           
 18671                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 18672  001B20  0E00               	movlw	0
 18673  001B22  0100               	movlb	0	; () banked
 18674  001B24  6F98               	movwf	_MSDCBWValid& (0+255),b
 18675                           
 18676                           ; BSR set to: 0
 18677                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 18678                           
 18679                           ; BSR set to: 0
 18680  001B26  0012               	return	
 18681  001B28                     
 18682                           ; BSR set to: 0
 18683                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 18684                           
 18685                           ; BSR set to: 0
 18686  001B28  ECB1  F01C         	call	_MSDProcessCommand	;wreg free
 18687  001B2C  0AFF               	xorlw	255
 18688  001B2E  A4D8               	btfss	status,2,c
 18689  001B30  0012               	return	
 18690                           
 18691                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 18692  001B32  0E03               	movlw	3
 18693  001B34  0100               	movlb	0	; () banked
 18694  001B36  6FA0               	movwf	_MSD_State& (0+255),b
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 18698  001B38  0012               	return	
 18699  001B3A                     
 18700                           ; BSR set to: 0
 18701                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 18702                           
 18703                           ; BSR set to: 0
 18704  001B3A  ECB1  F01C         	call	_MSDProcessCommand	;wreg free
 18705  001B3E  0AFF               	xorlw	255
 18706  001B40  A4D8               	btfss	status,2,c
 18707  001B42  0012               	return	
 18708                           
 18709                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 18710  001B44  010D               	movlb	13	; () banked
 18711  001B46  518C               	movf	140,w,b	;volatile
 18712  001B48  A4D8               	btfss	status,2,c
 18713  001B4A  D008               	goto	l575
 18714                           
 18715                           ; BSR set to: 13
 18716  001B4C  5188               	movf	136,w,b	;volatile
 18717  001B4E  1189               	iorwf	137,w,b	;volatile
 18718  001B50  118A               	iorwf	138,w,b	;volatile
 18719  001B52  118B               	iorwf	139,w,b	;volatile
 18720  001B54  B4D8               	btfsc	status,2,c
 18721  001B56  D002               	goto	l575
 18722                           
 18723                           ; BSR set to: 13
 18724                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 18725  001B58  0E02               	movlw	2
 18726  001B5A  6F8C               	movwf	140,b	;volatile
 18727  001B5C                     l575:
 18728                           
 18729                           ; BSR set to: 13
 18730                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 18731  001B5C  0E03               	movlw	3
 18732  001B5E  0100               	movlb	0	; () banked
 18733  001B60  6FA0               	movwf	_MSD_State& (0+255),b
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 18737  001B62  0012               	return	
 18738  001B64                     
 18739                           ; BSR set to: 0
 18740                           
 18741                           ; BSR set to: 0
 18742  001B64  C076  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 18743  001B68  C077  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 18744                           
 18745                           ; BSR set to: 0
 18746                           
 18747                           ; BSR set to: 0
 18748                           
 18749                           ; BSR set to: 0
 18750  001B6C  504E               	movf	_MSDTasks$2372,w,c
 18751  001B6E  104F               	iorwf	_MSDTasks$2372+1,w,c
 18752  001B70  B4D8               	btfsc	status,2,c
 18753  001B72  D00A               	goto	l577
 18754                           
 18755                           ; BSR set to: 0
 18756  001B74  C076  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 18757  001B78  C077  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 18758                           
 18759                           ; BSR set to: 0
 18760                           
 18761                           ; BSR set to: 0
 18762                           
 18763                           ; BSR set to: 0
 18764                           
 18765                           ; BSR set to: 0
 18766  001B7C  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 18767  001B80  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 18768  001B84  BEDF               	btfsc	indf2,7,c
 18769  001B86  0012               	return	
 18770  001B88                     l577:
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 18774                           
 18775                           ; BSR set to: 0
 18776  001B88  0E01               	movlw	1
 18777  001B8A  6E01               	movwf	USBTransferOnePacket@dir,c
 18778  001B8C  0E80               	movlw	128
 18779  001B8E  6E02               	movwf	USBTransferOnePacket@data,c
 18780  001B90  0E0D               	movlw	13
 18781  001B92  6E03               	movwf	USBTransferOnePacket@data+1,c
 18782  001B94  0E0D               	movlw	13
 18783  001B96  6E04               	movwf	USBTransferOnePacket@len,c
 18784  001B98  0E02               	movlw	2
 18785  001B9A  ECC4  F01E         	call	_USBTransferOnePacket
 18786  001B9E  C001  F08C         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18787  001BA2  C002  F08D         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18788                           
 18789                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 18790  001BA6  0100               	movlb	0	; () banked
 18791  001BA8  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 18792  001BAA  118F               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18793  001BAC  B4D8               	btfsc	status,2,c
 18794  001BAE  D006               	goto	u11070
 18795                           
 18796                           ; BSR set to: 0
 18797  001BB0  C08E  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18798  001BB4  C08F  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18799  001BB8  BEDF               	btfsc	indf2,7,c
 18800  001BBA  D00F               	goto	l586
 18801  001BBC                     u11070:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 18805                           
 18806                           ; BSR set to: 0
 18807  001BBC  0E00               	movlw	0
 18808  001BBE  6E01               	movwf	USBTransferOnePacket@dir,c
 18809  001BC0  0E40               	movlw	64
 18810  001BC2  6E02               	movwf	USBTransferOnePacket@data,c
 18811  001BC4  0E0D               	movlw	13
 18812  001BC6  6E03               	movwf	USBTransferOnePacket@data+1,c
 18813  001BC8  0E40               	movlw	64
 18814  001BCA  6E04               	movwf	USBTransferOnePacket@len,c
 18815  001BCC  0E02               	movlw	2
 18816  001BCE  ECC4  F01E         	call	_USBTransferOnePacket
 18817  001BD2  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 18818  001BD6  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 18819  001BDA                     l586:
 18820                           
 18821                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 18822  001BDA  0E00               	movlw	0
 18823  001BDC  0100               	movlb	0	; () banked
 18824  001BDE  6FA0               	movwf	_MSD_State& (0+255),b
 18825                           
 18826                           ;usb_device_msd.c: 513: break;
 18827  001BE0  0012               	return	
 18828  001BE2                     
 18829                           ; BSR set to: 0
 18830                           ;usb_device_msd.c: 518: MSD_State=0x00;
 18831                           
 18832                           ; BSR set to: 0
 18833  001BE2  0E00               	movlw	0
 18834  001BE4  6FA0               	movwf	_MSD_State& (0+255),b
 18835                           
 18836                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 18837  001BE6  0E02               	movlw	2
 18838  001BE8  010D               	movlb	13	; () banked
 18839  001BEA  6F8C               	movwf	140,b	;volatile
 18840                           
 18841                           ; BSR set to: 13
 18842                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 18843  001BEC  0E00               	movlw	0
 18844  001BEE  6E01               	movwf	USBStallEndpoint@dir,c
 18845  001BF0  0E02               	movlw	2
 18846  001BF2  EC3A  F01D         	call	_USBStallEndpoint
 18847                           
 18848                           ;usb_device_msd.c: 521: }
 18849  001BF6  0012               	return	
 18850  001BF8                     l554:
 18851  001BF8  0100               	movlb	0	; () banked
 18852  001BFA  51A0               	movf	_MSD_State& (0+255),w,b
 18853                           
 18854                           ; Switch size 1, requested type "space"
 18855                           ; Number of cases is 4, Range of values is 0 to 3
 18856                           ; switch strategies available:
 18857                           ; Name         Instructions Cycles
 18858                           ; simple_byte           13     7 (average)
 18859                           ;	Chosen strategy is simple_byte
 18860  001BFC  0A00               	xorlw	0	; case 0
 18861  001BFE  B4D8               	btfsc	status,2,c
 18862  001C00  D6E3               	goto	l555
 18863  001C02  0A01               	xorlw	1	; case 1
 18864  001C04  B4D8               	btfsc	status,2,c
 18865  001C06  D790               	goto	l571
 18866  001C08  0A03               	xorlw	3	; case 2
 18867  001C0A  B4D8               	btfsc	status,2,c
 18868  001C0C  D796               	goto	l573
 18869  001C0E  0A01               	xorlw	1	; case 3
 18870  001C10  B4D8               	btfsc	status,2,c
 18871  001C12  D7A8               	goto	l576
 18872  001C14  D7E6               	goto	l589
 18873  001C16                     __end_of_MSDTasks:
 18874                           	opt stack 0
 18875                           tosu	equ	0xFFF
 18876                           tosh	equ	0xFFE
 18877                           tosl	equ	0xFFD
 18878                           pclath	equ	0xFFA
 18879                           tblptru	equ	0xFF8
 18880                           tblptrh	equ	0xFF7
 18881                           tblptrl	equ	0xFF6
 18882                           tablat	equ	0xFF5
 18883                           prodh	equ	0xFF4
 18884                           prodl	equ	0xFF3
 18885                           intcon	equ	0xFF2
 18886                           intcon2	equ	0xFF1
 18887                           intcon3	equ	0xFF0
 18888                           indf0	equ	0xFEF
 18889                           postinc0	equ	0xFEE
 18890                           fsr0h	equ	0xFEA
 18891                           fsr0l	equ	0xFE9
 18892                           wreg	equ	0xFE8
 18893                           indf1	equ	0xFE7
 18894                           postdec1	equ	0xFE5
 18895                           plusw1	equ	0xFE3
 18896                           fsr1h	equ	0xFE2
 18897                           fsr1l	equ	0xFE1
 18898                           indf2	equ	0xFDF
 18899                           postinc2	equ	0xFDE
 18900                           postdec2	equ	0xFDD
 18901                           plusw2	equ	0xFDB
 18902                           fsr2h	equ	0xFDA
 18903                           fsr2l	equ	0xFD9
 18904                           status	equ	0xFD8
 18905                           
 18906 ;; *************** function _MSDProcessCommand *****************
 18907 ;; Defined at:
 18908 ;;		line 553 in file "usb_device_msd.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;		None
 18911 ;; Auto vars:     Size  Location     Type
 18912 ;;		None
 18913 ;; Return value:  Size  Location     Type
 18914 ;;                  1    wreg      unsigned char 
 18915 ;; Registers used:
 18916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18917 ;; Tracked objects:
 18918 ;;		On entry : 0/0
 18919 ;;		On exit  : 0/0
 18920 ;;		Unchanged: 0/0
 18921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18924 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18926 ;;Total ram usage:        5 bytes
 18927 ;; Hardware stack levels used:    1
 18928 ;; Hardware stack levels required when called:    9
 18929 ;; This function calls:
 18930 ;;		_ExternalFlash_MediaDetect
 18931 ;;		_ExternalFlash_MediaInitialize
 18932 ;;		_MSDProcessCommandMediaAbsent
 18933 ;;		_MSDProcessCommandMediaPresent
 18934 ;; This function is called by:
 18935 ;;		_MSDTasks
 18936 ;; This function uses a non-reentrant model
 18937 ;;
 18938                           
 18939                           	psect	text92
 18940  003962                     __ptext92:
 18941                           	opt stack 0
 18942  003962                     _MSDProcessCommand:
 18943                           	opt stack 19
 18944                           
 18945                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18946                           
 18947                           ;incstack = 0
 18948  003962  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18949  003966  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18950  00396A  D801               	call	u10038
 18951  00396C  D00A               	goto	u10039
 18952  00396E                     u10038:
 18953  00396E  0005               	push	
 18954  003970  6EFA               	movwf	pclath,c
 18955  003972  0101               	movlb	1	; () banked
 18956  003974  51EA               	movf	(_LUN+6)& (0+255),w,b
 18957  003976  6EFD               	movwf	tosl,c
 18958  003978  51EB               	movf	(_LUN+7)& (0+255),w,b
 18959  00397A  6EFE               	movwf	tosh,c
 18960  00397C  6AFF               	clrf	tosu,c
 18961  00397E  50FA               	movf	pclath,w,c
 18962  003980  0012               	return		;indir
 18963  003982                     u10039:
 18964  003982  0900               	iorlw	0
 18965  003984  B4D8               	btfsc	status,2,c
 18966  003986  D00C               	goto	u10050
 18967  003988  0101               	movlb	1	; () banked
 18968  00398A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18969  00398C  0D01               	mullw	1
 18970  00398E  0E9A               	movlw	low _SoftDetach
 18971  003990  24F3               	addwf	prodl,w,c
 18972  003992  6ED9               	movwf	fsr2l,c
 18973  003994  0E00               	movlw	high _SoftDetach
 18974  003996  20F4               	addwfc	prodh,w,c
 18975  003998  6EDA               	movwf	fsr2h,c
 18976  00399A  04DE               	decf	postinc2,w,c
 18977  00399C  A4D8               	btfss	status,2,c
 18978  00399E  D019               	goto	l592
 18979  0039A0                     u10050:
 18980                           
 18981                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18982                           
 18983                           ; BSR set to: 1
 18984  0039A0  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18985  0039A4  0E01               	movlw	1
 18986  0039A6  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18987  0039A8  0E00               	movlw	0
 18988  0039AA  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18989  0039AC  2A48               	incf	??_MSDProcessCommand,f,c
 18990  0039AE  D003               	goto	u10064
 18991  0039B0                     u10065:
 18992  0039B0  90D8               	bcf	status,0,c
 18993  0039B2  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18994  0039B4  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18995  0039B6                     u10064:
 18996  0039B6  2E48               	decfsz	??_MSDProcessCommand,f,c
 18997  0039B8  D7FB               	goto	u10065
 18998  0039BA  1C49               	comf	??_MSDProcessCommand+1,w,c
 18999  0039BC  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19000  0039BE  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19001  0039C0  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19002  0039C2  504B               	movf	??_MSDProcessCommand+3,w,c
 19003  0039C4  0101               	movlb	1	; () banked
 19004  0039C6  176D               	andwf	_gblMediaPresent& (0+255),f,b
 19005  0039C8  504C               	movf	??_MSDProcessCommand+4,w,c
 19006  0039CA  176E               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19007                           
 19008                           ; BSR set to: 1
 19009                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19010  0039CC  ECB3  F030         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19011                           
 19012                           ;usb_device_msd.c: 563: }
 19013  0039D0  D04E               	goto	l599
 19014  0039D2                     l592:
 19015                           
 19016                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19017  0039D2  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19018  0039D6  0E01               	movlw	1
 19019  0039D8  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19020  0039DA  0E00               	movlw	0
 19021  0039DC  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19022  0039DE  2A48               	incf	??_MSDProcessCommand,f,c
 19023  0039E0  D003               	goto	u10074
 19024  0039E2                     u10075:
 19025  0039E2  90D8               	bcf	status,0,c
 19026  0039E4  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19027  0039E6  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19028  0039E8                     u10074:
 19029  0039E8  2E48               	decfsz	??_MSDProcessCommand,f,c
 19030  0039EA  D7FB               	goto	u10075
 19031  0039EC  0101               	movlb	1	; () banked
 19032  0039EE  516D               	movf	_gblMediaPresent& (0+255),w,b
 19033  0039F0  1649               	andwf	??_MSDProcessCommand+1,f,c
 19034  0039F2  516E               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19035  0039F4  164A               	andwf	??_MSDProcessCommand+2,f,c
 19036  0039F6  5049               	movf	??_MSDProcessCommand+1,w,c
 19037  0039F8  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19038  0039FA  A4D8               	btfss	status,2,c
 19039  0039FC  D036               	goto	l596
 19040                           
 19041                           ; BSR set to: 1
 19042                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19043  0039FE  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19044  003A02  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19045  003A06  D801               	call	u10098
 19046  003A08  D009               	goto	u10099
 19047  003A0A                     u10098:
 19048  003A0A  0005               	push	
 19049  003A0C  6EFA               	movwf	pclath,c
 19050  003A0E  51E4               	movf	_LUN& (0+255),w,b
 19051  003A10  6EFD               	movwf	tosl,c
 19052  003A12  51E5               	movf	(_LUN+1)& (0+255),w,b
 19053  003A14  6EFE               	movwf	tosh,c
 19054  003A16  6AFF               	clrf	tosu,c
 19055  003A18  50FA               	movf	pclath,w,c
 19056  003A1A  0012               	return		;indir
 19057  003A1C                     u10099:
 19058  003A1C  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19059  003A1E  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19060  003A20  B4D8               	btfsc	status,2,c
 19061  003A22  D020               	goto	l597
 19062                           
 19063                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19064  003A24  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19065  003A28  0E01               	movlw	1
 19066  003A2A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19067  003A2C  0E00               	movlw	0
 19068  003A2E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19069  003A30  2A48               	incf	??_MSDProcessCommand,f,c
 19070  003A32  D003               	goto	u10114
 19071  003A34                     u10115:
 19072  003A34  90D8               	bcf	status,0,c
 19073  003A36  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19074  003A38  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19075  003A3A                     u10114:
 19076  003A3A  2E48               	decfsz	??_MSDProcessCommand,f,c
 19077  003A3C  D7FB               	goto	u10115
 19078  003A3E  5049               	movf	??_MSDProcessCommand+1,w,c
 19079  003A40  0101               	movlb	1	; () banked
 19080  003A42  136D               	iorwf	_gblMediaPresent& (0+255),f,b
 19081  003A44  504A               	movf	??_MSDProcessCommand+2,w,c
 19082  003A46  136E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19083                           
 19084                           ; BSR set to: 1
 19085                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19086  003A48  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19087  003A4A  0BF0               	andlw	-16
 19088  003A4C  0906               	iorlw	6
 19089  003A4E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19090                           
 19091                           ; BSR set to: 1
 19092                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19093  003A50  0E28               	movlw	40
 19094  003A52  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19095                           
 19096                           ; BSR set to: 1
 19097                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19098  003A54  0E00               	movlw	0
 19099  003A56  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19100                           
 19101                           ; BSR set to: 1
 19102                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19103  003A58  0E01               	movlw	1
 19104  003A5A  010D               	movlb	13	; () banked
 19105  003A5C  6F8C               	movwf	140,b	;volatile
 19106                           
 19107                           ; BSR set to: 13
 19108                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19109  003A5E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19110                           
 19111                           ;usb_device_msd.c: 589: }
 19112  003A62  D005               	goto	l599
 19113  003A64                     l597:
 19114                           
 19115                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19116  003A64  ECB3  F030         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19117                           
 19118                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19119  003A68  D002               	goto	l599
 19120  003A6A                     l596:
 19121                           
 19122                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19123  003A6A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19124  003A6E                     l599:
 19125                           
 19126                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19127  003A6E  0100               	movlb	0	; () banked
 19128  003A70  519F               	movf	_MSDCommandState& (0+255),w,b
 19129  003A72  0012               	return	
 19130  003A74                     __end_of_MSDProcessCommand:
 19131                           	opt stack 0
 19132                           tosu	equ	0xFFF
 19133                           tosh	equ	0xFFE
 19134                           tosl	equ	0xFFD
 19135                           pclath	equ	0xFFA
 19136                           tblptru	equ	0xFF8
 19137                           tblptrh	equ	0xFF7
 19138                           tblptrl	equ	0xFF6
 19139                           tablat	equ	0xFF5
 19140                           prodh	equ	0xFF4
 19141                           prodl	equ	0xFF3
 19142                           intcon	equ	0xFF2
 19143                           intcon2	equ	0xFF1
 19144                           intcon3	equ	0xFF0
 19145                           indf0	equ	0xFEF
 19146                           postinc0	equ	0xFEE
 19147                           fsr0h	equ	0xFEA
 19148                           fsr0l	equ	0xFE9
 19149                           wreg	equ	0xFE8
 19150                           indf1	equ	0xFE7
 19151                           postdec1	equ	0xFE5
 19152                           plusw1	equ	0xFE3
 19153                           fsr1h	equ	0xFE2
 19154                           fsr1l	equ	0xFE1
 19155                           indf2	equ	0xFDF
 19156                           postinc2	equ	0xFDE
 19157                           postdec2	equ	0xFDD
 19158                           plusw2	equ	0xFDB
 19159                           fsr2h	equ	0xFDA
 19160                           fsr2l	equ	0xFD9
 19161                           status	equ	0xFD8
 19162                           
 19163 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19164 ;; Defined at:
 19165 ;;		line 635 in file "usb_device_msd.c"
 19166 ;; Parameters:    Size  Location     Type
 19167 ;;		None
 19168 ;; Auto vars:     Size  Location     Type
 19169 ;;		None
 19170 ;; Return value:  Size  Location     Type
 19171 ;;                  1    wreg      void 
 19172 ;; Registers used:
 19173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19174 ;; Tracked objects:
 19175 ;;		On entry : 0/0
 19176 ;;		On exit  : 0/0
 19177 ;;		Unchanged: 0/0
 19178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19183 ;;Total ram usage:        0 bytes
 19184 ;; Hardware stack levels used:    1
 19185 ;; Hardware stack levels required when called:    8
 19186 ;; This function calls:
 19187 ;;		_MSDErrorHandler
 19188 ;;		_MSDProcessCommandMediaPresent
 19189 ;;		_ResetSenseData
 19190 ;; This function is called by:
 19191 ;;		_MSDProcessCommand
 19192 ;; This function uses a non-reentrant model
 19193 ;;
 19194                           
 19195                           	psect	text93
 19196  006166                     __ptext93:
 19197                           	opt stack 0
 19198  006166                     _MSDProcessCommandMediaAbsent:
 19199                           	opt stack 19
 19200                           
 19201                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;incstack = 0
 19205  006166  D01E               	goto	l603
 19206  006168                     
 19207                           ;usb_device_msd.c: 646: ResetSenseData();
 19208  006168  ECE4  F030         	call	_ResetSenseData	;wreg free
 19209                           
 19210                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19211  00616C  0101               	movlb	1	; () banked
 19212  00616E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19213  006170  0BF0               	andlw	-16
 19214  006172  0902               	iorlw	2
 19215  006174  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19216                           
 19217                           ; BSR set to: 1
 19218                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19219  006176  0E3A               	movlw	58
 19220  006178  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19221                           
 19222                           ; BSR set to: 1
 19223                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19224  00617A  0E00               	movlw	0
 19225  00617C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19226                           
 19227                           ; BSR set to: 1
 19228                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19229  00617E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19230                           
 19231                           ;usb_device_msd.c: 655: break;
 19232  006182  0012               	return	
 19233  006184                     
 19234                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19235  006184  0E01               	movlw	1
 19236  006186  010D               	movlb	13	; () banked
 19237  006188  6F8C               	movwf	140,b	;volatile
 19238                           
 19239                           ; BSR set to: 13
 19240                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19241  00618A  0100               	movlb	0	; () banked
 19242  00618C  699F               	setf	_MSDCommandState& (0+255),b
 19243                           
 19244                           ;usb_device_msd.c: 665: break;
 19245  00618E  0012               	return	
 19246  006190                     
 19247                           ; BSR set to: 0
 19248                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19249                           
 19250                           ; BSR set to: 0
 19251  006190  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19252                           
 19253                           ;usb_device_msd.c: 671: break;
 19254  006194  0012               	return	
 19255  006196                     
 19256                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19257  006196  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19258                           
 19259                           ;usb_device_msd.c: 677: break;
 19260  00619A  0012               	return	
 19261  00619C                     
 19262                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 19263  00619C  0E7F               	movlw	127
 19264  00619E  EC41  F01E         	call	_MSDErrorHandler
 19265                           
 19266                           ;usb_device_msd.c: 685: }
 19267                           
 19268                           ;usb_device_msd.c: 684: break;
 19269  0061A2  0012               	return	
 19270  0061A4                     l603:
 19271  0061A4  0100               	movlb	0	; () banked
 19272  0061A6  519F               	movf	_MSDCommandState& (0+255),w,b
 19273                           
 19274                           ; Switch size 1, requested type "space"
 19275                           ; Number of cases is 5, Range of values is 0 to 253
 19276                           ; switch strategies available:
 19277                           ; Name         Instructions Cycles
 19278                           ; simple_byte           16     9 (average)
 19279                           ;	Chosen strategy is simple_byte
 19280  0061A8  0A00               	xorlw	0	; case 0
 19281  0061AA  B4D8               	btfsc	status,2,c
 19282  0061AC  D7EB               	goto	l606
 19283  0061AE  0A03               	xorlw	3	; case 3
 19284  0061B0  B4D8               	btfsc	status,2,c
 19285  0061B2  D7DA               	goto	l604
 19286  0061B4  0A11               	xorlw	17	; case 18
 19287  0061B6  B4D8               	btfsc	status,2,c
 19288  0061B8  D7EB               	goto	l608
 19289  0061BA  0A0C               	xorlw	12	; case 30
 19290  0061BC  B4D8               	btfsc	status,2,c
 19291  0061BE  D7E2               	goto	l606
 19292  0061C0  0AE3               	xorlw	227	; case 253
 19293  0061C2  B4D8               	btfsc	status,2,c
 19294  0061C4  D7E8               	goto	l609
 19295  0061C6  D7EA               	goto	l610
 19296  0061C8                     __end_of_MSDProcessCommandMediaAbsent:
 19297                           	opt stack 0
 19298                           tosu	equ	0xFFF
 19299                           tosh	equ	0xFFE
 19300                           tosl	equ	0xFFD
 19301                           pclath	equ	0xFFA
 19302                           tblptru	equ	0xFF8
 19303                           tblptrh	equ	0xFF7
 19304                           tblptrl	equ	0xFF6
 19305                           tablat	equ	0xFF5
 19306                           prodh	equ	0xFF4
 19307                           prodl	equ	0xFF3
 19308                           intcon	equ	0xFF2
 19309                           intcon2	equ	0xFF1
 19310                           intcon3	equ	0xFF0
 19311                           indf0	equ	0xFEF
 19312                           postinc0	equ	0xFEE
 19313                           fsr0h	equ	0xFEA
 19314                           fsr0l	equ	0xFE9
 19315                           wreg	equ	0xFE8
 19316                           indf1	equ	0xFE7
 19317                           postdec1	equ	0xFE5
 19318                           plusw1	equ	0xFE3
 19319                           fsr1h	equ	0xFE2
 19320                           fsr1l	equ	0xFE1
 19321                           indf2	equ	0xFDF
 19322                           postinc2	equ	0xFDE
 19323                           postdec2	equ	0xFDD
 19324                           plusw2	equ	0xFDB
 19325                           fsr2h	equ	0xFDA
 19326                           fsr2l	equ	0xFD9
 19327                           status	equ	0xFD8
 19328                           
 19329 ;; *************** function _MSDProcessCommandMediaPresent *****************
 19330 ;; Defined at:
 19331 ;;		line 712 in file "usb_device_msd.c"
 19332 ;; Parameters:    Size  Location     Type
 19333 ;;		None
 19334 ;; Auto vars:     Size  Location     Type
 19335 ;;  capacity        4   66[COMRAM] struct .
 19336 ;;  sectorSize      4   62[COMRAM] struct .
 19337 ;;  i               1   70[COMRAM] unsigned char 
 19338 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 19339 ;; Return value:  Size  Location     Type
 19340 ;;                  1    wreg      void 
 19341 ;; Registers used:
 19342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19343 ;; Tracked objects:
 19344 ;;		On entry : 0/0
 19345 ;;		On exit  : 0/0
 19346 ;;		Unchanged: 0/0
 19347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19349 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19351 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19352 ;;Total ram usage:       14 bytes
 19353 ;; Hardware stack levels used:    1
 19354 ;; Hardware stack levels required when called:    7
 19355 ;; This function calls:
 19356 ;;		_ExternalFlash_CapacityRead
 19357 ;;		_ExternalFlash_SectorSizeRead
 19358 ;;		_ExternalFlash_WriteProtectStateGet
 19359 ;;		_MSDCheckForErrorCases
 19360 ;;		_MSDComputeDeviceInAndResidue
 19361 ;;		_MSDErrorHandler
 19362 ;;		_MSDReadHandler
 19363 ;;		_MSDWriteHandler
 19364 ;;		_ResetSenseData
 19365 ;;		_USBTransferOnePacket
 19366 ;;		_memcpy
 19367 ;; This function is called by:
 19368 ;;		_MSDProcessCommand
 19369 ;;		_MSDProcessCommandMediaAbsent
 19370 ;; This function uses a non-reentrant model
 19371 ;;
 19372                           
 19373                           	psect	text94
 19374  00049C                     __ptext94:
 19375                           	opt stack 0
 19376  00049C                     _MSDProcessCommandMediaPresent:
 19377                           	opt stack 20
 19378                           
 19379                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 19380                           
 19381                           ;incstack = 0
 19382  00049C  D1B9               	goto	l614
 19383  00049E                     
 19384                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 19385  00049E  EC04  F012         	call	_MSDReadHandler	;wreg free
 19386  0004A2  0900               	iorlw	0
 19387  0004A4  A4D8               	btfss	status,2,c
 19388  0004A6  0012               	return	
 19389                           
 19390                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 19391  0004A8  0100               	movlb	0	; () banked
 19392  0004AA  699F               	setf	_MSDCommandState& (0+255),b
 19393                           
 19394                           ; BSR set to: 0
 19395                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 19396  0004AC  0012               	return	
 19397  0004AE                     
 19398                           ; BSR set to: 0
 19399                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 19400                           
 19401                           ; BSR set to: 0
 19402  0004AE  EC0F  F009         	call	_MSDWriteHandler	;wreg free
 19403  0004B2  0900               	iorlw	0
 19404  0004B4  A4D8               	btfss	status,2,c
 19405  0004B6  0012               	return	
 19406                           
 19407                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 19408  0004B8  0100               	movlb	0	; () banked
 19409  0004BA  699F               	setf	_MSDCommandState& (0+255),b
 19410                           
 19411                           ; BSR set to: 0
 19412                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 19413  0004BC  0012               	return	
 19414  0004BE                     
 19415                           ; BSR set to: 0
 19416                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 19417                           
 19418                           ; BSR set to: 0
 19419  0004BE  0599               	decf	_MSDHostNoData& (0+255),w,b
 19420  0004C0  A4D8               	btfss	status,2,c
 19421  0004C2  D002               	goto	l621
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 19425  0004C4  699F               	setf	_MSDCommandState& (0+255),b
 19426                           
 19427                           ;usb_device_msd.c: 751: break;
 19428  0004C6  0012               	return	
 19429  0004C8                     l621:
 19430                           
 19431                           ; BSR set to: 0
 19432                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 19433  0004C8  C112  F08B         	movff	_gblCBW+18,_TransferLength+1
 19434                           
 19435                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 19436  0004CC  C113  F08A         	movff	_gblCBW+19,_TransferLength
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 19440  0004D0  C08A  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 19441  0004D4  C08B  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 19442  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 19443  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 19444  0004DC  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 19445  0004E0  0900               	iorlw	0
 19446  0004E2  A4D8               	btfss	status,2,c
 19447  0004E4  0012               	return	
 19448                           
 19449                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 19450                           
 19451                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 19452  0004E6  0E00               	movlw	0
 19453  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19454  0004EA  0E24               	movlw	36
 19455  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19456  0004EE  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19457                           
 19458                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 19459  0004F2  0E00               	movlw	0
 19460  0004F4  6E01               	movwf	memcpy@d1,c
 19461  0004F6  0E06               	movlw	6
 19462  0004F8  6E02               	movwf	memcpy@d1+1,c
 19463  0004FA  0E49               	movlw	low _inq_resp
 19464  0004FC  6E03               	movwf	memcpy@s1,c
 19465  0004FE  0E8F               	movlw	high _inq_resp
 19466  000500  6E04               	movwf	memcpy@s1+1,c
 19467  000502  5003               	movf	memcpy@s1,w,c
 19468  000504  1004               	iorwf	memcpy@s1+1,w,c
 19469  000506  A4D8               	btfss	status,2,c
 19470  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 19471  00050A  6E05               	movwf	memcpy@s1+2,c
 19472  00050C  0E00               	movlw	0
 19473  00050E  6E07               	movwf	memcpy@n+1,c
 19474  000510  0E24               	movlw	36
 19475  000512  6E06               	movwf	memcpy@n,c
 19476  000514  EC1C  F030         	call	_memcpy	;wreg free
 19477                           
 19478                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 19479  000518  0EFD               	movlw	253
 19480  00051A  0100               	movlb	0	; () banked
 19481  00051C  6F9F               	movwf	_MSDCommandState& (0+255),b
 19482                           
 19483                           ;usb_device_msd.c: 773: break;
 19484  00051E  0012               	return	
 19485  000520                     
 19486                           ; BSR set to: 0
 19487                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 19488                           
 19489                           ; BSR set to: 0
 19490  000520  C1F2  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 19491  000524  C1F3  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 19492  000528  D801               	call	u9168
 19493  00052A  D00A               	goto	u9169
 19494  00052C                     u9168:
 19495  00052C  0005               	push	
 19496  00052E  6EFA               	movwf	pclath,c
 19497  000530  0101               	movlb	1	; () banked
 19498  000532  51E6               	movf	(_LUN+2)& (0+255),w,b
 19499  000534  6EFD               	movwf	tosl,c
 19500  000536  51E7               	movf	(_LUN+3)& (0+255),w,b
 19501  000538  6EFE               	movwf	tosh,c
 19502  00053A  6AFF               	clrf	tosu,c
 19503  00053C  50FA               	movf	pclath,w,c
 19504  00053E  0012               	return		;indir
 19505  000540                     u9169:
 19506  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 19507  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 19508  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 19509  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 19510                           
 19511                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 19512  000550  C1F2  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 19513  000554  C1F3  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 19514  000558  D801               	call	u9178
 19515  00055A  D00A               	goto	u9179
 19516  00055C                     u9178:
 19517  00055C  0005               	push	
 19518  00055E  6EFA               	movwf	pclath,c
 19519  000560  0101               	movlb	1	; () banked
 19520  000562  51E8               	movf	(_LUN+4)& (0+255),w,b
 19521  000564  6EFD               	movwf	tosl,c
 19522  000566  51E9               	movf	(_LUN+5)& (0+255),w,b
 19523  000568  6EFE               	movwf	tosh,c
 19524  00056A  6AFF               	clrf	tosu,c
 19525  00056C  50FA               	movf	pclath,w,c
 19526  00056E  0012               	return		;indir
 19527  000570                     u9179:
 19528  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19529  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19530  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19531  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19532                           
 19533                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19534  00057C  EE26 F000          	lfsr	2,1536
 19535  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19536                           
 19537                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19538  000584  EE26 F001          	lfsr	2,1537	;volatile
 19539  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19540                           
 19541                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19542  00058C  EE26 F002          	lfsr	2,1538	;volatile
 19543  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19544                           
 19545                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 19546  000594  EE26 F003          	lfsr	2,1539	;volatile
 19547  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 19548                           
 19549                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 19550  00059C  EE26 F004          	lfsr	2,1540	;volatile
 19551  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 19552                           
 19553                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 19554  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 19555  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 19556                           
 19557                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 19558  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 19559  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 19560                           
 19561                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 19562  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 19563  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 19564                           
 19565                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 19566  0005BC  0E00               	movlw	0
 19567  0005BE  0100               	movlb	0	; () banked
 19568  0005C0  6F8B               	movwf	(_TransferLength+1)& (0+255),b
 19569  0005C2  0E08               	movlw	8
 19570  0005C4  6F8A               	movwf	_TransferLength& (0+255),b
 19571                           
 19572                           ; BSR set to: 0
 19573                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 19574  0005C6  0E00               	movlw	0
 19575  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19576  0005CA  0E08               	movlw	8
 19577  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19578  0005CE  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19579                           
 19580                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19581  0005D2  0EFD               	movlw	253
 19582  0005D4  0100               	movlb	0	; () banked
 19583  0005D6  6F9F               	movwf	_MSDCommandState& (0+255),b
 19584                           
 19585                           ;usb_device_msd.c: 802: break;
 19586  0005D8  0012               	return	
 19587  0005DA                     
 19588                           ; BSR set to: 0
 19589                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19590                           
 19591                           ; BSR set to: 0
 19592  0005DA  0599               	decf	_MSDHostNoData& (0+255),w,b
 19593  0005DC  A4D8               	btfss	status,2,c
 19594  0005DE  D002               	goto	l625
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19598  0005E0  699F               	setf	_MSDCommandState& (0+255),b
 19599                           
 19600                           ;usb_device_msd.c: 814: break;
 19601  0005E2  0012               	return	
 19602  0005E4                     l625:
 19603                           
 19604                           ; BSR set to: 0
 19605                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19606                           
 19607                           ; BSR set to: 0
 19608  0005E4  0E00               	movlw	0
 19609  0005E6  6F8B               	movwf	(_TransferLength+1)& (0+255),b
 19610  0005E8  0E12               	movlw	18
 19611  0005EA  6F8A               	movwf	_TransferLength& (0+255),b
 19612                           
 19613                           ; BSR set to: 0
 19614                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19615  0005EC  0E00               	movlw	0
 19616  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19617  0005F0  0E12               	movlw	18
 19618  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19619  0005F4  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19620                           
 19621                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 19622  0005F8  0E00               	movlw	0
 19623  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19624  0005FC                     l11931:
 19625  0005FC  0E11               	movlw	17
 19626  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 19627  000600  D001               	goto	l626
 19628  000602  D014               	goto	u9200
 19629  000604                     l626:
 19630                           
 19631                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 19632  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19633  000606  0D01               	mullw	1
 19634  000608  0E1F               	movlw	low _gblSenseData
 19635  00060A  24F3               	addwf	prodl,w,c
 19636  00060C  6ED9               	movwf	fsr2l,c
 19637  00060E  0E01               	movlw	high _gblSenseData
 19638  000610  20F4               	addwfc	prodh,w,c
 19639  000612  6EDA               	movwf	fsr2h,c
 19640  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19641  000616  0D01               	mullw	1
 19642  000618  0E00               	movlw	0
 19643  00061A  24F3               	addwf	prodl,w,c
 19644  00061C  6EE1               	movwf	fsr1l,c
 19645  00061E  0E06               	movlw	6
 19646  000620  20F4               	addwfc	prodh,w,c
 19647  000622  6EE2               	movwf	fsr1h,c
 19648  000624  CFDF FFE7          	movff	indf2,indf1
 19649  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19650  00062A  D7E8               	goto	l11931
 19651  00062C                     u9200:
 19652                           
 19653                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 19654  00062C  0EFD               	movlw	253
 19655  00062E  0100               	movlb	0	; () banked
 19656  000630  6F9F               	movwf	_MSDCommandState& (0+255),b
 19657                           
 19658                           ;usb_device_msd.c: 827: break;
 19659  000632  0012               	return	
 19660  000634                     l628:
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 19664  000634  0E03               	movlw	3
 19665  000636  CFE8 F600          	movff	wreg,1536
 19666                           
 19667                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 19668  00063A  0E00               	movlw	0
 19669  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 19670                           
 19671                           ; BSR set to: 0
 19672                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 19673  000640  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19674  000644  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19675  000648  D801               	call	u9218
 19676  00064A  D00A               	goto	u9219
 19677  00064C                     u9218:
 19678  00064C  0005               	push	
 19679  00064E  6EFA               	movwf	pclath,c
 19680  000650  0101               	movlb	1	; () banked
 19681  000652  51EE               	movf	(_LUN+10)& (0+255),w,b
 19682  000654  6EFD               	movwf	tosl,c
 19683  000656  51EF               	movf	(_LUN+11)& (0+255),w,b
 19684  000658  6EFE               	movwf	tosh,c
 19685  00065A  6AFF               	clrf	tosu,c
 19686  00065C  50FA               	movf	pclath,w,c
 19687  00065E  0012               	return		;indir
 19688  000660                     u9219:
 19689  000660  0900               	iorlw	0
 19690  000662  A4D8               	btfss	status,2,c
 19691  000664  D004               	goto	l630
 19692  000666  0E00               	movlw	0
 19693  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19694  00066A  0E00               	movlw	0
 19695  00066C  D003               	goto	L20
 19696  00066E                     l630:
 19697  00066E  0E00               	movlw	0
 19698  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19699  000672  0E80               	movlw	128
 19700  000674                     L20:
 19701  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 19702  000676  EE26 F002          	lfsr	2,1538	;volatile
 19703  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 19704                           
 19705                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 19706  00067E  0E00               	movlw	0
 19707  000680  CFE8 F603          	movff	wreg,1539	;volatile
 19708                           
 19709                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 19710  000684  0E00               	movlw	0
 19711  000686  0100               	movlb	0	; () banked
 19712  000688  6F8B               	movwf	(_TransferLength+1)& (0+255),b
 19713  00068A  0E04               	movlw	4
 19714  00068C  6F8A               	movwf	_TransferLength& (0+255),b
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 19718  00068E  0E00               	movlw	0
 19719  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19720  000692  0E04               	movlw	4
 19721  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19722  000696  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19723                           
 19724                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 19725  00069A  0EFD               	movlw	253
 19726  00069C  0100               	movlb	0	; () banked
 19727  00069E  6F9F               	movwf	_MSDCommandState& (0+255),b
 19728                           
 19729                           ;usb_device_msd.c: 839: break;
 19730  0006A0  0012               	return	
 19731  0006A2                     
 19732                           ; BSR set to: 0
 19733                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 19734                           
 19735                           ; BSR set to: 0
 19736  0006A2  0101               	movlb	1	; () banked
 19737  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19738  0006A6  0BF0               	andlw	-16
 19739  0006A8  0905               	iorlw	5
 19740  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19741                           
 19742                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 19743  0006AC  0E20               	movlw	32
 19744  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19745                           
 19746                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 19747  0006B0  0E00               	movlw	0
 19748  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19749                           
 19750                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 19751  0006B4  0E01               	movlw	1
 19752  0006B6  010D               	movlb	13	; () banked
 19753  0006B8  6F8C               	movwf	140,b	;volatile
 19754                           
 19755                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 19756  0006BA  0E00               	movlw	0
 19757  0006BC  6F88               	movwf	136,b	;volatile
 19758  0006BE  0E00               	movlw	0
 19759  0006C0  6F89               	movwf	137,b	;volatile
 19760  0006C2  0E00               	movlw	0
 19761  0006C4  6F8A               	movwf	138,b	;volatile
 19762  0006C6  0E00               	movlw	0
 19763  0006C8  6F8B               	movwf	139,b	;volatile
 19764                           
 19765                           ; BSR set to: 13
 19766                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 19767  0006CA  0100               	movlb	0	; () banked
 19768  0006CC  699F               	setf	_MSDCommandState& (0+255),b
 19769                           
 19770                           ;usb_device_msd.c: 848: break;
 19771  0006CE  0012               	return	
 19772  0006D0                     
 19773                           ; BSR set to: 0
 19774                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 19775                           
 19776                           ; BSR set to: 0
 19777  0006D0  0E00               	movlw	0
 19778  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 19779  0006D4  0E00               	movlw	0
 19780  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 19781  0006D8  0E00               	movlw	0
 19782  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 19783  0006DC  0E00               	movlw	0
 19784  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 19785  0006E0  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 19786  0006E4  0900               	iorlw	0
 19787  0006E6  A4D8               	btfss	status,2,c
 19788  0006E8  0012               	return	
 19789                           
 19790                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 19791                           
 19792                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 19793  0006EA  0101               	movlb	1	; () banked
 19794  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19795  0006EE  0B0F               	andlw	15
 19796  0006F0  0A06               	xorlw	6
 19797  0006F2  A4D8               	btfss	status,2,c
 19798  0006F4  D007               	goto	l636
 19799                           
 19800                           ; BSR set to: 1
 19801  0006F6  010D               	movlb	13	; () banked
 19802  0006F8  058C               	decf	140,w,b	;volatile
 19803  0006FA  A4D8               	btfss	status,2,c
 19804  0006FC  D003               	goto	l636
 19805                           
 19806                           ; BSR set to: 13
 19807                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 19808  0006FE  0100               	movlb	0	; () banked
 19809  000700  699F               	setf	_MSDCommandState& (0+255),b
 19810                           
 19811                           ;usb_device_msd.c: 870: }
 19812  000702  0012               	return	
 19813  000704                     l636:
 19814                           
 19815                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 19816                           
 19817                           ; BSR set to: 0
 19818  000704  ECE4  F030         	call	_ResetSenseData	;wreg free
 19819                           
 19820                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 19821  000708  0E00               	movlw	0
 19822  00070A  010D               	movlb	13	; () banked
 19823  00070C  6F88               	movwf	136,b	;volatile
 19824  00070E  0E00               	movlw	0
 19825  000710  6F89               	movwf	137,b	;volatile
 19826  000712  0E00               	movlw	0
 19827  000714  6F8A               	movwf	138,b	;volatile
 19828  000716  0E00               	movlw	0
 19829  000718  6F8B               	movwf	139,b	;volatile
 19830                           
 19831                           ; BSR set to: 13
 19832                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 19833  00071A  0100               	movlb	0	; () banked
 19834  00071C  699F               	setf	_MSDCommandState& (0+255),b
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 19838  00071E  0012               	return	
 19839  000720                     
 19840                           ; BSR set to: 0
 19841                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 19842                           
 19843                           ; BSR set to: 0
 19844                           
 19845                           ; BSR set to: 0
 19846  000720  0E00               	movlw	0
 19847  000722  010D               	movlb	13	; () banked
 19848  000724  6F88               	movwf	136,b	;volatile
 19849  000726  0E00               	movlw	0
 19850  000728  6F89               	movwf	137,b	;volatile
 19851  00072A  0E00               	movlw	0
 19852  00072C  6F8A               	movwf	138,b	;volatile
 19853  00072E  0E00               	movlw	0
 19854  000730  6F8B               	movwf	139,b	;volatile
 19855                           
 19856                           ; BSR set to: 13
 19857                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 19858  000732  0100               	movlb	0	; () banked
 19859  000734  699F               	setf	_MSDCommandState& (0+255),b
 19860                           
 19861                           ;usb_device_msd.c: 885: break;
 19862  000736  0012               	return	
 19863  000738                     
 19864                           ; BSR set to: 0
 19865                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 19866                           
 19867                           ; BSR set to: 0
 19868  000738  518C               	movf	_USBMSDInHandle& (0+255),w,b
 19869  00073A  118D               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19870  00073C  B4D8               	btfsc	status,2,c
 19871  00073E  D006               	goto	u9270
 19872                           
 19873                           ; BSR set to: 0
 19874  000740  C08C  FFD9         	movff	_USBMSDInHandle,fsr2l
 19875  000744  C08D  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19876  000748  BEDF               	btfsc	indf2,7,c
 19877  00074A  0012               	return	
 19878  00074C                     u9270:
 19879                           
 19880                           ; BSR set to: 0
 19881                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 19882                           
 19883                           ; BSR set to: 0
 19884  00074C  0101               	movlb	1	; () banked
 19885  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 19886  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19887  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19888  000754  E104               	bnz	u9280
 19889  000756  0E40               	movlw	64
 19890  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 19891  00075A  A0D8               	btfss	status,0,c
 19892  00075C  D009               	goto	l644
 19893  00075E                     u9280:
 19894                           
 19895                           ; BSR set to: 1
 19896                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 19897  00075E  0E40               	movlw	64
 19898  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 19899                           
 19900                           ; BSR set to: 1
 19901                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 19902  000762  0E40               	movlw	64
 19903  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19904  000766  0E00               	movlw	0
 19905  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19906  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19907  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19908                           
 19909                           ;usb_device_msd.c: 900: }
 19910  00076E  D00A               	goto	l645
 19911  000770                     l644:
 19912                           
 19913                           ; BSR set to: 1
 19914                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 19915  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 19916                           
 19917                           ; BSR set to: 1
 19918                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 19919  000774  0E00               	movlw	0
 19920  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 19921  000778  0E00               	movlw	0
 19922  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19923  00077C  0E00               	movlw	0
 19924  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19925  000780  0E00               	movlw	0
 19926  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19927  000784                     l645:
 19928                           
 19929                           ; BSR set to: 1
 19930                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19931                           
 19932                           ; BSR set to: 1
 19933  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19934  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19935  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19936  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19937  00078C  0100               	movlb	0	; () banked
 19938  00078E  5D8A               	subwf	_TransferLength& (0+255),w,b
 19939  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19940  000792  598B               	subwfb	(_TransferLength+1)& (0+255),w,b
 19941  000794  A0D8               	btfss	status,0,c
 19942  000796  D005               	goto	l646
 19943                           
 19944                           ; BSR set to: 0
 19945                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19946  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19947  00079A  5F8A               	subwf	_TransferLength& (0+255),f,b
 19948  00079C  0E00               	movlw	0
 19949  00079E  5B8B               	subwfb	(_TransferLength+1)& (0+255),f,b
 19950                           
 19951                           ;usb_device_msd.c: 918: }
 19952  0007A0  D01A               	goto	u9310
 19953  0007A2                     l646:
 19954                           
 19955                           ; BSR set to: 0
 19956                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19957                           
 19958                           ; BSR set to: 0
 19959  0007A2  0E00               	movlw	0
 19960  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19961  0007A6  D013               	goto	l648
 19962  0007A8                     
 19963                           ; BSR set to: 0
 19964                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19965                           
 19966                           ; BSR set to: 0
 19967  0007A8  518A               	movf	_TransferLength& (0+255),w,b
 19968  0007AA  118B               	iorwf	(_TransferLength+1)& (0+255),w,b
 19969  0007AC  B4D8               	btfsc	status,2,c
 19970  0007AE  D004               	goto	l650
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19974  0007B0  078A               	decf	_TransferLength& (0+255),f,b
 19975  0007B2  A0D8               	btfss	status,0,c
 19976  0007B4  078B               	decf	(_TransferLength+1)& (0+255),f,b
 19977                           
 19978                           ;usb_device_msd.c: 932: }
 19979  0007B6  D00A               	goto	l651
 19980  0007B8                     l650:
 19981                           
 19982                           ; BSR set to: 0
 19983                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19984                           
 19985                           ; BSR set to: 0
 19986  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19987  0007BA  0D01               	mullw	1
 19988  0007BC  0E00               	movlw	0
 19989  0007BE  24F3               	addwf	prodl,w,c
 19990  0007C0  6ED9               	movwf	fsr2l,c
 19991  0007C2  0E06               	movlw	6
 19992  0007C4  20F4               	addwfc	prodh,w,c
 19993  0007C6  6EDA               	movwf	fsr2h,c
 19994  0007C8  0E00               	movlw	0
 19995  0007CA  6EDF               	movwf	indf2,c
 19996  0007CC                     l651:
 19997                           
 19998                           ; BSR set to: 0
 19999                           
 20000                           ; BSR set to: 0
 20001  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20002  0007CE                     l648:
 20003                           
 20004                           ; BSR set to: 0
 20005                           
 20006                           ; BSR set to: 0
 20007  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20008  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20009  0007D2  A0D8               	btfss	status,0,c
 20010  0007D4  D7E9               	goto	l649
 20011  0007D6                     u9310:
 20012                           
 20013                           ; BSR set to: 0
 20014                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20015                           
 20016                           ; BSR set to: 0
 20017                           
 20018                           ; BSR set to: 0
 20019  0007D6  0E01               	movlw	1
 20020  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20021  0007DA  0E00               	movlw	0
 20022  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20023  0007DE  0E06               	movlw	6
 20024  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20025  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20026  0007E6  0E02               	movlw	2
 20027  0007E8  ECC4  F01E         	call	_USBTransferOnePacket
 20028  0007EC  C001  F08C         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20029  0007F0  C002  F08D         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20030                           
 20031                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20032  0007F4  0101               	movlb	1	; () banked
 20033  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20034  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20035  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20036  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20037  0007FE  A4D8               	btfss	status,2,c
 20038  000800  0012               	return	
 20039                           
 20040                           ; BSR set to: 1
 20041                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20042  000802  0100               	movlb	0	; () banked
 20043  000804  699F               	setf	_MSDCommandState& (0+255),b
 20044                           
 20045                           ; BSR set to: 0
 20046                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20047                           
 20048                           ; BSR set to: 0
 20049                           
 20050                           ;usb_device_msd.c: 949: break;
 20051  000806  0012               	return	
 20052  000808                     
 20053                           ; BSR set to: 0
 20054                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20055                           
 20056                           ; BSR set to: 0
 20057                           
 20058                           ;usb_device_msd.c: 954: default:
 20059                           
 20060                           ; BSR set to: 0
 20061  000808  0E7F               	movlw	127
 20062  00080A  EC41  F01E         	call	_MSDErrorHandler
 20063                           
 20064                           ;usb_device_msd.c: 960: }
 20065                           
 20066                           ;usb_device_msd.c: 959: break;
 20067  00080E  0012               	return	
 20068  000810                     l614:
 20069  000810  0100               	movlb	0	; () banked
 20070  000812  519F               	movf	_MSDCommandState& (0+255),w,b
 20071                           
 20072                           ; Switch size 1, requested type "space"
 20073                           ; Number of cases is 12, Range of values is 0 to 254
 20074                           ; switch strategies available:
 20075                           ; Name         Instructions Cycles
 20076                           ; simple_byte           37    19 (average)
 20077                           ;	Chosen strategy is simple_byte
 20078  000814  0A00               	xorlw	0	; case 0
 20079  000816  B4D8               	btfsc	status,2,c
 20080  000818  D75B               	goto	l634
 20081  00081A  0A03               	xorlw	3	; case 3
 20082  00081C  B4D8               	btfsc	status,2,c
 20083  00081E  D6DD               	goto	l624
 20084  000820  0A11               	xorlw	17	; case 18
 20085  000822  B4D8               	btfsc	status,2,c
 20086  000824  D64C               	goto	l620
 20087  000826  0A08               	xorlw	8	; case 26
 20088  000828  B4D8               	btfsc	status,2,c
 20089  00082A  D704               	goto	l628
 20090  00082C  0A01               	xorlw	1	; case 27
 20091  00082E  B4D8               	btfsc	status,2,c
 20092  000830  D777               	goto	l638
 20093  000832  0A05               	xorlw	5	; case 30
 20094  000834  B4D8               	btfsc	status,2,c
 20095  000836  D735               	goto	l633
 20096  000838  0A3B               	xorlw	59	; case 37
 20097  00083A  B4D8               	btfsc	status,2,c
 20098  00083C  D671               	goto	l623
 20099  00083E  0A0D               	xorlw	13	; case 40
 20100  000840  B4D8               	btfsc	status,2,c
 20101  000842  D62D               	goto	l615
 20102  000844  0A02               	xorlw	2	; case 42
 20103  000846  B4D8               	btfsc	status,2,c
 20104  000848  D632               	goto	l618
 20105  00084A  0A05               	xorlw	5	; case 47
 20106  00084C  B4D8               	btfsc	status,2,c
 20107  00084E  D768               	goto	l638
 20108  000850  0AD2               	xorlw	210	; case 253
 20109  000852  B4D8               	btfsc	status,2,c
 20110  000854  D771               	goto	l640
 20111  000856  0A03               	xorlw	3	; case 254
 20112  000858  D7D7               	goto	l654
 20113  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20114                           	opt stack 0
 20115                           tosu	equ	0xFFF
 20116                           tosh	equ	0xFFE
 20117                           tosl	equ	0xFFD
 20118                           pclath	equ	0xFFA
 20119                           tblptru	equ	0xFF8
 20120                           tblptrh	equ	0xFF7
 20121                           tblptrl	equ	0xFF6
 20122                           tablat	equ	0xFF5
 20123                           prodh	equ	0xFF4
 20124                           prodl	equ	0xFF3
 20125                           intcon	equ	0xFF2
 20126                           intcon2	equ	0xFF1
 20127                           intcon3	equ	0xFF0
 20128                           indf0	equ	0xFEF
 20129                           postinc0	equ	0xFEE
 20130                           fsr0h	equ	0xFEA
 20131                           fsr0l	equ	0xFE9
 20132                           wreg	equ	0xFE8
 20133                           indf1	equ	0xFE7
 20134                           postdec1	equ	0xFE5
 20135                           plusw1	equ	0xFE3
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           postinc2	equ	0xFDE
 20140                           postdec2	equ	0xFDD
 20141                           plusw2	equ	0xFDB
 20142                           fsr2h	equ	0xFDA
 20143                           fsr2l	equ	0xFD9
 20144                           status	equ	0xFD8
 20145                           
 20146 ;; *************** function _MSDWriteHandler *****************
 20147 ;; Defined at:
 20148 ;;		line 1188 in file "usb_device_msd.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;		None
 20151 ;; Auto vars:     Size  Location     Type
 20152 ;;		None
 20153 ;; Return value:  Size  Location     Type
 20154 ;;                  1    wreg      unsigned char 
 20155 ;; Registers used:
 20156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20157 ;; Tracked objects:
 20158 ;;		On entry : 0/0
 20159 ;;		On exit  : 0/0
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20164 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20165 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20166 ;;Total ram usage:        5 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:    6
 20169 ;; This function calls:
 20170 ;;		_ExternalFlash_SectorWrite
 20171 ;;		_ExternalFlash_WriteProtectStateGet
 20172 ;;		_MSDCheckForErrorCases
 20173 ;;		_USBStallEndpoint
 20174 ;;		_USBTransferOnePacket
 20175 ;; This function is called by:
 20176 ;;		_MSDProcessCommandMediaPresent
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text95
 20181  00121E                     __ptext95:
 20182                           	opt stack 0
 20183  00121E                     _MSDWriteHandler:
 20184                           	opt stack 20
 20185                           
 20186                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20187                           
 20188                           ;incstack = 0
 20189  00121E  D146               	goto	l684
 20190  001220                     l685:
 20191                           
 20192                           ; BSR set to: 0
 20193                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20194  001220  C111  F089         	movff	_gblCBW+17,_LBA+3
 20195                           
 20196                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20197  001224  C112  F088         	movff	_gblCBW+18,_LBA+2
 20198                           
 20199                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20200  001228  C113  F087         	movff	_gblCBW+19,_LBA+1
 20201                           
 20202                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20203  00122C  C114  F086         	movff	_gblCBW+20,_LBA
 20204                           
 20205                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20206  001230  C116  F08B         	movff	_gblCBW+22,_TransferLength+1
 20207                           
 20208                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20209  001234  C117  F08A         	movff	_gblCBW+23,_TransferLength
 20210                           
 20211                           ; BSR set to: 0
 20212                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20213  001238  518A               	movf	_TransferLength& (0+255),w,b
 20214  00123A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20215  00123C  518B               	movf	(_TransferLength+1)& (0+255),w,b
 20216  00123E  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20217  001240  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20218  001242  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20219  001244  0E09               	movlw	9
 20220  001246                     u8015:
 20221  001246  90D8               	bcf	status,0,c
 20222  001248  3630               	rlcf	??_MSDWriteHandler,f,c
 20223  00124A  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20224  00124C  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20225  00124E  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20226  001250  2EE8               	decfsz	wreg,f,c
 20227  001252  D7F9               	goto	u8015
 20228  001254  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20229  001258  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20230  00125C  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20231  001260  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20232  001264  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 20233  001268  0900               	iorlw	0
 20234  00126A  A4D8               	btfss	status,2,c
 20235  00126C  D131               	goto	l687
 20236                           
 20237                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20238                           
 20239                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20240  00126E  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20241  001272  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20242  001276  D801               	call	u8038
 20243  001278  D00A               	goto	u8039
 20244  00127A                     u8038:
 20245  00127A  0005               	push	
 20246  00127C  6EFA               	movwf	pclath,c
 20247  00127E  0101               	movlb	1	; () banked
 20248  001280  51EE               	movf	(_LUN+10)& (0+255),w,b
 20249  001282  6EFD               	movwf	tosl,c
 20250  001284  51EF               	movf	(_LUN+11)& (0+255),w,b
 20251  001286  6EFE               	movwf	tosh,c
 20252  001288  6AFF               	clrf	tosu,c
 20253  00128A  50FA               	movf	pclath,w,c
 20254  00128C  0012               	return		;indir
 20255  00128E                     u8039:
 20256  00128E  0900               	iorlw	0
 20257  001290  B4D8               	btfsc	status,2,c
 20258  001292  D016               	goto	l688
 20259                           
 20260                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20261  001294  0E01               	movlw	1
 20262  001296  010D               	movlb	13	; () banked
 20263  001298  6F8C               	movwf	140,b	;volatile
 20264                           
 20265                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 20266  00129A  0101               	movlb	1	; () banked
 20267  00129C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20268  00129E  0BF0               	andlw	-16
 20269  0012A0  0907               	iorlw	7
 20270  0012A2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20271                           
 20272                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 20273  0012A4  0E27               	movlw	39
 20274  0012A6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20275                           
 20276                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 20277  0012A8  0E00               	movlw	0
 20278  0012AA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20279                           
 20280                           ; BSR set to: 1
 20281                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 20282  0012AC  0E00               	movlw	0
 20283  0012AE  6E01               	movwf	USBStallEndpoint@dir,c
 20284  0012B0  0E02               	movlw	2
 20285  0012B2  EC3A  F01D         	call	_USBStallEndpoint
 20286                           
 20287                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 20288  0012B6  0E00               	movlw	0
 20289  0012B8  0100               	movlb	0	; () banked
 20290  0012BA  6F9D               	movwf	_MSDWriteState& (0+255),b
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;usb_device_msd.c: 1228: return MSDWriteState;
 20294  0012BC  519D               	movf	_MSDWriteState& (0+255),w,b
 20295                           
 20296                           ; BSR set to: 0
 20297  0012BE  0012               	return	
 20298  0012C0                     l688:
 20299                           
 20300                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 20301                           
 20302                           ; BSR set to: 0
 20303  0012C0  0E01               	movlw	1
 20304  0012C2  0100               	movlb	0	; () banked
 20305  0012C4  6FA0               	movwf	_MSD_State& (0+255),b
 20306  0012C6                     
 20307                           ; BSR set to: 0
 20308                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 20309                           
 20310                           ; BSR set to: 0
 20311  0012C6  518A               	movf	_TransferLength& (0+255),w,b
 20312  0012C8  118B               	iorwf	(_TransferLength+1)& (0+255),w,b
 20313  0012CA  A4D8               	btfss	status,2,c
 20314  0012CC  D002               	goto	l691
 20315                           
 20316                           ; BSR set to: 0
 20317                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 20318  0012CE  0E00               	movlw	0
 20319  0012D0  D056               	goto	L21
 20320  0012D2                     l691:
 20321                           
 20322                           ; BSR set to: 0
 20323                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 20324                           
 20325                           ; BSR set to: 0
 20326  0012D2  0E03               	movlw	3
 20327  0012D4  6F9D               	movwf	_MSDWriteState& (0+255),b
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 20331  0012D6  0E00               	movlw	0
 20332  0012D8  0101               	movlb	1	; () banked
 20333  0012DA  6F71               	movwf	_ptrNextData& (0+255),b
 20334  0012DC  0E06               	movlw	6
 20335  0012DE  6F72               	movwf	(_ptrNextData+1)& (0+255),b
 20336                           
 20337                           ; BSR set to: 1
 20338                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 20339  0012E0  0E00               	movlw	0
 20340  0012E2  010D               	movlb	13	; () banked
 20341  0012E4  6F88               	movwf	136,b	;volatile
 20342  0012E6  0E02               	movlw	2
 20343  0012E8  6F89               	movwf	137,b	;volatile
 20344  0012EA  0E00               	movlw	0
 20345  0012EC  6F8A               	movwf	138,b	;volatile
 20346  0012EE  0E00               	movlw	0
 20347  0012F0  6F8B               	movwf	139,b	;volatile
 20348  0012F2                     l692:
 20349                           
 20350                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 20351  0012F2  010D               	movlb	13	; () banked
 20352  0012F4  5188               	movf	136,w,b	;volatile
 20353  0012F6  1189               	iorwf	137,w,b	;volatile
 20354  0012F8  118A               	iorwf	138,w,b	;volatile
 20355  0012FA  118B               	iorwf	139,w,b	;volatile
 20356  0012FC  B4D8               	btfsc	status,2,c
 20357  0012FE  D01E               	goto	l693
 20358                           
 20359                           ; BSR set to: 13
 20360                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 20361  001300  0100               	movlb	0	; () banked
 20362  001302  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 20363  001304  118F               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20364  001306  B4D8               	btfsc	status,2,c
 20365  001308  D006               	goto	l694
 20366                           
 20367                           ; BSR set to: 0
 20368  00130A  C08E  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20369  00130E  C08F  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20370  001312  BEDF               	btfsc	indf2,7,c
 20371  001314  D0DD               	goto	l687
 20372  001316                     l694:
 20373                           
 20374                           ; BSR set to: 0
 20375                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 20376                           
 20377                           ; BSR set to: 0
 20378  001316  0E00               	movlw	0
 20379  001318  6E01               	movwf	USBTransferOnePacket@dir,c
 20380  00131A  C171  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20381  00131E  C172  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20382  001322  0E40               	movlw	64
 20383  001324  6E04               	movwf	USBTransferOnePacket@len,c
 20384  001326  0E02               	movlw	2
 20385  001328  ECC4  F01E         	call	_USBTransferOnePacket
 20386  00132C  C001  F08E         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20387  001330  C002  F08F         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20388                           
 20389                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 20390  001334  0E04               	movlw	4
 20391  001336  0100               	movlb	0	; () banked
 20392  001338  6F9D               	movwf	_MSDWriteState& (0+255),b
 20393                           
 20394                           ;usb_device_msd.c: 1260: }
 20395  00133A  D023               	goto	l695
 20396  00133C                     l693:
 20397                           
 20398                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 20399                           
 20400                           ; BSR set to: 0
 20401  00133C  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20402  001340  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20403  001344  D801               	call	u8098
 20404  001346  D00A               	goto	u8099
 20405  001348                     u8098:
 20406  001348  0005               	push	
 20407  00134A  6EFA               	movwf	pclath,c
 20408  00134C  0101               	movlb	1	; () banked
 20409  00134E  51EE               	movf	(_LUN+10)& (0+255),w,b
 20410  001350  6EFD               	movwf	tosl,c
 20411  001352  51EF               	movf	(_LUN+11)& (0+255),w,b
 20412  001354  6EFE               	movwf	tosh,c
 20413  001356  6AFF               	clrf	tosu,c
 20414  001358  50FA               	movf	pclath,w,c
 20415  00135A  0012               	return		;indir
 20416  00135C                     u8099:
 20417  00135C  0900               	iorlw	0
 20418  00135E  B4D8               	btfsc	status,2,c
 20419  001360  D00C               	goto	l696
 20420                           
 20421                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 20422  001362  0E01               	movlw	1
 20423  001364  010D               	movlb	13	; () banked
 20424  001366  6F8C               	movwf	140,b	;volatile
 20425                           
 20426                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 20427  001368  0101               	movlb	1	; () banked
 20428  00136A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20429  00136C  0BF0               	andlw	-16
 20430  00136E  0902               	iorlw	2
 20431  001370  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20432                           
 20433                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 20434  001372  0E27               	movlw	39
 20435  001374  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20436                           
 20437                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 20438  001376  0E00               	movlw	0
 20439  001378  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20440  00137A                     l696:
 20441                           
 20442                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 20443  00137A  0E02               	movlw	2
 20444  00137C  D095               	goto	L23
 20445  00137E                     L21:
 20446  00137E  6F9D               	movwf	_MSDWriteState& (0+255),b
 20447                           
 20448                           ;usb_device_msd.c: 1280: break;
 20449  001380  D0A7               	goto	l687
 20450  001382                     l695:
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 20454                           
 20455                           ; BSR set to: 0
 20456                           
 20457                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 20458                           
 20459                           ; BSR set to: 0
 20460  001382  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 20461  001384  118F               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20462  001386  B4D8               	btfsc	status,2,c
 20463  001388  D006               	goto	l698
 20464                           
 20465                           ; BSR set to: 0
 20466  00138A  C08E  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20467  00138E  C08F  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20468  001392  BEDF               	btfsc	indf2,7,c
 20469  001394  D09D               	goto	l687
 20470  001396                     l698:
 20471                           
 20472                           ; BSR set to: 0
 20473                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 20474                           
 20475                           ; BSR set to: 0
 20476  001396  EE20 F001          	lfsr	2,1
 20477  00139A  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 20478  00139C  26D9               	addwf	fsr2l,f,c
 20479  00139E  518F               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20480  0013A0  22DA               	addwfc	fsr2h,f,c
 20481  0013A2  50DF               	movf	indf2,w,c
 20482  0013A4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20483  0013A6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20484  0013AA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20485  0013AC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20486  0013AE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20487  0013B0  5031               	movf	??_MSDWriteHandler+1,w,c
 20488  0013B2  0101               	movlb	1	; () banked
 20489  0013B4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20490  0013B6  5032               	movf	??_MSDWriteHandler+2,w,c
 20491  0013B8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20492  0013BA  5033               	movf	??_MSDWriteHandler+3,w,c
 20493  0013BC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20494  0013BE  5034               	movf	??_MSDWriteHandler+4,w,c
 20495  0013C0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20496                           
 20497                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 20498  0013C2  0100               	movlb	0	; () banked
 20499  0013C4  EE20 F001          	lfsr	2,1
 20500  0013C8  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 20501  0013CA  26D9               	addwf	fsr2l,f,c
 20502  0013CC  518F               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20503  0013CE  22DA               	addwfc	fsr2h,f,c
 20504  0013D0  50DF               	movf	indf2,w,c
 20505  0013D2  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20506  0013D4  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20507  0013D8  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20508  0013DA  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20509  0013DC  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20510  0013DE  5031               	movf	??_MSDWriteHandler+1,w,c
 20511  0013E0  010D               	movlb	13	; () banked
 20512  0013E2  5F88               	subwf	136,f,b	;volatile
 20513  0013E4  5032               	movf	??_MSDWriteHandler+2,w,c
 20514  0013E6  5B89               	subwfb	137,f,b	;volatile
 20515  0013E8  5033               	movf	??_MSDWriteHandler+3,w,c
 20516  0013EA  5B8A               	subwfb	138,f,b	;volatile
 20517  0013EC  5034               	movf	??_MSDWriteHandler+4,w,c
 20518  0013EE  5B8B               	subwfb	139,f,b	;volatile
 20519                           
 20520                           ; BSR set to: 13
 20521                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20522  0013F0  0E40               	movlw	64
 20523  0013F2  0101               	movlb	1	; () banked
 20524  0013F4  2771               	addwf	_ptrNextData& (0+255),f,b
 20525  0013F6  0E00               	movlw	0
 20526  0013F8  2372               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20527                           
 20528                           ; BSR set to: 1
 20529                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20530  0013FA  0E03               	movlw	3
 20531  0013FC  D055               	goto	L23
 20532  0013FE                     
 20533                           ; BSR set to: 0
 20534                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20535                           
 20536                           ; BSR set to: 0
 20537  0013FE  010D               	movlb	13	; () banked
 20538  001400  518C               	movf	140,w,b	;volatile
 20539  001402  A4D8               	btfss	status,2,c
 20540  001404  D03C               	goto	l703
 20541                           
 20542                           ; BSR set to: 13
 20543                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20544  001406  C1F2  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20545  00140A  C1F3  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 20546  00140E  C086  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 20547  001412  C087  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 20548  001416  C088  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 20549  00141A  C089  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 20550  00141E  0E00               	movlw	0
 20551  001420  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 20552  001422  0E06               	movlw	6
 20553  001424  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 20554  001426  0100               	movlb	0	; () banked
 20555  001428  5186               	movf	_LBA& (0+255),w,b
 20556  00142A  1187               	iorwf	(_LBA+1)& (0+255),w,b
 20557  00142C  1188               	iorwf	(_LBA+2)& (0+255),w,b
 20558  00142E  1189               	iorwf	(_LBA+3)& (0+255),w,b
 20559  001430  A4D8               	btfss	status,2,c
 20560  001432  D002               	goto	u8140
 20561  001434  0E01               	movlw	1
 20562  001436  D001               	goto	u8150
 20563  001438                     u8140:
 20564  001438  0E00               	movlw	0
 20565  00143A                     u8150:
 20566  00143A  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 20567  00143C  D801               	call	u8168
 20568  00143E  D00A               	goto	u8169
 20569  001440                     u8168:
 20570  001440  0005               	push	
 20571  001442  6EFA               	movwf	pclath,c
 20572  001444  0101               	movlb	1	; () banked
 20573  001446  51F0               	movf	(_LUN+12)& (0+255),w,b
 20574  001448  6EFD               	movwf	tosl,c
 20575  00144A  51F1               	movf	(_LUN+13)& (0+255),w,b
 20576  00144C  6EFE               	movwf	tosh,c
 20577  00144E  6AFF               	clrf	tosu,c
 20578  001450  50FA               	movf	pclath,w,c
 20579  001452  0012               	return		;indir
 20580  001454                     u8169:
 20581  001454  06E8               	decf	wreg,f,c
 20582  001456  B4D8               	btfsc	status,2,c
 20583  001458  D012               	goto	l703
 20584                           
 20585                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20586  00145A  0E64               	movlw	100
 20587  00145C  0100               	movlb	0	; () banked
 20588  00145E  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 20589  001460  D002               	goto	l702
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20593  001462  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 20594                           
 20595                           ;usb_device_msd.c: 1314: break;
 20596  001464  D035               	goto	l687
 20597  001466                     l702:
 20598                           
 20599                           ; BSR set to: 0
 20600                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20601                           
 20602                           ; BSR set to: 0
 20603  001466  0E01               	movlw	1
 20604  001468  010D               	movlb	13	; () banked
 20605  00146A  6F8C               	movwf	140,b	;volatile
 20606                           
 20607                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20608  00146C  0101               	movlb	1	; () banked
 20609  00146E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20610  001470  0BF0               	andlw	-16
 20611  001472  0903               	iorlw	3
 20612  001474  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20613                           
 20614                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20615  001476  0E00               	movlw	0
 20616  001478  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20617                           
 20618                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20619  00147A  0E00               	movlw	0
 20620  00147C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20621  00147E                     l703:
 20622                           
 20623                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20624                           
 20625                           ; BSR set to: 1
 20626                           
 20627                           ; BSR set to: 1
 20628                           
 20629                           ; BSR set to: 1
 20630  00147E  0E01               	movlw	1
 20631  001480  0100               	movlb	0	; () banked
 20632  001482  2786               	addwf	_LBA& (0+255),f,b
 20633  001484  0E00               	movlw	0
 20634  001486  2387               	addwfc	(_LBA+1)& (0+255),f,b
 20635  001488  2388               	addwfc	(_LBA+2)& (0+255),f,b
 20636  00148A  2389               	addwfc	(_LBA+3)& (0+255),f,b
 20637                           
 20638                           ; BSR set to: 0
 20639                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 20640  00148C  078A               	decf	_TransferLength& (0+255),f,b
 20641  00148E  A0D8               	btfss	status,0,c
 20642  001490  078B               	decf	(_TransferLength+1)& (0+255),f,b
 20643                           
 20644                           ; BSR set to: 0
 20645                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 20646  001492  0E01               	movlw	1
 20647  001494  D774               	goto	L21
 20648  001496                     
 20649                           ; BSR set to: 0
 20650                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 20651                           
 20652                           ; BSR set to: 0
 20653  001496  0E02               	movlw	2
 20654  001498  010D               	movlb	13	; () banked
 20655  00149A  6F8C               	movwf	140,b	;volatile
 20656                           
 20657                           ; BSR set to: 13
 20658                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 20659  00149C  0E00               	movlw	0
 20660  00149E  6E01               	movwf	USBStallEndpoint@dir,c
 20661  0014A0  0E02               	movlw	2
 20662  0014A2  EC3A  F01D         	call	_USBStallEndpoint
 20663                           
 20664                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 20665  0014A6  0E00               	movlw	0
 20666  0014A8                     L23:
 20667  0014A8  0100               	movlb	0	; () banked
 20668  0014AA  D769               	goto	L21
 20669  0014AC                     l684:
 20670                           
 20671                           ; BSR set to: 0
 20672  0014AC  0100               	movlb	0	; () banked
 20673  0014AE  519D               	movf	_MSDWriteState& (0+255),w,b
 20674                           
 20675                           ; Switch size 1, requested type "space"
 20676                           ; Number of cases is 5, Range of values is 0 to 4
 20677                           ; switch strategies available:
 20678                           ; Name         Instructions Cycles
 20679                           ; simple_byte           16     9 (average)
 20680                           ;	Chosen strategy is simple_byte
 20681  0014B0  0A00               	xorlw	0	; case 0
 20682  0014B2  B4D8               	btfsc	status,2,c
 20683  0014B4  D6B5               	goto	l685
 20684  0014B6  0A01               	xorlw	1	; case 1
 20685  0014B8  B4D8               	btfsc	status,2,c
 20686  0014BA  D705               	goto	l690
 20687  0014BC  0A03               	xorlw	3	; case 2
 20688  0014BE  B4D8               	btfsc	status,2,c
 20689  0014C0  D79E               	goto	l699
 20690  0014C2  0A01               	xorlw	1	; case 3
 20691  0014C4  B4D8               	btfsc	status,2,c
 20692  0014C6  D715               	goto	l692
 20693  0014C8  0A07               	xorlw	7	; case 4
 20694  0014CA  B4D8               	btfsc	status,2,c
 20695  0014CC  D75A               	goto	l695
 20696  0014CE  D7E3               	goto	l704
 20697  0014D0                     l687:
 20698                           
 20699                           ;usb_device_msd.c: 1347: return MSDWriteState;
 20700                           
 20701                           ; BSR set to: 0
 20702  0014D0  0100               	movlb	0	; () banked
 20703  0014D2  519D               	movf	_MSDWriteState& (0+255),w,b
 20704  0014D4  0012               	return	
 20705  0014D6                     __end_of_MSDWriteHandler:
 20706                           	opt stack 0
 20707                           tosu	equ	0xFFF
 20708                           tosh	equ	0xFFE
 20709                           tosl	equ	0xFFD
 20710                           pclath	equ	0xFFA
 20711                           tblptru	equ	0xFF8
 20712                           tblptrh	equ	0xFF7
 20713                           tblptrl	equ	0xFF6
 20714                           tablat	equ	0xFF5
 20715                           prodh	equ	0xFF4
 20716                           prodl	equ	0xFF3
 20717                           intcon	equ	0xFF2
 20718                           intcon2	equ	0xFF1
 20719                           intcon3	equ	0xFF0
 20720                           indf0	equ	0xFEF
 20721                           postinc0	equ	0xFEE
 20722                           fsr0h	equ	0xFEA
 20723                           fsr0l	equ	0xFE9
 20724                           wreg	equ	0xFE8
 20725                           indf1	equ	0xFE7
 20726                           postdec1	equ	0xFE5
 20727                           plusw1	equ	0xFE3
 20728                           fsr1h	equ	0xFE2
 20729                           fsr1l	equ	0xFE1
 20730                           indf2	equ	0xFDF
 20731                           postinc2	equ	0xFDE
 20732                           postdec2	equ	0xFDD
 20733                           plusw2	equ	0xFDB
 20734                           fsr2h	equ	0xFDA
 20735                           fsr2l	equ	0xFD9
 20736                           status	equ	0xFD8
 20737                           
 20738 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 20739 ;; Defined at:
 20740 ;;		line 34 in file "external_flash.c"
 20741 ;; Parameters:    Size  Location     Type
 20742 ;;  config          2    0[COMRAM] PTR void 
 20743 ;;		 -> NULL(0), 
 20744 ;; Auto vars:     Size  Location     Type
 20745 ;;		None
 20746 ;; Return value:  Size  Location     Type
 20747 ;;                  1    wreg      unsigned char 
 20748 ;; Registers used:
 20749 ;;		wreg
 20750 ;; Tracked objects:
 20751 ;;		On entry : 0/0
 20752 ;;		On exit  : 0/0
 20753 ;;		Unchanged: 0/0
 20754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20759 ;;Total ram usage:        2 bytes
 20760 ;; Hardware stack levels used:    1
 20761 ;; This function calls:
 20762 ;;		Nothing
 20763 ;; This function is called by:
 20764 ;;		_MSDWriteHandler
 20765 ;;		_MSDProcessCommandMediaPresent
 20766 ;; This function uses a non-reentrant model
 20767 ;;
 20768                           
 20769                           	psect	text96
 20770  007250                     __ptext96:
 20771                           	opt stack 0
 20772  007250                     _ExternalFlash_WriteProtectStateGet:
 20773                           	opt stack 25
 20774                           
 20775                           ;external_flash.c: 37: return 0;
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;incstack = 0
 20779  007250  0E00               	movlw	0
 20780  007252  0012               	return	
 20781  007254                     __end_of_ExternalFlash_WriteProtectStateGet:
 20782                           	opt stack 0
 20783                           tosu	equ	0xFFF
 20784                           tosh	equ	0xFFE
 20785                           tosl	equ	0xFFD
 20786                           pclath	equ	0xFFA
 20787                           tblptru	equ	0xFF8
 20788                           tblptrh	equ	0xFF7
 20789                           tblptrl	equ	0xFF6
 20790                           tablat	equ	0xFF5
 20791                           prodh	equ	0xFF4
 20792                           prodl	equ	0xFF3
 20793                           intcon	equ	0xFF2
 20794                           intcon2	equ	0xFF1
 20795                           intcon3	equ	0xFF0
 20796                           indf0	equ	0xFEF
 20797                           postinc0	equ	0xFEE
 20798                           fsr0h	equ	0xFEA
 20799                           fsr0l	equ	0xFE9
 20800                           wreg	equ	0xFE8
 20801                           indf1	equ	0xFE7
 20802                           postdec1	equ	0xFE5
 20803                           plusw1	equ	0xFE3
 20804                           fsr1h	equ	0xFE2
 20805                           fsr1l	equ	0xFE1
 20806                           indf2	equ	0xFDF
 20807                           postinc2	equ	0xFDE
 20808                           postdec2	equ	0xFDD
 20809                           plusw2	equ	0xFDB
 20810                           fsr2h	equ	0xFDA
 20811                           fsr2l	equ	0xFD9
 20812                           status	equ	0xFD8
 20813                           
 20814 ;; *************** function _ExternalFlash_SectorWrite *****************
 20815 ;; Defined at:
 20816 ;;		line 56 in file "external_flash.c"
 20817 ;; Parameters:    Size  Location     Type
 20818 ;;  config          2   36[COMRAM] PTR void 
 20819 ;;		 -> NULL(0), 
 20820 ;;  sector_addr     4   38[COMRAM] unsigned long 
 20821 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 20822 ;;		 -> msd_buffer(512), 
 20823 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 20824 ;; Auto vars:     Size  Location     Type
 20825 ;;  page            2   45[COMRAM] unsigned int 
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  1    wreg      unsigned char 
 20828 ;; Registers used:
 20829 ;;		wreg, status,2, status,0, cstack
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20835 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20838 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20839 ;;Total ram usage:       11 bytes
 20840 ;; Hardware stack levels used:    1
 20841 ;; Hardware stack levels required when called:    5
 20842 ;; This function calls:
 20843 ;;		_flash_sector_write
 20844 ;; This function is called by:
 20845 ;;		_MSDWriteHandler
 20846 ;; This function uses a non-reentrant model
 20847 ;;
 20848                           
 20849                           	psect	text97
 20850  006C86                     __ptext97:
 20851                           	opt stack 0
 20852  006C86                     _ExternalFlash_SectorWrite:
 20853                           	opt stack 20
 20854                           
 20855                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 20856                           
 20857                           ;incstack = 0
 20858  006C86  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 20859  006C8A  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 20860                           
 20861                           ;external_flash.c: 61: if(sector_addr >= 8192)
 20862  006C8E  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 20863  006C90  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 20864  006C92  E104               	bnz	u7780
 20865  006C94  0E20               	movlw	32
 20866  006C96  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 20867  006C98  A0D8               	btfss	status,0,c
 20868  006C9A  D002               	goto	l1885
 20869  006C9C                     u7780:
 20870                           
 20871                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 20872  006C9C  0E00               	movlw	0
 20873  006C9E  0012               	return	
 20874  006CA0                     l1885:
 20875                           
 20876                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 20877  006CA0  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 20878  006CA4  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 20879  006CA8  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 20880  006CAC  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 20881  006CB0  ECC9  F033         	call	_flash_sector_write	;wreg free
 20882                           
 20883                           ;external_flash.c: 69: return 1;
 20884  006CB4  0E01               	movlw	1
 20885  006CB6  0012               	return	
 20886  006CB8                     __end_of_ExternalFlash_SectorWrite:
 20887                           	opt stack 0
 20888                           tosu	equ	0xFFF
 20889                           tosh	equ	0xFFE
 20890                           tosl	equ	0xFFD
 20891                           pclath	equ	0xFFA
 20892                           tblptru	equ	0xFF8
 20893                           tblptrh	equ	0xFF7
 20894                           tblptrl	equ	0xFF6
 20895                           tablat	equ	0xFF5
 20896                           prodh	equ	0xFF4
 20897                           prodl	equ	0xFF3
 20898                           intcon	equ	0xFF2
 20899                           intcon2	equ	0xFF1
 20900                           intcon3	equ	0xFF0
 20901                           indf0	equ	0xFEF
 20902                           postinc0	equ	0xFEE
 20903                           fsr0h	equ	0xFEA
 20904                           fsr0l	equ	0xFE9
 20905                           wreg	equ	0xFE8
 20906                           indf1	equ	0xFE7
 20907                           postdec1	equ	0xFE5
 20908                           plusw1	equ	0xFE3
 20909                           fsr1h	equ	0xFE2
 20910                           fsr1l	equ	0xFE1
 20911                           indf2	equ	0xFDF
 20912                           postinc2	equ	0xFDE
 20913                           postdec2	equ	0xFDD
 20914                           plusw2	equ	0xFDB
 20915                           fsr2h	equ	0xFDA
 20916                           fsr2l	equ	0xFD9
 20917                           status	equ	0xFD8
 20918                           
 20919 ;; *************** function _MSDReadHandler *****************
 20920 ;; Defined at:
 20921 ;;		line 1038 in file "usb_device_msd.c"
 20922 ;; Parameters:    Size  Location     Type
 20923 ;;		None
 20924 ;; Auto vars:     Size  Location     Type
 20925 ;;		None
 20926 ;; Return value:  Size  Location     Type
 20927 ;;                  1    wreg      unsigned char 
 20928 ;; Registers used:
 20929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20930 ;; Tracked objects:
 20931 ;;		On entry : 0/0
 20932 ;;		On exit  : 0/0
 20933 ;;		Unchanged: 0/0
 20934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;Total ram usage:        4 bytes
 20940 ;; Hardware stack levels used:    1
 20941 ;; Hardware stack levels required when called:    6
 20942 ;; This function calls:
 20943 ;;		_ExternalFlash_SectorRead
 20944 ;;		_MSDCheckForErrorCases
 20945 ;;		_USBStallEndpoint
 20946 ;;		_USBTransferOnePacket
 20947 ;; This function is called by:
 20948 ;;		_MSDProcessCommandMediaPresent
 20949 ;; This function uses a non-reentrant model
 20950 ;;
 20951                           
 20952                           	psect	text98
 20953  002408                     __ptext98:
 20954                           	opt stack 0
 20955  002408                     _MSDReadHandler:
 20956                           	opt stack 20
 20957                           
 20958                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20959                           
 20960                           ;incstack = 0
 20961  002408  D0D7               	goto	l665
 20962  00240A                     l666:
 20963                           
 20964                           ; BSR set to: 0
 20965                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20966  00240A  C111  F089         	movff	_gblCBW+17,_LBA+3
 20967                           
 20968                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20969  00240E  C112  F088         	movff	_gblCBW+18,_LBA+2
 20970                           
 20971                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20972  002412  C113  F087         	movff	_gblCBW+19,_LBA+1
 20973                           
 20974                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20975  002416  C114  F086         	movff	_gblCBW+20,_LBA
 20976                           
 20977                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20978  00241A  C116  F08B         	movff	_gblCBW+22,_TransferLength+1
 20979                           
 20980                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20981  00241E  C117  F08A         	movff	_gblCBW+23,_TransferLength
 20982                           
 20983                           ; BSR set to: 0
 20984                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20985  002422  518A               	movf	_TransferLength& (0+255),w,b
 20986  002424  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20987  002426  518B               	movf	(_TransferLength+1)& (0+255),w,b
 20988  002428  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20989  00242A  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20990  00242C  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20991  00242E  0E09               	movlw	9
 20992  002430                     u7905:
 20993  002430  90D8               	bcf	status,0,c
 20994  002432  3636               	rlcf	??_MSDReadHandler,f,c
 20995  002434  3637               	rlcf	??_MSDReadHandler+1,f,c
 20996  002436  3638               	rlcf	??_MSDReadHandler+2,f,c
 20997  002438  3639               	rlcf	??_MSDReadHandler+3,f,c
 20998  00243A  2EE8               	decfsz	wreg,f,c
 20999  00243C  D7F9               	goto	u7905
 21000  00243E  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21001  002442  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21002  002446  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21003  00244A  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21004  00244E  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 21005  002452  0900               	iorlw	0
 21006  002454  A4D8               	btfss	status,2,c
 21007  002456  D0C2               	goto	l668
 21008                           
 21009                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21010                           
 21011                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21012  002458  0E01               	movlw	1
 21013  00245A  0100               	movlb	0	; () banked
 21014  00245C  6F9E               	movwf	_MSDReadState& (0+255),b
 21015  00245E                     
 21016                           ; BSR set to: 0
 21017                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21018                           
 21019                           ; BSR set to: 0
 21020  00245E  518A               	movf	_TransferLength& (0+255),w,b
 21021  002460  118B               	iorwf	(_TransferLength+1)& (0+255),w,b
 21022  002462  A4D8               	btfss	status,2,c
 21023  002464  D002               	goto	l670
 21024                           
 21025                           ; BSR set to: 0
 21026                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21027  002466  0E00               	movlw	0
 21028  002468  D046               	goto	L24
 21029  00246A                     l670:
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21033                           
 21034                           ; BSR set to: 0
 21035  00246A  078A               	decf	_TransferLength& (0+255),f,b
 21036  00246C  A0D8               	btfss	status,0,c
 21037  00246E  078B               	decf	(_TransferLength+1)& (0+255),f,b
 21038                           
 21039                           ; BSR set to: 0
 21040                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21041  002470  0E02               	movlw	2
 21042  002472  6F9E               	movwf	_MSDReadState& (0+255),b
 21043  002474                     
 21044                           ; BSR set to: 0
 21045                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21046                           
 21047                           ; BSR set to: 0
 21048  002474  518C               	movf	_USBMSDInHandle& (0+255),w,b
 21049  002476  118D               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21050  002478  B4D8               	btfsc	status,2,c
 21051  00247A  D006               	goto	l672
 21052                           
 21053                           ; BSR set to: 0
 21054  00247C  C08C  FFD9         	movff	_USBMSDInHandle,fsr2l
 21055  002480  C08D  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21056  002484  BEDF               	btfsc	indf2,7,c
 21057  002486  D0AA               	goto	l668
 21058  002488                     l672:
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21062                           
 21063                           ; BSR set to: 0
 21064  002488  C1F2  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21065  00248C  C1F3  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21066  002490  C086  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21067  002494  C087  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21068  002498  C088  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21069  00249C  C089  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21070  0024A0  0E00               	movlw	0
 21071  0024A2  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21072  0024A4  0E06               	movlw	6
 21073  0024A6  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21074  0024A8  D801               	call	u7958
 21075  0024AA  D00A               	goto	u7959
 21076  0024AC                     u7958:
 21077  0024AC  0005               	push	
 21078  0024AE  6EFA               	movwf	pclath,c
 21079  0024B0  0101               	movlb	1	; () banked
 21080  0024B2  51EC               	movf	(_LUN+8)& (0+255),w,b
 21081  0024B4  6EFD               	movwf	tosl,c
 21082  0024B6  51ED               	movf	(_LUN+9)& (0+255),w,b
 21083  0024B8  6EFE               	movwf	tosh,c
 21084  0024BA  6AFF               	clrf	tosu,c
 21085  0024BC  50FA               	movf	pclath,w,c
 21086  0024BE  0012               	return		;indir
 21087  0024C0                     u7959:
 21088  0024C0  06E8               	decf	wreg,f,c
 21089  0024C2  B4D8               	btfsc	status,2,c
 21090  0024C4  D01A               	goto	l675
 21091                           
 21092                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21093  0024C6  0E64               	movlw	100
 21094  0024C8  0100               	movlb	0	; () banked
 21095  0024CA  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 21096  0024CC  D002               	goto	l674
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21100  0024CE  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 21101                           
 21102                           ;usb_device_msd.c: 1088: break;
 21103  0024D0  D085               	goto	l668
 21104  0024D2                     l674:
 21105                           
 21106                           ; BSR set to: 0
 21107                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21108                           
 21109                           ; BSR set to: 0
 21110  0024D2  0E02               	movlw	2
 21111  0024D4  010D               	movlb	13	; () banked
 21112  0024D6  6F8C               	movwf	140,b	;volatile
 21113                           
 21114                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21115  0024D8  0101               	movlb	1	; () banked
 21116  0024DA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21117  0024DC  0BF0               	andlw	-16
 21118  0024DE  0903               	iorlw	3
 21119  0024E0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21120                           
 21121                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21122  0024E2  0E00               	movlw	0
 21123  0024E4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21124                           
 21125                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21126  0024E6  0E00               	movlw	0
 21127  0024E8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21128                           
 21129                           ; BSR set to: 1
 21130                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21131  0024EA  0E01               	movlw	1
 21132  0024EC  6E01               	movwf	USBStallEndpoint@dir,c
 21133  0024EE  0E02               	movlw	2
 21134  0024F0  EC3A  F01D         	call	_USBStallEndpoint
 21135  0024F4  D05E               	goto	l10623
 21136  0024F6                     L24:
 21137  0024F6  6F9E               	movwf	_MSDReadState& (0+255),b
 21138                           
 21139                           ;usb_device_msd.c: 1109: break;
 21140  0024F8  D071               	goto	l668
 21141  0024FA                     l675:
 21142                           
 21143                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21144                           
 21145                           ; BSR set to: 0
 21146                           
 21147                           ; BSR set to: 0
 21148  0024FA  0E01               	movlw	1
 21149  0024FC  0100               	movlb	0	; () banked
 21150  0024FE  2786               	addwf	_LBA& (0+255),f,b
 21151  002500  0E00               	movlw	0
 21152  002502  2387               	addwfc	(_LBA+1)& (0+255),f,b
 21153  002504  2388               	addwfc	(_LBA+2)& (0+255),f,b
 21154  002506  2389               	addwfc	(_LBA+3)& (0+255),f,b
 21155                           
 21156                           ; BSR set to: 0
 21157                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21158  002508  0E00               	movlw	0
 21159  00250A  010D               	movlb	13	; () banked
 21160  00250C  6F88               	movwf	136,b	;volatile
 21161  00250E  0E02               	movlw	2
 21162  002510  6F89               	movwf	137,b	;volatile
 21163  002512  0E00               	movlw	0
 21164  002514  6F8A               	movwf	138,b	;volatile
 21165  002516  0E00               	movlw	0
 21166  002518  6F8B               	movwf	139,b	;volatile
 21167                           
 21168                           ; BSR set to: 13
 21169                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21170  00251A  0E00               	movlw	0
 21171  00251C  0101               	movlb	1	; () banked
 21172  00251E  6F71               	movwf	_ptrNextData& (0+255),b
 21173  002520  0E06               	movlw	6
 21174  002522  6F72               	movwf	(_ptrNextData+1)& (0+255),b
 21175                           
 21176                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21177  002524  0E03               	movlw	3
 21178  002526  0100               	movlb	0	; () banked
 21179  002528  6F9E               	movwf	_MSDReadState& (0+255),b
 21180  00252A                     
 21181                           ; BSR set to: 0
 21182                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21183                           
 21184                           ; BSR set to: 0
 21185  00252A  010D               	movlb	13	; () banked
 21186  00252C  5188               	movf	136,w,b	;volatile
 21187  00252E  1189               	iorwf	137,w,b	;volatile
 21188  002530  118A               	iorwf	138,w,b	;volatile
 21189  002532  118B               	iorwf	139,w,b	;volatile
 21190  002534  A4D8               	btfss	status,2,c
 21191  002536  D002               	goto	l677
 21192                           
 21193                           ; BSR set to: 13
 21194                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21195  002538  0E01               	movlw	1
 21196  00253A  D03C               	goto	L26
 21197  00253C                     l677:
 21198                           
 21199                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21200                           
 21201                           ; BSR set to: 0
 21202  00253C  0E04               	movlw	4
 21203  00253E  0100               	movlb	0	; () banked
 21204  002540  6F9E               	movwf	_MSDReadState& (0+255),b
 21205  002542                     
 21206                           ; BSR set to: 0
 21207                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21208                           
 21209                           ; BSR set to: 0
 21210  002542  518C               	movf	_USBMSDInHandle& (0+255),w,b
 21211  002544  118D               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21212  002546  B4D8               	btfsc	status,2,c
 21213  002548  D006               	goto	l679
 21214                           
 21215                           ; BSR set to: 0
 21216  00254A  C08C  FFD9         	movff	_USBMSDInHandle,fsr2l
 21217  00254E  C08D  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21218  002552  BEDF               	btfsc	indf2,7,c
 21219  002554  D043               	goto	l668
 21220  002556                     l679:
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21224                           
 21225                           ; BSR set to: 0
 21226  002556  0E01               	movlw	1
 21227  002558  6E01               	movwf	USBTransferOnePacket@dir,c
 21228  00255A  C171  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21229  00255E  C172  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21230  002562  0E40               	movlw	64
 21231  002564  6E04               	movwf	USBTransferOnePacket@len,c
 21232  002566  0E02               	movlw	2
 21233  002568  ECC4  F01E         	call	_USBTransferOnePacket
 21234  00256C  C001  F08C         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21235  002570  C002  F08D         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21236                           
 21237                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21238  002574  0E03               	movlw	3
 21239  002576  0100               	movlb	0	; () banked
 21240  002578  6F9E               	movwf	_MSDReadState& (0+255),b
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21244  00257A  0E40               	movlw	64
 21245  00257C  0101               	movlb	1	; () banked
 21246  00257E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21247  002580  0E00               	movlw	0
 21248  002582  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21249  002584  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21250  002586  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21251                           
 21252                           ; BSR set to: 1
 21253                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21254  002588  0E40               	movlw	64
 21255  00258A  010D               	movlb	13	; () banked
 21256  00258C  5F88               	subwf	136,f,b	;volatile
 21257  00258E  0E00               	movlw	0
 21258  002590  5B89               	subwfb	137,f,b	;volatile
 21259  002592  5B8A               	subwfb	138,f,b	;volatile
 21260  002594  5B8B               	subwfb	139,f,b	;volatile
 21261                           
 21262                           ; BSR set to: 13
 21263                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21264  002596  0E40               	movlw	64
 21265  002598  0101               	movlb	1	; () banked
 21266  00259A  2771               	addwf	_ptrNextData& (0+255),f,b
 21267  00259C  0E00               	movlw	0
 21268  00259E  2372               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21269                           
 21270                           ;usb_device_msd.c: 1149: break;
 21271  0025A0  D01D               	goto	l668
 21272  0025A2                     
 21273                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 21274                           
 21275                           ; BSR set to: 1
 21276  0025A2  0E02               	movlw	2
 21277  0025A4  010D               	movlb	13	; () banked
 21278  0025A6  6F8C               	movwf	140,b	;volatile
 21279                           
 21280                           ; BSR set to: 13
 21281                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 21282  0025A8  0E01               	movlw	1
 21283  0025AA  6E01               	movwf	USBStallEndpoint@dir,c
 21284  0025AC  0E02               	movlw	2
 21285  0025AE  EC3A  F01D         	call	_USBStallEndpoint
 21286  0025B2                     l10623:
 21287                           
 21288                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 21289  0025B2  0E00               	movlw	0
 21290  0025B4                     L26:
 21291  0025B4  0100               	movlb	0	; () banked
 21292  0025B6  D79F               	goto	L24
 21293  0025B8                     l665:
 21294                           
 21295                           ; BSR set to: 0
 21296  0025B8  0100               	movlb	0	; () banked
 21297  0025BA  519E               	movf	_MSDReadState& (0+255),w,b
 21298                           
 21299                           ; Switch size 1, requested type "space"
 21300                           ; Number of cases is 5, Range of values is 0 to 4
 21301                           ; switch strategies available:
 21302                           ; Name         Instructions Cycles
 21303                           ; simple_byte           16     9 (average)
 21304                           ;	Chosen strategy is simple_byte
 21305  0025BC  0A00               	xorlw	0	; case 0
 21306  0025BE  B4D8               	btfsc	status,2,c
 21307  0025C0  D724               	goto	l666
 21308  0025C2  0A01               	xorlw	1	; case 1
 21309  0025C4  B4D8               	btfsc	status,2,c
 21310  0025C6  D74B               	goto	l669
 21311  0025C8  0A03               	xorlw	3	; case 2
 21312  0025CA  B4D8               	btfsc	status,2,c
 21313  0025CC  D753               	goto	l671
 21314  0025CE  0A01               	xorlw	1	; case 3
 21315  0025D0  B4D8               	btfsc	status,2,c
 21316  0025D2  D7AB               	goto	l676
 21317  0025D4  0A07               	xorlw	7	; case 4
 21318  0025D6  B4D8               	btfsc	status,2,c
 21319  0025D8  D7B4               	goto	l678
 21320  0025DA  D7E3               	goto	l680
 21321  0025DC                     l668:
 21322                           
 21323                           ;usb_device_msd.c: 1161: return MSDReadState;
 21324                           
 21325                           ; BSR set to: 0
 21326  0025DC  0100               	movlb	0	; () banked
 21327  0025DE  519E               	movf	_MSDReadState& (0+255),w,b
 21328  0025E0  0012               	return	
 21329  0025E2                     __end_of_MSDReadHandler:
 21330                           	opt stack 0
 21331                           tosu	equ	0xFFF
 21332                           tosh	equ	0xFFE
 21333                           tosl	equ	0xFFD
 21334                           pclath	equ	0xFFA
 21335                           tblptru	equ	0xFF8
 21336                           tblptrh	equ	0xFF7
 21337                           tblptrl	equ	0xFF6
 21338                           tablat	equ	0xFF5
 21339                           prodh	equ	0xFF4
 21340                           prodl	equ	0xFF3
 21341                           intcon	equ	0xFF2
 21342                           intcon2	equ	0xFF1
 21343                           intcon3	equ	0xFF0
 21344                           indf0	equ	0xFEF
 21345                           postinc0	equ	0xFEE
 21346                           fsr0h	equ	0xFEA
 21347                           fsr0l	equ	0xFE9
 21348                           wreg	equ	0xFE8
 21349                           indf1	equ	0xFE7
 21350                           postdec1	equ	0xFE5
 21351                           plusw1	equ	0xFE3
 21352                           fsr1h	equ	0xFE2
 21353                           fsr1l	equ	0xFE1
 21354                           indf2	equ	0xFDF
 21355                           postinc2	equ	0xFDE
 21356                           postdec2	equ	0xFDD
 21357                           plusw2	equ	0xFDB
 21358                           fsr2h	equ	0xFDA
 21359                           fsr2l	equ	0xFD9
 21360                           status	equ	0xFD8
 21361                           
 21362 ;; *************** function _MSDCheckForErrorCases *****************
 21363 ;; Defined at:
 21364 ;;		line 1434 in file "usb_device_msd.c"
 21365 ;; Parameters:    Size  Location     Type
 21366 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 21367 ;; Auto vars:     Size  Location     Type
 21368 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 21369 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 21370 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  1    wreg      unsigned char 
 21373 ;; Registers used:
 21374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21381 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21383 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21384 ;;Total ram usage:        7 bytes
 21385 ;; Hardware stack levels used:    1
 21386 ;; Hardware stack levels required when called:    2
 21387 ;; This function calls:
 21388 ;;		_MSDErrorHandler
 21389 ;; This function is called by:
 21390 ;;		_MSDProcessCommandMediaPresent
 21391 ;;		_MSDReadHandler
 21392 ;;		_MSDWriteHandler
 21393 ;; This function uses a non-reentrant model
 21394 ;;
 21395                           
 21396                           	psect	text99
 21397  004348                     __ptext99:
 21398                           	opt stack 0
 21399  004348                     _MSDCheckForErrorCases:
 21400                           	opt stack 23
 21401                           
 21402                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 21403                           
 21404                           ; BSR set to: 0
 21405                           ;incstack = 0
 21406  004348  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21407  00434A  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21408  00434C  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21409  00434E  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21410  004350  A4D8               	btfss	status,2,c
 21411  004352  D002               	goto	l710
 21412                           
 21413                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 21414  004354  0E01               	movlw	1
 21415  004356  D001               	goto	L27
 21416  004358                     l710:
 21417                           
 21418                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 21419  004358  0E00               	movlw	0
 21420  00435A                     L27:
 21421  00435A  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 21422                           
 21423                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 21424  00435C  0100               	movlb	0	; () banked
 21425  00435E  0599               	decf	_MSDHostNoData& (0+255),w,b
 21426  004360  A4D8               	btfss	status,2,c
 21427  004362  D005               	goto	l712
 21428                           
 21429                           ; BSR set to: 0
 21430  004364  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21431  004366  A4D8               	btfss	status,2,c
 21432  004368  D002               	goto	l712
 21433                           
 21434                           ; BSR set to: 0
 21435                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 21436  00436A  0E00               	movlw	0
 21437                           
 21438                           ; BSR set to: 0
 21439  00436C  0012               	return	
 21440  00436E                     l712:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 21444                           
 21445                           ; BSR set to: 0
 21446  00436E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21447  004370  0101               	movlb	1	; () banked
 21448  004372  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 21449  004374  E11A               	bnz	l10219
 21450  004376  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21451  004378  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 21452  00437A  E117               	bnz	l10219
 21453  00437C  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21454  00437E  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 21455  004380  E114               	bnz	l10219
 21456  004382  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21457  004384  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 21458  004386  A4D8               	btfss	status,2,c
 21459  004388  D010               	goto	l718
 21460                           
 21461                           ; BSR set to: 1
 21462                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 21463  00438A  0100               	movlb	0	; () banked
 21464  00438C  05A0               	decf	_MSD_State& (0+255),w,b
 21465  00438E  A4D8               	btfss	status,2,c
 21466  004390  D006               	goto	l715
 21467                           
 21468                           ; BSR set to: 0
 21469                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 21470  004392  0E2A               	movlw	42
 21471  004394  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21472  004396  B4D8               	btfsc	status,2,c
 21473  004398  D008               	goto	l718
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 21477  00439A  0E00               	movlw	0
 21478                           
 21479                           ; BSR set to: 0
 21480  00439C  0012               	return	
 21481  00439E                     l715:
 21482                           
 21483                           ; BSR set to: 0
 21484                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 21485                           
 21486                           ; BSR set to: 0
 21487  00439E  0E2A               	movlw	42
 21488  0043A0  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21489  0043A2  A4D8               	btfss	status,2,c
 21490  0043A4  D002               	goto	l718
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 21494  0043A6  0E00               	movlw	0
 21495                           
 21496                           ; BSR set to: 0
 21497  0043A8  0012               	return	
 21498  0043AA                     l718:
 21499  0043AA                     l10219:
 21500                           
 21501                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 21502  0043AA  0101               	movlb	1	; () banked
 21503  0043AC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21504  0043AE  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 21505  0043B0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21506  0043B2  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21507  0043B4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21508  0043B6  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21509  0043B8  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21510  0043BA  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21511  0043BC  B0D8               	btfsc	status,0,c
 21512  0043BE  D002               	goto	l719
 21513                           
 21514                           ; BSR set to: 1
 21515                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 21516  0043C0  0E01               	movlw	1
 21517  0043C2  D001               	goto	L28
 21518  0043C4                     l719:
 21519                           
 21520                           ; BSR set to: 1
 21521                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 21522                           
 21523                           ; BSR set to: 1
 21524  0043C4  0E00               	movlw	0
 21525  0043C6                     L28:
 21526  0043C6  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 21527                           
 21528                           ; BSR set to: 1
 21529                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 21530                           
 21531                           ; BSR set to: 1
 21532  0043C8  0E02               	movlw	2
 21533  0043CA  0100               	movlb	0	; () banked
 21534  0043CC  19A0               	xorwf	_MSD_State& (0+255),w,b
 21535  0043CE  A4D8               	btfss	status,2,c
 21536  0043D0  D014               	goto	l721
 21537                           
 21538                           ; BSR set to: 0
 21539                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 21540  0043D2  0E2A               	movlw	42
 21541  0043D4  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21542  0043D6  B4D8               	btfsc	status,2,c
 21543  0043D8  D005               	goto	l722
 21544                           
 21545                           ; BSR set to: 0
 21546  0043DA  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 21547  0043DC  A4D8               	btfss	status,2,c
 21548  0043DE  D002               	goto	l722
 21549  0043E0                     u7500:
 21550                           
 21551                           ; BSR set to: 0
 21552                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 21553  0043E0  0E05               	movlw	5
 21554  0043E2  D01D               	goto	L31
 21555  0043E4                     l722:
 21556                           
 21557                           ; BSR set to: 0
 21558                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 21559                           
 21560                           ; BSR set to: 0
 21561  0043E4  0599               	decf	_MSDHostNoData& (0+255),w,b
 21562  0043E6  B4D8               	btfsc	status,2,c
 21563  0043E8  D00F               	goto	u7550
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 21567                           
 21568                           ; BSR set to: 0
 21569                           
 21570                           ; BSR set to: 0
 21571                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 21572  0043EA  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21573  0043EC  B4D8               	btfsc	status,2,c
 21574  0043EE  D003               	goto	u7530
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 21578                           
 21579                           ; BSR set to: 0
 21580                           
 21581                           ; BSR set to: 0
 21582                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 21583  0043F0  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21584  0043F2  A4D8               	btfss	status,2,c
 21585  0043F4  D7F5               	goto	u7500
 21586  0043F6                     u7530:
 21587                           
 21588                           ; BSR set to: 0
 21589                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 21590  0043F6  0E04               	movlw	4
 21591  0043F8  D012               	goto	L31
 21592  0043FA                     l721:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 21596                           
 21597                           ; BSR set to: 0
 21598  0043FA  0E2A               	movlw	42
 21599  0043FC  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21600  0043FE  B4D8               	btfsc	status,2,c
 21601  004400  D00D               	goto	l737
 21602                           
 21603                           ; BSR set to: 0
 21604                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 21605                           
 21606                           ; BSR set to: 0
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 21610  004402  0599               	decf	_MSDHostNoData& (0+255),w,b
 21611  004404  A4D8               	btfss	status,2,c
 21612  004406  D002               	goto	l733
 21613  004408                     u7550:
 21614                           
 21615                           ; BSR set to: 0
 21616                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 21617  004408  0E01               	movlw	1
 21618  00440A  D009               	goto	L31
 21619  00440C                     l733:
 21620                           
 21621                           ; BSR set to: 0
 21622                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 21623                           
 21624                           ; BSR set to: 0
 21625  00440C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21626  00440E  B4D8               	btfsc	status,2,c
 21627  004410  D003               	goto	u7570
 21628                           
 21629                           ; BSR set to: 0
 21630                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 21631                           
 21632                           ; BSR set to: 0
 21633                           
 21634                           ; BSR set to: 0
 21635                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 21636  004412  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21637  004414  A4D8               	btfss	status,2,c
 21638  004416  D002               	goto	l737
 21639  004418                     u7570:
 21640                           
 21641                           ; BSR set to: 0
 21642                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 21643  004418  0E02               	movlw	2
 21644  00441A  D001               	goto	L31
 21645  00441C                     l737:
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 21649                           
 21650                           ; BSR set to: 0
 21651  00441C  0E03               	movlw	3
 21652  00441E                     L31:
 21653  00441E  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 21654                           
 21655                           ; BSR set to: 0
 21656                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 21657                           
 21658                           ; BSR set to: 0
 21659                           
 21660                           ; BSR set to: 0
 21661                           
 21662                           ; BSR set to: 0
 21663                           
 21664                           ; BSR set to: 0
 21665                           
 21666                           ; BSR set to: 0
 21667  004420  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21668  004422  EC41  F01E         	call	_MSDErrorHandler
 21669                           
 21670                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 21671  004426  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21672  004428  0012               	return	
 21673  00442A                     __end_of_MSDCheckForErrorCases:
 21674                           	opt stack 0
 21675                           tosu	equ	0xFFF
 21676                           tosh	equ	0xFFE
 21677                           tosl	equ	0xFFD
 21678                           pclath	equ	0xFFA
 21679                           tblptru	equ	0xFF8
 21680                           tblptrh	equ	0xFF7
 21681                           tblptrl	equ	0xFF6
 21682                           tablat	equ	0xFF5
 21683                           prodh	equ	0xFF4
 21684                           prodl	equ	0xFF3
 21685                           intcon	equ	0xFF2
 21686                           intcon2	equ	0xFF1
 21687                           intcon3	equ	0xFF0
 21688                           indf0	equ	0xFEF
 21689                           postinc0	equ	0xFEE
 21690                           fsr0h	equ	0xFEA
 21691                           fsr0l	equ	0xFE9
 21692                           wreg	equ	0xFE8
 21693                           indf1	equ	0xFE7
 21694                           postdec1	equ	0xFE5
 21695                           plusw1	equ	0xFE3
 21696                           fsr1h	equ	0xFE2
 21697                           fsr1l	equ	0xFE1
 21698                           indf2	equ	0xFDF
 21699                           postinc2	equ	0xFDE
 21700                           postdec2	equ	0xFDD
 21701                           plusw2	equ	0xFDB
 21702                           fsr2h	equ	0xFDA
 21703                           fsr2l	equ	0xFD9
 21704                           status	equ	0xFD8
 21705                           
 21706 ;; *************** function _MSDErrorHandler *****************
 21707 ;; Defined at:
 21708 ;;		line 1577 in file "usb_device_msd.c"
 21709 ;; Parameters:    Size  Location     Type
 21710 ;;  ErrorCase       1    wreg     unsigned char 
 21711 ;; Auto vars:     Size  Location     Type
 21712 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 21713 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 21714 ;; Return value:  Size  Location     Type
 21715 ;;                  1    wreg      void 
 21716 ;; Registers used:
 21717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21718 ;; Tracked objects:
 21719 ;;		On entry : 0/0
 21720 ;;		On exit  : 0/0
 21721 ;;		Unchanged: 0/0
 21722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21727 ;;Total ram usage:        2 bytes
 21728 ;; Hardware stack levels used:    1
 21729 ;; Hardware stack levels required when called:    1
 21730 ;; This function calls:
 21731 ;;		_ResetSenseData
 21732 ;;		_USBStallEndpoint
 21733 ;; This function is called by:
 21734 ;;		_MSDProcessCommandMediaAbsent
 21735 ;;		_MSDProcessCommandMediaPresent
 21736 ;;		_MSDCheckForErrorCases
 21737 ;; This function uses a non-reentrant model
 21738 ;;
 21739                           
 21740                           	psect	text100
 21741  003C82                     __ptext100:
 21742                           	opt stack 0
 21743  003C82                     _MSDErrorHandler:
 21744                           	opt stack 23
 21745                           
 21746                           ;incstack = 0
 21747                           ;MSDErrorHandler@ErrorCase stored from wreg
 21748  003C82  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 21749                           
 21750                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 21751  003C84  0100               	movlb	0	; () banked
 21752  003C86  518C               	movf	_USBMSDInHandle& (0+255),w,b
 21753  003C88  118D               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21754  003C8A  B4D8               	btfsc	status,2,c
 21755  003C8C  D006               	goto	u7130
 21756                           
 21757                           ; BSR set to: 0
 21758  003C8E  C08C  FFD9         	movff	_USBMSDInHandle,fsr2l
 21759  003C92  C08D  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21760  003C96  BEDF               	btfsc	indf2,7,c
 21761  003C98  0012               	return	
 21762  003C9A                     u7130:
 21763                           
 21764                           ; BSR set to: 0
 21765                           
 21766                           ; BSR set to: 0
 21767  003C9A  518E               	movf	_USBMSDOutHandle& (0+255),w,b
 21768  003C9C  118F               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21769  003C9E  B4D8               	btfsc	status,2,c
 21770  003CA0  D006               	goto	l741
 21771                           
 21772                           ; BSR set to: 0
 21773  003CA2  C08E  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21774  003CA6  C08F  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21775  003CAA  BEDF               	btfsc	indf2,7,c
 21776  003CAC  0012               	return	
 21777  003CAE                     l741:
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 21781  003CAE  C0A0  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 21782                           
 21783                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 21784  003CB2  699F               	setf	_MSDCommandState& (0+255),b
 21785                           
 21786                           ; BSR set to: 0
 21787                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 21788  003CB4  0E00               	movlw	0
 21789  003CB6  6F9E               	movwf	_MSDReadState& (0+255),b
 21790                           
 21791                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 21792  003CB8  0E00               	movlw	0
 21793  003CBA  6F9D               	movwf	_MSDWriteState& (0+255),b
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 21797  003CBC  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 21798  003CC0  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 21799  003CC4  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 21800  003CC8  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 21801                           
 21802                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 21803  003CCC  0E01               	movlw	1
 21804  003CCE  010D               	movlb	13	; () banked
 21805  003CD0  6F8C               	movwf	140,b	;volatile
 21806                           
 21807                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 21808  003CD2  0E03               	movlw	3
 21809  003CD4  0100               	movlb	0	; () banked
 21810  003CD6  6FA0               	movwf	_MSD_State& (0+255),b
 21811                           
 21812                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 21813  003CD8  D043               	goto	l747
 21814  003CDA                     
 21815                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 21816                           
 21817                           ; BSR set to: 0
 21818  003CDA  0E02               	movlw	2
 21819  003CDC  010D               	movlb	13	; () banked
 21820  003CDE  6F8C               	movwf	140,b	;volatile
 21821                           
 21822                           ;usb_device_msd.c: 1607: break;
 21823  003CE0  0012               	return	
 21824  003CE2                     
 21825                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 21826                           
 21827                           ; BSR set to: 13
 21828  003CE2  0E01               	movlw	1
 21829  003CE4  6E01               	movwf	USBStallEndpoint@dir,c
 21830  003CE6  0E02               	movlw	2
 21831  003CE8  EC3A  F01D         	call	_USBStallEndpoint
 21832                           
 21833                           ;usb_device_msd.c: 1611: break;
 21834  003CEC  0012               	return	
 21835  003CEE                     
 21836                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 21837  003CEE  0E02               	movlw	2
 21838  003CF0  010D               	movlb	13	; () banked
 21839  003CF2  6F8C               	movwf	140,b	;volatile
 21840                           
 21841                           ; BSR set to: 13
 21842                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 21843  003CF4  0E01               	movlw	1
 21844  003CF6  6E01               	movwf	USBStallEndpoint@dir,c
 21845  003CF8  0E02               	movlw	2
 21846  003CFA  EC3A  F01D         	call	_USBStallEndpoint
 21847                           
 21848                           ;usb_device_msd.c: 1616: break;
 21849  003CFE  0012               	return	
 21850  003D00                     
 21851                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 21852  003D00  0E00               	movlw	0
 21853  003D02  6E01               	movwf	USBStallEndpoint@dir,c
 21854  003D04  0E02               	movlw	2
 21855  003D06  EC3A  F01D         	call	_USBStallEndpoint
 21856                           
 21857                           ;usb_device_msd.c: 1620: break;
 21858  003D0A  0012               	return	
 21859  003D0C                     
 21860                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 21861  003D0C  0E02               	movlw	2
 21862  003D0E  010D               	movlb	13	; () banked
 21863  003D10  6F8C               	movwf	140,b	;volatile
 21864                           
 21865                           ; BSR set to: 13
 21866                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 21867  003D12  0E00               	movlw	0
 21868  003D14  6E01               	movwf	USBStallEndpoint@dir,c
 21869  003D16  0E02               	movlw	2
 21870  003D18  EC3A  F01D         	call	_USBStallEndpoint
 21871                           
 21872                           ;usb_device_msd.c: 1625: break;
 21873  003D1C  0012               	return	
 21874  003D1E                     
 21875                           ;usb_device_msd.c: 1628: ResetSenseData();
 21876  003D1E  ECE4  F030         	call	_ResetSenseData	;wreg free
 21877                           
 21878                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 21879  003D22  0101               	movlb	1	; () banked
 21880  003D24  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21881  003D26  0BF0               	andlw	-16
 21882  003D28  0905               	iorlw	5
 21883  003D2A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21884                           
 21885                           ; BSR set to: 1
 21886                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 21887  003D2C  0E20               	movlw	32
 21888  003D2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21889                           
 21890                           ; BSR set to: 1
 21891                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 21892  003D30  0E00               	movlw	0
 21893  003D32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21894                           
 21895                           ; BSR set to: 1
 21896                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 21897  003D34  0E02               	movlw	2
 21898  003D36  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 21899  003D38  A4D8               	btfss	status,2,c
 21900  003D3A  D00C               	goto	l755
 21901                           
 21902                           ; BSR set to: 1
 21903  003D3C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21904  003D3E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21905  003D40  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 21906  003D42  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 21907  003D44  B4D8               	btfsc	status,2,c
 21908  003D46  D006               	goto	l755
 21909                           
 21910                           ; BSR set to: 1
 21911                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 21912  003D48  0E00               	movlw	0
 21913  003D4A  6E01               	movwf	USBStallEndpoint@dir,c
 21914  003D4C  0E02               	movlw	2
 21915  003D4E  EC3A  F01D         	call	_USBStallEndpoint
 21916                           
 21917                           ;usb_device_msd.c: 1636: }
 21918  003D52  0012               	return	
 21919  003D54                     l755:
 21920                           
 21921                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21922  003D54  0E01               	movlw	1
 21923  003D56  6E01               	movwf	USBStallEndpoint@dir,c
 21924  003D58  0E02               	movlw	2
 21925  003D5A  EC3A  F01D         	call	_USBStallEndpoint
 21926                           
 21927                           ;usb_device_msd.c: 1644: }
 21928                           
 21929                           ;usb_device_msd.c: 1643: break;
 21930                           
 21931                           ;usb_device_msd.c: 1642: default:
 21932                           
 21933                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21934  003D5E  0012               	return	
 21935  003D60                     l747:
 21936  003D60  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21937                           
 21938                           ; Switch size 1, requested type "space"
 21939                           ; Number of cases is 6, Range of values is 1 to 127
 21940                           ; switch strategies available:
 21941                           ; Name         Instructions Cycles
 21942                           ; simple_byte           19    10 (average)
 21943                           ;	Chosen strategy is simple_byte
 21944  003D62  0A01               	xorlw	1	; case 1
 21945  003D64  B4D8               	btfsc	status,2,c
 21946  003D66  D7B9               	goto	l748
 21947  003D68  0A03               	xorlw	3	; case 2
 21948  003D6A  B4D8               	btfsc	status,2,c
 21949  003D6C  D7BA               	goto	l750
 21950  003D6E  0A01               	xorlw	1	; case 3
 21951  003D70  B4D8               	btfsc	status,2,c
 21952  003D72  D7BD               	goto	l751
 21953  003D74  0A07               	xorlw	7	; case 4
 21954  003D76  B4D8               	btfsc	status,2,c
 21955  003D78  D7C3               	goto	l752
 21956  003D7A  0A01               	xorlw	1	; case 5
 21957  003D7C  B4D8               	btfsc	status,2,c
 21958  003D7E  D7C6               	goto	l753
 21959  003D80  0A7A               	xorlw	122	; case 127
 21960  003D82  A4D8               	btfss	status,2,c
 21961  003D84  0012               	return	
 21962  003D86  D7CB               	goto	l754
 21963  003D88                     __end_of_MSDErrorHandler:
 21964                           	opt stack 0
 21965                           tosu	equ	0xFFF
 21966                           tosh	equ	0xFFE
 21967                           tosl	equ	0xFFD
 21968                           pclath	equ	0xFFA
 21969                           tblptru	equ	0xFF8
 21970                           tblptrh	equ	0xFF7
 21971                           tblptrl	equ	0xFF6
 21972                           tablat	equ	0xFF5
 21973                           prodh	equ	0xFF4
 21974                           prodl	equ	0xFF3
 21975                           intcon	equ	0xFF2
 21976                           intcon2	equ	0xFF1
 21977                           intcon3	equ	0xFF0
 21978                           indf0	equ	0xFEF
 21979                           postinc0	equ	0xFEE
 21980                           fsr0h	equ	0xFEA
 21981                           fsr0l	equ	0xFE9
 21982                           wreg	equ	0xFE8
 21983                           indf1	equ	0xFE7
 21984                           postdec1	equ	0xFE5
 21985                           plusw1	equ	0xFE3
 21986                           fsr1h	equ	0xFE2
 21987                           fsr1l	equ	0xFE1
 21988                           indf2	equ	0xFDF
 21989                           postinc2	equ	0xFDE
 21990                           postdec2	equ	0xFDD
 21991                           plusw2	equ	0xFDB
 21992                           fsr2h	equ	0xFDA
 21993                           fsr2l	equ	0xFD9
 21994                           status	equ	0xFD8
 21995                           
 21996 ;; *************** function _USBStallEndpoint *****************
 21997 ;; Defined at:
 21998 ;;		line 1073 in file "usb_device.c"
 21999 ;; Parameters:    Size  Location     Type
 22000 ;;  ep              1    wreg     unsigned char 
 22001 ;;  dir             1    0[COMRAM] unsigned char 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;  ep              1    5[COMRAM] unsigned char 
 22004 ;;  p               2    6[COMRAM] PTR struct __BDT
 22005 ;;		 -> BDT(48), 
 22006 ;; Return value:  Size  Location     Type
 22007 ;;                  1    wreg      void 
 22008 ;; Registers used:
 22009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22010 ;; Tracked objects:
 22011 ;;		On entry : 0/0
 22012 ;;		On exit  : 0/0
 22013 ;;		Unchanged: 0/0
 22014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22015 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22016 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22017 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22018 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22019 ;;Total ram usage:        8 bytes
 22020 ;; Hardware stack levels used:    1
 22021 ;; This function calls:
 22022 ;;		Nothing
 22023 ;; This function is called by:
 22024 ;;		_MSDTasks
 22025 ;;		_MSDReadHandler
 22026 ;;		_MSDWriteHandler
 22027 ;;		_MSDErrorHandler
 22028 ;;		_MSDTransferTerminated
 22029 ;; This function uses a non-reentrant model
 22030 ;;
 22031                           
 22032                           	psect	text101
 22033  003A74                     __ptext101:
 22034                           	opt stack 0
 22035  003A74                     _USBStallEndpoint:
 22036                           	opt stack 27
 22037                           
 22038                           ;incstack = 0
 22039                           ;USBStallEndpoint@ep stored from wreg
 22040  003A74  6E06               	movwf	USBStallEndpoint@ep,c
 22041                           
 22042                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22043  003A76  5006               	movf	USBStallEndpoint@ep,w,c
 22044  003A78  A4D8               	btfss	status,2,c
 22045  003A7A  D02C               	goto	l191
 22046                           
 22047                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22048  003A7C  0100               	movlb	0	; () banked
 22049  003A7E  EE20 F001          	lfsr	2,1
 22050  003A82  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22051  003A84  26D9               	addwf	fsr2l,f,c
 22052  003A86  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22053  003A88  22DA               	addwfc	fsr2h,f,c
 22054  003A8A  0E08               	movlw	8
 22055  003A8C  6EDF               	movwf	indf2,c
 22056                           
 22057                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22058  003A8E  EE20 F002          	lfsr	2,2
 22059  003A92  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22060  003A94  26D9               	addwf	fsr2l,f,c
 22061  003A96  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22062  003A98  22DA               	addwfc	fsr2h,f,c
 22063  003A9A  0E30               	movlw	48
 22064  003A9C  6EDE               	movwf	postinc2,c
 22065  003A9E  0E0D               	movlw	13
 22066  003AA0  6EDD               	movwf	postdec2,c
 22067                           
 22068                           ; BSR set to: 0
 22069                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22070  003AA2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22071  003AA6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22072  003AAA  0E0C               	movlw	12
 22073  003AAC  6EDF               	movwf	indf2,c
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22077  003AAE  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22078  003AB2  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22079  003AB6  0E00               	movlw	0
 22080  003AB8  8EDB               	bsf	plusw2,7,c
 22081                           
 22082                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22083  003ABA  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 22084  003ABE  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22085  003AC2  0E04               	movlw	4
 22086  003AC4  6EDF               	movwf	indf2,c
 22087                           
 22088                           ; BSR set to: 0
 22089                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22090  003AC6  C072  FFD9         	movff	_pBDTEntryIn,fsr2l
 22091  003ACA  C073  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22092  003ACE  0E00               	movlw	0
 22093  003AD0  8EDB               	bsf	plusw2,7,c
 22094                           
 22095                           ;usb_device.c: 1089: }
 22096  003AD2  0012               	return	
 22097  003AD4                     l191:
 22098                           
 22099                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22100                           
 22101                           ; BSR set to: 0
 22102  003AD4  5001               	movf	USBStallEndpoint@dir,w,c
 22103  003AD6  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22104  003AD8  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22105  003ADA  90D8               	bcf	status,0,c
 22106  003ADC  3602               	rlcf	??_USBStallEndpoint,f,c
 22107  003ADE  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22108  003AE0  5006               	movf	USBStallEndpoint@ep,w,c
 22109  003AE2  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22110  003AE4  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22111  003AE6  90D8               	bcf	status,0,c
 22112  003AE8  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22113  003AEA  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22114  003AEC  90D8               	bcf	status,0,c
 22115  003AEE  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22116  003AF0  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22117  003AF2  5002               	movf	??_USBStallEndpoint,w,c
 22118  003AF4  2604               	addwf	??_USBStallEndpoint+2,f,c
 22119  003AF6  5003               	movf	??_USBStallEndpoint+1,w,c
 22120  003AF8  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22121  003AFA  90D8               	bcf	status,0,c
 22122  003AFC  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22123  003AFE  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22124  003B00  90D8               	bcf	status,0,c
 22125  003B02  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22126  003B04  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22127  003B06  0E00               	movlw	0
 22128  003B08  2404               	addwf	??_USBStallEndpoint+2,w,c
 22129  003B0A  6E07               	movwf	USBStallEndpoint@p,c
 22130  003B0C  0E0D               	movlw	13
 22131  003B0E  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22132  003B10  6E08               	movwf	USBStallEndpoint@p+1,c
 22133                           
 22134                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22135  003B12  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22136  003B16  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22137  003B1A  0E00               	movlw	0
 22138  003B1C  84DB               	bsf	plusw2,2,c
 22139                           
 22140                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22141  003B1E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22142  003B22  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22143  003B26  0E00               	movlw	0
 22144  003B28  8EDB               	bsf	plusw2,7,c
 22145                           
 22146                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22147  003B2A  5006               	movf	USBStallEndpoint@ep,w,c
 22148  003B2C  0D04               	mullw	4
 22149  003B2E  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22150  003B32  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22151  003B36  5001               	movf	USBStallEndpoint@dir,w,c
 22152  003B38  0D02               	mullw	2
 22153  003B3A  50F3               	movf	prodl,w,c
 22154  003B3C  2602               	addwf	??_USBStallEndpoint,f,c
 22155  003B3E  50F4               	movf	prodh,w,c
 22156  003B40  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22157  003B42  90D8               	bcf	status,0,c
 22158  003B44  3602               	rlcf	??_USBStallEndpoint,f,c
 22159  003B46  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22160  003B48  90D8               	bcf	status,0,c
 22161  003B4A  3602               	rlcf	??_USBStallEndpoint,f,c
 22162  003B4C  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22163  003B4E  0E04               	movlw	4
 22164  003B50  2602               	addwf	??_USBStallEndpoint,f,c
 22165  003B52  0E00               	movlw	0
 22166  003B54  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22167  003B56  0E00               	movlw	0
 22168  003B58  2402               	addwf	??_USBStallEndpoint,w,c
 22169  003B5A  6E07               	movwf	USBStallEndpoint@p,c
 22170  003B5C  0E0D               	movlw	13
 22171  003B5E  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22172  003B60  6E08               	movwf	USBStallEndpoint@p+1,c
 22173                           
 22174                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22175  003B62  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22176  003B66  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22177  003B6A  0E00               	movlw	0
 22178  003B6C  84DB               	bsf	plusw2,2,c
 22179                           
 22180                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22181  003B6E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22182  003B72  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22183  003B76  0E00               	movlw	0
 22184  003B78  8EDB               	bsf	plusw2,7,c
 22185  003B7A  0012               	return	
 22186  003B7C                     __end_of_USBStallEndpoint:
 22187                           	opt stack 0
 22188                           tosu	equ	0xFFF
 22189                           tosh	equ	0xFFE
 22190                           tosl	equ	0xFFD
 22191                           pclath	equ	0xFFA
 22192                           tblptru	equ	0xFF8
 22193                           tblptrh	equ	0xFF7
 22194                           tblptrl	equ	0xFF6
 22195                           tablat	equ	0xFF5
 22196                           prodh	equ	0xFF4
 22197                           prodl	equ	0xFF3
 22198                           intcon	equ	0xFF2
 22199                           intcon2	equ	0xFF1
 22200                           intcon3	equ	0xFF0
 22201                           indf0	equ	0xFEF
 22202                           postinc0	equ	0xFEE
 22203                           fsr0h	equ	0xFEA
 22204                           fsr0l	equ	0xFE9
 22205                           wreg	equ	0xFE8
 22206                           indf1	equ	0xFE7
 22207                           postdec1	equ	0xFE5
 22208                           plusw1	equ	0xFE3
 22209                           fsr1h	equ	0xFE2
 22210                           fsr1l	equ	0xFE1
 22211                           indf2	equ	0xFDF
 22212                           postinc2	equ	0xFDE
 22213                           postdec2	equ	0xFDD
 22214                           plusw2	equ	0xFDB
 22215                           fsr2h	equ	0xFDA
 22216                           fsr2l	equ	0xFD9
 22217                           status	equ	0xFD8
 22218                           
 22219 ;; *************** function _ResetSenseData *****************
 22220 ;; Defined at:
 22221 ;;		line 1373 in file "usb_device_msd.c"
 22222 ;; Parameters:    Size  Location     Type
 22223 ;;		None
 22224 ;; Auto vars:     Size  Location     Type
 22225 ;;		None
 22226 ;; Return value:  Size  Location     Type
 22227 ;;                  1    wreg      void 
 22228 ;; Registers used:
 22229 ;;		wreg, status,2
 22230 ;; Tracked objects:
 22231 ;;		On entry : 0/0
 22232 ;;		On exit  : 0/0
 22233 ;;		Unchanged: 0/0
 22234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22239 ;;Total ram usage:        0 bytes
 22240 ;; Hardware stack levels used:    1
 22241 ;; This function calls:
 22242 ;;		Nothing
 22243 ;; This function is called by:
 22244 ;;		_USBMSDInit
 22245 ;;		_MSDProcessCommandMediaAbsent
 22246 ;;		_MSDProcessCommandMediaPresent
 22247 ;;		_MSDErrorHandler
 22248 ;; This function uses a non-reentrant model
 22249 ;;
 22250                           
 22251                           	psect	text102
 22252  0061C8                     __ptext102:
 22253                           	opt stack 0
 22254  0061C8                     _ResetSenseData:
 22255                           	opt stack 26
 22256                           
 22257                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22258                           
 22259                           ;incstack = 0
 22260  0061C8  0101               	movlb	1	; () banked
 22261  0061CA  911F               	bcf	_gblSenseData& (0+255),0,b
 22262  0061CC  931F               	bcf	_gblSenseData& (0+255),1,b
 22263  0061CE  951F               	bcf	_gblSenseData& (0+255),2,b
 22264  0061D0  971F               	bcf	_gblSenseData& (0+255),3,b
 22265  0061D2  891F               	bsf	_gblSenseData& (0+255),4,b
 22266  0061D4  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22267  0061D6  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22268                           
 22269                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22270  0061D8  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22271                           
 22272                           ; BSR set to: 1
 22273                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 22274  0061DA  0E00               	movlw	0
 22275  0061DC  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 22276                           
 22277                           ; BSR set to: 1
 22278                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 22279  0061DE  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22280  0061E0  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22281  0061E2  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22282  0061E4  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 22286  0061E6  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 22287                           
 22288                           ; BSR set to: 1
 22289                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 22290  0061E8  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 22291                           
 22292                           ; BSR set to: 1
 22293                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 22294  0061EA  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 22295                           
 22296                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 22297  0061EC  0E00               	movlw	0
 22298  0061EE  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 22299                           
 22300                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 22301  0061F0  0E00               	movlw	0
 22302  0061F2  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 22303                           
 22304                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 22305  0061F4  0E00               	movlw	0
 22306  0061F6  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 22307                           
 22308                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 22309  0061F8  0E00               	movlw	0
 22310  0061FA  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 22311                           
 22312                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 22313  0061FC  0E0A               	movlw	10
 22314  0061FE  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 22315                           
 22316                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 22317  006200  0E00               	movlw	0
 22318  006202  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 22319  006204  0E00               	movlw	0
 22320  006206  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 22321  006208  0E00               	movlw	0
 22322  00620A  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 22323  00620C  0E00               	movlw	0
 22324  00620E  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 22325                           
 22326                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 22327  006210  0E00               	movlw	0
 22328  006212  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22329                           
 22330                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 22331  006214  0E00               	movlw	0
 22332  006216  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22333                           
 22334                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 22335  006218  0E00               	movlw	0
 22336  00621A  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 22337                           
 22338                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 22339  00621C  0E00               	movlw	0
 22340  00621E  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 22341                           
 22342                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 22343  006220  0E00               	movlw	0
 22344  006222  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 22345                           
 22346                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 22347  006224  0E00               	movlw	0
 22348  006226  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 22349                           
 22350                           ; BSR set to: 1
 22351  006228  0012               	return		;funcret
 22352  00622A                     __end_of_ResetSenseData:
 22353                           	opt stack 0
 22354                           tosu	equ	0xFFF
 22355                           tosh	equ	0xFFE
 22356                           tosl	equ	0xFFD
 22357                           pclath	equ	0xFFA
 22358                           tblptru	equ	0xFF8
 22359                           tblptrh	equ	0xFF7
 22360                           tblptrl	equ	0xFF6
 22361                           tablat	equ	0xFF5
 22362                           prodh	equ	0xFF4
 22363                           prodl	equ	0xFF3
 22364                           intcon	equ	0xFF2
 22365                           intcon2	equ	0xFF1
 22366                           intcon3	equ	0xFF0
 22367                           indf0	equ	0xFEF
 22368                           postinc0	equ	0xFEE
 22369                           fsr0h	equ	0xFEA
 22370                           fsr0l	equ	0xFE9
 22371                           wreg	equ	0xFE8
 22372                           indf1	equ	0xFE7
 22373                           postdec1	equ	0xFE5
 22374                           plusw1	equ	0xFE3
 22375                           fsr1h	equ	0xFE2
 22376                           fsr1l	equ	0xFE1
 22377                           indf2	equ	0xFDF
 22378                           postinc2	equ	0xFDE
 22379                           postdec2	equ	0xFDD
 22380                           plusw2	equ	0xFDB
 22381                           fsr2h	equ	0xFDA
 22382                           fsr2l	equ	0xFD9
 22383                           status	equ	0xFD8
 22384                           
 22385 ;; *************** function _ExternalFlash_SectorRead *****************
 22386 ;; Defined at:
 22387 ;;		line 40 in file "external_flash.c"
 22388 ;; Parameters:    Size  Location     Type
 22389 ;;  config          2   43[COMRAM] PTR void 
 22390 ;;		 -> NULL(0), 
 22391 ;;  sector_addr     4   45[COMRAM] unsigned long 
 22392 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 22393 ;;		 -> msd_buffer(512), 
 22394 ;; Auto vars:     Size  Location     Type
 22395 ;;  page            2   51[COMRAM] unsigned int 
 22396 ;; Return value:  Size  Location     Type
 22397 ;;                  1    wreg      unsigned char 
 22398 ;; Registers used:
 22399 ;;		wreg, status,2, status,0, cstack
 22400 ;; Tracked objects:
 22401 ;;		On entry : 0/0
 22402 ;;		On exit  : 0/0
 22403 ;;		Unchanged: 0/0
 22404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22408 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22409 ;;Total ram usage:       10 bytes
 22410 ;; Hardware stack levels used:    1
 22411 ;; Hardware stack levels required when called:    5
 22412 ;; This function calls:
 22413 ;;		_flash_sector_read
 22414 ;; This function is called by:
 22415 ;;		_MSDReadHandler
 22416 ;; This function uses a non-reentrant model
 22417 ;;
 22418                           
 22419                           	psect	text103
 22420  006CB8                     __ptext103:
 22421                           	opt stack 0
 22422  006CB8                     _ExternalFlash_SectorRead:
 22423                           	opt stack 20
 22424                           
 22425                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 22426                           
 22427                           ; BSR set to: 1
 22428                           ;incstack = 0
 22429  006CB8  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 22430  006CBC  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 22431                           
 22432                           ;external_flash.c: 45: if(sector_addr >= 8192)
 22433  006CC0  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 22434  006CC2  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 22435  006CC4  E104               	bnz	u7770
 22436  006CC6  0E20               	movlw	32
 22437  006CC8  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 22438  006CCA  A0D8               	btfss	status,0,c
 22439  006CCC  D002               	goto	l1881
 22440  006CCE                     u7770:
 22441                           
 22442                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 22443  006CCE  0E00               	movlw	0
 22444  006CD0  0012               	return	
 22445  006CD2                     l1881:
 22446                           
 22447                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 22448  006CD2  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 22449  006CD6  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 22450  006CDA  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 22451  006CDE  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 22452  006CE2  EC62  F037         	call	_flash_sector_read	;wreg free
 22453                           
 22454                           ;external_flash.c: 53: return 1;
 22455  006CE6  0E01               	movlw	1
 22456  006CE8  0012               	return	
 22457  006CEA                     __end_of_ExternalFlash_SectorRead:
 22458                           	opt stack 0
 22459                           tosu	equ	0xFFF
 22460                           tosh	equ	0xFFE
 22461                           tosl	equ	0xFFD
 22462                           pclath	equ	0xFFA
 22463                           tblptru	equ	0xFF8
 22464                           tblptrh	equ	0xFF7
 22465                           tblptrl	equ	0xFF6
 22466                           tablat	equ	0xFF5
 22467                           prodh	equ	0xFF4
 22468                           prodl	equ	0xFF3
 22469                           intcon	equ	0xFF2
 22470                           intcon2	equ	0xFF1
 22471                           intcon3	equ	0xFF0
 22472                           indf0	equ	0xFEF
 22473                           postinc0	equ	0xFEE
 22474                           fsr0h	equ	0xFEA
 22475                           fsr0l	equ	0xFE9
 22476                           wreg	equ	0xFE8
 22477                           indf1	equ	0xFE7
 22478                           postdec1	equ	0xFE5
 22479                           plusw1	equ	0xFE3
 22480                           fsr1h	equ	0xFE2
 22481                           fsr1l	equ	0xFE1
 22482                           indf2	equ	0xFDF
 22483                           postinc2	equ	0xFDE
 22484                           postdec2	equ	0xFDD
 22485                           plusw2	equ	0xFDB
 22486                           fsr2h	equ	0xFDA
 22487                           fsr2l	equ	0xFD9
 22488                           status	equ	0xFD8
 22489                           
 22490 ;; *************** function _flash_sector_read *****************
 22491 ;; Defined at:
 22492 ;;		line 426 in file "flash.c"
 22493 ;; Parameters:    Size  Location     Type
 22494 ;;  page            2   39[COMRAM] unsigned int 
 22495 ;;  data            2   41[COMRAM] PTR unsigned char 
 22496 ;;		 -> buffer(512), msd_buffer(512), 
 22497 ;; Auto vars:     Size  Location     Type
 22498 ;;		None
 22499 ;; Return value:  Size  Location     Type
 22500 ;;                  1    wreg      void 
 22501 ;; Registers used:
 22502 ;;		wreg, status,2, status,0, cstack
 22503 ;; Tracked objects:
 22504 ;;		On entry : 0/0
 22505 ;;		On exit  : 0/0
 22506 ;;		Unchanged: 0/0
 22507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22511 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22512 ;;Total ram usage:        4 bytes
 22513 ;; Hardware stack levels used:    1
 22514 ;; Hardware stack levels required when called:    4
 22515 ;; This function calls:
 22516 ;;		__flash_partial_read
 22517 ;; This function is called by:
 22518 ;;		_ExternalFlash_SectorRead
 22519 ;;		__find_nth_cluster
 22520 ;;		_fat_find_file
 22521 ;;		_fat_get_format_status
 22522 ;;		__get_available_cluster
 22523 ;;		__make_cluster_chain
 22524 ;; This function uses a non-reentrant model
 22525 ;;
 22526                           
 22527                           	psect	text104
 22528  006EC4                     __ptext104:
 22529                           	opt stack 0
 22530  006EC4                     _flash_sector_read:
 22531                           	opt stack 23
 22532                           
 22533                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 22534                           
 22535                           ;incstack = 0
 22536  006EC4  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 22537  006EC8  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 22538  006ECC  0E00               	movlw	0
 22539  006ECE  6E17               	movwf	__flash_partial_read@start+1,c
 22540  006ED0  0E00               	movlw	0
 22541  006ED2  6E16               	movwf	__flash_partial_read@start,c
 22542  006ED4  0E02               	movlw	2
 22543  006ED6  6E19               	movwf	__flash_partial_read@length+1,c
 22544  006ED8  0E00               	movlw	0
 22545  006EDA  6E18               	movwf	__flash_partial_read@length,c
 22546  006EDC  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 22547  006EE0  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 22548  006EE4  EC5D  F02E         	call	__flash_partial_read	;wreg free
 22549  006EE8  0012               	return		;funcret
 22550  006EEA                     __end_of_flash_sector_read:
 22551                           	opt stack 0
 22552                           tosu	equ	0xFFF
 22553                           tosh	equ	0xFFE
 22554                           tosl	equ	0xFFD
 22555                           pclath	equ	0xFFA
 22556                           tblptru	equ	0xFF8
 22557                           tblptrh	equ	0xFF7
 22558                           tblptrl	equ	0xFF6
 22559                           tablat	equ	0xFF5
 22560                           prodh	equ	0xFF4
 22561                           prodl	equ	0xFF3
 22562                           intcon	equ	0xFF2
 22563                           intcon2	equ	0xFF1
 22564                           intcon3	equ	0xFF0
 22565                           indf0	equ	0xFEF
 22566                           postinc0	equ	0xFEE
 22567                           fsr0h	equ	0xFEA
 22568                           fsr0l	equ	0xFE9
 22569                           wreg	equ	0xFE8
 22570                           indf1	equ	0xFE7
 22571                           postdec1	equ	0xFE5
 22572                           plusw1	equ	0xFE3
 22573                           fsr1h	equ	0xFE2
 22574                           fsr1l	equ	0xFE1
 22575                           indf2	equ	0xFDF
 22576                           postinc2	equ	0xFDE
 22577                           postdec2	equ	0xFDD
 22578                           plusw2	equ	0xFDB
 22579                           fsr2h	equ	0xFDA
 22580                           fsr2l	equ	0xFD9
 22581                           status	equ	0xFD8
 22582                           
 22583 ;; *************** function __flash_partial_read *****************
 22584 ;; Defined at:
 22585 ;;		line 309 in file "flash.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;  page            2   19[COMRAM] unsigned int 
 22588 ;;  start           2   21[COMRAM] unsigned int 
 22589 ;;  length          2   23[COMRAM] unsigned int 
 22590 ;;  data            2   25[COMRAM] PTR unsigned char 
 22591 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 22592 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 22593 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 22594 ;;		 -> msd_buffer(512), 
 22595 ;; Auto vars:     Size  Location     Type
 22596 ;;  command         4   31[COMRAM] unsigned char [4]
 22597 ;;  address         4   35[COMRAM] unsigned long 
 22598 ;; Return value:  Size  Location     Type
 22599 ;;                  1    wreg      void 
 22600 ;; Registers used:
 22601 ;;		wreg, status,2, status,0, cstack
 22602 ;; Tracked objects:
 22603 ;;		On entry : 0/0
 22604 ;;		On exit  : 0/0
 22605 ;;		Unchanged: 0/0
 22606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22608 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22610 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22611 ;;Total ram usage:       20 bytes
 22612 ;; Hardware stack levels used:    1
 22613 ;; Hardware stack levels required when called:    3
 22614 ;; This function calls:
 22615 ;;		__flash_is_busy
 22616 ;;		_spi_tx_rx
 22617 ;; This function is called by:
 22618 ;;		_flash_sector_read
 22619 ;;		_flash_partial_read
 22620 ;; This function uses a non-reentrant model
 22621 ;;
 22622                           
 22623                           	psect	text105
 22624  005CBA                     __ptext105:
 22625                           	opt stack 0
 22626  005CBA                     __flash_partial_read:
 22627                           	opt stack 23
 22628                           
 22629                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 22630                           
 22631                           ;incstack = 0
 22632  005CBA  ECBE  F037         	call	__flash_is_busy	;wreg free
 22633  005CBE  0900               	iorlw	0
 22634  005CC0  A4D8               	btfss	status,2,c
 22635  005CC2  D7FB               	goto	__flash_partial_read
 22636                           
 22637                           ;flash.c: 318: address = page;
 22638  005CC4  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 22639  005CC8  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 22640  005CCC  6A26               	clrf	__flash_partial_read@address+2,c
 22641  005CCE  6A27               	clrf	__flash_partial_read@address+3,c
 22642                           
 22643                           ;flash.c: 319: address <<= 9;
 22644  005CD0  0E09               	movlw	9
 22645  005CD2                     u7005:
 22646  005CD2  90D8               	bcf	status,0,c
 22647  005CD4  3624               	rlcf	__flash_partial_read@address,f,c
 22648  005CD6  3625               	rlcf	__flash_partial_read@address+1,f,c
 22649  005CD8  3626               	rlcf	__flash_partial_read@address+2,f,c
 22650  005CDA  3627               	rlcf	__flash_partial_read@address+3,f,c
 22651  005CDC  2EE8               	decfsz	wreg,f,c
 22652  005CDE  D7F9               	goto	u7005
 22653                           
 22654                           ;flash.c: 320: address |= start;
 22655  005CE0  5016               	movf	__flash_partial_read@start,w,c
 22656  005CE2  6E1C               	movwf	??__flash_partial_read& (0+255),c
 22657  005CE4  5017               	movf	__flash_partial_read@start+1,w,c
 22658  005CE6  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 22659  005CE8  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 22660  005CEA  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 22661  005CEC  501C               	movf	??__flash_partial_read,w,c
 22662  005CEE  1224               	iorwf	__flash_partial_read@address,f,c
 22663  005CF0  501D               	movf	??__flash_partial_read+1,w,c
 22664  005CF2  1225               	iorwf	__flash_partial_read@address+1,f,c
 22665  005CF4  501E               	movf	??__flash_partial_read+2,w,c
 22666  005CF6  1226               	iorwf	__flash_partial_read@address+2,f,c
 22667  005CF8  501F               	movf	??__flash_partial_read+3,w,c
 22668  005CFA  1227               	iorwf	__flash_partial_read@address+3,f,c
 22669                           
 22670                           ;flash.c: 323: command[0] = 0x03;
 22671  005CFC  0E03               	movlw	3
 22672  005CFE  6E20               	movwf	__flash_partial_read@command,c
 22673                           
 22674                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 22675  005D00  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 22676                           
 22677                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 22678  005D04  5025               	movf	__flash_partial_read@address+1,w,c
 22679  005D06  6E22               	movwf	__flash_partial_read@command+2,c
 22680                           
 22681                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 22682  005D08  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 22683                           
 22684                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 22685  005D0C  0E20               	movlw	low __flash_partial_read@command
 22686  005D0E  6E01               	movwf	spi_tx_rx@command,c
 22687  005D10  0E00               	movlw	high __flash_partial_read@command
 22688  005D12  6E02               	movwf	spi_tx_rx@command+1,c
 22689  005D14  0E00               	movlw	0
 22690  005D16  6E04               	movwf	spi_tx_rx@command_length+1,c
 22691  005D18  0E04               	movlw	4
 22692  005D1A  6E03               	movwf	spi_tx_rx@command_length,c
 22693  005D1C  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 22694  005D20  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 22695  005D24  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 22696  005D28  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 22697  005D2C  ECF2  F02B         	call	_spi_tx_rx	;wreg free
 22698  005D30  0012               	return		;funcret
 22699  005D32                     __end_of__flash_partial_read:
 22700                           	opt stack 0
 22701                           tosu	equ	0xFFF
 22702                           tosh	equ	0xFFE
 22703                           tosl	equ	0xFFD
 22704                           pclath	equ	0xFFA
 22705                           tblptru	equ	0xFF8
 22706                           tblptrh	equ	0xFF7
 22707                           tblptrl	equ	0xFF6
 22708                           tablat	equ	0xFF5
 22709                           prodh	equ	0xFF4
 22710                           prodl	equ	0xFF3
 22711                           intcon	equ	0xFF2
 22712                           intcon2	equ	0xFF1
 22713                           intcon3	equ	0xFF0
 22714                           indf0	equ	0xFEF
 22715                           postinc0	equ	0xFEE
 22716                           fsr0h	equ	0xFEA
 22717                           fsr0l	equ	0xFE9
 22718                           wreg	equ	0xFE8
 22719                           indf1	equ	0xFE7
 22720                           postdec1	equ	0xFE5
 22721                           plusw1	equ	0xFE3
 22722                           fsr1h	equ	0xFE2
 22723                           fsr1l	equ	0xFE1
 22724                           indf2	equ	0xFDF
 22725                           postinc2	equ	0xFDE
 22726                           postdec2	equ	0xFDD
 22727                           plusw2	equ	0xFDB
 22728                           fsr2h	equ	0xFDA
 22729                           fsr2l	equ	0xFD9
 22730                           status	equ	0xFD8
 22731                           
 22732 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 22733 ;; Defined at:
 22734 ;;		line 993 in file "usb_device_msd.c"
 22735 ;; Parameters:    Size  Location     Type
 22736 ;;  DiExpected      2    0[COMRAM] unsigned int 
 22737 ;; Auto vars:     Size  Location     Type
 22738 ;;		None
 22739 ;; Return value:  Size  Location     Type
 22740 ;;                  1    wreg      void 
 22741 ;; Registers used:
 22742 ;;		wreg, status,2, status,0
 22743 ;; Tracked objects:
 22744 ;;		On entry : 0/0
 22745 ;;		On exit  : 0/0
 22746 ;;		Unchanged: 0/0
 22747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22752 ;;Total ram usage:        6 bytes
 22753 ;; Hardware stack levels used:    1
 22754 ;; This function calls:
 22755 ;;		Nothing
 22756 ;; This function is called by:
 22757 ;;		_MSDProcessCommandMediaPresent
 22758 ;; This function uses a non-reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text106
 22762  0056B4                     __ptext106:
 22763                           	opt stack 0
 22764  0056B4                     _MSDComputeDeviceInAndResidue:
 22765                           	opt stack 26
 22766                           
 22767                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 22768                           
 22769                           ;incstack = 0
 22770  0056B4  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22771  0056B6  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22772  0056B8  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22773  0056BA  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22774  0056BC  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22775  0056BE  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22776  0056C0  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 22777  0056C2  0101               	movlb	1	; () banked
 22778  0056C4  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 22779  0056C6  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 22780  0056C8  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 22781  0056CA  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 22782  0056CC  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 22783  0056CE  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 22784  0056D0  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 22785  0056D2  B0D8               	btfsc	status,0,c
 22786  0056D4  D00E               	goto	l659
 22787                           
 22788                           ; BSR set to: 1
 22789                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 22790  0056D6  0E00               	movlw	0
 22791  0056D8  010D               	movlb	13	; () banked
 22792  0056DA  6F88               	movwf	136,b	;volatile
 22793  0056DC  0E00               	movlw	0
 22794  0056DE  6F89               	movwf	137,b	;volatile
 22795  0056E0  0E00               	movlw	0
 22796  0056E2  6F8A               	movwf	138,b	;volatile
 22797  0056E4  0E00               	movlw	0
 22798  0056E6  6F8B               	movwf	139,b	;volatile
 22799                           
 22800                           ; BSR set to: 13
 22801                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 22802  0056E8  C108  F08A         	movff	_gblCBW+8,_TransferLength
 22803  0056EC  C109  F08B         	movff	_gblCBW+9,_TransferLength+1
 22804                           
 22805                           ;usb_device_msd.c: 1002: }
 22806  0056F0  0012               	return	
 22807  0056F2                     l659:
 22808                           
 22809                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 22810                           
 22811                           ; BSR set to: 13
 22812  0056F2  0100               	movlb	0	; () banked
 22813  0056F4  518A               	movf	_TransferLength& (0+255),w,b
 22814  0056F6  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22815  0056F8  518B               	movf	(_TransferLength+1)& (0+255),w,b
 22816  0056FA  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22817  0056FC  B0D8               	btfsc	status,0,c
 22818  0056FE  D004               	goto	l661
 22819                           
 22820                           ; BSR set to: 0
 22821                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 22822  005700  C001  F08A         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 22823  005704  C002  F08B         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 22824  005708                     l661:
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 22828                           
 22829                           ; BSR set to: 0
 22830  005708  518A               	movf	_TransferLength& (0+255),w,b
 22831  00570A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22832  00570C  518B               	movf	(_TransferLength+1)& (0+255),w,b
 22833  00570E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22834  005710  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22835  005712  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22836  005714  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 22837  005716  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 22838  005718  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 22839  00571A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 22840  00571C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 22841  00571E  0E00               	movlw	0
 22842  005720  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 22843  005722  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 22844  005724  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 22845  005726  0101               	movlb	1	; () banked
 22846  005728  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22847  00572A  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 22848  00572C  010D               	movlb	13	; () banked
 22849  00572E  6F88               	movwf	136,b	;volatile
 22850  005730  0101               	movlb	1	; () banked
 22851  005732  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22852  005734  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 22853  005736  010D               	movlb	13	; () banked
 22854  005738  6F89               	movwf	137,b	;volatile
 22855  00573A  0101               	movlb	1	; () banked
 22856  00573C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22857  00573E  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 22858  005740  010D               	movlb	13	; () banked
 22859  005742  6F8A               	movwf	138,b	;volatile
 22860  005744  0101               	movlb	1	; () banked
 22861  005746  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22862  005748  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 22863  00574A  010D               	movlb	13	; () banked
 22864  00574C  6F8B               	movwf	139,b	;volatile
 22865  00574E  0012               	return	
 22866  005750                     __end_of_MSDComputeDeviceInAndResidue:
 22867                           	opt stack 0
 22868                           tosu	equ	0xFFF
 22869                           tosh	equ	0xFFE
 22870                           tosl	equ	0xFFD
 22871                           pclath	equ	0xFFA
 22872                           tblptru	equ	0xFF8
 22873                           tblptrh	equ	0xFF7
 22874                           tblptrl	equ	0xFF6
 22875                           tablat	equ	0xFF5
 22876                           prodh	equ	0xFF4
 22877                           prodl	equ	0xFF3
 22878                           intcon	equ	0xFF2
 22879                           intcon2	equ	0xFF1
 22880                           intcon3	equ	0xFF0
 22881                           indf0	equ	0xFEF
 22882                           postinc0	equ	0xFEE
 22883                           fsr0h	equ	0xFEA
 22884                           fsr0l	equ	0xFE9
 22885                           wreg	equ	0xFE8
 22886                           indf1	equ	0xFE7
 22887                           postdec1	equ	0xFE5
 22888                           plusw1	equ	0xFE3
 22889                           fsr1h	equ	0xFE2
 22890                           fsr1l	equ	0xFE1
 22891                           indf2	equ	0xFDF
 22892                           postinc2	equ	0xFDE
 22893                           postdec2	equ	0xFDD
 22894                           plusw2	equ	0xFDB
 22895                           fsr2h	equ	0xFDA
 22896                           fsr2l	equ	0xFD9
 22897                           status	equ	0xFD8
 22898                           
 22899 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 22900 ;; Defined at:
 22901 ;;		line 18 in file "external_flash.c"
 22902 ;; Parameters:    Size  Location     Type
 22903 ;;  config          2    0[COMRAM] PTR void 
 22904 ;;		 -> NULL(0), 
 22905 ;; Auto vars:     Size  Location     Type
 22906 ;;		None
 22907 ;; Return value:  Size  Location     Type
 22908 ;;                  2    0[COMRAM] unsigned int 
 22909 ;; Registers used:
 22910 ;;		wreg, status,2
 22911 ;; Tracked objects:
 22912 ;;		On entry : 0/0
 22913 ;;		On exit  : 0/0
 22914 ;;		Unchanged: 0/0
 22915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22920 ;;Total ram usage:        2 bytes
 22921 ;; Hardware stack levels used:    1
 22922 ;; This function calls:
 22923 ;;		Nothing
 22924 ;; This function is called by:
 22925 ;;		_MSDProcessCommandMediaPresent
 22926 ;; This function uses a non-reentrant model
 22927 ;;
 22928                           
 22929                           	psect	text107
 22930  0071C6                     __ptext107:
 22931                           	opt stack 0
 22932  0071C6                     _ExternalFlash_SectorSizeRead:
 22933                           	opt stack 26
 22934                           
 22935                           ;external_flash.c: 20: return 512;
 22936                           
 22937                           ; BSR set to: 13
 22938                           ;incstack = 0
 22939  0071C6  0E02               	movlw	2
 22940  0071C8  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 22941  0071CA  0E00               	movlw	0
 22942  0071CC  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 22943  0071CE  0012               	return	
 22944  0071D0                     __end_of_ExternalFlash_SectorSizeRead:
 22945                           	opt stack 0
 22946                           tosu	equ	0xFFF
 22947                           tosh	equ	0xFFE
 22948                           tosl	equ	0xFFD
 22949                           pclath	equ	0xFFA
 22950                           tblptru	equ	0xFF8
 22951                           tblptrh	equ	0xFF7
 22952                           tblptrl	equ	0xFF6
 22953                           tablat	equ	0xFF5
 22954                           prodh	equ	0xFF4
 22955                           prodl	equ	0xFF3
 22956                           intcon	equ	0xFF2
 22957                           intcon2	equ	0xFF1
 22958                           intcon3	equ	0xFF0
 22959                           indf0	equ	0xFEF
 22960                           postinc0	equ	0xFEE
 22961                           fsr0h	equ	0xFEA
 22962                           fsr0l	equ	0xFE9
 22963                           wreg	equ	0xFE8
 22964                           indf1	equ	0xFE7
 22965                           postdec1	equ	0xFE5
 22966                           plusw1	equ	0xFE3
 22967                           fsr1h	equ	0xFE2
 22968                           fsr1l	equ	0xFE1
 22969                           indf2	equ	0xFDF
 22970                           postinc2	equ	0xFDE
 22971                           postdec2	equ	0xFDD
 22972                           plusw2	equ	0xFDB
 22973                           fsr2h	equ	0xFDA
 22974                           fsr2l	equ	0xFD9
 22975                           status	equ	0xFD8
 22976                           
 22977 ;; *************** function _ExternalFlash_CapacityRead *****************
 22978 ;; Defined at:
 22979 ;;		line 23 in file "external_flash.c"
 22980 ;; Parameters:    Size  Location     Type
 22981 ;;  config          2    0[COMRAM] PTR void 
 22982 ;;		 -> NULL(0), 
 22983 ;; Auto vars:     Size  Location     Type
 22984 ;;		None
 22985 ;; Return value:  Size  Location     Type
 22986 ;;                  4    0[COMRAM] unsigned long 
 22987 ;; Registers used:
 22988 ;;		wreg, status,2
 22989 ;; Tracked objects:
 22990 ;;		On entry : 0/0
 22991 ;;		On exit  : 0/0
 22992 ;;		Unchanged: 0/0
 22993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22997 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22998 ;;Total ram usage:        4 bytes
 22999 ;; Hardware stack levels used:    1
 23000 ;; This function calls:
 23001 ;;		Nothing
 23002 ;; This function is called by:
 23003 ;;		_MSDProcessCommandMediaPresent
 23004 ;; This function uses a non-reentrant model
 23005 ;;
 23006                           
 23007                           	psect	text108
 23008  00712E                     __ptext108:
 23009                           	opt stack 0
 23010  00712E                     _ExternalFlash_CapacityRead:
 23011                           	opt stack 26
 23012                           
 23013                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23014                           
 23015                           ;incstack = 0
 23016  00712E  0EFF               	movlw	255
 23017  007130  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23018  007132  0E1F               	movlw	31
 23019  007134  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23020  007136  0E00               	movlw	0
 23021  007138  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23022  00713A  0E00               	movlw	0
 23023  00713C  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23024  00713E  0012               	return	
 23025  007140                     __end_of_ExternalFlash_CapacityRead:
 23026                           	opt stack 0
 23027                           tosu	equ	0xFFF
 23028                           tosh	equ	0xFFE
 23029                           tosl	equ	0xFFD
 23030                           pclath	equ	0xFFA
 23031                           tblptru	equ	0xFF8
 23032                           tblptrh	equ	0xFF7
 23033                           tblptrl	equ	0xFF6
 23034                           tablat	equ	0xFF5
 23035                           prodh	equ	0xFF4
 23036                           prodl	equ	0xFF3
 23037                           intcon	equ	0xFF2
 23038                           intcon2	equ	0xFF1
 23039                           intcon3	equ	0xFF0
 23040                           indf0	equ	0xFEF
 23041                           postinc0	equ	0xFEE
 23042                           fsr0h	equ	0xFEA
 23043                           fsr0l	equ	0xFE9
 23044                           wreg	equ	0xFE8
 23045                           indf1	equ	0xFE7
 23046                           postdec1	equ	0xFE5
 23047                           plusw1	equ	0xFE3
 23048                           fsr1h	equ	0xFE2
 23049                           fsr1l	equ	0xFE1
 23050                           indf2	equ	0xFDF
 23051                           postinc2	equ	0xFDE
 23052                           postdec2	equ	0xFDD
 23053                           plusw2	equ	0xFDB
 23054                           fsr2h	equ	0xFDA
 23055                           fsr2l	equ	0xFD9
 23056                           status	equ	0xFD8
 23057                           
 23058 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23059 ;; Defined at:
 23060 ;;		line 10 in file "external_flash.c"
 23061 ;; Parameters:    Size  Location     Type
 23062 ;;  config          2    0[COMRAM] PTR void 
 23063 ;;		 -> NULL(0), 
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;		None
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  2    0[COMRAM] PTR struct .
 23068 ;; Registers used:
 23069 ;;		wreg, status,2, status,0
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/0
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23079 ;;Total ram usage:        2 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; This function calls:
 23082 ;;		Nothing
 23083 ;; This function is called by:
 23084 ;;		_USBMSDInit
 23085 ;;		_MSDProcessCommand
 23086 ;; This function uses a non-reentrant model
 23087 ;;
 23088                           
 23089                           	psect	text109
 23090  00706C                     __ptext109:
 23091                           	opt stack 0
 23092  00706C                     _ExternalFlash_MediaInitialize:
 23093                           	opt stack 26
 23094                           
 23095                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23096                           
 23097                           ;incstack = 0
 23098  00706C  0101               	movlb	1	; () banked
 23099  00706E  81DE               	bsf	(_mediaInformation+1)& (0+255),0,b
 23100                           
 23101                           ; BSR set to: 1
 23102                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23103  007070  0E02               	movlw	2
 23104  007072  6FE0               	movwf	(_mediaInformation+3)& (0+255),b
 23105  007074  0E00               	movlw	0
 23106  007076  6FDF               	movwf	(_mediaInformation+2)& (0+255),b
 23107                           
 23108                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23109  007078  0E00               	movlw	0
 23110  00707A  6FDD               	movwf	_mediaInformation& (0+255),b
 23111                           
 23112                           ; BSR set to: 1
 23113                           ;external_flash.c: 15: return &mediaInformation;
 23114  00707C  0EDD               	movlw	low _mediaInformation
 23115  00707E  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23116  007080  0E01               	movlw	high _mediaInformation
 23117  007082  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23118  007084  0012               	return	
 23119  007086                     __end_of_ExternalFlash_MediaInitialize:
 23120                           	opt stack 0
 23121                           tosu	equ	0xFFF
 23122                           tosh	equ	0xFFE
 23123                           tosl	equ	0xFFD
 23124                           pclath	equ	0xFFA
 23125                           tblptru	equ	0xFF8
 23126                           tblptrh	equ	0xFF7
 23127                           tblptrl	equ	0xFF6
 23128                           tablat	equ	0xFF5
 23129                           prodh	equ	0xFF4
 23130                           prodl	equ	0xFF3
 23131                           intcon	equ	0xFF2
 23132                           intcon2	equ	0xFF1
 23133                           intcon3	equ	0xFF0
 23134                           indf0	equ	0xFEF
 23135                           postinc0	equ	0xFEE
 23136                           fsr0h	equ	0xFEA
 23137                           fsr0l	equ	0xFE9
 23138                           wreg	equ	0xFE8
 23139                           indf1	equ	0xFE7
 23140                           postdec1	equ	0xFE5
 23141                           plusw1	equ	0xFE3
 23142                           fsr1h	equ	0xFE2
 23143                           fsr1l	equ	0xFE1
 23144                           indf2	equ	0xFDF
 23145                           postinc2	equ	0xFDE
 23146                           postdec2	equ	0xFDD
 23147                           plusw2	equ	0xFDB
 23148                           fsr2h	equ	0xFDA
 23149                           fsr2l	equ	0xFD9
 23150                           status	equ	0xFD8
 23151                           
 23152 ;; *************** function _ExternalFlash_MediaDetect *****************
 23153 ;; Defined at:
 23154 ;;		line 29 in file "external_flash.c"
 23155 ;; Parameters:    Size  Location     Type
 23156 ;;  config          2    0[COMRAM] PTR void 
 23157 ;;		 -> NULL(0), 
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;		None
 23160 ;; Return value:  Size  Location     Type
 23161 ;;                  1    wreg      unsigned char 
 23162 ;; Registers used:
 23163 ;;		wreg
 23164 ;; Tracked objects:
 23165 ;;		On entry : 0/0
 23166 ;;		On exit  : 0/0
 23167 ;;		Unchanged: 0/0
 23168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;Total ram usage:        2 bytes
 23174 ;; Hardware stack levels used:    1
 23175 ;; This function calls:
 23176 ;;		Nothing
 23177 ;; This function is called by:
 23178 ;;		_USBMSDInit
 23179 ;;		_MSDProcessCommand
 23180 ;; This function uses a non-reentrant model
 23181 ;;
 23182                           
 23183                           	psect	text110
 23184  007254                     __ptext110:
 23185                           	opt stack 0
 23186  007254                     _ExternalFlash_MediaDetect:
 23187                           	opt stack 26
 23188                           
 23189                           ;external_flash.c: 31: return 1;
 23190                           
 23191                           ; BSR set to: 1
 23192                           ;incstack = 0
 23193  007254  0E01               	movlw	1
 23194  007256  0012               	return	
 23195  007258                     __end_of_ExternalFlash_MediaDetect:
 23196                           	opt stack 0
 23197                           tosu	equ	0xFFF
 23198                           tosh	equ	0xFFE
 23199                           tosl	equ	0xFFD
 23200                           pclath	equ	0xFFA
 23201                           tblptru	equ	0xFF8
 23202                           tblptrh	equ	0xFF7
 23203                           tblptrl	equ	0xFF6
 23204                           tablat	equ	0xFF5
 23205                           prodh	equ	0xFF4
 23206                           prodl	equ	0xFF3
 23207                           intcon	equ	0xFF2
 23208                           intcon2	equ	0xFF1
 23209                           intcon3	equ	0xFF0
 23210                           indf0	equ	0xFEF
 23211                           postinc0	equ	0xFEE
 23212                           fsr0h	equ	0xFEA
 23213                           fsr0l	equ	0xFE9
 23214                           wreg	equ	0xFE8
 23215                           indf1	equ	0xFE7
 23216                           postdec1	equ	0xFE5
 23217                           plusw1	equ	0xFE3
 23218                           fsr1h	equ	0xFE2
 23219                           fsr1l	equ	0xFE1
 23220                           indf2	equ	0xFDF
 23221                           postinc2	equ	0xFDE
 23222                           postdec2	equ	0xFDD
 23223                           plusw2	equ	0xFDB
 23224                           fsr2h	equ	0xFDA
 23225                           fsr2l	equ	0xFD9
 23226                           status	equ	0xFD8
 23227                           
 23228 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23229 ;; Defined at:
 23230 ;;		line 73 in file "app_device_custom_hid.c"
 23231 ;; Parameters:    Size  Location     Type
 23232 ;;		None
 23233 ;; Auto vars:     Size  Location     Type
 23234 ;;  idx             1    0        unsigned char 
 23235 ;; Return value:  Size  Location     Type
 23236 ;;                  1    wreg      void 
 23237 ;; Registers used:
 23238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23239 ;; Tracked objects:
 23240 ;;		On entry : 0/0
 23241 ;;		On exit  : 0/0
 23242 ;;		Unchanged: 0/0
 23243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23248 ;;Total ram usage:        0 bytes
 23249 ;; Hardware stack levels used:    1
 23250 ;; Hardware stack levels required when called:    9
 23251 ;; This function calls:
 23252 ;;		_USBTransferOnePacket
 23253 ;;		_api_parse
 23254 ;;		_api_prepare
 23255 ;; This function is called by:
 23256 ;;		_main
 23257 ;; This function uses a non-reentrant model
 23258 ;;
 23259                           
 23260                           	psect	text111
 23261  0054D8                     __ptext111:
 23262                           	opt stack 0
 23263  0054D8                     _APP_DeviceCustomHIDTasks:
 23264                           	opt stack 21
 23265                           
 23266                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23267                           
 23268                           ;incstack = 0
 23269  0054D8  0E20               	movlw	32
 23270  0054DA  605F               	cpfslt	_USBDeviceState,c
 23271  0054DC  D001               	goto	l932
 23272  0054DE  0012               	return	
 23273  0054E0                     l932:
 23274                           
 23275                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 23276  0054E0  B265               	btfsc	3941,1,c	;volatile
 23277  0054E2  0012               	return	
 23278                           
 23279                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23280                           
 23281                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 23282  0054E4  0101               	movlb	1	; () banked
 23283  0054E6  516B               	movf	_USBOutHandle& (0+255),w,b
 23284  0054E8  116C               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 23285  0054EA  B4D8               	btfsc	status,2,c
 23286  0054EC  D006               	goto	u11970
 23287                           
 23288                           ; BSR set to: 1
 23289  0054EE  C16B  FFD9         	movff	_USBOutHandle,fsr2l
 23290  0054F2  C16C  FFDA         	movff	_USBOutHandle+1,fsr2h
 23291  0054F6  BEDF               	btfsc	indf2,7,c
 23292  0054F8  0012               	return	
 23293  0054FA                     u11970:
 23294                           
 23295                           ; BSR set to: 1
 23296                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 23297                           
 23298                           ; BSR set to: 1
 23299  0054FA  5169               	movf	_USBInHandle& (0+255),w,b
 23300  0054FC  116A               	iorwf	(_USBInHandle+1)& (0+255),w,b
 23301  0054FE  B4D8               	btfsc	status,2,c
 23302  005500  D006               	goto	u11990
 23303                           
 23304                           ; BSR set to: 1
 23305  005502  C169  FFD9         	movff	_USBInHandle,fsr2l
 23306  005506  C16A  FFDA         	movff	_USBInHandle+1,fsr2h
 23307  00550A  BEDF               	btfsc	indf2,7,c
 23308  00550C  D019               	goto	l938
 23309  00550E                     u11990:
 23310                           
 23311                           ; BSR set to: 1
 23312                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 23313                           
 23314                           ; BSR set to: 1
 23315  00550E  0E40               	movlw	low _ReceivedDataBuffer
 23316  005510  6E17               	movwf	api_prepare@inBuffer,c
 23317  005512  0E02               	movlw	high _ReceivedDataBuffer
 23318  005514  6E18               	movwf	api_prepare@inBuffer+1,c
 23319  005516  0E00               	movlw	low _ToSendDataBuffer
 23320  005518  6E19               	movwf	api_prepare@outBuffer,c
 23321  00551A  0E02               	movlw	high _ToSendDataBuffer
 23322  00551C  6E1A               	movwf	api_prepare@outBuffer+1,c
 23323  00551E  EC66  F023         	call	_api_prepare	;wreg free
 23324                           
 23325                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 23326  005522  0E01               	movlw	1
 23327  005524  6E01               	movwf	USBTransferOnePacket@dir,c
 23328  005526  0E00               	movlw	low _ToSendDataBuffer
 23329  005528  6E02               	movwf	USBTransferOnePacket@data,c
 23330  00552A  0E02               	movlw	high _ToSendDataBuffer
 23331  00552C  6E03               	movwf	USBTransferOnePacket@data+1,c
 23332  00552E  0E40               	movlw	64
 23333  005530  6E04               	movwf	USBTransferOnePacket@len,c
 23334  005532  0E01               	movlw	1
 23335  005534  ECC4  F01E         	call	_USBTransferOnePacket
 23336  005538  C001  F169         	movff	?_USBTransferOnePacket,_USBInHandle
 23337  00553C  C002  F16A         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 23338  005540                     l938:
 23339                           
 23340                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 23341  005540  0E40               	movlw	low _ReceivedDataBuffer
 23342  005542  6E36               	movwf	api_parse@inBuffer,c
 23343  005544  0E02               	movlw	high _ReceivedDataBuffer
 23344  005546  6E37               	movwf	api_parse@inBuffer+1,c
 23345  005548  0E40               	movlw	64
 23346  00554A  6E38               	movwf	api_parse@receivedDataLength,c
 23347  00554C  0E00               	movlw	low _ToSendDataBuffer
 23348  00554E  6E39               	movwf	api_parse@outBuffer,c
 23349  005550  0E02               	movlw	high _ToSendDataBuffer
 23350  005552  6E3A               	movwf	api_parse@outBuffer+1,c
 23351  005554  EC93  F01B         	call	_api_parse	;wreg free
 23352                           
 23353                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 23354  005558  0E00               	movlw	0
 23355  00555A  6E01               	movwf	USBTransferOnePacket@dir,c
 23356  00555C  0E40               	movlw	low _ReceivedDataBuffer
 23357  00555E  6E02               	movwf	USBTransferOnePacket@data,c
 23358  005560  0E02               	movlw	high _ReceivedDataBuffer
 23359  005562  6E03               	movwf	USBTransferOnePacket@data+1,c
 23360  005564  0E40               	movlw	64
 23361  005566  6E04               	movwf	USBTransferOnePacket@len,c
 23362  005568  0E01               	movlw	1
 23363  00556A  ECC4  F01E         	call	_USBTransferOnePacket
 23364  00556E  C001  F16B         	movff	?_USBTransferOnePacket,_USBOutHandle
 23365  005572  C002  F16C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 23366  005576  0012               	return	
 23367  005578                     __end_of_APP_DeviceCustomHIDTasks:
 23368                           	opt stack 0
 23369                           tosu	equ	0xFFF
 23370                           tosh	equ	0xFFE
 23371                           tosl	equ	0xFFD
 23372                           pclath	equ	0xFFA
 23373                           tblptru	equ	0xFF8
 23374                           tblptrh	equ	0xFF7
 23375                           tblptrl	equ	0xFF6
 23376                           tablat	equ	0xFF5
 23377                           prodh	equ	0xFF4
 23378                           prodl	equ	0xFF3
 23379                           intcon	equ	0xFF2
 23380                           intcon2	equ	0xFF1
 23381                           intcon3	equ	0xFF0
 23382                           indf0	equ	0xFEF
 23383                           postinc0	equ	0xFEE
 23384                           fsr0h	equ	0xFEA
 23385                           fsr0l	equ	0xFE9
 23386                           wreg	equ	0xFE8
 23387                           indf1	equ	0xFE7
 23388                           postdec1	equ	0xFE5
 23389                           plusw1	equ	0xFE3
 23390                           fsr1h	equ	0xFE2
 23391                           fsr1l	equ	0xFE1
 23392                           indf2	equ	0xFDF
 23393                           postinc2	equ	0xFDE
 23394                           postdec2	equ	0xFDD
 23395                           plusw2	equ	0xFDB
 23396                           fsr2h	equ	0xFDA
 23397                           fsr2l	equ	0xFD9
 23398                           status	equ	0xFD8
 23399                           
 23400 ;; *************** function _api_prepare *****************
 23401 ;; Defined at:
 23402 ;;		line 35 in file "api.c"
 23403 ;; Parameters:    Size  Location     Type
 23404 ;;  inBuffer        2   22[COMRAM] PTR unsigned char 
 23405 ;;		 -> ReceivedDataBuffer(64), 
 23406 ;;  outBuffer       2   24[COMRAM] PTR unsigned char 
 23407 ;;		 -> ToSendDataBuffer(64), 
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;  command         1   26[COMRAM] enum E6715
 23410 ;; Return value:  Size  Location     Type
 23411 ;;                  1    wreg      void 
 23412 ;; Registers used:
 23413 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23414 ;; Tracked objects:
 23415 ;;		On entry : 0/0
 23416 ;;		On exit  : 0/0
 23417 ;;		Unchanged: 0/0
 23418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23422 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23423 ;;Total ram usage:        5 bytes
 23424 ;; Hardware stack levels used:    1
 23425 ;; Hardware stack levels required when called:    5
 23426 ;; This function calls:
 23427 ;;		__fill_buffer_get_bootloader_details
 23428 ;;		__fill_buffer_get_display
 23429 ;;		__fill_buffer_get_status
 23430 ;;		_memcpy
 23431 ;; This function is called by:
 23432 ;;		_APP_DeviceCustomHIDTasks
 23433 ;; This function uses a non-reentrant model
 23434 ;;
 23435                           
 23436                           	psect	text112
 23437  0046CC                     __ptext112:
 23438                           	opt stack 0
 23439  0046CC                     _api_prepare:
 23440                           	opt stack 24
 23441                           
 23442                           ;api.c: 37: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 23443                           
 23444                           ;incstack = 0
 23445  0046CC  C017  FFD9         	movff	api_prepare@inBuffer,fsr2l
 23446  0046D0  C018  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 23447  0046D4  50DF               	movf	indf2,w,c
 23448  0046D6  6E1B               	movwf	api_prepare@command,c
 23449                           
 23450                           ;api.c: 39: if(command>0x7F)
 23451  0046D8  0E7F               	movlw	127
 23452  0046DA  641B               	cpfsgt	api_prepare@command,c
 23453  0046DC  D052               	goto	l2649
 23454                           
 23455                           ;api.c: 46: outBuffer[0] = 0x99;
 23456                           
 23457                           ;api.c: 42: {;api.c: 45: default:
 23458                           
 23459                           ;api.c: 40: {;api.c: 41: switch(command)
 23460  0046DE  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 23461  0046E2  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 23462  0046E6  0E99               	movlw	153
 23463  0046E8  6EDF               	movwf	indf2,c
 23464                           
 23465                           ;api.c: 47: outBuffer[1] = 0x99;
 23466  0046EA  EE20 F001          	lfsr	2,1
 23467  0046EE  5019               	movf	api_prepare@outBuffer,w,c
 23468  0046F0  26D9               	addwf	fsr2l,f,c
 23469  0046F2  501A               	movf	api_prepare@outBuffer+1,w,c
 23470  0046F4  22DA               	addwfc	fsr2h,f,c
 23471  0046F6  0E99               	movlw	153
 23472  0046F8  6EDF               	movwf	indf2,c
 23473                           
 23474                           ;api.c: 48: }
 23475  0046FA  0012               	return	
 23476  0046FC                     
 23477                           ;api.c: 61: _fill_buffer_get_status(outBuffer);
 23478  0046FC  C019  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23479  004700  C01A  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23480  004704  EC15  F022         	call	__fill_buffer_get_status	;wreg free
 23481                           
 23482                           ;api.c: 62: break;
 23483  004708  0012               	return	
 23484  00470A                     
 23485                           ;api.c: 66: _fill_buffer_get_display(outBuffer, 0);
 23486  00470A  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23487  00470E  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23488  004712  0E00               	movlw	0
 23489  004714  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23490  004716  EC73  F027         	call	__fill_buffer_get_display	;wreg free
 23491                           
 23492                           ;api.c: 67: break;
 23493  00471A  0012               	return	
 23494  00471C                     
 23495                           ;api.c: 71: _fill_buffer_get_display(outBuffer, 1);
 23496  00471C  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23497  004720  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23498  004724  0E01               	movlw	1
 23499  004726  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23500  004728  EC73  F027         	call	__fill_buffer_get_display	;wreg free
 23501                           
 23502                           ;api.c: 72: break;
 23503  00472C  0012               	return	
 23504  00472E                     
 23505                           ;api.c: 76: _fill_buffer_get_bootloader_details(outBuffer);
 23506  00472E  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 23507  004732  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 23508  004736  EC1E  F010         	call	__fill_buffer_get_bootloader_details	;wreg free
 23509                           
 23510                           ;api.c: 77: break;
 23511  00473A  0012               	return	
 23512  00473C                     
 23513                           ;api.c: 81: memcpy(outBuffer, inBuffer, 64);
 23514  00473C  C019  F001         	movff	api_prepare@outBuffer,memcpy@d1
 23515  004740  C01A  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 23516  004744  C017  F003         	movff	api_prepare@inBuffer,memcpy@s1
 23517  004748  C018  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 23518  00474C  5003               	movf	memcpy@s1,w,c
 23519  00474E  1004               	iorwf	memcpy@s1+1,w,c
 23520  004750  A4D8               	btfss	status,2,c
 23521  004752  0E20               	movlw	32
 23522  004754  6E05               	movwf	memcpy@s1+2,c
 23523  004756  0E00               	movlw	0
 23524  004758  6E07               	movwf	memcpy@n+1,c
 23525  00475A  0E40               	movlw	64
 23526  00475C  6E06               	movwf	memcpy@n,c
 23527  00475E  EC1C  F030         	call	_memcpy	;wreg free
 23528                           
 23529                           ;api.c: 82: break;
 23530  004762  0012               	return	
 23531  004764                     
 23532                           ;api.c: 85: outBuffer[0] = 0x99;
 23533  004764  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 23534  004768  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 23535  00476C  0E99               	movlw	153
 23536  00476E  6EDF               	movwf	indf2,c
 23537                           
 23538                           ;api.c: 86: outBuffer[1] = 0x99;
 23539  004770  EE20 F001          	lfsr	2,1
 23540  004774  5019               	movf	api_prepare@outBuffer,w,c
 23541  004776  26D9               	addwf	fsr2l,f,c
 23542  004778  501A               	movf	api_prepare@outBuffer+1,w,c
 23543  00477A  22DA               	addwfc	fsr2h,f,c
 23544  00477C  0E99               	movlw	153
 23545  00477E  6EDF               	movwf	indf2,c
 23546                           
 23547                           ;api.c: 87: }
 23548  004780  0012               	return	
 23549  004782                     l2649:
 23550  004782  501B               	movf	api_prepare@command,w,c
 23551                           
 23552                           ; Switch size 1, requested type "space"
 23553                           ; Number of cases is 6, Range of values is 0 to 32
 23554                           ; switch strategies available:
 23555                           ; Name         Instructions Cycles
 23556                           ; simple_byte           19    10 (average)
 23557                           ;	Chosen strategy is simple_byte
 23558  004784  0A00               	xorlw	0	; case 0
 23559  004786  B4D8               	btfsc	status,2,c
 23560  004788  0012               	return	
 23561  00478A  0A10               	xorlw	16	; case 16
 23562  00478C  B4D8               	btfsc	status,2,c
 23563  00478E  D7B6               	goto	l2652
 23564  004790  0A01               	xorlw	1	; case 17
 23565  004792  B4D8               	btfsc	status,2,c
 23566  004794  D7BA               	goto	l2653
 23567  004796  0A03               	xorlw	3	; case 18
 23568  004798  B4D8               	btfsc	status,2,c
 23569  00479A  D7C0               	goto	l2654
 23570  00479C  0A01               	xorlw	1	; case 19
 23571  00479E  B4D8               	btfsc	status,2,c
 23572  0047A0  D7C6               	goto	l2655
 23573  0047A2  0A33               	xorlw	51	; case 32
 23574  0047A4  B4D8               	btfsc	status,2,c
 23575  0047A6  D7CA               	goto	l2656
 23576  0047A8  D7DD               	goto	l2657
 23577  0047AA                     __end_of_api_prepare:
 23578                           	opt stack 0
 23579                           tosu	equ	0xFFF
 23580                           tosh	equ	0xFFE
 23581                           tosl	equ	0xFFD
 23582                           pclath	equ	0xFFA
 23583                           tblptru	equ	0xFF8
 23584                           tblptrh	equ	0xFF7
 23585                           tblptrl	equ	0xFF6
 23586                           tablat	equ	0xFF5
 23587                           prodh	equ	0xFF4
 23588                           prodl	equ	0xFF3
 23589                           intcon	equ	0xFF2
 23590                           intcon2	equ	0xFF1
 23591                           intcon3	equ	0xFF0
 23592                           indf0	equ	0xFEF
 23593                           postinc0	equ	0xFEE
 23594                           fsr0h	equ	0xFEA
 23595                           fsr0l	equ	0xFE9
 23596                           wreg	equ	0xFE8
 23597                           indf1	equ	0xFE7
 23598                           postdec1	equ	0xFE5
 23599                           plusw1	equ	0xFE3
 23600                           fsr1h	equ	0xFE2
 23601                           fsr1l	equ	0xFE1
 23602                           indf2	equ	0xFDF
 23603                           postinc2	equ	0xFDE
 23604                           postdec2	equ	0xFDD
 23605                           plusw2	equ	0xFDB
 23606                           fsr2h	equ	0xFDA
 23607                           fsr2l	equ	0xFD9
 23608                           status	equ	0xFD8
 23609                           
 23610 ;; *************** function _memcpy *****************
 23611 ;; Defined at:
 23612 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 23613 ;; Parameters:    Size  Location     Type
 23614 ;;  d1              2    0[COMRAM] PTR void 
 23615 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 23616 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 23617 ;;  s1              3    2[COMRAM] PTR const void 
 23618 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 23619 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 23620 ;;  n               2    5[COMRAM] unsigned int 
 23621 ;; Auto vars:     Size  Location     Type
 23622 ;;  s               3    7[COMRAM] PTR const unsigned char 
 23623 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 23624 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 23625 ;;  d               2   10[COMRAM] PTR unsigned char 
 23626 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 23627 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 23628 ;;  tmp             1   12[COMRAM] unsigned char 
 23629 ;; Return value:  Size  Location     Type
 23630 ;;                  2    0[COMRAM] PTR void 
 23631 ;; Registers used:
 23632 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23633 ;; Tracked objects:
 23634 ;;		On entry : 0/0
 23635 ;;		On exit  : 0/0
 23636 ;;		Unchanged: 0/0
 23637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23638 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23639 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23641 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23642 ;;Total ram usage:       13 bytes
 23643 ;; Hardware stack levels used:    1
 23644 ;; This function calls:
 23645 ;;		Nothing
 23646 ;; This function is called by:
 23647 ;;		_USBCtrlEPService
 23648 ;;		_MSDProcessCommandMediaPresent
 23649 ;;		__flash_set_page_size
 23650 ;;		_internalFlash_read
 23651 ;;		_api_prepare
 23652 ;;		_fat_create_file
 23653 ;; This function uses a non-reentrant model
 23654 ;;
 23655                           
 23656                           	psect	text113
 23657  006038                     __ptext113:
 23658                           	opt stack 0
 23659  006038                     _memcpy:
 23660                           	opt stack 27
 23661                           
 23662                           ;incstack = 0
 23663  006038  C003  F008         	movff	memcpy@s1,memcpy@s
 23664  00603C  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 23665  006040  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 23666  006044  C001  F00B         	movff	memcpy@d1,memcpy@d
 23667  006048  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 23668  00604C  D01F               	goto	l3491
 23669  00604E                     l10545:
 23670  00604E  C008  FFF6         	movff	memcpy@s,tblptrl
 23671  006052  C009  FFF7         	movff	memcpy@s+1,tblptrh
 23672  006056  C00A  FFF8         	movff	memcpy@s+2,tblptru
 23673  00605A  BAF8               	btfsc	tblptru,5,c
 23674  00605C  D003               	bra	u7887
 23675  00605E  0008               	tblrd		*
 23676  006060  50F5               	movf	tablat,w,c
 23677  006062  D005               	bra	u7880
 23678  006064                     u7887:
 23679  006064  CFF6 FFE9          	movff	tblptrl,fsr0l
 23680  006068  CFF7 FFEA          	movff	tblptrh,fsr0h
 23681  00606C  50EF               	movf	indf0,w,c
 23682  00606E                     u7880:
 23683  00606E  6E0D               	movwf	memcpy@tmp,c
 23684  006070  0E01               	movlw	1
 23685  006072  2608               	addwf	memcpy@s,f,c
 23686  006074  0E00               	movlw	0
 23687  006076  2209               	addwfc	memcpy@s+1,f,c
 23688  006078  0E00               	movlw	0
 23689  00607A  220A               	addwfc	memcpy@s+2,f,c
 23690  00607C  C00B  FFD9         	movff	memcpy@d,fsr2l
 23691  006080  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 23692  006084  C00D  FFDF         	movff	memcpy@tmp,indf2
 23693  006088  4A0B               	infsnz	memcpy@d,f,c
 23694  00608A  2A0C               	incf	memcpy@d+1,f,c
 23695  00608C                     l3491:
 23696  00608C  0606               	decf	memcpy@n,f,c
 23697  00608E  A0D8               	btfss	status,0,c
 23698  006090  0607               	decf	memcpy@n+1,f,c
 23699  006092  2806               	incf	memcpy@n,w,c
 23700  006094  E1DC               	bnz	l10545
 23701  006096  2807               	incf	memcpy@n+1,w,c
 23702  006098  B4D8               	btfsc	status,2,c
 23703  00609A  0012               	return	
 23704  00609C  D7D8               	goto	l3492
 23705  00609E                     __end_of_memcpy:
 23706                           	opt stack 0
 23707                           tosu	equ	0xFFF
 23708                           tosh	equ	0xFFE
 23709                           tosl	equ	0xFFD
 23710                           pclath	equ	0xFFA
 23711                           tblptru	equ	0xFF8
 23712                           tblptrh	equ	0xFF7
 23713                           tblptrl	equ	0xFF6
 23714                           tablat	equ	0xFF5
 23715                           prodh	equ	0xFF4
 23716                           prodl	equ	0xFF3
 23717                           intcon	equ	0xFF2
 23718                           intcon2	equ	0xFF1
 23719                           intcon3	equ	0xFF0
 23720                           indf0	equ	0xFEF
 23721                           postinc0	equ	0xFEE
 23722                           fsr0h	equ	0xFEA
 23723                           fsr0l	equ	0xFE9
 23724                           wreg	equ	0xFE8
 23725                           indf1	equ	0xFE7
 23726                           postdec1	equ	0xFE5
 23727                           plusw1	equ	0xFE3
 23728                           fsr1h	equ	0xFE2
 23729                           fsr1l	equ	0xFE1
 23730                           indf2	equ	0xFDF
 23731                           postinc2	equ	0xFDE
 23732                           postdec2	equ	0xFDD
 23733                           plusw2	equ	0xFDB
 23734                           fsr2h	equ	0xFDA
 23735                           fsr2l	equ	0xFD9
 23736                           status	equ	0xFD8
 23737                           
 23738 ;; *************** function __fill_buffer_get_status *****************
 23739 ;; Defined at:
 23740 ;;		line 168 in file "api.c"
 23741 ;; Parameters:    Size  Location     Type
 23742 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23743 ;;		 -> ToSendDataBuffer(64), 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;		None
 23746 ;; Return value:  Size  Location     Type
 23747 ;;                  1    wreg      void 
 23748 ;; Registers used:
 23749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23750 ;; Tracked objects:
 23751 ;;		On entry : 0/0
 23752 ;;		On exit  : 0/0
 23753 ;;		Unchanged: 0/0
 23754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23759 ;;Total ram usage:        2 bytes
 23760 ;; Hardware stack levels used:    1
 23761 ;; Hardware stack levels required when called:    4
 23762 ;; This function calls:
 23763 ;;		_flash_is_busy
 23764 ;;		_ui_get_status
 23765 ;; This function is called by:
 23766 ;;		_api_prepare
 23767 ;; This function uses a non-reentrant model
 23768 ;;
 23769                           
 23770                           	psect	text114
 23771  00442A                     __ptext114:
 23772                           	opt stack 0
 23773  00442A                     __fill_buffer_get_status:
 23774                           	opt stack 24
 23775                           
 23776                           ;api.c: 171: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23777                           
 23778                           ;incstack = 0
 23779  00442A  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23780  00442E  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23781  004432  0E10               	movlw	16
 23782  004434  6EDF               	movwf	indf2,c
 23783                           
 23784                           ;api.c: 174: outBuffer[1] = 0x4B16 >> 8;
 23785  004436  EE20 F001          	lfsr	2,1
 23786  00443A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23787  00443C  26D9               	addwf	fsr2l,f,c
 23788  00443E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23789  004440  22DA               	addwfc	fsr2h,f,c
 23790  004442  0E4B               	movlw	75
 23791  004444  6EDF               	movwf	indf2,c
 23792                           
 23793                           ;api.c: 175: outBuffer[2] = (uint8_t) 0x4B16;
 23794  004446  EE20 F002          	lfsr	2,2
 23795  00444A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23796  00444C  26D9               	addwf	fsr2l,f,c
 23797  00444E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23798  004450  22DA               	addwfc	fsr2h,f,c
 23799  004452  0E16               	movlw	22
 23800  004454  6EDF               	movwf	indf2,c
 23801                           
 23802                           ;api.c: 178: outBuffer[3] = (uint8_t) flash_is_busy();
 23803  004456  EE20 F003          	lfsr	2,3
 23804  00445A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23805  00445C  26D9               	addwf	fsr2l,f,c
 23806  00445E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23807  004460  22DA               	addwfc	fsr2h,f,c
 23808  004462  ECE8  F038         	call	_flash_is_busy	;wreg free
 23809  004466  6EDF               	movwf	indf2,c
 23810                           
 23811                           ;api.c: 181: outBuffer[4] = 0x00;
 23812  004468  EE20 F004          	lfsr	2,4
 23813  00446C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23814  00446E  26D9               	addwf	fsr2l,f,c
 23815  004470  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23816  004472  22DA               	addwfc	fsr2h,f,c
 23817  004474  0E00               	movlw	0
 23818  004476  6EDF               	movwf	indf2,c
 23819                           
 23820                           ;api.c: 182: outBuffer[5] = 0x05;
 23821  004478  EE20 F005          	lfsr	2,5
 23822  00447C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23823  00447E  26D9               	addwf	fsr2l,f,c
 23824  004480  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23825  004482  22DA               	addwfc	fsr2h,f,c
 23826  004484  0E05               	movlw	5
 23827  004486  6EDF               	movwf	indf2,c
 23828                           
 23829                           ;api.c: 183: outBuffer[6] = 0x00;
 23830  004488  EE20 F006          	lfsr	2,6
 23831  00448C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23832  00448E  26D9               	addwf	fsr2l,f,c
 23833  004490  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23834  004492  22DA               	addwfc	fsr2h,f,c
 23835  004494  0E00               	movlw	0
 23836  004496  6EDF               	movwf	indf2,c
 23837                           
 23838                           ;api.c: 186: outBuffer[7] = ui_get_status();
 23839  004498  EE20 F007          	lfsr	2,7
 23840  00449C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23841  00449E  26D9               	addwf	fsr2l,f,c
 23842  0044A0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23843  0044A2  22DA               	addwfc	fsr2h,f,c
 23844  0044A4  EC22  F039         	call	_ui_get_status	;wreg free
 23845  0044A8  6EDF               	movwf	indf2,c
 23846                           
 23847                           ;api.c: 189: outBuffer[8] = os.encoderCount;
 23848  0044AA  EE20 F008          	lfsr	2,8
 23849  0044AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23850  0044B0  26D9               	addwf	fsr2l,f,c
 23851  0044B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23852  0044B4  22DA               	addwfc	fsr2h,f,c
 23853  0044B6  C060  FFDF         	movff	_os,indf2
 23854                           
 23855                           ;api.c: 190: outBuffer[9] = os.buttonCount;
 23856  0044BA  EE20 F009          	lfsr	2,9
 23857  0044BE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23858  0044C0  26D9               	addwf	fsr2l,f,c
 23859  0044C2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23860  0044C4  22DA               	addwfc	fsr2h,f,c
 23861  0044C6  C061  FFDF         	movff	_os+1,indf2
 23862                           
 23863                           ;api.c: 191: outBuffer[10] = os.timeSlot;
 23864  0044CA  EE20 F00A          	lfsr	2,10
 23865  0044CE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23866  0044D0  26D9               	addwf	fsr2l,f,c
 23867  0044D2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23868  0044D4  22DA               	addwfc	fsr2h,f,c
 23869  0044D6  C062  FFDF         	movff	_os+2,indf2
 23870                           
 23871                           ;api.c: 192: outBuffer[11] = os.done;
 23872  0044DA  EE20 F00B          	lfsr	2,11
 23873  0044DE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23874  0044E0  26D9               	addwf	fsr2l,f,c
 23875  0044E2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23876  0044E4  22DA               	addwfc	fsr2h,f,c
 23877  0044E6  C063  FFDF         	movff	_os+3,indf2
 23878                           
 23879                           ;api.c: 193: outBuffer[12] = os.bootloader_mode;
 23880  0044EA  EE20 F00C          	lfsr	2,12
 23881  0044EE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23882  0044F0  26D9               	addwf	fsr2l,f,c
 23883  0044F2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23884  0044F4  22DA               	addwfc	fsr2h,f,c
 23885  0044F6  C064  FFDF         	movff	_os+4,indf2
 23886                           
 23887                           ;api.c: 194: outBuffer[13] = os.display_mode;
 23888  0044FA  EE20 F00D          	lfsr	2,13
 23889  0044FE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23890  004500  26D9               	addwf	fsr2l,f,c
 23891  004502  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23892  004504  22DA               	addwfc	fsr2h,f,c
 23893  004506  C065  FFDF         	movff	_os+5,indf2
 23894  00450A  0012               	return		;funcret
 23895  00450C                     __end_of__fill_buffer_get_status:
 23896                           	opt stack 0
 23897                           tosu	equ	0xFFF
 23898                           tosh	equ	0xFFE
 23899                           tosl	equ	0xFFD
 23900                           pclath	equ	0xFFA
 23901                           tblptru	equ	0xFF8
 23902                           tblptrh	equ	0xFF7
 23903                           tblptrl	equ	0xFF6
 23904                           tablat	equ	0xFF5
 23905                           prodh	equ	0xFF4
 23906                           prodl	equ	0xFF3
 23907                           intcon	equ	0xFF2
 23908                           intcon2	equ	0xFF1
 23909                           intcon3	equ	0xFF0
 23910                           indf0	equ	0xFEF
 23911                           postinc0	equ	0xFEE
 23912                           fsr0h	equ	0xFEA
 23913                           fsr0l	equ	0xFE9
 23914                           wreg	equ	0xFE8
 23915                           indf1	equ	0xFE7
 23916                           postdec1	equ	0xFE5
 23917                           plusw1	equ	0xFE3
 23918                           fsr1h	equ	0xFE2
 23919                           fsr1l	equ	0xFE1
 23920                           indf2	equ	0xFDF
 23921                           postinc2	equ	0xFDE
 23922                           postdec2	equ	0xFDD
 23923                           plusw2	equ	0xFDB
 23924                           fsr2h	equ	0xFDA
 23925                           fsr2l	equ	0xFD9
 23926                           status	equ	0xFD8
 23927                           
 23928 ;; *************** function _flash_is_busy *****************
 23929 ;; Defined at:
 23930 ;;		line 373 in file "flash.c"
 23931 ;; Parameters:    Size  Location     Type
 23932 ;;		None
 23933 ;; Auto vars:     Size  Location     Type
 23934 ;;  result          1   19[COMRAM] unsigned char 
 23935 ;; Return value:  Size  Location     Type
 23936 ;;                  1    wreg      unsigned char 
 23937 ;; Registers used:
 23938 ;;		wreg, status,2, status,0, cstack
 23939 ;; Tracked objects:
 23940 ;;		On entry : 0/0
 23941 ;;		On exit  : 0/0
 23942 ;;		Unchanged: 0/0
 23943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23948 ;;Total ram usage:        1 bytes
 23949 ;; Hardware stack levels used:    1
 23950 ;; Hardware stack levels required when called:    3
 23951 ;; This function calls:
 23952 ;;		__flash_is_busy
 23953 ;; This function is called by:
 23954 ;;		__fill_buffer_get_status
 23955 ;; This function uses a non-reentrant model
 23956 ;;
 23957                           
 23958                           	psect	text115
 23959  0071D0                     __ptext115:
 23960                           	opt stack 0
 23961  0071D0                     _flash_is_busy:
 23962                           	opt stack 24
 23963                           
 23964                           ;flash.c: 375: uint8_t result;;flash.c: 378: result = _flash_is_busy();
 23965                           
 23966                           ;incstack = 0
 23967  0071D0  ECBE  F037         	call	__flash_is_busy	;wreg free
 23968  0071D4  6E14               	movwf	flash_is_busy@result,c
 23969                           
 23970                           ;flash.c: 381: return result;
 23971  0071D6  5014               	movf	flash_is_busy@result,w,c
 23972  0071D8  0012               	return	
 23973  0071DA                     __end_of_flash_is_busy:
 23974                           	opt stack 0
 23975                           tosu	equ	0xFFF
 23976                           tosh	equ	0xFFE
 23977                           tosl	equ	0xFFD
 23978                           pclath	equ	0xFFA
 23979                           tblptru	equ	0xFF8
 23980                           tblptrh	equ	0xFF7
 23981                           tblptrl	equ	0xFF6
 23982                           tablat	equ	0xFF5
 23983                           prodh	equ	0xFF4
 23984                           prodl	equ	0xFF3
 23985                           intcon	equ	0xFF2
 23986                           intcon2	equ	0xFF1
 23987                           intcon3	equ	0xFF0
 23988                           indf0	equ	0xFEF
 23989                           postinc0	equ	0xFEE
 23990                           fsr0h	equ	0xFEA
 23991                           fsr0l	equ	0xFE9
 23992                           wreg	equ	0xFE8
 23993                           indf1	equ	0xFE7
 23994                           postdec1	equ	0xFE5
 23995                           plusw1	equ	0xFE3
 23996                           fsr1h	equ	0xFE2
 23997                           fsr1l	equ	0xFE1
 23998                           indf2	equ	0xFDF
 23999                           postinc2	equ	0xFDE
 24000                           postdec2	equ	0xFDD
 24001                           plusw2	equ	0xFDB
 24002                           fsr2h	equ	0xFDA
 24003                           fsr2l	equ	0xFD9
 24004                           status	equ	0xFD8
 24005                           
 24006 ;; *************** function __fill_buffer_get_display *****************
 24007 ;; Defined at:
 24008 ;;		line 198 in file "api.c"
 24009 ;; Parameters:    Size  Location     Type
 24010 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24011 ;;		 -> ToSendDataBuffer(64), 
 24012 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;  position        1   15[COMRAM] unsigned char 
 24015 ;;  start_line      1   14[COMRAM] unsigned char 
 24016 ;;  line            1   13[COMRAM] unsigned char 
 24017 ;;  cntr            1   12[COMRAM] unsigned char 
 24018 ;; Return value:  Size  Location     Type
 24019 ;;                  1    wreg      void 
 24020 ;; Registers used:
 24021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24022 ;; Tracked objects:
 24023 ;;		On entry : 0/0
 24024 ;;		On exit  : 0/0
 24025 ;;		Unchanged: 0/0
 24026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24027 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24028 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24029 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24031 ;;Total ram usage:       12 bytes
 24032 ;; Hardware stack levels used:    1
 24033 ;; Hardware stack levels required when called:    1
 24034 ;; This function calls:
 24035 ;;		_display_get_character
 24036 ;; This function is called by:
 24037 ;;		_api_prepare
 24038 ;; This function uses a non-reentrant model
 24039 ;;
 24040                           
 24041                           	psect	text116
 24042  004EE6                     __ptext116:
 24043                           	opt stack 0
 24044  004EE6                     __fill_buffer_get_display:
 24045                           	opt stack 27
 24046                           
 24047                           ;api.c: 200: uint8_t cntr;;api.c: 201: uint8_t line;;api.c: 202: uint8_t start_line;;api
      +                          .c: 203: uint8_t position;;api.c: 206: if(secondHalf)
 24048                           
 24049                           ;incstack = 0
 24050  004EE6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24051  004EE8  B4D8               	btfsc	status,2,c
 24052  004EEA  D006               	goto	l2680
 24053                           
 24054                           ;api.c: 207: {;api.c: 208: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24055  004EEC  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24056  004EF0  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24057  004EF4  0E12               	movlw	18
 24058  004EF6  D005               	goto	L32
 24059  004EF8                     l2680:
 24060                           
 24061                           ;api.c: 210: else;api.c: 211: {;api.c: 212: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24062  004EF8  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24063  004EFC  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24064  004F00  0E11               	movlw	17
 24065  004F02                     L32:
 24066  004F02  6EDF               	movwf	indf2,c
 24067                           
 24068                           ;api.c: 213: };api.c: 216: outBuffer[1] = 0x4B16 >> 8;
 24069  004F04  EE20 F001          	lfsr	2,1
 24070  004F08  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24071  004F0A  26D9               	addwf	fsr2l,f,c
 24072  004F0C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24073  004F0E  22DA               	addwfc	fsr2h,f,c
 24074  004F10  0E4B               	movlw	75
 24075  004F12  6EDF               	movwf	indf2,c
 24076                           
 24077                           ;api.c: 217: outBuffer[2] = (uint8_t) 0x4B16;
 24078  004F14  EE20 F002          	lfsr	2,2
 24079  004F18  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24080  004F1A  26D9               	addwf	fsr2l,f,c
 24081  004F1C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24082  004F1E  22DA               	addwfc	fsr2h,f,c
 24083  004F20  0E16               	movlw	22
 24084  004F22  6EDF               	movwf	indf2,c
 24085                           
 24086                           ;api.c: 220: cntr = 3;
 24087  004F24  0E03               	movlw	3
 24088  004F26  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24089                           
 24090                           ;api.c: 221: if(secondHalf)
 24091  004F28  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24092  004F2A  B4D8               	btfsc	status,2,c
 24093  004F2C  D002               	goto	l2682
 24094                           
 24095                           ;api.c: 222: {;api.c: 223: start_line = 2;
 24096  004F2E  0E02               	movlw	2
 24097  004F30  D001               	goto	L33
 24098  004F32                     l2682:
 24099                           
 24100                           ;api.c: 225: else;api.c: 226: {;api.c: 227: start_line = 0;
 24101  004F32  0E00               	movlw	0
 24102  004F34                     L33:
 24103  004F34  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24104                           
 24105                           ;api.c: 228: };api.c: 229: for(line=start_line; line<start_line+2; ++line)
 24106  004F36  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24107  004F3A  D01A               	goto	l2684
 24108  004F3C                     
 24109                           ;api.c: 230: {;api.c: 231: for(position=0; position<20; ++position)
 24110  004F3C  0E00               	movlw	0
 24111  004F3E  6E10               	movwf	__fill_buffer_get_display@position,c
 24112  004F40                     l13191:
 24113  004F40  0E13               	movlw	19
 24114  004F42  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24115  004F44  D001               	goto	l2686
 24116  004F46  D013               	goto	u10680
 24117  004F48                     l2686:
 24118                           
 24119                           ;api.c: 232: {;api.c: 233: outBuffer[cntr] = display_get_character(line, position);
 24120  004F48  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24121  004F4C  500E               	movf	__fill_buffer_get_display@line,w,c
 24122  004F4E  ECFF  F036         	call	_display_get_character
 24123  004F52  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24124  004F54  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24125  004F56  0D01               	mullw	1
 24126  004F58  50F3               	movf	prodl,w,c
 24127  004F5A  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24128  004F5C  6ED9               	movwf	fsr2l,c
 24129  004F5E  50F4               	movf	prodh,w,c
 24130  004F60  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24131  004F62  6EDA               	movwf	fsr2h,c
 24132  004F64  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24133                           
 24134                           ;api.c: 234: ++cntr;
 24135  004F68  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24136  004F6A  2A10               	incf	__fill_buffer_get_display@position,f,c
 24137  004F6C  D7E9               	goto	l13191
 24138  004F6E                     u10680:
 24139  004F6E  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24140  004F70                     l2684:
 24141  004F70  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24142  004F72  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24143  004F74  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24144  004F76  0E02               	movlw	2
 24145  004F78  2608               	addwf	??__fill_buffer_get_display,f,c
 24146  004F7A  0E00               	movlw	0
 24147  004F7C  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24148  004F7E  500E               	movf	__fill_buffer_get_display@line,w,c
 24149  004F80  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24150  004F82  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24151  004F84  5008               	movf	??__fill_buffer_get_display,w,c
 24152  004F86  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24153  004F88  500B               	movf	??__fill_buffer_get_display+3,w,c
 24154  004F8A  0A80               	xorlw	128
 24155  004F8C  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24156  004F8E  5009               	movf	??__fill_buffer_get_display+1,w,c
 24157  004F90  0A80               	xorlw	128
 24158  004F92  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24159  004F94  B0D8               	btfsc	status,0,c
 24160  004F96  0012               	return	
 24161  004F98  D7D1               	goto	l2685
 24162  004F9A                     __end_of__fill_buffer_get_display:
 24163                           	opt stack 0
 24164                           tosu	equ	0xFFF
 24165                           tosh	equ	0xFFE
 24166                           tosl	equ	0xFFD
 24167                           pclath	equ	0xFFA
 24168                           tblptru	equ	0xFF8
 24169                           tblptrh	equ	0xFF7
 24170                           tblptrl	equ	0xFF6
 24171                           tablat	equ	0xFF5
 24172                           prodh	equ	0xFF4
 24173                           prodl	equ	0xFF3
 24174                           intcon	equ	0xFF2
 24175                           intcon2	equ	0xFF1
 24176                           intcon3	equ	0xFF0
 24177                           indf0	equ	0xFEF
 24178                           postinc0	equ	0xFEE
 24179                           fsr0h	equ	0xFEA
 24180                           fsr0l	equ	0xFE9
 24181                           wreg	equ	0xFE8
 24182                           indf1	equ	0xFE7
 24183                           postdec1	equ	0xFE5
 24184                           plusw1	equ	0xFE3
 24185                           fsr1h	equ	0xFE2
 24186                           fsr1l	equ	0xFE1
 24187                           indf2	equ	0xFDF
 24188                           postinc2	equ	0xFDE
 24189                           postdec2	equ	0xFDD
 24190                           plusw2	equ	0xFDB
 24191                           fsr2h	equ	0xFDA
 24192                           fsr2l	equ	0xFD9
 24193                           status	equ	0xFD8
 24194                           
 24195 ;; *************** function _display_get_character *****************
 24196 ;; Defined at:
 24197 ;;		line 77 in file "display.c"
 24198 ;; Parameters:    Size  Location     Type
 24199 ;;  line            1    wreg     unsigned char 
 24200 ;;  position        1    0[COMRAM] unsigned char 
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;  line            1    3[COMRAM] unsigned char 
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  1    wreg      unsigned char 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24212 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24213 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24216 ;;Total ram usage:        4 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; This function calls:
 24219 ;;		Nothing
 24220 ;; This function is called by:
 24221 ;;		__fill_buffer_get_display
 24222 ;; This function uses a non-reentrant model
 24223 ;;
 24224                           
 24225                           	psect	text117
 24226  006DFE                     __ptext117:
 24227                           	opt stack 0
 24228  006DFE                     _display_get_character:
 24229                           	opt stack 27
 24230                           
 24231                           ;incstack = 0
 24232                           ;display_get_character@line stored from wreg
 24233  006DFE  6E04               	movwf	display_get_character@line,c
 24234                           
 24235                           ;display.c: 79: return display_content[line][position];
 24236  006E00  5004               	movf	display_get_character@line,w,c
 24237  006E02  0D14               	mullw	20
 24238  006E04  0E76               	movlw	low _display_content
 24239  006E06  6E02               	movwf	??_display_get_character& (0+255),c
 24240  006E08  0E01               	movlw	high _display_content
 24241  006E0A  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24242  006E0C  50F3               	movf	prodl,w,c
 24243  006E0E  2602               	addwf	??_display_get_character,f,c
 24244  006E10  50F4               	movf	prodh,w,c
 24245  006E12  2203               	addwfc	??_display_get_character+1,f,c
 24246  006E14  5001               	movf	display_get_character@position,w,c
 24247  006E16  0D01               	mullw	1
 24248  006E18  50F3               	movf	prodl,w,c
 24249  006E1A  2402               	addwf	??_display_get_character,w,c
 24250  006E1C  6ED9               	movwf	fsr2l,c
 24251  006E1E  50F4               	movf	prodh,w,c
 24252  006E20  2003               	addwfc	??_display_get_character+1,w,c
 24253  006E22  6EDA               	movwf	fsr2h,c
 24254  006E24  50DF               	movf	indf2,w,c
 24255  006E26  0012               	return	
 24256  006E28                     __end_of_display_get_character:
 24257                           	opt stack 0
 24258                           tosu	equ	0xFFF
 24259                           tosh	equ	0xFFE
 24260                           tosl	equ	0xFFD
 24261                           pclath	equ	0xFFA
 24262                           tblptru	equ	0xFF8
 24263                           tblptrh	equ	0xFF7
 24264                           tblptrl	equ	0xFF6
 24265                           tablat	equ	0xFF5
 24266                           prodh	equ	0xFF4
 24267                           prodl	equ	0xFF3
 24268                           intcon	equ	0xFF2
 24269                           intcon2	equ	0xFF1
 24270                           intcon3	equ	0xFF0
 24271                           indf0	equ	0xFEF
 24272                           postinc0	equ	0xFEE
 24273                           fsr0h	equ	0xFEA
 24274                           fsr0l	equ	0xFE9
 24275                           wreg	equ	0xFE8
 24276                           indf1	equ	0xFE7
 24277                           postdec1	equ	0xFE5
 24278                           plusw1	equ	0xFE3
 24279                           fsr1h	equ	0xFE2
 24280                           fsr1l	equ	0xFE1
 24281                           indf2	equ	0xFDF
 24282                           postinc2	equ	0xFDE
 24283                           postdec2	equ	0xFDD
 24284                           plusw2	equ	0xFDB
 24285                           fsr2h	equ	0xFDA
 24286                           fsr2l	equ	0xFD9
 24287                           status	equ	0xFD8
 24288                           
 24289 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24290 ;; Defined at:
 24291 ;;		line 239 in file "api.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24294 ;;		 -> ToSendDataBuffer(64), 
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24297 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24298 ;;  cntr            1   10[COMRAM] unsigned char 
 24299 ;;  data_length     1    9[COMRAM] unsigned char 
 24300 ;; Return value:  Size  Location     Type
 24301 ;;                  1    wreg      void 
 24302 ;; Registers used:
 24303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24309 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24310 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24311 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24312 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24313 ;;Total ram usage:       13 bytes
 24314 ;; Hardware stack levels used:    1
 24315 ;; Hardware stack levels required when called:    1
 24316 ;; This function calls:
 24317 ;;		_bootloader_get_entries
 24318 ;;		_bootloader_get_error
 24319 ;;		_bootloader_get_file_size
 24320 ;;		_bootloader_get_flashPagesWritten
 24321 ;;		_bootloader_get_rec_address
 24322 ;;		_bootloader_get_rec_checksum
 24323 ;;		_bootloader_get_rec_checksumCheck
 24324 ;;		_bootloader_get_rec_data
 24325 ;;		_bootloader_get_rec_dataLength
 24326 ;;		_bootloader_get_rec_recordType
 24327 ;;		_bootloader_get_total_entries
 24328 ;; This function is called by:
 24329 ;;		_api_prepare
 24330 ;; This function uses a non-reentrant model
 24331 ;;
 24332                           
 24333                           	psect	text118
 24334  00203C                     __ptext118:
 24335                           	opt stack 0
 24336  00203C                     __fill_buffer_get_bootloader_details:
 24337                           	opt stack 27
 24338                           
 24339                           ;api.c: 241: uint8_t cntr;;api.c: 242: uint8_t data_length;;api.c: 243: uint16_t buffer_
      +                          small;;api.c: 244: uint32_t buffer_large;;api.c: 247: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24340                           
 24341                           ;incstack = 0
 24342  00203C  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24343  002040  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24344  002044  0E13               	movlw	19
 24345  002046  6EDF               	movwf	indf2,c
 24346                           
 24347                           ;api.c: 250: outBuffer[1] = ((unsigned char)(((0x4B16)>>8)&0xFF));
 24348  002048  EE20 F001          	lfsr	2,1
 24349  00204C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24350  00204E  26D9               	addwf	fsr2l,f,c
 24351  002050  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24352  002052  22DA               	addwfc	fsr2h,f,c
 24353  002054  0E4B               	movlw	75
 24354  002056  6EDF               	movwf	indf2,c
 24355                           
 24356                           ;api.c: 251: outBuffer[2] = ((unsigned char)((0x4B16)&0xFF));
 24357  002058  EE20 F002          	lfsr	2,2
 24358  00205C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24359  00205E  26D9               	addwf	fsr2l,f,c
 24360  002060  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24361  002062  22DA               	addwfc	fsr2h,f,c
 24362  002064  0E16               	movlw	22
 24363  002066  6EDF               	movwf	indf2,c
 24364                           
 24365                           ;api.c: 254: buffer_large = bootloader_get_file_size();
 24366  002068  ECA0  F038         	call	_bootloader_get_file_size	;wreg free
 24367  00206C  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24368  002070  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24369  002074  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24370  002078  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24371                           
 24372                           ;api.c: 255: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24373  00207C  EE20 F003          	lfsr	2,3
 24374  002080  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24375  002082  26D9               	addwf	fsr2l,f,c
 24376  002084  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24377  002086  22DA               	addwfc	fsr2h,f,c
 24378  002088  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24379  00208A  6EDF               	movwf	indf2,c
 24380                           
 24381                           ;api.c: 256: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24382  00208C  EE20 F004          	lfsr	2,4
 24383  002090  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24384  002092  26D9               	addwf	fsr2l,f,c
 24385  002094  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24386  002096  22DA               	addwfc	fsr2h,f,c
 24387  002098  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24388                           
 24389                           ;api.c: 257: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24390  00209C  EE20 F005          	lfsr	2,5
 24391  0020A0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24392  0020A2  26D9               	addwf	fsr2l,f,c
 24393  0020A4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24394  0020A6  22DA               	addwfc	fsr2h,f,c
 24395  0020A8  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24396  0020AA  6EDF               	movwf	indf2,c
 24397                           
 24398                           ;api.c: 258: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24399  0020AC  EE20 F006          	lfsr	2,6
 24400  0020B0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24401  0020B2  26D9               	addwf	fsr2l,f,c
 24402  0020B4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24403  0020B6  22DA               	addwfc	fsr2h,f,c
 24404  0020B8  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24405                           
 24406                           ;api.c: 260: buffer_small = bootloader_get_entries();
 24407  0020BC  ECF7  F038         	call	_bootloader_get_entries	;wreg free
 24408  0020C0  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24409  0020C4  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24410                           
 24411                           ;api.c: 261: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24412  0020C8  EE20 F007          	lfsr	2,7
 24413  0020CC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24414  0020CE  26D9               	addwf	fsr2l,f,c
 24415  0020D0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24416  0020D2  22DA               	addwfc	fsr2h,f,c
 24417  0020D4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24418  0020D6  6EDF               	movwf	indf2,c
 24419                           
 24420                           ;api.c: 262: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24421  0020D8  EE20 F008          	lfsr	2,8
 24422  0020DC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24423  0020DE  26D9               	addwf	fsr2l,f,c
 24424  0020E0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24425  0020E2  22DA               	addwfc	fsr2h,f,c
 24426  0020E4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24427                           
 24428                           ;api.c: 264: buffer_small = bootloader_get_total_entries();
 24429  0020E8  EC01  F039         	call	_bootloader_get_total_entries	;wreg free
 24430  0020EC  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24431  0020F0  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24432                           
 24433                           ;api.c: 265: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24434  0020F4  EE20 F009          	lfsr	2,9
 24435  0020F8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24436  0020FA  26D9               	addwf	fsr2l,f,c
 24437  0020FC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24438  0020FE  22DA               	addwfc	fsr2h,f,c
 24439  002100  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24440  002102  6EDF               	movwf	indf2,c
 24441                           
 24442                           ;api.c: 266: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24443  002104  EE20 F00A          	lfsr	2,10
 24444  002108  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24445  00210A  26D9               	addwf	fsr2l,f,c
 24446  00210C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24447  00210E  22DA               	addwfc	fsr2h,f,c
 24448  002110  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24449                           
 24450                           ;api.c: 268: outBuffer[11] = (uint8_t) bootloader_get_error();
 24451  002114  EE20 F00B          	lfsr	2,11
 24452  002118  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24453  00211A  26D9               	addwf	fsr2l,f,c
 24454  00211C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24455  00211E  22DA               	addwfc	fsr2h,f,c
 24456  002120  EC25  F039         	call	_bootloader_get_error	;wreg free
 24457  002124  6EDF               	movwf	indf2,c
 24458                           
 24459                           ;api.c: 270: buffer_small = bootloader_get_flashPagesWritten();
 24460  002126  ECFC  F038         	call	_bootloader_get_flashPagesWritten	;wreg free
 24461  00212A  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24462  00212E  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24463                           
 24464                           ;api.c: 271: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24465  002132  EE20 F00C          	lfsr	2,12
 24466  002136  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24467  002138  26D9               	addwf	fsr2l,f,c
 24468  00213A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24469  00213C  22DA               	addwfc	fsr2h,f,c
 24470  00213E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24471  002140  6EDF               	movwf	indf2,c
 24472                           
 24473                           ;api.c: 272: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24474  002142  EE20 F00D          	lfsr	2,13
 24475  002146  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24476  002148  26D9               	addwf	fsr2l,f,c
 24477  00214A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24478  00214C  22DA               	addwfc	fsr2h,f,c
 24479  00214E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24480                           
 24481                           ;api.c: 275: buffer_small = bootloader_get_rec_dataLength();
 24482  002152  ECED  F038         	call	_bootloader_get_rec_dataLength	;wreg free
 24483  002156  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24484  00215A  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24485                           
 24486                           ;api.c: 276: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24487  00215E  EE20 F00E          	lfsr	2,14
 24488  002162  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24489  002164  26D9               	addwf	fsr2l,f,c
 24490  002166  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24491  002168  22DA               	addwfc	fsr2h,f,c
 24492  00216A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24493  00216C  6EDF               	movwf	indf2,c
 24494                           
 24495                           ;api.c: 277: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24496  00216E  EE20 F00F          	lfsr	2,15
 24497  002172  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24498  002174  26D9               	addwf	fsr2l,f,c
 24499  002176  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24500  002178  22DA               	addwfc	fsr2h,f,c
 24501  00217A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24502                           
 24503                           ;api.c: 279: buffer_small = bootloader_get_rec_address();
 24504  00217E  ECF2  F038         	call	_bootloader_get_rec_address	;wreg free
 24505  002182  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24506  002186  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24507                           
 24508                           ;api.c: 280: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24509  00218A  EE20 F010          	lfsr	2,16
 24510  00218E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24511  002190  26D9               	addwf	fsr2l,f,c
 24512  002192  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24513  002194  22DA               	addwfc	fsr2h,f,c
 24514  002196  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24515  002198  6EDF               	movwf	indf2,c
 24516                           
 24517                           ;api.c: 281: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24518  00219A  EE20 F011          	lfsr	2,17
 24519  00219E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24520  0021A0  26D9               	addwf	fsr2l,f,c
 24521  0021A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24522  0021A4  22DA               	addwfc	fsr2h,f,c
 24523  0021A6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24524                           
 24525                           ;api.c: 283: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24526  0021AA  EE20 F012          	lfsr	2,18
 24527  0021AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24528  0021B0  26D9               	addwf	fsr2l,f,c
 24529  0021B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24530  0021B4  22DA               	addwfc	fsr2h,f,c
 24531  0021B6  EC19  F039         	call	_bootloader_get_rec_recordType	;wreg free
 24532  0021BA  6EDF               	movwf	indf2,c
 24533                           
 24534                           ;api.c: 284: outBuffer[19] = bootloader_get_rec_checksum();
 24535  0021BC  EE20 F013          	lfsr	2,19
 24536  0021C0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24537  0021C2  26D9               	addwf	fsr2l,f,c
 24538  0021C4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24539  0021C6  22DA               	addwfc	fsr2h,f,c
 24540  0021C8  EC1F  F039         	call	_bootloader_get_rec_checksum	;wreg free
 24541  0021CC  6EDF               	movwf	indf2,c
 24542                           
 24543                           ;api.c: 285: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24544  0021CE  EE20 F014          	lfsr	2,20
 24545  0021D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24546  0021D4  26D9               	addwf	fsr2l,f,c
 24547  0021D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24548  0021D8  22DA               	addwfc	fsr2h,f,c
 24549  0021DA  EC1C  F039         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24550  0021DE  6EDF               	movwf	indf2,c
 24551                           
 24552                           ;api.c: 287: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24553  0021E0  ECED  F038         	call	_bootloader_get_rec_dataLength	;wreg free
 24554  0021E4  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24555  0021E6  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24556                           
 24557                           ;api.c: 288: if(data_length>43)
 24558  0021E8  0E2B               	movlw	43
 24559  0021EA  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24560  0021EC  D002               	goto	l2692
 24561                           
 24562                           ;api.c: 289: {;api.c: 291: data_length = 43;
 24563  0021EE  0E2B               	movlw	43
 24564  0021F0  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24565  0021F2                     l2692:
 24566                           
 24567                           ;api.c: 292: };api.c: 293: for(cntr=0; cntr<data_length; ++cntr)
 24568  0021F2  0E00               	movlw	0
 24569  0021F4  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24570  0021F6  D014               	goto	l2693
 24571  0021F8                     
 24572                           ;api.c: 294: {;api.c: 295: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24573  0021F8  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24574  0021FA  EC68  F038         	call	_bootloader_get_rec_data
 24575  0021FE  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24576  002200  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24577  002202  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24578  002204  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24579  002206  0E15               	movlw	21
 24580  002208  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24581  00220A  0E00               	movlw	0
 24582  00220C  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24583  00220E  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24584  002210  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24585  002212  6ED9               	movwf	fsr2l,c
 24586  002214  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 24587  002216  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24588  002218  6EDA               	movwf	fsr2h,c
 24589  00221A  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 24590  00221E  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 24591  002220                     l2693:
 24592  002220  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 24593  002222  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 24594  002224  B0D8               	btfsc	status,0,c
 24595  002226  0012               	return	
 24596  002228  D7E7               	goto	l2694
 24597  00222A                     __end_of__fill_buffer_get_bootloader_details:
 24598                           	opt stack 0
 24599                           tosu	equ	0xFFF
 24600                           tosh	equ	0xFFE
 24601                           tosl	equ	0xFFD
 24602                           pclath	equ	0xFFA
 24603                           tblptru	equ	0xFF8
 24604                           tblptrh	equ	0xFF7
 24605                           tblptrl	equ	0xFF6
 24606                           tablat	equ	0xFF5
 24607                           prodh	equ	0xFF4
 24608                           prodl	equ	0xFF3
 24609                           intcon	equ	0xFF2
 24610                           intcon2	equ	0xFF1
 24611                           intcon3	equ	0xFF0
 24612                           indf0	equ	0xFEF
 24613                           postinc0	equ	0xFEE
 24614                           fsr0h	equ	0xFEA
 24615                           fsr0l	equ	0xFE9
 24616                           wreg	equ	0xFE8
 24617                           indf1	equ	0xFE7
 24618                           postdec1	equ	0xFE5
 24619                           plusw1	equ	0xFE3
 24620                           fsr1h	equ	0xFE2
 24621                           fsr1l	equ	0xFE1
 24622                           indf2	equ	0xFDF
 24623                           postinc2	equ	0xFDE
 24624                           postdec2	equ	0xFDD
 24625                           plusw2	equ	0xFDB
 24626                           fsr2h	equ	0xFDA
 24627                           fsr2l	equ	0xFD9
 24628                           status	equ	0xFD8
 24629                           
 24630 ;; *************** function _bootloader_get_rec_recordType *****************
 24631 ;; Defined at:
 24632 ;;		line 494 in file "bootloader.c"
 24633 ;; Parameters:    Size  Location     Type
 24634 ;;		None
 24635 ;; Auto vars:     Size  Location     Type
 24636 ;;		None
 24637 ;; Return value:  Size  Location     Type
 24638 ;;                  1    wreg      enum E6762
 24639 ;; Registers used:
 24640 ;;		wreg, status,2
 24641 ;; Tracked objects:
 24642 ;;		On entry : 0/0
 24643 ;;		On exit  : 0/0
 24644 ;;		Unchanged: 0/0
 24645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24650 ;;Total ram usage:        0 bytes
 24651 ;; Hardware stack levels used:    1
 24652 ;; This function calls:
 24653 ;;		Nothing
 24654 ;; This function is called by:
 24655 ;;		__fill_buffer_get_bootloader_details
 24656 ;; This function uses a non-reentrant model
 24657 ;;
 24658                           
 24659                           	psect	text119
 24660  007232                     __ptext119:
 24661                           	opt stack 0
 24662  007232                     _bootloader_get_rec_recordType:
 24663                           	opt stack 27
 24664                           
 24665                           ;bootloader.c: 496: return hex_file_entry.recordType;
 24666                           
 24667                           ;incstack = 0
 24668  007232  0101               	movlb	1	; () banked
 24669  007234  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
 24670  007236  0012               	return	
 24671  007238                     __end_of_bootloader_get_rec_recordType:
 24672                           	opt stack 0
 24673                           tosu	equ	0xFFF
 24674                           tosh	equ	0xFFE
 24675                           tosl	equ	0xFFD
 24676                           pclath	equ	0xFFA
 24677                           tblptru	equ	0xFF8
 24678                           tblptrh	equ	0xFF7
 24679                           tblptrl	equ	0xFF6
 24680                           tablat	equ	0xFF5
 24681                           prodh	equ	0xFF4
 24682                           prodl	equ	0xFF3
 24683                           intcon	equ	0xFF2
 24684                           intcon2	equ	0xFF1
 24685                           intcon3	equ	0xFF0
 24686                           indf0	equ	0xFEF
 24687                           postinc0	equ	0xFEE
 24688                           fsr0h	equ	0xFEA
 24689                           fsr0l	equ	0xFE9
 24690                           wreg	equ	0xFE8
 24691                           indf1	equ	0xFE7
 24692                           postdec1	equ	0xFE5
 24693                           plusw1	equ	0xFE3
 24694                           fsr1h	equ	0xFE2
 24695                           fsr1l	equ	0xFE1
 24696                           indf2	equ	0xFDF
 24697                           postinc2	equ	0xFDE
 24698                           postdec2	equ	0xFDD
 24699                           plusw2	equ	0xFDB
 24700                           fsr2h	equ	0xFDA
 24701                           fsr2l	equ	0xFD9
 24702                           status	equ	0xFD8
 24703                           
 24704 ;; *************** function _bootloader_get_rec_dataLength *****************
 24705 ;; Defined at:
 24706 ;;		line 483 in file "bootloader.c"
 24707 ;; Parameters:    Size  Location     Type
 24708 ;;		None
 24709 ;; Auto vars:     Size  Location     Type
 24710 ;;		None
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  2    0[COMRAM] unsigned int 
 24713 ;; Registers used:
 24714 ;;		None
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24724 ;;Total ram usage:        2 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; This function calls:
 24727 ;;		Nothing
 24728 ;; This function is called by:
 24729 ;;		__fill_buffer_get_bootloader_details
 24730 ;; This function uses a non-reentrant model
 24731 ;;
 24732                           
 24733                           	psect	text120
 24734  0071DA                     __ptext120:
 24735                           	opt stack 0
 24736  0071DA                     _bootloader_get_rec_dataLength:
 24737                           	opt stack 27
 24738                           
 24739                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 24740                           
 24741                           ; BSR set to: 1
 24742                           ;incstack = 0
 24743  0071DA  C1C6  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 24744  0071DE  C1C7  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 24745  0071E2  0012               	return		;funcret
 24746  0071E4                     __end_of_bootloader_get_rec_dataLength:
 24747                           	opt stack 0
 24748                           tosu	equ	0xFFF
 24749                           tosh	equ	0xFFE
 24750                           tosl	equ	0xFFD
 24751                           pclath	equ	0xFFA
 24752                           tblptru	equ	0xFF8
 24753                           tblptrh	equ	0xFF7
 24754                           tblptrl	equ	0xFF6
 24755                           tablat	equ	0xFF5
 24756                           prodh	equ	0xFF4
 24757                           prodl	equ	0xFF3
 24758                           intcon	equ	0xFF2
 24759                           intcon2	equ	0xFF1
 24760                           intcon3	equ	0xFF0
 24761                           indf0	equ	0xFEF
 24762                           postinc0	equ	0xFEE
 24763                           fsr0h	equ	0xFEA
 24764                           fsr0l	equ	0xFE9
 24765                           wreg	equ	0xFE8
 24766                           indf1	equ	0xFE7
 24767                           postdec1	equ	0xFE5
 24768                           plusw1	equ	0xFE3
 24769                           fsr1h	equ	0xFE2
 24770                           fsr1l	equ	0xFE1
 24771                           indf2	equ	0xFDF
 24772                           postinc2	equ	0xFDE
 24773                           postdec2	equ	0xFDD
 24774                           plusw2	equ	0xFDB
 24775                           fsr2h	equ	0xFDA
 24776                           fsr2l	equ	0xFD9
 24777                           status	equ	0xFD8
 24778                           
 24779 ;; *************** function _bootloader_get_rec_data *****************
 24780 ;; Defined at:
 24781 ;;		line 499 in file "bootloader.c"
 24782 ;; Parameters:    Size  Location     Type
 24783 ;;  index           1    wreg     unsigned char 
 24784 ;; Auto vars:     Size  Location     Type
 24785 ;;  index           1    0[COMRAM] unsigned char 
 24786 ;; Return value:  Size  Location     Type
 24787 ;;                  1    wreg      unsigned char 
 24788 ;; Registers used:
 24789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24790 ;; Tracked objects:
 24791 ;;		On entry : 0/0
 24792 ;;		On exit  : 0/0
 24793 ;;		Unchanged: 0/0
 24794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24799 ;;Total ram usage:        1 bytes
 24800 ;; Hardware stack levels used:    1
 24801 ;; This function calls:
 24802 ;;		Nothing
 24803 ;; This function is called by:
 24804 ;;		__fill_buffer_get_bootloader_details
 24805 ;; This function uses a non-reentrant model
 24806 ;;
 24807                           
 24808                           	psect	text121
 24809  0070D0                     __ptext121:
 24810                           	opt stack 0
 24811  0070D0                     _bootloader_get_rec_data:
 24812                           	opt stack 27
 24813                           
 24814                           ;incstack = 0
 24815                           ;bootloader_get_rec_data@index stored from wreg
 24816  0070D0  6E01               	movwf	bootloader_get_rec_data@index,c
 24817                           
 24818                           ;bootloader.c: 501: return hex_file_entry.data[index];
 24819  0070D2  5001               	movf	bootloader_get_rec_data@index,w,c
 24820  0070D4  0D01               	mullw	1
 24821  0070D6  0ECB               	movlw	low (_hex_file_entry+5)
 24822  0070D8  24F3               	addwf	prodl,w,c
 24823  0070DA  6ED9               	movwf	fsr2l,c
 24824  0070DC  0E01               	movlw	high (_hex_file_entry+5)
 24825  0070DE  20F4               	addwfc	prodh,w,c
 24826  0070E0  6EDA               	movwf	fsr2h,c
 24827  0070E2  50DF               	movf	indf2,w,c
 24828  0070E4  0012               	return	
 24829  0070E6                     __end_of_bootloader_get_rec_data:
 24830                           	opt stack 0
 24831                           tosu	equ	0xFFF
 24832                           tosh	equ	0xFFE
 24833                           tosl	equ	0xFFD
 24834                           pclath	equ	0xFFA
 24835                           tblptru	equ	0xFF8
 24836                           tblptrh	equ	0xFF7
 24837                           tblptrl	equ	0xFF6
 24838                           tablat	equ	0xFF5
 24839                           prodh	equ	0xFF4
 24840                           prodl	equ	0xFF3
 24841                           intcon	equ	0xFF2
 24842                           intcon2	equ	0xFF1
 24843                           intcon3	equ	0xFF0
 24844                           indf0	equ	0xFEF
 24845                           postinc0	equ	0xFEE
 24846                           fsr0h	equ	0xFEA
 24847                           fsr0l	equ	0xFE9
 24848                           wreg	equ	0xFE8
 24849                           indf1	equ	0xFE7
 24850                           postdec1	equ	0xFE5
 24851                           plusw1	equ	0xFE3
 24852                           fsr1h	equ	0xFE2
 24853                           fsr1l	equ	0xFE1
 24854                           indf2	equ	0xFDF
 24855                           postinc2	equ	0xFDE
 24856                           postdec2	equ	0xFDD
 24857                           plusw2	equ	0xFDB
 24858                           fsr2h	equ	0xFDA
 24859                           fsr2l	equ	0xFD9
 24860                           status	equ	0xFD8
 24861                           
 24862 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 24863 ;; Defined at:
 24864 ;;		line 509 in file "bootloader.c"
 24865 ;; Parameters:    Size  Location     Type
 24866 ;;		None
 24867 ;; Auto vars:     Size  Location     Type
 24868 ;;		None
 24869 ;; Return value:  Size  Location     Type
 24870 ;;                  1    wreg      unsigned char 
 24871 ;; Registers used:
 24872 ;;		wreg, status,2
 24873 ;; Tracked objects:
 24874 ;;		On entry : 0/0
 24875 ;;		On exit  : 0/0
 24876 ;;		Unchanged: 0/0
 24877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24882 ;;Total ram usage:        0 bytes
 24883 ;; Hardware stack levels used:    1
 24884 ;; This function calls:
 24885 ;;		Nothing
 24886 ;; This function is called by:
 24887 ;;		__fill_buffer_get_bootloader_details
 24888 ;; This function uses a non-reentrant model
 24889 ;;
 24890                           
 24891                           	psect	text122
 24892  007238                     __ptext122:
 24893                           	opt stack 0
 24894  007238                     _bootloader_get_rec_checksumCheck:
 24895                           	opt stack 27
 24896                           
 24897                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 24898                           
 24899                           ;incstack = 0
 24900  007238  0101               	movlb	1	; () banked
 24901  00723A  51DC               	movf	(_hex_file_entry+22)& (0+255),w,b
 24902  00723C  0012               	return	
 24903  00723E                     __end_of_bootloader_get_rec_checksumCheck:
 24904                           	opt stack 0
 24905                           tosu	equ	0xFFF
 24906                           tosh	equ	0xFFE
 24907                           tosl	equ	0xFFD
 24908                           pclath	equ	0xFFA
 24909                           tblptru	equ	0xFF8
 24910                           tblptrh	equ	0xFF7
 24911                           tblptrl	equ	0xFF6
 24912                           tablat	equ	0xFF5
 24913                           prodh	equ	0xFF4
 24914                           prodl	equ	0xFF3
 24915                           intcon	equ	0xFF2
 24916                           intcon2	equ	0xFF1
 24917                           intcon3	equ	0xFF0
 24918                           indf0	equ	0xFEF
 24919                           postinc0	equ	0xFEE
 24920                           fsr0h	equ	0xFEA
 24921                           fsr0l	equ	0xFE9
 24922                           wreg	equ	0xFE8
 24923                           indf1	equ	0xFE7
 24924                           postdec1	equ	0xFE5
 24925                           plusw1	equ	0xFE3
 24926                           fsr1h	equ	0xFE2
 24927                           fsr1l	equ	0xFE1
 24928                           indf2	equ	0xFDF
 24929                           postinc2	equ	0xFDE
 24930                           postdec2	equ	0xFDD
 24931                           plusw2	equ	0xFDB
 24932                           fsr2h	equ	0xFDA
 24933                           fsr2l	equ	0xFD9
 24934                           status	equ	0xFD8
 24935                           
 24936 ;; *************** function _bootloader_get_rec_checksum *****************
 24937 ;; Defined at:
 24938 ;;		line 504 in file "bootloader.c"
 24939 ;; Parameters:    Size  Location     Type
 24940 ;;		None
 24941 ;; Auto vars:     Size  Location     Type
 24942 ;;		None
 24943 ;; Return value:  Size  Location     Type
 24944 ;;                  1    wreg      unsigned char 
 24945 ;; Registers used:
 24946 ;;		wreg, status,2
 24947 ;; Tracked objects:
 24948 ;;		On entry : 0/0
 24949 ;;		On exit  : 0/0
 24950 ;;		Unchanged: 0/0
 24951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24956 ;;Total ram usage:        0 bytes
 24957 ;; Hardware stack levels used:    1
 24958 ;; This function calls:
 24959 ;;		Nothing
 24960 ;; This function is called by:
 24961 ;;		__fill_buffer_get_bootloader_details
 24962 ;; This function uses a non-reentrant model
 24963 ;;
 24964                           
 24965                           	psect	text123
 24966  00723E                     __ptext123:
 24967                           	opt stack 0
 24968  00723E                     _bootloader_get_rec_checksum:
 24969                           	opt stack 27
 24970                           
 24971                           ;bootloader.c: 506: return hex_file_entry.checksum;
 24972                           
 24973                           ; BSR set to: 1
 24974                           ;incstack = 0
 24975  00723E  0101               	movlb	1	; () banked
 24976  007240  51DB               	movf	(_hex_file_entry+21)& (0+255),w,b
 24977  007242  0012               	return	
 24978  007244                     __end_of_bootloader_get_rec_checksum:
 24979                           	opt stack 0
 24980                           tosu	equ	0xFFF
 24981                           tosh	equ	0xFFE
 24982                           tosl	equ	0xFFD
 24983                           pclath	equ	0xFFA
 24984                           tblptru	equ	0xFF8
 24985                           tblptrh	equ	0xFF7
 24986                           tblptrl	equ	0xFF6
 24987                           tablat	equ	0xFF5
 24988                           prodh	equ	0xFF4
 24989                           prodl	equ	0xFF3
 24990                           intcon	equ	0xFF2
 24991                           intcon2	equ	0xFF1
 24992                           intcon3	equ	0xFF0
 24993                           indf0	equ	0xFEF
 24994                           postinc0	equ	0xFEE
 24995                           fsr0h	equ	0xFEA
 24996                           fsr0l	equ	0xFE9
 24997                           wreg	equ	0xFE8
 24998                           indf1	equ	0xFE7
 24999                           postdec1	equ	0xFE5
 25000                           plusw1	equ	0xFE3
 25001                           fsr1h	equ	0xFE2
 25002                           fsr1l	equ	0xFE1
 25003                           indf2	equ	0xFDF
 25004                           postinc2	equ	0xFDE
 25005                           postdec2	equ	0xFDD
 25006                           plusw2	equ	0xFDB
 25007                           fsr2h	equ	0xFDA
 25008                           fsr2l	equ	0xFD9
 25009                           status	equ	0xFD8
 25010                           
 25011 ;; *************** function _api_parse *****************
 25012 ;; Defined at:
 25013 ;;		line 91 in file "api.c"
 25014 ;; Parameters:    Size  Location     Type
 25015 ;;  inBuffer        2   53[COMRAM] PTR unsigned char 
 25016 ;;		 -> ReceivedDataBuffer(64), 
 25017 ;;  receivedData    1   55[COMRAM] unsigned char 
 25018 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25019 ;;		 -> ToSendDataBuffer(64), 
 25020 ;; Auto vars:     Size  Location     Type
 25021 ;;  out_idx_ptr     2   60[COMRAM] PTR unsigned char 
 25022 ;;		 -> api_parse@out_idx(1), 
 25023 ;;  in_idx          1   63[COMRAM] unsigned char 
 25024 ;;  out_idx         1   62[COMRAM] unsigned char 
 25025 ;; Return value:  Size  Location     Type
 25026 ;;                  1    wreg      void 
 25027 ;; Registers used:
 25028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25029 ;; Tracked objects:
 25030 ;;		On entry : 0/0
 25031 ;;		On exit  : 0/0
 25032 ;;		Unchanged: 0/0
 25033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25034 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25037 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25038 ;;Total ram usage:       11 bytes
 25039 ;; Hardware stack levels used:    1
 25040 ;; Hardware stack levels required when called:    8
 25041 ;; This function calls:
 25042 ;;		__parse_command_long
 25043 ;;		__parse_command_short
 25044 ;; This function is called by:
 25045 ;;		_APP_DeviceCustomHIDTasks
 25046 ;; This function uses a non-reentrant model
 25047 ;;
 25048                           
 25049                           	psect	text124
 25050  003726                     __ptext124:
 25051                           	opt stack 0
 25052  003726                     _api_parse:
 25053                           	opt stack 21
 25054                           
 25055                           ;api.c: 95: uint8_t in_idx;;api.c: 96: uint8_t out_idx;;api.c: 97: uint8_t *out_idx_ptr;
      +                          ;api.c: 99: out_idx = 0;
 25056                           
 25057                           ; BSR set to: 1
 25058                           ;incstack = 0
 25059  003726  0E00               	movlw	0
 25060  003728  6E3F               	movwf	api_parse@out_idx,c
 25061                           
 25062                           ;api.c: 100: out_idx_ptr = &out_idx;
 25063  00372A  0E3F               	movlw	low api_parse@out_idx
 25064  00372C  6E3D               	movwf	api_parse@out_idx_ptr,c
 25065  00372E  0E00               	movlw	high api_parse@out_idx
 25066  003730  6E3E               	movwf	api_parse@out_idx_ptr+1,c
 25067                           
 25068                           ;api.c: 102: if(inBuffer[0]>0x7F)
 25069  003732  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25070  003736  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25071  00373A  0E7F               	movlw	127
 25072  00373C  64DF               	cpfsgt	indf2,c
 25073  00373E  D001               	goto	l2661
 25074  003740  0012               	return	
 25075  003742                     l2661:
 25076                           
 25077                           ;api.c: 107: };api.c: 109: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25078  003742  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25079  003746  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25080  00374A  0E20               	movlw	32
 25081  00374C  18DE               	xorwf	postinc2,w,c
 25082  00374E  B4D8               	btfsc	status,2,c
 25083  003750  0012               	return	
 25084                           
 25085                           ;api.c: 114: };api.c: 116: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 25086                           
 25087                           ;api.c: 110: {;api.c: 113: return;
 25088  003752  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25089  003756  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25090  00375A  50DF               	movf	indf2,w,c
 25091  00375C  A4D8               	btfss	status,2,c
 25092  00375E  D018               	goto	l2664
 25093                           
 25094                           ;api.c: 117: {;api.c: 119: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 25095  003760  C039  FFD9         	movff	api_parse@outBuffer,fsr2l
 25096  003764  C03A  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 25097  003768  0E00               	movlw	0
 25098  00376A  6EDF               	movwf	indf2,c
 25099                           
 25100                           ;api.c: 122: outBuffer[1] = 0x4B16 >> 8;
 25101  00376C  EE20 F001          	lfsr	2,1
 25102  003770  5039               	movf	api_parse@outBuffer,w,c
 25103  003772  26D9               	addwf	fsr2l,f,c
 25104  003774  503A               	movf	api_parse@outBuffer+1,w,c
 25105  003776  22DA               	addwfc	fsr2h,f,c
 25106  003778  0E4B               	movlw	75
 25107  00377A  6EDF               	movwf	indf2,c
 25108                           
 25109                           ;api.c: 123: outBuffer[2] = (uint8_t) 0x4B16;
 25110  00377C  EE20 F002          	lfsr	2,2
 25111  003780  5039               	movf	api_parse@outBuffer,w,c
 25112  003782  26D9               	addwf	fsr2l,f,c
 25113  003784  503A               	movf	api_parse@outBuffer+1,w,c
 25114  003786  22DA               	addwfc	fsr2h,f,c
 25115  003788  0E16               	movlw	22
 25116  00378A  6EDF               	movwf	indf2,c
 25117                           
 25118                           ;api.c: 126: out_idx = 3;
 25119  00378C  0E03               	movlw	3
 25120  00378E  6E3F               	movwf	api_parse@out_idx,c
 25121  003790                     l2664:
 25122                           
 25123                           ;api.c: 127: };api.c: 129: in_idx = 1;
 25124  003790  0E01               	movlw	1
 25125  003792  6E40               	movwf	api_parse@in_idx,c
 25126                           
 25127                           ;api.c: 130: while(in_idx<receivedDataLength)
 25128  003794  D055               	goto	l2670
 25129  003796                     
 25130                           ;api.c: 131: {;api.c: 133: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 25131  003796  5040               	movf	api_parse@in_idx,w,c
 25132  003798  0D01               	mullw	1
 25133  00379A  50F3               	movf	prodl,w,c
 25134  00379C  2436               	addwf	api_parse@inBuffer,w,c
 25135  00379E  6ED9               	movwf	fsr2l,c
 25136  0037A0  50F4               	movf	prodh,w,c
 25137  0037A2  2037               	addwfc	api_parse@inBuffer+1,w,c
 25138  0037A4  6EDA               	movwf	fsr2h,c
 25139  0037A6  0E99               	movlw	153
 25140  0037A8  18DE               	xorwf	postinc2,w,c
 25141  0037AA  B4D8               	btfsc	status,2,c
 25142  0037AC  0012               	return	
 25143  0037AE  D02D               	goto	l2668
 25144  0037B0                     
 25145                           ;api.c: 141: _parse_command_short(inBuffer[in_idx]);
 25146  0037B0  5040               	movf	api_parse@in_idx,w,c
 25147  0037B2  0D01               	mullw	1
 25148  0037B4  50F3               	movf	prodl,w,c
 25149  0037B6  2436               	addwf	api_parse@inBuffer,w,c
 25150  0037B8  6ED9               	movwf	fsr2l,c
 25151  0037BA  50F4               	movf	prodh,w,c
 25152  0037BC  2037               	addwfc	api_parse@inBuffer+1,w,c
 25153  0037BE  6EDA               	movwf	fsr2h,c
 25154  0037C0  50DF               	movf	indf2,w,c
 25155  0037C2  EC85  F02C         	call	__parse_command_short
 25156  0037C6  D00B               	goto	l13633
 25157  0037C8                     
 25158                           ;api.c: 146: _parse_command_short(inBuffer[in_idx]);
 25159  0037C8  5040               	movf	api_parse@in_idx,w,c
 25160  0037CA  0D01               	mullw	1
 25161  0037CC  50F3               	movf	prodl,w,c
 25162  0037CE  2436               	addwf	api_parse@inBuffer,w,c
 25163  0037D0  6ED9               	movwf	fsr2l,c
 25164  0037D2  50F4               	movf	prodh,w,c
 25165  0037D4  2037               	addwfc	api_parse@inBuffer+1,w,c
 25166  0037D6  6EDA               	movwf	fsr2h,c
 25167  0037D8  50DF               	movf	indf2,w,c
 25168  0037DA  EC85  F02C         	call	__parse_command_short
 25169  0037DE                     l13633:
 25170                           
 25171                           ;api.c: 147: ++in_idx;
 25172  0037DE  2A40               	incf	api_parse@in_idx,f,c
 25173                           
 25174                           ;api.c: 148: break;
 25175  0037E0  D02F               	goto	l2670
 25176  0037E2                     
 25177                           ;api.c: 151: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 25178  0037E2  5040               	movf	api_parse@in_idx,w,c
 25179  0037E4  0D01               	mullw	1
 25180  0037E6  50F3               	movf	prodl,w,c
 25181  0037E8  2436               	addwf	api_parse@inBuffer,w,c
 25182  0037EA  6E2F               	movwf	__parse_command_long@data,c
 25183  0037EC  50F4               	movf	prodh,w,c
 25184  0037EE  2037               	addwfc	api_parse@inBuffer+1,w,c
 25185  0037F0  6E30               	movwf	__parse_command_long@data+1,c
 25186  0037F2  C039  F031         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 25187  0037F6  C03A  F032         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 25188  0037FA  C03D  F033         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 25189  0037FE  C03E  F034         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 25190  003802  EC9F  F035         	call	__parse_command_long	;wreg free
 25191  003806  2640               	addwf	api_parse@in_idx,f,c
 25192                           
 25193                           ;api.c: 152: break;
 25194  003808  D01B               	goto	l2670
 25195  00380A                     l2668:
 25196  00380A  5040               	movf	api_parse@in_idx,w,c
 25197  00380C  0D01               	mullw	1
 25198  00380E  50F3               	movf	prodl,w,c
 25199  003810  2436               	addwf	api_parse@inBuffer,w,c
 25200  003812  6ED9               	movwf	fsr2l,c
 25201  003814  50F4               	movf	prodh,w,c
 25202  003816  2037               	addwfc	api_parse@inBuffer+1,w,c
 25203  003818  6EDA               	movwf	fsr2h,c
 25204  00381A  50DF               	movf	indf2,w,c
 25205  00381C  0BF0               	andlw	240
 25206  00381E  6E3B               	movwf	??_api_parse& (0+255),c
 25207  003820  6A3C               	clrf	(??_api_parse+1)& (0+255),c
 25208                           
 25209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25210                           ; Switch size 1, requested type "space"
 25211                           ; Number of cases is 1, Range of values is 0 to 0
 25212                           ; switch strategies available:
 25213                           ; Name         Instructions Cycles
 25214                           ; simple_byte            4     3 (average)
 25215                           ;	Chosen strategy is simple_byte
 25216  003822  503C               	movf	??_api_parse+1,w,c
 25217  003824  0A00               	xorlw	0	; case 0
 25218  003826  A4D8               	btfss	status,2,c
 25219  003828  0012               	return	
 25220                           
 25221                           ; Switch size 1, requested type "space"
 25222                           ; Number of cases is 3, Range of values is 32 to 80
 25223                           ; switch strategies available:
 25224                           ; Name         Instructions Cycles
 25225                           ; simple_byte           10     6 (average)
 25226                           ;	Chosen strategy is simple_byte
 25227  00382A  503B               	movf	??_api_parse,w,c
 25228  00382C  0A20               	xorlw	32	; case 32
 25229  00382E  B4D8               	btfsc	status,2,c
 25230  003830  D7BF               	goto	l2669
 25231  003832  0A10               	xorlw	16	; case 48
 25232  003834  B4D8               	btfsc	status,2,c
 25233  003836  D7C8               	goto	l2671
 25234  003838  0A60               	xorlw	96	; case 80
 25235  00383A  A4D8               	btfss	status,2,c
 25236  00383C  0012               	return	
 25237  00383E  D7D1               	goto	l2672
 25238  003840                     l2670:
 25239  003840  5038               	movf	api_parse@receivedDataLength,w,c
 25240  003842  5C40               	subwf	api_parse@in_idx,w,c
 25241  003844  B0D8               	btfsc	status,0,c
 25242  003846  0012               	return	
 25243  003848  D7A6               	goto	l2666
 25244  00384A                     __end_of_api_parse:
 25245                           	opt stack 0
 25246                           tosu	equ	0xFFF
 25247                           tosh	equ	0xFFE
 25248                           tosl	equ	0xFFD
 25249                           pclath	equ	0xFFA
 25250                           tblptru	equ	0xFF8
 25251                           tblptrh	equ	0xFF7
 25252                           tblptrl	equ	0xFF6
 25253                           tablat	equ	0xFF5
 25254                           prodh	equ	0xFF4
 25255                           prodl	equ	0xFF3
 25256                           intcon	equ	0xFF2
 25257                           intcon2	equ	0xFF1
 25258                           intcon3	equ	0xFF0
 25259                           indf0	equ	0xFEF
 25260                           postinc0	equ	0xFEE
 25261                           fsr0h	equ	0xFEA
 25262                           fsr0l	equ	0xFE9
 25263                           wreg	equ	0xFE8
 25264                           indf1	equ	0xFE7
 25265                           postdec1	equ	0xFE5
 25266                           plusw1	equ	0xFE3
 25267                           fsr1h	equ	0xFE2
 25268                           fsr1l	equ	0xFE1
 25269                           indf2	equ	0xFDF
 25270                           postinc2	equ	0xFDE
 25271                           postdec2	equ	0xFDD
 25272                           plusw2	equ	0xFDB
 25273                           fsr2h	equ	0xFDA
 25274                           fsr2l	equ	0xFD9
 25275                           status	equ	0xFD8
 25276                           
 25277 ;; *************** function __parse_command_short *****************
 25278 ;; Defined at:
 25279 ;;		line 299 in file "api.c"
 25280 ;; Parameters:    Size  Location     Type
 25281 ;;  cmd             1    wreg     unsigned char 
 25282 ;; Auto vars:     Size  Location     Type
 25283 ;;  cmd             1   35[COMRAM] unsigned char 
 25284 ;; Return value:  Size  Location     Type
 25285 ;;                  1    wreg      void 
 25286 ;; Registers used:
 25287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25288 ;; Tracked objects:
 25289 ;;		On entry : 0/0
 25290 ;;		On exit  : 0/0
 25291 ;;		Unchanged: 0/0
 25292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25297 ;;Total ram usage:        1 bytes
 25298 ;; Hardware stack levels used:    1
 25299 ;; Hardware stack levels required when called:    7
 25300 ;; This function calls:
 25301 ;;		_i2c_eeprom_writeByte
 25302 ;;		_reboot
 25303 ;;		_system_delay_ms
 25304 ;; This function is called by:
 25305 ;;		_api_parse
 25306 ;; This function uses a non-reentrant model
 25307 ;;
 25308                           
 25309                           	psect	text125
 25310  00590A                     __ptext125:
 25311                           	opt stack 0
 25312  00590A                     __parse_command_short:
 25313                           	opt stack 21
 25314                           
 25315                           ;incstack = 0
 25316                           ;__parse_command_short@cmd stored from wreg
 25317  00590A  6E24               	movwf	__parse_command_short@cmd,c
 25318                           
 25319                           ;api.c: 301: switch(cmd)
 25320  00590C  D033               	goto	l2699
 25321  00590E                     
 25322                           ;api.c: 304: i2c_eeprom_writeByte(0x100, 0x00);
 25323  00590E  0E01               	movlw	1
 25324  005910  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25325  005912  0E00               	movlw	0
 25326  005914  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25327  005916  0E00               	movlw	0
 25328  005918  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25329  00591A  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
 25330                           
 25331                           ;api.c: 305: system_delay_ms(10);
 25332  00591E  0E0A               	movlw	10
 25333  005920  EC9B  F037         	call	_system_delay_ms
 25334                           
 25335                           ;api.c: 306: reboot();
 25336  005924  EC43  F038         	call	_reboot	;wreg free
 25337                           
 25338                           ;api.c: 307: break;
 25339  005928  0012               	return	
 25340  00592A                     
 25341                           ;api.c: 310: i2c_eeprom_writeByte(0x100, 0x94);
 25342  00592A  0E01               	movlw	1
 25343  00592C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25344  00592E  0E00               	movlw	0
 25345  005930  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25346  005932  0E94               	movlw	148
 25347  005934  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25348  005936  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
 25349                           
 25350                           ;api.c: 311: system_delay_ms(10);
 25351  00593A  0E0A               	movlw	10
 25352  00593C  EC9B  F037         	call	_system_delay_ms
 25353                           
 25354                           ;api.c: 312: reboot();
 25355  005940  EC43  F038         	call	_reboot	;wreg free
 25356                           
 25357                           ;api.c: 313: break;
 25358  005944  0012               	return	
 25359  005946                     
 25360                           ;api.c: 316: i2c_eeprom_writeByte(0x100, 0x78);
 25361  005946  0E01               	movlw	1
 25362  005948  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25363  00594A  0E00               	movlw	0
 25364  00594C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25365  00594E  0E78               	movlw	120
 25366  005950  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25367  005952  ECC1  F034         	call	_i2c_eeprom_writeByte	;wreg free
 25368                           
 25369                           ;api.c: 317: system_delay_ms(10);
 25370  005956  0E0A               	movlw	10
 25371  005958  EC9B  F037         	call	_system_delay_ms
 25372                           
 25373                           ;api.c: 318: reboot();
 25374  00595C  EC43  F038         	call	_reboot	;wreg free
 25375                           
 25376                           ;api.c: 319: break;
 25377  005960  0012               	return	
 25378  005962                     
 25379                           ;api.c: 322: --os.encoderCount;
 25380  005962  0100               	movlb	0	; () banked
 25381  005964  0760               	decf	_os& (0+255),f,b
 25382                           
 25383                           ;api.c: 323: break;
 25384  005966  0012               	return	
 25385  005968                     
 25386                           ;api.c: 326: ++os.encoderCount;
 25387                           
 25388                           ; BSR set to: 0
 25389  005968  0100               	movlb	0	; () banked
 25390  00596A  2B60               	incf	_os& (0+255),f,b
 25391                           
 25392                           ;api.c: 327: break;
 25393  00596C  0012               	return	
 25394  00596E                     
 25395                           ;api.c: 330: ++os.buttonCount;
 25396                           
 25397                           ; BSR set to: 0
 25398  00596E  0100               	movlb	0	; () banked
 25399  005970  2B61               	incf	(_os+1)& (0+255),f,b
 25400                           
 25401                           ; BSR set to: 0
 25402                           ;api.c: 332: }
 25403                           
 25404                           ;api.c: 331: break;
 25405  005972  0012               	return	
 25406  005974                     l2699:
 25407                           
 25408                           ; BSR set to: 0
 25409  005974  5024               	movf	__parse_command_short@cmd,w,c
 25410                           
 25411                           ; Switch size 1, requested type "space"
 25412                           ; Number of cases is 6, Range of values is 32 to 62
 25413                           ; switch strategies available:
 25414                           ; Name         Instructions Cycles
 25415                           ; simple_byte           19    10 (average)
 25416                           ;	Chosen strategy is simple_byte
 25417  005976  0A20               	xorlw	32	; case 32
 25418  005978  B4D8               	btfsc	status,2,c
 25419  00597A  D7C9               	goto	l2700
 25420  00597C  0A01               	xorlw	1	; case 33
 25421  00597E  B4D8               	btfsc	status,2,c
 25422  005980  D7D4               	goto	l2702
 25423  005982  0A03               	xorlw	3	; case 34
 25424  005984  B4D8               	btfsc	status,2,c
 25425  005986  D7DF               	goto	l2703
 25426  005988  0A1E               	xorlw	30	; case 60
 25427  00598A  B4D8               	btfsc	status,2,c
 25428  00598C  D7EA               	goto	l2704
 25429  00598E  0A01               	xorlw	1	; case 61
 25430  005990  B4D8               	btfsc	status,2,c
 25431  005992  D7EA               	goto	l2705
 25432  005994  0A03               	xorlw	3	; case 62
 25433  005996  A4D8               	btfss	status,2,c
 25434  005998  0012               	return	
 25435  00599A  D7E9               	goto	l2706
 25436  00599C                     __end_of__parse_command_short:
 25437                           	opt stack 0
 25438                           tosu	equ	0xFFF
 25439                           tosh	equ	0xFFE
 25440                           tosl	equ	0xFFD
 25441                           pclath	equ	0xFFA
 25442                           tblptru	equ	0xFF8
 25443                           tblptrh	equ	0xFF7
 25444                           tblptrl	equ	0xFF6
 25445                           tablat	equ	0xFF5
 25446                           prodh	equ	0xFF4
 25447                           prodl	equ	0xFF3
 25448                           intcon	equ	0xFF2
 25449                           intcon2	equ	0xFF1
 25450                           intcon3	equ	0xFF0
 25451                           indf0	equ	0xFEF
 25452                           postinc0	equ	0xFEE
 25453                           fsr0h	equ	0xFEA
 25454                           fsr0l	equ	0xFE9
 25455                           wreg	equ	0xFE8
 25456                           indf1	equ	0xFE7
 25457                           postdec1	equ	0xFE5
 25458                           plusw1	equ	0xFE3
 25459                           fsr1h	equ	0xFE2
 25460                           fsr1l	equ	0xFE1
 25461                           indf2	equ	0xFDF
 25462                           postinc2	equ	0xFDE
 25463                           postdec2	equ	0xFDD
 25464                           plusw2	equ	0xFDB
 25465                           fsr2h	equ	0xFDA
 25466                           fsr2l	equ	0xFD9
 25467                           status	equ	0xFD8
 25468                           
 25469 ;; *************** function _system_delay_ms *****************
 25470 ;; Defined at:
 25471 ;;		line 64 in file "os.c"
 25472 ;; Parameters:    Size  Location     Type
 25473 ;;  ms              1    wreg     unsigned char 
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;  ms              1    1[COMRAM] unsigned char 
 25476 ;;  cntr            1    2[COMRAM] unsigned char 
 25477 ;; Return value:  Size  Location     Type
 25478 ;;                  1    wreg      void 
 25479 ;; Registers used:
 25480 ;;		wreg, status,2, status,0, cstack
 25481 ;; Tracked objects:
 25482 ;;		On entry : 0/0
 25483 ;;		On exit  : 0/0
 25484 ;;		Unchanged: 0/0
 25485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25487 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25489 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25490 ;;Total ram usage:        3 bytes
 25491 ;; Hardware stack levels used:    1
 25492 ;; This function calls:
 25493 ;;		Nothing
 25494 ;; This function is called by:
 25495 ;;		_system_minimal_init
 25496 ;;		__ui_encoder
 25497 ;;		__parse_command_short
 25498 ;; This function uses a non-reentrant model
 25499 ;;
 25500                           
 25501                           	psect	text126
 25502  006F36                     __ptext126:
 25503                           	opt stack 0
 25504  006F36                     _system_delay_ms:
 25505                           	opt stack 28
 25506                           
 25507                           ;incstack = 0
 25508                           ;system_delay_ms@ms stored from wreg
 25509  006F36  6E02               	movwf	system_delay_ms@ms,c
 25510                           
 25511                           ;os.c: 66: uint8_t cntr;;os.c: 67: for(cntr=0; cntr<ms; ++cntr)
 25512  006F38  0E00               	movlw	0
 25513  006F3A  6E03               	movwf	system_delay_ms@cntr,c
 25514  006F3C  D009               	goto	l1046
 25515  006F3E                     
 25516                           ;os.c: 68: {;os.c: 69: _delay((unsigned long)((6)*(8000000/4000.0)));
 25517  006F3E  0E10               	movlw	16
 25518  006F40  6E01               	movwf	??_system_delay_ms& (0+255),c
 25519  006F42  0E94               	movlw	148
 25520  006F44                     u13147:
 25521  006F44  2EE8               	decfsz	wreg,f,c
 25522  006F46  D7FE               	bra	u13147
 25523  006F48  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 25524  006F4A  D7FC               	bra	u13147
 25525  006F4C  D000               	nop2	
 25526  006F4E  2A03               	incf	system_delay_ms@cntr,f,c
 25527  006F50                     l1046:
 25528  006F50  5002               	movf	system_delay_ms@ms,w,c
 25529  006F52  5C03               	subwf	system_delay_ms@cntr,w,c
 25530  006F54  B0D8               	btfsc	status,0,c
 25531  006F56  0012               	return	
 25532  006F58  D7F2               	goto	l1047
 25533  006F5A                     __end_of_system_delay_ms:
 25534                           	opt stack 0
 25535                           tosu	equ	0xFFF
 25536                           tosh	equ	0xFFE
 25537                           tosl	equ	0xFFD
 25538                           pclath	equ	0xFFA
 25539                           tblptru	equ	0xFF8
 25540                           tblptrh	equ	0xFF7
 25541                           tblptrl	equ	0xFF6
 25542                           tablat	equ	0xFF5
 25543                           prodh	equ	0xFF4
 25544                           prodl	equ	0xFF3
 25545                           intcon	equ	0xFF2
 25546                           intcon2	equ	0xFF1
 25547                           intcon3	equ	0xFF0
 25548                           indf0	equ	0xFEF
 25549                           postinc0	equ	0xFEE
 25550                           fsr0h	equ	0xFEA
 25551                           fsr0l	equ	0xFE9
 25552                           wreg	equ	0xFE8
 25553                           indf1	equ	0xFE7
 25554                           postdec1	equ	0xFE5
 25555                           plusw1	equ	0xFE3
 25556                           fsr1h	equ	0xFE2
 25557                           fsr1l	equ	0xFE1
 25558                           indf2	equ	0xFDF
 25559                           postinc2	equ	0xFDE
 25560                           postdec2	equ	0xFDD
 25561                           plusw2	equ	0xFDB
 25562                           fsr2h	equ	0xFDA
 25563                           fsr2l	equ	0xFD9
 25564                           status	equ	0xFD8
 25565                           
 25566 ;; *************** function _reboot *****************
 25567 ;; Defined at:
 25568 ;;		line 235 in file "os.c"
 25569 ;; Parameters:    Size  Location     Type
 25570 ;;		None
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;		None
 25573 ;; Return value:  Size  Location     Type
 25574 ;;                  1    wreg      void 
 25575 ;; Registers used:
 25576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/0
 25579 ;;		On exit  : 0/0
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25586 ;;Total ram usage:        0 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; Hardware stack levels required when called:    6
 25589 ;; This function calls:
 25590 ;;		_display_prepare
 25591 ;;		_display_update
 25592 ;;		_ui_get_status
 25593 ;; This function is called by:
 25594 ;;		__ui_encoder
 25595 ;;		__parse_command_short
 25596 ;; This function uses a non-reentrant model
 25597 ;;
 25598                           
 25599                           	psect	text127
 25600  007086                     __ptext127:
 25601                           	opt stack 0
 25602  007086                     _reboot:
 25603                           	opt stack 22
 25604                           
 25605                           ;os.c: 238: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 25606                           
 25607                           ;incstack = 0
 25608  007086  0E80               	movlw	128
 25609  007088  0100               	movlb	0	; () banked
 25610  00708A  6F65               	movwf	(_os+5)& (0+255),b
 25611                           
 25612                           ; BSR set to: 0
 25613                           ;os.c: 239: display_prepare(os.display_mode);
 25614  00708C  5165               	movf	(_os+5)& (0+255),w,b
 25615  00708E  ECD5  F023         	call	_display_prepare
 25616                           
 25617                           ;os.c: 240: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 25618  007092  EC22  F039         	call	_ui_get_status	;wreg free
 25619  007096  0A05               	xorlw	5
 25620  007098  B4D8               	btfsc	status,2,c
 25621                           
 25622                           ;os.c: 241: {;os.c: 242: display_update();
 25623  00709A  ECB3  F02F         	call	_display_update	;wreg free
 25624  00709E                     
 25625                           ;os.c: 243: };os.c: 246: while(1);
 25626  00709E  D7FF               	goto	l1073
 25627  0070A0                     __end_of_reboot:
 25628                           	opt stack 0
 25629                           tosu	equ	0xFFF
 25630                           tosh	equ	0xFFE
 25631                           tosl	equ	0xFFD
 25632                           pclath	equ	0xFFA
 25633                           tblptru	equ	0xFF8
 25634                           tblptrh	equ	0xFF7
 25635                           tblptrl	equ	0xFF6
 25636                           tablat	equ	0xFF5
 25637                           prodh	equ	0xFF4
 25638                           prodl	equ	0xFF3
 25639                           intcon	equ	0xFF2
 25640                           intcon2	equ	0xFF1
 25641                           intcon3	equ	0xFF0
 25642                           indf0	equ	0xFEF
 25643                           postinc0	equ	0xFEE
 25644                           fsr0h	equ	0xFEA
 25645                           fsr0l	equ	0xFE9
 25646                           wreg	equ	0xFE8
 25647                           indf1	equ	0xFE7
 25648                           postdec1	equ	0xFE5
 25649                           plusw1	equ	0xFE3
 25650                           fsr1h	equ	0xFE2
 25651                           fsr1l	equ	0xFE1
 25652                           indf2	equ	0xFDF
 25653                           postinc2	equ	0xFDE
 25654                           postdec2	equ	0xFDD
 25655                           plusw2	equ	0xFDB
 25656                           fsr2h	equ	0xFDA
 25657                           fsr2l	equ	0xFD9
 25658                           status	equ	0xFD8
 25659                           
 25660 ;; *************** function _ui_get_status *****************
 25661 ;; Defined at:
 25662 ;;		line 106 in file "ui.c"
 25663 ;; Parameters:    Size  Location     Type
 25664 ;;		None
 25665 ;; Auto vars:     Size  Location     Type
 25666 ;;		None
 25667 ;; Return value:  Size  Location     Type
 25668 ;;                  1    wreg      enum E7918
 25669 ;; Registers used:
 25670 ;;		wreg, status,2
 25671 ;; Tracked objects:
 25672 ;;		On entry : 0/0
 25673 ;;		On exit  : 0/0
 25674 ;;		Unchanged: 0/0
 25675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25680 ;;Total ram usage:        0 bytes
 25681 ;; Hardware stack levels used:    1
 25682 ;; This function calls:
 25683 ;;		Nothing
 25684 ;; This function is called by:
 25685 ;;		_main
 25686 ;;		_reboot
 25687 ;;		__fill_buffer_get_status
 25688 ;; This function uses a non-reentrant model
 25689 ;;
 25690                           
 25691                           	psect	text128
 25692  007244                     __ptext128:
 25693                           	opt stack 0
 25694  007244                     _ui_get_status:
 25695                           	opt stack 27
 25696                           
 25697                           ;ui.c: 108: return userInterfaceStatus;
 25698                           
 25699                           ;incstack = 0
 25700  007244  0100               	movlb	0	; () banked
 25701  007246  5197               	movf	_userInterfaceStatus& (0+255),w,b
 25702  007248  0012               	return	
 25703  00724A                     __end_of_ui_get_status:
 25704                           	opt stack 0
 25705                           tosu	equ	0xFFF
 25706                           tosh	equ	0xFFE
 25707                           tosl	equ	0xFFD
 25708                           pclath	equ	0xFFA
 25709                           tblptru	equ	0xFF8
 25710                           tblptrh	equ	0xFF7
 25711                           tblptrl	equ	0xFF6
 25712                           tablat	equ	0xFF5
 25713                           prodh	equ	0xFF4
 25714                           prodl	equ	0xFF3
 25715                           intcon	equ	0xFF2
 25716                           intcon2	equ	0xFF1
 25717                           intcon3	equ	0xFF0
 25718                           indf0	equ	0xFEF
 25719                           postinc0	equ	0xFEE
 25720                           fsr0h	equ	0xFEA
 25721                           fsr0l	equ	0xFE9
 25722                           wreg	equ	0xFE8
 25723                           indf1	equ	0xFE7
 25724                           postdec1	equ	0xFE5
 25725                           plusw1	equ	0xFE3
 25726                           fsr1h	equ	0xFE2
 25727                           fsr1l	equ	0xFE1
 25728                           indf2	equ	0xFDF
 25729                           postinc2	equ	0xFDE
 25730                           postdec2	equ	0xFDD
 25731                           plusw2	equ	0xFDB
 25732                           fsr2h	equ	0xFDA
 25733                           fsr2l	equ	0xFD9
 25734                           status	equ	0xFD8
 25735                           
 25736 ;; *************** function _display_update *****************
 25737 ;; Defined at:
 25738 ;;		line 568 in file "display.c"
 25739 ;; Parameters:    Size  Location     Type
 25740 ;;		None
 25741 ;; Auto vars:     Size  Location     Type
 25742 ;;		None
 25743 ;; Return value:  Size  Location     Type
 25744 ;;                  1    wreg      void 
 25745 ;; Registers used:
 25746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25747 ;; Tracked objects:
 25748 ;;		On entry : 0/0
 25749 ;;		On exit  : 0/0
 25750 ;;		Unchanged: 0/0
 25751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25756 ;;Total ram usage:        0 bytes
 25757 ;; Hardware stack levels used:    1
 25758 ;; Hardware stack levels required when called:    4
 25759 ;; This function calls:
 25760 ;;		_i2c_display_cursor
 25761 ;;		_i2c_display_write_fixed
 25762 ;; This function is called by:
 25763 ;;		_main
 25764 ;;		_reboot
 25765 ;; This function uses a non-reentrant model
 25766 ;;
 25767                           
 25768                           	psect	text129
 25769  005F66                     __ptext129:
 25770                           	opt stack 0
 25771  005F66                     _display_update:
 25772                           	opt stack 23
 25773                           
 25774                           ;display.c: 570: i2c_display_cursor(0, 0);
 25775                           
 25776                           ; BSR set to: 0
 25777                           ;incstack = 0
 25778  005F66  0E00               	movlw	0
 25779  005F68  6E0E               	movwf	i2c_display_cursor@position,c
 25780  005F6A  0E00               	movlw	0
 25781  005F6C  ECEF  F037         	call	_i2c_display_cursor
 25782                           
 25783                           ;display.c: 571: i2c_display_write_fixed(&display_content[0][0], 20);
 25784  005F70  0E76               	movlw	low _display_content
 25785  005F72  6E06               	movwf	i2c_display_write_fixed@data,c
 25786  005F74  0E01               	movlw	high _display_content
 25787  005F76  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25788  005F78  0E14               	movlw	20
 25789  005F7A  6E08               	movwf	i2c_display_write_fixed@length,c
 25790  005F7C  EC79  F033         	call	_i2c_display_write_fixed	;wreg free
 25791                           
 25792                           ;display.c: 572: i2c_display_cursor(1, 0);
 25793  005F80  0E00               	movlw	0
 25794  005F82  6E0E               	movwf	i2c_display_cursor@position,c
 25795  005F84  0E01               	movlw	1
 25796  005F86  ECEF  F037         	call	_i2c_display_cursor
 25797                           
 25798                           ;display.c: 573: i2c_display_write_fixed(&display_content[1][0], 20);
 25799  005F8A  0E8A               	movlw	low (_display_content+20)
 25800  005F8C  6E06               	movwf	i2c_display_write_fixed@data,c
 25801  005F8E  0E01               	movlw	high (_display_content+20)
 25802  005F90  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25803  005F92  0E14               	movlw	20
 25804  005F94  6E08               	movwf	i2c_display_write_fixed@length,c
 25805  005F96  EC79  F033         	call	_i2c_display_write_fixed	;wreg free
 25806                           
 25807                           ;display.c: 574: i2c_display_cursor(2, 0);
 25808  005F9A  0E00               	movlw	0
 25809  005F9C  6E0E               	movwf	i2c_display_cursor@position,c
 25810  005F9E  0E02               	movlw	2
 25811  005FA0  ECEF  F037         	call	_i2c_display_cursor
 25812                           
 25813                           ;display.c: 575: i2c_display_write_fixed(&display_content[2][0], 20);
 25814  005FA4  0E9E               	movlw	low (_display_content+40)
 25815  005FA6  6E06               	movwf	i2c_display_write_fixed@data,c
 25816  005FA8  0E01               	movlw	high (_display_content+40)
 25817  005FAA  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25818  005FAC  0E14               	movlw	20
 25819  005FAE  6E08               	movwf	i2c_display_write_fixed@length,c
 25820  005FB0  EC79  F033         	call	_i2c_display_write_fixed	;wreg free
 25821                           
 25822                           ;display.c: 576: i2c_display_cursor(3, 0);
 25823  005FB4  0E00               	movlw	0
 25824  005FB6  6E0E               	movwf	i2c_display_cursor@position,c
 25825  005FB8  0E03               	movlw	3
 25826  005FBA  ECEF  F037         	call	_i2c_display_cursor
 25827                           
 25828                           ;display.c: 577: i2c_display_write_fixed(&display_content[3][0], 20);
 25829  005FBE  0EB2               	movlw	low (_display_content+60)
 25830  005FC0  6E06               	movwf	i2c_display_write_fixed@data,c
 25831  005FC2  0E01               	movlw	high (_display_content+60)
 25832  005FC4  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25833  005FC6  0E14               	movlw	20
 25834  005FC8  6E08               	movwf	i2c_display_write_fixed@length,c
 25835  005FCA  EC79  F033         	call	_i2c_display_write_fixed	;wreg free
 25836  005FCE  0012               	return		;funcret
 25837  005FD0                     __end_of_display_update:
 25838                           	opt stack 0
 25839                           tosu	equ	0xFFF
 25840                           tosh	equ	0xFFE
 25841                           tosl	equ	0xFFD
 25842                           pclath	equ	0xFFA
 25843                           tblptru	equ	0xFF8
 25844                           tblptrh	equ	0xFF7
 25845                           tblptrl	equ	0xFF6
 25846                           tablat	equ	0xFF5
 25847                           prodh	equ	0xFF4
 25848                           prodl	equ	0xFF3
 25849                           intcon	equ	0xFF2
 25850                           intcon2	equ	0xFF1
 25851                           intcon3	equ	0xFF0
 25852                           indf0	equ	0xFEF
 25853                           postinc0	equ	0xFEE
 25854                           fsr0h	equ	0xFEA
 25855                           fsr0l	equ	0xFE9
 25856                           wreg	equ	0xFE8
 25857                           indf1	equ	0xFE7
 25858                           postdec1	equ	0xFE5
 25859                           plusw1	equ	0xFE3
 25860                           fsr1h	equ	0xFE2
 25861                           fsr1l	equ	0xFE1
 25862                           indf2	equ	0xFDF
 25863                           postinc2	equ	0xFDE
 25864                           postdec2	equ	0xFDD
 25865                           plusw2	equ	0xFDB
 25866                           fsr2h	equ	0xFDA
 25867                           fsr2l	equ	0xFD9
 25868                           status	equ	0xFD8
 25869                           
 25870 ;; *************** function _i2c_display_write_fixed *****************
 25871 ;; Defined at:
 25872 ;;		line 395 in file "i2c.c"
 25873 ;; Parameters:    Size  Location     Type
 25874 ;;  data            2    5[COMRAM] PTR unsigned char 
 25875 ;;		 -> display_content(80), 
 25876 ;;  length          1    7[COMRAM] unsigned char 
 25877 ;; Auto vars:     Size  Location     Type
 25878 ;;  pos             1    8[COMRAM] unsigned char 
 25879 ;; Return value:  Size  Location     Type
 25880 ;;                  1    wreg      void 
 25881 ;; Registers used:
 25882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25883 ;; Tracked objects:
 25884 ;;		On entry : 0/0
 25885 ;;		On exit  : 0/0
 25886 ;;		Unchanged: 0/0
 25887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25888 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25892 ;;Total ram usage:        4 bytes
 25893 ;; Hardware stack levels used:    1
 25894 ;; Hardware stack levels required when called:    1
 25895 ;; This function calls:
 25896 ;;		__i2c_send
 25897 ;;		__i2c_start
 25898 ;;		__i2c_stop
 25899 ;;		__i2c_wait_idle
 25900 ;; This function is called by:
 25901 ;;		_display_update
 25902 ;; This function uses a non-reentrant model
 25903 ;;
 25904                           
 25905                           	psect	text130
 25906  0066F2                     __ptext130:
 25907                           	opt stack 0
 25908  0066F2                     _i2c_display_write_fixed:
 25909                           	opt stack 25
 25910                           
 25911                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
 25912                           
 25913                           ;incstack = 0
 25914  0066F2  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 25915                           
 25916                           ;i2c.c: 403: _i2c_start();
 25917  0066F6  EC0E  F039         	call	__i2c_start	;wreg free
 25918                           
 25919                           ;i2c.c: 404: _i2c_wait_idle();
 25920  0066FA  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 25921                           
 25922                           ;i2c.c: 405: _i2c_send(0b01111000);
 25923  0066FE  0E78               	movlw	120
 25924  006700  EC12  F039         	call	__i2c_send
 25925                           
 25926                           ;i2c.c: 406: _i2c_wait_idle();
 25927  006704  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 25928                           
 25929                           ;i2c.c: 407: _i2c_send(0b01000000);
 25930  006708  0E40               	movlw	64
 25931  00670A  EC12  F039         	call	__i2c_send
 25932                           
 25933                           ;i2c.c: 408: _i2c_wait_idle();
 25934  00670E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 25935                           
 25936                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
 25937  006712  0E00               	movlw	0
 25938  006714  6E09               	movwf	i2c_display_write_fixed@pos,c
 25939  006716  D00E               	goto	l1213
 25940  006718                     
 25941                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
 25942  006718  5009               	movf	i2c_display_write_fixed@pos,w,c
 25943  00671A  0D01               	mullw	1
 25944  00671C  50F3               	movf	prodl,w,c
 25945  00671E  2406               	addwf	i2c_display_write_fixed@data,w,c
 25946  006720  6ED9               	movwf	fsr2l,c
 25947  006722  50F4               	movf	prodh,w,c
 25948  006724  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 25949  006726  6EDA               	movwf	fsr2h,c
 25950  006728  50DF               	movf	indf2,w,c
 25951  00672A  EC12  F039         	call	__i2c_send
 25952                           
 25953                           ;i2c.c: 414: _i2c_wait_idle();
 25954  00672E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 25955  006732  2A09               	incf	i2c_display_write_fixed@pos,f,c
 25956  006734                     l1213:
 25957  006734  5008               	movf	i2c_display_write_fixed@length,w,c
 25958  006736  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 25959  006738  A0D8               	btfss	status,0,c
 25960  00673A  D7EE               	goto	l1214
 25961                           
 25962                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
 25963  00673C  EC0A  F039         	call	__i2c_stop	;wreg free
 25964  006740  0012               	return		;funcret
 25965  006742                     __end_of_i2c_display_write_fixed:
 25966                           	opt stack 0
 25967                           tosu	equ	0xFFF
 25968                           tosh	equ	0xFFE
 25969                           tosl	equ	0xFFD
 25970                           pclath	equ	0xFFA
 25971                           tblptru	equ	0xFF8
 25972                           tblptrh	equ	0xFF7
 25973                           tblptrl	equ	0xFF6
 25974                           tablat	equ	0xFF5
 25975                           prodh	equ	0xFF4
 25976                           prodl	equ	0xFF3
 25977                           intcon	equ	0xFF2
 25978                           intcon2	equ	0xFF1
 25979                           intcon3	equ	0xFF0
 25980                           indf0	equ	0xFEF
 25981                           postinc0	equ	0xFEE
 25982                           fsr0h	equ	0xFEA
 25983                           fsr0l	equ	0xFE9
 25984                           wreg	equ	0xFE8
 25985                           indf1	equ	0xFE7
 25986                           postdec1	equ	0xFE5
 25987                           plusw1	equ	0xFE3
 25988                           fsr1h	equ	0xFE2
 25989                           fsr1l	equ	0xFE1
 25990                           indf2	equ	0xFDF
 25991                           postinc2	equ	0xFDE
 25992                           postdec2	equ	0xFDD
 25993                           plusw2	equ	0xFDB
 25994                           fsr2h	equ	0xFDA
 25995                           fsr2l	equ	0xFD9
 25996                           status	equ	0xFD8
 25997                           
 25998 ;; *************** function _i2c_display_cursor *****************
 25999 ;; Defined at:
 26000 ;;		line 355 in file "i2c.c"
 26001 ;; Parameters:    Size  Location     Type
 26002 ;;  line            1    wreg     unsigned char 
 26003 ;;  position        1   13[COMRAM] unsigned char 
 26004 ;; Auto vars:     Size  Location     Type
 26005 ;;  line            1   14[COMRAM] unsigned char 
 26006 ;;  address         1   15[COMRAM] unsigned char 
 26007 ;; Return value:  Size  Location     Type
 26008 ;;                  1    wreg      void 
 26009 ;; Registers used:
 26010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26011 ;; Tracked objects:
 26012 ;;		On entry : 0/0
 26013 ;;		On exit  : 0/0
 26014 ;;		Unchanged: 0/0
 26015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26016 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26019 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26020 ;;Total ram usage:        3 bytes
 26021 ;; Hardware stack levels used:    1
 26022 ;; Hardware stack levels required when called:    3
 26023 ;; This function calls:
 26024 ;;		__ic2_display_set_ddram_address
 26025 ;; This function is called by:
 26026 ;;		_display_update
 26027 ;; This function uses a non-reentrant model
 26028 ;;
 26029                           
 26030                           	psect	text131
 26031  006FDE                     __ptext131:
 26032                           	opt stack 0
 26033  006FDE                     _i2c_display_cursor:
 26034                           	opt stack 23
 26035                           
 26036                           ;incstack = 0
 26037                           ;i2c_display_cursor@line stored from wreg
 26038  006FDE  6E0F               	movwf	i2c_display_cursor@line,c
 26039                           
 26040                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
 26041  006FE0  0E03               	movlw	3
 26042  006FE2  160F               	andwf	i2c_display_cursor@line,f,c
 26043                           
 26044                           ;i2c.c: 361: address = line<<5;
 26045  006FE4  380F               	swapf	i2c_display_cursor@line,w,c
 26046  006FE6  46E8               	rlncf	wreg,f,c
 26047  006FE8  0BE0               	andlw	224
 26048  006FEA  6E10               	movwf	i2c_display_cursor@address,c
 26049                           
 26050                           ;i2c.c: 362: position &= 0b11111;
 26051  006FEC  0E1F               	movlw	31
 26052  006FEE  160E               	andwf	i2c_display_cursor@position,f,c
 26053                           
 26054                           ;i2c.c: 363: address |= position;
 26055  006FF0  500E               	movf	i2c_display_cursor@position,w,c
 26056  006FF2  1210               	iorwf	i2c_display_cursor@address,f,c
 26057                           
 26058                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
 26059  006FF4  5010               	movf	i2c_display_cursor@address,w,c
 26060  006FF6  ECDF  F037         	call	__ic2_display_set_ddram_address
 26061  006FFA  0012               	return		;funcret
 26062  006FFC                     __end_of_i2c_display_cursor:
 26063                           	opt stack 0
 26064                           tosu	equ	0xFFF
 26065                           tosh	equ	0xFFE
 26066                           tosl	equ	0xFFD
 26067                           pclath	equ	0xFFA
 26068                           tblptru	equ	0xFF8
 26069                           tblptrh	equ	0xFF7
 26070                           tblptrl	equ	0xFF6
 26071                           tablat	equ	0xFF5
 26072                           prodh	equ	0xFF4
 26073                           prodl	equ	0xFF3
 26074                           intcon	equ	0xFF2
 26075                           intcon2	equ	0xFF1
 26076                           intcon3	equ	0xFF0
 26077                           indf0	equ	0xFEF
 26078                           postinc0	equ	0xFEE
 26079                           fsr0h	equ	0xFEA
 26080                           fsr0l	equ	0xFE9
 26081                           wreg	equ	0xFE8
 26082                           indf1	equ	0xFE7
 26083                           postdec1	equ	0xFE5
 26084                           plusw1	equ	0xFE3
 26085                           fsr1h	equ	0xFE2
 26086                           fsr1l	equ	0xFE1
 26087                           indf2	equ	0xFDF
 26088                           postinc2	equ	0xFDE
 26089                           postdec2	equ	0xFDD
 26090                           plusw2	equ	0xFDB
 26091                           fsr2h	equ	0xFDA
 26092                           fsr2l	equ	0xFD9
 26093                           status	equ	0xFD8
 26094                           
 26095 ;; *************** function __ic2_display_set_ddram_address *****************
 26096 ;; Defined at:
 26097 ;;		line 326 in file "i2c.c"
 26098 ;; Parameters:    Size  Location     Type
 26099 ;;  address         1    wreg     unsigned char 
 26100 ;; Auto vars:     Size  Location     Type
 26101 ;;  address         1   10[COMRAM] unsigned char 
 26102 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26103 ;; Return value:  Size  Location     Type
 26104 ;;                  1    wreg      void 
 26105 ;; Registers used:
 26106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26107 ;; Tracked objects:
 26108 ;;		On entry : 0/0
 26109 ;;		On exit  : 0/0
 26110 ;;		Unchanged: 0/0
 26111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26113 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26115 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26116 ;;Total ram usage:        3 bytes
 26117 ;; Hardware stack levels used:    1
 26118 ;; Hardware stack levels required when called:    2
 26119 ;; This function calls:
 26120 ;;		__i2c_write
 26121 ;; This function is called by:
 26122 ;;		_i2c_display_cursor
 26123 ;; This function uses a non-reentrant model
 26124 ;;
 26125                           
 26126                           	psect	text132
 26127  006FBE                     __ptext132:
 26128                           	opt stack 0
 26129  006FBE                     __ic2_display_set_ddram_address:
 26130                           	opt stack 23
 26131                           
 26132                           ;incstack = 0
 26133                           ;__ic2_display_set_ddram_address@address stored from wreg
 26134  006FBE  6E0B               	movwf	__ic2_display_set_ddram_address@address,c
 26135                           
 26136                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
 26137  006FC0  0E00               	movlw	0
 26138  006FC2  6E0C               	movwf	__ic2_display_set_ddram_address@data_array,c
 26139                           
 26140                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
 26141  006FC4  500B               	movf	__ic2_display_set_ddram_address@address,w,c
 26142  006FC6  0980               	iorlw	128
 26143  006FC8  6E0D               	movwf	__ic2_display_set_ddram_address@data_array+1,c
 26144                           
 26145                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
 26146  006FCA  0E0C               	movlw	low __ic2_display_set_ddram_address@data_array
 26147  006FCC  6E06               	movwf	__i2c_write@data,c
 26148  006FCE  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 26149  006FD0  6E07               	movwf	__i2c_write@data+1,c
 26150  006FD2  0E02               	movlw	2
 26151  006FD4  6E08               	movwf	__i2c_write@length,c
 26152  006FD6  0E78               	movlw	120
 26153  006FD8  EC36  F034         	call	__i2c_write
 26154  006FDC  0012               	return		;funcret
 26155  006FDE                     __end_of__ic2_display_set_ddram_address:
 26156                           	opt stack 0
 26157                           tosu	equ	0xFFF
 26158                           tosh	equ	0xFFE
 26159                           tosl	equ	0xFFD
 26160                           pclath	equ	0xFFA
 26161                           tblptru	equ	0xFF8
 26162                           tblptrh	equ	0xFF7
 26163                           tblptrl	equ	0xFF6
 26164                           tablat	equ	0xFF5
 26165                           prodh	equ	0xFF4
 26166                           prodl	equ	0xFF3
 26167                           intcon	equ	0xFF2
 26168                           intcon2	equ	0xFF1
 26169                           intcon3	equ	0xFF0
 26170                           indf0	equ	0xFEF
 26171                           postinc0	equ	0xFEE
 26172                           fsr0h	equ	0xFEA
 26173                           fsr0l	equ	0xFE9
 26174                           wreg	equ	0xFE8
 26175                           indf1	equ	0xFE7
 26176                           postdec1	equ	0xFE5
 26177                           plusw1	equ	0xFE3
 26178                           fsr1h	equ	0xFE2
 26179                           fsr1l	equ	0xFE1
 26180                           indf2	equ	0xFDF
 26181                           postinc2	equ	0xFDE
 26182                           postdec2	equ	0xFDD
 26183                           plusw2	equ	0xFDB
 26184                           fsr2h	equ	0xFDA
 26185                           fsr2l	equ	0xFD9
 26186                           status	equ	0xFD8
 26187                           
 26188 ;; *************** function _display_prepare *****************
 26189 ;; Defined at:
 26190 ;;		line 273 in file "display.c"
 26191 ;; Parameters:    Size  Location     Type
 26192 ;;  mode            1    wreg     unsigned char 
 26193 ;; Auto vars:     Size  Location     Type
 26194 ;;  mode            1   34[COMRAM] unsigned char 
 26195 ;; Return value:  Size  Location     Type
 26196 ;;                  1    wreg      void 
 26197 ;; Registers used:
 26198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26199 ;; Tracked objects:
 26200 ;;		On entry : 0/0
 26201 ;;		On exit  : 0/0
 26202 ;;		Unchanged: 0/0
 26203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26208 ;;Total ram usage:        3 bytes
 26209 ;; Hardware stack levels used:    1
 26210 ;; Hardware stack levels required when called:    5
 26211 ;; This function calls:
 26212 ;;		__display_checked
 26213 ;;		__display_clear
 26214 ;;		__display_done
 26215 ;;		__display_failed
 26216 ;;		__display_found
 26217 ;;		__display_programming
 26218 ;;		__display_rebooting
 26219 ;;		__display_search
 26220 ;;		__display_start
 26221 ;;		__display_suspended
 26222 ;;		__display_verify
 26223 ;; This function is called by:
 26224 ;;		_main
 26225 ;;		_reboot
 26226 ;; This function uses a non-reentrant model
 26227 ;;
 26228                           
 26229                           	psect	text133
 26230  0047AA                     __ptext133:
 26231                           	opt stack 0
 26232  0047AA                     _display_prepare:
 26233                           	opt stack 22
 26234                           
 26235                           ;incstack = 0
 26236                           ;display_prepare@mode stored from wreg
 26237  0047AA  6E23               	movwf	display_prepare@mode,c
 26238                           
 26239                           ;display.c: 275: _display_clear();
 26240  0047AC  EC12  F034         	call	__display_clear	;wreg free
 26241                           
 26242                           ;display.c: 277: switch(mode&0xF0)
 26243  0047B0  D01E               	goto	l1517
 26244  0047B2                     
 26245                           ;display.c: 280: _display_start();
 26246  0047B2  ECF1  F012         	call	__display_start	;wreg free
 26247                           
 26248                           ;display.c: 281: break;
 26249  0047B6  D04D               	goto	l1529
 26250  0047B8                     
 26251                           ;display.c: 284: _display_search();
 26252  0047B8  EC12  F019         	call	__display_search	;wreg free
 26253                           
 26254                           ;display.c: 285: break;
 26255  0047BC  D04A               	goto	l1529
 26256  0047BE                     
 26257                           ;display.c: 288: _display_found();
 26258  0047BE  EC15  F011         	call	__display_found	;wreg free
 26259                           
 26260                           ;display.c: 289: break;
 26261  0047C2  D047               	goto	l1529
 26262  0047C4                     
 26263                           ;display.c: 292: _display_verify();
 26264  0047C4  ECFF  F01A         	call	__display_verify	;wreg free
 26265                           
 26266                           ;display.c: 293: break;
 26267  0047C8  D044               	goto	l1529
 26268  0047CA                     
 26269                           ;display.c: 296: _display_checked();
 26270  0047CA  EC8D  F015         	call	__display_checked	;wreg free
 26271                           
 26272                           ;display.c: 297: break;
 26273  0047CE  D041               	goto	l1529
 26274  0047D0                     
 26275                           ;display.c: 300: _display_failed();
 26276  0047D0  EC96  F007         	call	__display_failed	;wreg free
 26277                           
 26278                           ;display.c: 301: break;
 26279  0047D4  D03E               	goto	l1529
 26280  0047D6                     
 26281                           ;display.c: 304: _display_programming();
 26282  0047D6  ECDD  F013         	call	__display_programming	;wreg free
 26283                           
 26284                           ;display.c: 305: break;
 26285  0047DA  D03B               	goto	l1529
 26286  0047DC                     
 26287                           ;display.c: 308: _display_done();
 26288  0047DC  EC04  F017         	call	__display_done	;wreg free
 26289                           
 26290                           ;display.c: 309: break;
 26291  0047E0  D038               	goto	l1529
 26292  0047E2                     
 26293                           ;display.c: 312: _display_rebooting();
 26294  0047E2  EC7B  F032         	call	__display_rebooting	;wreg free
 26295                           
 26296                           ;display.c: 313: break;
 26297  0047E6  D035               	goto	l1529
 26298  0047E8                     
 26299                           ;display.c: 316: _display_suspended();
 26300  0047E8  EC69  F018         	call	__display_suspended	;wreg free
 26301                           
 26302                           ;display.c: 318: }
 26303                           
 26304                           ;display.c: 317: break;
 26305  0047EC  D032               	goto	l1529
 26306  0047EE                     l1517:
 26307  0047EE  5023               	movf	display_prepare@mode,w,c
 26308  0047F0  0BF0               	andlw	240
 26309  0047F2  6E21               	movwf	??_display_prepare& (0+255),c
 26310  0047F4  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 26311                           
 26312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26313                           ; Switch size 1, requested type "space"
 26314                           ; Number of cases is 1, Range of values is 0 to 0
 26315                           ; switch strategies available:
 26316                           ; Name         Instructions Cycles
 26317                           ; simple_byte            4     3 (average)
 26318                           ;	Chosen strategy is simple_byte
 26319  0047F6  5022               	movf	??_display_prepare+1,w,c
 26320  0047F8  0A00               	xorlw	0	; case 0
 26321  0047FA  A4D8               	btfss	status,2,c
 26322  0047FC  D02A               	goto	l1529
 26323                           
 26324                           ; Switch size 1, requested type "space"
 26325                           ; Number of cases is 10, Range of values is 0 to 144
 26326                           ; switch strategies available:
 26327                           ; Name         Instructions Cycles
 26328                           ; simple_byte           31    16 (average)
 26329                           ;	Chosen strategy is simple_byte
 26330  0047FE  5021               	movf	??_display_prepare,w,c
 26331  004800  0A00               	xorlw	0	; case 0
 26332  004802  B4D8               	btfsc	status,2,c
 26333  004804  D7D6               	goto	l1518
 26334  004806  0A10               	xorlw	16	; case 16
 26335  004808  B4D8               	btfsc	status,2,c
 26336  00480A  D7D6               	goto	l1520
 26337  00480C  0A30               	xorlw	48	; case 32
 26338  00480E  B4D8               	btfsc	status,2,c
 26339  004810  D7D6               	goto	l1521
 26340  004812  0A10               	xorlw	16	; case 48
 26341  004814  B4D8               	btfsc	status,2,c
 26342  004816  D7D6               	goto	l1522
 26343  004818  0A70               	xorlw	112	; case 64
 26344  00481A  B4D8               	btfsc	status,2,c
 26345  00481C  D7D6               	goto	l1523
 26346  00481E  0A10               	xorlw	16	; case 80
 26347  004820  B4D8               	btfsc	status,2,c
 26348  004822  D7D6               	goto	l1524
 26349  004824  0A30               	xorlw	48	; case 96
 26350  004826  B4D8               	btfsc	status,2,c
 26351  004828  D7D6               	goto	l1525
 26352  00482A  0A10               	xorlw	16	; case 112
 26353  00482C  B4D8               	btfsc	status,2,c
 26354  00482E  D7D6               	goto	l1526
 26355  004830  0AF0               	xorlw	240	; case 128
 26356  004832  B4D8               	btfsc	status,2,c
 26357  004834  D7D6               	goto	l1527
 26358  004836  0A10               	xorlw	16	; case 144
 26359  004838  B4D8               	btfsc	status,2,c
 26360  00483A  D7D6               	goto	l1528
 26361                           
 26362                           ;display.c: 321: switch((os.timeSlot>>5)&0b11)
 26363  00483C  D00A               	goto	l1529
 26364  00483E                     
 26365                           ;display.c: 324: display_content[0][17] = '.';
 26366  00483E  0E2E               	movlw	46
 26367  004840  0101               	movlb	1	; () banked
 26368  004842  6F87               	movwf	(_display_content+17)& (0+255),b
 26369  004844                     l1531:
 26370                           
 26371                           ;display.c: 327: display_content[0][16] = '.';
 26372  004844  0E2E               	movlw	46
 26373  004846  0101               	movlb	1	; () banked
 26374  004848  6F86               	movwf	(_display_content+16)& (0+255),b
 26375  00484A                     l1532:
 26376                           
 26377                           ;display.c: 330: display_content[0][15] = '.';
 26378  00484A  0E2E               	movlw	46
 26379  00484C  0101               	movlb	1	; () banked
 26380  00484E  6F85               	movwf	(_display_content+15)& (0+255),b
 26381                           
 26382                           ;display.c: 332: }
 26383  004850  D015               	goto	l1533
 26384  004852                     l1529:
 26385                           
 26386                           ; BSR set to: 1
 26387  004852  0100               	movlb	0	; () banked
 26388  004854  3962               	swapf	(_os+2)& (0+255),w,b
 26389  004856  42E8               	rrncf	wreg,f,c
 26390  004858  0B07               	andlw	7
 26391  00485A  0B03               	andlw	3
 26392  00485C  6E21               	movwf	??_display_prepare& (0+255),c
 26393  00485E  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 26394                           
 26395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26396                           ; Switch size 1, requested type "space"
 26397                           ; Number of cases is 1, Range of values is 0 to 0
 26398                           ; switch strategies available:
 26399                           ; Name         Instructions Cycles
 26400                           ; simple_byte            4     3 (average)
 26401                           ;	Chosen strategy is simple_byte
 26402  004860  5022               	movf	??_display_prepare+1,w,c
 26403  004862  0A00               	xorlw	0	; case 0
 26404  004864  A4D8               	btfss	status,2,c
 26405  004866  D00A               	goto	l1533
 26406                           
 26407                           ; BSR set to: 0
 26408                           ; Switch size 1, requested type "space"
 26409                           ; Number of cases is 3, Range of values is 1 to 3
 26410                           ; switch strategies available:
 26411                           ; Name         Instructions Cycles
 26412                           ; simple_byte           10     6 (average)
 26413                           ;	Chosen strategy is simple_byte
 26414  004868  5021               	movf	??_display_prepare,w,c
 26415  00486A  0A01               	xorlw	1	; case 1
 26416  00486C  B4D8               	btfsc	status,2,c
 26417  00486E  D7ED               	goto	l1532
 26418  004870  0A03               	xorlw	3	; case 2
 26419  004872  B4D8               	btfsc	status,2,c
 26420  004874  D7E7               	goto	l1531
 26421  004876  0A01               	xorlw	1	; case 3
 26422  004878  B4D8               	btfsc	status,2,c
 26423  00487A  D7E1               	goto	l1530
 26424  00487C                     l1533:
 26425                           
 26426                           ;display.c: 336: if(INTCONbits.GIE)
 26427  00487C  AEF2               	btfss	intcon,7,c	;volatile
 26428  00487E  0012               	return	
 26429                           
 26430                           ;display.c: 337: {;display.c: 338: display_content[0][18] = 'I';
 26431  004880  0E49               	movlw	73
 26432  004882  0101               	movlb	1	; () banked
 26433  004884  6F88               	movwf	(_display_content+18)& (0+255),b
 26434  004886  0012               	return	
 26435  004888                     __end_of_display_prepare:
 26436                           	opt stack 0
 26437                           tosu	equ	0xFFF
 26438                           tosh	equ	0xFFE
 26439                           tosl	equ	0xFFD
 26440                           pclath	equ	0xFFA
 26441                           tblptru	equ	0xFF8
 26442                           tblptrh	equ	0xFF7
 26443                           tblptrl	equ	0xFF6
 26444                           tablat	equ	0xFF5
 26445                           prodh	equ	0xFF4
 26446                           prodl	equ	0xFF3
 26447                           intcon	equ	0xFF2
 26448                           intcon2	equ	0xFF1
 26449                           intcon3	equ	0xFF0
 26450                           indf0	equ	0xFEF
 26451                           postinc0	equ	0xFEE
 26452                           fsr0h	equ	0xFEA
 26453                           fsr0l	equ	0xFE9
 26454                           wreg	equ	0xFE8
 26455                           indf1	equ	0xFE7
 26456                           postdec1	equ	0xFE5
 26457                           plusw1	equ	0xFE3
 26458                           fsr1h	equ	0xFE2
 26459                           fsr1l	equ	0xFE1
 26460                           indf2	equ	0xFDF
 26461                           postinc2	equ	0xFDE
 26462                           postdec2	equ	0xFDD
 26463                           plusw2	equ	0xFDB
 26464                           fsr2h	equ	0xFDA
 26465                           fsr2l	equ	0xFD9
 26466                           status	equ	0xFD8
 26467                           
 26468 ;; *************** function __display_verify *****************
 26469 ;; Defined at:
 26470 ;;		line 408 in file "display.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;		None
 26473 ;; Auto vars:     Size  Location     Type
 26474 ;;  cntr            1   30[COMRAM] unsigned char 
 26475 ;;  start           1    0        unsigned char 
 26476 ;; Return value:  Size  Location     Type
 26477 ;;                  1    wreg      void 
 26478 ;; Registers used:
 26479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26480 ;; Tracked objects:
 26481 ;;		On entry : 0/0
 26482 ;;		On exit  : 0/0
 26483 ;;		Unchanged: 0/0
 26484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26489 ;;Total ram usage:        3 bytes
 26490 ;; Hardware stack levels used:    1
 26491 ;; Hardware stack levels required when called:    4
 26492 ;; This function calls:
 26493 ;;		__display_itoa_u16
 26494 ;;		_bootloader_get_entries
 26495 ;; This function is called by:
 26496 ;;		_display_prepare
 26497 ;; This function uses a non-reentrant model
 26498 ;;
 26499                           
 26500                           	psect	text134
 26501  0035FE                     __ptext134:
 26502                           	opt stack 0
 26503  0035FE                     __display_verify:
 26504                           	opt stack 22
 26505                           
 26506                           ;display.c: 410: uint8_t cntr;;display.c: 411: uint8_t start;;display.c: 412: cntr = 0;
 26507                           
 26508                           ;incstack = 0
 26509  0035FE  0E00               	movlw	0
 26510  003600  6E1F               	movwf	__display_verify@cntr,c
 26511                           
 26512                           ;display.c: 413: while(verify_line1[cntr])
 26513  003602  D017               	goto	l1586
 26514  003604                     
 26515                           ;display.c: 414: display_content[0][cntr] = verify_line1[cntr++];
 26516  003604  501F               	movf	__display_verify@cntr,w,c
 26517  003606  0D01               	mullw	1
 26518  003608  0EB8               	movlw	low _verify_line1
 26519  00360A  24F3               	addwf	prodl,w,c
 26520  00360C  6EF6               	movwf	tblptrl,c
 26521  00360E  0E8D               	movlw	high _verify_line1
 26522  003610  20F4               	addwfc	prodh,w,c
 26523  003612  6EF7               	movwf	tblptrh,c
 26524  003614                     	if	1	;There are 3 active tblptr bytes
 26525  003614  6AF8               	clrf	tblptru,c
 26526  003616  0E00               	movlw	low (__mediumconst shr (0+16))
 26527  003618  22F8               	addwfc	tblptru,f,c
 26528  00361A                     	endif
 26529  00361A  501F               	movf	__display_verify@cntr,w,c
 26530  00361C  0D01               	mullw	1
 26531  00361E  0E76               	movlw	low _display_content
 26532  003620  24F3               	addwf	prodl,w,c
 26533  003622  6ED9               	movwf	fsr2l,c
 26534  003624  0E01               	movlw	high _display_content
 26535  003626  20F4               	addwfc	prodh,w,c
 26536  003628  6EDA               	movwf	fsr2h,c
 26537  00362A  0008               	tblrd		*
 26538  00362C  CFF5 FFDF          	movff	tablat,indf2
 26539  003630  2A1F               	incf	__display_verify@cntr,f,c
 26540  003632                     l1586:
 26541  003632  501F               	movf	__display_verify@cntr,w,c
 26542  003634  0D01               	mullw	1
 26543  003636  0EB8               	movlw	low _verify_line1
 26544  003638  24F3               	addwf	prodl,w,c
 26545  00363A  6EF6               	movwf	tblptrl,c
 26546  00363C  0E8D               	movlw	high _verify_line1
 26547  00363E  20F4               	addwfc	prodh,w,c
 26548  003640  6EF7               	movwf	tblptrh,c
 26549  003642                     	if	1	;There are 3 active tblptr bytes
 26550  003642  6AF8               	clrf	tblptru,c
 26551  003644  0E00               	movlw	low (__mediumconst shr (0+16))
 26552  003646  22F8               	addwfc	tblptru,f,c
 26553  003648                     	endif
 26554  003648  0008               	tblrd		*
 26555  00364A  50F5               	movf	tablat,w,c
 26556  00364C  0900               	iorlw	0
 26557  00364E  A4D8               	btfss	status,2,c
 26558  003650  D7D9               	goto	l1587
 26559                           
 26560                           ;display.c: 415: cntr = 0;
 26561  003652  0E00               	movlw	0
 26562  003654  6E1F               	movwf	__display_verify@cntr,c
 26563                           
 26564                           ;display.c: 416: while(verify_line2[cntr])
 26565  003656  D017               	goto	l1589
 26566  003658                     
 26567                           ;display.c: 417: display_content[1][cntr] = verify_line2[cntr++];
 26568  003658  501F               	movf	__display_verify@cntr,w,c
 26569  00365A  0D01               	mullw	1
 26570  00365C  0E40               	movlw	low _verify_line2
 26571  00365E  24F3               	addwf	prodl,w,c
 26572  003660  6EF6               	movwf	tblptrl,c
 26573  003662  0E8E               	movlw	high _verify_line2
 26574  003664  20F4               	addwfc	prodh,w,c
 26575  003666  6EF7               	movwf	tblptrh,c
 26576  003668                     	if	1	;There are 3 active tblptr bytes
 26577  003668  6AF8               	clrf	tblptru,c
 26578  00366A  0E00               	movlw	low (__mediumconst shr (0+16))
 26579  00366C  22F8               	addwfc	tblptru,f,c
 26580  00366E                     	endif
 26581  00366E  501F               	movf	__display_verify@cntr,w,c
 26582  003670  0D01               	mullw	1
 26583  003672  0E8A               	movlw	low (_display_content+20)
 26584  003674  24F3               	addwf	prodl,w,c
 26585  003676  6ED9               	movwf	fsr2l,c
 26586  003678  0E01               	movlw	high (_display_content+20)
 26587  00367A  20F4               	addwfc	prodh,w,c
 26588  00367C  6EDA               	movwf	fsr2h,c
 26589  00367E  0008               	tblrd		*
 26590  003680  CFF5 FFDF          	movff	tablat,indf2
 26591  003684  2A1F               	incf	__display_verify@cntr,f,c
 26592  003686                     l1589:
 26593  003686  501F               	movf	__display_verify@cntr,w,c
 26594  003688  0D01               	mullw	1
 26595  00368A  0E40               	movlw	low _verify_line2
 26596  00368C  24F3               	addwf	prodl,w,c
 26597  00368E  6EF6               	movwf	tblptrl,c
 26598  003690  0E8E               	movlw	high _verify_line2
 26599  003692  20F4               	addwfc	prodh,w,c
 26600  003694  6EF7               	movwf	tblptrh,c
 26601  003696                     	if	1	;There are 3 active tblptr bytes
 26602  003696  6AF8               	clrf	tblptru,c
 26603  003698  0E00               	movlw	low (__mediumconst shr (0+16))
 26604  00369A  22F8               	addwfc	tblptru,f,c
 26605  00369C                     	endif
 26606  00369C  0008               	tblrd		*
 26607  00369E  50F5               	movf	tablat,w,c
 26608  0036A0  0900               	iorlw	0
 26609  0036A2  A4D8               	btfss	status,2,c
 26610  0036A4  D7D9               	goto	l1590
 26611                           
 26612                           ;display.c: 418: cntr = 0;
 26613  0036A6  0E00               	movlw	0
 26614  0036A8  6E1F               	movwf	__display_verify@cntr,c
 26615                           
 26616                           ;display.c: 419: while(verify_line3[cntr])
 26617  0036AA  D017               	goto	l1592
 26618  0036AC                     
 26619                           ;display.c: 420: display_content[2][cntr] = verify_line3[cntr++];
 26620  0036AC  501F               	movf	__display_verify@cntr,w,c
 26621  0036AE  0D01               	mullw	1
 26622  0036B0  0E88               	movlw	low _verify_line3
 26623  0036B2  24F3               	addwf	prodl,w,c
 26624  0036B4  6EF6               	movwf	tblptrl,c
 26625  0036B6  0E8E               	movlw	high _verify_line3
 26626  0036B8  20F4               	addwfc	prodh,w,c
 26627  0036BA  6EF7               	movwf	tblptrh,c
 26628  0036BC                     	if	1	;There are 3 active tblptr bytes
 26629  0036BC  6AF8               	clrf	tblptru,c
 26630  0036BE  0E00               	movlw	low (__mediumconst shr (0+16))
 26631  0036C0  22F8               	addwfc	tblptru,f,c
 26632  0036C2                     	endif
 26633  0036C2  501F               	movf	__display_verify@cntr,w,c
 26634  0036C4  0D01               	mullw	1
 26635  0036C6  0E9E               	movlw	low (_display_content+40)
 26636  0036C8  24F3               	addwf	prodl,w,c
 26637  0036CA  6ED9               	movwf	fsr2l,c
 26638  0036CC  0E01               	movlw	high (_display_content+40)
 26639  0036CE  20F4               	addwfc	prodh,w,c
 26640  0036D0  6EDA               	movwf	fsr2h,c
 26641  0036D2  0008               	tblrd		*
 26642  0036D4  CFF5 FFDF          	movff	tablat,indf2
 26643  0036D8  2A1F               	incf	__display_verify@cntr,f,c
 26644  0036DA                     l1592:
 26645  0036DA  501F               	movf	__display_verify@cntr,w,c
 26646  0036DC  0D01               	mullw	1
 26647  0036DE  0E88               	movlw	low _verify_line3
 26648  0036E0  24F3               	addwf	prodl,w,c
 26649  0036E2  6EF6               	movwf	tblptrl,c
 26650  0036E4  0E8E               	movlw	high _verify_line3
 26651  0036E6  20F4               	addwfc	prodh,w,c
 26652  0036E8  6EF7               	movwf	tblptrh,c
 26653  0036EA                     	if	1	;There are 3 active tblptr bytes
 26654  0036EA  6AF8               	clrf	tblptru,c
 26655  0036EC  0E00               	movlw	low (__mediumconst shr (0+16))
 26656  0036EE  22F8               	addwfc	tblptru,f,c
 26657  0036F0                     	endif
 26658  0036F0  0008               	tblrd		*
 26659  0036F2  50F5               	movf	tablat,w,c
 26660  0036F4  0900               	iorlw	0
 26661  0036F6  A4D8               	btfss	status,2,c
 26662  0036F8  D7D9               	goto	l1593
 26663                           
 26664                           ;display.c: 421: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 26665  0036FA  ECF7  F038         	call	_bootloader_get_entries	;wreg free
 26666  0036FE  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 26667  003702  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 26668  003706  501F               	movf	__display_verify@cntr,w,c
 26669  003708  6E1D               	movwf	??__display_verify& (0+255),c
 26670  00370A  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 26671  00370C  0E01               	movlw	1
 26672  00370E  261D               	addwf	??__display_verify,f,c
 26673  003710  0E00               	movlw	0
 26674  003712  221E               	addwfc	??__display_verify+1,f,c
 26675  003714  0E9E               	movlw	low (_display_content+40)
 26676  003716  241D               	addwf	??__display_verify,w,c
 26677  003718  6E1B               	movwf	__display_itoa_u16@text,c
 26678  00371A  0E01               	movlw	high (_display_content+40)
 26679  00371C  201E               	addwfc	??__display_verify+1,w,c
 26680  00371E  6E1C               	movwf	__display_itoa_u16@text+1,c
 26681  003720  ECCD  F027         	call	__display_itoa_u16	;wreg free
 26682  003724  0012               	return		;funcret
 26683  003726                     __end_of__display_verify:
 26684                           	opt stack 0
 26685                           tosu	equ	0xFFF
 26686                           tosh	equ	0xFFE
 26687                           tosl	equ	0xFFD
 26688                           pclath	equ	0xFFA
 26689                           tblptru	equ	0xFF8
 26690                           tblptrh	equ	0xFF7
 26691                           tblptrl	equ	0xFF6
 26692                           tablat	equ	0xFF5
 26693                           prodh	equ	0xFF4
 26694                           prodl	equ	0xFF3
 26695                           intcon	equ	0xFF2
 26696                           intcon2	equ	0xFF1
 26697                           intcon3	equ	0xFF0
 26698                           indf0	equ	0xFEF
 26699                           postinc0	equ	0xFEE
 26700                           fsr0h	equ	0xFEA
 26701                           fsr0l	equ	0xFE9
 26702                           wreg	equ	0xFE8
 26703                           indf1	equ	0xFE7
 26704                           postdec1	equ	0xFE5
 26705                           plusw1	equ	0xFE3
 26706                           fsr1h	equ	0xFE2
 26707                           fsr1l	equ	0xFE1
 26708                           indf2	equ	0xFDF
 26709                           postinc2	equ	0xFDE
 26710                           postdec2	equ	0xFDD
 26711                           plusw2	equ	0xFDB
 26712                           fsr2h	equ	0xFDA
 26713                           fsr2l	equ	0xFD9
 26714                           status	equ	0xFD8
 26715                           
 26716 ;; *************** function __display_suspended *****************
 26717 ;; Defined at:
 26718 ;;		line 546 in file "display.c"
 26719 ;; Parameters:    Size  Location     Type
 26720 ;;		None
 26721 ;; Auto vars:     Size  Location     Type
 26722 ;;  cntr            1    0[COMRAM] unsigned char 
 26723 ;; Return value:  Size  Location     Type
 26724 ;;                  1    wreg      void 
 26725 ;; Registers used:
 26726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26727 ;; Tracked objects:
 26728 ;;		On entry : 0/0
 26729 ;;		On exit  : 0/0
 26730 ;;		Unchanged: 0/0
 26731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26736 ;;Total ram usage:        1 bytes
 26737 ;; Hardware stack levels used:    1
 26738 ;; This function calls:
 26739 ;;		Nothing
 26740 ;; This function is called by:
 26741 ;;		_display_prepare
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text135
 26746  0030D2                     __ptext135:
 26747                           	opt stack 0
 26748  0030D2                     __display_suspended:
 26749                           	opt stack 26
 26750                           
 26751                           ;display.c: 548: uint8_t cntr;;display.c: 551: cntr = 0;
 26752                           
 26753                           ;incstack = 0
 26754  0030D2  0E00               	movlw	0
 26755  0030D4  6E01               	movwf	__display_suspended@cntr,c
 26756                           
 26757                           ;display.c: 552: while(suspended_line1[cntr])
 26758  0030D6  D017               	goto	l1683
 26759  0030D8                     
 26760                           ;display.c: 553: display_content[0][cntr] = suspended_line1[cntr++];
 26761  0030D8  5001               	movf	__display_suspended@cntr,w,c
 26762  0030DA  0D01               	mullw	1
 26763  0030DC  0E38               	movlw	low _suspended_line1
 26764  0030DE  24F3               	addwf	prodl,w,c
 26765  0030E0  6EF6               	movwf	tblptrl,c
 26766  0030E2  0E8D               	movlw	high _suspended_line1
 26767  0030E4  20F4               	addwfc	prodh,w,c
 26768  0030E6  6EF7               	movwf	tblptrh,c
 26769  0030E8                     	if	1	;There are 3 active tblptr bytes
 26770  0030E8  6AF8               	clrf	tblptru,c
 26771  0030EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26772  0030EC  22F8               	addwfc	tblptru,f,c
 26773  0030EE                     	endif
 26774  0030EE  5001               	movf	__display_suspended@cntr,w,c
 26775  0030F0  0D01               	mullw	1
 26776  0030F2  0E76               	movlw	low _display_content
 26777  0030F4  24F3               	addwf	prodl,w,c
 26778  0030F6  6ED9               	movwf	fsr2l,c
 26779  0030F8  0E01               	movlw	high _display_content
 26780  0030FA  20F4               	addwfc	prodh,w,c
 26781  0030FC  6EDA               	movwf	fsr2h,c
 26782  0030FE  0008               	tblrd		*
 26783  003100  CFF5 FFDF          	movff	tablat,indf2
 26784  003104  2A01               	incf	__display_suspended@cntr,f,c
 26785  003106                     l1683:
 26786  003106  5001               	movf	__display_suspended@cntr,w,c
 26787  003108  0D01               	mullw	1
 26788  00310A  0E38               	movlw	low _suspended_line1
 26789  00310C  24F3               	addwf	prodl,w,c
 26790  00310E  6EF6               	movwf	tblptrl,c
 26791  003110  0E8D               	movlw	high _suspended_line1
 26792  003112  20F4               	addwfc	prodh,w,c
 26793  003114  6EF7               	movwf	tblptrh,c
 26794  003116                     	if	1	;There are 3 active tblptr bytes
 26795  003116  6AF8               	clrf	tblptru,c
 26796  003118  0E00               	movlw	low (__mediumconst shr (0+16))
 26797  00311A  22F8               	addwfc	tblptru,f,c
 26798  00311C                     	endif
 26799  00311C  0008               	tblrd		*
 26800  00311E  50F5               	movf	tablat,w,c
 26801  003120  0900               	iorlw	0
 26802  003122  A4D8               	btfss	status,2,c
 26803  003124  D7D9               	goto	l1684
 26804                           
 26805                           ;display.c: 555: cntr = 0;
 26806  003126  0E00               	movlw	0
 26807  003128  6E01               	movwf	__display_suspended@cntr,c
 26808                           
 26809                           ;display.c: 556: while(suspended_line2[cntr])
 26810  00312A  D017               	goto	l1686
 26811  00312C                     
 26812                           ;display.c: 557: display_content[1][cntr] = suspended_line2[cntr++];
 26813  00312C  5001               	movf	__display_suspended@cntr,w,c
 26814  00312E  0D01               	mullw	1
 26815  003130  0E4D               	movlw	low _suspended_line2
 26816  003132  24F3               	addwf	prodl,w,c
 26817  003134  6EF6               	movwf	tblptrl,c
 26818  003136  0E8E               	movlw	high _suspended_line2
 26819  003138  20F4               	addwfc	prodh,w,c
 26820  00313A  6EF7               	movwf	tblptrh,c
 26821  00313C                     	if	1	;There are 3 active tblptr bytes
 26822  00313C  6AF8               	clrf	tblptru,c
 26823  00313E  0E00               	movlw	low (__mediumconst shr (0+16))
 26824  003140  22F8               	addwfc	tblptru,f,c
 26825  003142                     	endif
 26826  003142  5001               	movf	__display_suspended@cntr,w,c
 26827  003144  0D01               	mullw	1
 26828  003146  0E8A               	movlw	low (_display_content+20)
 26829  003148  24F3               	addwf	prodl,w,c
 26830  00314A  6ED9               	movwf	fsr2l,c
 26831  00314C  0E01               	movlw	high (_display_content+20)
 26832  00314E  20F4               	addwfc	prodh,w,c
 26833  003150  6EDA               	movwf	fsr2h,c
 26834  003152  0008               	tblrd		*
 26835  003154  CFF5 FFDF          	movff	tablat,indf2
 26836  003158  2A01               	incf	__display_suspended@cntr,f,c
 26837  00315A                     l1686:
 26838  00315A  5001               	movf	__display_suspended@cntr,w,c
 26839  00315C  0D01               	mullw	1
 26840  00315E  0E4D               	movlw	low _suspended_line2
 26841  003160  24F3               	addwf	prodl,w,c
 26842  003162  6EF6               	movwf	tblptrl,c
 26843  003164  0E8E               	movlw	high _suspended_line2
 26844  003166  20F4               	addwfc	prodh,w,c
 26845  003168  6EF7               	movwf	tblptrh,c
 26846  00316A                     	if	1	;There are 3 active tblptr bytes
 26847  00316A  6AF8               	clrf	tblptru,c
 26848  00316C  0E00               	movlw	low (__mediumconst shr (0+16))
 26849  00316E  22F8               	addwfc	tblptru,f,c
 26850  003170                     	endif
 26851  003170  0008               	tblrd		*
 26852  003172  50F5               	movf	tablat,w,c
 26853  003174  0900               	iorlw	0
 26854  003176  A4D8               	btfss	status,2,c
 26855  003178  D7D9               	goto	l1687
 26856                           
 26857                           ;display.c: 559: cntr = 0;
 26858  00317A  0E00               	movlw	0
 26859  00317C  6E01               	movwf	__display_suspended@cntr,c
 26860                           
 26861                           ;display.c: 560: while(suspended_line3[cntr])
 26862  00317E  D017               	goto	l1689
 26863  003180                     
 26864                           ;display.c: 561: display_content[2][cntr] = suspended_line3[cntr++];
 26865  003180  5001               	movf	__display_suspended@cntr,w,c
 26866  003182  0D01               	mullw	1
 26867  003184  0EA5               	movlw	low _suspended_line3
 26868  003186  24F3               	addwf	prodl,w,c
 26869  003188  6EF6               	movwf	tblptrl,c
 26870  00318A  0E8E               	movlw	high _suspended_line3
 26871  00318C  20F4               	addwfc	prodh,w,c
 26872  00318E  6EF7               	movwf	tblptrh,c
 26873  003190                     	if	1	;There are 3 active tblptr bytes
 26874  003190  6AF8               	clrf	tblptru,c
 26875  003192  0E00               	movlw	low (__mediumconst shr (0+16))
 26876  003194  22F8               	addwfc	tblptru,f,c
 26877  003196                     	endif
 26878  003196  5001               	movf	__display_suspended@cntr,w,c
 26879  003198  0D01               	mullw	1
 26880  00319A  0E9E               	movlw	low (_display_content+40)
 26881  00319C  24F3               	addwf	prodl,w,c
 26882  00319E  6ED9               	movwf	fsr2l,c
 26883  0031A0  0E01               	movlw	high (_display_content+40)
 26884  0031A2  20F4               	addwfc	prodh,w,c
 26885  0031A4  6EDA               	movwf	fsr2h,c
 26886  0031A6  0008               	tblrd		*
 26887  0031A8  CFF5 FFDF          	movff	tablat,indf2
 26888  0031AC  2A01               	incf	__display_suspended@cntr,f,c
 26889  0031AE                     l1689:
 26890  0031AE  5001               	movf	__display_suspended@cntr,w,c
 26891  0031B0  0D01               	mullw	1
 26892  0031B2  0EA5               	movlw	low _suspended_line3
 26893  0031B4  24F3               	addwf	prodl,w,c
 26894  0031B6  6EF6               	movwf	tblptrl,c
 26895  0031B8  0E8E               	movlw	high _suspended_line3
 26896  0031BA  20F4               	addwfc	prodh,w,c
 26897  0031BC  6EF7               	movwf	tblptrh,c
 26898  0031BE                     	if	1	;There are 3 active tblptr bytes
 26899  0031BE  6AF8               	clrf	tblptru,c
 26900  0031C0  0E00               	movlw	low (__mediumconst shr (0+16))
 26901  0031C2  22F8               	addwfc	tblptru,f,c
 26902  0031C4                     	endif
 26903  0031C4  0008               	tblrd		*
 26904  0031C6  50F5               	movf	tablat,w,c
 26905  0031C8  0900               	iorlw	0
 26906  0031CA  A4D8               	btfss	status,2,c
 26907  0031CC  D7D9               	goto	l1690
 26908                           
 26909                           ;display.c: 563: cntr = 0;
 26910  0031CE  0E00               	movlw	0
 26911  0031D0  6E01               	movwf	__display_suspended@cntr,c
 26912                           
 26913                           ;display.c: 564: while(suspended_line4[cntr])
 26914  0031D2  D017               	goto	l1692
 26915  0031D4                     
 26916                           ;display.c: 565: display_content[3][cntr] = suspended_line4[cntr++];
 26917  0031D4  5001               	movf	__display_suspended@cntr,w,c
 26918  0031D6  0D01               	mullw	1
 26919  0031D8  0E28               	movlw	low _suspended_line4
 26920  0031DA  24F3               	addwf	prodl,w,c
 26921  0031DC  6EF6               	movwf	tblptrl,c
 26922  0031DE  0E8D               	movlw	high _suspended_line4
 26923  0031E0  20F4               	addwfc	prodh,w,c
 26924  0031E2  6EF7               	movwf	tblptrh,c
 26925  0031E4                     	if	1	;There are 3 active tblptr bytes
 26926  0031E4  6AF8               	clrf	tblptru,c
 26927  0031E6  0E00               	movlw	low (__mediumconst shr (0+16))
 26928  0031E8  22F8               	addwfc	tblptru,f,c
 26929  0031EA                     	endif
 26930  0031EA  5001               	movf	__display_suspended@cntr,w,c
 26931  0031EC  0D01               	mullw	1
 26932  0031EE  0EB2               	movlw	low (_display_content+60)
 26933  0031F0  24F3               	addwf	prodl,w,c
 26934  0031F2  6ED9               	movwf	fsr2l,c
 26935  0031F4  0E01               	movlw	high (_display_content+60)
 26936  0031F6  20F4               	addwfc	prodh,w,c
 26937  0031F8  6EDA               	movwf	fsr2h,c
 26938  0031FA  0008               	tblrd		*
 26939  0031FC  CFF5 FFDF          	movff	tablat,indf2
 26940  003200  2A01               	incf	__display_suspended@cntr,f,c
 26941  003202                     l1692:
 26942  003202  5001               	movf	__display_suspended@cntr,w,c
 26943  003204  0D01               	mullw	1
 26944  003206  0E28               	movlw	low _suspended_line4
 26945  003208  24F3               	addwf	prodl,w,c
 26946  00320A  6EF6               	movwf	tblptrl,c
 26947  00320C  0E8D               	movlw	high _suspended_line4
 26948  00320E  20F4               	addwfc	prodh,w,c
 26949  003210  6EF7               	movwf	tblptrh,c
 26950  003212                     	if	1	;There are 3 active tblptr bytes
 26951  003212  6AF8               	clrf	tblptru,c
 26952  003214  0E00               	movlw	low (__mediumconst shr (0+16))
 26953  003216  22F8               	addwfc	tblptru,f,c
 26954  003218                     	endif
 26955  003218  0008               	tblrd		*
 26956  00321A  50F5               	movf	tablat,w,c
 26957  00321C  0900               	iorlw	0
 26958  00321E  B4D8               	btfsc	status,2,c
 26959  003220  0012               	return	
 26960  003222  D7D8               	goto	l1693
 26961  003224                     __end_of__display_suspended:
 26962                           	opt stack 0
 26963                           tosu	equ	0xFFF
 26964                           tosh	equ	0xFFE
 26965                           tosl	equ	0xFFD
 26966                           pclath	equ	0xFFA
 26967                           tblptru	equ	0xFF8
 26968                           tblptrh	equ	0xFF7
 26969                           tblptrl	equ	0xFF6
 26970                           tablat	equ	0xFF5
 26971                           prodh	equ	0xFF4
 26972                           prodl	equ	0xFF3
 26973                           intcon	equ	0xFF2
 26974                           intcon2	equ	0xFF1
 26975                           intcon3	equ	0xFF0
 26976                           indf0	equ	0xFEF
 26977                           postinc0	equ	0xFEE
 26978                           fsr0h	equ	0xFEA
 26979                           fsr0l	equ	0xFE9
 26980                           wreg	equ	0xFE8
 26981                           indf1	equ	0xFE7
 26982                           postdec1	equ	0xFE5
 26983                           plusw1	equ	0xFE3
 26984                           fsr1h	equ	0xFE2
 26985                           fsr1l	equ	0xFE1
 26986                           indf2	equ	0xFDF
 26987                           postinc2	equ	0xFDE
 26988                           postdec2	equ	0xFDD
 26989                           plusw2	equ	0xFDB
 26990                           fsr2h	equ	0xFDA
 26991                           fsr2l	equ	0xFD9
 26992                           status	equ	0xFD8
 26993                           
 26994 ;; *************** function __display_start *****************
 26995 ;; Defined at:
 26996 ;;		line 342 in file "display.c"
 26997 ;; Parameters:    Size  Location     Type
 26998 ;;		None
 26999 ;; Auto vars:     Size  Location     Type
 27000 ;;  cntr            1   28[COMRAM] unsigned char 
 27001 ;; Return value:  Size  Location     Type
 27002 ;;                  1    wreg      void 
 27003 ;; Registers used:
 27004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27005 ;; Tracked objects:
 27006 ;;		On entry : 0/0
 27007 ;;		On exit  : 0/0
 27008 ;;		Unchanged: 0/0
 27009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27014 ;;Total ram usage:        1 bytes
 27015 ;; Hardware stack levels used:    1
 27016 ;; Hardware stack levels required when called:    4
 27017 ;; This function calls:
 27018 ;;		__display_itoa_u16
 27019 ;; This function is called by:
 27020 ;;		_display_prepare
 27021 ;; This function uses a non-reentrant model
 27022 ;;
 27023                           
 27024                           	psect	text136
 27025  0025E2                     __ptext136:
 27026                           	opt stack 0
 27027  0025E2                     __display_start:
 27028                           	opt stack 22
 27029                           
 27030                           ;display.c: 344: uint8_t cntr;;display.c: 345: cntr = 0;
 27031                           
 27032                           ;incstack = 0
 27033  0025E2  0E00               	movlw	0
 27034  0025E4  6E1D               	movwf	__display_start@cntr,c
 27035                           
 27036                           ;display.c: 346: while(start_line1[cntr])
 27037  0025E6  D017               	goto	l1538
 27038  0025E8                     
 27039                           ;display.c: 347: display_content[0][cntr] = start_line1[cntr++];
 27040  0025E8  501D               	movf	__display_start@cntr,w,c
 27041  0025EA  0D01               	mullw	1
 27042  0025EC  0EE8               	movlw	low _start_line1
 27043  0025EE  24F3               	addwf	prodl,w,c
 27044  0025F0  6EF6               	movwf	tblptrl,c
 27045  0025F2  0E8D               	movlw	high _start_line1
 27046  0025F4  20F4               	addwfc	prodh,w,c
 27047  0025F6  6EF7               	movwf	tblptrh,c
 27048  0025F8                     	if	1	;There are 3 active tblptr bytes
 27049  0025F8  6AF8               	clrf	tblptru,c
 27050  0025FA  0E00               	movlw	low (__mediumconst shr (0+16))
 27051  0025FC  22F8               	addwfc	tblptru,f,c
 27052  0025FE                     	endif
 27053  0025FE  501D               	movf	__display_start@cntr,w,c
 27054  002600  0D01               	mullw	1
 27055  002602  0E76               	movlw	low _display_content
 27056  002604  24F3               	addwf	prodl,w,c
 27057  002606  6ED9               	movwf	fsr2l,c
 27058  002608  0E01               	movlw	high _display_content
 27059  00260A  20F4               	addwfc	prodh,w,c
 27060  00260C  6EDA               	movwf	fsr2h,c
 27061  00260E  0008               	tblrd		*
 27062  002610  CFF5 FFDF          	movff	tablat,indf2
 27063  002614  2A1D               	incf	__display_start@cntr,f,c
 27064  002616                     l1538:
 27065  002616  501D               	movf	__display_start@cntr,w,c
 27066  002618  0D01               	mullw	1
 27067  00261A  0EE8               	movlw	low _start_line1
 27068  00261C  24F3               	addwf	prodl,w,c
 27069  00261E  6EF6               	movwf	tblptrl,c
 27070  002620  0E8D               	movlw	high _start_line1
 27071  002622  20F4               	addwfc	prodh,w,c
 27072  002624  6EF7               	movwf	tblptrh,c
 27073  002626                     	if	1	;There are 3 active tblptr bytes
 27074  002626  6AF8               	clrf	tblptru,c
 27075  002628  0E00               	movlw	low (__mediumconst shr (0+16))
 27076  00262A  22F8               	addwfc	tblptru,f,c
 27077  00262C                     	endif
 27078  00262C  0008               	tblrd		*
 27079  00262E  50F5               	movf	tablat,w,c
 27080  002630  0900               	iorlw	0
 27081  002632  A4D8               	btfss	status,2,c
 27082  002634  D7D9               	goto	l1539
 27083                           
 27084                           ;display.c: 348: cntr = 0;
 27085  002636  0E00               	movlw	0
 27086  002638  6E1D               	movwf	__display_start@cntr,c
 27087                           
 27088                           ;display.c: 349: while(start_line2[cntr])
 27089  00263A  D017               	goto	l1541
 27090  00263C                     
 27091                           ;display.c: 350: display_content[1][cntr] = start_line2[cntr++];
 27092  00263C  501D               	movf	__display_start@cntr,w,c
 27093  00263E  0D01               	mullw	1
 27094  002640  0E60               	movlw	low _start_line2
 27095  002642  24F3               	addwf	prodl,w,c
 27096  002644  6EF6               	movwf	tblptrl,c
 27097  002646  0E8E               	movlw	high _start_line2
 27098  002648  20F4               	addwfc	prodh,w,c
 27099  00264A  6EF7               	movwf	tblptrh,c
 27100  00264C                     	if	1	;There are 3 active tblptr bytes
 27101  00264C  6AF8               	clrf	tblptru,c
 27102  00264E  0E00               	movlw	low (__mediumconst shr (0+16))
 27103  002650  22F8               	addwfc	tblptru,f,c
 27104  002652                     	endif
 27105  002652  501D               	movf	__display_start@cntr,w,c
 27106  002654  0D01               	mullw	1
 27107  002656  0E8A               	movlw	low (_display_content+20)
 27108  002658  24F3               	addwf	prodl,w,c
 27109  00265A  6ED9               	movwf	fsr2l,c
 27110  00265C  0E01               	movlw	high (_display_content+20)
 27111  00265E  20F4               	addwfc	prodh,w,c
 27112  002660  6EDA               	movwf	fsr2h,c
 27113  002662  0008               	tblrd		*
 27114  002664  CFF5 FFDF          	movff	tablat,indf2
 27115  002668  2A1D               	incf	__display_start@cntr,f,c
 27116  00266A                     l1541:
 27117  00266A  501D               	movf	__display_start@cntr,w,c
 27118  00266C  0D01               	mullw	1
 27119  00266E  0E60               	movlw	low _start_line2
 27120  002670  24F3               	addwf	prodl,w,c
 27121  002672  6EF6               	movwf	tblptrl,c
 27122  002674  0E8E               	movlw	high _start_line2
 27123  002676  20F4               	addwfc	prodh,w,c
 27124  002678  6EF7               	movwf	tblptrh,c
 27125  00267A                     	if	1	;There are 3 active tblptr bytes
 27126  00267A  6AF8               	clrf	tblptru,c
 27127  00267C  0E00               	movlw	low (__mediumconst shr (0+16))
 27128  00267E  22F8               	addwfc	tblptru,f,c
 27129  002680                     	endif
 27130  002680  0008               	tblrd		*
 27131  002682  50F5               	movf	tablat,w,c
 27132  002684  0900               	iorlw	0
 27133  002686  A4D8               	btfss	status,2,c
 27134  002688  D7D9               	goto	l1542
 27135                           
 27136                           ;display.c: 351: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27137  00268A  0E00               	movlw	0
 27138  00268C  6E1A               	movwf	__display_itoa_u16@value+1,c
 27139  00268E  0E00               	movlw	0
 27140  002690  6E19               	movwf	__display_itoa_u16@value,c
 27141  002692  501D               	movf	__display_start@cntr,w,c
 27142  002694  0D01               	mullw	1
 27143  002696  0E8A               	movlw	low (_display_content+20)
 27144  002698  24F3               	addwf	prodl,w,c
 27145  00269A  6E1B               	movwf	__display_itoa_u16@text,c
 27146  00269C  0E01               	movlw	high (_display_content+20)
 27147  00269E  20F4               	addwfc	prodh,w,c
 27148  0026A0  6E1C               	movwf	__display_itoa_u16@text+1,c
 27149  0026A2  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27150  0026A6  261D               	addwf	__display_start@cntr,f,c
 27151                           
 27152                           ;display.c: 352: display_content[1][cntr++] = '.';
 27153  0026A8  501D               	movf	__display_start@cntr,w,c
 27154  0026AA  0D01               	mullw	1
 27155  0026AC  0E8A               	movlw	low (_display_content+20)
 27156  0026AE  24F3               	addwf	prodl,w,c
 27157  0026B0  6ED9               	movwf	fsr2l,c
 27158  0026B2  0E01               	movlw	high (_display_content+20)
 27159  0026B4  20F4               	addwfc	prodh,w,c
 27160  0026B6  6EDA               	movwf	fsr2h,c
 27161  0026B8  0E2E               	movlw	46
 27162  0026BA  6EDF               	movwf	indf2,c
 27163  0026BC  2A1D               	incf	__display_start@cntr,f,c
 27164                           
 27165                           ;display.c: 353: cntr += _display_itoa_u16(0x05, &display_content[1][cntr]);
 27166  0026BE  0E00               	movlw	0
 27167  0026C0  6E1A               	movwf	__display_itoa_u16@value+1,c
 27168  0026C2  0E05               	movlw	5
 27169  0026C4  6E19               	movwf	__display_itoa_u16@value,c
 27170  0026C6  501D               	movf	__display_start@cntr,w,c
 27171  0026C8  0D01               	mullw	1
 27172  0026CA  0E8A               	movlw	low (_display_content+20)
 27173  0026CC  24F3               	addwf	prodl,w,c
 27174  0026CE  6E1B               	movwf	__display_itoa_u16@text,c
 27175  0026D0  0E01               	movlw	high (_display_content+20)
 27176  0026D2  20F4               	addwfc	prodh,w,c
 27177  0026D4  6E1C               	movwf	__display_itoa_u16@text+1,c
 27178  0026D6  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27179  0026DA  261D               	addwf	__display_start@cntr,f,c
 27180                           
 27181                           ;display.c: 354: display_content[1][cntr++] = '.';
 27182  0026DC  501D               	movf	__display_start@cntr,w,c
 27183  0026DE  0D01               	mullw	1
 27184  0026E0  0E8A               	movlw	low (_display_content+20)
 27185  0026E2  24F3               	addwf	prodl,w,c
 27186  0026E4  6ED9               	movwf	fsr2l,c
 27187  0026E6  0E01               	movlw	high (_display_content+20)
 27188  0026E8  20F4               	addwfc	prodh,w,c
 27189  0026EA  6EDA               	movwf	fsr2h,c
 27190  0026EC  0E2E               	movlw	46
 27191  0026EE  6EDF               	movwf	indf2,c
 27192  0026F0  2A1D               	incf	__display_start@cntr,f,c
 27193                           
 27194                           ;display.c: 355: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27195  0026F2  0E00               	movlw	0
 27196  0026F4  6E1A               	movwf	__display_itoa_u16@value+1,c
 27197  0026F6  0E00               	movlw	0
 27198  0026F8  6E19               	movwf	__display_itoa_u16@value,c
 27199  0026FA  501D               	movf	__display_start@cntr,w,c
 27200  0026FC  0D01               	mullw	1
 27201  0026FE  0E8A               	movlw	low (_display_content+20)
 27202  002700  24F3               	addwf	prodl,w,c
 27203  002702  6E1B               	movwf	__display_itoa_u16@text,c
 27204  002704  0E01               	movlw	high (_display_content+20)
 27205  002706  20F4               	addwfc	prodh,w,c
 27206  002708  6E1C               	movwf	__display_itoa_u16@text+1,c
 27207  00270A  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27208  00270E  261D               	addwf	__display_start@cntr,f,c
 27209                           
 27210                           ;display.c: 356: cntr = 0;
 27211  002710  0E00               	movlw	0
 27212  002712  6E1D               	movwf	__display_start@cntr,c
 27213                           
 27214                           ;display.c: 357: while(start_line3[cntr])
 27215  002714  D017               	goto	l1544
 27216  002716                     
 27217                           ;display.c: 358: display_content[2][cntr] = start_line3[cntr++];
 27218  002716  501D               	movf	__display_start@cntr,w,c
 27219  002718  0D01               	mullw	1
 27220  00271A  0EA6               	movlw	low _start_line3
 27221  00271C  24F3               	addwf	prodl,w,c
 27222  00271E  6EF6               	movwf	tblptrl,c
 27223  002720  0E8E               	movlw	high _start_line3
 27224  002722  20F4               	addwfc	prodh,w,c
 27225  002724  6EF7               	movwf	tblptrh,c
 27226  002726                     	if	1	;There are 3 active tblptr bytes
 27227  002726  6AF8               	clrf	tblptru,c
 27228  002728  0E00               	movlw	low (__mediumconst shr (0+16))
 27229  00272A  22F8               	addwfc	tblptru,f,c
 27230  00272C                     	endif
 27231  00272C  501D               	movf	__display_start@cntr,w,c
 27232  00272E  0D01               	mullw	1
 27233  002730  0E9E               	movlw	low (_display_content+40)
 27234  002732  24F3               	addwf	prodl,w,c
 27235  002734  6ED9               	movwf	fsr2l,c
 27236  002736  0E01               	movlw	high (_display_content+40)
 27237  002738  20F4               	addwfc	prodh,w,c
 27238  00273A  6EDA               	movwf	fsr2h,c
 27239  00273C  0008               	tblrd		*
 27240  00273E  CFF5 FFDF          	movff	tablat,indf2
 27241  002742  2A1D               	incf	__display_start@cntr,f,c
 27242  002744                     l1544:
 27243  002744  501D               	movf	__display_start@cntr,w,c
 27244  002746  0D01               	mullw	1
 27245  002748  0EA6               	movlw	low _start_line3
 27246  00274A  24F3               	addwf	prodl,w,c
 27247  00274C  6EF6               	movwf	tblptrl,c
 27248  00274E  0E8E               	movlw	high _start_line3
 27249  002750  20F4               	addwfc	prodh,w,c
 27250  002752  6EF7               	movwf	tblptrh,c
 27251  002754                     	if	1	;There are 3 active tblptr bytes
 27252  002754  6AF8               	clrf	tblptru,c
 27253  002756  0E00               	movlw	low (__mediumconst shr (0+16))
 27254  002758  22F8               	addwfc	tblptru,f,c
 27255  00275A                     	endif
 27256  00275A  0008               	tblrd		*
 27257  00275C  50F5               	movf	tablat,w,c
 27258  00275E  0900               	iorlw	0
 27259  002760  A4D8               	btfss	status,2,c
 27260  002762  D7D9               	goto	l1545
 27261                           
 27262                           ;display.c: 359: cntr = 0;
 27263  002764  0E00               	movlw	0
 27264  002766  6E1D               	movwf	__display_start@cntr,c
 27265                           
 27266                           ;display.c: 360: while(start_line4[cntr])
 27267  002768  D017               	goto	l1547
 27268  00276A                     
 27269                           ;display.c: 361: display_content[3][cntr] = start_line4[cntr++];
 27270  00276A  501D               	movf	__display_start@cntr,w,c
 27271  00276C  0D01               	mullw	1
 27272  00276E  0E16               	movlw	low _start_line4
 27273  002770  24F3               	addwf	prodl,w,c
 27274  002772  6EF6               	movwf	tblptrl,c
 27275  002774  0E8E               	movlw	high _start_line4
 27276  002776  20F4               	addwfc	prodh,w,c
 27277  002778  6EF7               	movwf	tblptrh,c
 27278  00277A                     	if	1	;There are 3 active tblptr bytes
 27279  00277A  6AF8               	clrf	tblptru,c
 27280  00277C  0E00               	movlw	low (__mediumconst shr (0+16))
 27281  00277E  22F8               	addwfc	tblptru,f,c
 27282  002780                     	endif
 27283  002780  501D               	movf	__display_start@cntr,w,c
 27284  002782  0D01               	mullw	1
 27285  002784  0EB2               	movlw	low (_display_content+60)
 27286  002786  24F3               	addwf	prodl,w,c
 27287  002788  6ED9               	movwf	fsr2l,c
 27288  00278A  0E01               	movlw	high (_display_content+60)
 27289  00278C  20F4               	addwfc	prodh,w,c
 27290  00278E  6EDA               	movwf	fsr2h,c
 27291  002790  0008               	tblrd		*
 27292  002792  CFF5 FFDF          	movff	tablat,indf2
 27293  002796  2A1D               	incf	__display_start@cntr,f,c
 27294  002798                     l1547:
 27295  002798  501D               	movf	__display_start@cntr,w,c
 27296  00279A  0D01               	mullw	1
 27297  00279C  0E16               	movlw	low _start_line4
 27298  00279E  24F3               	addwf	prodl,w,c
 27299  0027A0  6EF6               	movwf	tblptrl,c
 27300  0027A2  0E8E               	movlw	high _start_line4
 27301  0027A4  20F4               	addwfc	prodh,w,c
 27302  0027A6  6EF7               	movwf	tblptrh,c
 27303  0027A8                     	if	1	;There are 3 active tblptr bytes
 27304  0027A8  6AF8               	clrf	tblptru,c
 27305  0027AA  0E00               	movlw	low (__mediumconst shr (0+16))
 27306  0027AC  22F8               	addwfc	tblptru,f,c
 27307  0027AE                     	endif
 27308  0027AE  0008               	tblrd		*
 27309  0027B0  50F5               	movf	tablat,w,c
 27310  0027B2  0900               	iorlw	0
 27311  0027B4  B4D8               	btfsc	status,2,c
 27312  0027B6  0012               	return	
 27313  0027B8  D7D8               	goto	l1548
 27314  0027BA                     __end_of__display_start:
 27315                           	opt stack 0
 27316                           tosu	equ	0xFFF
 27317                           tosh	equ	0xFFE
 27318                           tosl	equ	0xFFD
 27319                           pclath	equ	0xFFA
 27320                           tblptru	equ	0xFF8
 27321                           tblptrh	equ	0xFF7
 27322                           tblptrl	equ	0xFF6
 27323                           tablat	equ	0xFF5
 27324                           prodh	equ	0xFF4
 27325                           prodl	equ	0xFF3
 27326                           intcon	equ	0xFF2
 27327                           intcon2	equ	0xFF1
 27328                           intcon3	equ	0xFF0
 27329                           indf0	equ	0xFEF
 27330                           postinc0	equ	0xFEE
 27331                           fsr0h	equ	0xFEA
 27332                           fsr0l	equ	0xFE9
 27333                           wreg	equ	0xFE8
 27334                           indf1	equ	0xFE7
 27335                           postdec1	equ	0xFE5
 27336                           plusw1	equ	0xFE3
 27337                           fsr1h	equ	0xFE2
 27338                           fsr1l	equ	0xFE1
 27339                           indf2	equ	0xFDF
 27340                           postinc2	equ	0xFDE
 27341                           postdec2	equ	0xFDD
 27342                           plusw2	equ	0xFDB
 27343                           fsr2h	equ	0xFDA
 27344                           fsr2l	equ	0xFD9
 27345                           status	equ	0xFD8
 27346                           
 27347 ;; *************** function __display_search *****************
 27348 ;; Defined at:
 27349 ;;		line 364 in file "display.c"
 27350 ;; Parameters:    Size  Location     Type
 27351 ;;		None
 27352 ;; Auto vars:     Size  Location     Type
 27353 ;;  cntr            1    0[COMRAM] unsigned char 
 27354 ;; Return value:  Size  Location     Type
 27355 ;;                  1    wreg      void 
 27356 ;; Registers used:
 27357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27358 ;; Tracked objects:
 27359 ;;		On entry : 0/0
 27360 ;;		On exit  : 0/0
 27361 ;;		Unchanged: 0/0
 27362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27367 ;;Total ram usage:        1 bytes
 27368 ;; Hardware stack levels used:    1
 27369 ;; This function calls:
 27370 ;;		Nothing
 27371 ;; This function is called by:
 27372 ;;		_display_prepare
 27373 ;; This function uses a non-reentrant model
 27374 ;;
 27375                           
 27376                           	psect	text137
 27377  003224                     __ptext137:
 27378                           	opt stack 0
 27379  003224                     __display_search:
 27380                           	opt stack 26
 27381                           
 27382                           ;display.c: 366: uint8_t cntr;;display.c: 367: cntr = 0;
 27383                           
 27384                           ;incstack = 0
 27385  003224  0E00               	movlw	0
 27386  003226  6E01               	movwf	__display_search@cntr,c
 27387                           
 27388                           ;display.c: 368: while(search_line1[cntr])
 27389  003228  D017               	goto	l1553
 27390  00322A                     
 27391                           ;display.c: 369: display_content[0][cntr] = search_line1[cntr++];
 27392  00322A  5001               	movf	__display_search@cntr,w,c
 27393  00322C  0D01               	mullw	1
 27394  00322E  0ED8               	movlw	low _search_line1
 27395  003230  24F3               	addwf	prodl,w,c
 27396  003232  6EF6               	movwf	tblptrl,c
 27397  003234  0E8D               	movlw	high _search_line1
 27398  003236  20F4               	addwfc	prodh,w,c
 27399  003238  6EF7               	movwf	tblptrh,c
 27400  00323A                     	if	1	;There are 3 active tblptr bytes
 27401  00323A  6AF8               	clrf	tblptru,c
 27402  00323C  0E00               	movlw	low (__mediumconst shr (0+16))
 27403  00323E  22F8               	addwfc	tblptru,f,c
 27404  003240                     	endif
 27405  003240  5001               	movf	__display_search@cntr,w,c
 27406  003242  0D01               	mullw	1
 27407  003244  0E76               	movlw	low _display_content
 27408  003246  24F3               	addwf	prodl,w,c
 27409  003248  6ED9               	movwf	fsr2l,c
 27410  00324A  0E01               	movlw	high _display_content
 27411  00324C  20F4               	addwfc	prodh,w,c
 27412  00324E  6EDA               	movwf	fsr2h,c
 27413  003250  0008               	tblrd		*
 27414  003252  CFF5 FFDF          	movff	tablat,indf2
 27415  003256  2A01               	incf	__display_search@cntr,f,c
 27416  003258                     l1553:
 27417  003258  5001               	movf	__display_search@cntr,w,c
 27418  00325A  0D01               	mullw	1
 27419  00325C  0ED8               	movlw	low _search_line1
 27420  00325E  24F3               	addwf	prodl,w,c
 27421  003260  6EF6               	movwf	tblptrl,c
 27422  003262  0E8D               	movlw	high _search_line1
 27423  003264  20F4               	addwfc	prodh,w,c
 27424  003266  6EF7               	movwf	tblptrh,c
 27425  003268                     	if	1	;There are 3 active tblptr bytes
 27426  003268  6AF8               	clrf	tblptru,c
 27427  00326A  0E00               	movlw	low (__mediumconst shr (0+16))
 27428  00326C  22F8               	addwfc	tblptru,f,c
 27429  00326E                     	endif
 27430  00326E  0008               	tblrd		*
 27431  003270  50F5               	movf	tablat,w,c
 27432  003272  0900               	iorlw	0
 27433  003274  A4D8               	btfss	status,2,c
 27434  003276  D7D9               	goto	l1554
 27435                           
 27436                           ;display.c: 370: cntr = 0;
 27437  003278  0E00               	movlw	0
 27438  00327A  6E01               	movwf	__display_search@cntr,c
 27439                           
 27440                           ;display.c: 371: while(search_line2[cntr])
 27441  00327C  D017               	goto	l1556
 27442  00327E                     
 27443                           ;display.c: 372: display_content[1][cntr] = search_line2[cntr++];
 27444  00327E  5001               	movf	__display_search@cntr,w,c
 27445  003280  0D01               	mullw	1
 27446  003282  0E17               	movlw	low _search_line2
 27447  003284  24F3               	addwf	prodl,w,c
 27448  003286  6EF6               	movwf	tblptrl,c
 27449  003288  0E8D               	movlw	high _search_line2
 27450  00328A  20F4               	addwfc	prodh,w,c
 27451  00328C  6EF7               	movwf	tblptrh,c
 27452  00328E                     	if	1	;There are 3 active tblptr bytes
 27453  00328E  6AF8               	clrf	tblptru,c
 27454  003290  0E00               	movlw	low (__mediumconst shr (0+16))
 27455  003292  22F8               	addwfc	tblptru,f,c
 27456  003294                     	endif
 27457  003294  5001               	movf	__display_search@cntr,w,c
 27458  003296  0D01               	mullw	1
 27459  003298  0E8A               	movlw	low (_display_content+20)
 27460  00329A  24F3               	addwf	prodl,w,c
 27461  00329C  6ED9               	movwf	fsr2l,c
 27462  00329E  0E01               	movlw	high (_display_content+20)
 27463  0032A0  20F4               	addwfc	prodh,w,c
 27464  0032A2  6EDA               	movwf	fsr2h,c
 27465  0032A4  0008               	tblrd		*
 27466  0032A6  CFF5 FFDF          	movff	tablat,indf2
 27467  0032AA  2A01               	incf	__display_search@cntr,f,c
 27468  0032AC                     l1556:
 27469  0032AC  5001               	movf	__display_search@cntr,w,c
 27470  0032AE  0D01               	mullw	1
 27471  0032B0  0E17               	movlw	low _search_line2
 27472  0032B2  24F3               	addwf	prodl,w,c
 27473  0032B4  6EF6               	movwf	tblptrl,c
 27474  0032B6  0E8D               	movlw	high _search_line2
 27475  0032B8  20F4               	addwfc	prodh,w,c
 27476  0032BA  6EF7               	movwf	tblptrh,c
 27477  0032BC                     	if	1	;There are 3 active tblptr bytes
 27478  0032BC  6AF8               	clrf	tblptru,c
 27479  0032BE  0E00               	movlw	low (__mediumconst shr (0+16))
 27480  0032C0  22F8               	addwfc	tblptru,f,c
 27481  0032C2                     	endif
 27482  0032C2  0008               	tblrd		*
 27483  0032C4  50F5               	movf	tablat,w,c
 27484  0032C6  0900               	iorlw	0
 27485  0032C8  A4D8               	btfss	status,2,c
 27486  0032CA  D7D9               	goto	l1557
 27487                           
 27488                           ;display.c: 373: cntr = 0;
 27489  0032CC  0E00               	movlw	0
 27490  0032CE  6E01               	movwf	__display_search@cntr,c
 27491                           
 27492                           ;display.c: 374: while(search_line3[cntr])
 27493  0032D0  D017               	goto	l1559
 27494  0032D2                     
 27495                           ;display.c: 375: display_content[2][cntr] = search_line3[cntr++];
 27496  0032D2  5001               	movf	__display_search@cntr,w,c
 27497  0032D4  0D01               	mullw	1
 27498  0032D6  0E96               	movlw	low _search_line3
 27499  0032D8  24F3               	addwf	prodl,w,c
 27500  0032DA  6EF6               	movwf	tblptrl,c
 27501  0032DC  0E8C               	movlw	high _search_line3
 27502  0032DE  20F4               	addwfc	prodh,w,c
 27503  0032E0  6EF7               	movwf	tblptrh,c
 27504  0032E2                     	if	1	;There are 3 active tblptr bytes
 27505  0032E2  6AF8               	clrf	tblptru,c
 27506  0032E4  0E00               	movlw	low (__mediumconst shr (0+16))
 27507  0032E6  22F8               	addwfc	tblptru,f,c
 27508  0032E8                     	endif
 27509  0032E8  5001               	movf	__display_search@cntr,w,c
 27510  0032EA  0D01               	mullw	1
 27511  0032EC  0E9E               	movlw	low (_display_content+40)
 27512  0032EE  24F3               	addwf	prodl,w,c
 27513  0032F0  6ED9               	movwf	fsr2l,c
 27514  0032F2  0E01               	movlw	high (_display_content+40)
 27515  0032F4  20F4               	addwfc	prodh,w,c
 27516  0032F6  6EDA               	movwf	fsr2h,c
 27517  0032F8  0008               	tblrd		*
 27518  0032FA  CFF5 FFDF          	movff	tablat,indf2
 27519  0032FE  2A01               	incf	__display_search@cntr,f,c
 27520  003300                     l1559:
 27521  003300  5001               	movf	__display_search@cntr,w,c
 27522  003302  0D01               	mullw	1
 27523  003304  0E96               	movlw	low _search_line3
 27524  003306  24F3               	addwf	prodl,w,c
 27525  003308  6EF6               	movwf	tblptrl,c
 27526  00330A  0E8C               	movlw	high _search_line3
 27527  00330C  20F4               	addwfc	prodh,w,c
 27528  00330E  6EF7               	movwf	tblptrh,c
 27529  003310                     	if	1	;There are 3 active tblptr bytes
 27530  003310  6AF8               	clrf	tblptru,c
 27531  003312  0E00               	movlw	low (__mediumconst shr (0+16))
 27532  003314  22F8               	addwfc	tblptru,f,c
 27533  003316                     	endif
 27534  003316  0008               	tblrd		*
 27535  003318  50F5               	movf	tablat,w,c
 27536  00331A  0900               	iorlw	0
 27537  00331C  A4D8               	btfss	status,2,c
 27538  00331E  D7D9               	goto	l1560
 27539                           
 27540                           ;display.c: 376: cntr = 0;
 27541  003320  0E00               	movlw	0
 27542  003322  6E01               	movwf	__display_search@cntr,c
 27543                           
 27544                           ;display.c: 377: while(search_line4[cntr])
 27545  003324  D017               	goto	l1562
 27546  003326                     
 27547                           ;display.c: 378: display_content[3][cntr] = search_line4[cntr++];
 27548  003326  5001               	movf	__display_search@cntr,w,c
 27549  003328  0D01               	mullw	1
 27550  00332A  0E57               	movlw	low _search_line4
 27551  00332C  24F3               	addwf	prodl,w,c
 27552  00332E  6EF6               	movwf	tblptrl,c
 27553  003330  0E8E               	movlw	high _search_line4
 27554  003332  20F4               	addwfc	prodh,w,c
 27555  003334  6EF7               	movwf	tblptrh,c
 27556  003336                     	if	1	;There are 3 active tblptr bytes
 27557  003336  6AF8               	clrf	tblptru,c
 27558  003338  0E00               	movlw	low (__mediumconst shr (0+16))
 27559  00333A  22F8               	addwfc	tblptru,f,c
 27560  00333C                     	endif
 27561  00333C  5001               	movf	__display_search@cntr,w,c
 27562  00333E  0D01               	mullw	1
 27563  003340  0EB2               	movlw	low (_display_content+60)
 27564  003342  24F3               	addwf	prodl,w,c
 27565  003344  6ED9               	movwf	fsr2l,c
 27566  003346  0E01               	movlw	high (_display_content+60)
 27567  003348  20F4               	addwfc	prodh,w,c
 27568  00334A  6EDA               	movwf	fsr2h,c
 27569  00334C  0008               	tblrd		*
 27570  00334E  CFF5 FFDF          	movff	tablat,indf2
 27571  003352  2A01               	incf	__display_search@cntr,f,c
 27572  003354                     l1562:
 27573  003354  5001               	movf	__display_search@cntr,w,c
 27574  003356  0D01               	mullw	1
 27575  003358  0E57               	movlw	low _search_line4
 27576  00335A  24F3               	addwf	prodl,w,c
 27577  00335C  6EF6               	movwf	tblptrl,c
 27578  00335E  0E8E               	movlw	high _search_line4
 27579  003360  20F4               	addwfc	prodh,w,c
 27580  003362  6EF7               	movwf	tblptrh,c
 27581  003364                     	if	1	;There are 3 active tblptr bytes
 27582  003364  6AF8               	clrf	tblptru,c
 27583  003366  0E00               	movlw	low (__mediumconst shr (0+16))
 27584  003368  22F8               	addwfc	tblptru,f,c
 27585  00336A                     	endif
 27586  00336A  0008               	tblrd		*
 27587  00336C  50F5               	movf	tablat,w,c
 27588  00336E  0900               	iorlw	0
 27589  003370  B4D8               	btfsc	status,2,c
 27590  003372  0012               	return	
 27591  003374  D7D8               	goto	l1563
 27592  003376                     __end_of__display_search:
 27593                           	opt stack 0
 27594                           tosu	equ	0xFFF
 27595                           tosh	equ	0xFFE
 27596                           tosl	equ	0xFFD
 27597                           pclath	equ	0xFFA
 27598                           tblptru	equ	0xFF8
 27599                           tblptrh	equ	0xFF7
 27600                           tblptrl	equ	0xFF6
 27601                           tablat	equ	0xFF5
 27602                           prodh	equ	0xFF4
 27603                           prodl	equ	0xFF3
 27604                           intcon	equ	0xFF2
 27605                           intcon2	equ	0xFF1
 27606                           intcon3	equ	0xFF0
 27607                           indf0	equ	0xFEF
 27608                           postinc0	equ	0xFEE
 27609                           fsr0h	equ	0xFEA
 27610                           fsr0l	equ	0xFE9
 27611                           wreg	equ	0xFE8
 27612                           indf1	equ	0xFE7
 27613                           postdec1	equ	0xFE5
 27614                           plusw1	equ	0xFE3
 27615                           fsr1h	equ	0xFE2
 27616                           fsr1l	equ	0xFE1
 27617                           indf2	equ	0xFDF
 27618                           postinc2	equ	0xFDE
 27619                           postdec2	equ	0xFDD
 27620                           plusw2	equ	0xFDB
 27621                           fsr2h	equ	0xFDA
 27622                           fsr2l	equ	0xFD9
 27623                           status	equ	0xFD8
 27624                           
 27625 ;; *************** function __display_rebooting *****************
 27626 ;; Defined at:
 27627 ;;		line 538 in file "display.c"
 27628 ;; Parameters:    Size  Location     Type
 27629 ;;		None
 27630 ;; Auto vars:     Size  Location     Type
 27631 ;;  cntr            1    0[COMRAM] unsigned char 
 27632 ;; Return value:  Size  Location     Type
 27633 ;;                  1    wreg      void 
 27634 ;; Registers used:
 27635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27636 ;; Tracked objects:
 27637 ;;		On entry : 0/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27645 ;;Total ram usage:        1 bytes
 27646 ;; Hardware stack levels used:    1
 27647 ;; This function calls:
 27648 ;;		Nothing
 27649 ;; This function is called by:
 27650 ;;		_display_prepare
 27651 ;; This function uses a non-reentrant model
 27652 ;;
 27653                           
 27654                           	psect	text138
 27655  0064F6                     __ptext138:
 27656                           	opt stack 0
 27657  0064F6                     __display_rebooting:
 27658                           	opt stack 26
 27659                           
 27660                           ;display.c: 540: uint8_t cntr;;display.c: 541: cntr = 0;
 27661                           
 27662                           ;incstack = 0
 27663  0064F6  0E00               	movlw	0
 27664  0064F8  6E01               	movwf	__display_rebooting@cntr,c
 27665                           
 27666                           ;display.c: 542: while(reboot_line1[cntr])
 27667  0064FA  D017               	goto	l1677
 27668  0064FC                     
 27669                           ;display.c: 543: display_content[0][cntr] = reboot_line1[cntr++];
 27670  0064FC  5001               	movf	__display_rebooting@cntr,w,c
 27671  0064FE  0D01               	mullw	1
 27672  006500  0E33               	movlw	low _reboot_line1
 27673  006502  24F3               	addwf	prodl,w,c
 27674  006504  6EF6               	movwf	tblptrl,c
 27675  006506  0E8E               	movlw	high _reboot_line1
 27676  006508  20F4               	addwfc	prodh,w,c
 27677  00650A  6EF7               	movwf	tblptrh,c
 27678  00650C                     	if	1	;There are 3 active tblptr bytes
 27679  00650C  6AF8               	clrf	tblptru,c
 27680  00650E  0E00               	movlw	low (__mediumconst shr (0+16))
 27681  006510  22F8               	addwfc	tblptru,f,c
 27682  006512                     	endif
 27683  006512  5001               	movf	__display_rebooting@cntr,w,c
 27684  006514  0D01               	mullw	1
 27685  006516  0E76               	movlw	low _display_content
 27686  006518  24F3               	addwf	prodl,w,c
 27687  00651A  6ED9               	movwf	fsr2l,c
 27688  00651C  0E01               	movlw	high _display_content
 27689  00651E  20F4               	addwfc	prodh,w,c
 27690  006520  6EDA               	movwf	fsr2h,c
 27691  006522  0008               	tblrd		*
 27692  006524  CFF5 FFDF          	movff	tablat,indf2
 27693  006528  2A01               	incf	__display_rebooting@cntr,f,c
 27694  00652A                     l1677:
 27695  00652A  5001               	movf	__display_rebooting@cntr,w,c
 27696  00652C  0D01               	mullw	1
 27697  00652E  0E33               	movlw	low _reboot_line1
 27698  006530  24F3               	addwf	prodl,w,c
 27699  006532  6EF6               	movwf	tblptrl,c
 27700  006534  0E8E               	movlw	high _reboot_line1
 27701  006536  20F4               	addwfc	prodh,w,c
 27702  006538  6EF7               	movwf	tblptrh,c
 27703  00653A                     	if	1	;There are 3 active tblptr bytes
 27704  00653A  6AF8               	clrf	tblptru,c
 27705  00653C  0E00               	movlw	low (__mediumconst shr (0+16))
 27706  00653E  22F8               	addwfc	tblptru,f,c
 27707  006540                     	endif
 27708  006540  0008               	tblrd		*
 27709  006542  50F5               	movf	tablat,w,c
 27710  006544  0900               	iorlw	0
 27711  006546  B4D8               	btfsc	status,2,c
 27712  006548  0012               	return	
 27713  00654A  D7D8               	goto	l1678
 27714  00654C                     __end_of__display_rebooting:
 27715                           	opt stack 0
 27716                           tosu	equ	0xFFF
 27717                           tosh	equ	0xFFE
 27718                           tosl	equ	0xFFD
 27719                           pclath	equ	0xFFA
 27720                           tblptru	equ	0xFF8
 27721                           tblptrh	equ	0xFF7
 27722                           tblptrl	equ	0xFF6
 27723                           tablat	equ	0xFF5
 27724                           prodh	equ	0xFF4
 27725                           prodl	equ	0xFF3
 27726                           intcon	equ	0xFF2
 27727                           intcon2	equ	0xFF1
 27728                           intcon3	equ	0xFF0
 27729                           indf0	equ	0xFEF
 27730                           postinc0	equ	0xFEE
 27731                           fsr0h	equ	0xFEA
 27732                           fsr0l	equ	0xFE9
 27733                           wreg	equ	0xFE8
 27734                           indf1	equ	0xFE7
 27735                           postdec1	equ	0xFE5
 27736                           plusw1	equ	0xFE3
 27737                           fsr1h	equ	0xFE2
 27738                           fsr1l	equ	0xFE1
 27739                           indf2	equ	0xFDF
 27740                           postinc2	equ	0xFDE
 27741                           postdec2	equ	0xFDD
 27742                           plusw2	equ	0xFDB
 27743                           fsr2h	equ	0xFDA
 27744                           fsr2l	equ	0xFD9
 27745                           status	equ	0xFD8
 27746                           
 27747 ;; *************** function __display_programming *****************
 27748 ;; Defined at:
 27749 ;;		line 496 in file "display.c"
 27750 ;; Parameters:    Size  Location     Type
 27751 ;;		None
 27752 ;; Auto vars:     Size  Location     Type
 27753 ;;  cntr            1   28[COMRAM] unsigned char 
 27754 ;; Return value:  Size  Location     Type
 27755 ;;                  1    wreg      void 
 27756 ;; Registers used:
 27757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27758 ;; Tracked objects:
 27759 ;;		On entry : 0/0
 27760 ;;		On exit  : 0/0
 27761 ;;		Unchanged: 0/0
 27762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27767 ;;Total ram usage:        1 bytes
 27768 ;; Hardware stack levels used:    1
 27769 ;; Hardware stack levels required when called:    4
 27770 ;; This function calls:
 27771 ;;		__display_itoa_u16
 27772 ;;		_bootloader_get_entries
 27773 ;;		_bootloader_get_flashPagesWritten
 27774 ;;		_bootloader_get_total_entries
 27775 ;; This function is called by:
 27776 ;;		_display_prepare
 27777 ;; This function uses a non-reentrant model
 27778 ;;
 27779                           
 27780                           	psect	text139
 27781  0027BA                     __ptext139:
 27782                           	opt stack 0
 27783  0027BA                     __display_programming:
 27784                           	opt stack 22
 27785                           
 27786                           ;display.c: 498: uint8_t cntr;;display.c: 499: cntr = 0;
 27787                           
 27788                           ;incstack = 0
 27789  0027BA  0E00               	movlw	0
 27790  0027BC  6E1D               	movwf	__display_programming@cntr,c
 27791                           
 27792                           ;display.c: 500: while(programming_line1[cntr])
 27793  0027BE  D017               	goto	l1647
 27794  0027C0                     
 27795                           ;display.c: 501: display_content[0][cntr] = programming_line1[cntr++];
 27796  0027C0  501D               	movf	__display_programming@cntr,w,c
 27797  0027C2  0D01               	mullw	1
 27798  0027C4  0E88               	movlw	low _programming_line1
 27799  0027C6  24F3               	addwf	prodl,w,c
 27800  0027C8  6EF6               	movwf	tblptrl,c
 27801  0027CA  0E8D               	movlw	high _programming_line1
 27802  0027CC  20F4               	addwfc	prodh,w,c
 27803  0027CE  6EF7               	movwf	tblptrh,c
 27804  0027D0                     	if	1	;There are 3 active tblptr bytes
 27805  0027D0  6AF8               	clrf	tblptru,c
 27806  0027D2  0E00               	movlw	low (__mediumconst shr (0+16))
 27807  0027D4  22F8               	addwfc	tblptru,f,c
 27808  0027D6                     	endif
 27809  0027D6  501D               	movf	__display_programming@cntr,w,c
 27810  0027D8  0D01               	mullw	1
 27811  0027DA  0E76               	movlw	low _display_content
 27812  0027DC  24F3               	addwf	prodl,w,c
 27813  0027DE  6ED9               	movwf	fsr2l,c
 27814  0027E0  0E01               	movlw	high _display_content
 27815  0027E2  20F4               	addwfc	prodh,w,c
 27816  0027E4  6EDA               	movwf	fsr2h,c
 27817  0027E6  0008               	tblrd		*
 27818  0027E8  CFF5 FFDF          	movff	tablat,indf2
 27819  0027EC  2A1D               	incf	__display_programming@cntr,f,c
 27820  0027EE                     l1647:
 27821  0027EE  501D               	movf	__display_programming@cntr,w,c
 27822  0027F0  0D01               	mullw	1
 27823  0027F2  0E88               	movlw	low _programming_line1
 27824  0027F4  24F3               	addwf	prodl,w,c
 27825  0027F6  6EF6               	movwf	tblptrl,c
 27826  0027F8  0E8D               	movlw	high _programming_line1
 27827  0027FA  20F4               	addwfc	prodh,w,c
 27828  0027FC  6EF7               	movwf	tblptrh,c
 27829  0027FE                     	if	1	;There are 3 active tblptr bytes
 27830  0027FE  6AF8               	clrf	tblptru,c
 27831  002800  0E00               	movlw	low (__mediumconst shr (0+16))
 27832  002802  22F8               	addwfc	tblptru,f,c
 27833  002804                     	endif
 27834  002804  0008               	tblrd		*
 27835  002806  50F5               	movf	tablat,w,c
 27836  002808  0900               	iorlw	0
 27837  00280A  A4D8               	btfss	status,2,c
 27838  00280C  D7D9               	goto	l1648
 27839                           
 27840                           ;display.c: 503: cntr = 0;
 27841  00280E  0E00               	movlw	0
 27842  002810  6E1D               	movwf	__display_programming@cntr,c
 27843                           
 27844                           ;display.c: 504: while(programming_line2[cntr])
 27845  002812  D017               	goto	l1650
 27846  002814                     
 27847                           ;display.c: 505: display_content[1][cntr] = programming_line2[cntr++];
 27848  002814  501D               	movf	__display_programming@cntr,w,c
 27849  002816  0D01               	mullw	1
 27850  002818  0ED0               	movlw	low _programming_line2
 27851  00281A  24F3               	addwf	prodl,w,c
 27852  00281C  6EF6               	movwf	tblptrl,c
 27853  00281E  0E8C               	movlw	high _programming_line2
 27854  002820  20F4               	addwfc	prodh,w,c
 27855  002822  6EF7               	movwf	tblptrh,c
 27856  002824                     	if	1	;There are 3 active tblptr bytes
 27857  002824  6AF8               	clrf	tblptru,c
 27858  002826  0E00               	movlw	low (__mediumconst shr (0+16))
 27859  002828  22F8               	addwfc	tblptru,f,c
 27860  00282A                     	endif
 27861  00282A  501D               	movf	__display_programming@cntr,w,c
 27862  00282C  0D01               	mullw	1
 27863  00282E  0E8A               	movlw	low (_display_content+20)
 27864  002830  24F3               	addwf	prodl,w,c
 27865  002832  6ED9               	movwf	fsr2l,c
 27866  002834  0E01               	movlw	high (_display_content+20)
 27867  002836  20F4               	addwfc	prodh,w,c
 27868  002838  6EDA               	movwf	fsr2h,c
 27869  00283A  0008               	tblrd		*
 27870  00283C  CFF5 FFDF          	movff	tablat,indf2
 27871  002840  2A1D               	incf	__display_programming@cntr,f,c
 27872  002842                     l1650:
 27873  002842  501D               	movf	__display_programming@cntr,w,c
 27874  002844  0D01               	mullw	1
 27875  002846  0ED0               	movlw	low _programming_line2
 27876  002848  24F3               	addwf	prodl,w,c
 27877  00284A  6EF6               	movwf	tblptrl,c
 27878  00284C  0E8C               	movlw	high _programming_line2
 27879  00284E  20F4               	addwfc	prodh,w,c
 27880  002850  6EF7               	movwf	tblptrh,c
 27881  002852                     	if	1	;There are 3 active tblptr bytes
 27882  002852  6AF8               	clrf	tblptru,c
 27883  002854  0E00               	movlw	low (__mediumconst shr (0+16))
 27884  002856  22F8               	addwfc	tblptru,f,c
 27885  002858                     	endif
 27886  002858  0008               	tblrd		*
 27887  00285A  50F5               	movf	tablat,w,c
 27888  00285C  0900               	iorlw	0
 27889  00285E  A4D8               	btfss	status,2,c
 27890  002860  D7D9               	goto	l1651
 27891                           
 27892                           ;display.c: 507: cntr = 0;
 27893  002862  0E00               	movlw	0
 27894  002864  6E1D               	movwf	__display_programming@cntr,c
 27895                           
 27896                           ;display.c: 508: while(programming_line3[cntr])
 27897  002866  D017               	goto	l1653
 27898  002868                     
 27899                           ;display.c: 509: display_content[2][cntr] = programming_line3[cntr++];
 27900  002868  501D               	movf	__display_programming@cntr,w,c
 27901  00286A  0D01               	mullw	1
 27902  00286C  0E81               	movlw	low _programming_line3
 27903  00286E  24F3               	addwf	prodl,w,c
 27904  002870  6EF6               	movwf	tblptrl,c
 27905  002872  0E8E               	movlw	high _programming_line3
 27906  002874  20F4               	addwfc	prodh,w,c
 27907  002876  6EF7               	movwf	tblptrh,c
 27908  002878                     	if	1	;There are 3 active tblptr bytes
 27909  002878  6AF8               	clrf	tblptru,c
 27910  00287A  0E00               	movlw	low (__mediumconst shr (0+16))
 27911  00287C  22F8               	addwfc	tblptru,f,c
 27912  00287E                     	endif
 27913  00287E  501D               	movf	__display_programming@cntr,w,c
 27914  002880  0D01               	mullw	1
 27915  002882  0E9E               	movlw	low (_display_content+40)
 27916  002884  24F3               	addwf	prodl,w,c
 27917  002886  6ED9               	movwf	fsr2l,c
 27918  002888  0E01               	movlw	high (_display_content+40)
 27919  00288A  20F4               	addwfc	prodh,w,c
 27920  00288C  6EDA               	movwf	fsr2h,c
 27921  00288E  0008               	tblrd		*
 27922  002890  CFF5 FFDF          	movff	tablat,indf2
 27923  002894  2A1D               	incf	__display_programming@cntr,f,c
 27924  002896                     l1653:
 27925  002896  501D               	movf	__display_programming@cntr,w,c
 27926  002898  0D01               	mullw	1
 27927  00289A  0E81               	movlw	low _programming_line3
 27928  00289C  24F3               	addwf	prodl,w,c
 27929  00289E  6EF6               	movwf	tblptrl,c
 27930  0028A0  0E8E               	movlw	high _programming_line3
 27931  0028A2  20F4               	addwfc	prodh,w,c
 27932  0028A4  6EF7               	movwf	tblptrh,c
 27933  0028A6                     	if	1	;There are 3 active tblptr bytes
 27934  0028A6  6AF8               	clrf	tblptru,c
 27935  0028A8  0E00               	movlw	low (__mediumconst shr (0+16))
 27936  0028AA  22F8               	addwfc	tblptru,f,c
 27937  0028AC                     	endif
 27938  0028AC  0008               	tblrd		*
 27939  0028AE  50F5               	movf	tablat,w,c
 27940  0028B0  0900               	iorlw	0
 27941  0028B2  A4D8               	btfss	status,2,c
 27942  0028B4  D7D9               	goto	l1654
 27943                           
 27944                           ;display.c: 510: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 27945  0028B6  ECF7  F038         	call	_bootloader_get_entries	;wreg free
 27946  0028BA  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27947  0028BE  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27948  0028C2  501D               	movf	__display_programming@cntr,w,c
 27949  0028C4  0D01               	mullw	1
 27950  0028C6  0E9E               	movlw	low (_display_content+40)
 27951  0028C8  24F3               	addwf	prodl,w,c
 27952  0028CA  6E1B               	movwf	__display_itoa_u16@text,c
 27953  0028CC  0E01               	movlw	high (_display_content+40)
 27954  0028CE  20F4               	addwfc	prodh,w,c
 27955  0028D0  6E1C               	movwf	__display_itoa_u16@text+1,c
 27956  0028D2  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27957  0028D6  261D               	addwf	__display_programming@cntr,f,c
 27958                           
 27959                           ;display.c: 511: display_content[2][cntr++] = '/';
 27960  0028D8  501D               	movf	__display_programming@cntr,w,c
 27961  0028DA  0D01               	mullw	1
 27962  0028DC  0E9E               	movlw	low (_display_content+40)
 27963  0028DE  24F3               	addwf	prodl,w,c
 27964  0028E0  6ED9               	movwf	fsr2l,c
 27965  0028E2  0E01               	movlw	high (_display_content+40)
 27966  0028E4  20F4               	addwfc	prodh,w,c
 27967  0028E6  6EDA               	movwf	fsr2h,c
 27968  0028E8  0E2F               	movlw	47
 27969  0028EA  6EDF               	movwf	indf2,c
 27970  0028EC  2A1D               	incf	__display_programming@cntr,f,c
 27971                           
 27972                           ;display.c: 512: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 27973  0028EE  EC01  F039         	call	_bootloader_get_total_entries	;wreg free
 27974  0028F2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 27975  0028F6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 27976  0028FA  501D               	movf	__display_programming@cntr,w,c
 27977  0028FC  0D01               	mullw	1
 27978  0028FE  0E9E               	movlw	low (_display_content+40)
 27979  002900  24F3               	addwf	prodl,w,c
 27980  002902  6E1B               	movwf	__display_itoa_u16@text,c
 27981  002904  0E01               	movlw	high (_display_content+40)
 27982  002906  20F4               	addwfc	prodh,w,c
 27983  002908  6E1C               	movwf	__display_itoa_u16@text+1,c
 27984  00290A  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27985                           
 27986                           ;display.c: 514: cntr = 0;
 27987  00290E  0E00               	movlw	0
 27988  002910  6E1D               	movwf	__display_programming@cntr,c
 27989                           
 27990                           ;display.c: 515: while(programming_line4[cntr])
 27991  002912  D017               	goto	l1656
 27992  002914                     
 27993                           ;display.c: 516: display_content[3][cntr] = programming_line4[cntr++];
 27994  002914  501D               	movf	__display_programming@cntr,w,c
 27995  002916  0D01               	mullw	1
 27996  002918  0E78               	movlw	low _programming_line4
 27997  00291A  24F3               	addwf	prodl,w,c
 27998  00291C  6EF6               	movwf	tblptrl,c
 27999  00291E  0E8D               	movlw	high _programming_line4
 28000  002920  20F4               	addwfc	prodh,w,c
 28001  002922  6EF7               	movwf	tblptrh,c
 28002  002924                     	if	1	;There are 3 active tblptr bytes
 28003  002924  6AF8               	clrf	tblptru,c
 28004  002926  0E00               	movlw	low (__mediumconst shr (0+16))
 28005  002928  22F8               	addwfc	tblptru,f,c
 28006  00292A                     	endif
 28007  00292A  501D               	movf	__display_programming@cntr,w,c
 28008  00292C  0D01               	mullw	1
 28009  00292E  0EB2               	movlw	low (_display_content+60)
 28010  002930  24F3               	addwf	prodl,w,c
 28011  002932  6ED9               	movwf	fsr2l,c
 28012  002934  0E01               	movlw	high (_display_content+60)
 28013  002936  20F4               	addwfc	prodh,w,c
 28014  002938  6EDA               	movwf	fsr2h,c
 28015  00293A  0008               	tblrd		*
 28016  00293C  CFF5 FFDF          	movff	tablat,indf2
 28017  002940  2A1D               	incf	__display_programming@cntr,f,c
 28018  002942                     l1656:
 28019  002942  501D               	movf	__display_programming@cntr,w,c
 28020  002944  0D01               	mullw	1
 28021  002946  0E78               	movlw	low _programming_line4
 28022  002948  24F3               	addwf	prodl,w,c
 28023  00294A  6EF6               	movwf	tblptrl,c
 28024  00294C  0E8D               	movlw	high _programming_line4
 28025  00294E  20F4               	addwfc	prodh,w,c
 28026  002950  6EF7               	movwf	tblptrh,c
 28027  002952                     	if	1	;There are 3 active tblptr bytes
 28028  002952  6AF8               	clrf	tblptru,c
 28029  002954  0E00               	movlw	low (__mediumconst shr (0+16))
 28030  002956  22F8               	addwfc	tblptru,f,c
 28031  002958                     	endif
 28032  002958  0008               	tblrd		*
 28033  00295A  50F5               	movf	tablat,w,c
 28034  00295C  0900               	iorlw	0
 28035  00295E  A4D8               	btfss	status,2,c
 28036  002960  D7D9               	goto	l1657
 28037                           
 28038                           ;display.c: 517: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28039  002962  ECFC  F038         	call	_bootloader_get_flashPagesWritten	;wreg free
 28040  002966  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28041  00296A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28042  00296E  501D               	movf	__display_programming@cntr,w,c
 28043  002970  0D01               	mullw	1
 28044  002972  0EB2               	movlw	low (_display_content+60)
 28045  002974  24F3               	addwf	prodl,w,c
 28046  002976  6E1B               	movwf	__display_itoa_u16@text,c
 28047  002978  0E01               	movlw	high (_display_content+60)
 28048  00297A  20F4               	addwfc	prodh,w,c
 28049  00297C  6E1C               	movwf	__display_itoa_u16@text+1,c
 28050  00297E  ECCD  F027         	call	__display_itoa_u16	;wreg free
 28051  002982  0012               	return		;funcret
 28052  002984                     __end_of__display_programming:
 28053                           	opt stack 0
 28054                           tosu	equ	0xFFF
 28055                           tosh	equ	0xFFE
 28056                           tosl	equ	0xFFD
 28057                           pclath	equ	0xFFA
 28058                           tblptru	equ	0xFF8
 28059                           tblptrh	equ	0xFF7
 28060                           tblptrl	equ	0xFF6
 28061                           tablat	equ	0xFF5
 28062                           prodh	equ	0xFF4
 28063                           prodl	equ	0xFF3
 28064                           intcon	equ	0xFF2
 28065                           intcon2	equ	0xFF1
 28066                           intcon3	equ	0xFF0
 28067                           indf0	equ	0xFEF
 28068                           postinc0	equ	0xFEE
 28069                           fsr0h	equ	0xFEA
 28070                           fsr0l	equ	0xFE9
 28071                           wreg	equ	0xFE8
 28072                           indf1	equ	0xFE7
 28073                           postdec1	equ	0xFE5
 28074                           plusw1	equ	0xFE3
 28075                           fsr1h	equ	0xFE2
 28076                           fsr1l	equ	0xFE1
 28077                           indf2	equ	0xFDF
 28078                           postinc2	equ	0xFDE
 28079                           postdec2	equ	0xFDD
 28080                           plusw2	equ	0xFDB
 28081                           fsr2h	equ	0xFDA
 28082                           fsr2l	equ	0xFD9
 28083                           status	equ	0xFD8
 28084                           
 28085 ;; *************** function __display_found *****************
 28086 ;; Defined at:
 28087 ;;		line 381 in file "display.c"
 28088 ;; Parameters:    Size  Location     Type
 28089 ;;		None
 28090 ;; Auto vars:     Size  Location     Type
 28091 ;;  cntr            1   24[COMRAM] unsigned char 
 28092 ;;  start           1   23[COMRAM] unsigned char 
 28093 ;; Return value:  Size  Location     Type
 28094 ;;                  1    wreg      void 
 28095 ;; Registers used:
 28096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28097 ;; Tracked objects:
 28098 ;;		On entry : 0/0
 28099 ;;		On exit  : 0/0
 28100 ;;		Unchanged: 0/0
 28101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28104 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28106 ;;Total ram usage:        4 bytes
 28107 ;; Hardware stack levels used:    1
 28108 ;; Hardware stack levels required when called:    2
 28109 ;; This function calls:
 28110 ;;		__display_itoa_u32
 28111 ;;		_bootloader_get_file_size
 28112 ;; This function is called by:
 28113 ;;		_display_prepare
 28114 ;; This function uses a non-reentrant model
 28115 ;;
 28116                           
 28117                           	psect	text140
 28118  00222A                     __ptext140:
 28119                           	opt stack 0
 28120  00222A                     __display_found:
 28121                           	opt stack 24
 28122                           
 28123                           ;display.c: 383: uint8_t cntr;;display.c: 384: uint8_t start;;display.c: 386: cntr = 0;
 28124                           
 28125                           ;incstack = 0
 28126  00222A  0E00               	movlw	0
 28127  00222C  6E19               	movwf	__display_found@cntr,c
 28128                           
 28129                           ;display.c: 387: while(found_line1[cntr])
 28130  00222E  D017               	goto	l1568
 28131  002230                     
 28132                           ;display.c: 388: display_content[0][cntr] = found_line1[cntr++];
 28133  002230  5019               	movf	__display_found@cntr,w,c
 28134  002232  0D01               	mullw	1
 28135  002234  0EC8               	movlw	low _found_line1
 28136  002236  24F3               	addwf	prodl,w,c
 28137  002238  6EF6               	movwf	tblptrl,c
 28138  00223A  0E8D               	movlw	high _found_line1
 28139  00223C  20F4               	addwfc	prodh,w,c
 28140  00223E  6EF7               	movwf	tblptrh,c
 28141  002240                     	if	1	;There are 3 active tblptr bytes
 28142  002240  6AF8               	clrf	tblptru,c
 28143  002242  0E00               	movlw	low (__mediumconst shr (0+16))
 28144  002244  22F8               	addwfc	tblptru,f,c
 28145  002246                     	endif
 28146  002246  5019               	movf	__display_found@cntr,w,c
 28147  002248  0D01               	mullw	1
 28148  00224A  0E76               	movlw	low _display_content
 28149  00224C  24F3               	addwf	prodl,w,c
 28150  00224E  6ED9               	movwf	fsr2l,c
 28151  002250  0E01               	movlw	high _display_content
 28152  002252  20F4               	addwfc	prodh,w,c
 28153  002254  6EDA               	movwf	fsr2h,c
 28154  002256  0008               	tblrd		*
 28155  002258  CFF5 FFDF          	movff	tablat,indf2
 28156  00225C  2A19               	incf	__display_found@cntr,f,c
 28157  00225E                     l1568:
 28158  00225E  5019               	movf	__display_found@cntr,w,c
 28159  002260  0D01               	mullw	1
 28160  002262  0EC8               	movlw	low _found_line1
 28161  002264  24F3               	addwf	prodl,w,c
 28162  002266  6EF6               	movwf	tblptrl,c
 28163  002268  0E8D               	movlw	high _found_line1
 28164  00226A  20F4               	addwfc	prodh,w,c
 28165  00226C  6EF7               	movwf	tblptrh,c
 28166  00226E                     	if	1	;There are 3 active tblptr bytes
 28167  00226E  6AF8               	clrf	tblptru,c
 28168  002270  0E00               	movlw	low (__mediumconst shr (0+16))
 28169  002272  22F8               	addwfc	tblptru,f,c
 28170  002274                     	endif
 28171  002274  0008               	tblrd		*
 28172  002276  50F5               	movf	tablat,w,c
 28173  002278  0900               	iorlw	0
 28174  00227A  A4D8               	btfss	status,2,c
 28175  00227C  D7D9               	goto	l1569
 28176                           
 28177                           ;display.c: 390: cntr = 0;
 28178  00227E  0E00               	movlw	0
 28179  002280  6E19               	movwf	__display_found@cntr,c
 28180                           
 28181                           ;display.c: 391: while(found_line2[cntr])
 28182  002282  D017               	goto	l1571
 28183  002284                     
 28184                           ;display.c: 392: display_content[1][cntr] = found_line2[cntr++];
 28185  002284  5019               	movf	__display_found@cntr,w,c
 28186  002286  0D01               	mullw	1
 28187  002288  0EBD               	movlw	low _found_line2
 28188  00228A  24F3               	addwf	prodl,w,c
 28189  00228C  6EF6               	movwf	tblptrl,c
 28190  00228E  0E8C               	movlw	high _found_line2
 28191  002290  20F4               	addwfc	prodh,w,c
 28192  002292  6EF7               	movwf	tblptrh,c
 28193  002294                     	if	1	;There are 3 active tblptr bytes
 28194  002294  6AF8               	clrf	tblptru,c
 28195  002296  0E00               	movlw	low (__mediumconst shr (0+16))
 28196  002298  22F8               	addwfc	tblptru,f,c
 28197  00229A                     	endif
 28198  00229A  5019               	movf	__display_found@cntr,w,c
 28199  00229C  0D01               	mullw	1
 28200  00229E  0E8A               	movlw	low (_display_content+20)
 28201  0022A0  24F3               	addwf	prodl,w,c
 28202  0022A2  6ED9               	movwf	fsr2l,c
 28203  0022A4  0E01               	movlw	high (_display_content+20)
 28204  0022A6  20F4               	addwfc	prodh,w,c
 28205  0022A8  6EDA               	movwf	fsr2h,c
 28206  0022AA  0008               	tblrd		*
 28207  0022AC  CFF5 FFDF          	movff	tablat,indf2
 28208  0022B0  2A19               	incf	__display_found@cntr,f,c
 28209  0022B2                     l1571:
 28210  0022B2  5019               	movf	__display_found@cntr,w,c
 28211  0022B4  0D01               	mullw	1
 28212  0022B6  0EBD               	movlw	low _found_line2
 28213  0022B8  24F3               	addwf	prodl,w,c
 28214  0022BA  6EF6               	movwf	tblptrl,c
 28215  0022BC  0E8C               	movlw	high _found_line2
 28216  0022BE  20F4               	addwfc	prodh,w,c
 28217  0022C0  6EF7               	movwf	tblptrh,c
 28218  0022C2                     	if	1	;There are 3 active tblptr bytes
 28219  0022C2  6AF8               	clrf	tblptru,c
 28220  0022C4  0E00               	movlw	low (__mediumconst shr (0+16))
 28221  0022C6  22F8               	addwfc	tblptru,f,c
 28222  0022C8                     	endif
 28223  0022C8  0008               	tblrd		*
 28224  0022CA  50F5               	movf	tablat,w,c
 28225  0022CC  0900               	iorlw	0
 28226  0022CE  A4D8               	btfss	status,2,c
 28227  0022D0  D7D9               	goto	l1572
 28228                           
 28229                           ;display.c: 394: cntr = 0;
 28230  0022D2  0E00               	movlw	0
 28231  0022D4  6E19               	movwf	__display_found@cntr,c
 28232                           
 28233                           ;display.c: 395: while(found_line3[cntr])
 28234  0022D6  D017               	goto	l1574
 28235  0022D8                     
 28236                           ;display.c: 396: display_content[2][cntr] = found_line3[cntr++];
 28237  0022D8  5019               	movf	__display_found@cntr,w,c
 28238  0022DA  0D01               	mullw	1
 28239  0022DC  0E96               	movlw	low _found_line3
 28240  0022DE  24F3               	addwf	prodl,w,c
 28241  0022E0  6EF6               	movwf	tblptrl,c
 28242  0022E2  0E8E               	movlw	high _found_line3
 28243  0022E4  20F4               	addwfc	prodh,w,c
 28244  0022E6  6EF7               	movwf	tblptrh,c
 28245  0022E8                     	if	1	;There are 3 active tblptr bytes
 28246  0022E8  6AF8               	clrf	tblptru,c
 28247  0022EA  0E00               	movlw	low (__mediumconst shr (0+16))
 28248  0022EC  22F8               	addwfc	tblptru,f,c
 28249  0022EE                     	endif
 28250  0022EE  5019               	movf	__display_found@cntr,w,c
 28251  0022F0  0D01               	mullw	1
 28252  0022F2  0E9E               	movlw	low (_display_content+40)
 28253  0022F4  24F3               	addwf	prodl,w,c
 28254  0022F6  6ED9               	movwf	fsr2l,c
 28255  0022F8  0E01               	movlw	high (_display_content+40)
 28256  0022FA  20F4               	addwfc	prodh,w,c
 28257  0022FC  6EDA               	movwf	fsr2h,c
 28258  0022FE  0008               	tblrd		*
 28259  002300  CFF5 FFDF          	movff	tablat,indf2
 28260  002304  2A19               	incf	__display_found@cntr,f,c
 28261  002306                     l1574:
 28262  002306  5019               	movf	__display_found@cntr,w,c
 28263  002308  0D01               	mullw	1
 28264  00230A  0E96               	movlw	low _found_line3
 28265  00230C  24F3               	addwf	prodl,w,c
 28266  00230E  6EF6               	movwf	tblptrl,c
 28267  002310  0E8E               	movlw	high _found_line3
 28268  002312  20F4               	addwfc	prodh,w,c
 28269  002314  6EF7               	movwf	tblptrh,c
 28270  002316                     	if	1	;There are 3 active tblptr bytes
 28271  002316  6AF8               	clrf	tblptru,c
 28272  002318  0E00               	movlw	low (__mediumconst shr (0+16))
 28273  00231A  22F8               	addwfc	tblptru,f,c
 28274  00231C                     	endif
 28275  00231C  0008               	tblrd		*
 28276  00231E  50F5               	movf	tablat,w,c
 28277  002320  0900               	iorlw	0
 28278  002322  A4D8               	btfss	status,2,c
 28279  002324  D7D9               	goto	l1575
 28280                           
 28281                           ;display.c: 397: start = cntr;
 28282  002326  C019  F018         	movff	__display_found@cntr,__display_found@start
 28283                           
 28284                           ;display.c: 398: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28285  00232A  ECA0  F038         	call	_bootloader_get_file_size	;wreg free
 28286  00232E  C001  F00E         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28287  002332  C002  F00F         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28288  002336  C003  F010         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28289  00233A  C004  F011         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28290  00233E  5019               	movf	__display_found@cntr,w,c
 28291  002340  0D01               	mullw	1
 28292  002342  0E9E               	movlw	low (_display_content+40)
 28293  002344  24F3               	addwf	prodl,w,c
 28294  002346  6E12               	movwf	__display_itoa_u32@text,c
 28295  002348  0E01               	movlw	high (_display_content+40)
 28296  00234A  20F4               	addwfc	prodh,w,c
 28297  00234C  6E13               	movwf	__display_itoa_u32@text+1,c
 28298  00234E  ECBD  F017         	call	__display_itoa_u32	;wreg free
 28299  002352  2618               	addwf	__display_found@start,f,c
 28300                           
 28301                           ;display.c: 399: cntr = 0;
 28302  002354  0E00               	movlw	0
 28303  002356  6E19               	movwf	__display_found@cntr,c
 28304                           
 28305                           ;display.c: 400: while(found_line3b[cntr])
 28306  002358  D01C               	goto	l1577
 28307  00235A                     
 28308                           ;display.c: 401: display_content[2][start+cntr] = found_line3b[cntr++];
 28309  00235A  5019               	movf	__display_found@cntr,w,c
 28310  00235C  0D01               	mullw	1
 28311  00235E  0E8F               	movlw	low _found_line3b
 28312  002360  24F3               	addwf	prodl,w,c
 28313  002362  6EF6               	movwf	tblptrl,c
 28314  002364  0E8E               	movlw	high _found_line3b
 28315  002366  20F4               	addwfc	prodh,w,c
 28316  002368  6EF7               	movwf	tblptrh,c
 28317  00236A                     	if	1	;There are 3 active tblptr bytes
 28318  00236A  6AF8               	clrf	tblptru,c
 28319  00236C  0E00               	movlw	low (__mediumconst shr (0+16))
 28320  00236E  22F8               	addwfc	tblptru,f,c
 28321  002370                     	endif
 28322  002370  5019               	movf	__display_found@cntr,w,c
 28323  002372  C018  F016         	movff	__display_found@start,??__display_found
 28324  002376  6A17               	clrf	(??__display_found+1)& (0+255),c
 28325  002378  2616               	addwf	??__display_found,f,c
 28326  00237A  0E00               	movlw	0
 28327  00237C  2217               	addwfc	??__display_found+1,f,c
 28328  00237E  0E9E               	movlw	low (_display_content+40)
 28329  002380  2416               	addwf	??__display_found,w,c
 28330  002382  6ED9               	movwf	fsr2l,c
 28331  002384  0E01               	movlw	high (_display_content+40)
 28332  002386  2017               	addwfc	??__display_found+1,w,c
 28333  002388  6EDA               	movwf	fsr2h,c
 28334  00238A  0008               	tblrd		*
 28335  00238C  CFF5 FFDF          	movff	tablat,indf2
 28336  002390  2A19               	incf	__display_found@cntr,f,c
 28337  002392                     l1577:
 28338  002392  5019               	movf	__display_found@cntr,w,c
 28339  002394  0D01               	mullw	1
 28340  002396  0E8F               	movlw	low _found_line3b
 28341  002398  24F3               	addwf	prodl,w,c
 28342  00239A  6EF6               	movwf	tblptrl,c
 28343  00239C  0E8E               	movlw	high _found_line3b
 28344  00239E  20F4               	addwfc	prodh,w,c
 28345  0023A0  6EF7               	movwf	tblptrh,c
 28346  0023A2                     	if	1	;There are 3 active tblptr bytes
 28347  0023A2  6AF8               	clrf	tblptru,c
 28348  0023A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28349  0023A6  22F8               	addwfc	tblptru,f,c
 28350  0023A8                     	endif
 28351  0023A8  0008               	tblrd		*
 28352  0023AA  50F5               	movf	tablat,w,c
 28353  0023AC  0900               	iorlw	0
 28354  0023AE  A4D8               	btfss	status,2,c
 28355  0023B0  D7D4               	goto	l1578
 28356                           
 28357                           ;display.c: 403: cntr = 0;
 28358  0023B2  0E00               	movlw	0
 28359  0023B4  6E19               	movwf	__display_found@cntr,c
 28360                           
 28361                           ;display.c: 404: while(found_line4[cntr])
 28362  0023B6  D017               	goto	l1580
 28363  0023B8                     
 28364                           ;display.c: 405: display_content[3][cntr] = found_line4[cntr++];
 28365  0023B8  5019               	movf	__display_found@cntr,w,c
 28366  0023BA  0D01               	mullw	1
 28367  0023BC  0EF4               	movlw	low _found_line4
 28368  0023BE  24F3               	addwf	prodl,w,c
 28369  0023C0  6EF6               	movwf	tblptrl,c
 28370  0023C2  0E8C               	movlw	high _found_line4
 28371  0023C4  20F4               	addwfc	prodh,w,c
 28372  0023C6  6EF7               	movwf	tblptrh,c
 28373  0023C8                     	if	1	;There are 3 active tblptr bytes
 28374  0023C8  6AF8               	clrf	tblptru,c
 28375  0023CA  0E00               	movlw	low (__mediumconst shr (0+16))
 28376  0023CC  22F8               	addwfc	tblptru,f,c
 28377  0023CE                     	endif
 28378  0023CE  5019               	movf	__display_found@cntr,w,c
 28379  0023D0  0D01               	mullw	1
 28380  0023D2  0EB2               	movlw	low (_display_content+60)
 28381  0023D4  24F3               	addwf	prodl,w,c
 28382  0023D6  6ED9               	movwf	fsr2l,c
 28383  0023D8  0E01               	movlw	high (_display_content+60)
 28384  0023DA  20F4               	addwfc	prodh,w,c
 28385  0023DC  6EDA               	movwf	fsr2h,c
 28386  0023DE  0008               	tblrd		*
 28387  0023E0  CFF5 FFDF          	movff	tablat,indf2
 28388  0023E4  2A19               	incf	__display_found@cntr,f,c
 28389  0023E6                     l1580:
 28390  0023E6  5019               	movf	__display_found@cntr,w,c
 28391  0023E8  0D01               	mullw	1
 28392  0023EA  0EF4               	movlw	low _found_line4
 28393  0023EC  24F3               	addwf	prodl,w,c
 28394  0023EE  6EF6               	movwf	tblptrl,c
 28395  0023F0  0E8C               	movlw	high _found_line4
 28396  0023F2  20F4               	addwfc	prodh,w,c
 28397  0023F4  6EF7               	movwf	tblptrh,c
 28398  0023F6                     	if	1	;There are 3 active tblptr bytes
 28399  0023F6  6AF8               	clrf	tblptru,c
 28400  0023F8  0E00               	movlw	low (__mediumconst shr (0+16))
 28401  0023FA  22F8               	addwfc	tblptru,f,c
 28402  0023FC                     	endif
 28403  0023FC  0008               	tblrd		*
 28404  0023FE  50F5               	movf	tablat,w,c
 28405  002400  0900               	iorlw	0
 28406  002402  B4D8               	btfsc	status,2,c
 28407  002404  0012               	return	
 28408  002406  D7D8               	goto	l1581
 28409  002408                     __end_of__display_found:
 28410                           	opt stack 0
 28411                           tosu	equ	0xFFF
 28412                           tosh	equ	0xFFE
 28413                           tosl	equ	0xFFD
 28414                           pclath	equ	0xFFA
 28415                           tblptru	equ	0xFF8
 28416                           tblptrh	equ	0xFF7
 28417                           tblptrl	equ	0xFF6
 28418                           tablat	equ	0xFF5
 28419                           prodh	equ	0xFF4
 28420                           prodl	equ	0xFF3
 28421                           intcon	equ	0xFF2
 28422                           intcon2	equ	0xFF1
 28423                           intcon3	equ	0xFF0
 28424                           indf0	equ	0xFEF
 28425                           postinc0	equ	0xFEE
 28426                           fsr0h	equ	0xFEA
 28427                           fsr0l	equ	0xFE9
 28428                           wreg	equ	0xFE8
 28429                           indf1	equ	0xFE7
 28430                           postdec1	equ	0xFE5
 28431                           plusw1	equ	0xFE3
 28432                           fsr1h	equ	0xFE2
 28433                           fsr1l	equ	0xFE1
 28434                           indf2	equ	0xFDF
 28435                           postinc2	equ	0xFDE
 28436                           postdec2	equ	0xFDD
 28437                           plusw2	equ	0xFDB
 28438                           fsr2h	equ	0xFDA
 28439                           fsr2l	equ	0xFD9
 28440                           status	equ	0xFD8
 28441                           
 28442 ;; *************** function _bootloader_get_file_size *****************
 28443 ;; Defined at:
 28444 ;;		line 463 in file "bootloader.c"
 28445 ;; Parameters:    Size  Location     Type
 28446 ;;		None
 28447 ;; Auto vars:     Size  Location     Type
 28448 ;;		None
 28449 ;; Return value:  Size  Location     Type
 28450 ;;                  4    0[COMRAM] unsigned long 
 28451 ;; Registers used:
 28452 ;;		None
 28453 ;; Tracked objects:
 28454 ;;		On entry : 0/0
 28455 ;;		On exit  : 0/0
 28456 ;;		Unchanged: 0/0
 28457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28461 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28462 ;;Total ram usage:        4 bytes
 28463 ;; Hardware stack levels used:    1
 28464 ;; This function calls:
 28465 ;;		Nothing
 28466 ;; This function is called by:
 28467 ;;		__display_found
 28468 ;;		__fill_buffer_get_bootloader_details
 28469 ;; This function uses a non-reentrant model
 28470 ;;
 28471                           
 28472                           	psect	text141
 28473  007140                     __ptext141:
 28474                           	opt stack 0
 28475  007140                     _bootloader_get_file_size:
 28476                           	opt stack 25
 28477                           
 28478                           ;bootloader.c: 465: return hex_file_size;
 28479                           
 28480                           ;incstack = 0
 28481  007140  C07E  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28482  007144  C07F  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28483  007148  C080  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28484  00714C  C081  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28485  007150  0012               	return		;funcret
 28486  007152                     __end_of_bootloader_get_file_size:
 28487                           	opt stack 0
 28488                           tosu	equ	0xFFF
 28489                           tosh	equ	0xFFE
 28490                           tosl	equ	0xFFD
 28491                           pclath	equ	0xFFA
 28492                           tblptru	equ	0xFF8
 28493                           tblptrh	equ	0xFF7
 28494                           tblptrl	equ	0xFF6
 28495                           tablat	equ	0xFF5
 28496                           prodh	equ	0xFF4
 28497                           prodl	equ	0xFF3
 28498                           intcon	equ	0xFF2
 28499                           intcon2	equ	0xFF1
 28500                           intcon3	equ	0xFF0
 28501                           indf0	equ	0xFEF
 28502                           postinc0	equ	0xFEE
 28503                           fsr0h	equ	0xFEA
 28504                           fsr0l	equ	0xFE9
 28505                           wreg	equ	0xFE8
 28506                           indf1	equ	0xFE7
 28507                           postdec1	equ	0xFE5
 28508                           plusw1	equ	0xFE3
 28509                           fsr1h	equ	0xFE2
 28510                           fsr1l	equ	0xFE1
 28511                           indf2	equ	0xFDF
 28512                           postinc2	equ	0xFDE
 28513                           postdec2	equ	0xFDD
 28514                           plusw2	equ	0xFDB
 28515                           fsr2h	equ	0xFDA
 28516                           fsr2l	equ	0xFD9
 28517                           status	equ	0xFD8
 28518                           
 28519 ;; *************** function __display_failed *****************
 28520 ;; Defined at:
 28521 ;;		line 446 in file "display.c"
 28522 ;; Parameters:    Size  Location     Type
 28523 ;;		None
 28524 ;; Auto vars:     Size  Location     Type
 28525 ;;  cntr            1   28[COMRAM] unsigned char 
 28526 ;;  start           1    0        unsigned char 
 28527 ;; Return value:  Size  Location     Type
 28528 ;;                  1    wreg      void 
 28529 ;; Registers used:
 28530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28531 ;; Tracked objects:
 28532 ;;		On entry : 0/0
 28533 ;;		On exit  : 0/0
 28534 ;;		Unchanged: 0/0
 28535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28540 ;;Total ram usage:        1 bytes
 28541 ;; Hardware stack levels used:    1
 28542 ;; Hardware stack levels required when called:    4
 28543 ;; This function calls:
 28544 ;;		__display_itoa_u16
 28545 ;;		__display_itoa_u32
 28546 ;;		_bootloader_get_entries
 28547 ;;		_bootloader_get_error
 28548 ;;		_bootloader_get_rec_address
 28549 ;; This function is called by:
 28550 ;;		_display_prepare
 28551 ;; This function uses a non-reentrant model
 28552 ;;
 28553                           
 28554                           	psect	text142
 28555  000F2C                     __ptext142:
 28556                           	opt stack 0
 28557  000F2C                     __display_failed:
 28558                           	opt stack 22
 28559                           
 28560                           ;display.c: 448: uint8_t cntr;;display.c: 449: uint8_t start;;display.c: 450: cntr = 0;
 28561                           
 28562                           ;incstack = 0
 28563  000F2C  0E00               	movlw	0
 28564  000F2E  6E1D               	movwf	__display_failed@cntr,c
 28565                           
 28566                           ;display.c: 451: while(failed_line1[cntr])
 28567  000F30  D017               	goto	l1613
 28568  000F32                     
 28569                           ;display.c: 452: display_content[0][cntr] = failed_line1[cntr++];
 28570  000F32  501D               	movf	__display_failed@cntr,w,c
 28571  000F34  0D01               	mullw	1
 28572  000F36  0E98               	movlw	low _failed_line1
 28573  000F38  24F3               	addwf	prodl,w,c
 28574  000F3A  6EF6               	movwf	tblptrl,c
 28575  000F3C  0E8D               	movlw	high _failed_line1
 28576  000F3E  20F4               	addwfc	prodh,w,c
 28577  000F40  6EF7               	movwf	tblptrh,c
 28578  000F42                     	if	1	;There are 3 active tblptr bytes
 28579  000F42  6AF8               	clrf	tblptru,c
 28580  000F44  0E00               	movlw	low (__mediumconst shr (0+16))
 28581  000F46  22F8               	addwfc	tblptru,f,c
 28582  000F48                     	endif
 28583  000F48  501D               	movf	__display_failed@cntr,w,c
 28584  000F4A  0D01               	mullw	1
 28585  000F4C  0E76               	movlw	low _display_content
 28586  000F4E  24F3               	addwf	prodl,w,c
 28587  000F50  6ED9               	movwf	fsr2l,c
 28588  000F52  0E01               	movlw	high _display_content
 28589  000F54  20F4               	addwfc	prodh,w,c
 28590  000F56  6EDA               	movwf	fsr2h,c
 28591  000F58  0008               	tblrd		*
 28592  000F5A  CFF5 FFDF          	movff	tablat,indf2
 28593  000F5E  2A1D               	incf	__display_failed@cntr,f,c
 28594  000F60                     l1613:
 28595  000F60  501D               	movf	__display_failed@cntr,w,c
 28596  000F62  0D01               	mullw	1
 28597  000F64  0E98               	movlw	low _failed_line1
 28598  000F66  24F3               	addwf	prodl,w,c
 28599  000F68  6EF6               	movwf	tblptrl,c
 28600  000F6A  0E8D               	movlw	high _failed_line1
 28601  000F6C  20F4               	addwfc	prodh,w,c
 28602  000F6E  6EF7               	movwf	tblptrh,c
 28603  000F70                     	if	1	;There are 3 active tblptr bytes
 28604  000F70  6AF8               	clrf	tblptru,c
 28605  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 28606  000F74  22F8               	addwfc	tblptru,f,c
 28607  000F76                     	endif
 28608  000F76  0008               	tblrd		*
 28609  000F78  50F5               	movf	tablat,w,c
 28610  000F7A  0900               	iorlw	0
 28611  000F7C  A4D8               	btfss	status,2,c
 28612  000F7E  D7D9               	goto	l1614
 28613                           
 28614                           ;display.c: 453: cntr = 0;
 28615  000F80  0E00               	movlw	0
 28616  000F82  6E1D               	movwf	__display_failed@cntr,c
 28617                           
 28618                           ;display.c: 454: while(failed_line2[cntr])
 28619  000F84  D017               	goto	l1616
 28620  000F86                     
 28621                           ;display.c: 455: display_content[1][cntr] = failed_line2[cntr++];
 28622  000F86  501D               	movf	__display_failed@cntr,w,c
 28623  000F88  0D01               	mullw	1
 28624  000F8A  0EE2               	movlw	low _failed_line2
 28625  000F8C  24F3               	addwf	prodl,w,c
 28626  000F8E  6EF6               	movwf	tblptrl,c
 28627  000F90  0E8C               	movlw	high _failed_line2
 28628  000F92  20F4               	addwfc	prodh,w,c
 28629  000F94  6EF7               	movwf	tblptrh,c
 28630  000F96                     	if	1	;There are 3 active tblptr bytes
 28631  000F96  6AF8               	clrf	tblptru,c
 28632  000F98  0E00               	movlw	low (__mediumconst shr (0+16))
 28633  000F9A  22F8               	addwfc	tblptru,f,c
 28634  000F9C                     	endif
 28635  000F9C  501D               	movf	__display_failed@cntr,w,c
 28636  000F9E  0D01               	mullw	1
 28637  000FA0  0E8A               	movlw	low (_display_content+20)
 28638  000FA2  24F3               	addwf	prodl,w,c
 28639  000FA4  6ED9               	movwf	fsr2l,c
 28640  000FA6  0E01               	movlw	high (_display_content+20)
 28641  000FA8  20F4               	addwfc	prodh,w,c
 28642  000FAA  6EDA               	movwf	fsr2h,c
 28643  000FAC  0008               	tblrd		*
 28644  000FAE  CFF5 FFDF          	movff	tablat,indf2
 28645  000FB2  2A1D               	incf	__display_failed@cntr,f,c
 28646  000FB4                     l1616:
 28647  000FB4  501D               	movf	__display_failed@cntr,w,c
 28648  000FB6  0D01               	mullw	1
 28649  000FB8  0EE2               	movlw	low _failed_line2
 28650  000FBA  24F3               	addwf	prodl,w,c
 28651  000FBC  6EF6               	movwf	tblptrl,c
 28652  000FBE  0E8C               	movlw	high _failed_line2
 28653  000FC0  20F4               	addwfc	prodh,w,c
 28654  000FC2  6EF7               	movwf	tblptrh,c
 28655  000FC4                     	if	1	;There are 3 active tblptr bytes
 28656  000FC4  6AF8               	clrf	tblptru,c
 28657  000FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 28658  000FC8  22F8               	addwfc	tblptru,f,c
 28659  000FCA                     	endif
 28660  000FCA  0008               	tblrd		*
 28661  000FCC  50F5               	movf	tablat,w,c
 28662  000FCE  0900               	iorlw	0
 28663  000FD0  A4D8               	btfss	status,2,c
 28664  000FD2  D7D9               	goto	l1617
 28665                           
 28666                           ;display.c: 457: cntr = 0;
 28667  000FD4  0E00               	movlw	0
 28668  000FD6  6E1D               	movwf	__display_failed@cntr,c
 28669                           
 28670                           ;display.c: 458: switch(bootloader_get_error())
 28671  000FD8  D0D6               	goto	l1619
 28672  000FDA                     
 28673                           ;display.c: 462: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28674  000FDA  501D               	movf	__display_failed@cntr,w,c
 28675  000FDC  0D01               	mullw	1
 28676  000FDE  0EAA               	movlw	low _failed_line3_startCode
 28677  000FE0  24F3               	addwf	prodl,w,c
 28678  000FE2  6EF6               	movwf	tblptrl,c
 28679  000FE4  0E8C               	movlw	high _failed_line3_startCode
 28680  000FE6  20F4               	addwfc	prodh,w,c
 28681  000FE8  6EF7               	movwf	tblptrh,c
 28682  000FEA                     	if	1	;There are 3 active tblptr bytes
 28683  000FEA  6AF8               	clrf	tblptru,c
 28684  000FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 28685  000FEE  22F8               	addwfc	tblptru,f,c
 28686  000FF0                     	endif
 28687  000FF0  501D               	movf	__display_failed@cntr,w,c
 28688  000FF2  0D01               	mullw	1
 28689  000FF4  0E9E               	movlw	low (_display_content+40)
 28690  000FF6  24F3               	addwf	prodl,w,c
 28691  000FF8  6ED9               	movwf	fsr2l,c
 28692  000FFA  0E01               	movlw	high (_display_content+40)
 28693  000FFC  20F4               	addwfc	prodh,w,c
 28694  000FFE  6EDA               	movwf	fsr2h,c
 28695  001000  0008               	tblrd		*
 28696  001002  CFF5 FFDF          	movff	tablat,indf2
 28697  001006  2A1D               	incf	__display_failed@cntr,f,c
 28698  001008  501D               	movf	__display_failed@cntr,w,c
 28699  00100A  0D01               	mullw	1
 28700  00100C  0EAA               	movlw	low _failed_line3_startCode
 28701  00100E  24F3               	addwf	prodl,w,c
 28702  001010  6EF6               	movwf	tblptrl,c
 28703  001012  0E8C               	movlw	high _failed_line3_startCode
 28704  001014  20F4               	addwfc	prodh,w,c
 28705  001016  6EF7               	movwf	tblptrh,c
 28706  001018                     	if	1	;There are 3 active tblptr bytes
 28707  001018  6AF8               	clrf	tblptru,c
 28708  00101A  0E00               	movlw	low (__mediumconst shr (0+16))
 28709  00101C  22F8               	addwfc	tblptru,f,c
 28710  00101E                     	endif
 28711  00101E  0008               	tblrd		*
 28712  001020  50F5               	movf	tablat,w,c
 28713  001022  0900               	iorlw	0
 28714  001024  B4D8               	btfsc	status,2,c
 28715  001026  D0C0               	goto	l1624
 28716  001028  D7D8               	goto	l1622
 28717  00102A                     
 28718                           ;display.c: 467: display_content[2][cntr] = failed_line3_checksum[cntr++];
 28719  00102A  501D               	movf	__display_failed@cntr,w,c
 28720  00102C  0D01               	mullw	1
 28721  00102E  0EF8               	movlw	low _failed_line3_checksum
 28722  001030  24F3               	addwf	prodl,w,c
 28723  001032  6EF6               	movwf	tblptrl,c
 28724  001034  0E8D               	movlw	high _failed_line3_checksum
 28725  001036  20F4               	addwfc	prodh,w,c
 28726  001038  6EF7               	movwf	tblptrh,c
 28727  00103A                     	if	1	;There are 3 active tblptr bytes
 28728  00103A  6AF8               	clrf	tblptru,c
 28729  00103C  0E00               	movlw	low (__mediumconst shr (0+16))
 28730  00103E  22F8               	addwfc	tblptru,f,c
 28731  001040                     	endif
 28732  001040  501D               	movf	__display_failed@cntr,w,c
 28733  001042  0D01               	mullw	1
 28734  001044  0E9E               	movlw	low (_display_content+40)
 28735  001046  24F3               	addwf	prodl,w,c
 28736  001048  6ED9               	movwf	fsr2l,c
 28737  00104A  0E01               	movlw	high (_display_content+40)
 28738  00104C  20F4               	addwfc	prodh,w,c
 28739  00104E  6EDA               	movwf	fsr2h,c
 28740  001050  0008               	tblrd		*
 28741  001052  CFF5 FFDF          	movff	tablat,indf2
 28742  001056  2A1D               	incf	__display_failed@cntr,f,c
 28743  001058  501D               	movf	__display_failed@cntr,w,c
 28744  00105A  0D01               	mullw	1
 28745  00105C  0EF8               	movlw	low _failed_line3_checksum
 28746  00105E  24F3               	addwf	prodl,w,c
 28747  001060  6EF6               	movwf	tblptrl,c
 28748  001062  0E8D               	movlw	high _failed_line3_checksum
 28749  001064  20F4               	addwfc	prodh,w,c
 28750  001066  6EF7               	movwf	tblptrh,c
 28751  001068                     	if	1	;There are 3 active tblptr bytes
 28752  001068  6AF8               	clrf	tblptru,c
 28753  00106A  0E00               	movlw	low (__mediumconst shr (0+16))
 28754  00106C  22F8               	addwfc	tblptru,f,c
 28755  00106E                     	endif
 28756  00106E  0008               	tblrd		*
 28757  001070  50F5               	movf	tablat,w,c
 28758  001072  0900               	iorlw	0
 28759  001074  B4D8               	btfsc	status,2,c
 28760  001076  D098               	goto	l1624
 28761  001078  D7D8               	goto	l1627
 28762  00107A                     
 28763                           ;display.c: 474: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 28764  00107A  501D               	movf	__display_failed@cntr,w,c
 28765  00107C  0D01               	mullw	1
 28766  00107E  0E07               	movlw	low _failed_line3_noNextRecord
 28767  001080  24F3               	addwf	prodl,w,c
 28768  001082  6EF6               	movwf	tblptrl,c
 28769  001084  0E8E               	movlw	high _failed_line3_noNextRecord
 28770  001086  20F4               	addwfc	prodh,w,c
 28771  001088  6EF7               	movwf	tblptrh,c
 28772  00108A                     	if	1	;There are 3 active tblptr bytes
 28773  00108A  6AF8               	clrf	tblptru,c
 28774  00108C  0E00               	movlw	low (__mediumconst shr (0+16))
 28775  00108E  22F8               	addwfc	tblptru,f,c
 28776  001090                     	endif
 28777  001090  501D               	movf	__display_failed@cntr,w,c
 28778  001092  0D01               	mullw	1
 28779  001094  0E9E               	movlw	low (_display_content+40)
 28780  001096  24F3               	addwf	prodl,w,c
 28781  001098  6ED9               	movwf	fsr2l,c
 28782  00109A  0E01               	movlw	high (_display_content+40)
 28783  00109C  20F4               	addwfc	prodh,w,c
 28784  00109E  6EDA               	movwf	fsr2h,c
 28785  0010A0  0008               	tblrd		*
 28786  0010A2  CFF5 FFDF          	movff	tablat,indf2
 28787  0010A6  2A1D               	incf	__display_failed@cntr,f,c
 28788  0010A8  501D               	movf	__display_failed@cntr,w,c
 28789  0010AA  0D01               	mullw	1
 28790  0010AC  0E07               	movlw	low _failed_line3_noNextRecord
 28791  0010AE  24F3               	addwf	prodl,w,c
 28792  0010B0  6EF6               	movwf	tblptrl,c
 28793  0010B2  0E8E               	movlw	high _failed_line3_noNextRecord
 28794  0010B4  20F4               	addwfc	prodh,w,c
 28795  0010B6  6EF7               	movwf	tblptrh,c
 28796  0010B8                     	if	1	;There are 3 active tblptr bytes
 28797  0010B8  6AF8               	clrf	tblptru,c
 28798  0010BA  0E00               	movlw	low (__mediumconst shr (0+16))
 28799  0010BC  22F8               	addwfc	tblptru,f,c
 28800  0010BE                     	endif
 28801  0010BE  0008               	tblrd		*
 28802  0010C0  50F5               	movf	tablat,w,c
 28803  0010C2  0900               	iorlw	0
 28804  0010C4  B4D8               	btfsc	status,2,c
 28805  0010C6  D070               	goto	l1624
 28806  0010C8  D7D8               	goto	l1631
 28807  0010CA                     
 28808                           ;display.c: 479: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 28809  0010CA  501D               	movf	__display_failed@cntr,w,c
 28810  0010CC  0D01               	mullw	1
 28811  0010CE  0E25               	movlw	low _failed_line3_dataTooLong
 28812  0010D0  24F3               	addwf	prodl,w,c
 28813  0010D2  6EF6               	movwf	tblptrl,c
 28814  0010D4  0E8E               	movlw	high _failed_line3_dataTooLong
 28815  0010D6  20F4               	addwfc	prodh,w,c
 28816  0010D8  6EF7               	movwf	tblptrh,c
 28817  0010DA                     	if	1	;There are 3 active tblptr bytes
 28818  0010DA  6AF8               	clrf	tblptru,c
 28819  0010DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28820  0010DE  22F8               	addwfc	tblptru,f,c
 28821  0010E0                     	endif
 28822  0010E0  501D               	movf	__display_failed@cntr,w,c
 28823  0010E2  0D01               	mullw	1
 28824  0010E4  0E9E               	movlw	low (_display_content+40)
 28825  0010E6  24F3               	addwf	prodl,w,c
 28826  0010E8  6ED9               	movwf	fsr2l,c
 28827  0010EA  0E01               	movlw	high (_display_content+40)
 28828  0010EC  20F4               	addwfc	prodh,w,c
 28829  0010EE  6EDA               	movwf	fsr2h,c
 28830  0010F0  0008               	tblrd		*
 28831  0010F2  CFF5 FFDF          	movff	tablat,indf2
 28832  0010F6  2A1D               	incf	__display_failed@cntr,f,c
 28833  0010F8  501D               	movf	__display_failed@cntr,w,c
 28834  0010FA  0D01               	mullw	1
 28835  0010FC  0E25               	movlw	low _failed_line3_dataTooLong
 28836  0010FE  24F3               	addwf	prodl,w,c
 28837  001100  6EF6               	movwf	tblptrl,c
 28838  001102  0E8E               	movlw	high _failed_line3_dataTooLong
 28839  001104  20F4               	addwfc	prodh,w,c
 28840  001106  6EF7               	movwf	tblptrh,c
 28841  001108                     	if	1	;There are 3 active tblptr bytes
 28842  001108  6AF8               	clrf	tblptru,c
 28843  00110A  0E00               	movlw	low (__mediumconst shr (0+16))
 28844  00110C  22F8               	addwfc	tblptru,f,c
 28845  00110E                     	endif
 28846  00110E  0008               	tblrd		*
 28847  001110  50F5               	movf	tablat,w,c
 28848  001112  0900               	iorlw	0
 28849  001114  B4D8               	btfsc	status,2,c
 28850  001116  D048               	goto	l1624
 28851  001118  D7D8               	goto	l1635
 28852  00111A                     
 28853                           ;display.c: 484: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 28854  00111A  501D               	movf	__display_failed@cntr,w,c
 28855  00111C  0D01               	mullw	1
 28856  00111E  0E82               	movlw	low _failed_line3_addressRange
 28857  001120  24F3               	addwf	prodl,w,c
 28858  001122  6EF6               	movwf	tblptrl,c
 28859  001124  0E8C               	movlw	high _failed_line3_addressRange
 28860  001126  20F4               	addwfc	prodh,w,c
 28861  001128  6EF7               	movwf	tblptrh,c
 28862  00112A                     	if	1	;There are 3 active tblptr bytes
 28863  00112A  6AF8               	clrf	tblptru,c
 28864  00112C  0E00               	movlw	low (__mediumconst shr (0+16))
 28865  00112E  22F8               	addwfc	tblptru,f,c
 28866  001130                     	endif
 28867  001130  501D               	movf	__display_failed@cntr,w,c
 28868  001132  0D01               	mullw	1
 28869  001134  0E9E               	movlw	low (_display_content+40)
 28870  001136  24F3               	addwf	prodl,w,c
 28871  001138  6ED9               	movwf	fsr2l,c
 28872  00113A  0E01               	movlw	high (_display_content+40)
 28873  00113C  20F4               	addwfc	prodh,w,c
 28874  00113E  6EDA               	movwf	fsr2h,c
 28875  001140  0008               	tblrd		*
 28876  001142  CFF5 FFDF          	movff	tablat,indf2
 28877  001146  2A1D               	incf	__display_failed@cntr,f,c
 28878  001148  501D               	movf	__display_failed@cntr,w,c
 28879  00114A  0D01               	mullw	1
 28880  00114C  0E82               	movlw	low _failed_line3_addressRange
 28881  00114E  24F3               	addwf	prodl,w,c
 28882  001150  6EF6               	movwf	tblptrl,c
 28883  001152  0E8C               	movlw	high _failed_line3_addressRange
 28884  001154  20F4               	addwfc	prodh,w,c
 28885  001156  6EF7               	movwf	tblptrh,c
 28886  001158                     	if	1	;There are 3 active tblptr bytes
 28887  001158  6AF8               	clrf	tblptru,c
 28888  00115A  0E00               	movlw	low (__mediumconst shr (0+16))
 28889  00115C  22F8               	addwfc	tblptru,f,c
 28890  00115E                     	endif
 28891  00115E  0008               	tblrd		*
 28892  001160  50F5               	movf	tablat,w,c
 28893  001162  0900               	iorlw	0
 28894  001164  A4D8               	btfss	status,2,c
 28895  001166  D7D9               	goto	l1639
 28896                           
 28897                           ;display.c: 485: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 28898  001168  ECF2  F038         	call	_bootloader_get_rec_address	;wreg free
 28899  00116C  C001  F00E         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 28900  001170  C002  F00F         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 28901  001174  6A10               	clrf	__display_itoa_u32@value+2,c
 28902  001176  6A11               	clrf	__display_itoa_u32@value+3,c
 28903  001178  0EC0               	movlw	low (_display_content+74)
 28904  00117A  6E12               	movwf	__display_itoa_u32@text,c
 28905  00117C  0E01               	movlw	high (_display_content+74)
 28906  00117E  6E13               	movwf	__display_itoa_u32@text+1,c
 28907  001180  ECBD  F017         	call	__display_itoa_u32	;wreg free
 28908                           
 28909                           ;display.c: 488: }
 28910                           
 28911                           ;display.c: 486: break;
 28912  001184  D011               	goto	l1624
 28913  001186                     l1619:
 28914  001186  EC25  F039         	call	_bootloader_get_error	;wreg free
 28915                           
 28916                           ; Switch size 1, requested type "space"
 28917                           ; Number of cases is 5, Range of values is 11 to 15
 28918                           ; switch strategies available:
 28919                           ; Name         Instructions Cycles
 28920                           ; simple_byte           16     9 (average)
 28921                           ;	Chosen strategy is simple_byte
 28922  00118A  0A0B               	xorlw	11	; case 11
 28923  00118C  B4D8               	btfsc	status,2,c
 28924  00118E  D7DC               	goto	l1638
 28925  001190  0A07               	xorlw	7	; case 12
 28926  001192  B4D8               	btfsc	status,2,c
 28927  001194  D7B1               	goto	l1634
 28928  001196  0A01               	xorlw	1	; case 13
 28929  001198  B4D8               	btfsc	status,2,c
 28930  00119A  D786               	goto	l1630
 28931  00119C  0A03               	xorlw	3	; case 14
 28932  00119E  B4D8               	btfsc	status,2,c
 28933  0011A0  D75B               	goto	l1626
 28934  0011A2  0A01               	xorlw	1	; case 15
 28935  0011A4  B4D8               	btfsc	status,2,c
 28936  0011A6  D730               	goto	l1621
 28937  0011A8                     l1624:
 28938                           
 28939                           ;display.c: 490: cntr = 0;
 28940  0011A8  0E00               	movlw	0
 28941  0011AA  6E1D               	movwf	__display_failed@cntr,c
 28942                           
 28943                           ;display.c: 491: while(failed_line4[cntr])
 28944  0011AC  D017               	goto	l1641
 28945  0011AE                     
 28946                           ;display.c: 492: display_content[3][cntr] = failed_line4[cntr++];
 28947  0011AE  501D               	movf	__display_failed@cntr,w,c
 28948  0011B0  0D01               	mullw	1
 28949  0011B2  0E69               	movlw	low _failed_line4
 28950  0011B4  24F3               	addwf	prodl,w,c
 28951  0011B6  6EF6               	movwf	tblptrl,c
 28952  0011B8  0E8E               	movlw	high _failed_line4
 28953  0011BA  20F4               	addwfc	prodh,w,c
 28954  0011BC  6EF7               	movwf	tblptrh,c
 28955  0011BE                     	if	1	;There are 3 active tblptr bytes
 28956  0011BE  6AF8               	clrf	tblptru,c
 28957  0011C0  0E00               	movlw	low (__mediumconst shr (0+16))
 28958  0011C2  22F8               	addwfc	tblptru,f,c
 28959  0011C4                     	endif
 28960  0011C4  501D               	movf	__display_failed@cntr,w,c
 28961  0011C6  0D01               	mullw	1
 28962  0011C8  0EB2               	movlw	low (_display_content+60)
 28963  0011CA  24F3               	addwf	prodl,w,c
 28964  0011CC  6ED9               	movwf	fsr2l,c
 28965  0011CE  0E01               	movlw	high (_display_content+60)
 28966  0011D0  20F4               	addwfc	prodh,w,c
 28967  0011D2  6EDA               	movwf	fsr2h,c
 28968  0011D4  0008               	tblrd		*
 28969  0011D6  CFF5 FFDF          	movff	tablat,indf2
 28970  0011DA  2A1D               	incf	__display_failed@cntr,f,c
 28971  0011DC                     l1641:
 28972  0011DC  501D               	movf	__display_failed@cntr,w,c
 28973  0011DE  0D01               	mullw	1
 28974  0011E0  0E69               	movlw	low _failed_line4
 28975  0011E2  24F3               	addwf	prodl,w,c
 28976  0011E4  6EF6               	movwf	tblptrl,c
 28977  0011E6  0E8E               	movlw	high _failed_line4
 28978  0011E8  20F4               	addwfc	prodh,w,c
 28979  0011EA  6EF7               	movwf	tblptrh,c
 28980  0011EC                     	if	1	;There are 3 active tblptr bytes
 28981  0011EC  6AF8               	clrf	tblptru,c
 28982  0011EE  0E00               	movlw	low (__mediumconst shr (0+16))
 28983  0011F0  22F8               	addwfc	tblptru,f,c
 28984  0011F2                     	endif
 28985  0011F2  0008               	tblrd		*
 28986  0011F4  50F5               	movf	tablat,w,c
 28987  0011F6  0900               	iorlw	0
 28988  0011F8  A4D8               	btfss	status,2,c
 28989  0011FA  D7D9               	goto	l1642
 28990                           
 28991                           ;display.c: 493: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 28992  0011FC  ECF7  F038         	call	_bootloader_get_entries	;wreg free
 28993  001200  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28994  001204  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28995  001208  501D               	movf	__display_failed@cntr,w,c
 28996  00120A  0D01               	mullw	1
 28997  00120C  0EB2               	movlw	low (_display_content+60)
 28998  00120E  24F3               	addwf	prodl,w,c
 28999  001210  6E1B               	movwf	__display_itoa_u16@text,c
 29000  001212  0E01               	movlw	high (_display_content+60)
 29001  001214  20F4               	addwfc	prodh,w,c
 29002  001216  6E1C               	movwf	__display_itoa_u16@text+1,c
 29003  001218  ECCD  F027         	call	__display_itoa_u16	;wreg free
 29004  00121C  0012               	return		;funcret
 29005  00121E                     __end_of__display_failed:
 29006                           	opt stack 0
 29007                           tosu	equ	0xFFF
 29008                           tosh	equ	0xFFE
 29009                           tosl	equ	0xFFD
 29010                           pclath	equ	0xFFA
 29011                           tblptru	equ	0xFF8
 29012                           tblptrh	equ	0xFF7
 29013                           tblptrl	equ	0xFF6
 29014                           tablat	equ	0xFF5
 29015                           prodh	equ	0xFF4
 29016                           prodl	equ	0xFF3
 29017                           intcon	equ	0xFF2
 29018                           intcon2	equ	0xFF1
 29019                           intcon3	equ	0xFF0
 29020                           indf0	equ	0xFEF
 29021                           postinc0	equ	0xFEE
 29022                           fsr0h	equ	0xFEA
 29023                           fsr0l	equ	0xFE9
 29024                           wreg	equ	0xFE8
 29025                           indf1	equ	0xFE7
 29026                           postdec1	equ	0xFE5
 29027                           plusw1	equ	0xFE3
 29028                           fsr1h	equ	0xFE2
 29029                           fsr1l	equ	0xFE1
 29030                           indf2	equ	0xFDF
 29031                           postinc2	equ	0xFDE
 29032                           postdec2	equ	0xFDD
 29033                           plusw2	equ	0xFDB
 29034                           fsr2h	equ	0xFDA
 29035                           fsr2l	equ	0xFD9
 29036                           status	equ	0xFD8
 29037                           
 29038 ;; *************** function _bootloader_get_rec_address *****************
 29039 ;; Defined at:
 29040 ;;		line 488 in file "bootloader.c"
 29041 ;; Parameters:    Size  Location     Type
 29042 ;;		None
 29043 ;; Auto vars:     Size  Location     Type
 29044 ;;		None
 29045 ;; Return value:  Size  Location     Type
 29046 ;;                  2    0[COMRAM] unsigned int 
 29047 ;; Registers used:
 29048 ;;		None
 29049 ;; Tracked objects:
 29050 ;;		On entry : 0/0
 29051 ;;		On exit  : 0/0
 29052 ;;		Unchanged: 0/0
 29053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29058 ;;Total ram usage:        2 bytes
 29059 ;; Hardware stack levels used:    1
 29060 ;; This function calls:
 29061 ;;		Nothing
 29062 ;; This function is called by:
 29063 ;;		__display_failed
 29064 ;;		__fill_buffer_get_bootloader_details
 29065 ;; This function uses a non-reentrant model
 29066 ;;
 29067                           
 29068                           	psect	text143
 29069  0071E4                     __ptext143:
 29070                           	opt stack 0
 29071  0071E4                     _bootloader_get_rec_address:
 29072                           	opt stack 25
 29073                           
 29074                           ;bootloader.c: 491: return hex_file_entry.address;
 29075                           
 29076                           ;incstack = 0
 29077  0071E4  C1C8  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29078  0071E8  C1C9  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29079  0071EC  0012               	return		;funcret
 29080  0071EE                     __end_of_bootloader_get_rec_address:
 29081                           	opt stack 0
 29082                           tosu	equ	0xFFF
 29083                           tosh	equ	0xFFE
 29084                           tosl	equ	0xFFD
 29085                           pclath	equ	0xFFA
 29086                           tblptru	equ	0xFF8
 29087                           tblptrh	equ	0xFF7
 29088                           tblptrl	equ	0xFF6
 29089                           tablat	equ	0xFF5
 29090                           prodh	equ	0xFF4
 29091                           prodl	equ	0xFF3
 29092                           intcon	equ	0xFF2
 29093                           intcon2	equ	0xFF1
 29094                           intcon3	equ	0xFF0
 29095                           indf0	equ	0xFEF
 29096                           postinc0	equ	0xFEE
 29097                           fsr0h	equ	0xFEA
 29098                           fsr0l	equ	0xFE9
 29099                           wreg	equ	0xFE8
 29100                           indf1	equ	0xFE7
 29101                           postdec1	equ	0xFE5
 29102                           plusw1	equ	0xFE3
 29103                           fsr1h	equ	0xFE2
 29104                           fsr1l	equ	0xFE1
 29105                           indf2	equ	0xFDF
 29106                           postinc2	equ	0xFDE
 29107                           postdec2	equ	0xFDD
 29108                           plusw2	equ	0xFDB
 29109                           fsr2h	equ	0xFDA
 29110                           fsr2l	equ	0xFD9
 29111                           status	equ	0xFD8
 29112                           
 29113 ;; *************** function _bootloader_get_error *****************
 29114 ;; Defined at:
 29115 ;;		line 478 in file "bootloader.c"
 29116 ;; Parameters:    Size  Location     Type
 29117 ;;		None
 29118 ;; Auto vars:     Size  Location     Type
 29119 ;;		None
 29120 ;; Return value:  Size  Location     Type
 29121 ;;                  1    wreg      enum E7004
 29122 ;; Registers used:
 29123 ;;		wreg, status,2
 29124 ;; Tracked objects:
 29125 ;;		On entry : 0/0
 29126 ;;		On exit  : 0/0
 29127 ;;		Unchanged: 0/0
 29128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29133 ;;Total ram usage:        0 bytes
 29134 ;; Hardware stack levels used:    1
 29135 ;; This function calls:
 29136 ;;		Nothing
 29137 ;; This function is called by:
 29138 ;;		__display_failed
 29139 ;;		__fill_buffer_get_bootloader_details
 29140 ;; This function uses a non-reentrant model
 29141 ;;
 29142                           
 29143                           	psect	text144
 29144  00724A                     __ptext144:
 29145                           	opt stack 0
 29146  00724A                     _bootloader_get_error:
 29147                           	opt stack 25
 29148                           
 29149                           ;bootloader.c: 480: return last_error;
 29150                           
 29151                           ;incstack = 0
 29152  00724A  0100               	movlb	0	; () banked
 29153  00724C  5195               	movf	_last_error& (0+255),w,b
 29154  00724E  0012               	return	
 29155  007250                     __end_of_bootloader_get_error:
 29156                           	opt stack 0
 29157                           tosu	equ	0xFFF
 29158                           tosh	equ	0xFFE
 29159                           tosl	equ	0xFFD
 29160                           pclath	equ	0xFFA
 29161                           tblptru	equ	0xFF8
 29162                           tblptrh	equ	0xFF7
 29163                           tblptrl	equ	0xFF6
 29164                           tablat	equ	0xFF5
 29165                           prodh	equ	0xFF4
 29166                           prodl	equ	0xFF3
 29167                           intcon	equ	0xFF2
 29168                           intcon2	equ	0xFF1
 29169                           intcon3	equ	0xFF0
 29170                           indf0	equ	0xFEF
 29171                           postinc0	equ	0xFEE
 29172                           fsr0h	equ	0xFEA
 29173                           fsr0l	equ	0xFE9
 29174                           wreg	equ	0xFE8
 29175                           indf1	equ	0xFE7
 29176                           postdec1	equ	0xFE5
 29177                           plusw1	equ	0xFE3
 29178                           fsr1h	equ	0xFE2
 29179                           fsr1l	equ	0xFE1
 29180                           indf2	equ	0xFDF
 29181                           postinc2	equ	0xFDE
 29182                           postdec2	equ	0xFDD
 29183                           plusw2	equ	0xFDB
 29184                           fsr2h	equ	0xFDA
 29185                           fsr2l	equ	0xFD9
 29186                           status	equ	0xFD8
 29187                           
 29188 ;; *************** function _bootloader_get_entries *****************
 29189 ;; Defined at:
 29190 ;;		line 468 in file "bootloader.c"
 29191 ;; Parameters:    Size  Location     Type
 29192 ;;		None
 29193 ;; Auto vars:     Size  Location     Type
 29194 ;;		None
 29195 ;; Return value:  Size  Location     Type
 29196 ;;                  2    0[COMRAM] unsigned int 
 29197 ;; Registers used:
 29198 ;;		None
 29199 ;; Tracked objects:
 29200 ;;		On entry : 0/0
 29201 ;;		On exit  : 0/0
 29202 ;;		Unchanged: 0/0
 29203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29208 ;;Total ram usage:        2 bytes
 29209 ;; Hardware stack levels used:    1
 29210 ;; This function calls:
 29211 ;;		Nothing
 29212 ;; This function is called by:
 29213 ;;		__display_verify
 29214 ;;		__display_failed
 29215 ;;		__display_programming
 29216 ;;		__fill_buffer_get_bootloader_details
 29217 ;; This function uses a non-reentrant model
 29218 ;;
 29219                           
 29220                           	psect	text145
 29221  0071EE                     __ptext145:
 29222                           	opt stack 0
 29223  0071EE                     _bootloader_get_entries:
 29224                           	opt stack 25
 29225                           
 29226                           ;bootloader.c: 470: return hex_file_entries;
 29227                           
 29228                           ; BSR set to: 0
 29229                           ;incstack = 0
 29230  0071EE  C163  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29231  0071F2  C164  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29232  0071F6  0012               	return		;funcret
 29233  0071F8                     __end_of_bootloader_get_entries:
 29234                           	opt stack 0
 29235                           tosu	equ	0xFFF
 29236                           tosh	equ	0xFFE
 29237                           tosl	equ	0xFFD
 29238                           pclath	equ	0xFFA
 29239                           tblptru	equ	0xFF8
 29240                           tblptrh	equ	0xFF7
 29241                           tblptrl	equ	0xFF6
 29242                           tablat	equ	0xFF5
 29243                           prodh	equ	0xFF4
 29244                           prodl	equ	0xFF3
 29245                           intcon	equ	0xFF2
 29246                           intcon2	equ	0xFF1
 29247                           intcon3	equ	0xFF0
 29248                           indf0	equ	0xFEF
 29249                           postinc0	equ	0xFEE
 29250                           fsr0h	equ	0xFEA
 29251                           fsr0l	equ	0xFE9
 29252                           wreg	equ	0xFE8
 29253                           indf1	equ	0xFE7
 29254                           postdec1	equ	0xFE5
 29255                           plusw1	equ	0xFE3
 29256                           fsr1h	equ	0xFE2
 29257                           fsr1l	equ	0xFE1
 29258                           indf2	equ	0xFDF
 29259                           postinc2	equ	0xFDE
 29260                           postdec2	equ	0xFDD
 29261                           plusw2	equ	0xFDB
 29262                           fsr2h	equ	0xFDA
 29263                           fsr2l	equ	0xFD9
 29264                           status	equ	0xFD8
 29265                           
 29266 ;; *************** function __display_itoa_u32 *****************
 29267 ;; Defined at:
 29268 ;;		line 179 in file "display.c"
 29269 ;; Parameters:    Size  Location     Type
 29270 ;;  value           4   13[COMRAM] unsigned long 
 29271 ;;  text            2   17[COMRAM] PTR unsigned char 
 29272 ;;		 -> display_content(80), 
 29273 ;; Auto vars:     Size  Location     Type
 29274 ;;  number_of_di    1   20[COMRAM] unsigned char 
 29275 ;;  cntr            1   19[COMRAM] char 
 29276 ;; Return value:  Size  Location     Type
 29277 ;;                  1    wreg      unsigned char 
 29278 ;; Registers used:
 29279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29280 ;; Tracked objects:
 29281 ;;		On entry : 0/0
 29282 ;;		On exit  : 0/0
 29283 ;;		Unchanged: 0/0
 29284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29285 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29289 ;;Total ram usage:        8 bytes
 29290 ;; Hardware stack levels used:    1
 29291 ;; Hardware stack levels required when called:    1
 29292 ;; This function calls:
 29293 ;;		___lldiv
 29294 ;;		___llmod
 29295 ;;		___wmul
 29296 ;; This function is called by:
 29297 ;;		__display_found
 29298 ;;		__display_failed
 29299 ;; This function uses a non-reentrant model
 29300 ;;
 29301                           
 29302                           	psect	text146
 29303  002F7A                     __ptext146:
 29304                           	opt stack 0
 29305  002F7A                     __display_itoa_u32:
 29306                           	opt stack 24
 29307                           
 29308                           ;display.c: 181: uint8_t number_of_digits;;display.c: 182: int8_t cntr;;display.c: 185: 
      +                          if(value<10) {number_of_digits = 1;}
 29309                           
 29310                           ;incstack = 0
 29311  002F7A  5011               	movf	__display_itoa_u32@value+3,w,c
 29312  002F7C  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29313  002F7E  100F               	iorwf	__display_itoa_u32@value+1,w,c
 29314  002F80  E106               	bnz	l10365
 29315  002F82  0E0A               	movlw	10
 29316  002F84  5C0E               	subwf	__display_itoa_u32@value,w,c
 29317  002F86  B0D8               	btfsc	status,0,c
 29318  002F88  D002               	goto	l1472
 29319  002F8A  0E01               	movlw	1
 29320  002F8C  D059               	goto	L42
 29321  002F8E                     l1472:
 29322  002F8E                     l10365:
 29323                           
 29324                           ;display.c: 186: else if(value<100) {number_of_digits = 2;}
 29325  002F8E  5011               	movf	__display_itoa_u32@value+3,w,c
 29326  002F90  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29327  002F92  100F               	iorwf	__display_itoa_u32@value+1,w,c
 29328  002F94  E106               	bnz	l10369
 29329  002F96  0E64               	movlw	100
 29330  002F98  5C0E               	subwf	__display_itoa_u32@value,w,c
 29331  002F9A  B0D8               	btfsc	status,0,c
 29332  002F9C  D002               	goto	l1474
 29333  002F9E  0E02               	movlw	2
 29334  002FA0  D04F               	goto	L42
 29335  002FA2                     l1474:
 29336  002FA2                     l10369:
 29337                           
 29338                           ;display.c: 187: else if(value<1000) {number_of_digits = 3;}
 29339  002FA2  5011               	movf	__display_itoa_u32@value+3,w,c
 29340  002FA4  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29341  002FA6  E108               	bnz	l10373
 29342  002FA8  0EE8               	movlw	232
 29343  002FAA  5C0E               	subwf	__display_itoa_u32@value,w,c
 29344  002FAC  0E03               	movlw	3
 29345  002FAE  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29346  002FB0  B0D8               	btfsc	status,0,c
 29347  002FB2  D002               	goto	l1476
 29348  002FB4  0E03               	movlw	3
 29349  002FB6  D044               	goto	L42
 29350  002FB8                     l1476:
 29351  002FB8                     l10373:
 29352                           
 29353                           ;display.c: 188: else if(value<10000) {number_of_digits = 4;}
 29354  002FB8  5011               	movf	__display_itoa_u32@value+3,w,c
 29355  002FBA  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29356  002FBC  E108               	bnz	l10377
 29357  002FBE  0E10               	movlw	16
 29358  002FC0  5C0E               	subwf	__display_itoa_u32@value,w,c
 29359  002FC2  0E27               	movlw	39
 29360  002FC4  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29361  002FC6  B0D8               	btfsc	status,0,c
 29362  002FC8  D002               	goto	l1478
 29363  002FCA  0E04               	movlw	4
 29364  002FCC  D039               	goto	L42
 29365  002FCE                     l1478:
 29366  002FCE                     l10377:
 29367                           
 29368                           ;display.c: 189: else if(value<100000) {number_of_digits = 5;}
 29369  002FCE  5011               	movf	__display_itoa_u32@value+3,w,c
 29370  002FD0  E10A               	bnz	l10381
 29371  002FD2  0EA0               	movlw	160
 29372  002FD4  5C0E               	subwf	__display_itoa_u32@value,w,c
 29373  002FD6  0E86               	movlw	134
 29374  002FD8  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29375  002FDA  0E01               	movlw	1
 29376  002FDC  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29377  002FDE  B0D8               	btfsc	status,0,c
 29378  002FE0  D002               	goto	l1480
 29379  002FE2  0E05               	movlw	5
 29380  002FE4  D02D               	goto	L42
 29381  002FE6                     l1480:
 29382  002FE6                     l10381:
 29383                           
 29384                           ;display.c: 190: else if(value<1000000) {number_of_digits = 6;}
 29385  002FE6  5011               	movf	__display_itoa_u32@value+3,w,c
 29386  002FE8  E10A               	bnz	l10385
 29387  002FEA  0E40               	movlw	64
 29388  002FEC  5C0E               	subwf	__display_itoa_u32@value,w,c
 29389  002FEE  0E42               	movlw	66
 29390  002FF0  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29391  002FF2  0E0F               	movlw	15
 29392  002FF4  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29393  002FF6  B0D8               	btfsc	status,0,c
 29394  002FF8  D002               	goto	l1482
 29395  002FFA  0E06               	movlw	6
 29396  002FFC  D021               	goto	L42
 29397  002FFE                     l1482:
 29398  002FFE                     l10385:
 29399                           
 29400                           ;display.c: 191: else if(value<10000000) {number_of_digits = 7;}
 29401  002FFE  5011               	movf	__display_itoa_u32@value+3,w,c
 29402  003000  E10A               	bnz	l10389
 29403  003002  0E80               	movlw	128
 29404  003004  5C0E               	subwf	__display_itoa_u32@value,w,c
 29405  003006  0E96               	movlw	150
 29406  003008  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29407  00300A  0E98               	movlw	152
 29408  00300C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29409  00300E  B0D8               	btfsc	status,0,c
 29410  003010  D002               	goto	l1484
 29411  003012  0E07               	movlw	7
 29412  003014  D015               	goto	L42
 29413  003016                     l1484:
 29414  003016                     l10389:
 29415                           
 29416                           ;display.c: 192: else if(value<100000000) {number_of_digits = 8;}
 29417  003016  0EE1               	movlw	225
 29418  003018  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 29419  00301A  0EF5               	movlw	245
 29420  00301C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29421  00301E  0E05               	movlw	5
 29422  003020  5811               	subwfb	__display_itoa_u32@value+3,w,c
 29423  003022  B0D8               	btfsc	status,0,c
 29424  003024  D002               	goto	l1486
 29425  003026  0E08               	movlw	8
 29426  003028  D00B               	goto	L42
 29427  00302A                     l1486:
 29428                           
 29429                           ;display.c: 193: else if(value<1000000000) {number_of_digits = 9;}
 29430  00302A  0ECA               	movlw	202
 29431  00302C  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 29432  00302E  0E9A               	movlw	154
 29433  003030  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29434  003032  0E3B               	movlw	59
 29435  003034  5811               	subwfb	__display_itoa_u32@value+3,w,c
 29436  003036  B0D8               	btfsc	status,0,c
 29437  003038  D002               	goto	l1488
 29438  00303A  0E09               	movlw	9
 29439  00303C  D001               	goto	L42
 29440  00303E                     l1488:
 29441                           
 29442                           ;display.c: 194: else {number_of_digits = 10;}
 29443  00303E  0E0A               	movlw	10
 29444  003040                     L42:
 29445  003040  6E15               	movwf	__display_itoa_u32@number_of_digits,c
 29446                           
 29447                           ;display.c: 196: for(cntr=number_of_digits-1; cntr>=0; --cntr)
 29448  003042  0415               	decf	__display_itoa_u32@number_of_digits,w,c
 29449  003044  6E14               	movwf	__display_itoa_u32@cntr,c
 29450  003046                     l10401:
 29451  003046  BE14               	btfsc	__display_itoa_u32@cntr,7,c
 29452  003048  D042               	goto	u7760
 29453                           
 29454                           ;display.c: 197: {;display.c: 198: text[cntr] = (value%10) + 0x30;
 29455  00304A  5014               	movf	__display_itoa_u32@cntr,w,c
 29456  00304C  6E01               	movwf	___wmul@multiplier,c
 29457  00304E  6A02               	clrf	___wmul@multiplier+1,c
 29458  003050  BE01               	btfsc	___wmul@multiplier,7,c
 29459  003052  0602               	decf	___wmul@multiplier+1,f,c
 29460  003054  0E00               	movlw	0
 29461  003056  6E04               	movwf	___wmul@multiplicand+1,c
 29462  003058  0E01               	movlw	1
 29463  00305A  6E03               	movwf	___wmul@multiplicand,c
 29464  00305C  EC75  F037         	call	___wmul	;wreg free
 29465  003060  5001               	movf	?___wmul,w,c
 29466  003062  2412               	addwf	__display_itoa_u32@text,w,c
 29467  003064  6ED9               	movwf	fsr2l,c
 29468  003066  5002               	movf	?___wmul+1,w,c
 29469  003068  2013               	addwfc	__display_itoa_u32@text+1,w,c
 29470  00306A  6EDA               	movwf	fsr2h,c
 29471  00306C  C00E  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29472  003070  C00F  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29473  003074  C010  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29474  003078  C011  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29475  00307C  0E0A               	movlw	10
 29476  00307E  6E05               	movwf	___llmod@divisor,c
 29477  003080  0E00               	movlw	0
 29478  003082  6E06               	movwf	___llmod@divisor+1,c
 29479  003084  0E00               	movlw	0
 29480  003086  6E07               	movwf	___llmod@divisor+2,c
 29481  003088  0E00               	movlw	0
 29482  00308A  6E08               	movwf	___llmod@divisor+3,c
 29483  00308C  EC4F  F030         	call	___llmod	;wreg free
 29484  003090  5001               	movf	?___llmod,w,c
 29485  003092  0F30               	addlw	48
 29486  003094  6EDF               	movwf	indf2,c
 29487                           
 29488                           ;display.c: 199: value /= 10;
 29489  003096  C00E  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29490  00309A  C00F  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29491  00309E  C010  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29492  0030A2  C011  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29493  0030A6  0E0A               	movlw	10
 29494  0030A8  6E05               	movwf	___lldiv@divisor,c
 29495  0030AA  0E00               	movlw	0
 29496  0030AC  6E06               	movwf	___lldiv@divisor+1,c
 29497  0030AE  0E00               	movlw	0
 29498  0030B0  6E07               	movwf	___lldiv@divisor+2,c
 29499  0030B2  0E00               	movlw	0
 29500  0030B4  6E08               	movwf	___lldiv@divisor+3,c
 29501  0030B6  ECDF  F02D         	call	___lldiv	;wreg free
 29502  0030BA  C001  F00E         	movff	?___lldiv,__display_itoa_u32@value
 29503  0030BE  C002  F00F         	movff	?___lldiv+1,__display_itoa_u32@value+1
 29504  0030C2  C003  F010         	movff	?___lldiv+2,__display_itoa_u32@value+2
 29505  0030C6  C004  F011         	movff	?___lldiv+3,__display_itoa_u32@value+3
 29506  0030CA  0614               	decf	__display_itoa_u32@cntr,f,c
 29507  0030CC  D7BC               	goto	l10401
 29508  0030CE                     u7760:
 29509                           
 29510                           ;display.c: 200: };display.c: 202: return number_of_digits;
 29511  0030CE  5015               	movf	__display_itoa_u32@number_of_digits,w,c
 29512  0030D0  0012               	return	
 29513  0030D2                     __end_of__display_itoa_u32:
 29514                           	opt stack 0
 29515                           tosu	equ	0xFFF
 29516                           tosh	equ	0xFFE
 29517                           tosl	equ	0xFFD
 29518                           pclath	equ	0xFFA
 29519                           tblptru	equ	0xFF8
 29520                           tblptrh	equ	0xFF7
 29521                           tblptrl	equ	0xFF6
 29522                           tablat	equ	0xFF5
 29523                           prodh	equ	0xFF4
 29524                           prodl	equ	0xFF3
 29525                           intcon	equ	0xFF2
 29526                           intcon2	equ	0xFF1
 29527                           intcon3	equ	0xFF0
 29528                           indf0	equ	0xFEF
 29529                           postinc0	equ	0xFEE
 29530                           fsr0h	equ	0xFEA
 29531                           fsr0l	equ	0xFE9
 29532                           wreg	equ	0xFE8
 29533                           indf1	equ	0xFE7
 29534                           postdec1	equ	0xFE5
 29535                           plusw1	equ	0xFE3
 29536                           fsr1h	equ	0xFE2
 29537                           fsr1l	equ	0xFE1
 29538                           indf2	equ	0xFDF
 29539                           postinc2	equ	0xFDE
 29540                           postdec2	equ	0xFDD
 29541                           plusw2	equ	0xFDB
 29542                           fsr2h	equ	0xFDA
 29543                           fsr2l	equ	0xFD9
 29544                           status	equ	0xFD8
 29545                           
 29546 ;; *************** function ___wmul *****************
 29547 ;; Defined at:
 29548 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 29549 ;; Parameters:    Size  Location     Type
 29550 ;;  multiplier      2    0[COMRAM] unsigned int 
 29551 ;;  multiplicand    2    2[COMRAM] unsigned int 
 29552 ;; Auto vars:     Size  Location     Type
 29553 ;;  product         2    4[COMRAM] unsigned int 
 29554 ;; Return value:  Size  Location     Type
 29555 ;;                  2    0[COMRAM] unsigned int 
 29556 ;; Registers used:
 29557 ;;		wreg, status,2, status,0, prodl, prodh
 29558 ;; Tracked objects:
 29559 ;;		On entry : 0/0
 29560 ;;		On exit  : 0/0
 29561 ;;		Unchanged: 0/0
 29562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29563 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29566 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29567 ;;Total ram usage:        6 bytes
 29568 ;; Hardware stack levels used:    1
 29569 ;; This function calls:
 29570 ;;		Nothing
 29571 ;; This function is called by:
 29572 ;;		__display_itoa_u32
 29573 ;; This function uses a non-reentrant model
 29574 ;;
 29575                           
 29576                           	psect	text147
 29577  006EEA                     __ptext147:
 29578                           	opt stack 0
 29579  006EEA                     ___wmul:
 29580                           	opt stack 24
 29581                           
 29582                           ;incstack = 0
 29583  006EEA  5001               	movf	___wmul@multiplier,w,c
 29584  006EEC  0203               	mulwf	___wmul@multiplicand,c
 29585  006EEE  CFF3 F005          	movff	prodl,___wmul@product
 29586  006EF2  CFF4 F006          	movff	prodh,___wmul@product+1
 29587  006EF6  5001               	movf	___wmul@multiplier,w,c
 29588  006EF8  0204               	mulwf	___wmul@multiplicand+1,c
 29589  006EFA  50F3               	movf	prodl,w,c
 29590  006EFC  2606               	addwf	___wmul@product+1,f,c
 29591  006EFE  5002               	movf	___wmul@multiplier+1,w,c
 29592  006F00  0203               	mulwf	___wmul@multiplicand,c
 29593  006F02  50F3               	movf	prodl,w,c
 29594  006F04  2606               	addwf	___wmul@product+1,f,c
 29595  006F06  C005  F001         	movff	___wmul@product,?___wmul
 29596  006F0A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 29597  006F0E  0012               	return	
 29598  006F10                     __end_of___wmul:
 29599                           	opt stack 0
 29600                           tosu	equ	0xFFF
 29601                           tosh	equ	0xFFE
 29602                           tosl	equ	0xFFD
 29603                           pclath	equ	0xFFA
 29604                           tblptru	equ	0xFF8
 29605                           tblptrh	equ	0xFF7
 29606                           tblptrl	equ	0xFF6
 29607                           tablat	equ	0xFF5
 29608                           prodh	equ	0xFF4
 29609                           prodl	equ	0xFF3
 29610                           intcon	equ	0xFF2
 29611                           intcon2	equ	0xFF1
 29612                           intcon3	equ	0xFF0
 29613                           indf0	equ	0xFEF
 29614                           postinc0	equ	0xFEE
 29615                           fsr0h	equ	0xFEA
 29616                           fsr0l	equ	0xFE9
 29617                           wreg	equ	0xFE8
 29618                           indf1	equ	0xFE7
 29619                           postdec1	equ	0xFE5
 29620                           plusw1	equ	0xFE3
 29621                           fsr1h	equ	0xFE2
 29622                           fsr1l	equ	0xFE1
 29623                           indf2	equ	0xFDF
 29624                           postinc2	equ	0xFDE
 29625                           postdec2	equ	0xFDD
 29626                           plusw2	equ	0xFDB
 29627                           fsr2h	equ	0xFDA
 29628                           fsr2l	equ	0xFD9
 29629                           status	equ	0xFD8
 29630                           
 29631 ;; *************** function ___llmod *****************
 29632 ;; Defined at:
 29633 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 29634 ;; Parameters:    Size  Location     Type
 29635 ;;  dividend        4    0[COMRAM] unsigned long 
 29636 ;;  divisor         4    4[COMRAM] unsigned long 
 29637 ;; Auto vars:     Size  Location     Type
 29638 ;;  counter         1    8[COMRAM] unsigned char 
 29639 ;; Return value:  Size  Location     Type
 29640 ;;                  4    0[COMRAM] unsigned long 
 29641 ;; Registers used:
 29642 ;;		wreg, status,2, status,0
 29643 ;; Tracked objects:
 29644 ;;		On entry : 0/0
 29645 ;;		On exit  : 0/0
 29646 ;;		Unchanged: 0/0
 29647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29648 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29651 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29652 ;;Total ram usage:        9 bytes
 29653 ;; Hardware stack levels used:    1
 29654 ;; This function calls:
 29655 ;;		Nothing
 29656 ;; This function is called by:
 29657 ;;		__display_itoa_u32
 29658 ;; This function uses a non-reentrant model
 29659 ;;
 29660                           
 29661                           	psect	text148
 29662  00609E                     __ptext148:
 29663                           	opt stack 0
 29664  00609E                     ___llmod:
 29665                           	opt stack 24
 29666                           
 29667                           ;incstack = 0
 29668  00609E  5005               	movf	___llmod@divisor,w,c
 29669  0060A0  1006               	iorwf	___llmod@divisor+1,w,c
 29670  0060A2  1007               	iorwf	___llmod@divisor+2,w,c
 29671  0060A4  1008               	iorwf	___llmod@divisor+3,w,c
 29672  0060A6  B4D8               	btfsc	status,2,c
 29673  0060A8  D024               	goto	l3229
 29674  0060AA  0E01               	movlw	1
 29675  0060AC  6E09               	movwf	___llmod@counter,c
 29676  0060AE  D006               	goto	l3224
 29677  0060B0  90D8               	bcf	status,0,c
 29678  0060B2  3605               	rlcf	___llmod@divisor,f,c
 29679  0060B4  3606               	rlcf	___llmod@divisor+1,f,c
 29680  0060B6  3607               	rlcf	___llmod@divisor+2,f,c
 29681  0060B8  3608               	rlcf	___llmod@divisor+3,f,c
 29682  0060BA  2A09               	incf	___llmod@counter,f,c
 29683  0060BC                     l3224:
 29684  0060BC  AE08               	btfss	___llmod@divisor+3,7,c
 29685  0060BE  D7F8               	goto	l3225
 29686  0060C0                     u7250:
 29687  0060C0  5005               	movf	___llmod@divisor,w,c
 29688  0060C2  5C01               	subwf	___llmod@dividend,w,c
 29689  0060C4  5006               	movf	___llmod@divisor+1,w,c
 29690  0060C6  5802               	subwfb	___llmod@dividend+1,w,c
 29691  0060C8  5007               	movf	___llmod@divisor+2,w,c
 29692  0060CA  5803               	subwfb	___llmod@dividend+2,w,c
 29693  0060CC  5008               	movf	___llmod@divisor+3,w,c
 29694  0060CE  5804               	subwfb	___llmod@dividend+3,w,c
 29695  0060D0  A0D8               	btfss	status,0,c
 29696  0060D2  D008               	goto	l3228
 29697  0060D4  5005               	movf	___llmod@divisor,w,c
 29698  0060D6  5E01               	subwf	___llmod@dividend,f,c
 29699  0060D8  5006               	movf	___llmod@divisor+1,w,c
 29700  0060DA  5A02               	subwfb	___llmod@dividend+1,f,c
 29701  0060DC  5007               	movf	___llmod@divisor+2,w,c
 29702  0060DE  5A03               	subwfb	___llmod@dividend+2,f,c
 29703  0060E0  5008               	movf	___llmod@divisor+3,w,c
 29704  0060E2  5A04               	subwfb	___llmod@dividend+3,f,c
 29705  0060E4                     l3228:
 29706  0060E4  90D8               	bcf	status,0,c
 29707  0060E6  3208               	rrcf	___llmod@divisor+3,f,c
 29708  0060E8  3207               	rrcf	___llmod@divisor+2,f,c
 29709  0060EA  3206               	rrcf	___llmod@divisor+1,f,c
 29710  0060EC  3205               	rrcf	___llmod@divisor,f,c
 29711  0060EE  2E09               	decfsz	___llmod@counter,f,c
 29712  0060F0  D7E7               	goto	u7250
 29713  0060F2                     l3229:
 29714  0060F2  C001  F001         	movff	___llmod@dividend,?___llmod
 29715  0060F6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 29716  0060FA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 29717  0060FE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 29718  006102  0012               	return		;funcret
 29719  006104                     __end_of___llmod:
 29720                           	opt stack 0
 29721                           tosu	equ	0xFFF
 29722                           tosh	equ	0xFFE
 29723                           tosl	equ	0xFFD
 29724                           pclath	equ	0xFFA
 29725                           tblptru	equ	0xFF8
 29726                           tblptrh	equ	0xFF7
 29727                           tblptrl	equ	0xFF6
 29728                           tablat	equ	0xFF5
 29729                           prodh	equ	0xFF4
 29730                           prodl	equ	0xFF3
 29731                           intcon	equ	0xFF2
 29732                           intcon2	equ	0xFF1
 29733                           intcon3	equ	0xFF0
 29734                           indf0	equ	0xFEF
 29735                           postinc0	equ	0xFEE
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postdec1	equ	0xFE5
 29741                           plusw1	equ	0xFE3
 29742                           fsr1h	equ	0xFE2
 29743                           fsr1l	equ	0xFE1
 29744                           indf2	equ	0xFDF
 29745                           postinc2	equ	0xFDE
 29746                           postdec2	equ	0xFDD
 29747                           plusw2	equ	0xFDB
 29748                           fsr2h	equ	0xFDA
 29749                           fsr2l	equ	0xFD9
 29750                           status	equ	0xFD8
 29751                           
 29752 ;; *************** function ___lldiv *****************
 29753 ;; Defined at:
 29754 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 29755 ;; Parameters:    Size  Location     Type
 29756 ;;  dividend        4    0[COMRAM] unsigned long 
 29757 ;;  divisor         4    4[COMRAM] unsigned long 
 29758 ;; Auto vars:     Size  Location     Type
 29759 ;;  quotient        4    8[COMRAM] unsigned long 
 29760 ;;  counter         1   12[COMRAM] unsigned char 
 29761 ;; Return value:  Size  Location     Type
 29762 ;;                  4    0[COMRAM] unsigned long 
 29763 ;; Registers used:
 29764 ;;		wreg, status,2, status,0
 29765 ;; Tracked objects:
 29766 ;;		On entry : 0/0
 29767 ;;		On exit  : 0/0
 29768 ;;		Unchanged: 0/0
 29769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29770 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29771 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29773 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29774 ;;Total ram usage:       13 bytes
 29775 ;; Hardware stack levels used:    1
 29776 ;; This function calls:
 29777 ;;		Nothing
 29778 ;; This function is called by:
 29779 ;;		__display_itoa_u32
 29780 ;; This function uses a non-reentrant model
 29781 ;;
 29782                           
 29783                           	psect	text149
 29784  005BBE                     __ptext149:
 29785                           	opt stack 0
 29786  005BBE                     ___lldiv:
 29787                           	opt stack 24
 29788                           
 29789                           ;incstack = 0
 29790  005BBE  0E00               	movlw	0
 29791  005BC0  6E09               	movwf	___lldiv@quotient,c
 29792  005BC2  0E00               	movlw	0
 29793  005BC4  6E0A               	movwf	___lldiv@quotient+1,c
 29794  005BC6  0E00               	movlw	0
 29795  005BC8  6E0B               	movwf	___lldiv@quotient+2,c
 29796  005BCA  0E00               	movlw	0
 29797  005BCC  6E0C               	movwf	___lldiv@quotient+3,c
 29798  005BCE  5005               	movf	___lldiv@divisor,w,c
 29799  005BD0  1006               	iorwf	___lldiv@divisor+1,w,c
 29800  005BD2  1007               	iorwf	___lldiv@divisor+2,w,c
 29801  005BD4  1008               	iorwf	___lldiv@divisor+3,w,c
 29802  005BD6  B4D8               	btfsc	status,2,c
 29803  005BD8  D02A               	goto	l2848
 29804  005BDA  0E01               	movlw	1
 29805  005BDC  6E0D               	movwf	___lldiv@counter,c
 29806  005BDE  D006               	goto	l2843
 29807  005BE0  90D8               	bcf	status,0,c
 29808  005BE2  3605               	rlcf	___lldiv@divisor,f,c
 29809  005BE4  3606               	rlcf	___lldiv@divisor+1,f,c
 29810  005BE6  3607               	rlcf	___lldiv@divisor+2,f,c
 29811  005BE8  3608               	rlcf	___lldiv@divisor+3,f,c
 29812  005BEA  2A0D               	incf	___lldiv@counter,f,c
 29813  005BEC                     l2843:
 29814  005BEC  AE08               	btfss	___lldiv@divisor+3,7,c
 29815  005BEE  D7F8               	goto	l2844
 29816  005BF0                     u7220:
 29817  005BF0  90D8               	bcf	status,0,c
 29818  005BF2  3609               	rlcf	___lldiv@quotient,f,c
 29819  005BF4  360A               	rlcf	___lldiv@quotient+1,f,c
 29820  005BF6  360B               	rlcf	___lldiv@quotient+2,f,c
 29821  005BF8  360C               	rlcf	___lldiv@quotient+3,f,c
 29822  005BFA  5005               	movf	___lldiv@divisor,w,c
 29823  005BFC  5C01               	subwf	___lldiv@dividend,w,c
 29824  005BFE  5006               	movf	___lldiv@divisor+1,w,c
 29825  005C00  5802               	subwfb	___lldiv@dividend+1,w,c
 29826  005C02  5007               	movf	___lldiv@divisor+2,w,c
 29827  005C04  5803               	subwfb	___lldiv@dividend+2,w,c
 29828  005C06  5008               	movf	___lldiv@divisor+3,w,c
 29829  005C08  5804               	subwfb	___lldiv@dividend+3,w,c
 29830  005C0A  A0D8               	btfss	status,0,c
 29831  005C0C  D009               	goto	l2847
 29832  005C0E  5005               	movf	___lldiv@divisor,w,c
 29833  005C10  5E01               	subwf	___lldiv@dividend,f,c
 29834  005C12  5006               	movf	___lldiv@divisor+1,w,c
 29835  005C14  5A02               	subwfb	___lldiv@dividend+1,f,c
 29836  005C16  5007               	movf	___lldiv@divisor+2,w,c
 29837  005C18  5A03               	subwfb	___lldiv@dividend+2,f,c
 29838  005C1A  5008               	movf	___lldiv@divisor+3,w,c
 29839  005C1C  5A04               	subwfb	___lldiv@dividend+3,f,c
 29840  005C1E  8009               	bsf	___lldiv@quotient,0,c
 29841  005C20                     l2847:
 29842  005C20  90D8               	bcf	status,0,c
 29843  005C22  3208               	rrcf	___lldiv@divisor+3,f,c
 29844  005C24  3207               	rrcf	___lldiv@divisor+2,f,c
 29845  005C26  3206               	rrcf	___lldiv@divisor+1,f,c
 29846  005C28  3205               	rrcf	___lldiv@divisor,f,c
 29847  005C2A  2E0D               	decfsz	___lldiv@counter,f,c
 29848  005C2C  D7E1               	goto	u7220
 29849  005C2E                     l2848:
 29850  005C2E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 29851  005C32  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 29852  005C36  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 29853  005C3A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 29854  005C3E  0012               	return		;funcret
 29855  005C40                     __end_of___lldiv:
 29856                           	opt stack 0
 29857                           tosu	equ	0xFFF
 29858                           tosh	equ	0xFFE
 29859                           tosl	equ	0xFFD
 29860                           pclath	equ	0xFFA
 29861                           tblptru	equ	0xFF8
 29862                           tblptrh	equ	0xFF7
 29863                           tblptrl	equ	0xFF6
 29864                           tablat	equ	0xFF5
 29865                           prodh	equ	0xFF4
 29866                           prodl	equ	0xFF3
 29867                           intcon	equ	0xFF2
 29868                           intcon2	equ	0xFF1
 29869                           intcon3	equ	0xFF0
 29870                           indf0	equ	0xFEF
 29871                           postinc0	equ	0xFEE
 29872                           fsr0h	equ	0xFEA
 29873                           fsr0l	equ	0xFE9
 29874                           wreg	equ	0xFE8
 29875                           indf1	equ	0xFE7
 29876                           postdec1	equ	0xFE5
 29877                           plusw1	equ	0xFE3
 29878                           fsr1h	equ	0xFE2
 29879                           fsr1l	equ	0xFE1
 29880                           indf2	equ	0xFDF
 29881                           postinc2	equ	0xFDE
 29882                           postdec2	equ	0xFDD
 29883                           plusw2	equ	0xFDB
 29884                           fsr2h	equ	0xFDA
 29885                           fsr2l	equ	0xFD9
 29886                           status	equ	0xFD8
 29887                           
 29888 ;; *************** function __display_done *****************
 29889 ;; Defined at:
 29890 ;;		line 520 in file "display.c"
 29891 ;; Parameters:    Size  Location     Type
 29892 ;;		None
 29893 ;; Auto vars:     Size  Location     Type
 29894 ;;  cntr            1   28[COMRAM] unsigned char 
 29895 ;; Return value:  Size  Location     Type
 29896 ;;                  1    wreg      void 
 29897 ;; Registers used:
 29898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29899 ;; Tracked objects:
 29900 ;;		On entry : 0/0
 29901 ;;		On exit  : 0/0
 29902 ;;		Unchanged: 0/0
 29903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29908 ;;Total ram usage:        1 bytes
 29909 ;; Hardware stack levels used:    1
 29910 ;; Hardware stack levels required when called:    4
 29911 ;; This function calls:
 29912 ;;		__display_itoa_u16
 29913 ;;		_bootloader_get_flashPagesWritten
 29914 ;; This function is called by:
 29915 ;;		_display_prepare
 29916 ;; This function uses a non-reentrant model
 29917 ;;
 29918                           
 29919                           	psect	text150
 29920  002E08                     __ptext150:
 29921                           	opt stack 0
 29922  002E08                     __display_done:
 29923                           	opt stack 22
 29924                           
 29925                           ;display.c: 522: uint8_t cntr;;display.c: 523: cntr = 0;
 29926                           
 29927                           ;incstack = 0
 29928  002E08  0E00               	movlw	0
 29929  002E0A  6E1D               	movwf	__display_done@cntr,c
 29930                           
 29931                           ;display.c: 524: while(done_line1[cntr])
 29932  002E0C  D017               	goto	l1662
 29933  002E0E                     
 29934                           ;display.c: 525: display_content[0][cntr] = done_line1[cntr++];
 29935  002E0E  501D               	movf	__display_done@cntr,w,c
 29936  002E10  0D01               	mullw	1
 29937  002E12  0E68               	movlw	low _done_line1
 29938  002E14  24F3               	addwf	prodl,w,c
 29939  002E16  6EF6               	movwf	tblptrl,c
 29940  002E18  0E8D               	movlw	high _done_line1
 29941  002E1A  20F4               	addwfc	prodh,w,c
 29942  002E1C  6EF7               	movwf	tblptrh,c
 29943  002E1E                     	if	1	;There are 3 active tblptr bytes
 29944  002E1E  6AF8               	clrf	tblptru,c
 29945  002E20  0E00               	movlw	low (__mediumconst shr (0+16))
 29946  002E22  22F8               	addwfc	tblptru,f,c
 29947  002E24                     	endif
 29948  002E24  501D               	movf	__display_done@cntr,w,c
 29949  002E26  0D01               	mullw	1
 29950  002E28  0E76               	movlw	low _display_content
 29951  002E2A  24F3               	addwf	prodl,w,c
 29952  002E2C  6ED9               	movwf	fsr2l,c
 29953  002E2E  0E01               	movlw	high _display_content
 29954  002E30  20F4               	addwfc	prodh,w,c
 29955  002E32  6EDA               	movwf	fsr2h,c
 29956  002E34  0008               	tblrd		*
 29957  002E36  CFF5 FFDF          	movff	tablat,indf2
 29958  002E3A  2A1D               	incf	__display_done@cntr,f,c
 29959  002E3C                     l1662:
 29960  002E3C  501D               	movf	__display_done@cntr,w,c
 29961  002E3E  0D01               	mullw	1
 29962  002E40  0E68               	movlw	low _done_line1
 29963  002E42  24F3               	addwf	prodl,w,c
 29964  002E44  6EF6               	movwf	tblptrl,c
 29965  002E46  0E8D               	movlw	high _done_line1
 29966  002E48  20F4               	addwfc	prodh,w,c
 29967  002E4A  6EF7               	movwf	tblptrh,c
 29968  002E4C                     	if	1	;There are 3 active tblptr bytes
 29969  002E4C  6AF8               	clrf	tblptru,c
 29970  002E4E  0E00               	movlw	low (__mediumconst shr (0+16))
 29971  002E50  22F8               	addwfc	tblptru,f,c
 29972  002E52                     	endif
 29973  002E52  0008               	tblrd		*
 29974  002E54  50F5               	movf	tablat,w,c
 29975  002E56  0900               	iorlw	0
 29976  002E58  A4D8               	btfss	status,2,c
 29977  002E5A  D7D9               	goto	l1663
 29978                           
 29979                           ;display.c: 526: cntr = 0;
 29980  002E5C  0E00               	movlw	0
 29981  002E5E  6E1D               	movwf	__display_done@cntr,c
 29982                           
 29983                           ;display.c: 527: while(done_line2[cntr])
 29984  002E60  D017               	goto	l1665
 29985  002E62                     
 29986                           ;display.c: 528: display_content[1][cntr] = done_line2[cntr++];
 29987  002E62  501D               	movf	__display_done@cntr,w,c
 29988  002E64  0D01               	mullw	1
 29989  002E66  0E9D               	movlw	low _done_line2
 29990  002E68  24F3               	addwf	prodl,w,c
 29991  002E6A  6EF6               	movwf	tblptrl,c
 29992  002E6C  0E8E               	movlw	high _done_line2
 29993  002E6E  20F4               	addwfc	prodh,w,c
 29994  002E70  6EF7               	movwf	tblptrh,c
 29995  002E72                     	if	1	;There are 3 active tblptr bytes
 29996  002E72  6AF8               	clrf	tblptru,c
 29997  002E74  0E00               	movlw	low (__mediumconst shr (0+16))
 29998  002E76  22F8               	addwfc	tblptru,f,c
 29999  002E78                     	endif
 30000  002E78  501D               	movf	__display_done@cntr,w,c
 30001  002E7A  0D01               	mullw	1
 30002  002E7C  0E8A               	movlw	low (_display_content+20)
 30003  002E7E  24F3               	addwf	prodl,w,c
 30004  002E80  6ED9               	movwf	fsr2l,c
 30005  002E82  0E01               	movlw	high (_display_content+20)
 30006  002E84  20F4               	addwfc	prodh,w,c
 30007  002E86  6EDA               	movwf	fsr2h,c
 30008  002E88  0008               	tblrd		*
 30009  002E8A  CFF5 FFDF          	movff	tablat,indf2
 30010  002E8E  2A1D               	incf	__display_done@cntr,f,c
 30011  002E90                     l1665:
 30012  002E90  501D               	movf	__display_done@cntr,w,c
 30013  002E92  0D01               	mullw	1
 30014  002E94  0E9D               	movlw	low _done_line2
 30015  002E96  24F3               	addwf	prodl,w,c
 30016  002E98  6EF6               	movwf	tblptrl,c
 30017  002E9A  0E8E               	movlw	high _done_line2
 30018  002E9C  20F4               	addwfc	prodh,w,c
 30019  002E9E  6EF7               	movwf	tblptrh,c
 30020  002EA0                     	if	1	;There are 3 active tblptr bytes
 30021  002EA0  6AF8               	clrf	tblptru,c
 30022  002EA2  0E00               	movlw	low (__mediumconst shr (0+16))
 30023  002EA4  22F8               	addwfc	tblptru,f,c
 30024  002EA6                     	endif
 30025  002EA6  0008               	tblrd		*
 30026  002EA8  50F5               	movf	tablat,w,c
 30027  002EAA  0900               	iorlw	0
 30028  002EAC  A4D8               	btfss	status,2,c
 30029  002EAE  D7D9               	goto	l1666
 30030                           
 30031                           ;display.c: 529: cntr = 0;
 30032  002EB0  0E00               	movlw	0
 30033  002EB2  6E1D               	movwf	__display_done@cntr,c
 30034                           
 30035                           ;display.c: 530: while(done_line3[cntr])
 30036  002EB4  D017               	goto	l1668
 30037  002EB6                     
 30038                           ;display.c: 531: display_content[2][cntr] = done_line3[cntr++];
 30039  002EB6  501D               	movf	__display_done@cntr,w,c
 30040  002EB8  0D01               	mullw	1
 30041  002EBA  0E58               	movlw	low _done_line3
 30042  002EBC  24F3               	addwf	prodl,w,c
 30043  002EBE  6EF6               	movwf	tblptrl,c
 30044  002EC0  0E8D               	movlw	high _done_line3
 30045  002EC2  20F4               	addwfc	prodh,w,c
 30046  002EC4  6EF7               	movwf	tblptrh,c
 30047  002EC6                     	if	1	;There are 3 active tblptr bytes
 30048  002EC6  6AF8               	clrf	tblptru,c
 30049  002EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 30050  002ECA  22F8               	addwfc	tblptru,f,c
 30051  002ECC                     	endif
 30052  002ECC  501D               	movf	__display_done@cntr,w,c
 30053  002ECE  0D01               	mullw	1
 30054  002ED0  0E9E               	movlw	low (_display_content+40)
 30055  002ED2  24F3               	addwf	prodl,w,c
 30056  002ED4  6ED9               	movwf	fsr2l,c
 30057  002ED6  0E01               	movlw	high (_display_content+40)
 30058  002ED8  20F4               	addwfc	prodh,w,c
 30059  002EDA  6EDA               	movwf	fsr2h,c
 30060  002EDC  0008               	tblrd		*
 30061  002EDE  CFF5 FFDF          	movff	tablat,indf2
 30062  002EE2  2A1D               	incf	__display_done@cntr,f,c
 30063  002EE4                     l1668:
 30064  002EE4  501D               	movf	__display_done@cntr,w,c
 30065  002EE6  0D01               	mullw	1
 30066  002EE8  0E58               	movlw	low _done_line3
 30067  002EEA  24F3               	addwf	prodl,w,c
 30068  002EEC  6EF6               	movwf	tblptrl,c
 30069  002EEE  0E8D               	movlw	high _done_line3
 30070  002EF0  20F4               	addwfc	prodh,w,c
 30071  002EF2  6EF7               	movwf	tblptrh,c
 30072  002EF4                     	if	1	;There are 3 active tblptr bytes
 30073  002EF4  6AF8               	clrf	tblptru,c
 30074  002EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 30075  002EF8  22F8               	addwfc	tblptru,f,c
 30076  002EFA                     	endif
 30077  002EFA  0008               	tblrd		*
 30078  002EFC  50F5               	movf	tablat,w,c
 30079  002EFE  0900               	iorlw	0
 30080  002F00  A4D8               	btfss	status,2,c
 30081  002F02  D7D9               	goto	l1669
 30082                           
 30083                           ;display.c: 532: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30084  002F04  ECFC  F038         	call	_bootloader_get_flashPagesWritten	;wreg free
 30085  002F08  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30086  002F0C  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30087  002F10  501D               	movf	__display_done@cntr,w,c
 30088  002F12  0D01               	mullw	1
 30089  002F14  0E9E               	movlw	low (_display_content+40)
 30090  002F16  24F3               	addwf	prodl,w,c
 30091  002F18  6E1B               	movwf	__display_itoa_u16@text,c
 30092  002F1A  0E01               	movlw	high (_display_content+40)
 30093  002F1C  20F4               	addwfc	prodh,w,c
 30094  002F1E  6E1C               	movwf	__display_itoa_u16@text+1,c
 30095  002F20  ECCD  F027         	call	__display_itoa_u16	;wreg free
 30096                           
 30097                           ;display.c: 533: cntr = 0;
 30098  002F24  0E00               	movlw	0
 30099  002F26  6E1D               	movwf	__display_done@cntr,c
 30100                           
 30101                           ;display.c: 534: while(done_line4[cntr])
 30102  002F28  D017               	goto	l1671
 30103  002F2A                     
 30104                           ;display.c: 535: display_content[3][cntr] = done_line4[cntr++];
 30105  002F2A  501D               	movf	__display_done@cntr,w,c
 30106  002F2C  0D01               	mullw	1
 30107  002F2E  0E48               	movlw	low _done_line4
 30108  002F30  24F3               	addwf	prodl,w,c
 30109  002F32  6EF6               	movwf	tblptrl,c
 30110  002F34  0E8D               	movlw	high _done_line4
 30111  002F36  20F4               	addwfc	prodh,w,c
 30112  002F38  6EF7               	movwf	tblptrh,c
 30113  002F3A                     	if	1	;There are 3 active tblptr bytes
 30114  002F3A  6AF8               	clrf	tblptru,c
 30115  002F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 30116  002F3E  22F8               	addwfc	tblptru,f,c
 30117  002F40                     	endif
 30118  002F40  501D               	movf	__display_done@cntr,w,c
 30119  002F42  0D01               	mullw	1
 30120  002F44  0EB2               	movlw	low (_display_content+60)
 30121  002F46  24F3               	addwf	prodl,w,c
 30122  002F48  6ED9               	movwf	fsr2l,c
 30123  002F4A  0E01               	movlw	high (_display_content+60)
 30124  002F4C  20F4               	addwfc	prodh,w,c
 30125  002F4E  6EDA               	movwf	fsr2h,c
 30126  002F50  0008               	tblrd		*
 30127  002F52  CFF5 FFDF          	movff	tablat,indf2
 30128  002F56  2A1D               	incf	__display_done@cntr,f,c
 30129  002F58                     l1671:
 30130  002F58  501D               	movf	__display_done@cntr,w,c
 30131  002F5A  0D01               	mullw	1
 30132  002F5C  0E48               	movlw	low _done_line4
 30133  002F5E  24F3               	addwf	prodl,w,c
 30134  002F60  6EF6               	movwf	tblptrl,c
 30135  002F62  0E8D               	movlw	high _done_line4
 30136  002F64  20F4               	addwfc	prodh,w,c
 30137  002F66  6EF7               	movwf	tblptrh,c
 30138  002F68                     	if	1	;There are 3 active tblptr bytes
 30139  002F68  6AF8               	clrf	tblptru,c
 30140  002F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 30141  002F6C  22F8               	addwfc	tblptru,f,c
 30142  002F6E                     	endif
 30143  002F6E  0008               	tblrd		*
 30144  002F70  50F5               	movf	tablat,w,c
 30145  002F72  0900               	iorlw	0
 30146  002F74  B4D8               	btfsc	status,2,c
 30147  002F76  0012               	return	
 30148  002F78  D7D8               	goto	l1672
 30149  002F7A                     __end_of__display_done:
 30150                           	opt stack 0
 30151                           tosu	equ	0xFFF
 30152                           tosh	equ	0xFFE
 30153                           tosl	equ	0xFFD
 30154                           pclath	equ	0xFFA
 30155                           tblptru	equ	0xFF8
 30156                           tblptrh	equ	0xFF7
 30157                           tblptrl	equ	0xFF6
 30158                           tablat	equ	0xFF5
 30159                           prodh	equ	0xFF4
 30160                           prodl	equ	0xFF3
 30161                           intcon	equ	0xFF2
 30162                           intcon2	equ	0xFF1
 30163                           intcon3	equ	0xFF0
 30164                           indf0	equ	0xFEF
 30165                           postinc0	equ	0xFEE
 30166                           fsr0h	equ	0xFEA
 30167                           fsr0l	equ	0xFE9
 30168                           wreg	equ	0xFE8
 30169                           indf1	equ	0xFE7
 30170                           postdec1	equ	0xFE5
 30171                           plusw1	equ	0xFE3
 30172                           fsr1h	equ	0xFE2
 30173                           fsr1l	equ	0xFE1
 30174                           indf2	equ	0xFDF
 30175                           postinc2	equ	0xFDE
 30176                           postdec2	equ	0xFDD
 30177                           plusw2	equ	0xFDB
 30178                           fsr2h	equ	0xFDA
 30179                           fsr2l	equ	0xFD9
 30180                           status	equ	0xFD8
 30181                           
 30182 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30183 ;; Defined at:
 30184 ;;		line 514 in file "bootloader.c"
 30185 ;; Parameters:    Size  Location     Type
 30186 ;;		None
 30187 ;; Auto vars:     Size  Location     Type
 30188 ;;		None
 30189 ;; Return value:  Size  Location     Type
 30190 ;;                  2    0[COMRAM] unsigned int 
 30191 ;; Registers used:
 30192 ;;		None
 30193 ;; Tracked objects:
 30194 ;;		On entry : 0/0
 30195 ;;		On exit  : 0/0
 30196 ;;		Unchanged: 0/0
 30197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30202 ;;Total ram usage:        2 bytes
 30203 ;; Hardware stack levels used:    1
 30204 ;; This function calls:
 30205 ;;		Nothing
 30206 ;; This function is called by:
 30207 ;;		__display_programming
 30208 ;;		__display_done
 30209 ;;		__fill_buffer_get_bootloader_details
 30210 ;; This function uses a non-reentrant model
 30211 ;;
 30212                           
 30213                           	psect	text151
 30214  0071F8                     __ptext151:
 30215                           	opt stack 0
 30216  0071F8                     _bootloader_get_flashPagesWritten:
 30217                           	opt stack 25
 30218                           
 30219                           ;bootloader.c: 516: return flash_pages_written;
 30220                           
 30221                           ;incstack = 0
 30222  0071F8  C15F  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30223  0071FC  C160  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30224  007200  0012               	return		;funcret
 30225  007202                     __end_of_bootloader_get_flashPagesWritten:
 30226                           	opt stack 0
 30227                           tosu	equ	0xFFF
 30228                           tosh	equ	0xFFE
 30229                           tosl	equ	0xFFD
 30230                           pclath	equ	0xFFA
 30231                           tblptru	equ	0xFF8
 30232                           tblptrh	equ	0xFF7
 30233                           tblptrl	equ	0xFF6
 30234                           tablat	equ	0xFF5
 30235                           prodh	equ	0xFF4
 30236                           prodl	equ	0xFF3
 30237                           intcon	equ	0xFF2
 30238                           intcon2	equ	0xFF1
 30239                           intcon3	equ	0xFF0
 30240                           indf0	equ	0xFEF
 30241                           postinc0	equ	0xFEE
 30242                           fsr0h	equ	0xFEA
 30243                           fsr0l	equ	0xFE9
 30244                           wreg	equ	0xFE8
 30245                           indf1	equ	0xFE7
 30246                           postdec1	equ	0xFE5
 30247                           plusw1	equ	0xFE3
 30248                           fsr1h	equ	0xFE2
 30249                           fsr1l	equ	0xFE1
 30250                           indf2	equ	0xFDF
 30251                           postinc2	equ	0xFDE
 30252                           postdec2	equ	0xFDD
 30253                           plusw2	equ	0xFDB
 30254                           fsr2h	equ	0xFDA
 30255                           fsr2l	equ	0xFD9
 30256                           status	equ	0xFD8
 30257                           
 30258 ;; *************** function __display_clear *****************
 30259 ;; Defined at:
 30260 ;;		line 82 in file "display.c"
 30261 ;; Parameters:    Size  Location     Type
 30262 ;;		None
 30263 ;; Auto vars:     Size  Location     Type
 30264 ;;  col             1    3[COMRAM] unsigned char 
 30265 ;;  row             1    2[COMRAM] unsigned char 
 30266 ;; Return value:  Size  Location     Type
 30267 ;;                  1    wreg      void 
 30268 ;; Registers used:
 30269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30270 ;; Tracked objects:
 30271 ;;		On entry : 0/0
 30272 ;;		On exit  : 0/0
 30273 ;;		Unchanged: 0/0
 30274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30279 ;;Total ram usage:        4 bytes
 30280 ;; Hardware stack levels used:    1
 30281 ;; This function calls:
 30282 ;;		Nothing
 30283 ;; This function is called by:
 30284 ;;		_display_prepare
 30285 ;; This function uses a non-reentrant model
 30286 ;;
 30287                           
 30288                           	psect	text152
 30289  006824                     __ptext152:
 30290                           	opt stack 0
 30291  006824                     __display_clear:
 30292                           	opt stack 26
 30293                           
 30294                           ;display.c: 84: uint8_t row;;display.c: 85: uint8_t col;;display.c: 86: for(row=0;row<4;
      +                          ++row)
 30295                           
 30296                           ;incstack = 0
 30297  006824  0E00               	movlw	0
 30298  006826  6E03               	movwf	__display_clear@row,c
 30299  006828                     l10765:
 30300  006828  0E03               	movlw	3
 30301  00682A  6403               	cpfsgt	__display_clear@row,c
 30302  00682C  D001               	goto	l1428
 30303  00682E  0012               	return	
 30304  006830                     l1428:
 30305                           
 30306                           ;display.c: 87: {;display.c: 88: for(col=0;col<20;++col)
 30307  006830  0E00               	movlw	0
 30308  006832  6E04               	movwf	__display_clear@col,c
 30309  006834                     l10771:
 30310  006834  0E13               	movlw	19
 30311  006836  6404               	cpfsgt	__display_clear@col,c
 30312  006838  D001               	goto	l1430
 30313  00683A  D016               	goto	u8240
 30314  00683C                     l1430:
 30315                           
 30316                           ;display.c: 89: {;display.c: 90: display_content[row][col] = ' ';
 30317  00683C  5003               	movf	__display_clear@row,w,c
 30318  00683E  0D14               	mullw	20
 30319  006840  0E76               	movlw	low _display_content
 30320  006842  6E01               	movwf	??__display_clear& (0+255),c
 30321  006844  0E01               	movlw	high _display_content
 30322  006846  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30323  006848  50F3               	movf	prodl,w,c
 30324  00684A  2601               	addwf	??__display_clear,f,c
 30325  00684C  50F4               	movf	prodh,w,c
 30326  00684E  2202               	addwfc	??__display_clear+1,f,c
 30327  006850  5004               	movf	__display_clear@col,w,c
 30328  006852  0D01               	mullw	1
 30329  006854  50F3               	movf	prodl,w,c
 30330  006856  2401               	addwf	??__display_clear,w,c
 30331  006858  6ED9               	movwf	fsr2l,c
 30332  00685A  50F4               	movf	prodh,w,c
 30333  00685C  2002               	addwfc	??__display_clear+1,w,c
 30334  00685E  6EDA               	movwf	fsr2h,c
 30335  006860  0E20               	movlw	32
 30336  006862  6EDF               	movwf	indf2,c
 30337  006864  2A04               	incf	__display_clear@col,f,c
 30338  006866  D7E6               	goto	l10771
 30339  006868                     u8240:
 30340  006868  2A03               	incf	__display_clear@row,f,c
 30341  00686A  D7DE               	goto	l10765
 30342  00686C                     __end_of__display_clear:
 30343                           	opt stack 0
 30344                           tosu	equ	0xFFF
 30345                           tosh	equ	0xFFE
 30346                           tosl	equ	0xFFD
 30347                           pclath	equ	0xFFA
 30348                           tblptru	equ	0xFF8
 30349                           tblptrh	equ	0xFF7
 30350                           tblptrl	equ	0xFF6
 30351                           tablat	equ	0xFF5
 30352                           prodh	equ	0xFF4
 30353                           prodl	equ	0xFF3
 30354                           intcon	equ	0xFF2
 30355                           intcon2	equ	0xFF1
 30356                           intcon3	equ	0xFF0
 30357                           indf0	equ	0xFEF
 30358                           postinc0	equ	0xFEE
 30359                           fsr0h	equ	0xFEA
 30360                           fsr0l	equ	0xFE9
 30361                           wreg	equ	0xFE8
 30362                           indf1	equ	0xFE7
 30363                           postdec1	equ	0xFE5
 30364                           plusw1	equ	0xFE3
 30365                           fsr1h	equ	0xFE2
 30366                           fsr1l	equ	0xFE1
 30367                           indf2	equ	0xFDF
 30368                           postinc2	equ	0xFDE
 30369                           postdec2	equ	0xFDD
 30370                           plusw2	equ	0xFDB
 30371                           fsr2h	equ	0xFDA
 30372                           fsr2l	equ	0xFD9
 30373                           status	equ	0xFD8
 30374                           
 30375 ;; *************** function __display_checked *****************
 30376 ;; Defined at:
 30377 ;;		line 424 in file "display.c"
 30378 ;; Parameters:    Size  Location     Type
 30379 ;;		None
 30380 ;; Auto vars:     Size  Location     Type
 30381 ;;  cntr            1   31[COMRAM] unsigned char 
 30382 ;;  start           1   30[COMRAM] unsigned char 
 30383 ;; Return value:  Size  Location     Type
 30384 ;;                  1    wreg      void 
 30385 ;; Registers used:
 30386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30387 ;; Tracked objects:
 30388 ;;		On entry : 0/0
 30389 ;;		On exit  : 0/0
 30390 ;;		Unchanged: 0/0
 30391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30394 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30395 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30396 ;;Total ram usage:        4 bytes
 30397 ;; Hardware stack levels used:    1
 30398 ;; Hardware stack levels required when called:    4
 30399 ;; This function calls:
 30400 ;;		__display_itoa_u16
 30401 ;;		_bootloader_get_total_entries
 30402 ;; This function is called by:
 30403 ;;		_display_prepare
 30404 ;; This function uses a non-reentrant model
 30405 ;;
 30406                           
 30407                           	psect	text153
 30408  002B1A                     __ptext153:
 30409                           	opt stack 0
 30410  002B1A                     __display_checked:
 30411                           	opt stack 22
 30412                           
 30413                           ;display.c: 426: uint8_t cntr;;display.c: 427: uint8_t start;;display.c: 428: cntr = 0;
 30414                           
 30415                           ;incstack = 0
 30416  002B1A  0E00               	movlw	0
 30417  002B1C  6E20               	movwf	__display_checked@cntr,c
 30418                           
 30419                           ;display.c: 429: while(checked_line1[cntr])
 30420  002B1E  D017               	goto	l1598
 30421  002B20                     
 30422                           ;display.c: 430: display_content[0][cntr] = checked_line1[cntr++];
 30423  002B20  5020               	movf	__display_checked@cntr,w,c
 30424  002B22  0D01               	mullw	1
 30425  002B24  0EA8               	movlw	low _checked_line1
 30426  002B26  24F3               	addwf	prodl,w,c
 30427  002B28  6EF6               	movwf	tblptrl,c
 30428  002B2A  0E8D               	movlw	high _checked_line1
 30429  002B2C  20F4               	addwfc	prodh,w,c
 30430  002B2E  6EF7               	movwf	tblptrh,c
 30431  002B30                     	if	1	;There are 3 active tblptr bytes
 30432  002B30  6AF8               	clrf	tblptru,c
 30433  002B32  0E00               	movlw	low (__mediumconst shr (0+16))
 30434  002B34  22F8               	addwfc	tblptru,f,c
 30435  002B36                     	endif
 30436  002B36  5020               	movf	__display_checked@cntr,w,c
 30437  002B38  0D01               	mullw	1
 30438  002B3A  0E76               	movlw	low _display_content
 30439  002B3C  24F3               	addwf	prodl,w,c
 30440  002B3E  6ED9               	movwf	fsr2l,c
 30441  002B40  0E01               	movlw	high _display_content
 30442  002B42  20F4               	addwfc	prodh,w,c
 30443  002B44  6EDA               	movwf	fsr2h,c
 30444  002B46  0008               	tblrd		*
 30445  002B48  CFF5 FFDF          	movff	tablat,indf2
 30446  002B4C  2A20               	incf	__display_checked@cntr,f,c
 30447  002B4E                     l1598:
 30448  002B4E  5020               	movf	__display_checked@cntr,w,c
 30449  002B50  0D01               	mullw	1
 30450  002B52  0EA8               	movlw	low _checked_line1
 30451  002B54  24F3               	addwf	prodl,w,c
 30452  002B56  6EF6               	movwf	tblptrl,c
 30453  002B58  0E8D               	movlw	high _checked_line1
 30454  002B5A  20F4               	addwfc	prodh,w,c
 30455  002B5C  6EF7               	movwf	tblptrh,c
 30456  002B5E                     	if	1	;There are 3 active tblptr bytes
 30457  002B5E  6AF8               	clrf	tblptru,c
 30458  002B60  0E00               	movlw	low (__mediumconst shr (0+16))
 30459  002B62  22F8               	addwfc	tblptru,f,c
 30460  002B64                     	endif
 30461  002B64  0008               	tblrd		*
 30462  002B66  50F5               	movf	tablat,w,c
 30463  002B68  0900               	iorlw	0
 30464  002B6A  A4D8               	btfss	status,2,c
 30465  002B6C  D7D9               	goto	l1599
 30466                           
 30467                           ;display.c: 431: cntr = 0;
 30468  002B6E  0E00               	movlw	0
 30469  002B70  6E20               	movwf	__display_checked@cntr,c
 30470                           
 30471                           ;display.c: 432: while(checked_line2[cntr])
 30472  002B72  D017               	goto	l1601
 30473  002B74                     
 30474                           ;display.c: 433: display_content[1][cntr] = checked_line2[cntr++];
 30475  002B74  5020               	movf	__display_checked@cntr,w,c
 30476  002B76  0D01               	mullw	1
 30477  002B78  0E6D               	movlw	low _checked_line2
 30478  002B7A  24F3               	addwf	prodl,w,c
 30479  002B7C  6EF6               	movwf	tblptrl,c
 30480  002B7E  0E8C               	movlw	high _checked_line2
 30481  002B80  20F4               	addwfc	prodh,w,c
 30482  002B82  6EF7               	movwf	tblptrh,c
 30483  002B84                     	if	1	;There are 3 active tblptr bytes
 30484  002B84  6AF8               	clrf	tblptru,c
 30485  002B86  0E00               	movlw	low (__mediumconst shr (0+16))
 30486  002B88  22F8               	addwfc	tblptru,f,c
 30487  002B8A                     	endif
 30488  002B8A  5020               	movf	__display_checked@cntr,w,c
 30489  002B8C  0D01               	mullw	1
 30490  002B8E  0E8A               	movlw	low (_display_content+20)
 30491  002B90  24F3               	addwf	prodl,w,c
 30492  002B92  6ED9               	movwf	fsr2l,c
 30493  002B94  0E01               	movlw	high (_display_content+20)
 30494  002B96  20F4               	addwfc	prodh,w,c
 30495  002B98  6EDA               	movwf	fsr2h,c
 30496  002B9A  0008               	tblrd		*
 30497  002B9C  CFF5 FFDF          	movff	tablat,indf2
 30498  002BA0  2A20               	incf	__display_checked@cntr,f,c
 30499  002BA2                     l1601:
 30500  002BA2  5020               	movf	__display_checked@cntr,w,c
 30501  002BA4  0D01               	mullw	1
 30502  002BA6  0E6D               	movlw	low _checked_line2
 30503  002BA8  24F3               	addwf	prodl,w,c
 30504  002BAA  6EF6               	movwf	tblptrl,c
 30505  002BAC  0E8C               	movlw	high _checked_line2
 30506  002BAE  20F4               	addwfc	prodh,w,c
 30507  002BB0  6EF7               	movwf	tblptrh,c
 30508  002BB2                     	if	1	;There are 3 active tblptr bytes
 30509  002BB2  6AF8               	clrf	tblptru,c
 30510  002BB4  0E00               	movlw	low (__mediumconst shr (0+16))
 30511  002BB6  22F8               	addwfc	tblptru,f,c
 30512  002BB8                     	endif
 30513  002BB8  0008               	tblrd		*
 30514  002BBA  50F5               	movf	tablat,w,c
 30515  002BBC  0900               	iorlw	0
 30516  002BBE  A4D8               	btfss	status,2,c
 30517  002BC0  D7D9               	goto	l1602
 30518                           
 30519                           ;display.c: 435: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30520  002BC2  EC01  F039         	call	_bootloader_get_total_entries	;wreg free
 30521  002BC6  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30522  002BCA  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30523  002BCE  0E9E               	movlw	low (_display_content+40)
 30524  002BD0  6E1B               	movwf	__display_itoa_u16@text,c
 30525  002BD2  0E01               	movlw	high (_display_content+40)
 30526  002BD4  6E1C               	movwf	__display_itoa_u16@text+1,c
 30527  002BD6  ECCD  F027         	call	__display_itoa_u16	;wreg free
 30528  002BDA  6E1F               	movwf	__display_checked@start,c
 30529                           
 30530                           ;display.c: 436: start++;
 30531  002BDC  2A1F               	incf	__display_checked@start,f,c
 30532                           
 30533                           ;display.c: 437: cntr = 0;
 30534  002BDE  0E00               	movlw	0
 30535  002BE0  6E20               	movwf	__display_checked@cntr,c
 30536                           
 30537                           ;display.c: 438: while(checked_line3[cntr])
 30538  002BE2  D01C               	goto	l1604
 30539  002BE4                     
 30540                           ;display.c: 439: display_content[2][start+cntr] = checked_line3[cntr++];
 30541  002BE4  5020               	movf	__display_checked@cntr,w,c
 30542  002BE6  0D01               	mullw	1
 30543  002BE8  0E71               	movlw	low _checked_line3
 30544  002BEA  24F3               	addwf	prodl,w,c
 30545  002BEC  6EF6               	movwf	tblptrl,c
 30546  002BEE  0E8E               	movlw	high _checked_line3
 30547  002BF0  20F4               	addwfc	prodh,w,c
 30548  002BF2  6EF7               	movwf	tblptrh,c
 30549  002BF4                     	if	1	;There are 3 active tblptr bytes
 30550  002BF4  6AF8               	clrf	tblptru,c
 30551  002BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 30552  002BF8  22F8               	addwfc	tblptru,f,c
 30553  002BFA                     	endif
 30554  002BFA  5020               	movf	__display_checked@cntr,w,c
 30555  002BFC  C01F  F01D         	movff	__display_checked@start,??__display_checked
 30556  002C00  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 30557  002C02  261D               	addwf	??__display_checked,f,c
 30558  002C04  0E00               	movlw	0
 30559  002C06  221E               	addwfc	??__display_checked+1,f,c
 30560  002C08  0E9E               	movlw	low (_display_content+40)
 30561  002C0A  241D               	addwf	??__display_checked,w,c
 30562  002C0C  6ED9               	movwf	fsr2l,c
 30563  002C0E  0E01               	movlw	high (_display_content+40)
 30564  002C10  201E               	addwfc	??__display_checked+1,w,c
 30565  002C12  6EDA               	movwf	fsr2h,c
 30566  002C14  0008               	tblrd		*
 30567  002C16  CFF5 FFDF          	movff	tablat,indf2
 30568  002C1A  2A20               	incf	__display_checked@cntr,f,c
 30569  002C1C                     l1604:
 30570  002C1C  5020               	movf	__display_checked@cntr,w,c
 30571  002C1E  0D01               	mullw	1
 30572  002C20  0E71               	movlw	low _checked_line3
 30573  002C22  24F3               	addwf	prodl,w,c
 30574  002C24  6EF6               	movwf	tblptrl,c
 30575  002C26  0E8E               	movlw	high _checked_line3
 30576  002C28  20F4               	addwfc	prodh,w,c
 30577  002C2A  6EF7               	movwf	tblptrh,c
 30578  002C2C                     	if	1	;There are 3 active tblptr bytes
 30579  002C2C  6AF8               	clrf	tblptru,c
 30580  002C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 30581  002C30  22F8               	addwfc	tblptru,f,c
 30582  002C32                     	endif
 30583  002C32  0008               	tblrd		*
 30584  002C34  50F5               	movf	tablat,w,c
 30585  002C36  0900               	iorlw	0
 30586  002C38  A4D8               	btfss	status,2,c
 30587  002C3A  D7D4               	goto	l1605
 30588                           
 30589                           ;display.c: 441: cntr = 0;
 30590  002C3C  0E00               	movlw	0
 30591  002C3E  6E20               	movwf	__display_checked@cntr,c
 30592                           
 30593                           ;display.c: 442: while(checked_line4[cntr])
 30594  002C40  D017               	goto	l1607
 30595  002C42                     
 30596                           ;display.c: 443: display_content[3][cntr] = checked_line4[cntr++];
 30597  002C42  5020               	movf	__display_checked@cntr,w,c
 30598  002C44  0D01               	mullw	1
 30599  002C46  0E06               	movlw	low _checked_line4
 30600  002C48  24F3               	addwf	prodl,w,c
 30601  002C4A  6EF6               	movwf	tblptrl,c
 30602  002C4C  0E8D               	movlw	high _checked_line4
 30603  002C4E  20F4               	addwfc	prodh,w,c
 30604  002C50  6EF7               	movwf	tblptrh,c
 30605  002C52                     	if	1	;There are 3 active tblptr bytes
 30606  002C52  6AF8               	clrf	tblptru,c
 30607  002C54  0E00               	movlw	low (__mediumconst shr (0+16))
 30608  002C56  22F8               	addwfc	tblptru,f,c
 30609  002C58                     	endif
 30610  002C58  5020               	movf	__display_checked@cntr,w,c
 30611  002C5A  0D01               	mullw	1
 30612  002C5C  0EB2               	movlw	low (_display_content+60)
 30613  002C5E  24F3               	addwf	prodl,w,c
 30614  002C60  6ED9               	movwf	fsr2l,c
 30615  002C62  0E01               	movlw	high (_display_content+60)
 30616  002C64  20F4               	addwfc	prodh,w,c
 30617  002C66  6EDA               	movwf	fsr2h,c
 30618  002C68  0008               	tblrd		*
 30619  002C6A  CFF5 FFDF          	movff	tablat,indf2
 30620  002C6E  2A20               	incf	__display_checked@cntr,f,c
 30621  002C70                     l1607:
 30622  002C70  5020               	movf	__display_checked@cntr,w,c
 30623  002C72  0D01               	mullw	1
 30624  002C74  0E06               	movlw	low _checked_line4
 30625  002C76  24F3               	addwf	prodl,w,c
 30626  002C78  6EF6               	movwf	tblptrl,c
 30627  002C7A  0E8D               	movlw	high _checked_line4
 30628  002C7C  20F4               	addwfc	prodh,w,c
 30629  002C7E  6EF7               	movwf	tblptrh,c
 30630  002C80                     	if	1	;There are 3 active tblptr bytes
 30631  002C80  6AF8               	clrf	tblptru,c
 30632  002C82  0E00               	movlw	low (__mediumconst shr (0+16))
 30633  002C84  22F8               	addwfc	tblptru,f,c
 30634  002C86                     	endif
 30635  002C86  0008               	tblrd		*
 30636  002C88  50F5               	movf	tablat,w,c
 30637  002C8A  0900               	iorlw	0
 30638  002C8C  B4D8               	btfsc	status,2,c
 30639  002C8E  0012               	return	
 30640  002C90  D7D8               	goto	l1608
 30641  002C92                     __end_of__display_checked:
 30642                           	opt stack 0
 30643                           tosu	equ	0xFFF
 30644                           tosh	equ	0xFFE
 30645                           tosl	equ	0xFFD
 30646                           pclath	equ	0xFFA
 30647                           tblptru	equ	0xFF8
 30648                           tblptrh	equ	0xFF7
 30649                           tblptrl	equ	0xFF6
 30650                           tablat	equ	0xFF5
 30651                           prodh	equ	0xFF4
 30652                           prodl	equ	0xFF3
 30653                           intcon	equ	0xFF2
 30654                           intcon2	equ	0xFF1
 30655                           intcon3	equ	0xFF0
 30656                           indf0	equ	0xFEF
 30657                           postinc0	equ	0xFEE
 30658                           fsr0h	equ	0xFEA
 30659                           fsr0l	equ	0xFE9
 30660                           wreg	equ	0xFE8
 30661                           indf1	equ	0xFE7
 30662                           postdec1	equ	0xFE5
 30663                           plusw1	equ	0xFE3
 30664                           fsr1h	equ	0xFE2
 30665                           fsr1l	equ	0xFE1
 30666                           indf2	equ	0xFDF
 30667                           postinc2	equ	0xFDE
 30668                           postdec2	equ	0xFDD
 30669                           plusw2	equ	0xFDB
 30670                           fsr2h	equ	0xFDA
 30671                           fsr2l	equ	0xFD9
 30672                           status	equ	0xFD8
 30673                           
 30674 ;; *************** function _bootloader_get_total_entries *****************
 30675 ;; Defined at:
 30676 ;;		line 473 in file "bootloader.c"
 30677 ;; Parameters:    Size  Location     Type
 30678 ;;		None
 30679 ;; Auto vars:     Size  Location     Type
 30680 ;;		None
 30681 ;; Return value:  Size  Location     Type
 30682 ;;                  2    0[COMRAM] unsigned int 
 30683 ;; Registers used:
 30684 ;;		None
 30685 ;; Tracked objects:
 30686 ;;		On entry : 0/0
 30687 ;;		On exit  : 0/0
 30688 ;;		Unchanged: 0/0
 30689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30694 ;;Total ram usage:        2 bytes
 30695 ;; Hardware stack levels used:    1
 30696 ;; This function calls:
 30697 ;;		Nothing
 30698 ;; This function is called by:
 30699 ;;		__display_checked
 30700 ;;		__display_programming
 30701 ;;		__fill_buffer_get_bootloader_details
 30702 ;; This function uses a non-reentrant model
 30703 ;;
 30704                           
 30705                           	psect	text154
 30706  007202                     __ptext154:
 30707                           	opt stack 0
 30708  007202                     _bootloader_get_total_entries:
 30709                           	opt stack 25
 30710                           
 30711                           ;bootloader.c: 475: return total_hex_file_entries;
 30712                           
 30713                           ;incstack = 0
 30714  007202  C161  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30715  007206  C162  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30716  00720A  0012               	return		;funcret
 30717  00720C                     __end_of_bootloader_get_total_entries:
 30718                           	opt stack 0
 30719                           tosu	equ	0xFFF
 30720                           tosh	equ	0xFFE
 30721                           tosl	equ	0xFFD
 30722                           pclath	equ	0xFFA
 30723                           tblptru	equ	0xFF8
 30724                           tblptrh	equ	0xFF7
 30725                           tblptrl	equ	0xFF6
 30726                           tablat	equ	0xFF5
 30727                           prodh	equ	0xFF4
 30728                           prodl	equ	0xFF3
 30729                           intcon	equ	0xFF2
 30730                           intcon2	equ	0xFF1
 30731                           intcon3	equ	0xFF0
 30732                           indf0	equ	0xFEF
 30733                           postinc0	equ	0xFEE
 30734                           fsr0h	equ	0xFEA
 30735                           fsr0l	equ	0xFE9
 30736                           wreg	equ	0xFE8
 30737                           indf1	equ	0xFE7
 30738                           postdec1	equ	0xFE5
 30739                           plusw1	equ	0xFE3
 30740                           fsr1h	equ	0xFE2
 30741                           fsr1l	equ	0xFE1
 30742                           indf2	equ	0xFDF
 30743                           postinc2	equ	0xFDE
 30744                           postdec2	equ	0xFDD
 30745                           plusw2	equ	0xFDB
 30746                           fsr2h	equ	0xFDA
 30747                           fsr2l	equ	0xFD9
 30748                           status	equ	0xFD8
 30749                           
 30750 ;; *************** function __display_itoa_u16 *****************
 30751 ;; Defined at:
 30752 ;;		line 95 in file "display.c"
 30753 ;; Parameters:    Size  Location     Type
 30754 ;;  value           2   24[COMRAM] unsigned int 
 30755 ;;  text            2   26[COMRAM] PTR unsigned char 
 30756 ;;		 -> display_content(80), 
 30757 ;; Auto vars:     Size  Location     Type
 30758 ;;		None
 30759 ;; Return value:  Size  Location     Type
 30760 ;;                  1    wreg      unsigned char 
 30761 ;; Registers used:
 30762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30763 ;; Tracked objects:
 30764 ;;		On entry : 0/0
 30765 ;;		On exit  : 0/0
 30766 ;;		Unchanged: 0/0
 30767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30772 ;;Total ram usage:        4 bytes
 30773 ;; Hardware stack levels used:    1
 30774 ;; Hardware stack levels required when called:    3
 30775 ;; This function calls:
 30776 ;;		_itoa
 30777 ;; This function is called by:
 30778 ;;		__display_start
 30779 ;;		__display_verify
 30780 ;;		__display_checked
 30781 ;;		__display_failed
 30782 ;;		__display_programming
 30783 ;;		__display_done
 30784 ;; This function uses a non-reentrant model
 30785 ;;
 30786                           
 30787                           	psect	text155
 30788  004F9A                     __ptext155:
 30789                           	opt stack 0
 30790  004F9A                     __display_itoa_u16:
 30791                           	opt stack 22
 30792                           
 30793                           ;display.c: 97: itoa(text, value, 10);
 30794                           
 30795                           ;incstack = 0
 30796  004F9A  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 30797  004F9E  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 30798  004FA2  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 30799  004FA6  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 30800  004FAA  0E00               	movlw	0
 30801  004FAC  6E16               	movwf	itoa@base+1,c
 30802  004FAE  0E0A               	movlw	10
 30803  004FB0  6E15               	movwf	itoa@base,c
 30804  004FB2  EC04  F035         	call	_itoa	;wreg free
 30805                           
 30806                           ;display.c: 98: if(value>9999)
 30807  004FB6  0E10               	movlw	16
 30808  004FB8  5C19               	subwf	__display_itoa_u16@value,w,c
 30809  004FBA  0E27               	movlw	39
 30810  004FBC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30811  004FBE  A0D8               	btfss	status,0,c
 30812  004FC0  D00A               	goto	l1435
 30813                           
 30814                           ;display.c: 99: {;display.c: 100: *(text+5) = ' ';
 30815  004FC2  EE20 F005          	lfsr	2,5
 30816  004FC6  501B               	movf	__display_itoa_u16@text,w,c
 30817  004FC8  26D9               	addwf	fsr2l,f,c
 30818  004FCA  501C               	movf	__display_itoa_u16@text+1,w,c
 30819  004FCC  22DA               	addwfc	fsr2h,f,c
 30820  004FCE  0E20               	movlw	32
 30821  004FD0  6EDF               	movwf	indf2,c
 30822                           
 30823                           ;display.c: 101: return 5;
 30824  004FD2  0E05               	movlw	5
 30825                           
 30826                           ;display.c: 102: }
 30827  004FD4  0012               	return	
 30828  004FD6                     l1435:
 30829                           
 30830                           ;display.c: 103: else if (value>999)
 30831  004FD6  0EE8               	movlw	232
 30832  004FD8  5C19               	subwf	__display_itoa_u16@value,w,c
 30833  004FDA  0E03               	movlw	3
 30834  004FDC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30835  004FDE  A0D8               	btfss	status,0,c
 30836  004FE0  D00A               	goto	l1438
 30837                           
 30838                           ;display.c: 104: {;display.c: 105: *(text+4) = ' ';
 30839  004FE2  EE20 F004          	lfsr	2,4
 30840  004FE6  501B               	movf	__display_itoa_u16@text,w,c
 30841  004FE8  26D9               	addwf	fsr2l,f,c
 30842  004FEA  501C               	movf	__display_itoa_u16@text+1,w,c
 30843  004FEC  22DA               	addwfc	fsr2h,f,c
 30844  004FEE  0E20               	movlw	32
 30845  004FF0  6EDF               	movwf	indf2,c
 30846                           
 30847                           ;display.c: 106: return 4;
 30848  004FF2  0E04               	movlw	4
 30849                           
 30850                           ;display.c: 107: }
 30851  004FF4  0012               	return	
 30852  004FF6                     l1438:
 30853                           
 30854                           ;display.c: 108: else if (value>99)
 30855  004FF6  501A               	movf	__display_itoa_u16@value+1,w,c
 30856  004FF8  E104               	bnz	u7640
 30857  004FFA  0E64               	movlw	100
 30858  004FFC  5C19               	subwf	__display_itoa_u16@value,w,c
 30859  004FFE  A0D8               	btfss	status,0,c
 30860  005000  D00A               	goto	l1440
 30861  005002                     u7640:
 30862                           
 30863                           ;display.c: 109: {;display.c: 110: *(text+3) = ' ';
 30864  005002  EE20 F003          	lfsr	2,3
 30865  005006  501B               	movf	__display_itoa_u16@text,w,c
 30866  005008  26D9               	addwf	fsr2l,f,c
 30867  00500A  501C               	movf	__display_itoa_u16@text+1,w,c
 30868  00500C  22DA               	addwfc	fsr2h,f,c
 30869  00500E  0E20               	movlw	32
 30870  005010  6EDF               	movwf	indf2,c
 30871                           
 30872                           ;display.c: 111: return 3;
 30873  005012  0E03               	movlw	3
 30874                           
 30875                           ;display.c: 112: }
 30876  005014  0012               	return	
 30877  005016                     l1440:
 30878                           
 30879                           ;display.c: 113: else if (value>9)
 30880  005016  501A               	movf	__display_itoa_u16@value+1,w,c
 30881  005018  E104               	bnz	u7650
 30882  00501A  0E0A               	movlw	10
 30883  00501C  5C19               	subwf	__display_itoa_u16@value,w,c
 30884  00501E  A0D8               	btfss	status,0,c
 30885  005020  D00A               	goto	l1442
 30886  005022                     u7650:
 30887                           
 30888                           ;display.c: 114: {;display.c: 115: *(text+2) = ' ';
 30889  005022  EE20 F002          	lfsr	2,2
 30890  005026  501B               	movf	__display_itoa_u16@text,w,c
 30891  005028  26D9               	addwf	fsr2l,f,c
 30892  00502A  501C               	movf	__display_itoa_u16@text+1,w,c
 30893  00502C  22DA               	addwfc	fsr2h,f,c
 30894  00502E  0E20               	movlw	32
 30895  005030  6EDF               	movwf	indf2,c
 30896                           
 30897                           ;display.c: 116: return 2;
 30898  005032  0E02               	movlw	2
 30899                           
 30900                           ;display.c: 117: }
 30901  005034  0012               	return	
 30902  005036                     l1442:
 30903                           
 30904                           ;display.c: 118: else;display.c: 119: {;display.c: 120: *(text+1) = ' ';
 30905  005036  EE20 F001          	lfsr	2,1
 30906  00503A  501B               	movf	__display_itoa_u16@text,w,c
 30907  00503C  26D9               	addwf	fsr2l,f,c
 30908  00503E  501C               	movf	__display_itoa_u16@text+1,w,c
 30909  005040  22DA               	addwfc	fsr2h,f,c
 30910  005042  0E20               	movlw	32
 30911  005044  6EDF               	movwf	indf2,c
 30912                           
 30913                           ;display.c: 121: return 1;
 30914  005046  0E01               	movlw	1
 30915  005048  0012               	return	
 30916  00504A                     __end_of__display_itoa_u16:
 30917                           	opt stack 0
 30918                           tosu	equ	0xFFF
 30919                           tosh	equ	0xFFE
 30920                           tosl	equ	0xFFD
 30921                           pclath	equ	0xFFA
 30922                           tblptru	equ	0xFF8
 30923                           tblptrh	equ	0xFF7
 30924                           tblptrl	equ	0xFF6
 30925                           tablat	equ	0xFF5
 30926                           prodh	equ	0xFF4
 30927                           prodl	equ	0xFF3
 30928                           intcon	equ	0xFF2
 30929                           intcon2	equ	0xFF1
 30930                           intcon3	equ	0xFF0
 30931                           indf0	equ	0xFEF
 30932                           postinc0	equ	0xFEE
 30933                           fsr0h	equ	0xFEA
 30934                           fsr0l	equ	0xFE9
 30935                           wreg	equ	0xFE8
 30936                           indf1	equ	0xFE7
 30937                           postdec1	equ	0xFE5
 30938                           plusw1	equ	0xFE3
 30939                           fsr1h	equ	0xFE2
 30940                           fsr1l	equ	0xFE1
 30941                           indf2	equ	0xFDF
 30942                           postinc2	equ	0xFDE
 30943                           postdec2	equ	0xFDD
 30944                           plusw2	equ	0xFDB
 30945                           fsr2h	equ	0xFDA
 30946                           fsr2l	equ	0xFD9
 30947                           status	equ	0xFD8
 30948                           
 30949 ;; *************** function _itoa *****************
 30950 ;; Defined at:
 30951 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 30952 ;; Parameters:    Size  Location     Type
 30953 ;;  buf             2   16[COMRAM] PTR unsigned char 
 30954 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30955 ;;  val             2   18[COMRAM] int 
 30956 ;;  base            2   20[COMRAM] int 
 30957 ;; Auto vars:     Size  Location     Type
 30958 ;;  cp              2   22[COMRAM] PTR unsigned char 
 30959 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 30960 ;; Return value:  Size  Location     Type
 30961 ;;                  2   16[COMRAM] PTR unsigned char 
 30962 ;; Registers used:
 30963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30964 ;; Tracked objects:
 30965 ;;		On entry : 0/0
 30966 ;;		On exit  : 0/0
 30967 ;;		Unchanged: 0/0
 30968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30972 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30973 ;;Total ram usage:        8 bytes
 30974 ;; Hardware stack levels used:    1
 30975 ;; Hardware stack levels required when called:    2
 30976 ;; This function calls:
 30977 ;;		_utoa
 30978 ;; This function is called by:
 30979 ;;		__display_itoa_u16
 30980 ;;		__display_itoa
 30981 ;; This function uses a non-reentrant model
 30982 ;;
 30983                           
 30984                           	psect	text156
 30985  006A08                     __ptext156:
 30986                           	opt stack 0
 30987  006A08                     _itoa:
 30988                           	opt stack 22
 30989                           
 30990                           ;incstack = 0
 30991  006A08  C011  F017         	movff	itoa@buf,itoa@cp
 30992  006A0C  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 30993  006A10  AE14               	btfss	itoa@val+1,7,c
 30994  006A12  D00C               	goto	l3479
 30995  006A14  C011  FFD9         	movff	itoa@buf,fsr2l
 30996  006A18  C012  FFDA         	movff	itoa@buf+1,fsr2h
 30997  006A1C  0E2D               	movlw	45
 30998  006A1E  6EDF               	movwf	indf2,c
 30999  006A20  4A11               	infsnz	itoa@buf,f,c
 31000  006A22  2A12               	incf	itoa@buf+1,f,c
 31001  006A24  6C13               	negf	itoa@val,c
 31002  006A26  1E14               	comf	itoa@val+1,f,c
 31003  006A28  B0D8               	btfsc	status,0,c
 31004  006A2A  2A14               	incf	itoa@val+1,f,c
 31005  006A2C                     l3479:
 31006  006A2C  C011  F008         	movff	itoa@buf,utoa@buf
 31007  006A30  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31008  006A34  C013  F00A         	movff	itoa@val,utoa@val
 31009  006A38  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31010  006A3C  C015  F00C         	movff	itoa@base,utoa@base
 31011  006A40  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31012  006A44  ECCA  F029         	call	_utoa	;wreg free
 31013  006A48  0012               	return	
 31014  006A4A                     __end_of_itoa:
 31015                           	opt stack 0
 31016                           tosu	equ	0xFFF
 31017                           tosh	equ	0xFFE
 31018                           tosl	equ	0xFFD
 31019                           pclath	equ	0xFFA
 31020                           tblptru	equ	0xFF8
 31021                           tblptrh	equ	0xFF7
 31022                           tblptrl	equ	0xFF6
 31023                           tablat	equ	0xFF5
 31024                           prodh	equ	0xFF4
 31025                           prodl	equ	0xFF3
 31026                           intcon	equ	0xFF2
 31027                           intcon2	equ	0xFF1
 31028                           intcon3	equ	0xFF0
 31029                           indf0	equ	0xFEF
 31030                           postinc0	equ	0xFEE
 31031                           fsr0h	equ	0xFEA
 31032                           fsr0l	equ	0xFE9
 31033                           wreg	equ	0xFE8
 31034                           indf1	equ	0xFE7
 31035                           postdec1	equ	0xFE5
 31036                           plusw1	equ	0xFE3
 31037                           fsr1h	equ	0xFE2
 31038                           fsr1l	equ	0xFE1
 31039                           indf2	equ	0xFDF
 31040                           postinc2	equ	0xFDE
 31041                           postdec2	equ	0xFDD
 31042                           plusw2	equ	0xFDB
 31043                           fsr2h	equ	0xFDA
 31044                           fsr2l	equ	0xFD9
 31045                           status	equ	0xFD8
 31046                           
 31047 ;; *************** function _utoa *****************
 31048 ;; Defined at:
 31049 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31050 ;; Parameters:    Size  Location     Type
 31051 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31052 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31053 ;;  val             2    9[COMRAM] unsigned int 
 31054 ;;  base            2   11[COMRAM] int 
 31055 ;; Auto vars:     Size  Location     Type
 31056 ;;  v               2   13[COMRAM] unsigned int 
 31057 ;;  c               1   15[COMRAM] unsigned char 
 31058 ;; Return value:  Size  Location     Type
 31059 ;;                  2    7[COMRAM] PTR unsigned char 
 31060 ;; Registers used:
 31061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31062 ;; Tracked objects:
 31063 ;;		On entry : 0/0
 31064 ;;		On exit  : 0/0
 31065 ;;		Unchanged: 0/0
 31066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31067 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31068 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31070 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31071 ;;Total ram usage:        9 bytes
 31072 ;; Hardware stack levels used:    1
 31073 ;; Hardware stack levels required when called:    1
 31074 ;; This function calls:
 31075 ;;		___lwdiv
 31076 ;;		___lwmod
 31077 ;; This function is called by:
 31078 ;;		_itoa
 31079 ;; This function uses a non-reentrant model
 31080 ;;
 31081                           
 31082                           	psect	text157
 31083  005394                     __ptext157:
 31084                           	opt stack 0
 31085  005394                     _utoa:
 31086                           	opt stack 22
 31087                           
 31088                           ;incstack = 0
 31089  005394  C00A  F00E         	movff	utoa@val,utoa@v
 31090  005398  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31091  00539C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31092  0053A0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31093  0053A4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31094  0053A8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31095  0053AC  EC50  F033         	call	___lwdiv	;wreg free
 31096  0053B0  C001  F00E         	movff	?___lwdiv,utoa@v
 31097  0053B4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31098  0053B8  4A08               	infsnz	utoa@buf,f,c
 31099  0053BA  2A09               	incf	utoa@buf+1,f,c
 31100  0053BC  500E               	movf	utoa@v,w,c
 31101  0053BE  100F               	iorwf	utoa@v+1,w,c
 31102  0053C0  A4D8               	btfss	status,2,c
 31103  0053C2  D7EC               	goto	l3483
 31104  0053C4  C008  FFD9         	movff	utoa@buf,fsr2l
 31105  0053C8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31106  0053CC  0E00               	movlw	0
 31107  0053CE  6EDF               	movwf	indf2,c
 31108  0053D0  0608               	decf	utoa@buf,f,c
 31109  0053D2  A0D8               	btfss	status,0,c
 31110  0053D4  0609               	decf	utoa@buf+1,f,c
 31111  0053D6  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31112  0053DA  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31113  0053DE  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31114  0053E2  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31115  0053E6  EC25  F035         	call	___lwmod	;wreg free
 31116  0053EA  5001               	movf	?___lwmod,w,c
 31117  0053EC  6E10               	movwf	utoa@c,c
 31118  0053EE  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31119  0053F2  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31120  0053F6  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31121  0053FA  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31122  0053FE  EC50  F033         	call	___lwdiv	;wreg free
 31123  005402  C001  F00A         	movff	?___lwdiv,utoa@val
 31124  005406  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31125  00540A  0E09               	movlw	9
 31126  00540C  6410               	cpfsgt	utoa@c,c
 31127  00540E  D002               	goto	l3486
 31128  005410  0E07               	movlw	7
 31129  005412  2610               	addwf	utoa@c,f,c
 31130  005414                     l3486:
 31131  005414  0E30               	movlw	48
 31132  005416  2610               	addwf	utoa@c,f,c
 31133  005418  C008  FFD9         	movff	utoa@buf,fsr2l
 31134  00541C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31135  005420  C010  FFDF         	movff	utoa@c,indf2
 31136  005424  0608               	decf	utoa@buf,f,c
 31137  005426  A0D8               	btfss	status,0,c
 31138  005428  0609               	decf	utoa@buf+1,f,c
 31139  00542A  500A               	movf	utoa@val,w,c
 31140  00542C  100B               	iorwf	utoa@val+1,w,c
 31141  00542E  A4D8               	btfss	status,2,c
 31142  005430  D7D2               	goto	l3485
 31143                           
 31144                           ;	Return value of _utoa is never used
 31145  005432  4A08               	infsnz	utoa@buf,f,c
 31146  005434  2A09               	incf	utoa@buf+1,f,c
 31147  005436  0012               	return	
 31148  005438                     __end_of_utoa:
 31149                           	opt stack 0
 31150                           tosu	equ	0xFFF
 31151                           tosh	equ	0xFFE
 31152                           tosl	equ	0xFFD
 31153                           pclath	equ	0xFFA
 31154                           tblptru	equ	0xFF8
 31155                           tblptrh	equ	0xFF7
 31156                           tblptrl	equ	0xFF6
 31157                           tablat	equ	0xFF5
 31158                           prodh	equ	0xFF4
 31159                           prodl	equ	0xFF3
 31160                           intcon	equ	0xFF2
 31161                           intcon2	equ	0xFF1
 31162                           intcon3	equ	0xFF0
 31163                           indf0	equ	0xFEF
 31164                           postinc0	equ	0xFEE
 31165                           fsr0h	equ	0xFEA
 31166                           fsr0l	equ	0xFE9
 31167                           wreg	equ	0xFE8
 31168                           indf1	equ	0xFE7
 31169                           postdec1	equ	0xFE5
 31170                           plusw1	equ	0xFE3
 31171                           fsr1h	equ	0xFE2
 31172                           fsr1l	equ	0xFE1
 31173                           indf2	equ	0xFDF
 31174                           postinc2	equ	0xFDE
 31175                           postdec2	equ	0xFDD
 31176                           plusw2	equ	0xFDB
 31177                           fsr2h	equ	0xFDA
 31178                           fsr2l	equ	0xFD9
 31179                           status	equ	0xFD8
 31180                           
 31181 ;; *************** function ___lwmod *****************
 31182 ;; Defined at:
 31183 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31184 ;; Parameters:    Size  Location     Type
 31185 ;;  dividend        2    0[COMRAM] unsigned int 
 31186 ;;  divisor         2    2[COMRAM] unsigned int 
 31187 ;; Auto vars:     Size  Location     Type
 31188 ;;  counter         1    4[COMRAM] unsigned char 
 31189 ;; Return value:  Size  Location     Type
 31190 ;;                  2    0[COMRAM] unsigned int 
 31191 ;; Registers used:
 31192 ;;		wreg, status,2, status,0
 31193 ;; Tracked objects:
 31194 ;;		On entry : 0/0
 31195 ;;		On exit  : 0/0
 31196 ;;		Unchanged: 0/0
 31197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31201 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31202 ;;Total ram usage:        5 bytes
 31203 ;; Hardware stack levels used:    1
 31204 ;; This function calls:
 31205 ;;		Nothing
 31206 ;; This function is called by:
 31207 ;;		_utoa
 31208 ;; This function uses a non-reentrant model
 31209 ;;
 31210                           
 31211                           	psect	text158
 31212  006A4A                     __ptext158:
 31213                           	opt stack 0
 31214  006A4A                     ___lwmod:
 31215                           	opt stack 22
 31216                           
 31217                           ;incstack = 0
 31218  006A4A  5003               	movf	___lwmod@divisor,w,c
 31219  006A4C  1004               	iorwf	___lwmod@divisor+1,w,c
 31220  006A4E  B4D8               	btfsc	status,2,c
 31221  006A50  D018               	goto	l3310
 31222  006A52  0E01               	movlw	1
 31223  006A54  6E05               	movwf	___lwmod@counter,c
 31224  006A56  D004               	goto	l3305
 31225  006A58  90D8               	bcf	status,0,c
 31226  006A5A  3603               	rlcf	___lwmod@divisor,f,c
 31227  006A5C  3604               	rlcf	___lwmod@divisor+1,f,c
 31228  006A5E  2A05               	incf	___lwmod@counter,f,c
 31229  006A60                     l3305:
 31230  006A60  AE04               	btfss	___lwmod@divisor+1,7,c
 31231  006A62  D7FA               	goto	l3306
 31232  006A64                     u6700:
 31233  006A64  5003               	movf	___lwmod@divisor,w,c
 31234  006A66  5C01               	subwf	___lwmod@dividend,w,c
 31235  006A68  5004               	movf	___lwmod@divisor+1,w,c
 31236  006A6A  5802               	subwfb	___lwmod@dividend+1,w,c
 31237  006A6C  A0D8               	btfss	status,0,c
 31238  006A6E  D004               	goto	l3309
 31239  006A70  5003               	movf	___lwmod@divisor,w,c
 31240  006A72  5E01               	subwf	___lwmod@dividend,f,c
 31241  006A74  5004               	movf	___lwmod@divisor+1,w,c
 31242  006A76  5A02               	subwfb	___lwmod@dividend+1,f,c
 31243  006A78                     l3309:
 31244  006A78  90D8               	bcf	status,0,c
 31245  006A7A  3204               	rrcf	___lwmod@divisor+1,f,c
 31246  006A7C  3203               	rrcf	___lwmod@divisor,f,c
 31247  006A7E  2E05               	decfsz	___lwmod@counter,f,c
 31248  006A80  D7F1               	goto	u6700
 31249  006A82                     l3310:
 31250  006A82  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31251  006A86  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31252  006A8A  0012               	return		;funcret
 31253  006A8C                     __end_of___lwmod:
 31254                           	opt stack 0
 31255                           tosu	equ	0xFFF
 31256                           tosh	equ	0xFFE
 31257                           tosl	equ	0xFFD
 31258                           pclath	equ	0xFFA
 31259                           tblptru	equ	0xFF8
 31260                           tblptrh	equ	0xFF7
 31261                           tblptrl	equ	0xFF6
 31262                           tablat	equ	0xFF5
 31263                           prodh	equ	0xFF4
 31264                           prodl	equ	0xFF3
 31265                           intcon	equ	0xFF2
 31266                           intcon2	equ	0xFF1
 31267                           intcon3	equ	0xFF0
 31268                           indf0	equ	0xFEF
 31269                           postinc0	equ	0xFEE
 31270                           fsr0h	equ	0xFEA
 31271                           fsr0l	equ	0xFE9
 31272                           wreg	equ	0xFE8
 31273                           indf1	equ	0xFE7
 31274                           postdec1	equ	0xFE5
 31275                           plusw1	equ	0xFE3
 31276                           fsr1h	equ	0xFE2
 31277                           fsr1l	equ	0xFE1
 31278                           indf2	equ	0xFDF
 31279                           postinc2	equ	0xFDE
 31280                           postdec2	equ	0xFDD
 31281                           plusw2	equ	0xFDB
 31282                           fsr2h	equ	0xFDA
 31283                           fsr2l	equ	0xFD9
 31284                           status	equ	0xFD8
 31285                           
 31286 ;; *************** function ___lwdiv *****************
 31287 ;; Defined at:
 31288 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31289 ;; Parameters:    Size  Location     Type
 31290 ;;  dividend        2    0[COMRAM] unsigned int 
 31291 ;;  divisor         2    2[COMRAM] unsigned int 
 31292 ;; Auto vars:     Size  Location     Type
 31293 ;;  quotient        2    4[COMRAM] unsigned int 
 31294 ;;  counter         1    6[COMRAM] unsigned char 
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  2    0[COMRAM] unsigned int 
 31297 ;; Registers used:
 31298 ;;		wreg, status,2, status,0
 31299 ;; Tracked objects:
 31300 ;;		On entry : 0/0
 31301 ;;		On exit  : 0/0
 31302 ;;		Unchanged: 0/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31304 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31305 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31307 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31308 ;;Total ram usage:        7 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; This function calls:
 31311 ;;		Nothing
 31312 ;; This function is called by:
 31313 ;;		_utoa
 31314 ;; This function uses a non-reentrant model
 31315 ;;
 31316                           
 31317                           	psect	text159
 31318  0066A0                     __ptext159:
 31319                           	opt stack 0
 31320  0066A0                     ___lwdiv:
 31321                           	opt stack 22
 31322                           
 31323                           ;incstack = 0
 31324  0066A0  0E00               	movlw	0
 31325  0066A2  6E06               	movwf	___lwdiv@quotient+1,c
 31326  0066A4  0E00               	movlw	0
 31327  0066A6  6E05               	movwf	___lwdiv@quotient,c
 31328  0066A8  5003               	movf	___lwdiv@divisor,w,c
 31329  0066AA  1004               	iorwf	___lwdiv@divisor+1,w,c
 31330  0066AC  B4D8               	btfsc	status,2,c
 31331  0066AE  D01C               	goto	l3300
 31332  0066B0  0E01               	movlw	1
 31333  0066B2  6E07               	movwf	___lwdiv@counter,c
 31334  0066B4  D004               	goto	l3295
 31335  0066B6  90D8               	bcf	status,0,c
 31336  0066B8  3603               	rlcf	___lwdiv@divisor,f,c
 31337  0066BA  3604               	rlcf	___lwdiv@divisor+1,f,c
 31338  0066BC  2A07               	incf	___lwdiv@counter,f,c
 31339  0066BE                     l3295:
 31340  0066BE  AE04               	btfss	___lwdiv@divisor+1,7,c
 31341  0066C0  D7FA               	goto	l3296
 31342  0066C2                     u6670:
 31343  0066C2  90D8               	bcf	status,0,c
 31344  0066C4  3605               	rlcf	___lwdiv@quotient,f,c
 31345  0066C6  3606               	rlcf	___lwdiv@quotient+1,f,c
 31346  0066C8  5003               	movf	___lwdiv@divisor,w,c
 31347  0066CA  5C01               	subwf	___lwdiv@dividend,w,c
 31348  0066CC  5004               	movf	___lwdiv@divisor+1,w,c
 31349  0066CE  5802               	subwfb	___lwdiv@dividend+1,w,c
 31350  0066D0  A0D8               	btfss	status,0,c
 31351  0066D2  D005               	goto	l3299
 31352  0066D4  5003               	movf	___lwdiv@divisor,w,c
 31353  0066D6  5E01               	subwf	___lwdiv@dividend,f,c
 31354  0066D8  5004               	movf	___lwdiv@divisor+1,w,c
 31355  0066DA  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31356  0066DC  8005               	bsf	___lwdiv@quotient,0,c
 31357  0066DE                     l3299:
 31358  0066DE  90D8               	bcf	status,0,c
 31359  0066E0  3204               	rrcf	___lwdiv@divisor+1,f,c
 31360  0066E2  3203               	rrcf	___lwdiv@divisor,f,c
 31361  0066E4  2E07               	decfsz	___lwdiv@counter,f,c
 31362  0066E6  D7ED               	goto	u6670
 31363  0066E8                     l3300:
 31364  0066E8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31365  0066EC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31366  0066F0  0012               	return		;funcret
 31367  0066F2                     __end_of___lwdiv:
 31368                           	opt stack 0
 31369                           tosu	equ	0xFFF
 31370                           tosh	equ	0xFFE
 31371                           tosl	equ	0xFFD
 31372                           pclath	equ	0xFFA
 31373                           tblptru	equ	0xFF8
 31374                           tblptrh	equ	0xFF7
 31375                           tblptrl	equ	0xFF6
 31376                           tablat	equ	0xFF5
 31377                           prodh	equ	0xFF4
 31378                           prodl	equ	0xFF3
 31379                           intcon	equ	0xFF2
 31380                           intcon2	equ	0xFF1
 31381                           intcon3	equ	0xFF0
 31382                           indf0	equ	0xFEF
 31383                           postinc0	equ	0xFEE
 31384                           fsr0h	equ	0xFEA
 31385                           fsr0l	equ	0xFE9
 31386                           wreg	equ	0xFE8
 31387                           indf1	equ	0xFE7
 31388                           postdec1	equ	0xFE5
 31389                           plusw1	equ	0xFE3
 31390                           fsr1h	equ	0xFE2
 31391                           fsr1l	equ	0xFE1
 31392                           indf2	equ	0xFDF
 31393                           postinc2	equ	0xFDE
 31394                           postdec2	equ	0xFDD
 31395                           plusw2	equ	0xFDB
 31396                           fsr2h	equ	0xFDA
 31397                           fsr2l	equ	0xFD9
 31398                           status	equ	0xFD8
 31399                           
 31400 ;; *************** function _i2c_eeprom_writeByte *****************
 31401 ;; Defined at:
 31402 ;;		line 187 in file "i2c.c"
 31403 ;; Parameters:    Size  Location     Type
 31404 ;;  address         2   10[COMRAM] unsigned int 
 31405 ;;  data            1   12[COMRAM] unsigned char 
 31406 ;; Auto vars:     Size  Location     Type
 31407 ;;  dat             2   16[COMRAM] unsigned char [2]
 31408 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31409 ;; Return value:  Size  Location     Type
 31410 ;;                  1    wreg      void 
 31411 ;; Registers used:
 31412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31413 ;; Tracked objects:
 31414 ;;		On entry : 0/0
 31415 ;;		On exit  : 0/0
 31416 ;;		Unchanged: 0/0
 31417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31418 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31419 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31420 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31421 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;Total ram usage:        9 bytes
 31423 ;; Hardware stack levels used:    1
 31424 ;; Hardware stack levels required when called:    2
 31425 ;; This function calls:
 31426 ;;		__i2c_eeprom_busy
 31427 ;;		__i2c_write
 31428 ;; This function is called by:
 31429 ;;		__normal_mode
 31430 ;;		__ui_encoder
 31431 ;;		__parse_command_short
 31432 ;; This function uses a non-reentrant model
 31433 ;;
 31434                           
 31435                           	psect	text160
 31436  006982                     __ptext160:
 31437                           	opt stack 0
 31438  006982                     _i2c_eeprom_writeByte:
 31439                           	opt stack 26
 31440                           
 31441                           ;i2c.c: 189: uint8_t slave_address;;i2c.c: 190: uint8_t dat[2];;i2c.c: 193: while(_i2c_e
      +                          eprom_busy());
 31442                           
 31443                           ;incstack = 0
 31444  006982  EC88  F037         	call	__i2c_eeprom_busy	;wreg free
 31445  006986  0900               	iorlw	0
 31446  006988  A4D8               	btfss	status,2,c
 31447  00698A  D7FB               	goto	_i2c_eeprom_writeByte
 31448                           
 31449                           ;i2c.c: 195: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 31450  00698C  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31451  006990  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31452  006994  0E07               	movlw	7
 31453  006996  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31454  006998                     u9705:
 31455  006998  90D8               	bcf	status,0,c
 31456  00699A  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31457  00699C  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31458  00699E  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31459  0069A0  D7FB               	goto	u9705
 31460  0069A2  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31461  0069A4  0B0E               	andlw	14
 31462  0069A6  09A0               	iorlw	160
 31463  0069A8  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31464                           
 31465                           ;i2c.c: 196: dat[0] = address & 0xFF;
 31466  0069AA  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31467                           
 31468                           ;i2c.c: 197: dat[1] = data;
 31469  0069AE  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31470                           
 31471                           ;i2c.c: 199: _i2c_write(slave_address, &dat[0], 2);
 31472  0069B2  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31473  0069B4  6E06               	movwf	__i2c_write@data,c
 31474  0069B6  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31475  0069B8  6E07               	movwf	__i2c_write@data+1,c
 31476  0069BA  0E02               	movlw	2
 31477  0069BC  6E08               	movwf	__i2c_write@length,c
 31478  0069BE  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31479  0069C0  EC36  F034         	call	__i2c_write
 31480  0069C4  0012               	return		;funcret
 31481  0069C6                     __end_of_i2c_eeprom_writeByte:
 31482                           	opt stack 0
 31483                           tosu	equ	0xFFF
 31484                           tosh	equ	0xFFE
 31485                           tosl	equ	0xFFD
 31486                           pclath	equ	0xFFA
 31487                           tblptru	equ	0xFF8
 31488                           tblptrh	equ	0xFF7
 31489                           tblptrl	equ	0xFF6
 31490                           tablat	equ	0xFF5
 31491                           prodh	equ	0xFF4
 31492                           prodl	equ	0xFF3
 31493                           intcon	equ	0xFF2
 31494                           intcon2	equ	0xFF1
 31495                           intcon3	equ	0xFF0
 31496                           indf0	equ	0xFEF
 31497                           postinc0	equ	0xFEE
 31498                           fsr0h	equ	0xFEA
 31499                           fsr0l	equ	0xFE9
 31500                           wreg	equ	0xFE8
 31501                           indf1	equ	0xFE7
 31502                           postdec1	equ	0xFE5
 31503                           plusw1	equ	0xFE3
 31504                           fsr1h	equ	0xFE2
 31505                           fsr1l	equ	0xFE1
 31506                           indf2	equ	0xFDF
 31507                           postinc2	equ	0xFDE
 31508                           postdec2	equ	0xFDD
 31509                           plusw2	equ	0xFDB
 31510                           fsr2h	equ	0xFDA
 31511                           fsr2l	equ	0xFD9
 31512                           status	equ	0xFD8
 31513                           
 31514 ;; *************** function __i2c_write *****************
 31515 ;; Defined at:
 31516 ;;		line 83 in file "i2c.c"
 31517 ;; Parameters:    Size  Location     Type
 31518 ;;  slave_addres    1    wreg     unsigned char 
 31519 ;;  data            2    5[COMRAM] PTR unsigned char 
 31520 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 31521 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 31522 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 31523 ;;  length          1    7[COMRAM] unsigned char 
 31524 ;; Auto vars:     Size  Location     Type
 31525 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31526 ;;  cntr            1    9[COMRAM] unsigned char 
 31527 ;; Return value:  Size  Location     Type
 31528 ;;                  1    wreg      void 
 31529 ;; Registers used:
 31530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31531 ;; Tracked objects:
 31532 ;;		On entry : 0/0
 31533 ;;		On exit  : 0/0
 31534 ;;		Unchanged: 0/0
 31535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31539 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31540 ;;Total ram usage:        5 bytes
 31541 ;; Hardware stack levels used:    1
 31542 ;; Hardware stack levels required when called:    1
 31543 ;; This function calls:
 31544 ;;		__i2c_send
 31545 ;;		__i2c_start
 31546 ;;		__i2c_stop
 31547 ;;		__i2c_wait_idle
 31548 ;; This function is called by:
 31549 ;;		_i2c_eeprom_writeByte
 31550 ;;		_i2c_eeprom_readByte
 31551 ;;		_i2c_display_init
 31552 ;;		__ic2_display_set_ddram_address
 31553 ;;		_i2c_adc_start
 31554 ;;		_i2c_eeprom_write
 31555 ;;		_i2c_eeprom_read
 31556 ;;		__i2c_display_send_init_sequence
 31557 ;;		__ic2_display_set_cgram_address
 31558 ;;		_i2c_display_program_custom_character
 31559 ;; This function uses a non-reentrant model
 31560 ;;
 31561                           
 31562                           	psect	text161
 31563  00686C                     __ptext161:
 31564                           	opt stack 0
 31565  00686C                     __i2c_write:
 31566                           	opt stack 27
 31567                           
 31568                           ;incstack = 0
 31569                           ;__i2c_write@slave_address stored from wreg
 31570  00686C  6E09               	movwf	__i2c_write@slave_address,c
 31571                           
 31572                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 31573  00686E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31574                           
 31575                           ;i2c.c: 88: _i2c_start();
 31576  006872  EC0E  F039         	call	__i2c_start	;wreg free
 31577                           
 31578                           ;i2c.c: 89: _i2c_wait_idle();
 31579  006876  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31580                           
 31581                           ;i2c.c: 90: _i2c_send(slave_address);
 31582  00687A  5009               	movf	__i2c_write@slave_address,w,c
 31583  00687C  EC12  F039         	call	__i2c_send
 31584                           
 31585                           ;i2c.c: 91: _i2c_wait_idle();
 31586  006880  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31587                           
 31588                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 31589  006884  0E00               	movlw	0
 31590  006886  6E0A               	movwf	__i2c_write@cntr,c
 31591  006888  D00E               	goto	l1140
 31592  00688A                     
 31593                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 31594  00688A  500A               	movf	__i2c_write@cntr,w,c
 31595  00688C  0D01               	mullw	1
 31596  00688E  50F3               	movf	prodl,w,c
 31597  006890  2406               	addwf	__i2c_write@data,w,c
 31598  006892  6ED9               	movwf	fsr2l,c
 31599  006894  50F4               	movf	prodh,w,c
 31600  006896  2007               	addwfc	__i2c_write@data+1,w,c
 31601  006898  6EDA               	movwf	fsr2h,c
 31602  00689A  50DF               	movf	indf2,w,c
 31603  00689C  EC12  F039         	call	__i2c_send
 31604                           
 31605                           ;i2c.c: 96: _i2c_wait_idle();
 31606  0068A0  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31607  0068A4  2A0A               	incf	__i2c_write@cntr,f,c
 31608  0068A6                     l1140:
 31609  0068A6  5008               	movf	__i2c_write@length,w,c
 31610  0068A8  5C0A               	subwf	__i2c_write@cntr,w,c
 31611  0068AA  A0D8               	btfss	status,0,c
 31612  0068AC  D7EE               	goto	l1141
 31613                           
 31614                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 31615  0068AE  EC0A  F039         	call	__i2c_stop	;wreg free
 31616  0068B2  0012               	return		;funcret
 31617  0068B4                     __end_of__i2c_write:
 31618                           	opt stack 0
 31619                           tosu	equ	0xFFF
 31620                           tosh	equ	0xFFE
 31621                           tosl	equ	0xFFD
 31622                           pclath	equ	0xFFA
 31623                           tblptru	equ	0xFF8
 31624                           tblptrh	equ	0xFF7
 31625                           tblptrl	equ	0xFF6
 31626                           tablat	equ	0xFF5
 31627                           prodh	equ	0xFF4
 31628                           prodl	equ	0xFF3
 31629                           intcon	equ	0xFF2
 31630                           intcon2	equ	0xFF1
 31631                           intcon3	equ	0xFF0
 31632                           indf0	equ	0xFEF
 31633                           postinc0	equ	0xFEE
 31634                           fsr0h	equ	0xFEA
 31635                           fsr0l	equ	0xFE9
 31636                           wreg	equ	0xFE8
 31637                           indf1	equ	0xFE7
 31638                           postdec1	equ	0xFE5
 31639                           plusw1	equ	0xFE3
 31640                           fsr1h	equ	0xFE2
 31641                           fsr1l	equ	0xFE1
 31642                           indf2	equ	0xFDF
 31643                           postinc2	equ	0xFDE
 31644                           postdec2	equ	0xFDD
 31645                           plusw2	equ	0xFDB
 31646                           fsr2h	equ	0xFDA
 31647                           fsr2l	equ	0xFD9
 31648                           status	equ	0xFD8
 31649                           
 31650 ;; *************** function __i2c_eeprom_busy *****************
 31651 ;; Defined at:
 31652 ;;		line 168 in file "i2c.c"
 31653 ;; Parameters:    Size  Location     Type
 31654 ;;		None
 31655 ;; Auto vars:     Size  Location     Type
 31656 ;;  busy            1    5[COMRAM] unsigned char 
 31657 ;; Return value:  Size  Location     Type
 31658 ;;                  1    wreg      unsigned char 
 31659 ;; Registers used:
 31660 ;;		wreg, status,2, status,0, cstack
 31661 ;; Tracked objects:
 31662 ;;		On entry : 0/0
 31663 ;;		On exit  : 0/0
 31664 ;;		Unchanged: 0/0
 31665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31670 ;;Total ram usage:        1 bytes
 31671 ;; Hardware stack levels used:    1
 31672 ;; Hardware stack levels required when called:    1
 31673 ;; This function calls:
 31674 ;;		__i2c_send
 31675 ;;		__i2c_start
 31676 ;;		__i2c_stop
 31677 ;;		__i2c_wait_idle
 31678 ;; This function is called by:
 31679 ;;		_i2c_eeprom_writeByte
 31680 ;;		_i2c_eeprom_readByte
 31681 ;;		_i2c_eeprom_write
 31682 ;;		_i2c_eeprom_read
 31683 ;; This function uses a non-reentrant model
 31684 ;;
 31685                           
 31686                           	psect	text162
 31687  006F10                     __ptext162:
 31688                           	opt stack 0
 31689  006F10                     __i2c_eeprom_busy:
 31690                           	opt stack 26
 31691                           
 31692                           ;i2c.c: 170: uint8_t busy;;i2c.c: 171: _i2c_wait_idle();
 31693                           
 31694                           ;incstack = 0
 31695  006F10  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31696                           
 31697                           ;i2c.c: 172: _i2c_start();
 31698  006F14  EC0E  F039         	call	__i2c_start	;wreg free
 31699                           
 31700                           ;i2c.c: 173: _i2c_wait_idle();
 31701  006F18  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31702                           
 31703                           ;i2c.c: 174: _i2c_send(0b10100000);
 31704  006F1C  0EA0               	movlw	160
 31705  006F1E  EC12  F039         	call	__i2c_send
 31706                           
 31707                           ;i2c.c: 175: _i2c_wait_idle();
 31708  006F22  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31709                           
 31710                           ;i2c.c: 179: busy = SSP1CON2bits.ACKSTAT;
 31711  006F26  0E00               	movlw	0
 31712  006F28  BCC5               	btfsc	4037,6,c	;volatile
 31713  006F2A  0E01               	movlw	1
 31714  006F2C  6E06               	movwf	__i2c_eeprom_busy@busy,c
 31715                           
 31716                           ;i2c.c: 180: _i2c_stop();
 31717  006F2E  EC0A  F039         	call	__i2c_stop	;wreg free
 31718                           
 31719                           ;i2c.c: 182: return 0;
 31720  006F32  0E00               	movlw	0
 31721  006F34  0012               	return	
 31722  006F36                     __end_of__i2c_eeprom_busy:
 31723                           	opt stack 0
 31724                           tosu	equ	0xFFF
 31725                           tosh	equ	0xFFE
 31726                           tosl	equ	0xFFD
 31727                           pclath	equ	0xFFA
 31728                           tblptru	equ	0xFF8
 31729                           tblptrh	equ	0xFF7
 31730                           tblptrl	equ	0xFF6
 31731                           tablat	equ	0xFF5
 31732                           prodh	equ	0xFF4
 31733                           prodl	equ	0xFF3
 31734                           intcon	equ	0xFF2
 31735                           intcon2	equ	0xFF1
 31736                           intcon3	equ	0xFF0
 31737                           indf0	equ	0xFEF
 31738                           postinc0	equ	0xFEE
 31739                           fsr0h	equ	0xFEA
 31740                           fsr0l	equ	0xFE9
 31741                           wreg	equ	0xFE8
 31742                           indf1	equ	0xFE7
 31743                           postdec1	equ	0xFE5
 31744                           plusw1	equ	0xFE3
 31745                           fsr1h	equ	0xFE2
 31746                           fsr1l	equ	0xFE1
 31747                           indf2	equ	0xFDF
 31748                           postinc2	equ	0xFDE
 31749                           postdec2	equ	0xFDD
 31750                           plusw2	equ	0xFDB
 31751                           fsr2h	equ	0xFDA
 31752                           fsr2l	equ	0xFD9
 31753                           status	equ	0xFD8
 31754                           
 31755 ;; *************** function __i2c_wait_idle *****************
 31756 ;; Defined at:
 31757 ;;		line 39 in file "i2c.c"
 31758 ;; Parameters:    Size  Location     Type
 31759 ;;		None
 31760 ;; Auto vars:     Size  Location     Type
 31761 ;;		None
 31762 ;; Return value:  Size  Location     Type
 31763 ;;                  1    wreg      void 
 31764 ;; Registers used:
 31765 ;;		wreg, status,2, status,0
 31766 ;; Tracked objects:
 31767 ;;		On entry : 0/0
 31768 ;;		On exit  : 0/0
 31769 ;;		Unchanged: 0/0
 31770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31773 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31774 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31775 ;;Total ram usage:        5 bytes
 31776 ;; Hardware stack levels used:    1
 31777 ;; This function calls:
 31778 ;;		Nothing
 31779 ;; This function is called by:
 31780 ;;		__i2c_write
 31781 ;;		__i2c_read
 31782 ;;		__i2c_eeprom_busy
 31783 ;;		_i2c_display_write_fixed
 31784 ;;		_i2c_adc_read
 31785 ;;		_i2c_display_write
 31786 ;; This function uses a non-reentrant model
 31787 ;;
 31788                           
 31789                           	psect	text163
 31790  006342                     __ptext163:
 31791                           	opt stack 0
 31792  006342                     __i2c_wait_idle:
 31793                           	opt stack 27
 31794                           
 31795                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31796                           
 31797                           ;incstack = 0
 31798  006342  A4C7               	btfss	4039,2,c	;volatile
 31799  006344  D003               	goto	u6770
 31800  006346  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31801  006348  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31802  00634A  D001               	goto	u6778
 31803  00634C                     u6770:
 31804  00634C  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31805  00634E                     u6778:
 31806  00634E  A0C5               	btfss	4037,0,c	;volatile
 31807  006350  D003               	goto	u6780
 31808  006352  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31809  006354  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31810  006356  D001               	goto	u6788
 31811  006358                     u6780:
 31812  006358  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31813  00635A                     u6788:
 31814  00635A  A2C5               	btfss	4037,1,c	;volatile
 31815  00635C  D003               	goto	u6790
 31816  00635E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31817  006360  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31818  006362  D001               	goto	u6798
 31819  006364                     u6790:
 31820  006364  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31821  006366                     u6798:
 31822  006366  A4C5               	btfss	4037,2,c	;volatile
 31823  006368  D003               	goto	u6800
 31824  00636A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31825  00636C  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31826  00636E  D001               	goto	u6808
 31827  006370                     u6800:
 31828  006370  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31829  006372                     u6808:
 31830  006372  A6C5               	btfss	4037,3,c	;volatile
 31831  006374  D003               	goto	u6810
 31832  006376  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31833  006378  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31834  00637A  D001               	goto	u6818
 31835  00637C                     u6810:
 31836  00637C  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31837  00637E                     u6818:
 31838  00637E  A8C5               	btfss	4037,4,c	;volatile
 31839  006380  D002               	goto	u6820
 31840  006382  0E01               	movlw	1
 31841  006384  D001               	goto	u6826
 31842  006386                     u6820:
 31843  006386  0E00               	movlw	0
 31844  006388                     u6826:
 31845  006388  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31846  00638A  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31847  00638C  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31848  00638E  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31849  006390  1001               	iorwf	??__i2c_wait_idle,w,c
 31850  006392  0900               	iorlw	0
 31851  006394  B4D8               	btfsc	status,2,c
 31852  006396  0012               	return	
 31853  006398  D7D4               	goto	__i2c_wait_idle
 31854  00639A                     __end_of__i2c_wait_idle:
 31855                           	opt stack 0
 31856                           tosu	equ	0xFFF
 31857                           tosh	equ	0xFFE
 31858                           tosl	equ	0xFFD
 31859                           pclath	equ	0xFFA
 31860                           tblptru	equ	0xFF8
 31861                           tblptrh	equ	0xFF7
 31862                           tblptrl	equ	0xFF6
 31863                           tablat	equ	0xFF5
 31864                           prodh	equ	0xFF4
 31865                           prodl	equ	0xFF3
 31866                           intcon	equ	0xFF2
 31867                           intcon2	equ	0xFF1
 31868                           intcon3	equ	0xFF0
 31869                           indf0	equ	0xFEF
 31870                           postinc0	equ	0xFEE
 31871                           fsr0h	equ	0xFEA
 31872                           fsr0l	equ	0xFE9
 31873                           wreg	equ	0xFE8
 31874                           indf1	equ	0xFE7
 31875                           postdec1	equ	0xFE5
 31876                           plusw1	equ	0xFE3
 31877                           fsr1h	equ	0xFE2
 31878                           fsr1l	equ	0xFE1
 31879                           indf2	equ	0xFDF
 31880                           postinc2	equ	0xFDE
 31881                           postdec2	equ	0xFDD
 31882                           plusw2	equ	0xFDB
 31883                           fsr2h	equ	0xFDA
 31884                           fsr2l	equ	0xFD9
 31885                           status	equ	0xFD8
 31886                           
 31887 ;; *************** function __i2c_stop *****************
 31888 ;; Defined at:
 31889 ;;		line 62 in file "i2c.c"
 31890 ;; Parameters:    Size  Location     Type
 31891 ;;		None
 31892 ;; Auto vars:     Size  Location     Type
 31893 ;;		None
 31894 ;; Return value:  Size  Location     Type
 31895 ;;                  1    wreg      void 
 31896 ;; Registers used:
 31897 ;;		None
 31898 ;; Tracked objects:
 31899 ;;		On entry : 0/0
 31900 ;;		On exit  : 0/0
 31901 ;;		Unchanged: 0/0
 31902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31907 ;;Total ram usage:        0 bytes
 31908 ;; Hardware stack levels used:    1
 31909 ;; This function calls:
 31910 ;;		Nothing
 31911 ;; This function is called by:
 31912 ;;		__i2c_write
 31913 ;;		__i2c_read
 31914 ;;		__i2c_eeprom_busy
 31915 ;;		_i2c_display_write_fixed
 31916 ;;		_i2c_adc_read
 31917 ;;		_i2c_display_write
 31918 ;; This function uses a non-reentrant model
 31919 ;;
 31920                           
 31921                           	psect	text164
 31922  007214                     __ptext164:
 31923                           	opt stack 0
 31924  007214                     __i2c_stop:
 31925                           	opt stack 27
 31926                           
 31927                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 31928                           
 31929                           ;incstack = 0
 31930  007214  84C5               	bsf	4037,2,c	;volatile
 31931  007216  A4C5               	btfss	4037,2,c	;volatile
 31932  007218  0012               	return	
 31933  00721A  D7FD               	goto	l1123
 31934  00721C                     __end_of__i2c_stop:
 31935                           	opt stack 0
 31936                           tosu	equ	0xFFF
 31937                           tosh	equ	0xFFE
 31938                           tosl	equ	0xFFD
 31939                           pclath	equ	0xFFA
 31940                           tblptru	equ	0xFF8
 31941                           tblptrh	equ	0xFF7
 31942                           tblptrl	equ	0xFF6
 31943                           tablat	equ	0xFF5
 31944                           prodh	equ	0xFF4
 31945                           prodl	equ	0xFF3
 31946                           intcon	equ	0xFF2
 31947                           intcon2	equ	0xFF1
 31948                           intcon3	equ	0xFF0
 31949                           indf0	equ	0xFEF
 31950                           postinc0	equ	0xFEE
 31951                           fsr0h	equ	0xFEA
 31952                           fsr0l	equ	0xFE9
 31953                           wreg	equ	0xFE8
 31954                           indf1	equ	0xFE7
 31955                           postdec1	equ	0xFE5
 31956                           plusw1	equ	0xFE3
 31957                           fsr1h	equ	0xFE2
 31958                           fsr1l	equ	0xFE1
 31959                           indf2	equ	0xFDF
 31960                           postinc2	equ	0xFDE
 31961                           postdec2	equ	0xFDD
 31962                           plusw2	equ	0xFDB
 31963                           fsr2h	equ	0xFDA
 31964                           fsr2l	equ	0xFD9
 31965                           status	equ	0xFD8
 31966                           
 31967 ;; *************** function __i2c_start *****************
 31968 ;; Defined at:
 31969 ;;		line 44 in file "i2c.c"
 31970 ;; Parameters:    Size  Location     Type
 31971 ;;		None
 31972 ;; Auto vars:     Size  Location     Type
 31973 ;;		None
 31974 ;; Return value:  Size  Location     Type
 31975 ;;                  1    wreg      void 
 31976 ;; Registers used:
 31977 ;;		None
 31978 ;; Tracked objects:
 31979 ;;		On entry : 0/0
 31980 ;;		On exit  : 0/0
 31981 ;;		Unchanged: 0/0
 31982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31987 ;;Total ram usage:        0 bytes
 31988 ;; Hardware stack levels used:    1
 31989 ;; This function calls:
 31990 ;;		Nothing
 31991 ;; This function is called by:
 31992 ;;		__i2c_write
 31993 ;;		__i2c_read
 31994 ;;		__i2c_eeprom_busy
 31995 ;;		_i2c_display_write_fixed
 31996 ;;		_i2c_adc_read
 31997 ;;		_i2c_display_write
 31998 ;; This function uses a non-reentrant model
 31999 ;;
 32000                           
 32001                           	psect	text165
 32002  00721C                     __ptext165:
 32003                           	opt stack 0
 32004  00721C                     __i2c_start:
 32005                           	opt stack 27
 32006                           
 32007                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 32008                           
 32009                           ;incstack = 0
 32010  00721C  80C5               	bsf	4037,0,c	;volatile
 32011  00721E  A0C5               	btfss	4037,0,c	;volatile
 32012  007220  0012               	return	
 32013  007222  D7FD               	goto	l1108
 32014  007224                     __end_of__i2c_start:
 32015                           	opt stack 0
 32016                           tosu	equ	0xFFF
 32017                           tosh	equ	0xFFE
 32018                           tosl	equ	0xFFD
 32019                           pclath	equ	0xFFA
 32020                           tblptru	equ	0xFF8
 32021                           tblptrh	equ	0xFF7
 32022                           tblptrl	equ	0xFF6
 32023                           tablat	equ	0xFF5
 32024                           prodh	equ	0xFF4
 32025                           prodl	equ	0xFF3
 32026                           intcon	equ	0xFF2
 32027                           intcon2	equ	0xFF1
 32028                           intcon3	equ	0xFF0
 32029                           indf0	equ	0xFEF
 32030                           postinc0	equ	0xFEE
 32031                           fsr0h	equ	0xFEA
 32032                           fsr0l	equ	0xFE9
 32033                           wreg	equ	0xFE8
 32034                           indf1	equ	0xFE7
 32035                           postdec1	equ	0xFE5
 32036                           plusw1	equ	0xFE3
 32037                           fsr1h	equ	0xFE2
 32038                           fsr1l	equ	0xFE1
 32039                           indf2	equ	0xFDF
 32040                           postinc2	equ	0xFDE
 32041                           postdec2	equ	0xFDD
 32042                           plusw2	equ	0xFDB
 32043                           fsr2h	equ	0xFDA
 32044                           fsr2l	equ	0xFD9
 32045                           status	equ	0xFD8
 32046                           
 32047 ;; *************** function __i2c_send *****************
 32048 ;; Defined at:
 32049 ;;		line 50 in file "i2c.c"
 32050 ;; Parameters:    Size  Location     Type
 32051 ;;  dat             1    wreg     unsigned char 
 32052 ;; Auto vars:     Size  Location     Type
 32053 ;;  dat             1    0[COMRAM] unsigned char 
 32054 ;; Return value:  Size  Location     Type
 32055 ;;                  1    wreg      void 
 32056 ;; Registers used:
 32057 ;;		wreg
 32058 ;; Tracked objects:
 32059 ;;		On entry : 0/0
 32060 ;;		On exit  : 0/0
 32061 ;;		Unchanged: 0/0
 32062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32067 ;;Total ram usage:        1 bytes
 32068 ;; Hardware stack levels used:    1
 32069 ;; This function calls:
 32070 ;;		Nothing
 32071 ;; This function is called by:
 32072 ;;		__i2c_write
 32073 ;;		__i2c_read
 32074 ;;		__i2c_eeprom_busy
 32075 ;;		_i2c_display_write_fixed
 32076 ;;		_i2c_adc_read
 32077 ;;		_i2c_display_write
 32078 ;; This function uses a non-reentrant model
 32079 ;;
 32080                           
 32081                           	psect	text166
 32082  007224                     __ptext166:
 32083                           	opt stack 0
 32084  007224                     __i2c_send:
 32085                           	opt stack 27
 32086                           
 32087                           ;incstack = 0
 32088                           ;__i2c_send@dat stored from wreg
 32089  007224  6E01               	movwf	__i2c_send@dat,c
 32090                           
 32091                           ;i2c.c: 52: SSP1BUF = dat;
 32092  007226  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32093  00722A  0012               	return		;funcret
 32094  00722C                     __end_of__i2c_send:
 32095                           	opt stack 0
 32096                           tosu	equ	0xFFF
 32097                           tosh	equ	0xFFE
 32098                           tosl	equ	0xFFD
 32099                           pclath	equ	0xFFA
 32100                           tblptru	equ	0xFF8
 32101                           tblptrh	equ	0xFF7
 32102                           tblptrl	equ	0xFF6
 32103                           tablat	equ	0xFF5
 32104                           prodh	equ	0xFF4
 32105                           prodl	equ	0xFF3
 32106                           intcon	equ	0xFF2
 32107                           intcon2	equ	0xFF1
 32108                           intcon3	equ	0xFF0
 32109                           indf0	equ	0xFEF
 32110                           postinc0	equ	0xFEE
 32111                           fsr0h	equ	0xFEA
 32112                           fsr0l	equ	0xFE9
 32113                           wreg	equ	0xFE8
 32114                           indf1	equ	0xFE7
 32115                           postdec1	equ	0xFE5
 32116                           plusw1	equ	0xFE3
 32117                           fsr1h	equ	0xFE2
 32118                           fsr1l	equ	0xFE1
 32119                           indf2	equ	0xFDF
 32120                           postinc2	equ	0xFDE
 32121                           postdec2	equ	0xFDD
 32122                           plusw2	equ	0xFDB
 32123                           fsr2h	equ	0xFDA
 32124                           fsr2l	equ	0xFD9
 32125                           status	equ	0xFD8
 32126                           
 32127 ;; *************** function __parse_command_long *****************
 32128 ;; Defined at:
 32129 ;;		line 335 in file "api.c"
 32130 ;; Parameters:    Size  Location     Type
 32131 ;;  data            2   46[COMRAM] PTR unsigned char 
 32132 ;;		 -> ReceivedDataBuffer(64), 
 32133 ;;  out_buffer      2   48[COMRAM] PTR unsigned char 
 32134 ;;		 -> ToSendDataBuffer(64), 
 32135 ;;  out_idx_ptr     2   50[COMRAM] PTR unsigned char 
 32136 ;;		 -> api_parse@out_idx(1), 
 32137 ;; Auto vars:     Size  Location     Type
 32138 ;;  length          1   52[COMRAM] unsigned char 
 32139 ;; Return value:  Size  Location     Type
 32140 ;;                  1    wreg      unsigned char 
 32141 ;; Registers used:
 32142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32143 ;; Tracked objects:
 32144 ;;		On entry : 0/0
 32145 ;;		On exit  : 0/0
 32146 ;;		Unchanged: 0/0
 32147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32148 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32152 ;;Total ram usage:        7 bytes
 32153 ;; Hardware stack levels used:    1
 32154 ;; Hardware stack levels required when called:    7
 32155 ;; This function calls:
 32156 ;;		__parse_format_drive
 32157 ;; This function is called by:
 32158 ;;		_api_parse
 32159 ;; This function uses a non-reentrant model
 32160 ;;
 32161                           
 32162                           	psect	text167
 32163  006B3E                     __ptext167:
 32164                           	opt stack 0
 32165  006B3E                     __parse_command_long:
 32166                           	opt stack 21
 32167                           
 32168                           ;api.c: 337: uint8_t length = 65;
 32169                           
 32170                           ;incstack = 0
 32171  006B3E  0E41               	movlw	65
 32172  006B40  6E35               	movwf	__parse_command_long@length,c
 32173                           
 32174                           ;api.c: 339: switch(data[0])
 32175  006B42  D010               	goto	l2710
 32176  006B44                     
 32177                           ;api.c: 342: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 32178  006B44  C02F  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32179  006B48  C030  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32180  006B4C  C031  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 32181  006B50  C032  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 32182  006B54  C033  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 32183  006B58  C034  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 32184  006B5C  ECD0  F028         	call	__parse_format_drive	;wreg free
 32185  006B60  6E35               	movwf	__parse_command_long@length,c
 32186                           
 32187                           ;api.c: 344: }
 32188                           
 32189                           ;api.c: 343: break;
 32190  006B62  D008               	goto	l2712
 32191  006B64                     l2710:
 32192  006B64  C02F  FFD9         	movff	__parse_command_long@data,fsr2l
 32193  006B68  C030  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32194  006B6C  50DF               	movf	indf2,w,c
 32195                           
 32196                           ; Switch size 1, requested type "space"
 32197                           ; Number of cases is 1, Range of values is 86 to 86
 32198                           ; switch strategies available:
 32199                           ; Name         Instructions Cycles
 32200                           ; simple_byte            4     3 (average)
 32201                           ;	Chosen strategy is simple_byte
 32202  006B6E  0A56               	xorlw	86	; case 86
 32203  006B70  B4D8               	btfsc	status,2,c
 32204  006B72  D7E8               	goto	l2711
 32205  006B74                     l2712:
 32206                           
 32207                           ;api.c: 346: return length;
 32208  006B74  5035               	movf	__parse_command_long@length,w,c
 32209  006B76  0012               	return	
 32210  006B78                     __end_of__parse_command_long:
 32211                           	opt stack 0
 32212                           tosu	equ	0xFFF
 32213                           tosh	equ	0xFFE
 32214                           tosl	equ	0xFFD
 32215                           pclath	equ	0xFFA
 32216                           tblptru	equ	0xFF8
 32217                           tblptrh	equ	0xFF7
 32218                           tblptrl	equ	0xFF6
 32219                           tablat	equ	0xFF5
 32220                           prodh	equ	0xFF4
 32221                           prodl	equ	0xFF3
 32222                           intcon	equ	0xFF2
 32223                           intcon2	equ	0xFF1
 32224                           intcon3	equ	0xFF0
 32225                           indf0	equ	0xFEF
 32226                           postinc0	equ	0xFEE
 32227                           fsr0h	equ	0xFEA
 32228                           fsr0l	equ	0xFE9
 32229                           wreg	equ	0xFE8
 32230                           indf1	equ	0xFE7
 32231                           postdec1	equ	0xFE5
 32232                           plusw1	equ	0xFE3
 32233                           fsr1h	equ	0xFE2
 32234                           fsr1l	equ	0xFE1
 32235                           indf2	equ	0xFDF
 32236                           postinc2	equ	0xFDE
 32237                           postdec2	equ	0xFDD
 32238                           plusw2	equ	0xFDB
 32239                           fsr2h	equ	0xFDA
 32240                           fsr2l	equ	0xFD9
 32241                           status	equ	0xFD8
 32242                           
 32243 ;; *************** function __parse_format_drive *****************
 32244 ;; Defined at:
 32245 ;;		line 349 in file "api.c"
 32246 ;; Parameters:    Size  Location     Type
 32247 ;;  data            2   38[COMRAM] PTR unsigned char 
 32248 ;;		 -> ReceivedDataBuffer(64), 
 32249 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 32250 ;;		 -> ToSendDataBuffer(64), 
 32251 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 32252 ;;		 -> api_parse@out_idx(1), 
 32253 ;; Auto vars:     Size  Location     Type
 32254 ;;  return_value    1   45[COMRAM] unsigned char 
 32255 ;; Return value:  Size  Location     Type
 32256 ;;                  1    wreg      unsigned char 
 32257 ;; Registers used:
 32258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32259 ;; Tracked objects:
 32260 ;;		On entry : 0/0
 32261 ;;		On exit  : 0/0
 32262 ;;		Unchanged: 0/0
 32263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32264 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32267 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32268 ;;Total ram usage:        8 bytes
 32269 ;; Hardware stack levels used:    1
 32270 ;; Hardware stack levels required when called:    6
 32271 ;; This function calls:
 32272 ;;		_fat_format
 32273 ;; This function is called by:
 32274 ;;		__parse_command_long
 32275 ;; This function uses a non-reentrant model
 32276 ;;
 32277                           
 32278                           	psect	text168
 32279  0051A0                     __ptext168:
 32280                           	opt stack 0
 32281  0051A0                     __parse_format_drive:
 32282                           	opt stack 21
 32283                           
 32284                           ;api.c: 353: uint8_t return_value;;api.c: 355: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 32285                           
 32286                           ;incstack = 0
 32287  0051A0  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32288  0051A4  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32289  0051A8  0E56               	movlw	86
 32290  0051AA  18DE               	xorwf	postinc2,w,c
 32291  0051AC  A4D8               	btfss	status,2,c
 32292  0051AE  D014               	goto	u9920
 32293  0051B0  EE20 F001          	lfsr	2,1
 32294  0051B4  5027               	movf	__parse_format_drive@data,w,c
 32295  0051B6  26D9               	addwf	fsr2l,f,c
 32296  0051B8  5028               	movf	__parse_format_drive@data+1,w,c
 32297  0051BA  22DA               	addwfc	fsr2h,f,c
 32298  0051BC  0EDA               	movlw	218
 32299  0051BE  18DE               	xorwf	postinc2,w,c
 32300  0051C0  A4D8               	btfss	status,2,c
 32301  0051C2  D00A               	goto	u9920
 32302  0051C4  EE20 F002          	lfsr	2,2
 32303  0051C8  5027               	movf	__parse_format_drive@data,w,c
 32304  0051CA  26D9               	addwf	fsr2l,f,c
 32305  0051CC  5028               	movf	__parse_format_drive@data+1,w,c
 32306  0051CE  22DA               	addwfc	fsr2h,f,c
 32307  0051D0  0E22               	movlw	34
 32308  0051D2  18DE               	xorwf	postinc2,w,c
 32309  0051D4  B4D8               	btfsc	status,2,c
 32310  0051D6  D002               	goto	l2716
 32311  0051D8                     u9920:
 32312                           
 32313                           ;api.c: 356: {;api.c: 357: return 3;
 32314  0051D8  0E03               	movlw	3
 32315  0051DA  0012               	return	
 32316  0051DC                     l2716:
 32317                           
 32318                           ;api.c: 358: };api.c: 360: return_value = fat_format();
 32319  0051DC  EC1E  F00F         	call	_fat_format	;wreg free
 32320  0051E0  6E2E               	movwf	__parse_format_drive@return_value,c
 32321                           
 32322                           ;api.c: 363: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 32323  0051E2  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32324  0051E6  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32325  0051EA  50DF               	movf	indf2,w,c
 32326  0051EC  B4D8               	btfsc	status,2,c
 32327  0051EE  D02B               	goto	l2720
 32328  0051F0  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32329  0051F4  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32330  0051F8  0E3F               	movlw	63
 32331  0051FA  60DF               	cpfslt	indf2,c
 32332  0051FC  D024               	goto	l2720
 32333                           
 32334                           ;api.c: 364: {;api.c: 365: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 32335  0051FE  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32336  005202  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32337  005206  CFDF F02D          	movff	indf2,??__parse_format_drive
 32338  00520A  0E01               	movlw	1
 32339  00520C  26DF               	addwf	indf2,f,c
 32340  00520E  502D               	movf	??__parse_format_drive,w,c
 32341  005210  0D01               	mullw	1
 32342  005212  50F3               	movf	prodl,w,c
 32343  005214  2429               	addwf	__parse_format_drive@out_buffer,w,c
 32344  005216  6ED9               	movwf	fsr2l,c
 32345  005218  50F4               	movf	prodh,w,c
 32346  00521A  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 32347  00521C  6EDA               	movwf	fsr2h,c
 32348  00521E  0E56               	movlw	86
 32349  005220  6EDF               	movwf	indf2,c
 32350                           
 32351                           ;api.c: 366: out_buffer[(*out_idx_ptr)++] = return_value;
 32352  005222  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32353  005226  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32354  00522A  CFDF F02D          	movff	indf2,??__parse_format_drive
 32355  00522E  0E01               	movlw	1
 32356  005230  26DF               	addwf	indf2,f,c
 32357  005232  502D               	movf	??__parse_format_drive,w,c
 32358  005234  0D01               	mullw	1
 32359  005236  50F3               	movf	prodl,w,c
 32360  005238  2429               	addwf	__parse_format_drive@out_buffer,w,c
 32361  00523A  6ED9               	movwf	fsr2l,c
 32362  00523C  50F4               	movf	prodh,w,c
 32363  00523E  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 32364  005240  6EDA               	movwf	fsr2h,c
 32365  005242  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 32366  005246                     l2720:
 32367                           
 32368                           ;api.c: 367: };api.c: 369: return 3;
 32369  005246  0E03               	movlw	3
 32370  005248  0012               	return	
 32371  00524A                     __end_of__parse_format_drive:
 32372                           	opt stack 0
 32373                           tosu	equ	0xFFF
 32374                           tosh	equ	0xFFE
 32375                           tosl	equ	0xFFD
 32376                           pclath	equ	0xFFA
 32377                           tblptru	equ	0xFF8
 32378                           tblptrh	equ	0xFF7
 32379                           tblptrl	equ	0xFF6
 32380                           tablat	equ	0xFF5
 32381                           prodh	equ	0xFF4
 32382                           prodl	equ	0xFF3
 32383                           intcon	equ	0xFF2
 32384                           intcon2	equ	0xFF1
 32385                           intcon3	equ	0xFF0
 32386                           indf0	equ	0xFEF
 32387                           postinc0	equ	0xFEE
 32388                           fsr0h	equ	0xFEA
 32389                           fsr0l	equ	0xFE9
 32390                           wreg	equ	0xFE8
 32391                           indf1	equ	0xFE7
 32392                           postdec1	equ	0xFE5
 32393                           plusw1	equ	0xFE3
 32394                           fsr1h	equ	0xFE2
 32395                           fsr1l	equ	0xFE1
 32396                           indf2	equ	0xFDF
 32397                           postinc2	equ	0xFDE
 32398                           postdec2	equ	0xFDD
 32399                           plusw2	equ	0xFDB
 32400                           fsr2h	equ	0xFDA
 32401                           fsr2l	equ	0xFD9
 32402                           status	equ	0xFD8
 32403                           
 32404 ;; *************** function _fat_format *****************
 32405 ;; Defined at:
 32406 ;;		line 1320 in file "fat16.c"
 32407 ;; Parameters:    Size  Location     Type
 32408 ;;		None
 32409 ;; Auto vars:     Size  Location     Type
 32410 ;;  cntr            2   36[COMRAM] unsigned int 
 32411 ;; Return value:  Size  Location     Type
 32412 ;;                  1    wreg      unsigned char 
 32413 ;; Registers used:
 32414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32415 ;; Tracked objects:
 32416 ;;		On entry : 0/0
 32417 ;;		On exit  : 0/0
 32418 ;;		Unchanged: 0/0
 32419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32424 ;;Total ram usage:        2 bytes
 32425 ;; Hardware stack levels used:    1
 32426 ;; Hardware stack levels required when called:    5
 32427 ;; This function calls:
 32428 ;;		__get_data
 32429 ;;		__get_fat
 32430 ;;		__get_fbr
 32431 ;;		__get_mbr
 32432 ;;		__get_root
 32433 ;;		_flash_sector_write
 32434 ;; This function is called by:
 32435 ;;		_fat_init
 32436 ;;		__parse_format_drive
 32437 ;; This function uses a non-reentrant model
 32438 ;;
 32439                           
 32440                           	psect	text169
 32441  001E3C                     __ptext169:
 32442                           	opt stack 0
 32443  001E3C                     _fat_format:
 32444                           	opt stack 23
 32445                           
 32446                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 32447                           
 32448                           ;incstack = 0
 32449  001E3C  0E00               	movlw	0
 32450  001E3E  6E26               	movwf	fat_format@cntr+1,c
 32451  001E40  0E00               	movlw	0
 32452  001E42  6E25               	movwf	fat_format@cntr,c
 32453  001E44                     l12125:
 32454  001E44  0E02               	movlw	2
 32455  001E46  5C26               	subwf	fat_format@cntr+1,w,c
 32456  001E48  B0D8               	btfsc	status,0,c
 32457  001E4A  D010               	goto	u9360
 32458                           
 32459                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 32460  001E4C  0EC4               	movlw	low _buffer
 32461  001E4E  2425               	addwf	fat_format@cntr,w,c
 32462  001E50  6ED9               	movwf	fsr2l,c
 32463  001E52  0E02               	movlw	high _buffer
 32464  001E54  2026               	addwfc	fat_format@cntr+1,w,c
 32465  001E56  6EDA               	movwf	fsr2h,c
 32466  001E58  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 32467  001E5C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 32468  001E60  EC89  F025         	call	__get_mbr	;wreg free
 32469  001E64  6EDF               	movwf	indf2,c
 32470  001E66  4A25               	infsnz	fat_format@cntr,f,c
 32471  001E68  2A26               	incf	fat_format@cntr+1,f,c
 32472  001E6A  D7EC               	goto	l12125
 32473  001E6C                     u9360:
 32474                           
 32475                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 32476  001E6C  0E00               	movlw	0
 32477  001E6E  6E21               	movwf	flash_sector_write@page+1,c
 32478  001E70  0E00               	movlw	0
 32479  001E72  6E20               	movwf	flash_sector_write@page,c
 32480  001E74  0EC4               	movlw	low _buffer
 32481  001E76  6E22               	movwf	flash_sector_write@data,c
 32482  001E78  0E02               	movlw	high _buffer
 32483  001E7A  6E23               	movwf	flash_sector_write@data+1,c
 32484  001E7C  ECC9  F033         	call	_flash_sector_write	;wreg free
 32485                           
 32486                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 32487  001E80  0E00               	movlw	0
 32488  001E82  6E26               	movwf	fat_format@cntr+1,c
 32489  001E84  0E00               	movlw	0
 32490  001E86  6E25               	movwf	fat_format@cntr,c
 32491  001E88                     l12139:
 32492  001E88  0E02               	movlw	2
 32493  001E8A  5C26               	subwf	fat_format@cntr+1,w,c
 32494  001E8C  B0D8               	btfsc	status,0,c
 32495  001E8E  D010               	goto	u9380
 32496                           
 32497                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 32498  001E90  0EC4               	movlw	low _buffer
 32499  001E92  2425               	addwf	fat_format@cntr,w,c
 32500  001E94  6ED9               	movwf	fsr2l,c
 32501  001E96  0E02               	movlw	high _buffer
 32502  001E98  2026               	addwfc	fat_format@cntr+1,w,c
 32503  001E9A  6EDA               	movwf	fsr2h,c
 32504  001E9C  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 32505  001EA0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 32506  001EA4  ECAD  F00B         	call	__get_fbr	;wreg free
 32507  001EA8  6EDF               	movwf	indf2,c
 32508  001EAA  4A25               	infsnz	fat_format@cntr,f,c
 32509  001EAC  2A26               	incf	fat_format@cntr+1,f,c
 32510  001EAE  D7EC               	goto	l12139
 32511  001EB0                     u9380:
 32512                           
 32513                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 32514  001EB0  0E00               	movlw	0
 32515  001EB2  6E21               	movwf	flash_sector_write@page+1,c
 32516  001EB4  0E01               	movlw	1
 32517  001EB6  6E20               	movwf	flash_sector_write@page,c
 32518  001EB8  0EC4               	movlw	low _buffer
 32519  001EBA  6E22               	movwf	flash_sector_write@data,c
 32520  001EBC  0E02               	movlw	high _buffer
 32521  001EBE  6E23               	movwf	flash_sector_write@data+1,c
 32522  001EC0  ECC9  F033         	call	_flash_sector_write	;wreg free
 32523                           
 32524                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 32525  001EC4  0E00               	movlw	0
 32526  001EC6  6E26               	movwf	fat_format@cntr+1,c
 32527  001EC8  0E00               	movlw	0
 32528  001ECA  6E25               	movwf	fat_format@cntr,c
 32529  001ECC                     l12153:
 32530  001ECC  0E02               	movlw	2
 32531  001ECE  5C26               	subwf	fat_format@cntr+1,w,c
 32532  001ED0  B0D8               	btfsc	status,0,c
 32533  001ED2  D010               	goto	u9400
 32534                           
 32535                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 32536  001ED4  0EC4               	movlw	low _buffer
 32537  001ED6  2425               	addwf	fat_format@cntr,w,c
 32538  001ED8  6ED9               	movwf	fsr2l,c
 32539  001EDA  0E02               	movlw	high _buffer
 32540  001EDC  2026               	addwfc	fat_format@cntr+1,w,c
 32541  001EDE  6EDA               	movwf	fsr2h,c
 32542  001EE0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 32543  001EE4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 32544  001EE8  ECD1  F032         	call	__get_fat	;wreg free
 32545  001EEC  6EDF               	movwf	indf2,c
 32546  001EEE  4A25               	infsnz	fat_format@cntr,f,c
 32547  001EF0  2A26               	incf	fat_format@cntr+1,f,c
 32548  001EF2  D7EC               	goto	l12153
 32549  001EF4                     u9400:
 32550                           
 32551                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 32552  001EF4  0E00               	movlw	0
 32553  001EF6  6E21               	movwf	flash_sector_write@page+1,c
 32554  001EF8  0E02               	movlw	2
 32555  001EFA  6E20               	movwf	flash_sector_write@page,c
 32556  001EFC  0EC4               	movlw	low _buffer
 32557  001EFE  6E22               	movwf	flash_sector_write@data,c
 32558  001F00  0E02               	movlw	high _buffer
 32559  001F02  6E23               	movwf	flash_sector_write@data+1,c
 32560  001F04  ECC9  F033         	call	_flash_sector_write	;wreg free
 32561                           
 32562                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 32563  001F08  0E00               	movlw	0
 32564  001F0A  6E26               	movwf	fat_format@cntr+1,c
 32565  001F0C  0E00               	movlw	0
 32566  001F0E  6E25               	movwf	fat_format@cntr,c
 32567  001F10                     l12167:
 32568  001F10  0E02               	movlw	2
 32569  001F12  5C26               	subwf	fat_format@cntr+1,w,c
 32570  001F14  B0D8               	btfsc	status,0,c
 32571  001F16  D00B               	goto	u9420
 32572                           
 32573                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 32574  001F18  0EC4               	movlw	low _buffer
 32575  001F1A  2425               	addwf	fat_format@cntr,w,c
 32576  001F1C  6ED9               	movwf	fsr2l,c
 32577  001F1E  0E02               	movlw	high _buffer
 32578  001F20  2026               	addwfc	fat_format@cntr+1,w,c
 32579  001F22  6EDA               	movwf	fsr2h,c
 32580  001F24  0E00               	movlw	0
 32581  001F26  6EDF               	movwf	indf2,c
 32582  001F28  4A25               	infsnz	fat_format@cntr,f,c
 32583  001F2A  2A26               	incf	fat_format@cntr+1,f,c
 32584  001F2C  D7F1               	goto	l12167
 32585  001F2E                     u9420:
 32586                           
 32587                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 32588  001F2E  0E00               	movlw	0
 32589  001F30  6E26               	movwf	fat_format@cntr+1,c
 32590  001F32  0E03               	movlw	3
 32591  001F34  6E25               	movwf	fat_format@cntr,c
 32592  001F36                     l12179:
 32593  001F36  5026               	movf	fat_format@cntr+1,w,c
 32594  001F38  E111               	bnz	l12189
 32595  001F3A  0E22               	movlw	34
 32596  001F3C  5C25               	subwf	fat_format@cntr,w,c
 32597  001F3E  B0D8               	btfsc	status,0,c
 32598  001F40  D00D               	goto	u9440
 32599                           
 32600                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 32601  001F42  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32602  001F46  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32603  001F4A  0EC4               	movlw	low _buffer
 32604  001F4C  6E22               	movwf	flash_sector_write@data,c
 32605  001F4E  0E02               	movlw	high _buffer
 32606  001F50  6E23               	movwf	flash_sector_write@data+1,c
 32607  001F52  ECC9  F033         	call	_flash_sector_write	;wreg free
 32608  001F56  4A25               	infsnz	fat_format@cntr,f,c
 32609  001F58  2A26               	incf	fat_format@cntr+1,f,c
 32610  001F5A  D7ED               	goto	l12179
 32611  001F5C                     u9440:
 32612  001F5C                     l12189:
 32613                           
 32614                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 32615  001F5C  0E00               	movlw	0
 32616  001F5E  6E26               	movwf	fat_format@cntr+1,c
 32617  001F60  0E00               	movlw	0
 32618  001F62  6E25               	movwf	fat_format@cntr,c
 32619  001F64                     l12191:
 32620  001F64  0E02               	movlw	2
 32621  001F66  5C26               	subwf	fat_format@cntr+1,w,c
 32622  001F68  B0D8               	btfsc	status,0,c
 32623  001F6A  D010               	goto	u9460
 32624                           
 32625                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 32626  001F6C  0EC4               	movlw	low _buffer
 32627  001F6E  2425               	addwf	fat_format@cntr,w,c
 32628  001F70  6ED9               	movwf	fsr2l,c
 32629  001F72  0E02               	movlw	high _buffer
 32630  001F74  2026               	addwfc	fat_format@cntr+1,w,c
 32631  001F76  6EDA               	movwf	fsr2h,c
 32632  001F78  C025  F001         	movff	fat_format@cntr,__get_root@idx
 32633  001F7C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 32634  001F80  ECC2  F014         	call	__get_root	;wreg free
 32635  001F84  6EDF               	movwf	indf2,c
 32636  001F86  4A25               	infsnz	fat_format@cntr,f,c
 32637  001F88  2A26               	incf	fat_format@cntr+1,f,c
 32638  001F8A  D7EC               	goto	l12191
 32639  001F8C                     u9460:
 32640                           
 32641                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 32642  001F8C  0E00               	movlw	0
 32643  001F8E  6E21               	movwf	flash_sector_write@page+1,c
 32644  001F90  0E22               	movlw	34
 32645  001F92  6E20               	movwf	flash_sector_write@page,c
 32646  001F94  0EC4               	movlw	low _buffer
 32647  001F96  6E22               	movwf	flash_sector_write@data,c
 32648  001F98  0E02               	movlw	high _buffer
 32649  001F9A  6E23               	movwf	flash_sector_write@data+1,c
 32650  001F9C  ECC9  F033         	call	_flash_sector_write	;wreg free
 32651                           
 32652                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 32653  001FA0  0E00               	movlw	0
 32654  001FA2  6E26               	movwf	fat_format@cntr+1,c
 32655  001FA4  0E00               	movlw	0
 32656  001FA6  6E25               	movwf	fat_format@cntr,c
 32657  001FA8                     l12205:
 32658  001FA8  0E02               	movlw	2
 32659  001FAA  5C26               	subwf	fat_format@cntr+1,w,c
 32660  001FAC  B0D8               	btfsc	status,0,c
 32661  001FAE  D00B               	goto	u9480
 32662                           
 32663                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 32664  001FB0  0EC4               	movlw	low _buffer
 32665  001FB2  2425               	addwf	fat_format@cntr,w,c
 32666  001FB4  6ED9               	movwf	fsr2l,c
 32667  001FB6  0E02               	movlw	high _buffer
 32668  001FB8  2026               	addwfc	fat_format@cntr+1,w,c
 32669  001FBA  6EDA               	movwf	fsr2h,c
 32670  001FBC  0E00               	movlw	0
 32671  001FBE  6EDF               	movwf	indf2,c
 32672  001FC0  4A25               	infsnz	fat_format@cntr,f,c
 32673  001FC2  2A26               	incf	fat_format@cntr+1,f,c
 32674  001FC4  D7F1               	goto	l12205
 32675  001FC6                     u9480:
 32676                           
 32677                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 32678  001FC6  0E00               	movlw	0
 32679  001FC8  6E26               	movwf	fat_format@cntr+1,c
 32680  001FCA  0E23               	movlw	35
 32681  001FCC  6E25               	movwf	fat_format@cntr,c
 32682  001FCE                     l12217:
 32683  001FCE  5026               	movf	fat_format@cntr+1,w,c
 32684  001FD0  E111               	bnz	l12227
 32685  001FD2  0E26               	movlw	38
 32686  001FD4  5C25               	subwf	fat_format@cntr,w,c
 32687  001FD6  B0D8               	btfsc	status,0,c
 32688  001FD8  D00D               	goto	u9500
 32689                           
 32690                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 32691  001FDA  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32692  001FDE  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32693  001FE2  0EC4               	movlw	low _buffer
 32694  001FE4  6E22               	movwf	flash_sector_write@data,c
 32695  001FE6  0E02               	movlw	high _buffer
 32696  001FE8  6E23               	movwf	flash_sector_write@data+1,c
 32697  001FEA  ECC9  F033         	call	_flash_sector_write	;wreg free
 32698  001FEE  4A25               	infsnz	fat_format@cntr,f,c
 32699  001FF0  2A26               	incf	fat_format@cntr+1,f,c
 32700  001FF2  D7ED               	goto	l12217
 32701  001FF4                     u9500:
 32702  001FF4                     l12227:
 32703                           
 32704                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 32705  001FF4  0E00               	movlw	0
 32706  001FF6  6E26               	movwf	fat_format@cntr+1,c
 32707  001FF8  0E00               	movlw	0
 32708  001FFA  6E25               	movwf	fat_format@cntr,c
 32709  001FFC                     l12229:
 32710  001FFC  0E02               	movlw	2
 32711  001FFE  5C26               	subwf	fat_format@cntr+1,w,c
 32712  002000  B0D8               	btfsc	status,0,c
 32713  002002  D010               	goto	u9520
 32714                           
 32715                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 32716  002004  0EC4               	movlw	low _buffer
 32717  002006  2425               	addwf	fat_format@cntr,w,c
 32718  002008  6ED9               	movwf	fsr2l,c
 32719  00200A  0E02               	movlw	high _buffer
 32720  00200C  2026               	addwfc	fat_format@cntr+1,w,c
 32721  00200E  6EDA               	movwf	fsr2h,c
 32722  002010  C025  F001         	movff	fat_format@cntr,__get_data@idx
 32723  002014  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 32724  002018  EC28  F037         	call	__get_data	;wreg free
 32725  00201C  6EDF               	movwf	indf2,c
 32726  00201E  4A25               	infsnz	fat_format@cntr,f,c
 32727  002020  2A26               	incf	fat_format@cntr+1,f,c
 32728  002022  D7EC               	goto	l12229
 32729  002024                     u9520:
 32730                           
 32731                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 32732  002024  0E00               	movlw	0
 32733  002026  6E21               	movwf	flash_sector_write@page+1,c
 32734  002028  0E26               	movlw	38
 32735  00202A  6E20               	movwf	flash_sector_write@page,c
 32736  00202C  0EC4               	movlw	low _buffer
 32737  00202E  6E22               	movwf	flash_sector_write@data,c
 32738  002030  0E02               	movlw	high _buffer
 32739  002032  6E23               	movwf	flash_sector_write@data+1,c
 32740  002034  ECC9  F033         	call	_flash_sector_write	;wreg free
 32741                           
 32742                           ;fat16.c: 1379: return 0x00;
 32743  002038  0E00               	movlw	0
 32744  00203A  0012               	return	
 32745  00203C                     __end_of_fat_format:
 32746                           	opt stack 0
 32747                           tosu	equ	0xFFF
 32748                           tosh	equ	0xFFE
 32749                           tosl	equ	0xFFD
 32750                           pclath	equ	0xFFA
 32751                           tblptru	equ	0xFF8
 32752                           tblptrh	equ	0xFF7
 32753                           tblptrl	equ	0xFF6
 32754                           tablat	equ	0xFF5
 32755                           prodh	equ	0xFF4
 32756                           prodl	equ	0xFF3
 32757                           intcon	equ	0xFF2
 32758                           intcon2	equ	0xFF1
 32759                           intcon3	equ	0xFF0
 32760                           indf0	equ	0xFEF
 32761                           postinc0	equ	0xFEE
 32762                           fsr0h	equ	0xFEA
 32763                           fsr0l	equ	0xFE9
 32764                           wreg	equ	0xFE8
 32765                           indf1	equ	0xFE7
 32766                           postdec1	equ	0xFE5
 32767                           plusw1	equ	0xFE3
 32768                           fsr1h	equ	0xFE2
 32769                           fsr1l	equ	0xFE1
 32770                           indf2	equ	0xFDF
 32771                           postinc2	equ	0xFDE
 32772                           postdec2	equ	0xFDD
 32773                           plusw2	equ	0xFDB
 32774                           fsr2h	equ	0xFDA
 32775                           fsr2l	equ	0xFD9
 32776                           status	equ	0xFD8
 32777                           
 32778 ;; *************** function _flash_sector_write *****************
 32779 ;; Defined at:
 32780 ;;		line 434 in file "flash.c"
 32781 ;; Parameters:    Size  Location     Type
 32782 ;;  page            2   31[COMRAM] unsigned int 
 32783 ;;  data            2   33[COMRAM] PTR unsigned char 
 32784 ;;		 -> buffer(512), msd_buffer(512), 
 32785 ;; Auto vars:     Size  Location     Type
 32786 ;;  match           1   35[COMRAM] enum E6896
 32787 ;; Return value:  Size  Location     Type
 32788 ;;                  1    wreg      void 
 32789 ;; Registers used:
 32790 ;;		wreg, status,2, status,0, cstack
 32791 ;; Tracked objects:
 32792 ;;		On entry : 0/0
 32793 ;;		On exit  : 0/0
 32794 ;;		Unchanged: 0/0
 32795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32799 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32800 ;;Total ram usage:        5 bytes
 32801 ;; Hardware stack levels used:    1
 32802 ;; Hardware stack levels required when called:    4
 32803 ;; This function calls:
 32804 ;;		__flash_compare_page_to_buffer
 32805 ;;		__flash_write_page_from_buffer
 32806 ;;		__flash_write_to_buffer
 32807 ;; This function is called by:
 32808 ;;		_ExternalFlash_SectorWrite
 32809 ;;		_fat_format
 32810 ;;		__make_cluster_chain
 32811 ;; This function uses a non-reentrant model
 32812 ;;
 32813                           
 32814                           	psect	text170
 32815  006792                     __ptext170:
 32816                           	opt stack 0
 32817  006792                     _flash_sector_write:
 32818                           	opt stack 23
 32819                           
 32820                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 32821                           
 32822                           ;incstack = 0
 32823  006792  0E00               	movlw	0
 32824  006794  6E15               	movwf	__flash_write_to_buffer@start+1,c
 32825  006796  0E00               	movlw	0
 32826  006798  6E14               	movwf	__flash_write_to_buffer@start,c
 32827  00679A  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 32828  00679E  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 32829  0067A2  0E02               	movlw	2
 32830  0067A4  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 32831  0067A6  0E00               	movlw	0
 32832  0067A8  6E18               	movwf	__flash_write_to_buffer@data_length,c
 32833  0067AA  0E00               	movlw	0
 32834  0067AC  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 32835  0067AE  ECA1  F033         	call	__flash_write_to_buffer	;wreg free
 32836                           
 32837                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32838  0067B2  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 32839  0067B6  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 32840  0067BA  0E00               	movlw	0
 32841  0067BC  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 32842  0067BE  EC99  F02E         	call	__flash_compare_page_to_buffer	;wreg free
 32843  0067C2  6E24               	movwf	flash_sector_write@match,c
 32844                           
 32845                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 32846  0067C4  0424               	decf	flash_sector_write@match,w,c
 32847  0067C6  A4D8               	btfss	status,2,c
 32848  0067C8  0012               	return	
 32849                           
 32850                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32851  0067CA  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 32852  0067CE  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 32853  0067D2  0E00               	movlw	0
 32854  0067D4  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 32855  0067D6  ECCD  F031         	call	__flash_write_page_from_buffer	;wreg free
 32856  0067DA  0012               	return	
 32857  0067DC                     __end_of_flash_sector_write:
 32858                           	opt stack 0
 32859                           tosu	equ	0xFFF
 32860                           tosh	equ	0xFFE
 32861                           tosl	equ	0xFFD
 32862                           pclath	equ	0xFFA
 32863                           tblptru	equ	0xFF8
 32864                           tblptrh	equ	0xFF7
 32865                           tblptrl	equ	0xFF6
 32866                           tablat	equ	0xFF5
 32867                           prodh	equ	0xFF4
 32868                           prodl	equ	0xFF3
 32869                           intcon	equ	0xFF2
 32870                           intcon2	equ	0xFF1
 32871                           intcon3	equ	0xFF0
 32872                           indf0	equ	0xFEF
 32873                           postinc0	equ	0xFEE
 32874                           fsr0h	equ	0xFEA
 32875                           fsr0l	equ	0xFE9
 32876                           wreg	equ	0xFE8
 32877                           indf1	equ	0xFE7
 32878                           postdec1	equ	0xFE5
 32879                           plusw1	equ	0xFE3
 32880                           fsr1h	equ	0xFE2
 32881                           fsr1l	equ	0xFE1
 32882                           indf2	equ	0xFDF
 32883                           postinc2	equ	0xFDE
 32884                           postdec2	equ	0xFDD
 32885                           plusw2	equ	0xFDB
 32886                           fsr2h	equ	0xFDA
 32887                           fsr2l	equ	0xFD9
 32888                           status	equ	0xFD8
 32889                           
 32890 ;; *************** function __flash_write_to_buffer *****************
 32891 ;; Defined at:
 32892 ;;		line 236 in file "flash.c"
 32893 ;; Parameters:    Size  Location     Type
 32894 ;;  start           2   19[COMRAM] unsigned int 
 32895 ;;  data            2   21[COMRAM] PTR unsigned char 
 32896 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 32897 ;;		 -> buffer(512), msd_buffer(512), 
 32898 ;;  data_length     2   23[COMRAM] unsigned int 
 32899 ;;  buffer          1   25[COMRAM] enum E6892
 32900 ;; Auto vars:     Size  Location     Type
 32901 ;;  command         4   26[COMRAM] unsigned char [4]
 32902 ;; Return value:  Size  Location     Type
 32903 ;;                  1    wreg      void 
 32904 ;; Registers used:
 32905 ;;		wreg, status,2, status,0, cstack
 32906 ;; Tracked objects:
 32907 ;;		On entry : 0/0
 32908 ;;		On exit  : 0/0
 32909 ;;		Unchanged: 0/0
 32910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32911 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32912 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32915 ;;Total ram usage:       11 bytes
 32916 ;; Hardware stack levels used:    1
 32917 ;; Hardware stack levels required when called:    3
 32918 ;; This function calls:
 32919 ;;		__flash_is_busy
 32920 ;;		_spi_tx_tx
 32921 ;; This function is called by:
 32922 ;;		_flash_sector_write
 32923 ;;		_flash_partial_write
 32924 ;;		_flash_write_to_buffer
 32925 ;; This function uses a non-reentrant model
 32926 ;;
 32927                           
 32928                           	psect	text171
 32929  006742                     __ptext171:
 32930                           	opt stack 0
 32931  006742                     __flash_write_to_buffer:
 32932                           	opt stack 23
 32933                           
 32934                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 32935                           
 32936                           ;incstack = 0
 32937  006742  ECBE  F037         	call	__flash_is_busy	;wreg free
 32938  006746  0900               	iorlw	0
 32939  006748  A4D8               	btfss	status,2,c
 32940  00674A  D7FB               	goto	__flash_write_to_buffer
 32941                           
 32942                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 32943  00674C  501A               	movf	__flash_write_to_buffer@buffer,w,c
 32944  00674E  A4D8               	btfss	status,2,c
 32945  006750  D002               	goto	l1773
 32946                           
 32947                           ;flash.c: 245: command[0] = 0x84;
 32948  006752  0E84               	movlw	132
 32949  006754  6E1B               	movwf	__flash_write_to_buffer@command,c
 32950  006756                     l1773:
 32951                           
 32952                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 32953  006756  041A               	decf	__flash_write_to_buffer@buffer,w,c
 32954  006758  A4D8               	btfss	status,2,c
 32955  00675A  D002               	goto	l1774
 32956                           
 32957                           ;flash.c: 247: command[0] = 0x87;
 32958  00675C  0E87               	movlw	135
 32959  00675E  6E1B               	movwf	__flash_write_to_buffer@command,c
 32960  006760                     l1774:
 32961                           
 32962                           ;flash.c: 249: command[1] = 0x00;
 32963  006760  0E00               	movlw	0
 32964  006762  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 32965                           
 32966                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 32967  006764  5015               	movf	__flash_write_to_buffer@start+1,w,c
 32968  006766  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 32969                           
 32970                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 32971  006768  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 32972                           
 32973                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 32974  00676C  0E1B               	movlw	low __flash_write_to_buffer@command
 32975  00676E  6E01               	movwf	spi_tx_tx@command,c
 32976  006770  0E00               	movlw	high __flash_write_to_buffer@command
 32977  006772  6E02               	movwf	spi_tx_tx@command+1,c
 32978  006774  0E00               	movlw	0
 32979  006776  6E04               	movwf	spi_tx_tx@command_length+1,c
 32980  006778  0E04               	movlw	4
 32981  00677A  6E03               	movwf	spi_tx_tx@command_length,c
 32982  00677C  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 32983  006780  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 32984  006784  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 32985  006788  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 32986  00678C  EC14  F02D         	call	_spi_tx_tx	;wreg free
 32987  006790  0012               	return		;funcret
 32988  006792                     __end_of__flash_write_to_buffer:
 32989                           	opt stack 0
 32990                           tosu	equ	0xFFF
 32991                           tosh	equ	0xFFE
 32992                           tosl	equ	0xFFD
 32993                           pclath	equ	0xFFA
 32994                           tblptru	equ	0xFF8
 32995                           tblptrh	equ	0xFF7
 32996                           tblptrl	equ	0xFF6
 32997                           tablat	equ	0xFF5
 32998                           prodh	equ	0xFF4
 32999                           prodl	equ	0xFF3
 33000                           intcon	equ	0xFF2
 33001                           intcon2	equ	0xFF1
 33002                           intcon3	equ	0xFF0
 33003                           indf0	equ	0xFEF
 33004                           postinc0	equ	0xFEE
 33005                           fsr0h	equ	0xFEA
 33006                           fsr0l	equ	0xFE9
 33007                           wreg	equ	0xFE8
 33008                           indf1	equ	0xFE7
 33009                           postdec1	equ	0xFE5
 33010                           plusw1	equ	0xFE3
 33011                           fsr1h	equ	0xFE2
 33012                           fsr1l	equ	0xFE1
 33013                           indf2	equ	0xFDF
 33014                           postinc2	equ	0xFDE
 33015                           postdec2	equ	0xFDD
 33016                           plusw2	equ	0xFDB
 33017                           fsr2h	equ	0xFDA
 33018                           fsr2l	equ	0xFD9
 33019                           status	equ	0xFD8
 33020                           
 33021 ;; *************** function _spi_tx_tx *****************
 33022 ;; Defined at:
 33023 ;;		line 146 in file "spi.c"
 33024 ;; Parameters:    Size  Location     Type
 33025 ;;  command         2    0[COMRAM] PTR unsigned char 
 33026 ;;		 -> _flash_write_to_buffer@command(4), 
 33027 ;;  command_leng    2    2[COMRAM] unsigned int 
 33028 ;;  data            2    4[COMRAM] PTR unsigned char 
 33029 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33030 ;;		 -> buffer(512), msd_buffer(512), 
 33031 ;;  data_length     2    6[COMRAM] unsigned int 
 33032 ;; Auto vars:     Size  Location     Type
 33033 ;;		None
 33034 ;; Return value:  Size  Location     Type
 33035 ;;                  1    wreg      void 
 33036 ;; Registers used:
 33037 ;;		wreg, status,2, status,0
 33038 ;; Tracked objects:
 33039 ;;		On entry : 0/0
 33040 ;;		On exit  : 0/0
 33041 ;;		Unchanged: 0/0
 33042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33046 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33047 ;;Total ram usage:       12 bytes
 33048 ;; Hardware stack levels used:    1
 33049 ;; This function calls:
 33050 ;;		Nothing
 33051 ;; This function is called by:
 33052 ;;		__flash_write_to_buffer
 33053 ;; This function uses a non-reentrant model
 33054 ;;
 33055                           
 33056                           	psect	text172
 33057  005A28                     __ptext172:
 33058                           	opt stack 0
 33059  005A28                     _spi_tx_tx:
 33060                           	opt stack 25
 33061                           
 33062                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33063                           
 33064                           ;incstack = 0
 33065  005A28  9E88               	bcf	3976,7,c	;volatile
 33066                           
 33067                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33068  005A2A  9C88               	bcf	3976,6,c	;volatile
 33069                           
 33070                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33071  005A2C  8A88               	bsf	3976,5,c	;volatile
 33072                           
 33073                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33074  005A2E  9888               	bcf	3976,4,c	;volatile
 33075                           
 33076                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33077  005A30  9688               	bcf	3976,3,c	;volatile
 33078                           
 33079                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33080  005A32  8488               	bsf	3976,2,c	;volatile
 33081                           
 33082                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33083  005A34  9288               	bcf	3976,1,c	;volatile
 33084                           
 33085                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33086  005A36  9886               	bcf	3974,4,c	;volatile
 33087  005A38  9A86               	bcf	3974,5,c	;volatile
 33088  005A3A  9C86               	bcf	3974,6,c	;volatile
 33089  005A3C  9E86               	bcf	3974,7,c	;volatile
 33090                           
 33091                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33092  005A3E  9086               	bcf	3974,0,c	;volatile
 33093  005A40  9286               	bcf	3974,1,c	;volatile
 33094  005A42  9486               	bcf	3974,2,c	;volatile
 33095  005A44  9686               	bcf	3974,3,c	;volatile
 33096                           
 33097                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33098  005A46  5002               	movf	spi_tx_tx@command+1,w,c
 33099  005A48  6E6A               	movwf	3946,c	;volatile
 33100                           
 33101                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33102  005A4A  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33103                           
 33104                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33105  005A4E  0EFF               	movlw	255
 33106  005A50  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33107  005A52  0EFF               	movlw	255
 33108  005A54  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33109  005A56  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33110  005A5A  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33111  005A5E  5009               	movf	??_spi_tx_tx,w,c
 33112  005A60  260B               	addwf	??_spi_tx_tx+2,f,c
 33113  005A62  500A               	movf	??_spi_tx_tx+1,w,c
 33114  005A64  220C               	addwfc	??_spi_tx_tx+3,f,c
 33115  005A66  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33116  005A6A  6A0C               	clrf	??_spi_tx_tx+3,c
 33117  005A6C  500B               	movf	??_spi_tx_tx+2,w,c
 33118  005A6E  6E66               	movwf	3942,c	;volatile
 33119                           
 33120                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33121  005A70  0403               	decf	spi_tx_tx@command_length,w,c
 33122  005A72  6E67               	movwf	3943,c	;volatile
 33123                           
 33124                           ;spi.c: 174: LATDbits.LD7 = 0;
 33125  005A74  9E8C               	bcf	3980,7,c	;volatile
 33126                           
 33127                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33128  005A76  8088               	bsf	3976,0,c	;volatile
 33129  005A78  B088               	btfsc	3976,0,c	;volatile
 33130  005A7A  D7FE               	goto	l2798
 33131                           
 33132                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33133  005A7C  5006               	movf	spi_tx_tx@data+1,w,c
 33134  005A7E  6E6A               	movwf	3946,c	;volatile
 33135                           
 33136                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33137  005A80  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33138                           
 33139                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33140  005A84  0EFF               	movlw	255
 33141  005A86  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33142  005A88  0EFF               	movlw	255
 33143  005A8A  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33144  005A8C  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33145  005A90  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33146  005A94  5009               	movf	??_spi_tx_tx,w,c
 33147  005A96  260B               	addwf	??_spi_tx_tx+2,f,c
 33148  005A98  500A               	movf	??_spi_tx_tx+1,w,c
 33149  005A9A  220C               	addwfc	??_spi_tx_tx+3,f,c
 33150  005A9C  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33151  005AA0  6A0C               	clrf	??_spi_tx_tx+3,c
 33152  005AA2  500B               	movf	??_spi_tx_tx+2,w,c
 33153  005AA4  6E66               	movwf	3942,c	;volatile
 33154                           
 33155                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33156  005AA6  0407               	decf	spi_tx_tx@data_length,w,c
 33157  005AA8  6E67               	movwf	3943,c	;volatile
 33158                           
 33159                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33160  005AAA  8088               	bsf	3976,0,c	;volatile
 33161  005AAC  B088               	btfsc	3976,0,c	;volatile
 33162  005AAE  D7FE               	goto	l2801
 33163                           
 33164                           ;spi.c: 193: LATDbits.LD7 = 1;
 33165  005AB0  8E8C               	bsf	3980,7,c	;volatile
 33166  005AB2  0012               	return		;funcret
 33167  005AB4                     __end_of_spi_tx_tx:
 33168                           	opt stack 0
 33169                           tosu	equ	0xFFF
 33170                           tosh	equ	0xFFE
 33171                           tosl	equ	0xFFD
 33172                           pclath	equ	0xFFA
 33173                           tblptru	equ	0xFF8
 33174                           tblptrh	equ	0xFF7
 33175                           tblptrl	equ	0xFF6
 33176                           tablat	equ	0xFF5
 33177                           prodh	equ	0xFF4
 33178                           prodl	equ	0xFF3
 33179                           intcon	equ	0xFF2
 33180                           intcon2	equ	0xFF1
 33181                           intcon3	equ	0xFF0
 33182                           indf0	equ	0xFEF
 33183                           postinc0	equ	0xFEE
 33184                           fsr0h	equ	0xFEA
 33185                           fsr0l	equ	0xFE9
 33186                           wreg	equ	0xFE8
 33187                           indf1	equ	0xFE7
 33188                           postdec1	equ	0xFE5
 33189                           plusw1	equ	0xFE3
 33190                           fsr1h	equ	0xFE2
 33191                           fsr1l	equ	0xFE1
 33192                           indf2	equ	0xFDF
 33193                           postinc2	equ	0xFDE
 33194                           postdec2	equ	0xFDD
 33195                           plusw2	equ	0xFDB
 33196                           fsr2h	equ	0xFDA
 33197                           fsr2l	equ	0xFD9
 33198                           status	equ	0xFD8
 33199                           
 33200 ;; *************** function __flash_write_page_from_buffer *****************
 33201 ;; Defined at:
 33202 ;;		line 258 in file "flash.c"
 33203 ;; Parameters:    Size  Location     Type
 33204 ;;  page            2   19[COMRAM] unsigned int 
 33205 ;;  buffer          1   21[COMRAM] enum E6892
 33206 ;; Auto vars:     Size  Location     Type
 33207 ;;  command         4   25[COMRAM] unsigned char [4]
 33208 ;; Return value:  Size  Location     Type
 33209 ;;                  1    wreg      void 
 33210 ;; Registers used:
 33211 ;;		wreg, status,2, status,0, cstack
 33212 ;; Tracked objects:
 33213 ;;		On entry : 0/0
 33214 ;;		On exit  : 0/0
 33215 ;;		Unchanged: 0/0
 33216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33218 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33219 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33220 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33221 ;;Total ram usage:       10 bytes
 33222 ;; Hardware stack levels used:    1
 33223 ;; Hardware stack levels required when called:    3
 33224 ;; This function calls:
 33225 ;;		__flash_is_busy
 33226 ;;		_spi_tx
 33227 ;; This function is called by:
 33228 ;;		_flash_sector_write
 33229 ;;		_flash_partial_write
 33230 ;;		_flash_write_page_from_buffer
 33231 ;; This function uses a non-reentrant model
 33232 ;;
 33233                           
 33234                           	psect	text173
 33235  00639A                     __ptext173:
 33236                           	opt stack 0
 33237  00639A                     __flash_write_page_from_buffer:
 33238                           	opt stack 23
 33239                           
 33240                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33241                           
 33242                           ;incstack = 0
 33243  00639A  ECBE  F037         	call	__flash_is_busy	;wreg free
 33244  00639E  0900               	iorlw	0
 33245  0063A0  A4D8               	btfss	status,2,c
 33246  0063A2  D7FB               	goto	__flash_write_page_from_buffer
 33247                           
 33248                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 33249  0063A4  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 33250  0063A6  A4D8               	btfss	status,2,c
 33251  0063A8  D002               	goto	l1781
 33252                           
 33253                           ;flash.c: 267: command[0] = 0x83;
 33254  0063AA  0E83               	movlw	131
 33255  0063AC  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33256  0063AE                     l1781:
 33257                           
 33258                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 33259  0063AE  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 33260  0063B0  A4D8               	btfss	status,2,c
 33261  0063B2  D002               	goto	l1782
 33262                           
 33263                           ;flash.c: 269: command[0] = 0x86;
 33264  0063B4  0E86               	movlw	134
 33265  0063B6  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33266  0063B8                     l1782:
 33267                           
 33268                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33269  0063B8  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33270  0063BC  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33271  0063C0  0E07               	movlw	7
 33272  0063C2  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 33273  0063C4                     u6985:
 33274  0063C4  90D8               	bcf	status,0,c
 33275  0063C6  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 33276  0063C8  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 33277  0063CA  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 33278  0063CC  D7FB               	goto	u6985
 33279  0063CE  5017               	movf	??__flash_write_page_from_buffer,w,c
 33280  0063D0  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 33281                           
 33282                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 33283  0063D2  5014               	movf	__flash_write_page_from_buffer@page,w,c
 33284  0063D4  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 33285  0063D6  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 33286                           
 33287                           ;flash.c: 273: command[3] = 0x00;
 33288  0063D8  0E00               	movlw	0
 33289  0063DA  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 33290                           
 33291                           ;flash.c: 276: spi_tx(command, 4);
 33292  0063DC  0E1A               	movlw	low __flash_write_page_from_buffer@command
 33293  0063DE  6E01               	movwf	spi_tx@data,c
 33294  0063E0  0E00               	movlw	high __flash_write_page_from_buffer@command
 33295  0063E2  6E02               	movwf	spi_tx@data+1,c
 33296  0063E4  0E00               	movlw	0
 33297  0063E6  6E04               	movwf	spi_tx@length+1,c
 33298  0063E8  0E04               	movlw	4
 33299  0063EA  6E03               	movwf	spi_tx@length,c
 33300  0063EC  ECF9  F031         	call	_spi_tx	;wreg free
 33301  0063F0  0012               	return		;funcret
 33302  0063F2                     __end_of__flash_write_page_from_buffer:
 33303                           	opt stack 0
 33304                           tosu	equ	0xFFF
 33305                           tosh	equ	0xFFE
 33306                           tosl	equ	0xFFD
 33307                           pclath	equ	0xFFA
 33308                           tblptru	equ	0xFF8
 33309                           tblptrh	equ	0xFF7
 33310                           tblptrl	equ	0xFF6
 33311                           tablat	equ	0xFF5
 33312                           prodh	equ	0xFF4
 33313                           prodl	equ	0xFF3
 33314                           intcon	equ	0xFF2
 33315                           intcon2	equ	0xFF1
 33316                           intcon3	equ	0xFF0
 33317                           indf0	equ	0xFEF
 33318                           postinc0	equ	0xFEE
 33319                           fsr0h	equ	0xFEA
 33320                           fsr0l	equ	0xFE9
 33321                           wreg	equ	0xFE8
 33322                           indf1	equ	0xFE7
 33323                           postdec1	equ	0xFE5
 33324                           plusw1	equ	0xFE3
 33325                           fsr1h	equ	0xFE2
 33326                           fsr1l	equ	0xFE1
 33327                           indf2	equ	0xFDF
 33328                           postinc2	equ	0xFDE
 33329                           postdec2	equ	0xFDD
 33330                           plusw2	equ	0xFDB
 33331                           fsr2h	equ	0xFDA
 33332                           fsr2l	equ	0xFD9
 33333                           status	equ	0xFD8
 33334                           
 33335 ;; *************** function __flash_compare_page_to_buffer *****************
 33336 ;; Defined at:
 33337 ;;		line 176 in file "flash.c"
 33338 ;; Parameters:    Size  Location     Type
 33339 ;;  page            2   19[COMRAM] unsigned int 
 33340 ;;  buffer          1   21[COMRAM] enum E6892
 33341 ;; Auto vars:     Size  Location     Type
 33342 ;;  command         4   27[COMRAM] unsigned char [4]
 33343 ;;  status          2   25[COMRAM] unsigned int 
 33344 ;; Return value:  Size  Location     Type
 33345 ;;                  1    wreg      enum E6896
 33346 ;; Registers used:
 33347 ;;		wreg, status,2, status,0, cstack
 33348 ;; Tracked objects:
 33349 ;;		On entry : 0/0
 33350 ;;		On exit  : 0/0
 33351 ;;		Unchanged: 0/0
 33352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33353 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33354 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33355 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33356 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33357 ;;Total ram usage:       12 bytes
 33358 ;; Hardware stack levels used:    1
 33359 ;; Hardware stack levels required when called:    3
 33360 ;; This function calls:
 33361 ;;		__flash_get_status
 33362 ;;		__flash_is_busy
 33363 ;;		_spi_tx
 33364 ;; This function is called by:
 33365 ;;		_flash_sector_write
 33366 ;;		_flash_partial_write
 33367 ;; This function uses a non-reentrant model
 33368 ;;
 33369                           
 33370                           	psect	text174
 33371  005D32                     __ptext174:
 33372                           	opt stack 0
 33373  005D32                     __flash_compare_page_to_buffer:
 33374                           	opt stack 23
 33375                           
 33376                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 33377                           
 33378                           ;incstack = 0
 33379  005D32  ECBE  F037         	call	__flash_is_busy	;wreg free
 33380  005D36  0900               	iorlw	0
 33381  005D38  A4D8               	btfss	status,2,c
 33382  005D3A  D7FB               	goto	__flash_compare_page_to_buffer
 33383                           
 33384                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 33385  005D3C  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 33386  005D3E  A4D8               	btfss	status,2,c
 33387  005D40  D002               	goto	l1754
 33388                           
 33389                           ;flash.c: 186: command[0] = 0x60;
 33390  005D42  0E60               	movlw	96
 33391  005D44  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 33392  005D46                     l1754:
 33393                           
 33394                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 33395  005D46  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 33396  005D48  A4D8               	btfss	status,2,c
 33397  005D4A  D002               	goto	l1755
 33398                           
 33399                           ;flash.c: 188: command[0] = 0x60;
 33400  005D4C  0E60               	movlw	96
 33401  005D4E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 33402  005D50                     l1755:
 33403                           
 33404                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33405  005D50  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 33406  005D54  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 33407  005D58  0E07               	movlw	7
 33408  005D5A  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 33409  005D5C                     u6895:
 33410  005D5C  90D8               	bcf	status,0,c
 33411  005D5E  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 33412  005D60  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 33413  005D62  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 33414  005D64  D7FB               	goto	u6895
 33415  005D66  5017               	movf	??__flash_compare_page_to_buffer,w,c
 33416  005D68  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 33417                           
 33418                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 33419  005D6A  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 33420  005D6C  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 33421  005D6E  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 33422                           
 33423                           ;flash.c: 192: command[3] = 0x00;
 33424  005D70  0E00               	movlw	0
 33425  005D72  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 33426                           
 33427                           ;flash.c: 195: spi_tx(command, 4);
 33428  005D74  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 33429  005D76  6E01               	movwf	spi_tx@data,c
 33430  005D78  0E00               	movlw	high __flash_compare_page_to_buffer@command
 33431  005D7A  6E02               	movwf	spi_tx@data+1,c
 33432  005D7C  0E00               	movlw	0
 33433  005D7E  6E04               	movwf	spi_tx@length+1,c
 33434  005D80  0E04               	movlw	4
 33435  005D82  6E03               	movwf	spi_tx@length,c
 33436  005D84  ECF9  F031         	call	_spi_tx	;wreg free
 33437  005D88  ECBE  F037         	call	__flash_is_busy	;wreg free
 33438  005D8C  0900               	iorlw	0
 33439  005D8E  A4D8               	btfss	status,2,c
 33440  005D90  D7FB               	goto	l1757
 33441                           
 33442                           ;flash.c: 201: status = _flash_get_status();
 33443  005D92  EC75  F036         	call	__flash_get_status	;wreg free
 33444  005D96  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 33445  005D9A  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 33446                           
 33447                           ;flash.c: 204: if(status & 0b0000000001000000)
 33448  005D9E  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 33449  005DA0  D002               	goto	l1759
 33450                           
 33451                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 33452  005DA2  0E01               	movlw	1
 33453                           
 33454                           ;flash.c: 208: }
 33455  005DA4  0012               	return	
 33456  005DA6                     l1759:
 33457                           
 33458                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 33459  005DA6  0E00               	movlw	0
 33460  005DA8  0012               	return	
 33461  005DAA                     __end_of__flash_compare_page_to_buffer:
 33462                           	opt stack 0
 33463                           tosu	equ	0xFFF
 33464                           tosh	equ	0xFFE
 33465                           tosl	equ	0xFFD
 33466                           pclath	equ	0xFFA
 33467                           tblptru	equ	0xFF8
 33468                           tblptrh	equ	0xFF7
 33469                           tblptrl	equ	0xFF6
 33470                           tablat	equ	0xFF5
 33471                           prodh	equ	0xFF4
 33472                           prodl	equ	0xFF3
 33473                           intcon	equ	0xFF2
 33474                           intcon2	equ	0xFF1
 33475                           intcon3	equ	0xFF0
 33476                           indf0	equ	0xFEF
 33477                           postinc0	equ	0xFEE
 33478                           fsr0h	equ	0xFEA
 33479                           fsr0l	equ	0xFE9
 33480                           wreg	equ	0xFE8
 33481                           indf1	equ	0xFE7
 33482                           postdec1	equ	0xFE5
 33483                           plusw1	equ	0xFE3
 33484                           fsr1h	equ	0xFE2
 33485                           fsr1l	equ	0xFE1
 33486                           indf2	equ	0xFDF
 33487                           postinc2	equ	0xFDE
 33488                           postdec2	equ	0xFDD
 33489                           plusw2	equ	0xFDB
 33490                           fsr2h	equ	0xFDA
 33491                           fsr2l	equ	0xFD9
 33492                           status	equ	0xFD8
 33493                           
 33494 ;; *************** function __flash_is_busy *****************
 33495 ;; Defined at:
 33496 ;;		line 281 in file "flash.c"
 33497 ;; Parameters:    Size  Location     Type
 33498 ;;		None
 33499 ;; Auto vars:     Size  Location     Type
 33500 ;;  status          2   17[COMRAM] unsigned int 
 33501 ;; Return value:  Size  Location     Type
 33502 ;;                  1    wreg      unsigned char 
 33503 ;; Registers used:
 33504 ;;		wreg, status,2, status,0, cstack
 33505 ;; Tracked objects:
 33506 ;;		On entry : 0/0
 33507 ;;		On exit  : 0/0
 33508 ;;		Unchanged: 0/0
 33509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33511 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33514 ;;Total ram usage:        2 bytes
 33515 ;; Hardware stack levels used:    1
 33516 ;; Hardware stack levels required when called:    2
 33517 ;; This function calls:
 33518 ;;		__flash_get_status
 33519 ;;		__flash_wakeup
 33520 ;; This function is called by:
 33521 ;;		__flash_set_page_size
 33522 ;;		__flash_compare_page_to_buffer
 33523 ;;		__flash_write_to_buffer
 33524 ;;		__flash_write_page_from_buffer
 33525 ;;		__flash_partial_read
 33526 ;;		_flash_is_busy
 33527 ;;		__flash_copy_page_to_buffer
 33528 ;;		__flash_erase_page
 33529 ;;		__flash_buffer_read
 33530 ;;		_flash_set_power_state
 33531 ;;		_flash_partial_write
 33532 ;; This function uses a non-reentrant model
 33533 ;;
 33534                           
 33535                           	psect	text175
 33536  006F7C                     __ptext175:
 33537                           	opt stack 0
 33538  006F7C                     __flash_is_busy:
 33539                           	opt stack 25
 33540                           
 33541                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 33542                           
 33543                           ;incstack = 0
 33544  006F7C  0100               	movlb	0	; () banked
 33545  006F7E  5196               	movf	_power_state& (0+255),w,b
 33546  006F80  A4D8               	btfss	status,2,c
 33547                           
 33548                           ; BSR set to: 0
 33549                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 33550  006F82  ECA6  F032         	call	__flash_wakeup	;wreg free
 33551                           
 33552                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 33553  006F86  EC75  F036         	call	__flash_get_status	;wreg free
 33554  006F8A  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 33555  006F8E  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 33556                           
 33557                           ;flash.c: 295: if(status & 0b0000000010000000)
 33558  006F92  AE12               	btfss	__flash_is_busy@status,7,c
 33559  006F94  D002               	goto	l1787
 33560                           
 33561                           ;flash.c: 296: {;flash.c: 298: return 0;
 33562  006F96  0E00               	movlw	0
 33563                           
 33564                           ;flash.c: 299: }
 33565  006F98  0012               	return	
 33566  006F9A                     l1787:
 33567                           
 33568                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 33569  006F9A  0E01               	movlw	1
 33570  006F9C  0012               	return	
 33571  006F9E                     __end_of__flash_is_busy:
 33572                           	opt stack 0
 33573                           tosu	equ	0xFFF
 33574                           tosh	equ	0xFFE
 33575                           tosl	equ	0xFFD
 33576                           pclath	equ	0xFFA
 33577                           tblptru	equ	0xFF8
 33578                           tblptrh	equ	0xFF7
 33579                           tblptrl	equ	0xFF6
 33580                           tablat	equ	0xFF5
 33581                           prodh	equ	0xFF4
 33582                           prodl	equ	0xFF3
 33583                           intcon	equ	0xFF2
 33584                           intcon2	equ	0xFF1
 33585                           intcon3	equ	0xFF0
 33586                           indf0	equ	0xFEF
 33587                           postinc0	equ	0xFEE
 33588                           fsr0h	equ	0xFEA
 33589                           fsr0l	equ	0xFE9
 33590                           wreg	equ	0xFE8
 33591                           indf1	equ	0xFE7
 33592                           postdec1	equ	0xFE5
 33593                           plusw1	equ	0xFE3
 33594                           fsr1h	equ	0xFE2
 33595                           fsr1l	equ	0xFE1
 33596                           indf2	equ	0xFDF
 33597                           postinc2	equ	0xFDE
 33598                           postdec2	equ	0xFDD
 33599                           plusw2	equ	0xFDB
 33600                           fsr2h	equ	0xFDA
 33601                           fsr2l	equ	0xFD9
 33602                           status	equ	0xFD8
 33603                           
 33604 ;; *************** function __flash_wakeup *****************
 33605 ;; Defined at:
 33606 ;;		line 128 in file "flash.c"
 33607 ;; Parameters:    Size  Location     Type
 33608 ;;		None
 33609 ;; Auto vars:     Size  Location     Type
 33610 ;;  command         1    8[COMRAM] unsigned char 
 33611 ;; Return value:  Size  Location     Type
 33612 ;;                  1    wreg      void 
 33613 ;; Registers used:
 33614 ;;		wreg, status,2, status,0, cstack
 33615 ;; Tracked objects:
 33616 ;;		On entry : 0/0
 33617 ;;		On exit  : 0/0
 33618 ;;		Unchanged: 0/0
 33619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33624 ;;Total ram usage:        1 bytes
 33625 ;; Hardware stack levels used:    1
 33626 ;; Hardware stack levels required when called:    1
 33627 ;; This function calls:
 33628 ;;		_spi_tx
 33629 ;; This function is called by:
 33630 ;;		__flash_is_busy
 33631 ;;		_flash_set_power_state
 33632 ;; This function uses a non-reentrant model
 33633 ;;
 33634                           
 33635                           	psect	text176
 33636  00654C                     __ptext176:
 33637                           	opt stack 0
 33638  00654C                     __flash_wakeup:
 33639                           	opt stack 25
 33640                           
 33641                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 33642                           
 33643                           ;incstack = 0
 33644  00654C  D021               	goto	l1736
 33645  00654E                     
 33646                           ;flash.c: 135: command = 0xAB;
 33647  00654E  0EAB               	movlw	171
 33648  006550  6E09               	movwf	__flash_wakeup@command,c
 33649                           
 33650                           ;flash.c: 136: spi_tx(&command, 1);
 33651  006552  0E09               	movlw	low __flash_wakeup@command
 33652  006554  6E01               	movwf	spi_tx@data,c
 33653  006556  0E00               	movlw	high __flash_wakeup@command
 33654  006558  6E02               	movwf	spi_tx@data+1,c
 33655  00655A  0E00               	movlw	0
 33656  00655C  6E04               	movwf	spi_tx@length+1,c
 33657  00655E  0E01               	movlw	1
 33658  006560  6E03               	movwf	spi_tx@length,c
 33659  006562  ECF9  F031         	call	_spi_tx	;wreg free
 33660                           
 33661                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 33662  006566  0E17               	movlw	23
 33663  006568                     u13157:
 33664  006568  2EE8               	decfsz	wreg,f,c
 33665  00656A  D7FE               	bra	u13157
 33666  00656C  F000               	nop	
 33667                           
 33668                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 33669  00656E  0E00               	movlw	0
 33670  006570  0100               	movlb	0	; () banked
 33671  006572  6F96               	movwf	_power_state& (0+255),b
 33672                           
 33673                           ;flash.c: 139: break;
 33674  006574  0012               	return	
 33675  006576                     l1739:
 33676                           
 33677                           ; BSR set to: 0
 33678                           ;flash.c: 144: LATDbits.LD7 = 0;
 33679  006576  9E8C               	bcf	3980,7,c	;volatile
 33680                           
 33681                           ; BSR set to: 0
 33682                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 33683  006578  0E0D               	movlw	13
 33684  00657A                     u13167:
 33685  00657A  2EE8               	decfsz	wreg,f,c
 33686  00657C  D7FE               	bra	u13167
 33687  00657E  F000               	nop	
 33688                           
 33689                           ;flash.c: 146: LATDbits.LD7 = 1;
 33690  006580  8E8C               	bsf	3980,7,c	;volatile
 33691                           
 33692                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 33693  006582  0E50               	movlw	80
 33694  006584                     u13177:
 33695  006584  2EE8               	decfsz	wreg,f,c
 33696  006586  D7FE               	bra	u13177
 33697                           
 33698                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 33699  006588  0E00               	movlw	0
 33700  00658A  0100               	movlb	0	; () banked
 33701  00658C  6F96               	movwf	_power_state& (0+255),b
 33702                           
 33703                           ; BSR set to: 0
 33704                           ;flash.c: 150: }
 33705                           
 33706                           ;flash.c: 149: break;
 33707  00658E  0012               	return	
 33708  006590                     l1736:
 33709                           
 33710                           ; BSR set to: 0
 33711  006590  0100               	movlb	0	; () banked
 33712  006592  5196               	movf	_power_state& (0+255),w,b
 33713                           
 33714                           ; Switch size 1, requested type "space"
 33715                           ; Number of cases is 2, Range of values is 1 to 2
 33716                           ; switch strategies available:
 33717                           ; Name         Instructions Cycles
 33718                           ; simple_byte            7     4 (average)
 33719                           ;	Chosen strategy is simple_byte
 33720  006594  0A01               	xorlw	1	; case 1
 33721  006596  B4D8               	btfsc	status,2,c
 33722  006598  D7DA               	goto	l1737
 33723  00659A  0A03               	xorlw	3	; case 2
 33724  00659C  A4D8               	btfss	status,2,c
 33725  00659E  0012               	return	
 33726  0065A0  D7EA               	goto	l1739
 33727  0065A2                     __end_of__flash_wakeup:
 33728                           	opt stack 0
 33729                           tosu	equ	0xFFF
 33730                           tosh	equ	0xFFE
 33731                           tosl	equ	0xFFD
 33732                           pclath	equ	0xFFA
 33733                           tblptru	equ	0xFF8
 33734                           tblptrh	equ	0xFF7
 33735                           tblptrl	equ	0xFF6
 33736                           tablat	equ	0xFF5
 33737                           prodh	equ	0xFF4
 33738                           prodl	equ	0xFF3
 33739                           intcon	equ	0xFF2
 33740                           intcon2	equ	0xFF1
 33741                           intcon3	equ	0xFF0
 33742                           indf0	equ	0xFEF
 33743                           postinc0	equ	0xFEE
 33744                           fsr0h	equ	0xFEA
 33745                           fsr0l	equ	0xFE9
 33746                           wreg	equ	0xFE8
 33747                           indf1	equ	0xFE7
 33748                           postdec1	equ	0xFE5
 33749                           plusw1	equ	0xFE3
 33750                           fsr1h	equ	0xFE2
 33751                           fsr1l	equ	0xFE1
 33752                           indf2	equ	0xFDF
 33753                           postinc2	equ	0xFDE
 33754                           postdec2	equ	0xFDD
 33755                           plusw2	equ	0xFDB
 33756                           fsr2h	equ	0xFDA
 33757                           fsr2l	equ	0xFD9
 33758                           status	equ	0xFD8
 33759                           
 33760 ;; *************** function _spi_tx *****************
 33761 ;; Defined at:
 33762 ;;		line 108 in file "spi.c"
 33763 ;; Parameters:    Size  Location     Type
 33764 ;;  data            2    0[COMRAM] PTR unsigned char 
 33765 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 33766 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 33767 ;;  length          2    2[COMRAM] unsigned int 
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;		None
 33770 ;; Return value:  Size  Location     Type
 33771 ;;                  1    wreg      void 
 33772 ;; Registers used:
 33773 ;;		wreg, status,2, status,0
 33774 ;; Tracked objects:
 33775 ;;		On entry : 0/0
 33776 ;;		On exit  : 0/0
 33777 ;;		Unchanged: 0/0
 33778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33781 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33782 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33783 ;;Total ram usage:        8 bytes
 33784 ;; Hardware stack levels used:    1
 33785 ;; This function calls:
 33786 ;;		Nothing
 33787 ;; This function is called by:
 33788 ;;		__flash_set_page_size
 33789 ;;		__flash_wakeup
 33790 ;;		__flash_compare_page_to_buffer
 33791 ;;		__flash_write_page_from_buffer
 33792 ;;		__flash_copy_page_to_buffer
 33793 ;;		__flash_erase_page
 33794 ;;		_flash_set_power_state
 33795 ;; This function uses a non-reentrant model
 33796 ;;
 33797                           
 33798                           	psect	text177
 33799  0063F2                     __ptext177:
 33800                           	opt stack 0
 33801  0063F2                     _spi_tx:
 33802                           	opt stack 27
 33803                           
 33804                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 33805                           
 33806                           ; BSR set to: 0
 33807                           ;incstack = 0
 33808  0063F2  9E88               	bcf	3976,7,c	;volatile
 33809                           
 33810                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 33811  0063F4  9C88               	bcf	3976,6,c	;volatile
 33812                           
 33813                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 33814  0063F6  8A88               	bsf	3976,5,c	;volatile
 33815                           
 33816                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 33817  0063F8  9888               	bcf	3976,4,c	;volatile
 33818                           
 33819                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 33820  0063FA  9688               	bcf	3976,3,c	;volatile
 33821                           
 33822                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 33823  0063FC  8488               	bsf	3976,2,c	;volatile
 33824                           
 33825                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 33826  0063FE  9288               	bcf	3976,1,c	;volatile
 33827                           
 33828                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 33829  006400  9886               	bcf	3974,4,c	;volatile
 33830  006402  9A86               	bcf	3974,5,c	;volatile
 33831  006404  9C86               	bcf	3974,6,c	;volatile
 33832  006406  9E86               	bcf	3974,7,c	;volatile
 33833                           
 33834                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 33835  006408  9086               	bcf	3974,0,c	;volatile
 33836  00640A  9286               	bcf	3974,1,c	;volatile
 33837  00640C  9486               	bcf	3974,2,c	;volatile
 33838  00640E  9686               	bcf	3974,3,c	;volatile
 33839                           
 33840                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33841  006410  5002               	movf	spi_tx@data+1,w,c
 33842  006412  6E6A               	movwf	3946,c	;volatile
 33843                           
 33844                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33845  006414  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 33846                           
 33847                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 33848  006418  0EFF               	movlw	255
 33849  00641A  6E05               	movwf	??_spi_tx& (0+255),c
 33850  00641C  0EFF               	movlw	255
 33851  00641E  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 33852  006420  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 33853  006424  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 33854  006428  5005               	movf	??_spi_tx,w,c
 33855  00642A  2607               	addwf	??_spi_tx+2,f,c
 33856  00642C  5006               	movf	??_spi_tx+1,w,c
 33857  00642E  2208               	addwfc	??_spi_tx+3,f,c
 33858  006430  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 33859  006434  6A08               	clrf	??_spi_tx+3,c
 33860  006436  5007               	movf	??_spi_tx+2,w,c
 33861  006438  6E66               	movwf	3942,c	;volatile
 33862                           
 33863                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 33864  00643A  0403               	decf	spi_tx@length,w,c
 33865  00643C  6E67               	movwf	3943,c	;volatile
 33866                           
 33867                           ;spi.c: 136: LATDbits.LD7 = 0;
 33868  00643E  9E8C               	bcf	3980,7,c	;volatile
 33869                           
 33870                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 33871  006440  8088               	bsf	3976,0,c	;volatile
 33872  006442  B088               	btfsc	3976,0,c	;volatile
 33873  006444  D7FE               	goto	l2792
 33874                           
 33875                           ;spi.c: 139: LATDbits.LD7 = 1;
 33876  006446  8E8C               	bsf	3980,7,c	;volatile
 33877  006448  0012               	return		;funcret
 33878  00644A                     __end_of_spi_tx:
 33879                           	opt stack 0
 33880                           tosu	equ	0xFFF
 33881                           tosh	equ	0xFFE
 33882                           tosl	equ	0xFFD
 33883                           pclath	equ	0xFFA
 33884                           tblptru	equ	0xFF8
 33885                           tblptrh	equ	0xFF7
 33886                           tblptrl	equ	0xFF6
 33887                           tablat	equ	0xFF5
 33888                           prodh	equ	0xFF4
 33889                           prodl	equ	0xFF3
 33890                           intcon	equ	0xFF2
 33891                           intcon2	equ	0xFF1
 33892                           intcon3	equ	0xFF0
 33893                           indf0	equ	0xFEF
 33894                           postinc0	equ	0xFEE
 33895                           fsr0h	equ	0xFEA
 33896                           fsr0l	equ	0xFE9
 33897                           wreg	equ	0xFE8
 33898                           indf1	equ	0xFE7
 33899                           postdec1	equ	0xFE5
 33900                           plusw1	equ	0xFE3
 33901                           fsr1h	equ	0xFE2
 33902                           fsr1l	equ	0xFE1
 33903                           indf2	equ	0xFDF
 33904                           postinc2	equ	0xFDE
 33905                           postdec2	equ	0xFDD
 33906                           plusw2	equ	0xFDB
 33907                           fsr2h	equ	0xFDA
 33908                           fsr2l	equ	0xFD9
 33909                           status	equ	0xFD8
 33910                           
 33911 ;; *************** function __flash_get_status *****************
 33912 ;; Defined at:
 33913 ;;		line 117 in file "flash.c"
 33914 ;; Parameters:    Size  Location     Type
 33915 ;;		None
 33916 ;; Auto vars:     Size  Location     Type
 33917 ;;  status          2   15[COMRAM] unsigned int 
 33918 ;;  command         1   14[COMRAM] unsigned char 
 33919 ;; Return value:  Size  Location     Type
 33920 ;;                  2   12[COMRAM] unsigned int 
 33921 ;; Registers used:
 33922 ;;		wreg, status,2, status,0, cstack
 33923 ;; Tracked objects:
 33924 ;;		On entry : 0/0
 33925 ;;		On exit  : 0/0
 33926 ;;		Unchanged: 0/0
 33927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33932 ;;Total ram usage:        5 bytes
 33933 ;; Hardware stack levels used:    1
 33934 ;; Hardware stack levels required when called:    1
 33935 ;; This function calls:
 33936 ;;		_spi_tx_rx
 33937 ;; This function is called by:
 33938 ;;		__flash_compare_page_to_buffer
 33939 ;;		__flash_is_busy
 33940 ;; This function uses a non-reentrant model
 33941 ;;
 33942                           
 33943                           	psect	text178
 33944  006CEA                     __ptext178:
 33945                           	opt stack 0
 33946  006CEA                     __flash_get_status:
 33947                           	opt stack 25
 33948                           
 33949                           ;flash.c: 121: uint8_t command = 0xD7;
 33950                           
 33951                           ;incstack = 0
 33952  006CEA  0ED7               	movlw	215
 33953  006CEC  6E0F               	movwf	__flash_get_status@command,c
 33954                           
 33955                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 33956  006CEE  0E0F               	movlw	low __flash_get_status@command
 33957  006CF0  6E01               	movwf	spi_tx_rx@command,c
 33958  006CF2  0E00               	movlw	high __flash_get_status@command
 33959  006CF4  6E02               	movwf	spi_tx_rx@command+1,c
 33960  006CF6  0E00               	movlw	0
 33961  006CF8  6E04               	movwf	spi_tx_rx@command_length+1,c
 33962  006CFA  0E01               	movlw	1
 33963  006CFC  6E03               	movwf	spi_tx_rx@command_length,c
 33964  006CFE  0E10               	movlw	low __flash_get_status@status
 33965  006D00  6E05               	movwf	spi_tx_rx@data,c
 33966  006D02  0E00               	movlw	high __flash_get_status@status
 33967  006D04  6E06               	movwf	spi_tx_rx@data+1,c
 33968  006D06  0E00               	movlw	0
 33969  006D08  6E08               	movwf	spi_tx_rx@data_length+1,c
 33970  006D0A  0E02               	movlw	2
 33971  006D0C  6E07               	movwf	spi_tx_rx@data_length,c
 33972  006D0E  ECF2  F02B         	call	_spi_tx_rx	;wreg free
 33973                           
 33974                           ;flash.c: 124: return status;
 33975  006D12  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 33976  006D16  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 33977  006D1A  0012               	return	
 33978  006D1C                     __end_of__flash_get_status:
 33979                           	opt stack 0
 33980                           tosu	equ	0xFFF
 33981                           tosh	equ	0xFFE
 33982                           tosl	equ	0xFFD
 33983                           pclath	equ	0xFFA
 33984                           tblptru	equ	0xFF8
 33985                           tblptrh	equ	0xFF7
 33986                           tblptrl	equ	0xFF6
 33987                           tablat	equ	0xFF5
 33988                           prodh	equ	0xFF4
 33989                           prodl	equ	0xFF3
 33990                           intcon	equ	0xFF2
 33991                           intcon2	equ	0xFF1
 33992                           intcon3	equ	0xFF0
 33993                           indf0	equ	0xFEF
 33994                           postinc0	equ	0xFEE
 33995                           fsr0h	equ	0xFEA
 33996                           fsr0l	equ	0xFE9
 33997                           wreg	equ	0xFE8
 33998                           indf1	equ	0xFE7
 33999                           postdec1	equ	0xFE5
 34000                           plusw1	equ	0xFE3
 34001                           fsr1h	equ	0xFE2
 34002                           fsr1l	equ	0xFE1
 34003                           indf2	equ	0xFDF
 34004                           postinc2	equ	0xFDE
 34005                           postdec2	equ	0xFDD
 34006                           plusw2	equ	0xFDB
 34007                           fsr2h	equ	0xFDA
 34008                           fsr2l	equ	0xFD9
 34009                           status	equ	0xFD8
 34010                           
 34011 ;; *************** function _spi_tx_rx *****************
 34012 ;; Defined at:
 34013 ;;		line 199 in file "spi.c"
 34014 ;; Parameters:    Size  Location     Type
 34015 ;;  command         2    0[COMRAM] PTR unsigned char 
 34016 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 34017 ;;  command_leng    2    2[COMRAM] unsigned int 
 34018 ;;  data            2    4[COMRAM] PTR unsigned char 
 34019 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 34020 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 34021 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 34022 ;;		 -> _flash_get_status@status(2), msd_buffer(512), 
 34023 ;;  data_length     2    6[COMRAM] unsigned int 
 34024 ;; Auto vars:     Size  Location     Type
 34025 ;;		None
 34026 ;; Return value:  Size  Location     Type
 34027 ;;                  1    wreg      void 
 34028 ;; Registers used:
 34029 ;;		wreg, status,2, status,0
 34030 ;; Tracked objects:
 34031 ;;		On entry : 0/0
 34032 ;;		On exit  : 0/0
 34033 ;;		Unchanged: 0/0
 34034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34038 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34039 ;;Total ram usage:       12 bytes
 34040 ;; Hardware stack levels used:    1
 34041 ;; This function calls:
 34042 ;;		Nothing
 34043 ;; This function is called by:
 34044 ;;		__flash_get_status
 34045 ;;		__flash_partial_read
 34046 ;;		__flash_buffer_read
 34047 ;; This function uses a non-reentrant model
 34048 ;;
 34049                           
 34050                           	psect	text179
 34051  0057E4                     __ptext179:
 34052                           	opt stack 0
 34053  0057E4                     _spi_tx_rx:
 34054                           	opt stack 25
 34055                           
 34056                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 34057                           
 34058                           ;incstack = 0
 34059  0057E4  9E88               	bcf	3976,7,c	;volatile
 34060                           
 34061                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 34062  0057E6  9C88               	bcf	3976,6,c	;volatile
 34063                           
 34064                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 34065  0057E8  8A88               	bsf	3976,5,c	;volatile
 34066                           
 34067                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 34068  0057EA  9888               	bcf	3976,4,c	;volatile
 34069                           
 34070                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 34071  0057EC  9688               	bcf	3976,3,c	;volatile
 34072                           
 34073                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 34074  0057EE  8488               	bsf	3976,2,c	;volatile
 34075                           
 34076                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 34077  0057F0  9288               	bcf	3976,1,c	;volatile
 34078                           
 34079                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 34080  0057F2  9886               	bcf	3974,4,c	;volatile
 34081  0057F4  9A86               	bcf	3974,5,c	;volatile
 34082  0057F6  9C86               	bcf	3974,6,c	;volatile
 34083  0057F8  9E86               	bcf	3974,7,c	;volatile
 34084                           
 34085                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 34086  0057FA  9086               	bcf	3974,0,c	;volatile
 34087  0057FC  9286               	bcf	3974,1,c	;volatile
 34088  0057FE  9486               	bcf	3974,2,c	;volatile
 34089  005800  9686               	bcf	3974,3,c	;volatile
 34090                           
 34091                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34092  005802  5002               	movf	spi_tx_rx@command+1,w,c
 34093  005804  6E6A               	movwf	3946,c	;volatile
 34094                           
 34095                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34096  005806  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 34097                           
 34098                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34099  00580A  0EFF               	movlw	255
 34100  00580C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34101  00580E  0EFF               	movlw	255
 34102  005810  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34103  005812  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 34104  005816  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 34105  00581A  5009               	movf	??_spi_tx_rx,w,c
 34106  00581C  260B               	addwf	??_spi_tx_rx+2,f,c
 34107  00581E  500A               	movf	??_spi_tx_rx+1,w,c
 34108  005820  220C               	addwfc	??_spi_tx_rx+3,f,c
 34109  005822  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34110  005826  6A0C               	clrf	??_spi_tx_rx+3,c
 34111  005828  500B               	movf	??_spi_tx_rx+2,w,c
 34112  00582A  6E66               	movwf	3942,c	;volatile
 34113                           
 34114                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34115  00582C  0403               	decf	spi_tx_rx@command_length,w,c
 34116  00582E  6E67               	movwf	3943,c	;volatile
 34117                           
 34118                           ;spi.c: 227: LATDbits.LD7 = 0;
 34119  005830  9E8C               	bcf	3980,7,c	;volatile
 34120                           
 34121                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 34122  005832  8088               	bsf	3976,0,c	;volatile
 34123  005834  B088               	btfsc	3976,0,c	;volatile
 34124  005836  D7FE               	goto	l2807
 34125                           
 34126                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 34127  005838  9A88               	bcf	3976,5,c	;volatile
 34128                           
 34129                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 34130  00583A  8888               	bsf	3976,4,c	;volatile
 34131                           
 34132                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 34133  00583C  9688               	bcf	3976,3,c	;volatile
 34134                           
 34135                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 34136  00583E  9488               	bcf	3976,2,c	;volatile
 34137                           
 34138                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34139  005840  5006               	movf	spi_tx_rx@data+1,w,c
 34140  005842  6E68               	movwf	3944,c	;volatile
 34141                           
 34142                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34143  005844  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 34144                           
 34145                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34146  005848  0EFF               	movlw	255
 34147  00584A  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34148  00584C  0EFF               	movlw	255
 34149  00584E  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34150  005850  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 34151  005854  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 34152  005858  5009               	movf	??_spi_tx_rx,w,c
 34153  00585A  260B               	addwf	??_spi_tx_rx+2,f,c
 34154  00585C  500A               	movf	??_spi_tx_rx+1,w,c
 34155  00585E  220C               	addwfc	??_spi_tx_rx+3,f,c
 34156  005860  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34157  005864  6A0C               	clrf	??_spi_tx_rx+3,c
 34158  005866  500B               	movf	??_spi_tx_rx+2,w,c
 34159  005868  6E66               	movwf	3942,c	;volatile
 34160                           
 34161                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34162  00586A  0407               	decf	spi_tx_rx@data_length,w,c
 34163  00586C  6E67               	movwf	3943,c	;volatile
 34164                           
 34165                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 34166  00586E  8088               	bsf	3976,0,c	;volatile
 34167  005870  B088               	btfsc	3976,0,c	;volatile
 34168  005872  D7FE               	goto	l2810
 34169                           
 34170                           ;spi.c: 254: LATDbits.LD7 = 1;
 34171  005874  8E8C               	bsf	3980,7,c	;volatile
 34172  005876  0012               	return		;funcret
 34173  005878                     __end_of_spi_tx_rx:
 34174                           	opt stack 0
 34175                           tosu	equ	0xFFF
 34176                           tosh	equ	0xFFE
 34177                           tosl	equ	0xFFD
 34178                           pclath	equ	0xFFA
 34179                           tblptru	equ	0xFF8
 34180                           tblptrh	equ	0xFF7
 34181                           tblptrl	equ	0xFF6
 34182                           tablat	equ	0xFF5
 34183                           prodh	equ	0xFF4
 34184                           prodl	equ	0xFF3
 34185                           intcon	equ	0xFF2
 34186                           intcon2	equ	0xFF1
 34187                           intcon3	equ	0xFF0
 34188                           indf0	equ	0xFEF
 34189                           postinc0	equ	0xFEE
 34190                           fsr0h	equ	0xFEA
 34191                           fsr0l	equ	0xFE9
 34192                           wreg	equ	0xFE8
 34193                           indf1	equ	0xFE7
 34194                           postdec1	equ	0xFE5
 34195                           plusw1	equ	0xFE3
 34196                           fsr1h	equ	0xFE2
 34197                           fsr1l	equ	0xFE1
 34198                           indf2	equ	0xFDF
 34199                           postinc2	equ	0xFDE
 34200                           postdec2	equ	0xFDD
 34201                           plusw2	equ	0xFDB
 34202                           fsr2h	equ	0xFDA
 34203                           fsr2l	equ	0xFD9
 34204                           status	equ	0xFD8
 34205                           
 34206 ;; *************** function __get_root *****************
 34207 ;; Defined at:
 34208 ;;		line 1210 in file "fat16.c"
 34209 ;; Parameters:    Size  Location     Type
 34210 ;;  idx             2    0[COMRAM] unsigned int 
 34211 ;; Auto vars:     Size  Location     Type
 34212 ;;		None
 34213 ;; Return value:  Size  Location     Type
 34214 ;;                  1    wreg      unsigned char 
 34215 ;; Registers used:
 34216 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34217 ;; Tracked objects:
 34218 ;;		On entry : 0/0
 34219 ;;		On exit  : 0/0
 34220 ;;		Unchanged: 0/0
 34221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34224 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34226 ;;Total ram usage:        6 bytes
 34227 ;; Hardware stack levels used:    1
 34228 ;; This function calls:
 34229 ;;		Nothing
 34230 ;; This function is called by:
 34231 ;;		_fat_format
 34232 ;; This function uses a non-reentrant model
 34233 ;;
 34234                           
 34235                           	psect	text180
 34236  002984                     __ptext180:
 34237                           	opt stack 0
 34238  002984                     __get_root:
 34239                           	opt stack 27
 34240                           
 34241                           ;fat16.c: 1212: if(idx < 0x20)
 34242                           
 34243                           ;incstack = 0
 34244  002984  5002               	movf	__get_root@idx+1,w,c
 34245  002986  E11D               	bnz	l11515
 34246  002988  0E20               	movlw	32
 34247  00298A  5C01               	subwf	__get_root@idx,w,c
 34248  00298C  B0D8               	btfsc	status,0,c
 34249  00298E  D019               	goto	l2213
 34250                           
 34251                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 34252  002990  5002               	movf	__get_root@idx+1,w,c
 34253  002992  E110               	bnz	l11509
 34254  002994  0E0B               	movlw	11
 34255  002996  5C01               	subwf	__get_root@idx,w,c
 34256  002998  B0D8               	btfsc	status,0,c
 34257  00299A  D00C               	goto	l2211
 34258                           
 34259                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
 34260  00299C  0EDC               	movlw	low STR_9
 34261  00299E  2401               	addwf	__get_root@idx,w,c
 34262  0029A0  6EF6               	movwf	tblptrl,c
 34263  0029A2  0E8F               	movlw	high STR_9
 34264  0029A4  2002               	addwfc	__get_root@idx+1,w,c
 34265  0029A6  6EF7               	movwf	tblptrh,c
 34266  0029A8                     	if	1	;There are 3 active tblptr bytes
 34267  0029A8  6AF8               	clrf	tblptru,c
 34268  0029AA  0E00               	movlw	low (__mediumconst shr (0+16))
 34269  0029AC  22F8               	addwfc	tblptru,f,c
 34270  0029AE                     	endif
 34271  0029AE  0008               	tblrd		*
 34272  0029B0  50F5               	movf	tablat,w,c
 34273  0029B2  0012               	return	
 34274  0029B4                     l2211:
 34275  0029B4                     l11509:
 34276                           
 34277                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 34278  0029B4  0E0B               	movlw	11
 34279  0029B6  1801               	xorwf	__get_root@idx,w,c
 34280  0029B8  1002               	iorwf	__get_root@idx+1,w,c
 34281  0029BA  A4D8               	btfss	status,2,c
 34282  0029BC  D002               	goto	l2213
 34283                           
 34284                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 34285  0029BE  0E08               	movlw	8
 34286  0029C0  0012               	return	
 34287  0029C2                     l2213:
 34288  0029C2                     l11515:
 34289                           
 34290                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 34291  0029C2  5002               	movf	__get_root@idx+1,w,c
 34292  0029C4  E103               	bnz	u8701
 34293  0029C6  0E40               	movlw	64
 34294  0029C8  5C01               	subwf	__get_root@idx,w,c
 34295  0029CA  B0D8               	btfsc	status,0,c
 34296  0029CC                     u8701:
 34297  0029CC  D0A4               	goto	l2239
 34298                           
 34299                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 34300  0029CE  0E20               	movlw	32
 34301  0029D0  5E01               	subwf	__get_root@idx,f,c
 34302  0029D2  0E00               	movlw	0
 34303  0029D4  5A02               	subwfb	__get_root@idx+1,f,c
 34304                           
 34305                           ;fat16.c: 1226: if(idx < 0+8)
 34306  0029D6  5002               	movf	__get_root@idx+1,w,c
 34307  0029D8  E110               	bnz	l11523
 34308  0029DA  0E08               	movlw	8
 34309  0029DC  5C01               	subwf	__get_root@idx,w,c
 34310  0029DE  B0D8               	btfsc	status,0,c
 34311  0029E0  D00C               	goto	l2215
 34312                           
 34313                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 34314  0029E2  0EE8               	movlw	low STR_10
 34315  0029E4  2401               	addwf	__get_root@idx,w,c
 34316  0029E6  6EF6               	movwf	tblptrl,c
 34317  0029E8  0E8F               	movlw	high STR_10
 34318  0029EA  2002               	addwfc	__get_root@idx+1,w,c
 34319  0029EC  6EF7               	movwf	tblptrh,c
 34320  0029EE                     	if	1	;There are 3 active tblptr bytes
 34321  0029EE  6AF8               	clrf	tblptru,c
 34322  0029F0  0E00               	movlw	low (__mediumconst shr (0+16))
 34323  0029F2  22F8               	addwfc	tblptru,f,c
 34324  0029F4                     	endif
 34325  0029F4  0008               	tblrd		*
 34326  0029F6  50F5               	movf	tablat,w,c
 34327  0029F8  0012               	return	
 34328  0029FA                     l2215:
 34329  0029FA                     l11523:
 34330                           
 34331                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 34332  0029FA  5002               	movf	__get_root@idx+1,w,c
 34333  0029FC  E146               	bnz	l11615
 34334  0029FE  0E0B               	movlw	11
 34335  002A00  5C01               	subwf	__get_root@idx,w,c
 34336  002A02  B0D8               	btfsc	status,0,c
 34337  002A04  D042               	goto	l2217
 34338                           
 34339                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 34340  002A06  0EF8               	movlw	248
 34341  002A08  6E03               	movwf	??__get_root& (0+255),c
 34342  002A0A  0EFF               	movlw	255
 34343  002A0C  6E04               	movwf	(??__get_root+1)& (0+255),c
 34344  002A0E  C001  F005         	movff	__get_root@idx,??__get_root+2
 34345  002A12  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 34346  002A16  5003               	movf	??__get_root,w,c
 34347  002A18  2605               	addwf	??__get_root+2,f,c
 34348  002A1A  5004               	movf	??__get_root+1,w,c
 34349  002A1C  2206               	addwfc	??__get_root+3,f,c
 34350  002A1E  0EFA               	movlw	low STR_11
 34351  002A20  2405               	addwf	??__get_root+2,w,c
 34352  002A22  6EF6               	movwf	tblptrl,c
 34353  002A24  0E8F               	movlw	high STR_11
 34354  002A26  2006               	addwfc	??__get_root+3,w,c
 34355  002A28  6EF7               	movwf	tblptrh,c
 34356  002A2A                     	if	1	;There are 3 active tblptr bytes
 34357  002A2A  6AF8               	clrf	tblptru,c
 34358  002A2C  0E00               	movlw	low (__mediumconst shr (0+16))
 34359  002A2E  22F8               	addwfc	tblptru,f,c
 34360  002A30                     	endif
 34361  002A30  0008               	tblrd		*
 34362  002A32  50F5               	movf	tablat,w,c
 34363  002A34  0012               	return	
 34364  002A36                     
 34365                           ;fat16.c: 1237: return 0x20;
 34366  002A36  0E20               	movlw	32
 34367  002A38  0012               	return	
 34368  002A3A                     
 34369                           ;fat16.c: 1239: return 0x06;
 34370  002A3A  0E06               	movlw	6
 34371  002A3C  0012               	return	
 34372  002A3E                     
 34373                           ;fat16.c: 1241: return 0x28;
 34374  002A3E  0E28               	movlw	40
 34375  002A40  0012               	return	
 34376  002A42                     
 34377                           ;fat16.c: 1243: return 0x78;
 34378  002A42  0E78               	movlw	120
 34379  002A44  0012               	return	
 34380  002A46                     
 34381                           ;fat16.c: 1245: return 0xDE;
 34382  002A46  0EDE               	movlw	222
 34383  002A48  0012               	return	
 34384  002A4A                     
 34385                           ;fat16.c: 1247: return 0x38;
 34386  002A4A  0E38               	movlw	56
 34387  002A4C  0012               	return	
 34388  002A4E                     
 34389                           ;fat16.c: 1249: return 0x5F;
 34390  002A4E  0E5F               	movlw	95
 34391  002A50  0012               	return	
 34392  002A52                     
 34393                           ;fat16.c: 1251: return 0x4B;
 34394  002A52  0E4B               	movlw	75
 34395  002A54  0012               	return	
 34396  002A56                     
 34397                           ;fat16.c: 1253: return 0x00;
 34398  002A56  0E00               	movlw	0
 34399  002A58  0012               	return	
 34400  002A5A                     
 34401                           ;fat16.c: 1255: return 0x00;
 34402  002A5A  0E00               	movlw	0
 34403  002A5C  0012               	return	
 34404  002A5E                     
 34405                           ;fat16.c: 1257: return 0x04;
 34406  002A5E  0E04               	movlw	4
 34407  002A60  0012               	return	
 34408  002A62                     
 34409                           ;fat16.c: 1259: return 0x77;
 34410  002A62  0E77               	movlw	119
 34411  002A64  0012               	return	
 34412  002A66                     
 34413                           ;fat16.c: 1261: return 0xDE;
 34414  002A66  0EDE               	movlw	222
 34415  002A68  0012               	return	
 34416  002A6A                     
 34417                           ;fat16.c: 1263: return 0x38;
 34418  002A6A  0E38               	movlw	56
 34419  002A6C  0012               	return	
 34420  002A6E                     
 34421                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 34422  002A6E  0E02               	movlw	2
 34423  002A70  0012               	return	
 34424  002A72                     
 34425                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 34426  002A72  0E00               	movlw	0
 34427  002A74  0012               	return	
 34428  002A76                     
 34429                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 34430  002A76  0E0C               	movlw	12
 34431  002A78  0012               	return	
 34432  002A7A                     
 34433                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 34434  002A7A  0E00               	movlw	0
 34435  002A7C  0012               	return	
 34436  002A7E                     
 34437                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 34438  002A7E  0E00               	movlw	0
 34439  002A80  0012               	return	
 34440  002A82                     
 34441                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34442  002A82  0E00               	movlw	0
 34443  002A84  0012               	return	
 34444  002A86                     
 34445                           ;fat16.c: 1277: return 0x00;
 34446  002A86  0E00               	movlw	0
 34447  002A88  0012               	return	
 34448  002A8A                     l2217:
 34449  002A8A                     l11615:
 34450  002A8A  C001  F003         	movff	__get_root@idx,??__get_root
 34451  002A8E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 34452                           
 34453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34454                           ; Switch size 1, requested type "space"
 34455                           ; Number of cases is 1, Range of values is 0 to 0
 34456                           ; switch strategies available:
 34457                           ; Name         Instructions Cycles
 34458                           ; simple_byte            4     3 (average)
 34459                           ;	Chosen strategy is simple_byte
 34460  002A92  5004               	movf	??__get_root+1,w,c
 34461  002A94  0A00               	xorlw	0	; case 0
 34462  002A96  A4D8               	btfss	status,2,c
 34463  002A98  D7F6               	goto	l2238
 34464                           
 34465                           ; Switch size 1, requested type "space"
 34466                           ; Number of cases is 20, Range of values is 11 to 31
 34467                           ; switch strategies available:
 34468                           ; Name         Instructions Cycles
 34469                           ; simple_byte           61    31 (average)
 34470                           ;	Chosen strategy is simple_byte
 34471  002A9A  5003               	movf	??__get_root,w,c
 34472  002A9C  0A0B               	xorlw	11	; case 11
 34473  002A9E  B4D8               	btfsc	status,2,c
 34474  002AA0  D7CA               	goto	l2218
 34475  002AA2  0A06               	xorlw	6	; case 13
 34476  002AA4  B4D8               	btfsc	status,2,c
 34477  002AA6  D7C9               	goto	l2219
 34478  002AA8  0A03               	xorlw	3	; case 14
 34479  002AAA  B4D8               	btfsc	status,2,c
 34480  002AAC  D7C8               	goto	l2220
 34481  002AAE  0A01               	xorlw	1	; case 15
 34482  002AB0  B4D8               	btfsc	status,2,c
 34483  002AB2  D7C7               	goto	l2221
 34484  002AB4  0A1F               	xorlw	31	; case 16
 34485  002AB6  B4D8               	btfsc	status,2,c
 34486  002AB8  D7C6               	goto	l2222
 34487  002ABA  0A01               	xorlw	1	; case 17
 34488  002ABC  B4D8               	btfsc	status,2,c
 34489  002ABE  D7C5               	goto	l2223
 34490  002AC0  0A03               	xorlw	3	; case 18
 34491  002AC2  B4D8               	btfsc	status,2,c
 34492  002AC4  D7C4               	goto	l2224
 34493  002AC6  0A01               	xorlw	1	; case 19
 34494  002AC8  B4D8               	btfsc	status,2,c
 34495  002ACA  D7C3               	goto	l2225
 34496  002ACC  0A07               	xorlw	7	; case 20
 34497  002ACE  B4D8               	btfsc	status,2,c
 34498  002AD0  D7C2               	goto	l2226
 34499  002AD2  0A01               	xorlw	1	; case 21
 34500  002AD4  B4D8               	btfsc	status,2,c
 34501  002AD6  D7C1               	goto	l2227
 34502  002AD8  0A03               	xorlw	3	; case 22
 34503  002ADA  B4D8               	btfsc	status,2,c
 34504  002ADC  D7C0               	goto	l2228
 34505  002ADE  0A01               	xorlw	1	; case 23
 34506  002AE0  B4D8               	btfsc	status,2,c
 34507  002AE2  D7BF               	goto	l2229
 34508  002AE4  0A0F               	xorlw	15	; case 24
 34509  002AE6  B4D8               	btfsc	status,2,c
 34510  002AE8  D7BE               	goto	l2230
 34511  002AEA  0A01               	xorlw	1	; case 25
 34512  002AEC  B4D8               	btfsc	status,2,c
 34513  002AEE  D7BD               	goto	l2231
 34514  002AF0  0A03               	xorlw	3	; case 26
 34515  002AF2  B4D8               	btfsc	status,2,c
 34516  002AF4  D7BC               	goto	l2232
 34517  002AF6  0A01               	xorlw	1	; case 27
 34518  002AF8  B4D8               	btfsc	status,2,c
 34519  002AFA  D7BB               	goto	l2233
 34520  002AFC  0A07               	xorlw	7	; case 28
 34521  002AFE  B4D8               	btfsc	status,2,c
 34522  002B00  D7BA               	goto	l2234
 34523  002B02  0A01               	xorlw	1	; case 29
 34524  002B04  B4D8               	btfsc	status,2,c
 34525  002B06  D7B9               	goto	l2235
 34526  002B08  0A03               	xorlw	3	; case 30
 34527  002B0A  B4D8               	btfsc	status,2,c
 34528  002B0C  D7B8               	goto	l2236
 34529  002B0E  0A01               	xorlw	1	; case 31
 34530  002B10  B4D8               	btfsc	status,2,c
 34531  002B12  D7B7               	goto	l2237
 34532  002B14  D7B8               	goto	l2238
 34533  002B16                     l2239:
 34534                           
 34535                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 34536  002B16  0E00               	movlw	0
 34537  002B18  0012               	return	
 34538  002B1A                     __end_of__get_root:
 34539                           	opt stack 0
 34540                           tosu	equ	0xFFF
 34541                           tosh	equ	0xFFE
 34542                           tosl	equ	0xFFD
 34543                           pclath	equ	0xFFA
 34544                           tblptru	equ	0xFF8
 34545                           tblptrh	equ	0xFF7
 34546                           tblptrl	equ	0xFF6
 34547                           tablat	equ	0xFF5
 34548                           prodh	equ	0xFF4
 34549                           prodl	equ	0xFF3
 34550                           intcon	equ	0xFF2
 34551                           intcon2	equ	0xFF1
 34552                           intcon3	equ	0xFF0
 34553                           indf0	equ	0xFEF
 34554                           postinc0	equ	0xFEE
 34555                           fsr0h	equ	0xFEA
 34556                           fsr0l	equ	0xFE9
 34557                           wreg	equ	0xFE8
 34558                           indf1	equ	0xFE7
 34559                           postdec1	equ	0xFE5
 34560                           plusw1	equ	0xFE3
 34561                           fsr1h	equ	0xFE2
 34562                           fsr1l	equ	0xFE1
 34563                           indf2	equ	0xFDF
 34564                           postinc2	equ	0xFDE
 34565                           postdec2	equ	0xFDD
 34566                           plusw2	equ	0xFDB
 34567                           fsr2h	equ	0xFDA
 34568                           fsr2l	equ	0xFD9
 34569                           status	equ	0xFD8
 34570                           
 34571 ;; *************** function __get_mbr *****************
 34572 ;; Defined at:
 34573 ;;		line 1037 in file "fat16.c"
 34574 ;; Parameters:    Size  Location     Type
 34575 ;;  idx             2    0[COMRAM] unsigned int 
 34576 ;; Auto vars:     Size  Location     Type
 34577 ;;		None
 34578 ;; Return value:  Size  Location     Type
 34579 ;;                  1    wreg      unsigned char 
 34580 ;; Registers used:
 34581 ;;		wreg, status,2, status,0
 34582 ;; Tracked objects:
 34583 ;;		On entry : 0/0
 34584 ;;		On exit  : 0/0
 34585 ;;		Unchanged: 0/0
 34586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34591 ;;Total ram usage:        4 bytes
 34592 ;; Hardware stack levels used:    1
 34593 ;; This function calls:
 34594 ;;		Nothing
 34595 ;; This function is called by:
 34596 ;;		_fat_get_format_status
 34597 ;;		_fat_format
 34598 ;; This function uses a non-reentrant model
 34599 ;;
 34600                           
 34601                           	psect	text181
 34602  004B12                     __ptext181:
 34603                           	opt stack 0
 34604  004B12                     __get_mbr:
 34605                           	opt stack 27
 34606                           
 34607                           ;fat16.c: 1039: switch (idx)
 34608                           
 34609                           ;incstack = 0
 34610  004B12  D026               	goto	l2120
 34611  004B14                     
 34612                           ;fat16.c: 1042: return 0x80;
 34613  004B14  0E80               	movlw	128
 34614  004B16  0012               	return	
 34615  004B18                     
 34616                           ;fat16.c: 1044: return 0;
 34617  004B18  0E00               	movlw	0
 34618  004B1A  0012               	return	
 34619  004B1C                     
 34620                           ;fat16.c: 1046: return 2;
 34621  004B1C  0E02               	movlw	2
 34622  004B1E  0012               	return	
 34623  004B20                     
 34624                           ;fat16.c: 1048: return 0;
 34625  004B20  0E00               	movlw	0
 34626  004B22  0012               	return	
 34627  004B24                     
 34628                           ;fat16.c: 1050: return 0x04;
 34629  004B24  0E04               	movlw	4
 34630  004B26  0012               	return	
 34631  004B28                     
 34632                           ;fat16.c: 1052: return 2;
 34633  004B28  0E02               	movlw	2
 34634  004B2A  0012               	return	
 34635  004B2C                     
 34636                           ;fat16.c: 1054: return 3;
 34637  004B2C  0E03               	movlw	3
 34638  004B2E  0012               	return	
 34639  004B30                     
 34640                           ;fat16.c: 1056: return 8;
 34641  004B30  0E08               	movlw	8
 34642  004B32  0012               	return	
 34643  004B34                     
 34644                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 34645  004B34  0E01               	movlw	1
 34646  004B36  0012               	return	
 34647  004B38                     
 34648                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 34649  004B38  0E00               	movlw	0
 34650  004B3A  0012               	return	
 34651  004B3C                     
 34652                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 34653  004B3C  0E00               	movlw	0
 34654  004B3E  0012               	return	
 34655  004B40                     
 34656                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34657  004B40  0E00               	movlw	0
 34658  004B42  0012               	return	
 34659  004B44                     
 34660                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 34661  004B44  0EFF               	movlw	255
 34662  004B46  0012               	return	
 34663  004B48                     
 34664                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 34665  004B48  0E1F               	movlw	31
 34666  004B4A  0012               	return	
 34667  004B4C                     
 34668                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 34669  004B4C  0E00               	movlw	0
 34670  004B4E  0012               	return	
 34671  004B50                     
 34672                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 34673  004B50  0E00               	movlw	0
 34674  004B52  0012               	return	
 34675  004B54                     
 34676                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 34677  004B54  0E55               	movlw	85
 34678  004B56  0012               	return	
 34679  004B58                     
 34680                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 34681  004B58  0EAA               	movlw	170
 34682  004B5A  0012               	return	
 34683  004B5C                     
 34684                           ;fat16.c: 1078: return 0X00;
 34685  004B5C  0E00               	movlw	0
 34686                           
 34687                           ;fat16.c: 1079: }
 34688  004B5E  0012               	return	
 34689  004B60                     l2120:
 34690  004B60  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 34691  004B64  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 34692                           
 34693                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34694                           ; Switch size 1, requested type "space"
 34695                           ; Number of cases is 1, Range of values is 1 to 1
 34696                           ; switch strategies available:
 34697                           ; Name         Instructions Cycles
 34698                           ; simple_byte            4     3 (average)
 34699                           ;	Chosen strategy is simple_byte
 34700  004B68  5004               	movf	??__get_mbr+1,w,c
 34701  004B6A  0A01               	xorlw	1	; case 1
 34702  004B6C  A4D8               	btfss	status,2,c
 34703  004B6E  D7F6               	goto	l2140
 34704                           
 34705                           ; Switch size 1, requested type "space"
 34706                           ; Number of cases is 18, Range of values is 190 to 255
 34707                           ; switch strategies available:
 34708                           ; Name         Instructions Cycles
 34709                           ; simple_byte           55    28 (average)
 34710                           ;	Chosen strategy is simple_byte
 34711  004B70  5003               	movf	??__get_mbr,w,c
 34712  004B72  0ABE               	xorlw	190	; case 190
 34713  004B74  B4D8               	btfsc	status,2,c
 34714  004B76  D7CE               	goto	l2121
 34715  004B78  0A01               	xorlw	1	; case 191
 34716  004B7A  B4D8               	btfsc	status,2,c
 34717  004B7C  D7CD               	goto	l2123
 34718  004B7E  0A7F               	xorlw	127	; case 192
 34719  004B80  B4D8               	btfsc	status,2,c
 34720  004B82  D7CC               	goto	l2124
 34721  004B84  0A01               	xorlw	1	; case 193
 34722  004B86  B4D8               	btfsc	status,2,c
 34723  004B88  D7CB               	goto	l2125
 34724  004B8A  0A03               	xorlw	3	; case 194
 34725  004B8C  B4D8               	btfsc	status,2,c
 34726  004B8E  D7CA               	goto	l2126
 34727  004B90  0A01               	xorlw	1	; case 195
 34728  004B92  B4D8               	btfsc	status,2,c
 34729  004B94  D7C9               	goto	l2127
 34730  004B96  0A07               	xorlw	7	; case 196
 34731  004B98  B4D8               	btfsc	status,2,c
 34732  004B9A  D7C8               	goto	l2128
 34733  004B9C  0A01               	xorlw	1	; case 197
 34734  004B9E  B4D8               	btfsc	status,2,c
 34735  004BA0  D7C7               	goto	l2129
 34736  004BA2  0A03               	xorlw	3	; case 198
 34737  004BA4  B4D8               	btfsc	status,2,c
 34738  004BA6  D7C6               	goto	l2130
 34739  004BA8  0A01               	xorlw	1	; case 199
 34740  004BAA  B4D8               	btfsc	status,2,c
 34741  004BAC  D7C5               	goto	l2131
 34742  004BAE  0A0F               	xorlw	15	; case 200
 34743  004BB0  B4D8               	btfsc	status,2,c
 34744  004BB2  D7C4               	goto	l2132
 34745  004BB4  0A01               	xorlw	1	; case 201
 34746  004BB6  B4D8               	btfsc	status,2,c
 34747  004BB8  D7C3               	goto	l2133
 34748  004BBA  0A03               	xorlw	3	; case 202
 34749  004BBC  B4D8               	btfsc	status,2,c
 34750  004BBE  D7C2               	goto	l2134
 34751  004BC0  0A01               	xorlw	1	; case 203
 34752  004BC2  B4D8               	btfsc	status,2,c
 34753  004BC4  D7C1               	goto	l2135
 34754  004BC6  0A07               	xorlw	7	; case 204
 34755  004BC8  B4D8               	btfsc	status,2,c
 34756  004BCA  D7C0               	goto	l2136
 34757  004BCC  0A01               	xorlw	1	; case 205
 34758  004BCE  B4D8               	btfsc	status,2,c
 34759  004BD0  D7BF               	goto	l2137
 34760  004BD2  0A33               	xorlw	51	; case 254
 34761  004BD4  B4D8               	btfsc	status,2,c
 34762  004BD6  D7BE               	goto	l2138
 34763  004BD8  0A01               	xorlw	1	; case 255
 34764  004BDA  B4D8               	btfsc	status,2,c
 34765  004BDC  D7BD               	goto	l2139
 34766  004BDE  D7BE               	goto	l2140
 34767  004BE0                     __end_of__get_mbr:
 34768                           	opt stack 0
 34769                           tosu	equ	0xFFF
 34770                           tosh	equ	0xFFE
 34771                           tosl	equ	0xFFD
 34772                           pclath	equ	0xFFA
 34773                           tblptru	equ	0xFF8
 34774                           tblptrh	equ	0xFF7
 34775                           tblptrl	equ	0xFF6
 34776                           tablat	equ	0xFF5
 34777                           prodh	equ	0xFF4
 34778                           prodl	equ	0xFF3
 34779                           intcon	equ	0xFF2
 34780                           intcon2	equ	0xFF1
 34781                           intcon3	equ	0xFF0
 34782                           indf0	equ	0xFEF
 34783                           postinc0	equ	0xFEE
 34784                           fsr0h	equ	0xFEA
 34785                           fsr0l	equ	0xFE9
 34786                           wreg	equ	0xFE8
 34787                           indf1	equ	0xFE7
 34788                           postdec1	equ	0xFE5
 34789                           plusw1	equ	0xFE3
 34790                           fsr1h	equ	0xFE2
 34791                           fsr1l	equ	0xFE1
 34792                           indf2	equ	0xFDF
 34793                           postinc2	equ	0xFDE
 34794                           postdec2	equ	0xFDD
 34795                           plusw2	equ	0xFDB
 34796                           fsr2h	equ	0xFDA
 34797                           fsr2l	equ	0xFD9
 34798                           status	equ	0xFD8
 34799                           
 34800 ;; *************** function __get_fbr *****************
 34801 ;; Defined at:
 34802 ;;		line 1082 in file "fat16.c"
 34803 ;; Parameters:    Size  Location     Type
 34804 ;;  idx             2    0[COMRAM] unsigned int 
 34805 ;; Auto vars:     Size  Location     Type
 34806 ;;		None
 34807 ;; Return value:  Size  Location     Type
 34808 ;;                  1    wreg      unsigned char 
 34809 ;; Registers used:
 34810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34811 ;; Tracked objects:
 34812 ;;		On entry : 0/0
 34813 ;;		On exit  : 0/0
 34814 ;;		Unchanged: 0/0
 34815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34820 ;;Total ram usage:        4 bytes
 34821 ;; Hardware stack levels used:    1
 34822 ;; This function calls:
 34823 ;;		Nothing
 34824 ;; This function is called by:
 34825 ;;		_fat_get_format_status
 34826 ;;		_fat_format
 34827 ;; This function uses a non-reentrant model
 34828 ;;
 34829                           
 34830                           	psect	text182
 34831  00175A                     __ptext182:
 34832                           	opt stack 0
 34833  00175A                     __get_fbr:
 34834                           	opt stack 27
 34835                           
 34836                           ;fat16.c: 1084: switch (idx)
 34837                           
 34838                           ;incstack = 0
 34839  00175A  D091               	goto	l2144
 34840  00175C                     
 34841                           ;fat16.c: 1087: return 0xEB;
 34842  00175C  0EEB               	movlw	235
 34843  00175E  0012               	return	
 34844  001760                     
 34845                           ;fat16.c: 1089: return 0x3C;
 34846  001760  0E3C               	movlw	60
 34847  001762  0012               	return	
 34848  001764                     
 34849                           ;fat16.c: 1091: return 0x90;
 34850  001764  0E90               	movlw	144
 34851  001766  0012               	return	
 34852  001768                     
 34853                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 34854  001768  0EF1               	movlw	low STR_1
 34855  00176A  6EF6               	movwf	tblptrl,c
 34856  00176C                     	if	1	;There is more than 1 active tblptr byte
 34857  00176C  0E8F               	movlw	high STR_1
 34858  00176E  6EF7               	movwf	tblptrh,c
 34859  001770                     	endif
 34860  001770                     	if	1	;There are 3 active tblptr bytes
 34861  001770  0E00               	movlw	low (STR_1 shr (0+16))
 34862  001772  6EF8               	movwf	tblptru,c
 34863  001774                     	endif
 34864  001774  0008               	tblrd		*
 34865  001776  50F5               	movf	tablat,w,c
 34866  001778  0012               	return	
 34867  00177A                     
 34868                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 34869  00177A  0EF2               	movlw	low (STR_1+1)
 34870  00177C  6EF6               	movwf	tblptrl,c
 34871  00177E  0E8F               	movlw	high (STR_1+1)
 34872  001780  6EF7               	movwf	tblptrh,c
 34873  001782                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34874  001782  6AF8               	clrf	tblptru,c
 34875  001784                     	endif
 34876  001784                     	if	0	;tblptru may be non-zero
 34877  001784                     	endif
 34878  001784  0008               	tblrd		*
 34879  001786  50F5               	movf	tablat,w,c
 34880  001788  0012               	return	
 34881  00178A                     
 34882                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 34883  00178A  0EF3               	movlw	low (STR_1+2)
 34884  00178C  6EF6               	movwf	tblptrl,c
 34885  00178E  0E8F               	movlw	high (STR_1+2)
 34886  001790  6EF7               	movwf	tblptrh,c
 34887  001792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34888  001792  6AF8               	clrf	tblptru,c
 34889  001794                     	endif
 34890  001794                     	if	0	;tblptru may be non-zero
 34891  001794                     	endif
 34892  001794  0008               	tblrd		*
 34893  001796  50F5               	movf	tablat,w,c
 34894  001798  0012               	return	
 34895  00179A                     
 34896                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 34897  00179A  0EF4               	movlw	low (STR_1+3)
 34898  00179C  6EF6               	movwf	tblptrl,c
 34899  00179E  0E8F               	movlw	high (STR_1+3)
 34900  0017A0  6EF7               	movwf	tblptrh,c
 34901  0017A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34902  0017A2  6AF8               	clrf	tblptru,c
 34903  0017A4                     	endif
 34904  0017A4                     	if	0	;tblptru may be non-zero
 34905  0017A4                     	endif
 34906  0017A4  0008               	tblrd		*
 34907  0017A6  50F5               	movf	tablat,w,c
 34908  0017A8  0012               	return	
 34909  0017AA                     
 34910                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 34911  0017AA  0EF5               	movlw	low (STR_1+4)
 34912  0017AC  6EF6               	movwf	tblptrl,c
 34913  0017AE  0E8F               	movlw	high (STR_1+4)
 34914  0017B0  6EF7               	movwf	tblptrh,c
 34915  0017B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34916  0017B2  6AF8               	clrf	tblptru,c
 34917  0017B4                     	endif
 34918  0017B4                     	if	0	;tblptru may be non-zero
 34919  0017B4                     	endif
 34920  0017B4  0008               	tblrd		*
 34921  0017B6  50F5               	movf	tablat,w,c
 34922  0017B8  0012               	return	
 34923  0017BA                     
 34924                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 34925  0017BA  0EF6               	movlw	low (STR_1+5)
 34926  0017BC  6EF6               	movwf	tblptrl,c
 34927  0017BE  0E8F               	movlw	high (STR_1+5)
 34928  0017C0  6EF7               	movwf	tblptrh,c
 34929  0017C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34930  0017C2  6AF8               	clrf	tblptru,c
 34931  0017C4                     	endif
 34932  0017C4                     	if	0	;tblptru may be non-zero
 34933  0017C4                     	endif
 34934  0017C4  0008               	tblrd		*
 34935  0017C6  50F5               	movf	tablat,w,c
 34936  0017C8  0012               	return	
 34937  0017CA                     
 34938                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 34939  0017CA  0EF7               	movlw	low (STR_1+6)
 34940  0017CC  6EF6               	movwf	tblptrl,c
 34941  0017CE  0E8F               	movlw	high (STR_1+6)
 34942  0017D0  6EF7               	movwf	tblptrh,c
 34943  0017D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34944  0017D2  6AF8               	clrf	tblptru,c
 34945  0017D4                     	endif
 34946  0017D4                     	if	0	;tblptru may be non-zero
 34947  0017D4                     	endif
 34948  0017D4  0008               	tblrd		*
 34949  0017D6  50F5               	movf	tablat,w,c
 34950  0017D8  0012               	return	
 34951  0017DA                     
 34952                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 34953  0017DA  0EF8               	movlw	low (STR_1+7)
 34954  0017DC  6EF6               	movwf	tblptrl,c
 34955  0017DE  0E8F               	movlw	high (STR_1+7)
 34956  0017E0  6EF7               	movwf	tblptrh,c
 34957  0017E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34958  0017E2  6AF8               	clrf	tblptru,c
 34959  0017E4                     	endif
 34960  0017E4                     	if	0	;tblptru may be non-zero
 34961  0017E4                     	endif
 34962  0017E4  0008               	tblrd		*
 34963  0017E6  50F5               	movf	tablat,w,c
 34964  0017E8  0012               	return	
 34965  0017EA                     
 34966                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 34967  0017EA  0E00               	movlw	0
 34968  0017EC  0012               	return	
 34969  0017EE                     
 34970                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 34971  0017EE  0E02               	movlw	2
 34972  0017F0  0012               	return	
 34973  0017F2                     
 34974                           ;fat16.c: 1113: return 1;
 34975  0017F2  0E01               	movlw	1
 34976  0017F4  0012               	return	
 34977  0017F6                     
 34978                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 34979  0017F6  0E01               	movlw	1
 34980  0017F8  0012               	return	
 34981  0017FA                     
 34982                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 34983  0017FA  0E00               	movlw	0
 34984  0017FC  0012               	return	
 34985  0017FE                     
 34986                           ;fat16.c: 1119: return 1;
 34987  0017FE  0E01               	movlw	1
 34988  001800  0012               	return	
 34989  001802                     
 34990                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 34991  001802  0E40               	movlw	64
 34992  001804  0012               	return	
 34993  001806                     
 34994                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 34995  001806  0E00               	movlw	0
 34996  001808  0012               	return	
 34997  00180A                     
 34998                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 34999  00180A  0EFF               	movlw	255
 35000  00180C  0012               	return	
 35001  00180E                     
 35002                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35003  00180E  0E1F               	movlw	31
 35004  001810  0012               	return	
 35005  001812                     
 35006                           ;fat16.c: 1129: return 0XF8;
 35007  001812  0EF8               	movlw	248
 35008  001814  0012               	return	
 35009  001816                     
 35010                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 35011  001816  0E20               	movlw	32
 35012  001818  0012               	return	
 35013  00181A                     
 35014                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35015  00181A  0E00               	movlw	0
 35016  00181C  0012               	return	
 35017  00181E                     
 35018                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 35019  00181E  0E3F               	movlw	63
 35020  001820  0012               	return	
 35021  001822                     
 35022                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35023  001822  0E00               	movlw	0
 35024  001824  0012               	return	
 35025  001826                     
 35026                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 35027  001826  0E10               	movlw	16
 35028  001828  0012               	return	
 35029  00182A                     
 35030                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35031  00182A  0E00               	movlw	0
 35032  00182C  0012               	return	
 35033  00182E                     
 35034                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35035  00182E  0E00               	movlw	0
 35036  001830  0012               	return	
 35037  001832                     
 35038                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35039  001832  0E00               	movlw	0
 35040  001834  0012               	return	
 35041  001836                     
 35042                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35043  001836  0E00               	movlw	0
 35044  001838  0012               	return	
 35045  00183A                     
 35046                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35047  00183A  0E00               	movlw	0
 35048  00183C  0012               	return	
 35049  00183E                     
 35050                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35051  00183E  0E01               	movlw	1
 35052  001840  0012               	return	
 35053  001842                     
 35054                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35055  001842  0E00               	movlw	0
 35056  001844  0012               	return	
 35057  001846                     
 35058                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35059  001846  0E22               	movlw	34
 35060  001848  0012               	return	
 35061  00184A                     
 35062                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35063  00184A  0E00               	movlw	0
 35064  00184C  0012               	return	
 35065  00184E                     
 35066                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35067                           
 35068                           ;fat16.c: 1160: case 0x2F:
 35069  00184E  0E00               	movlw	0
 35070  001850  0012               	return	
 35071  001852                     
 35072                           ;fat16.c: 1163: return 'F';
 35073  001852  0E46               	movlw	70
 35074  001854  0012               	return	
 35075  001856                     
 35076                           ;fat16.c: 1165: return 'A';
 35077  001856  0E41               	movlw	65
 35078  001858  0012               	return	
 35079  00185A                     
 35080                           ;fat16.c: 1167: return 'T';
 35081  00185A  0E54               	movlw	84
 35082  00185C  0012               	return	
 35083  00185E                     
 35084                           ;fat16.c: 1169: return '1';
 35085  00185E  0E31               	movlw	49
 35086  001860  0012               	return	
 35087  001862                     
 35088                           ;fat16.c: 1171: return '6';
 35089  001862  0E36               	movlw	54
 35090  001864  0012               	return	
 35091  001866                     
 35092                           ;fat16.c: 1173: return ' ';
 35093  001866  0E20               	movlw	32
 35094  001868  0012               	return	
 35095  00186A                     
 35096                           ;fat16.c: 1175: return ' ';
 35097  00186A  0E20               	movlw	32
 35098  00186C  0012               	return	
 35099  00186E                     
 35100                           ;fat16.c: 1177: return ' ';
 35101  00186E  0E20               	movlw	32
 35102  001870  0012               	return	
 35103  001872                     
 35104                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35105  001872  0E55               	movlw	85
 35106  001874  0012               	return	
 35107  001876                     
 35108                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35109  001876  0EAA               	movlw	170
 35110  001878  0012               	return	
 35111  00187A                     
 35112                           ;fat16.c: 1183: return 0X00;
 35113  00187A  0E00               	movlw	0
 35114                           
 35115                           ;fat16.c: 1184: }
 35116  00187C  0012               	return	
 35117  00187E                     l2144:
 35118  00187E  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35119  001882  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35120                           
 35121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35122                           ; Switch size 1, requested type "space"
 35123                           ; Number of cases is 2, Range of values is 0 to 1
 35124                           ; switch strategies available:
 35125                           ; Name         Instructions Cycles
 35126                           ; simple_byte            7     4 (average)
 35127                           ;	Chosen strategy is simple_byte
 35128  001886  5004               	movf	??__get_fbr+1,w,c
 35129  001888  0A00               	xorlw	0	; case 0
 35130  00188A  B4D8               	btfsc	status,2,c
 35131  00188C  D004               	goto	l15347
 35132  00188E  0A01               	xorlw	1	; case 1
 35133  001890  B4D8               	btfsc	status,2,c
 35134  001892  D08D               	goto	l15349
 35135  001894  D7F2               	goto	l2194
 35136  001896                     l15347:
 35137                           
 35138                           ; Switch size 1, requested type "space"
 35139                           ; Number of cases is 46, Range of values is 0 to 61
 35140                           ; switch strategies available:
 35141                           ; Name         Instructions Cycles
 35142                           ; simple_byte          139    70 (average)
 35143                           ;	Chosen strategy is simple_byte
 35144  001896  5003               	movf	??__get_fbr,w,c
 35145  001898  0A00               	xorlw	0	; case 0
 35146  00189A  B4D8               	btfsc	status,2,c
 35147  00189C  D75F               	goto	l2145
 35148  00189E  0A01               	xorlw	1	; case 1
 35149  0018A0  B4D8               	btfsc	status,2,c
 35150  0018A2  D75E               	goto	l2147
 35151  0018A4  0A03               	xorlw	3	; case 2
 35152  0018A6  B4D8               	btfsc	status,2,c
 35153  0018A8  D75D               	goto	l2148
 35154  0018AA  0A01               	xorlw	1	; case 3
 35155  0018AC  B4D8               	btfsc	status,2,c
 35156  0018AE  D75C               	goto	l2149
 35157  0018B0  0A07               	xorlw	7	; case 4
 35158  0018B2  B4D8               	btfsc	status,2,c
 35159  0018B4  D762               	goto	l2150
 35160  0018B6  0A01               	xorlw	1	; case 5
 35161  0018B8  B4D8               	btfsc	status,2,c
 35162  0018BA  D767               	goto	l2151
 35163  0018BC  0A03               	xorlw	3	; case 6
 35164  0018BE  B4D8               	btfsc	status,2,c
 35165  0018C0  D76C               	goto	l2152
 35166  0018C2  0A01               	xorlw	1	; case 7
 35167  0018C4  B4D8               	btfsc	status,2,c
 35168  0018C6  D771               	goto	l2153
 35169  0018C8  0A0F               	xorlw	15	; case 8
 35170  0018CA  B4D8               	btfsc	status,2,c
 35171  0018CC  D776               	goto	l2154
 35172  0018CE  0A01               	xorlw	1	; case 9
 35173  0018D0  B4D8               	btfsc	status,2,c
 35174  0018D2  D77B               	goto	l2155
 35175  0018D4  0A03               	xorlw	3	; case 10
 35176  0018D6  B4D8               	btfsc	status,2,c
 35177  0018D8  D780               	goto	l2156
 35178  0018DA  0A01               	xorlw	1	; case 11
 35179  0018DC  B4D8               	btfsc	status,2,c
 35180  0018DE  D785               	goto	l2157
 35181  0018E0  0A07               	xorlw	7	; case 12
 35182  0018E2  B4D8               	btfsc	status,2,c
 35183  0018E4  D784               	goto	l2158
 35184  0018E6  0A01               	xorlw	1	; case 13
 35185  0018E8  B4D8               	btfsc	status,2,c
 35186  0018EA  D783               	goto	l2159
 35187  0018EC  0A03               	xorlw	3	; case 14
 35188  0018EE  B4D8               	btfsc	status,2,c
 35189  0018F0  D782               	goto	l2160
 35190  0018F2  0A01               	xorlw	1	; case 15
 35191  0018F4  B4D8               	btfsc	status,2,c
 35192  0018F6  D781               	goto	l2161
 35193  0018F8  0A1F               	xorlw	31	; case 16
 35194  0018FA  B4D8               	btfsc	status,2,c
 35195  0018FC  D780               	goto	l2162
 35196  0018FE  0A01               	xorlw	1	; case 17
 35197  001900  B4D8               	btfsc	status,2,c
 35198  001902  D77F               	goto	l2163
 35199  001904  0A03               	xorlw	3	; case 18
 35200  001906  B4D8               	btfsc	status,2,c
 35201  001908  D77E               	goto	l2164
 35202  00190A  0A01               	xorlw	1	; case 19
 35203  00190C  B4D8               	btfsc	status,2,c
 35204  00190E  D77D               	goto	l2165
 35205  001910  0A07               	xorlw	7	; case 20
 35206  001912  B4D8               	btfsc	status,2,c
 35207  001914  D77C               	goto	l2166
 35208  001916  0A01               	xorlw	1	; case 21
 35209  001918  B4D8               	btfsc	status,2,c
 35210  00191A  D77B               	goto	l2167
 35211  00191C  0A03               	xorlw	3	; case 22
 35212  00191E  B4D8               	btfsc	status,2,c
 35213  001920  D77A               	goto	l2168
 35214  001922  0A01               	xorlw	1	; case 23
 35215  001924  B4D8               	btfsc	status,2,c
 35216  001926  D779               	goto	l2169
 35217  001928  0A0F               	xorlw	15	; case 24
 35218  00192A  B4D8               	btfsc	status,2,c
 35219  00192C  D778               	goto	l2170
 35220  00192E  0A01               	xorlw	1	; case 25
 35221  001930  B4D8               	btfsc	status,2,c
 35222  001932  D777               	goto	l2171
 35223  001934  0A03               	xorlw	3	; case 26
 35224  001936  B4D8               	btfsc	status,2,c
 35225  001938  D776               	goto	l2172
 35226  00193A  0A01               	xorlw	1	; case 27
 35227  00193C  B4D8               	btfsc	status,2,c
 35228  00193E  D775               	goto	l2173
 35229  001940  0A07               	xorlw	7	; case 28
 35230  001942  B4D8               	btfsc	status,2,c
 35231  001944  D774               	goto	l2174
 35232  001946  0A01               	xorlw	1	; case 29
 35233  001948  B4D8               	btfsc	status,2,c
 35234  00194A  D773               	goto	l2175
 35235  00194C  0A03               	xorlw	3	; case 30
 35236  00194E  B4D8               	btfsc	status,2,c
 35237  001950  D772               	goto	l2176
 35238  001952  0A01               	xorlw	1	; case 31
 35239  001954  B4D8               	btfsc	status,2,c
 35240  001956  D771               	goto	l2177
 35241  001958  0A37               	xorlw	55	; case 40
 35242  00195A  B4D8               	btfsc	status,2,c
 35243  00195C  D770               	goto	l2178
 35244  00195E  0A01               	xorlw	1	; case 41
 35245  001960  B4D8               	btfsc	status,2,c
 35246  001962  D76F               	goto	l2179
 35247  001964  0A05               	xorlw	5	; case 44
 35248  001966  B4D8               	btfsc	status,2,c
 35249  001968  D76E               	goto	l2180
 35250  00196A  0A01               	xorlw	1	; case 45
 35251  00196C  B4D8               	btfsc	status,2,c
 35252  00196E  D76D               	goto	l2181
 35253  001970  0A03               	xorlw	3	; case 46
 35254  001972  B4D8               	btfsc	status,2,c
 35255  001974  D76C               	goto	l2182
 35256  001976  0A01               	xorlw	1	; case 47
 35257  001978  B4D8               	btfsc	status,2,c
 35258  00197A  D769               	goto	l2182
 35259  00197C  0A19               	xorlw	25	; case 54
 35260  00197E  B4D8               	btfsc	status,2,c
 35261  001980  D768               	goto	l2184
 35262  001982  0A01               	xorlw	1	; case 55
 35263  001984  B4D8               	btfsc	status,2,c
 35264  001986  D767               	goto	l2185
 35265  001988  0A0F               	xorlw	15	; case 56
 35266  00198A  B4D8               	btfsc	status,2,c
 35267  00198C  D766               	goto	l2186
 35268  00198E  0A01               	xorlw	1	; case 57
 35269  001990  B4D8               	btfsc	status,2,c
 35270  001992  D765               	goto	l2187
 35271  001994  0A03               	xorlw	3	; case 58
 35272  001996  B4D8               	btfsc	status,2,c
 35273  001998  D764               	goto	l2188
 35274  00199A  0A01               	xorlw	1	; case 59
 35275  00199C  B4D8               	btfsc	status,2,c
 35276  00199E  D763               	goto	l2189
 35277  0019A0  0A07               	xorlw	7	; case 60
 35278  0019A2  B4D8               	btfsc	status,2,c
 35279  0019A4  D762               	goto	l2190
 35280  0019A6  0A01               	xorlw	1	; case 61
 35281  0019A8  B4D8               	btfsc	status,2,c
 35282  0019AA  D761               	goto	l2191
 35283  0019AC  D766               	goto	l2194
 35284  0019AE                     l15349:
 35285                           
 35286                           ; Switch size 1, requested type "space"
 35287                           ; Number of cases is 2, Range of values is 254 to 255
 35288                           ; switch strategies available:
 35289                           ; Name         Instructions Cycles
 35290                           ; simple_byte            7     4 (average)
 35291                           ;	Chosen strategy is simple_byte
 35292  0019AE  5003               	movf	??__get_fbr,w,c
 35293  0019B0  0AFE               	xorlw	254	; case 254
 35294  0019B2  B4D8               	btfsc	status,2,c
 35295  0019B4  D75E               	goto	l2192
 35296  0019B6  0A01               	xorlw	1	; case 255
 35297  0019B8  B4D8               	btfsc	status,2,c
 35298  0019BA  D75D               	goto	l2193
 35299  0019BC  D75E               	goto	l2194
 35300  0019BE                     __end_of__get_fbr:
 35301                           	opt stack 0
 35302                           tosu	equ	0xFFF
 35303                           tosh	equ	0xFFE
 35304                           tosl	equ	0xFFD
 35305                           pclath	equ	0xFFA
 35306                           tblptru	equ	0xFF8
 35307                           tblptrh	equ	0xFF7
 35308                           tblptrl	equ	0xFF6
 35309                           tablat	equ	0xFF5
 35310                           prodh	equ	0xFF4
 35311                           prodl	equ	0xFF3
 35312                           intcon	equ	0xFF2
 35313                           intcon2	equ	0xFF1
 35314                           intcon3	equ	0xFF0
 35315                           indf0	equ	0xFEF
 35316                           postinc0	equ	0xFEE
 35317                           fsr0h	equ	0xFEA
 35318                           fsr0l	equ	0xFE9
 35319                           wreg	equ	0xFE8
 35320                           indf1	equ	0xFE7
 35321                           postdec1	equ	0xFE5
 35322                           plusw1	equ	0xFE3
 35323                           fsr1h	equ	0xFE2
 35324                           fsr1l	equ	0xFE1
 35325                           indf2	equ	0xFDF
 35326                           postinc2	equ	0xFDE
 35327                           postdec2	equ	0xFDD
 35328                           plusw2	equ	0xFDB
 35329                           fsr2h	equ	0xFDA
 35330                           fsr2l	equ	0xFD9
 35331                           status	equ	0xFD8
 35332                           
 35333 ;; *************** function __get_fat *****************
 35334 ;; Defined at:
 35335 ;;		line 1187 in file "fat16.c"
 35336 ;; Parameters:    Size  Location     Type
 35337 ;;  idx             2    0[COMRAM] unsigned int 
 35338 ;; Auto vars:     Size  Location     Type
 35339 ;;		None
 35340 ;; Return value:  Size  Location     Type
 35341 ;;                  1    wreg      unsigned char 
 35342 ;; Registers used:
 35343 ;;		wreg, status,2, status,0
 35344 ;; Tracked objects:
 35345 ;;		On entry : 0/0
 35346 ;;		On exit  : 0/0
 35347 ;;		Unchanged: 0/0
 35348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35353 ;;Total ram usage:        4 bytes
 35354 ;; Hardware stack levels used:    1
 35355 ;; This function calls:
 35356 ;;		Nothing
 35357 ;; This function is called by:
 35358 ;;		_fat_format
 35359 ;; This function uses a non-reentrant model
 35360 ;;
 35361                           
 35362                           	psect	text183
 35363  0065A2                     __ptext183:
 35364                           	opt stack 0
 35365  0065A2                     __get_fat:
 35366                           	opt stack 27
 35367                           
 35368                           ;fat16.c: 1189: switch (idx)
 35369                           
 35370                           ;incstack = 0
 35371  0065A2  D00E               	goto	l2198
 35372  0065A4                     
 35373                           ;fat16.c: 1193: return 0xF8;
 35374  0065A4  0EF8               	movlw	248
 35375  0065A6  0012               	return	
 35376  0065A8                     
 35377                           ;fat16.c: 1195: return 0xFF;
 35378  0065A8  0EFF               	movlw	255
 35379  0065AA  0012               	return	
 35380  0065AC                     
 35381                           ;fat16.c: 1197: return 0xFF;
 35382  0065AC  0EFF               	movlw	255
 35383  0065AE  0012               	return	
 35384  0065B0                     
 35385                           ;fat16.c: 1199: return 0xFF;
 35386  0065B0  0EFF               	movlw	255
 35387  0065B2  0012               	return	
 35388  0065B4                     
 35389                           ;fat16.c: 1202: return 0xFF;
 35390  0065B4  0EFF               	movlw	255
 35391  0065B6  0012               	return	
 35392  0065B8                     
 35393                           ;fat16.c: 1204: return 0xFF;
 35394  0065B8  0EFF               	movlw	255
 35395  0065BA  0012               	return	
 35396  0065BC                     
 35397                           ;fat16.c: 1206: return 0X00;
 35398  0065BC  0E00               	movlw	0
 35399                           
 35400                           ;fat16.c: 1207: }
 35401  0065BE  0012               	return	
 35402  0065C0                     l2198:
 35403  0065C0  C001  F003         	movff	__get_fat@idx,??__get_fat
 35404  0065C4  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 35405                           
 35406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35407                           ; Switch size 1, requested type "space"
 35408                           ; Number of cases is 1, Range of values is 0 to 0
 35409                           ; switch strategies available:
 35410                           ; Name         Instructions Cycles
 35411                           ; simple_byte            4     3 (average)
 35412                           ;	Chosen strategy is simple_byte
 35413  0065C8  5004               	movf	??__get_fat+1,w,c
 35414  0065CA  0A00               	xorlw	0	; case 0
 35415  0065CC  A4D8               	btfss	status,2,c
 35416  0065CE  D7F6               	goto	l2206
 35417                           
 35418                           ; Switch size 1, requested type "space"
 35419                           ; Number of cases is 6, Range of values is 0 to 5
 35420                           ; switch strategies available:
 35421                           ; Name         Instructions Cycles
 35422                           ; simple_byte           19    10 (average)
 35423                           ;	Chosen strategy is simple_byte
 35424  0065D0  5003               	movf	??__get_fat,w,c
 35425  0065D2  0A00               	xorlw	0	; case 0
 35426  0065D4  B4D8               	btfsc	status,2,c
 35427  0065D6  D7E6               	goto	l2199
 35428  0065D8  0A01               	xorlw	1	; case 1
 35429  0065DA  B4D8               	btfsc	status,2,c
 35430  0065DC  D7E5               	goto	l2201
 35431  0065DE  0A03               	xorlw	3	; case 2
 35432  0065E0  B4D8               	btfsc	status,2,c
 35433  0065E2  D7E4               	goto	l2202
 35434  0065E4  0A01               	xorlw	1	; case 3
 35435  0065E6  B4D8               	btfsc	status,2,c
 35436  0065E8  D7E3               	goto	l2203
 35437  0065EA  0A07               	xorlw	7	; case 4
 35438  0065EC  B4D8               	btfsc	status,2,c
 35439  0065EE  D7E2               	goto	l2204
 35440  0065F0  0A01               	xorlw	1	; case 5
 35441  0065F2  B4D8               	btfsc	status,2,c
 35442  0065F4  D7E1               	goto	l2205
 35443  0065F6  D7E2               	goto	l2206
 35444  0065F8                     __end_of__get_fat:
 35445                           	opt stack 0
 35446                           tosu	equ	0xFFF
 35447                           tosh	equ	0xFFE
 35448                           tosl	equ	0xFFD
 35449                           pclath	equ	0xFFA
 35450                           tblptru	equ	0xFF8
 35451                           tblptrh	equ	0xFF7
 35452                           tblptrl	equ	0xFF6
 35453                           tablat	equ	0xFF5
 35454                           prodh	equ	0xFF4
 35455                           prodl	equ	0xFF3
 35456                           intcon	equ	0xFF2
 35457                           intcon2	equ	0xFF1
 35458                           intcon3	equ	0xFF0
 35459                           indf0	equ	0xFEF
 35460                           postinc0	equ	0xFEE
 35461                           fsr0h	equ	0xFEA
 35462                           fsr0l	equ	0xFE9
 35463                           wreg	equ	0xFE8
 35464                           indf1	equ	0xFE7
 35465                           postdec1	equ	0xFE5
 35466                           plusw1	equ	0xFE3
 35467                           fsr1h	equ	0xFE2
 35468                           fsr1l	equ	0xFE1
 35469                           indf2	equ	0xFDF
 35470                           postinc2	equ	0xFDE
 35471                           postdec2	equ	0xFDD
 35472                           plusw2	equ	0xFDB
 35473                           fsr2h	equ	0xFDA
 35474                           fsr2l	equ	0xFD9
 35475                           status	equ	0xFD8
 35476                           
 35477 ;; *************** function __get_data *****************
 35478 ;; Defined at:
 35479 ;;		line 1283 in file "fat16.c"
 35480 ;; Parameters:    Size  Location     Type
 35481 ;;  idx             2    0[COMRAM] unsigned int 
 35482 ;; Auto vars:     Size  Location     Type
 35483 ;;		None
 35484 ;; Return value:  Size  Location     Type
 35485 ;;                  1    wreg      unsigned char 
 35486 ;; Registers used:
 35487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35488 ;; Tracked objects:
 35489 ;;		On entry : 0/0
 35490 ;;		On exit  : 0/0
 35491 ;;		Unchanged: 0/0
 35492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35497 ;;Total ram usage:        2 bytes
 35498 ;; Hardware stack levels used:    1
 35499 ;; This function calls:
 35500 ;;		Nothing
 35501 ;; This function is called by:
 35502 ;;		_fat_format
 35503 ;; This function uses a non-reentrant model
 35504 ;;
 35505                           
 35506                           	psect	text184
 35507  006E50                     __ptext184:
 35508                           	opt stack 0
 35509  006E50                     __get_data:
 35510                           	opt stack 27
 35511                           
 35512                           ;fat16.c: 1285: if(idx < 12)
 35513                           
 35514                           ;incstack = 0
 35515  006E50  5002               	movf	__get_data@idx+1,w,c
 35516  006E52  E110               	bnz	l11631
 35517  006E54  0E0C               	movlw	12
 35518  006E56  5C01               	subwf	__get_data@idx,w,c
 35519  006E58  B0D8               	btfsc	status,0,c
 35520  006E5A  D00C               	goto	l2242
 35521                           
 35522                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 35523  006E5C  0ECF               	movlw	low STR_12
 35524  006E5E  2401               	addwf	__get_data@idx,w,c
 35525  006E60  6EF6               	movwf	tblptrl,c
 35526  006E62  0E8F               	movlw	high STR_12
 35527  006E64  2002               	addwfc	__get_data@idx+1,w,c
 35528  006E66  6EF7               	movwf	tblptrh,c
 35529  006E68                     	if	1	;There are 3 active tblptr bytes
 35530  006E68  6AF8               	clrf	tblptru,c
 35531  006E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 35532  006E6C  22F8               	addwfc	tblptru,f,c
 35533  006E6E                     	endif
 35534  006E6E  0008               	tblrd		*
 35535  006E70  50F5               	movf	tablat,w,c
 35536  006E72  0012               	return	
 35537  006E74                     l2242:
 35538  006E74                     l11631:
 35539                           
 35540                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 35541  006E74  0E00               	movlw	0
 35542  006E76  0012               	return	
 35543  006E78                     __end_of__get_data:
 35544                           	opt stack 0
 35545                           tosu	equ	0xFFF
 35546                           tosh	equ	0xFFE
 35547                           tosl	equ	0xFFD
 35548                           pclath	equ	0xFFA
 35549                           tblptru	equ	0xFF8
 35550                           tblptrh	equ	0xFF7
 35551                           tblptrl	equ	0xFF6
 35552                           tablat	equ	0xFF5
 35553                           prodh	equ	0xFF4
 35554                           prodl	equ	0xFF3
 35555                           intcon	equ	0xFF2
 35556                           intcon2	equ	0xFF1
 35557                           intcon3	equ	0xFF0
 35558                           indf0	equ	0xFEF
 35559                           postinc0	equ	0xFEE
 35560                           fsr0h	equ	0xFEA
 35561                           fsr0l	equ	0xFE9
 35562                           wreg	equ	0xFE8
 35563                           indf1	equ	0xFE7
 35564                           postdec1	equ	0xFE5
 35565                           plusw1	equ	0xFE3
 35566                           fsr1h	equ	0xFE2
 35567                           fsr1l	equ	0xFE1
 35568                           indf2	equ	0xFDF
 35569                           postinc2	equ	0xFDE
 35570                           postdec2	equ	0xFDD
 35571                           plusw2	equ	0xFDB
 35572                           fsr2h	equ	0xFDA
 35573                           fsr2l	equ	0xFD9
 35574                           status	equ	0xFD8
 35575                           
 35576 ;; *************** function _USBTransferOnePacket *****************
 35577 ;; Defined at:
 35578 ;;		line 995 in file "usb_device.c"
 35579 ;; Parameters:    Size  Location     Type
 35580 ;;  ep              1    wreg     unsigned char 
 35581 ;;  dir             1    0[COMRAM] unsigned char 
 35582 ;;  data            2    1[COMRAM] PTR unsigned char 
 35583 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 35584 ;;		 -> msd_cbw(31), NULL(0), 
 35585 ;;  len             1    3[COMRAM] unsigned char 
 35586 ;; Auto vars:     Size  Location     Type
 35587 ;;  ep              1    8[COMRAM] unsigned char 
 35588 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 35589 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 35590 ;; Return value:  Size  Location     Type
 35591 ;;                  2    0[COMRAM] PTR void 
 35592 ;; Registers used:
 35593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35594 ;; Tracked objects:
 35595 ;;		On entry : 0/0
 35596 ;;		On exit  : 0/0
 35597 ;;		Unchanged: 0/0
 35598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35600 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35601 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35602 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35603 ;;Total ram usage:       11 bytes
 35604 ;; Hardware stack levels used:    1
 35605 ;; This function calls:
 35606 ;;		Nothing
 35607 ;; This function is called by:
 35608 ;;		_USBMSDInit
 35609 ;;		_USBCheckMSDRequest
 35610 ;;		_MSDTasks
 35611 ;;		_MSDProcessCommandMediaPresent
 35612 ;;		_MSDReadHandler
 35613 ;;		_MSDWriteHandler
 35614 ;;		_MSDTransferTerminated
 35615 ;;		_APP_DeviceCustomHIDInitialize
 35616 ;;		_APP_DeviceCustomHIDTasks
 35617 ;; This function uses a non-reentrant model
 35618 ;;
 35619                           
 35620                           	psect	text185
 35621  003D88                     __ptext185:
 35622                           	opt stack 0
 35623  003D88                     _USBTransferOnePacket:
 35624                           	opt stack 27
 35625                           
 35626                           ;incstack = 0
 35627                           ;USBTransferOnePacket@ep stored from wreg
 35628  003D88  6E09               	movwf	USBTransferOnePacket@ep,c
 35629                           
 35630                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 35631  003D8A  5001               	movf	USBTransferOnePacket@dir,w,c
 35632  003D8C  B4D8               	btfsc	status,2,c
 35633  003D8E  D007               	goto	l183
 35634                           
 35635                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 35636  003D90  5009               	movf	USBTransferOnePacket@ep,w,c
 35637  003D92  0D02               	mullw	2
 35638  003D94  0E72               	movlw	low _pBDTEntryIn
 35639  003D96  24F3               	addwf	prodl,w,c
 35640  003D98  6ED9               	movwf	fsr2l,c
 35641  003D9A  0E00               	movlw	high _pBDTEntryIn
 35642  003D9C  D006               	goto	L43
 35643  003D9E                     l183:
 35644                           
 35645                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 35646  003D9E  5009               	movf	USBTransferOnePacket@ep,w,c
 35647  003DA0  0D02               	mullw	2
 35648  003DA2  0E78               	movlw	low _pBDTEntryOut
 35649  003DA4  24F3               	addwf	prodl,w,c
 35650  003DA6  6ED9               	movwf	fsr2l,c
 35651  003DA8  0E00               	movlw	high _pBDTEntryOut
 35652  003DAA                     L43:
 35653  003DAA  20F4               	addwfc	prodh,w,c
 35654  003DAC  6EDA               	movwf	fsr2h,c
 35655  003DAE  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 35656  003DB2  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 35657                           
 35658                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 35659  003DB6  500A               	movf	USBTransferOnePacket@handle,w,c
 35660  003DB8  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 35661  003DBA  A4D8               	btfss	status,2,c
 35662  003DBC  D005               	goto	l185
 35663                           
 35664                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 35665  003DBE  0E00               	movlw	0
 35666  003DC0  6E01               	movwf	?_USBTransferOnePacket,c
 35667  003DC2  0E00               	movlw	0
 35668  003DC4  6E02               	movwf	?_USBTransferOnePacket+1,c
 35669  003DC6  0012               	return	
 35670  003DC8                     l185:
 35671                           
 35672                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 35673  003DC8  EE20 F002          	lfsr	2,2
 35674  003DCC  500A               	movf	USBTransferOnePacket@handle,w,c
 35675  003DCE  26D9               	addwf	fsr2l,f,c
 35676  003DD0  500B               	movf	USBTransferOnePacket@handle+1,w,c
 35677  003DD2  22DA               	addwfc	fsr2h,f,c
 35678  003DD4  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 35679  003DD8  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 35680                           
 35681                           ;usb_device.c: 1030: handle->CNT = len;
 35682  003DDC  EE20 F001          	lfsr	2,1
 35683  003DE0  500A               	movf	USBTransferOnePacket@handle,w,c
 35684  003DE2  26D9               	addwf	fsr2l,f,c
 35685  003DE4  500B               	movf	USBTransferOnePacket@handle+1,w,c
 35686  003DE6  22DA               	addwfc	fsr2h,f,c
 35687  003DE8  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 35688                           
 35689                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 35690  003DEC  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35691  003DF0  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35692  003DF4  0E40               	movlw	64
 35693  003DF6  16DF               	andwf	indf2,f,c
 35694                           
 35695                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 35696  003DF8  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35697  003DFC  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35698  003E00  0E00               	movlw	0
 35699  003E02  86DB               	bsf	plusw2,3,c
 35700                           
 35701                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 35702  003E04  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35703  003E08  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35704  003E0C  0E00               	movlw	0
 35705  003E0E  8EDB               	bsf	plusw2,7,c
 35706                           
 35707                           ;usb_device.c: 1036: if(dir != 0)
 35708  003E10  5001               	movf	USBTransferOnePacket@dir,w,c
 35709  003E12  B4D8               	btfsc	status,2,c
 35710  003E14  D018               	goto	l187
 35711                           
 35712                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 35713  003E16  5009               	movf	USBTransferOnePacket@ep,w,c
 35714  003E18  0D02               	mullw	2
 35715  003E1A  0E72               	movlw	low _pBDTEntryIn
 35716  003E1C  24F3               	addwf	prodl,w,c
 35717  003E1E  6ED9               	movwf	fsr2l,c
 35718  003E20  0E00               	movlw	high _pBDTEntryIn
 35719  003E22  20F4               	addwfc	prodh,w,c
 35720  003E24  6EDA               	movwf	fsr2h,c
 35721  003E26  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 35722  003E2A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 35723  003E2E  0E04               	movlw	4
 35724  003E30  1805               	xorwf	??_USBTransferOnePacket,w,c
 35725  003E32  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 35726  003E34  5006               	movf	??_USBTransferOnePacket+1,w,c
 35727  003E36  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 35728  003E38  5009               	movf	USBTransferOnePacket@ep,w,c
 35729  003E3A  0D02               	mullw	2
 35730  003E3C  0E72               	movlw	low _pBDTEntryIn
 35731  003E3E  24F3               	addwf	prodl,w,c
 35732  003E40  6ED9               	movwf	fsr2l,c
 35733  003E42  0E00               	movlw	high _pBDTEntryIn
 35734  003E44  D017               	goto	L44
 35735  003E46                     l187:
 35736                           
 35737                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 35738  003E46  5009               	movf	USBTransferOnePacket@ep,w,c
 35739  003E48  0D02               	mullw	2
 35740  003E4A  0E78               	movlw	low _pBDTEntryOut
 35741  003E4C  24F3               	addwf	prodl,w,c
 35742  003E4E  6ED9               	movwf	fsr2l,c
 35743  003E50  0E00               	movlw	high _pBDTEntryOut
 35744  003E52  20F4               	addwfc	prodh,w,c
 35745  003E54  6EDA               	movwf	fsr2h,c
 35746  003E56  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 35747  003E5A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 35748  003E5E  0E04               	movlw	4
 35749  003E60  1805               	xorwf	??_USBTransferOnePacket,w,c
 35750  003E62  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 35751  003E64  5006               	movf	??_USBTransferOnePacket+1,w,c
 35752  003E66  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 35753  003E68  5009               	movf	USBTransferOnePacket@ep,w,c
 35754  003E6A  0D02               	mullw	2
 35755  003E6C  0E78               	movlw	low _pBDTEntryOut
 35756  003E6E  24F3               	addwf	prodl,w,c
 35757  003E70  6ED9               	movwf	fsr2l,c
 35758  003E72  0E00               	movlw	high _pBDTEntryOut
 35759  003E74                     L44:
 35760  003E74  20F4               	addwfc	prodh,w,c
 35761  003E76  6EDA               	movwf	fsr2h,c
 35762  003E78  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 35763  003E7C  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 35764                           
 35765                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 35766  003E80  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 35767  003E84  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 35768  003E88  0012               	return	
 35769  003E8A                     __end_of_USBTransferOnePacket:
 35770                           	opt stack 0
 35771                           tosu	equ	0xFFF
 35772                           tosh	equ	0xFFE
 35773                           tosl	equ	0xFFD
 35774                           pclath	equ	0xFFA
 35775                           tblptru	equ	0xFF8
 35776                           tblptrh	equ	0xFF7
 35777                           tblptrl	equ	0xFF6
 35778                           tablat	equ	0xFF5
 35779                           prodh	equ	0xFF4
 35780                           prodl	equ	0xFF3
 35781                           intcon	equ	0xFF2
 35782                           intcon2	equ	0xFF1
 35783                           intcon3	equ	0xFF0
 35784                           indf0	equ	0xFEF
 35785                           postinc0	equ	0xFEE
 35786                           fsr0h	equ	0xFEA
 35787                           fsr0l	equ	0xFE9
 35788                           wreg	equ	0xFE8
 35789                           indf1	equ	0xFE7
 35790                           postdec1	equ	0xFE5
 35791                           plusw1	equ	0xFE3
 35792                           fsr1h	equ	0xFE2
 35793                           fsr1l	equ	0xFE1
 35794                           indf2	equ	0xFDF
 35795                           postinc2	equ	0xFDE
 35796                           postdec2	equ	0xFDD
 35797                           plusw2	equ	0xFDB
 35798                           fsr2h	equ	0xFDA
 35799                           fsr2l	equ	0xFD9
 35800                           status	equ	0xFD8
 35801                           tosu	equ	0xFFF
 35802                           tosh	equ	0xFFE
 35803                           tosl	equ	0xFFD
 35804                           pclath	equ	0xFFA
 35805                           tblptru	equ	0xFF8
 35806                           tblptrh	equ	0xFF7
 35807                           tblptrl	equ	0xFF6
 35808                           tablat	equ	0xFF5
 35809                           prodh	equ	0xFF4
 35810                           prodl	equ	0xFF3
 35811                           intcon	equ	0xFF2
 35812                           intcon2	equ	0xFF1
 35813                           intcon3	equ	0xFF0
 35814                           indf0	equ	0xFEF
 35815                           postinc0	equ	0xFEE
 35816                           fsr0h	equ	0xFEA
 35817                           fsr0l	equ	0xFE9
 35818                           wreg	equ	0xFE8
 35819                           indf1	equ	0xFE7
 35820                           postdec1	equ	0xFE5
 35821                           plusw1	equ	0xFE3
 35822                           fsr1h	equ	0xFE2
 35823                           fsr1l	equ	0xFE1
 35824                           indf2	equ	0xFDF
 35825                           postinc2	equ	0xFDE
 35826                           postdec2	equ	0xFDD
 35827                           plusw2	equ	0xFDB
 35828                           fsr2h	equ	0xFDA
 35829                           fsr2l	equ	0xFD9
 35830                           status	equ	0xFD8
 35831                           
 35832                           	psect	text186
 35833  000000                     __ptext186:
 35834                           	opt stack 0
 35835                           tosu	equ	0xFFF
 35836                           tosh	equ	0xFFE
 35837                           tosl	equ	0xFFD
 35838                           pclath	equ	0xFFA
 35839                           tblptru	equ	0xFF8
 35840                           tblptrh	equ	0xFF7
 35841                           tblptrl	equ	0xFF6
 35842                           tablat	equ	0xFF5
 35843                           prodh	equ	0xFF4
 35844                           prodl	equ	0xFF3
 35845                           intcon	equ	0xFF2
 35846                           intcon2	equ	0xFF1
 35847                           intcon3	equ	0xFF0
 35848                           indf0	equ	0xFEF
 35849                           postinc0	equ	0xFEE
 35850                           fsr0h	equ	0xFEA
 35851                           fsr0l	equ	0xFE9
 35852                           wreg	equ	0xFE8
 35853                           indf1	equ	0xFE7
 35854                           postdec1	equ	0xFE5
 35855                           plusw1	equ	0xFE3
 35856                           fsr1h	equ	0xFE2
 35857                           fsr1l	equ	0xFE1
 35858                           indf2	equ	0xFDF
 35859                           postinc2	equ	0xFDE
 35860                           postdec2	equ	0xFDD
 35861                           plusw2	equ	0xFDB
 35862                           fsr2h	equ	0xFDA
 35863                           fsr2l	equ	0xFD9
 35864                           status	equ	0xFD8
 35865                           
 35866                           	psect	rparam
 35867  0000                     tosu	equ	0xFFF
 35868                           tosh	equ	0xFFE
 35869                           tosl	equ	0xFFD
 35870                           pclath	equ	0xFFA
 35871                           tblptru	equ	0xFF8
 35872                           tblptrh	equ	0xFF7
 35873                           tblptrl	equ	0xFF6
 35874                           tablat	equ	0xFF5
 35875                           prodh	equ	0xFF4
 35876                           prodl	equ	0xFF3
 35877                           intcon	equ	0xFF2
 35878                           intcon2	equ	0xFF1
 35879                           intcon3	equ	0xFF0
 35880                           indf0	equ	0xFEF
 35881                           postinc0	equ	0xFEE
 35882                           fsr0h	equ	0xFEA
 35883                           fsr0l	equ	0xFE9
 35884                           wreg	equ	0xFE8
 35885                           indf1	equ	0xFE7
 35886                           postdec1	equ	0xFE5
 35887                           plusw1	equ	0xFE3
 35888                           fsr1h	equ	0xFE2
 35889                           fsr1l	equ	0xFE1
 35890                           indf2	equ	0xFDF
 35891                           postinc2	equ	0xFDE
 35892                           postdec2	equ	0xFDD
 35893                           plusw2	equ	0xFDB
 35894                           fsr2h	equ	0xFDA
 35895                           fsr2l	equ	0xFD9
 35896                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    866
    Data        47
    BSS         2029
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     73     160
    BANK1           256      0     256
    BANK2           256      0     196
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), 
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(COMRAM[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(COMRAM[2]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(COMRAM[11]), _ic2_display_set_cgram_address@data_array(COMRAM[3]), _ic2_display_set_ddram_address@data_array(COMRAM[2]), i2c_display_init@init_sequence(COMRAM[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _i2c_display_init->__i2c_write
    _system_minimal_init->_system_delay_ms
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    __bootloader_find_file->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_status
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_prepare->__display_checked
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u16
    __display_itoa_u32->___lldiv
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_format_drive
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  613025
                                             92 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   53645
                        __ui_encoder
                   _i2c_display_init
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_init                                    10    10      0    1938
                                             10 COMRAM    10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   51707
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      46
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32113
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6638
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138279
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62249
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53713
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35431
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7929
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22251
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7123
                                             39 COMRAM     8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7483
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5952
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2810
                                             17 COMRAM     7     5      2
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106628
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106628
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101464
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51483
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49725
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24963
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13866
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 COMRAM     4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   83062
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4    7705
                                             22 COMRAM     5     1      4
__fill_buffer_get_bootloader_details
           __fill_buffer_get_display
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    3111
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        1     1      0    2714
                                             19 COMRAM     1     1      0
                     __flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   72044
                                             53 COMRAM    11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   51729
                                             35 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   48519
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3234
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     824
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2410
                                             13 COMRAM     3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_ddram_address                       3     3      0    1984
                                             10 COMRAM     3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   45285
                                             32 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    4369
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    4530
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    4505
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0    8969
                                             21 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   13266
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    8     2      6    8561
                                             13 COMRAM     8     2      6
                            ___lldiv
                            ___llmod
                             ___wmul
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7141
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    4437
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    4439
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    4143
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2121
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3142
                                             10 COMRAM     9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1914
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 COMRAM     1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19573
                                             46 COMRAM     7     1      6
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   19194
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_ddram_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
         _ui_get_status
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _i2c_eeprom_writeByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _jump_to_main_program
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _ui_init
   _system_minimal_init
     _i2c_init
     _system_delay_ms
   _system_minimal_init_undo
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_ddram_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _ui_get_status
       _system_delay_ms
     _i2c_display_init
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C4       9       76.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C3      31        0.0%
DATA                 0      0     8C3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Feb 24 21:04:16 2019

                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E79  
                                 __system_timer0_init 6F9E  
                                                  _os 0060  
                                       _USBDeviceInit 3376  
                                 ___wmul@multiplicand 0003  
                                  _USBCheckHIDRequest 4266  
                         ??__data_sector_from_cluster 0003  
                                    __i2c_eeprom_busy 6F10  
                __bootloader_verify_file@return_value 00ED  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 000B  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4CF0  
                                                 l210 5680  
                                                 l220 3FB2  
                                                 l141 33E4  
                                                 l214 57B2  
                                                 l310 50DE  
                                                 l150 2CBA  
                                                 l143 3420  
                                                 l303 6BDC  
                                                 l151 2CB2  
                                                 l320 629A  
                                                 l208 5666  
                                                 l224 4034  
                                                 l304 6BDA  
                                                 l152 2CB0  
                                                 l241 4B0A  
                                                 l233 4A5E  
                                                 l161 2D32  
                                                 l242 4AD2  
                                                 l330 4C9A  
                                                 l322 62E4  
                                                 l235 4A68  
                                                 l331 4C60  
                                                 l251 3912  
                                                 l411 42B4  
                                                 l219 400A  
                                                 l139 33BC  
                                                 l171 2DC0  
                                                 l163 2D48  
                                                 l155 2CD4  
                                                 l252 38F8  
                                                 l412 4282  
                                                 l260 4636  
                                                 l164 2D54  
                                                 l156 2CE4  
                                                 l237 4ACA  
                                                 l333 4C80  
                                                 l309 50E4  
                                                 l173 2DE4  
                                                 l165 2D7C  
                                                 l157 2CEC  
                                                 l238 4A92  
                                                 l422 42D6  
                                                 l414 42C6  
                         __end_of_USBStdGetDscHandler 35FE  
                                                 l262 46AA  
                                                 l350 41C4  
                                                 l166 2D86  
                                                 l158 2D00  
                                                 l183 3D9E  
                                                 l191 3AD4  
                                                 l423 42EE  
                                                 l415 42A0  
                                                 l271 34EA  
                                                 l343 4222  
                                                 l175 2E00  
                                                 l159 2D0C  
                                                 l328 4C18  
                                                 l248 389C  
                                                 l424 42FA  
                                                 l360 14FA  
                                                 l272 3578  
                                                 l352 41CA  
                                                 l344 4194  
                                                 l168 2D98  
                                                 l185 3DC8  
                                                 l329 4C1C  
                                                 l249 387A  
                                                 l521 3C72  
                                                 l425 4312  
                                                 l361 1500  
                                                 l281 5174  
                                                 l353 41E8  
                                                 l610 619C  
                                                 l178 6AD8  
                                                 l418 431E  
                                                 l530 4D80  
                                                 l274 3580  
                                                 l282 5102  
                                                 l354 4204  
                                                 l346 419E  
                                                 l187 3E46  
                                                 l603 61A4  
                                                 l179 6AE6  
                                                 l371 1620  
                                                 l363 156C  
                                                 l275 35D6  
                                                 l347 41A4  
                                                 l620 04BE  
                                                 l604 6168  
                                                 l372 163C  
                                                 l268 35E6  
                                                 l348 41AA  
                                                 l621 04C8  
                                                 l381 1734  
                                                 l365 15B4  
                                                 l277 35DE  
                                                 l269 34D6  
                                                 l285 518A  
                                                 l349 41BE  
                                                 l710 4358  
                                                 l702 1466  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6184  
                                                 l518 3C7A  
                                                 l534 4DE6  
                                                 l374 16A2  
                                                 l286 5114  
                                                 l703 147E  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3BEE  
                                                 l375 16AE  
                                                 l367 15D6  
                                                 l287 511A  
                                                 l295 697E  
                                                 l712 436E  
                                                 l704 1496  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6190  
                                                 l800 5AE8  
                                                 l376 1728  
                                                 l288 5138  
                                                 l296 697C  
                                                 l721 43FA  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6196  
                                                 l561 1B0C  
                                                 l529 4E1C  
                                                 l369 1656  
                                                 l722 43E4  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1BF8  
                                                 l562 1AF6  
                                                 l546 4DEE  
                                                 l810 5ADA  
                                                 l715 439E  
                                                 l651 07CC  
                                                 l571 1B28  
                                                 l563 1ACA  
                                                 l555 19C8  
                                                 l379 16E2  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1AD2  
                                                 l804 5AB6  
                                                 l661 5708  
                                                 l741 3CAE  
                                                 l733 440C  
                                                 l645 0784  
                                                 l573 1B3A  
                                                 l901 6678  
                                                 l805 5ABE  
                                                 l750 3CE2  
                                                 l718 43AA  
                                                 l670 246A  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1AEA  
                                                 l806 5AC6  
                                                 l751 3CEE  
                                                 l719 43C4  
                                                 l671 2474  
                                                 l575 1B5C  
                                                 l559 19EA  
                                                 l752 3D00  
                                                 l680 25A2  
                                                 l672 2488  
                                                 l648 07CE  
                                                 l592 39D2  
                                                 l576 1B64  
                                                 l808 5AD0  
                                                 l753 3D0C  
                                                 l737 441C  
                                                 l665 25B8  
                                                 l649 07A8  
                                                 l577 1B88  
                                                 l754 3D1E  
                                                 l674 24D2  
                                                 l666 240A  
                                                 l690 12C6  
                                                 l586 1BDA  
                                                 l659 56F2  
                                                 l747 3D60  
                                                 l755 3D54  
                                                 l675 24FA  
                                                 l691 12D2  
                                                 l932 54E0  
                                                 l748 3CDA  
                                                 l668 25DC  
                                                 l676 252A  
                                                 l684 14AC  
                                                 l692 12F2  
                                                 l596 3A6A  
                                                 l764 64BE  
                                                 _BDT 000D00  
                                                 l677 253C  
                                                 l669 245E  
                                                 l693 133C  
                                                 l685 1220  
                                                 l597 3A64  
                                                 l589 1BE2  
                                                 l861 48A0  
                                                 l678 2542  
                                                 l694 1316  
                                                 l870 48EE  
                                                 l862 48AE  
                                                 l679 2556  
                                                 l687 14D0  
                                                 l695 1382  
                                                 l599 3A6E  
                                                 l767 64F4  
                                                 l871 48F6  
                                                 l696 137A  
                                                 l688 12C0  
                                                 l880 6310  
                                                 l864 4918  
                                                 l872 48FE  
                                                 l873 4908  
                                                 l865 48CE  
                                                 l938 5540  
                                                 l698 1396  
                                                 l866 495C  
                                                 l699 13FE  
                                                 l883 6336  
                                                 l867 48D6  
                                                 l892 668A  
                                                 l884 633E  
                                                 l868 48DE  
                                                 l893 6650  
                                                 l869 48E6  
                                                 l974 7124  
                                                 l895 665A  
                                                 l899 666C  
                                                 _LBA 0086  
                                                 _LUN 01E4  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                            __size_of__display_failed 02F2  
                                         _start_line1 8DE8  
                                         _start_line2 8E60  
                                         _start_line3 8EA6  
                                         _start_line4 8E16  
                                  api_prepare@command 001B  
                                          _USBSuspend 6D1C  
                                  _internalFlash_read 6BE8  
                              __end_of_display_update 5FD0  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 2C92  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                            __size_of__display_verify 0128  
                           __size_of_i2c_display_init 0048  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 007E  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 5578  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 0017  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1040 6C46  
                                                l2010 6162  
                                                l1123 7216  
                                                l1108 721E  
                                                l1140 68A6  
                                                l1141 688A  
                                                l1213 6734  
                                                l1117 71B4  
                                                l1214 6718  
                                                l1046 6F50  
                                                l1047 6F3E  
                                                l1135 71AC  
                                                l1039 6C3C  
                                                l2120 4B60  
                                                l2008 6110  
                                                l2201 65A8  
                                                l2121 4B14  
                                                l1073 709E  
                                                l1129 71C0  
                                                l2202 65AC  
                                                l2130 4B34  
                                                l1146 59D8  
                                                l1250 3E9E  
                                                l2203 65B0  
                                                l2131 4B38  
                                                l2123 4B18  
                                                l2211 29B4  
                                                l1147 59BC  
                                                l2035 45E8  
                                                l2204 65B4  
                                                l2140 4B5C  
                                                l2132 4B3C  
                                                l2124 4B1C  
                                                l2220 2A3E  
                                                l2044 45D2  
                                                l1260 3EFE  
                                                l1252 3EAE  
                                                l2205 65B8  
                                                l2133 4B40  
                                                l2125 4B20  
                                                l2221 2A42  
                                                l2213 29C2  
                                                l2206 65BC  
                                                l2150 177A  
                                                l2134 4B44  
                                                l2126 4B24  
                                                l2230 2A66  
                                                l2222 2A46  
                                                l1430 683C  
                                                l2038 455E  
                                                l1246 3F4E  
                                                l1262 3F0E  
                                                l1254 3EC6  
                                                l2151 178A  
                                                l2135 4B48  
                                                l2127 4B28  
                                                l2231 2A6A  
                                                l2223 2A4A  
                                                l2215 29FA  
                                                l2047 5EA4  
                                                l2303 6D8A  
                                                l1247 3E8C  
                                                l2144 187E  
                                                l2160 17F6  
                                                l2152 179A  
                                                l2136 4B4C  
                                                l2128 4B2C  
                                                l2232 2A6E  
                                                l2224 2A4E  
                                                l1440 5016  
                                                l1520 47B8  
                                                l1168 661A  
                                                l2320 00B4  
                                                l1264 3F34  
                                                l1256 3ED6  
                                                l1280 40B2  
                                                l2161 17FA  
                                                l2153 17AA  
                                                l2145 175C  
                                                l2137 4B50  
                                                l2129 4B30  
                                                l2217 2A8A  
                                                l2233 2A72  
                                                l2225 2A52  
                                                l1601 2BA2  
                                                l1521 47BE  
                                                l2305 6D94  
                                                l2321 0202  
                                                l1281 40C6  
                                                l2242 6E74  
                                                l2170 181E  
                                                l2162 17FE  
                                                l2154 17BA  
                                                l2138 4B54  
                                                l2234 2A76  
                                                l2226 2A56  
                                                l2218 2A36  
                                                l1442 5036  
                                                l1602 2B74  
                                                l1530 483E  
                                                l1522 47C4  
                                                l2082 1C5A  
                                                l2330 0426  
                                                l2322 0188  
                                                l2410 5FE8  
                                                l1258 3EE6  
                                                l2171 1822  
                                                l2163 1802  
                                                l2155 17CA  
                                                l2147 1760  
                                                l2139 4B58  
                                                l2235 2A7A  
                                                l2227 2A5A  
                                                l2219 2A3A  
                                                l1435 4FD6  
                                                l1531 4844  
                                                l1523 47CA  
                                                l2307 6DA2  
                                                l1275 415A  
                                                l1283 40EA  
                                                l2180 1846  
                                                l2172 1826  
                                                l2164 1806  
                                                l2156 17DA  
                                                l2148 1764  
                                                l2236 2A7E  
                                                l2228 2A5E  
                                                l3300 66E8  
                                                l1604 2C1C  
                                                l1428 6830  
                                                l1532 484A  
                                                l1524 47D0  
                                                l2084 1E24  
                                                l2332 0458  
                                                l2324 033E  
                                                l2412 5FF4  
                                                l2252 538A  
                                                l1284 410E  
                                                l1276 408C  
                                                l2181 184A  
                                                l2173 182A  
                                                l2165 180A  
                                                l2157 17EA  
                                                l2149 1768  
                                                l2237 2A82  
                                                l2229 2A62  
                                                l1605 2BE4  
                                                l1621 1008  
                                                l1613 0F60  
                                                l1541 266A  
                                                l1533 487C  
                                                l1517 47EE  
                                                l1525 47D6  
                                                l2421 4A32  
                                                l2085 1D12  
                                                l2325 0310  
                                                l2190 186A  
                                                l2182 184E  
                                                l2174 182E  
                                                l2166 180E  
                                                l2158 17EE  
                                                l2238 2A86  
                                                l3310 6A82  
                                                l1438 4FF6  
                                                l1630 10A8  
                                                l1622 0FDA  
                                                l1614 0F32  
                                                l1542 263C  
                                                l1526 47DC  
                                                l1518 47B2  
                                                l2422 496E  
                                                l2086 1D3A  
                                                l2334 048A  
                                                l2318 003E  
                                                l2406 6006  
                                                l1286 412A  
                                                l2191 186E  
                                                l2175 1832  
                                                l2167 1812  
                                                l2159 17F2  
                                                l2239 2B16  
                                                l1607 2C70  
                                                l1631 107A  
                                                l1527 47E2  
                                                l2423 49C4  
                                                l2087 1DE2  
                                                l2327 039C  
                                                l2415 5FFA  
                                                l2407 5FDC  
                                                l1287 414A  
                                                l1279 40A0  
                                                l2192 1872  
                                                l2184 1852  
                                                l2176 1836  
                                                l2168 1816  
                                                l1608 2C42  
                                                l3224 60BC  
                                                l1480 2FE6  
                                                l1472 2F8E  
                                                l1624 11A8  
                                                l1616 0FB4  
                                                l1560 32D2  
                                                l1544 2744  
                                                l1528 47E8  
                                                l2280 5DB6  
                                                l2328 03C0  
                                                l2248 533A  
                                                l2193 1876  
                                                l2185 1856  
                                                l2177 183A  
                                                l2169 181A  
                                                l3305 6A60  
                                                l3225 60B0  
                                                l1641 11DC  
                                                l1617 0F86  
                                                l1553 3258  
                                                l1545 2716  
                                                l1529 4852  
                                                l2433 54BE  
                                                l2425 4A1A  
                                                l2441 0CF8  
                                                l2194 187A  
                                                l2186 185A  
                                                l2178 183E  
                                                l3306 6A58  
                                                l1482 2FFE  
                                                l1474 2FA2  
                                                l1642 11AE  
                                                l1634 10F8  
                                                l1626 1058  
                                                l1650 2842  
                                                l1562 3354  
                                                l1554 322A  
                                                l1538 2616  
                                                l2426 4A1C  
                                                l2282 5E18  
                                                l2450 0F18  
                                                l2442 0D60  
                                                l2187 185E  
                                                l2179 1842  
                                                l1619 1186  
                                                l1635 10CA  
                                                l1627 102A  
                                                l1571 22B2  
                                                l1651 2814  
                                                l1563 3326  
                                                l1547 2798  
                                                l1539 25E8  
                                                l2427 4A26  
                                                l2443 0DDA  
                                                l2188 1862  
                                                l3228 60E4  
                                                l1484 3016  
                                                l1476 2FB8  
                                                l1580 23E6  
                                                l1572 2284  
                                                l1556 32AC  
                                                l1548 276A  
                                                l2700 590E  
                          USBConfigureEndpoint@handle 0007  
                                                l2189 1866  
                                                l3309 6A78  
                                                l3229 60F2  
                                                l1581 23B8  
                                                l1653 2896  
                                                l1557 327E  
                                                l2445 0E3A  
                                                l2198 65C0  
                                                l2710 6B64  
                                                l1662 2E3C  
                                                l1486 302A  
                                                l1478 2FCE  
                                                l1638 1148  
                                                l1574 2306  
                                                l1654 2868  
                                                l1590 3658  
                                                l2702 592A  
                                                l3510 5B3C  
                                                l2462 0BF6  
                                                l2470 0AF2  
                                                l2446 0E6C  
                                                l2438 0C4C  
                                                l2199 65A4  
                                                l2711 6B44  
                                                l1671 2F58  
                                                l1663 2E0E  
                                                l1639 111A  
                                                l1575 22D8  
                                                l1647 27EE  
                                                l1559 3300  
                                                l2703 5946  
                                                l3511 5B9C  
                                                l2471 0B6A  
                                                l2463 09FE  
                                                l2455 08A0  
                                                l2447 0E9A  
                                                l2439 0C70  
                                                l1736 6590  
                                                l2720 5246  
                                                l2712 6B74  
                                                l1672 2F2A  
                                                l1488 303E  
                                                l1568 225E  
                                                l1656 2942  
                                                l1648 27C0  
                                                l1592 36DA  
                                                l2704 5962  
                                                l2560 4EE4  
                                                l2472 0BA6  
                                                l2448 0EF6  
                                                l1728 5C78  
                                                l1737 654E  
                                                l2801 5AAC  
                                                l1665 2E90  
                                                l1577 2392  
                                                l1569 2230  
                                                l1657 2914  
                                                l1593 36AC  
                                                l2705 5968  
                                                l2561 4EA2  
                                                l2457 092A  
                                                l1729 5CA4  
                                                l2810 5870  
                                                l1754 5D46  
                                                l1666 2E62  
                                                l1578 235A  
                                                l1690 3180  
                                                l1586 3632  
                                                l2706 596E  
                                                l2554 5F64  
                                                l2474 0BC2  
                                                l2466 0A3A  
                                                l2458 0992  
                                                l1739 6576  
                                                l1755 5D50  
                                                l1683 3106  
                                                l1587 3604  
                                                l2563 4EAE  
                                                l2459 09EC  
                                                l2716 51DC  
                                                l1668 2EE4  
                                                l1692 3202  
                                                l1684 30D8  
                                                l2652 46FC  
                                                l2468 0AE8  
                                                l1757 5D88  
                                                l1781 63AE  
                                                l1773 6756  
                                                l1669 2EB6  
                                                l1677 652A  
                                                l1693 31D4  
                                                l1589 3686  
                                                l2661 3742  
                                                l2653 470A  
                                                l3509 5BA4  
                                                l2469 0BAC  
                                                l1782 63B8  
                                                l1774 6760  
                                                l1598 2B4E  
                                                l1678 64FC  
                                                l1686 315A  
                                                l2670 3840  
                                                l2654 471C  
                                                l2807 5834  
                                                l1759 5DA6  
                                                l3295 66BE  
                                                l1599 2B20  
                                                l1687 312C  
                                                l2671 37C8  
                                                l2655 472E  
                                                l2567 6E36  
                                                l3296 66B6  
                                                l2672 37E2  
                                                l2664 3790  
                                                l2680 4EF8  
                                                l2656 473C  
                                                l2576 6C1C  
                                                l1689 31AE  
                                                l2649 4782  
                                                l2657 4764  
                                                l1881 6CD2  
                                                l2666 3796  
                                                l2682 4F32  
                                                l1970 559E  
                                                l1787 6F9A  
                                                l3299 66DE  
                                                l3483 539C  
                                                l2843 5BEC  
                                                l3491 608C  
                                                l1971 55E8  
                                                l2844 5BE0  
                                                l2668 380A  
                                                l2692 21F2  
                                                l2684 4F70  
                                                l3492 604E  
                                                l3485 53D6  
                                                l2669 37B0  
                                                l2693 2220  
                                                l2685 4F3C  
                                                l1885 6CA0  
                                                l3486 5414  
                                                l2694 21F8  
                                                l2686 4F48  
                                                l3479 6A2C  
                                                l2847 5C20  
                                                l2792 6442  
                                                l2848 5C2E  
                                                l2784 6AB4  
                                                l3497 6DEC  
                                                l1969 5604  
                                                l2785 6A90  
                                                l3498 6DDC  
                                                l2786 6AC2  
                                                l2699 5974  
                                                l2787 6AA2  
                           ?__offset_from_file_number 0001  
                                                l2798 5A78  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8DB8  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8C82  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E79  
                               __end_of_checked_line4 8D17  
                                      _bootloader_run 5FD0  
                                 ?_internalFlash_read 000E  
                                                u7005 5CD2  
                                                u7104 3C64  
                                                u7105 3C5E  
                                                u7130 3C9A  
                                                u7220 5BF0  
                                                u8015 1246  
                                                u7250 60C0  
                                                u6700 6A64  
                                                u7500 43E0  
                                                u8140 1438  
                                                u7068 3C0E  
                                                u9100 16C8  
                                                u7069 3C20  
                                                u8150 143A  
                                                u8038 127A  
                                                u8039 128E  
                               ??_USBCtrlTrfTxService 0001  
                                                u6800 6370  
                                                u8240 6868  
                                                u9200 062C  
                                                u7088 3C32  
                                                u7089 3C46  
                                                u6810 637C  
                                                u7530 43F6  
                                                u7370 4DC8  
                                                u6820 6386  
                                                u6670 66C2  
                                                u7550 4408  
                                                u9310 07D6  
                                                _UCFG 000F39  
                                                u9400 1EF4  
                                                u6808 6372  
                                                u7640 5002  
                                                u8168 1440  
                                                u8169 1454  
                                                u6826 6388  
                                                u6818 637E  
                                                u6770 634C  
                                                u7650 5022  
                                                u7570 4418  
                                                u8098 1348  
                                                u9218 064C  
                                                u8099 135C  
                                                u9219 0660  
                                                u9500 1FF4  
                                                u9420 1F2E  
                                                u6780 6358  
                                                _UEP0 000F26  
                                                u8701 29CC  
                                                _UEP1 000F27  
                                                u6790 6364  
                                                u9270 074C  
                                                u9520 2024  
                                                u9440 1F5C  
                                                u9360 1E6C  
                                                u7760 30CE  
                                                u9280 075E  
                                                u9168 052C  
                                                u7840 4ABA  
                                                u7905 2430  
                                                u9169 0540  
                                                u9345 6EB0  
                                                u6778 634E  
                                                u7770 6CCE  
                                                u9178 055C  
                                                u8810 4662  
                                                u9179 0570  
                                                _UEIE 000F37  
                                                u9460 1F8C  
                                                u9380 1EB0  
                                                u6788 635A  
                                                u7780 6C9C  
                                                u7860 4AFA  
                                                u6798 6366  
                                                u6895 5D5C  
                                                u7847 4AB0  
                                                u9480 1FC6  
                                                u7880 606E  
                                                u6985 63C4  
                                                u9705 6998  
                                                u8850 3542  
                                                u9810 615E  
                                                u7867 4AF0  
                                                u8860 3572  
                                                u7958 24AC  
                                                u9830 5B6C  
                                                u7887 6064  
                                                u7959 24C0  
                                                u9920 51D8  
                                                u8880 35CA  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8857 3538  
                                                u9770 55D4  
                                                u8867 3568  
                                                u8887 35C0  
                                                u9855 5E2A  
                                                u9875 6D5A  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                                api_parse@out_idx_ptr 003D  
                                      _ResetSenseData 61C8  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0173  
                                                _main 4888  
                                                _itoa 6A08  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4888  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5394  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                             __bootloader_verify_file 0C0E  
                           _ExternalFlash_MediaDetect 7254  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7182  
                               _display_get_character 6DFE  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DA8  
                                __end_of_failed_line2 8CF4  
                                __end_of_failed_line4 8E71  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4266  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 016B  
                    __end_of__fat_sector_from_cluster 70B8  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 2C92  
                                      _hex_file_entry 01C6  
                              _bootloader_get_entries 71EE  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 6CEA  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 0167  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                                               l10101 429A  
                                               l10401 3046  
                                               l10219 43AA  
                                               l10513 4A68  
                                               l10291 6678  
                                               l12205 1FA8  
                                               l12125 1E44  
                                               l10381 2FE6  
                                               l10373 2FB8  
                                               l10365 2F8E  
                                               l10623 25B2  
                                               l10287 665A  
                                               l12217 1FCE  
                                               l12153 1ECC  
                                               l10385 2FFE  
                                               l10377 2FCE  
                                               l10369 2FA2  
                                               l10545 604E  
                                               l10465 6DDC  
                                               l13113 4E9A  
                                               l11523 29FA  
                                               l11515 29C2  
                                               l12227 1FF4  
                                               l12139 1E88  
                                               l11509 29B4  
                                               l12229 1FFC  
                                               l10389 3016  
                                               l11631 6E74  
                                               l11615 2A8A  
                                               l12191 1F64  
                                               l12167 1F10  
                                               l13047 49C4  
                                               l13119 4EA6  
                                               l12179 1F36  
                                               l10771 6834  
                                               l14019 0B6A  
                                               l12189 1F5C  
                                               l10765 6828  
                                               l13191 4F40  
                                               l12519 5B3C  
                                               l13329 33B4  
                                               l14145 2D90  
                                               l11931 05FC  
                                               l13357 3418  
                                               l12805 4540  
                                               l13633 37DE  
                                               l13467 19E2  
                                               l11699 462E  
                                               l12923 530C  
                                               l12771 5C42  
                                               l15333 5B00  
                                               l12941 535C  
                                               l15335 5B34  
                                               l12839 45E8  
                                               l15347 1896  
                                               l15349 19AE  
                                        spi_tx@length 0003  
                                               l13887 0C68  
                                  ?__flash_get_status 000D  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5C40  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10114 3A3A  
                                               u10050 39A0  
                                               u10115 3A34  
                                               u10220 45DE  
                                               u10038 396E  
                                               u10230 45E8  
                                               u10039 3982  
                                               u10064 39B6  
                                               u10065 39B0  
                                               u10305 1CCC  
                                               u10074 39E8  
                                               u10410 00A2  
                                               u10075 39E2  
                                               u11070 1BBC  
                                               u10510 49F0  
                                               u10270 5E14  
                                               u10280 1C34  
                                               u10360 5340  
                                               u12120 4144  
                                               u10098 3A0A  
                                               u10099 3A1C  
                                               u11171 67E6  
                                               u11085 6604  
                                               u10285 1C2A  
                                               u10630 4EC8  
                                               u10390 5390  
                                               u12070 40D8  
                                     __end_of___llmod 6104  
                                               u10730 33D8  
                              __end_of_USBDeviceTasks 2E08  
                                               u10490 4994  
                                               u10570 5F30  
                                               u10900 1A12  
                                               u11460 0CBA  
                                               u10565 7054  
                                               u10590 4E64  
                                               u13127 67F6  
                                               u10680 4F6E  
                                               u10760 347C  
                                               u11560 08EC  
                                               u13137 6808  
                                               u13147 6F44  
                                               u13157 6568  
                                               u13167 657A  
                                               u10880 19DE  
                                               u13177 6584  
                                               u11880 2E04  
                                               u11970 54FA  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11990 550E  
                                     __end_of___lwdiv 66F2  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0016  
                                     __end_of___lwmod 6A8C  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 002D  
                                _file_minimum_address 0141  
                                    ??__display_start 001D  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FB  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 00D2  
                           __end_of__find_nth_cluster 5616  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 1C16  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 4D6C  
                     __end_of_internalFlash_getBuffer 71A8  
                     __end_of_USBCtrlEPAllowDataStage 56B4  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6038  
               __i2c_display_send_init_sequence@F6823 02BB  
                       __end_of_MSDTransferTerminated 64F6  
                                        _gblCBWLength 009B  
                           ??_internalFlash_writePage 000B  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                              __end_of_ResetSenseData 622A  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 002F  
                           __data_sector_from_cluster 7190  
                           fat_get_format_status@cntr 002E  
                                               pclath 000FFA  
                                     __end_of_ui_init 711C  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 009F  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 5F66  
                          __end_of__display_rebooting 654C  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5BBE  
                               hexCharsToUint8@retVal 0006  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                                      _MSDReadHandler 2408  
                        __size_of_USBStdSetCfgHandler 00E0  
               __bootloader_check_address@byte_status 000B  
                       internalFlash_readPage@address 0018  
                                     __initialization 524A  
                           __end_of__flash_get_status 6D1C  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                                 _system_minimal_init 70F8  
               __end_of_ExternalFlash_MediaInitialize 7086  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 706C  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 015D  
                                        __end_of_main 4964  
                                        __end_of_itoa 6A4A  
                       __end_of_system_encoder_enable 7162  
                          i2c_eeprom_readByte@address 0012  
              __end_of__ic2_display_set_ddram_address 6FDE  
             __size_of__ic2_display_set_ddram_address 0020  
                      __ic2_display_set_ddram_address 6FBE  
                     __end_of_i2c_display_write_fixed 6742  
                                        __end_of_utoa 5438  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 6342  
                                    _timer_pseudo_isr 6C1E  
                       fat_read_from_file_fast@offset 00BA  
                            __parse_command_short@cmd 0024  
                  fat_read_from_file_fast@read_length 00BE  
                                    __end_of_i2c_init 7034  
                       fat_read_from_file_fast@sector 00B6  
                            __end_of__i2c_acknowledge 71C6  
                                     _hex_file_offset 0082  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 70D0  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0165  
                                api_prepare@outBuffer 0019  
                                              ??_main 005D  
                                    __end_of__i2c_get 71BC  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0100  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00CC  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 5DAA  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7254  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7250  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00DE  
                               ??__bootloader_program 00C4  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                _i2c_eeprom_writeByte 6982  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                          __end_of__display_suspended 3224  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 6F36  
                              __flash_write_to_buffer 6742  
                                _start_from_byte_next 0094  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 70D0  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 001D  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 721C  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 686C  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 00C4  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 65F8  
                                    __end_of__get_fbr 19BE  
                                    __end_of__get_mbr 4BE0  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 0044  
                                   ??__display_verify 001D  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 25E2  
                                 _flash_pages_written 015F  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5438  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 7172  
                   __bootloader_program@page_to_write 00FD  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00AD  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 4EE6  
                        __end_of__flash_set_page_size 5CBA  
                                     _hexCharsToUint8 7034  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 5E8C  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                              ___wmul 6EEA  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2860 0003  
                                          _SoftDetach 009A  
                                           ??___lwmod 0005  
                                              _buffer 02C4  
                                   _USBEnableEndpoint 6AC8  
                       __bootloader_program@address32 00F6  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6038  
                                  ?_fat_get_file_size 0036  
                                              _memset 6DD2  
                    __end_of__sector_from_file_number 6DD2  
                                              clear_0 52A4  
                                              clear_1 52B8  
                                              clear_2 52CA  
                                              clear_3 52D6  
                                              clear_4 52E2  
                           _ExternalFlash_SectorWrite 6C86  
                                   api_parse@inBuffer 0036  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                                              _reboot 7086  
                __bootloader_check_address@worst_case 000A  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 408A  
                                              _spi_tx 63F2  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0009  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 6E78  
                                              _tx_buf 01F8  
                               i2c_display_init@F6826 02B2  
                          __parse_command_long@length 0035  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                        __end_of_jump_to_main_program 7232  
                               __end_of_fat_find_file 45EC  
                      __parse_command_long@out_buffer 0031  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 0092  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 8C6C  
                          __size_of__find_nth_cluster 009E  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 628A  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 622A  
                                              tblptru 000FF8  
                                    __end_of_spi_init 6AC8  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                 ?_flash_partial_read 0028  
                                    _i2c_display_init 67DC  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 6166  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 724A  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AC  
                          ??_APP_DeviceCustomHIDTasks 0041  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 664C  
                            __end_of__i2c_eeprom_busy 6F36  
                                          __accesstop 0060  
                             __end_of__initialization 52EA  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0172  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 71B2  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 6B78  
                   __end_of_failed_line3_noNextRecord 8E16  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 5EFA  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 6B04  
                            _bootloader_get_file_size 7140  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7258  
                                        __pidataBANK1 6FFC  
                                        __pidataBANK2 70E6  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7202  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 71F8  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 00B2  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 0F2C  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4CA8  
                                 _userInterfaceStatus 0097  
                                 display_prepare@mode 0023  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3C82  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                       __size_of__display_programming 01CA  
                             __end_of_system_delay_ms 6F5A  
                                  __size_of_api_parse 0124  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0163  
                      __end_of_failed_line3_startCode 8CBD  
                                  _flash_sector_write 6792  
                                  __size_of__spi_init 0038  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8D98  
                                        _failed_line2 8CE2  
                                        _failed_line4 8E69  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A1  
                           __end_of_SYSTEM_Initialize 66A0  
                                   __end_of__i2c_read 5A28  
                                   __end_of__i2c_send 722C  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 50F6  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 721C  
                                         ?__i2c_start 0001  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                    __size_of_i2c_display_write_fixed 0050  
                                    _USBStallEndpoint 3A74  
                        __size_of_i2c_eeprom_readByte 0054  
                                          _gblNumBLKS 0149  
                                           ?_i2c_init 0001  
                                    _mediaInformation 01DD  
                             __end_of_hexCharsToUint8 7050  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5394  
                                       __flash_wakeup 654C  
                            __fill_buffer_get_display 4EE6  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 0072  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 001E  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 408A  
               __end_of_APP_DeviceCustomHIDInitialize 6C86  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 6C52  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                           __bootloader_check_address 4964  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                                             ?___wmul 0001  
                                          _fat_format 1E3C  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001D  
                                    _USBCtrlEPService 504A  
                                             ?_ui_run 0001  
                                          _ep_data_in 015A  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0139  
                                  __display_clear@row 0003  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 2E08  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3962  
           __ic2_display_set_ddram_address@data_array 000C  
                                  _USBCheckStdRequest 4184  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                          _flash_init 7182  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4B12  
                                   __end_of__get_data 6E78  
                                 _USBStdSetCfgHandler 45EC  
                                  __display_done@cntr 001D  
                                   __end_of__get_root 2B1A  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8D68  
                                          _done_line2 8E9D  
                                          _done_line3 8D58  
                                          _done_line4 8D48  
                                             _SSP1ADD 000FC8  
                       i2c_display_init@init_sequence 000C  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 70E6  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0161  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 5C40  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 6C52  
                                        __normal_mode 62EA  
                          __end_of_APP_DeviceMSDTasks 712E  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 64A0  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 720C  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00EC  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 5DAA  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 5D32  
                                          ??_i2c_init 0001  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                           ?__sector_from_file_number 0001  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 68FA  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 00B8  
                      __end_of_bootloader_get_entries 71F8  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 384A  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3962  
                                     hexCharToUint8@c 0001  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
                                   __end_of__spi_init 6BB0  
                         __size_of_USBCheckHIDRequest 00E2  
                                             __Lparam 0000  
                                _jump_to_main_program 722C  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 001D  
                             __end_of_MSDErrorHandler 3D88  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 5E1C  
                                          _last_error 0095  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                   __end_of__data_sector_from_cluster 719E  
                            ?_internalFlash_erasePage 0009  
                                __end_of_found_line3b 8E96  
                                             ___lldiv 5BBE  
                                    ??_USBDeviceTasks 0020  
                                     __size_of___wmul 0026  
                                             ___llmod 609E  
                                             ___lwdiv 66A0  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 6A4A  
                                   _fast_read_cluster 00B0  
                                  __display_rebooting 64F6  
                         __end_of__parse_format_drive 524A  
                         __size_of_internalFlash_read 0036  
                                   ?__i2c_acknowledge 0001  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 6B3E  
                                             __pcinit 524A  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                              __display_itoa_u32@cntr 0014  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u16@text 001B  
                              __display_itoa_u32@text 0012  
                                      ?__display_done 0001  
                                             __ptext0 4888  
                                             __ptext1 408A  
                                     __display_failed 0F2C  
                                             __ptext2 7152  
                                             __ptext3 67DC  
                                             __ptext4 3E8A  
                                             __ptext5 6C1E  
                                             __ptext6 720C  
                                             __ptext7 70F8  
                                             __ptext8 7018  
                                             __ptext9 68FA  
                                             _inPipes 006C  
                                     __size_of_ui_run 00FA  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A2  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                  __display_itoa_u32@number_of_digits 0015  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 6FBE  
                             __read_value_from_offset 68B4  
                             _fat_read_from_file_fast 1C16  
                                        ??_USBSuspend 0018  
                                     __display_search 3224  
                                  __end_of_USBMSDInit 3C82  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7172  
                                             _msd_cbw 000D40  
                                     __display_verify 35FE  
                                             _msd_csw 000D80  
                                __i2c_not_acknowledge 71A8  
                            __offset_from_file_number 6E9E  
                                             _ui_init 710A  
                    ??__ic2_display_set_ddram_address 000B  
                     ?__ic2_display_set_ddram_address 0001  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 71DA  
                                  __end_of_USB_CD_Ptr 8EA5  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 5B3A  
                                end_of_initialization 52EA  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 64A0  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 222A  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 203C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E81  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 0090  
                           __end_of_MSDProcessCommand 3A74  
                                             itoa@buf 0011  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 014D  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 69C6  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
                               ??_USBStdSetCfgHandler 0018  
                     __parse_command_long@out_idx_ptr 0033  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                                  __display_suspended 30D2  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 6D4C  
                             _USBCtrlEPAllowDataStage 5616  
                                   __end_of_spi_tx_rx 5878  
                                   __end_of_spi_tx_tx 5AB4  
                            __end_of_i2c_display_init 6824  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 71D0  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 71C6  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0024  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 3F8A  
                                             utoa@val 000A  
                                           _MSD_State 00A0  
                                 ?__display_suspended 0001  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 7152  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 001B  
                          _USBStatusStageEnabledFlag1 00A5  
                          _USBStatusStageEnabledFlag2 00A4  
                      __parse_format_drive@out_buffer 0029  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTEbits 000F84  
                      __end_of__flash_write_to_buffer 6792  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0013  
                            ?_internalFlash_writePage 0009  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                  api_parse@outBuffer 0039  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00A8  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02C4  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 66F2  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                                ??__display_suspended 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B4  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DA8  
                                       _checked_line2 8C6D  
                                       _checked_line3 8E71  
                                       _checked_line4 8D06  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E25  
                             __size_of__display_start 01D8  
                                     _suspended_line1 8D38  
                                     _suspended_line2 8E4D  
                                     _suspended_line3 8EA5  
                                     _suspended_line4 8D28  
                        __end_of_USBTransferOnePacket 3E8A  
                                   ?__i2c_eeprom_busy 0001  
                               __i2c_eeprom_busy@busy 0006  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 0011  
                        __end_of__parse_command_short 599C  
               __end_of_internalFlash_pageFromAddress 706C  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7050  
                                  ??__i2c_eeprom_busy 0006  
                                __end_of_reboot_line1 8E40  
                                __end_of_search_line1 8DE8  
                                __end_of_search_line2 8D28  
                                __end_of_search_line3 8CAA  
                                __end_of_search_line4 8E60  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6104  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 121E  
                                    ?_MSDErrorHandler 0001  
                  __find_nth_cluster@sector_in_buffer 003E  
                              _USBCtrlTrfSetupHandler 5878  
                       ??_bootloader_get_rec_checksum 0001  
                      __bootloader_program@entry_page 00CE  
                              __display_checked@start 001F  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00DE  
                             __end_of__display_search 3376  
                               __end_of_USBDeviceInit 34C4  
               __end_of_USBIncrement1msInternalTimers 6F7C  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 6F5A  
                                     ??__display_done 001D  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                                      __end_of___wmul 6F10  
                             __end_of__display_verify 3726  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 3B7C  
                                 _i2c_eeprom_readByte 65F8  
                 __bootloader_program@start_from_byte 00FA  
                         __end_of_system_minimal_init 710A  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8C82  
                                      __end_of_memcpy 609E  
                                     _MSDRetryAttempt 009C  
                                      __end_of_memset 6DFE  
                                      __end_of_reboot 70A0  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                                   _USBBusIsSuspended 00AA  
                                      __end_of_ui_run 4184  
                                      __end_of_spi_tx 644A  
                                 __end_of__ui_encoder 3F8A  
                           __flash_set_page_size@size 0018  
                                 start_initialization 524A  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 47AA  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0018  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 008E  
                        __end_of_USBConfigureEndpoint 57E4  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 175A  
                                 __flash_partial_read 5CBA  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 0200  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 0099  
                                      _hexCharToUint8 6D7A  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 4D6C  
                            _fast_read_cluster_number 00AE  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 2984  
                            __end_of_USBCtrlEPService 50F6  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 6B04  
                                           __i2c_read 599C  
                                           __i2c_send 7224  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7214  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 001C  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7250  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E07  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 0092  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 5E1C  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 000E  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D88  
                                   _programming_line2 8CD0  
                                   _programming_line3 8E81  
                                   _programming_line4 8D78  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0026  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                            ??___wmul 0005  
                                 _USBStdGetDscHandler 34C4  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT12 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A0  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01E4  
                                         __pdataBANK2 02B2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 003A  
                                            ??_reboot 0024  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0024  
                                  __end_of__i2c_start 7224  
                                            ??_spi_tx 0005  
                                  __end_of__i2c_write 68B4  
                            __end_of_system_full_init 693E  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B5  
                      __end_of_USBStdGetStatusHandler 51A0  
                          ??_system_minimal_init_undo 0001  
                            __fat_sector_from_cluster 70A0  
                         api_parse@receivedDataLength 0038  
                                    api_parse@out_idx 003F  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 4A3E  
               __end_of_internalFlash_addressFromPage 6D7A  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 6D4C  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B6  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 442A  
             __bootloader_program@address_within_page 00D0  
                             __end_of_suspended_line1 8D48  
                             __end_of_suspended_line2 8E57  
                             __end_of_suspended_line3 8EA6  
                             __end_of_suspended_line4 8D38  
                              __end_of_hexCharToUint8 6DA6  
                           __size_of__display_checked 0178  
                                           _gblBLKLen 0145  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 6F7C  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 5E8C  
                                        _found_line3b 8E8F  
                                           __get_data 6E50  
                                   _flash_sector_read 6EC4  
                    __bootloader_program@return_value 00F2  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 68FA  
                     __end_of_fat_read_from_file_fast 1E3C  
                                           __get_root 2984  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 6BE8  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 6FFC  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 693E  
                                        _pBDTEntryOut 0078  
                                          ?__i2c_stop 0001  
                                           __read_fat 644A  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8D98  
                           __end_of_programming_line2 8CE2  
                           __end_of_programming_line3 8E88  
                           __end_of_programming_line4 8D88  
                    __end_of_ExternalFlash_SectorRead 6CEA  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 720C  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7202  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 52F0  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 3726  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 442A  
                                  _APP_DeviceMSDTasks 711C  
                                       __pmediumconst 8C6C  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 3C82  
                                           __ptext101 3A74  
                                           __ptext110 7254  
                                           __ptext102 61C8  
                                           __ptext111 54D8  
                                           __ptext103 6CB8  
                                           __ptext120 71DA  
                                           __ptext112 46CC  
                                           __ptext104 6EC4  
                                           __ptext121 70D0  
                                           __ptext113 6038  
                                           __ptext105 5CBA  
                                           __ptext130 66F2  
                                           __ptext122 7238  
                                           __ptext114 442A  
                                           __ptext106 56B4  
                                           __ptext131 6FDE  
                                           __ptext123 723E  
                                           __ptext115 71D0  
                                           __ptext107 71C6  
                                           __ptext140 222A  
                                           __ptext132 6FBE  
                                           __ptext124 3726  
                                           __ptext116 4EE6  
                                           __ptext108 712E  
                                           __ptext141 7140  
                                           __ptext133 47AA  
                                           __ptext125 590A  
                                           __ptext117 6DFE  
                                           __ptext109 706C  
                                           __ptext150 2E08  
                                           __ptext142 0F2C  
                                           __ptext134 35FE  
                                           __ptext126 6F36  
                                           __ptext118 203C  
                                           __ptext151 71F8  
                                           __ptext143 71E4  
                                           __ptext135 30D2  
                                           __ptext127 7086  
                                           __ptext119 7232  
                                           __ptext160 6982  
                                           __ptext152 6824  
                                           __ptext144 724A  
                                           __ptext136 25E2  
                                           __ptext128 7244  
                                           __ptext161 686C  
                                           __ptext153 2B1A  
                                           __ptext145 71EE  
                                           __ptext137 3224  
                                           __ptext129 5F66  
                                           __ptext170 6792  
                                           __ptext162 6F10  
                                           __ptext154 7202  
                                           __ptext146 2F7A  
                                           __ptext138 64F6  
                                           __ptext171 6742  
                                           __ptext163 6342  
                                           __ptext155 4F9A  
                                           __ptext147 6EEA  
                                           __ptext139 27BA  
                                           __ptext180 2984  
                                           __ptext172 5A28  
                                           __ptext164 7214  
                                           __ptext156 6A08  
                                           __ptext148 609E  
                                           __ptext181 4B12  
                                           __ptext173 639A  
                                           __ptext165 721C  
                                           __ptext157 5394  
                                           __ptext149 5BBE  
                                           __ptext182 175A  
                                           __ptext174 5D32  
                                           __ptext166 7224  
                                           __ptext158 6A4A  
                                           __ptext183 65A2  
                                           __ptext175 6F7C  
                                           __ptext167 6B3E  
                                           __ptext159 66A0  
                                           __ptext184 6E50  
                                           __ptext176 654C  
                                           __ptext168 51A0  
                                           __ptext185 3D88  
                                           __ptext177 63F2  
                                           __ptext169 1E3C  
                                           __ptext186 0000  
                                           __ptext178 6CEA  
                                           __ptext179 57E4  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 004A  
                                            ?___lwdiv 0001  
                                           __spi_init 6B78  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 3E8A  
                                           _idle_rate 00B3  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 46CC  
                                     __i2c_write@data 0006  
                                _file_maximum_address 013D  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 000F  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 3D88  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0021  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 590A  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 6F9E  
                                       _fat_find_file 450C  
                       __size_of_i2c_eeprom_writeByte 0044  
                                            ?_ui_init 0001  
                           __display_programming@cntr 001D  
                                   __display_itoa_u32 2F7A  
                                   __display_itoa_u16 4F9A  
                    __size_of_internalFlash_erasePage 006C  
                        __end_of_USBCtrlTrfOutHandler 62EA  
                           __end_of_flash_sector_read 6EEA  
                               ??_USBStdGetDscHandler 0001  
                                 __end_of_found_line1 8DD8  
                                 __end_of_found_line2 8CD0  
                                 __end_of_found_line3 8E9D  
                                 __end_of_found_line4 8D06  
                                         _ep_data_out 0157  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 71E4  
              __size_of_bootloader_get_rec_dataLength 000A  
                       _bootloader_get_rec_dataLength 71DA  
                                       _MSDWriteState 009D  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u16 0019  
                                  ?__display_itoa_u32 000E  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 6824  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0016  
                                      __display_found 222A  
                    __end_of_bootloader_get_file_size 7152  
                                         _file_buffer 0280  
                                     _config_internal 0154  
                                          ?__get_root 0001  
                                       _ui_get_status 7244  
                                     _config_external 0151  
                                      __display_start 25E2  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 6E28  
                                         _file_number 00FF  
                                      ___wmul@product 0005  
                                            _LATAbits 000F89  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                          __end_of_USBCheckHIDRequest 4348  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                 ??__display_itoa_u16 001D  
                                 ??__display_itoa_u32 0014  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                            __fat_offset_from_cluster 70B8  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                   __bootloader_verify_file@address32 00F1  
                          __end_of_internalFlash_read 6C1E  
                                          ?_api_parse 0036  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                                            _MSDTasks 19BE  
                          _USBDeferINDataStagePackets 00A3  
                                        ??_fat_format 0025  
                                _active_configuration 0175  
                                   ?_i2c_display_init 0001  
                             spi_tx_rx@command_length 0003  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 5750  
                          ?__data_sector_from_cluster 0001  
              __ic2_display_set_ddram_address@address 000B  
                                  ??_i2c_display_init 000B  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 57E4  
                                           _spi_tx_tx 5A28  
                                __display_verify@cntr 001F  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 008C  
                               flash_sector_read@data 002A  
                                __display_programming 27BA  
                                   ___wmul@multiplier 0001  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                           __end_of__display_itoa_u16 504A  
                           __end_of__display_itoa_u32 30D2  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DC8  
                                __end_of_verify_line2 8E4D  
                                __end_of_verify_line3 8E8F  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AB  
                   __end_of_ExternalFlash_MediaDetect 7258  
                        __size_of__parse_format_drive 00AA  
                                        _reboot_line1 8E33  
                                        _search_line1 8DD8  
                                        _search_line2 8D17  
                                        _search_line3 8C96  
                                        _search_line4 8E57  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 00C0  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 4F9A  
                        ??_bootloader_get_rec_address 0003  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 686C  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 724A  
                               __display_checked@cntr 0020  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 2408  
                             __end_of_USBStallHandler 6982  
                            __sector_from_file_number 6DA6  
                      __end_of_internalFlash_readPage 6A08  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 27BA  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 525E  
                                           copy_data1 527E  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 46CC  
                                  __end_of_fat_format 203C  
                                 __display_found@cntr 0019  
                                            _i2c_init 7018  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 00B8  
                                         ??__i2c_send 0001  
                                        _MSDReadState 009E  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 71B2  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 0012  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8FBF  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7190  
                                      _TransferLength 008A  
                                _bootloader_extension 8FC7  
                          __end_of_USBCheckMSDRequest 4E2E  
                                     api_parse@in_idx 0040  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 6CB8  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 000A  
                                  __end_of_done_line1 8D78  
                                  __end_of_done_line2 8EA3  
                                  __end_of_done_line3 8D68  
                                  __end_of_done_line4 8D58  
                                      __i2c_wait_idle 6342  
                                     _MSDWriteHandler 121E  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 0098  
                           __size_of__i2c_eeprom_busy 0026  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 7214  
                                         _found_line1 8DC8  
                                         _found_line2 8CBD  
                                         _found_line3 8E96  
                                         _found_line4 8CF4  
                                            __get_fat 65A2  
                                            __get_fbr 175A  
                                            __get_mbr 4B12  
                                  ??_USBStallEndpoint 0002  
                  __end_of_ExternalFlash_CapacityRead 7140  
                          _ExternalFlash_CapacityRead 712E  
                             ??_MSDTransferTerminated 000E  
                             __display_suspended@cntr 0001  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u16@value 0019  
                             __display_itoa_u32@value 000E  
                                            _fat_init 7162  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                          __size_of_flash_sector_read 0026  
                                    __display_checked 2B1A  
               __end_of_bootloader_get_rec_recordType 7238  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7232  
                                            __ptext10 710A  
                                            __ptext11 7182  
                                            __ptext20 5FD0  
                                            __ptext12 6A8C  
                                            __ptext21 0C0E  
                                            __ptext13 6B78  
                                            __ptext30 7050  
                                            __ptext22 085A  
                                            __ptext14 5C40  
                                            __ptext31 719E  
                                            __ptext23 0020  
                                            __ptext15 7162  
                                            __ptext40 70A0  
                                            __ptext32 5EFA  
                                            __ptext24 7034  
                                            __ptext16 52F0  
                                            __ptext41 70B8  
                                            __ptext33 6E28  
                                            __ptext25 5E1C  
                                            __ptext17 6F9E  
                                            __ptext50 6E9E  
                                            __ptext42 7190  
                                            __ptext34 622A  
                                            __ptext26 6D7A  
                                            __ptext18 6B04  
                                            __ptext51 450C  
                                            __ptext43 5DAA  
                                            __ptext35 6D4C  
                                            __ptext27 4E2E  
                                            __ptext19 722C  
                                            __ptext60 6BB0  
                                            __ptext52 5B3A  
                                            __ptext44 4964  
                                            __ptext36 1C16  
                                            __ptext28 69C6  
                                            __ptext61 6D1C  
                                            __ptext53 62EA  
                                            __ptext45 5438  
                                            __ptext37 5578  
                                            __ptext29 6BE8  
                                            __ptext70 45EC  
                                            __ptext62 693E  
                                            __ptext54 65F8  
                                            __ptext46 5E8C  
                                            __ptext38 68B4  
                                            __ptext71 6DD2  
                                            __ptext63 6F5A  
                                            __ptext55 599C  
                                            __ptext47 6104  
                                            __ptext39 644A  
                                            __ptext80 7172  
                                            __ptext72 50F6  
                                            __ptext64 3376  
                                            __ptext56 71A8  
                                            __ptext48 6E78  
                                            __ptext81 3B7C  
                                            __ptext73 34C4  
                                            __ptext65 504A  
                                            __ptext57 71B2  
                                            __ptext49 6DA6  
                                            __ptext90 711C  
                                            __ptext82 6C52  
                                            __ptext74 14D6  
                                            __ptext66 5878  
                                            __ptext58 71BC  
                                            __ptext91 19BE  
                                            __ptext83 6AC8  
                                            __ptext75 5AB4  
                                            __ptext67 3F8A  
                                            __ptext59 2C92  
                                            __ptext92 3962  
                                            __ptext84 5750  
                                            __ptext76 4D6C  
                                            __ptext68 5616  
                                            __ptext93 6166  
                                            __ptext85 628A  
                                            __ptext77 4266  
                                            __ptext69 4184  
                                            __ptext94 049C  
                                            __ptext86 384A  
                                            __ptext78 664C  
                                            __ptext95 121E  
                                            __ptext87 4CA8  
                                            __ptext79 64A0  
                                            __ptext96 7250  
                                            __ptext88 4BE0  
                                            __ptext97 6C86  
                                            __ptext89 4A3E  
                                            __ptext98 2408  
                                            __ptext99 4348  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 61C8  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6166  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_root 0003  
                         __size_of__display_suspended 0152  
                             __size_of_bootloader_run 0068  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 6B3E  
                   __end_of_failed_line3_addressRange 8C96  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                      __size_of__bootloader_find_file 00A0  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5578  
                       __end_of__bootloader_find_file 54D8  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 65A2  
                      __end_of_USBCtrlTrfSetupHandler 590A  
                                       __size_of_main 00DC  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 0032  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 00BC  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 723E  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7238  
                                 _USBCtrlTrfInHandler 4BE0  
                  _MSDProcessCommandMediaPresent$2390 003C  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 003B  
                              __end_of__i2c_wait_idle 639A  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                            _spi_init 6A8C  
                                _USBCtrlTrfOutHandler 628A  
                    __end_of__offset_from_file_number 6EC4  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 4CA8  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 719E  
                                ?__parse_command_long 002F  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                    __parse_format_drive@return_value 002E  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                 __display_start@cntr 001D  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 2F7A  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 0024  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A6  
                          __size_of__display_itoa_u16 00B0  
                          __size_of__display_itoa_u32 0158  
                     __end_of__fill_buffer_get_status 450C  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 6E50  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 6E28  
                             _internalFlash_erasePage 5EFA  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0012  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5750  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 56B4  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                                 __end_of_start_line1 8DF8  
                                 __end_of_start_line2 8E69  
                                 __end_of_start_line3 8EA7  
                                 __end_of_start_line4 8E25  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 71D0  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 71BC  
                              bootloader_run@timeslot 005C  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0062  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5B3A  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5AB4  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 6CB8  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 63F2  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 639A  
                SYSTEM_Initialize@pll_startup_counter 0001  
                                     _display_content 0176  
                          __end_of_flash_partial_read 6E9E  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 14D6  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7244  
                         _bootloader_get_rec_checksum 723E  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 00CC  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 47AA  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8DF8  
                                 _USBCtrlTrfRxService 384A  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 6BB0  
                               ??__parse_command_long 0035  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 000F  
                         internalFlash_writePage@page 0009  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 6FDE  
                              ??__display_programming 001D  
                             _USBStdFeatureReqHandler 14D6  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4A3E  
                                        ?_api_prepare 0017  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 016D  
                    __size_of_bootloader_get_rec_data 0016  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E33  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 71EE  
                          _bootloader_get_rec_address 71E4  
                               _USBAlternateInterface 01E2  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 664C  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0171  
                           _failed_line3_noNextRecord 8E07  
                          ?__bootloader_check_address 0001  
                     __parse_format_drive@out_idx_ptr 002B  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00A9  
                                      _display_update 5F66  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CAA  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4348  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 016F  
                             _internalFlash_writePage 4E2E  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3B7C  
                        _USBStatusStageTimeoutCounter 00A7  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0008  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 5D32  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 69C6  
                                        _verify_line1 8DB8  
                                        _verify_line2 8E40  
                                        _verify_line3 8E88  
                                 __parse_format_drive 51A0  
                                          _USB_CD_Ptr 8EA3  
                                         _power_state 0096  
                                         _USBInHandle 0169  
                            _APP_DeviceCustomHIDTasks 54D8  
                          __end_of_flash_sector_write 67DC  
