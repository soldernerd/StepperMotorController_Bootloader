

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Dec 15 16:16:48 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=2
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   215                           	dabs	1,0x600,512,_msd_buffer
   216                           	dabs	1,0xD00,48,_BDT
   217                           	dabs	1,0xD40,31,_msd_cbw
   218                           	dabs	1,0xD80,13,_msd_csw
   219                           	dabs	1,0xD38,8,_CtrlTrfData
   220                           	dabs	1,0xD30,8,_SetupPkt
   221  0000                     
   222                           ; Version 2.00
   223                           ; Generated 27/05/2018 GMT
   224                           ; 
   225                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   226                           ; All rights reserved.
   227                           ; 
   228                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   229                           ; 
   230                           ; Redistribution and use in source and binary forms, with or without modification, are
   231                           ; permitted provided that the following conditions are met:
   232                           ; 
   233                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   234                           ;        conditions and the following disclaimer.
   235                           ; 
   236                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   237                           ;        of conditions and the following disclaimer in the documentation and/or other
   238                           ;        materials provided with the distribution.
   239                           ; 
   240                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   241                           ;        software without specific prior written permission.
   242                           ; 
   243                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   244                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   245                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   246                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   247                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   248                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   249                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   250                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   251                           ; 
   252                           ; 
   253                           ; Code-generator required, PIC18F47J53 Definitions
   254                           ; 
   255                           ; SFR Addresses
   256  0000                     
   257                           	psect	intcode
   258  000008  EF04 F048          	goto	36872	;# 
   259                           
   260                           	psect	intcodelo
   261  000018  EF0C F048          	goto	36888	; ;# 
   262  0000                     
   263                           	psect	idataBANK0
   264  0074B6                     __pidataBANK0:
   265                           	opt stack 0
   266                           
   267                           ;initializer for _file_number
   268  0074B6  FF                 	db	255
   269                           
   270                           	psect	idataBANK1
   271  007360                     __pidataBANK1:
   272                           	opt stack 0
   273                           
   274                           ;initializer for _LUN
   275  007360  D0                 	db	low _ExternalFlash_MediaInitialize
   276  007361  72                 	db	high _ExternalFlash_MediaInitialize
   277  007362  98                 	db	low _ExternalFlash_CapacityRead
   278  007363  73                 	db	high _ExternalFlash_CapacityRead
   279  007364  2C                 	db	low _ExternalFlash_SectorSizeRead
   280  007365  74                 	db	high _ExternalFlash_SectorSizeRead
   281  007366  B2                 	db	low _ExternalFlash_MediaDetect
   282  007367  74                 	db	high _ExternalFlash_MediaDetect
   283  007368  BC                 	db	low _ExternalFlash_SectorRead
   284  007369  6E                 	db	high _ExternalFlash_SectorRead
   285  00736A  AE                 	db	low _ExternalFlash_WriteProtectStateGet
   286  00736B  74                 	db	high _ExternalFlash_WriteProtectStateGet
   287  00736C  8A                 	db	low _ExternalFlash_SectorWrite
   288  00736D  6E                 	db	high _ExternalFlash_SectorWrite
   289  00736E  00                 	db	0
   290  00736F  00                 	db	0
   291  007370  00                 	db	0
   292  007371  00                 	db	0
   293  007372  00                 	db	0
   294  007373  00                 	db	0
   295                           
   296                           	psect	idataBANK2
   297  0072B6                     __pidataBANK2:
   298                           	opt stack 0
   299                           
   300                           ;initializer for i2c_display_init@F6829
   301  0072B6  3A                 	db	58
   302  0072B7  1E                 	db	30
   303  0072B8  39                 	db	57
   304  0072B9  0C                 	db	12
   305  0072BA  74                 	db	116
   306  0072BB  5C                 	db	92
   307  0072BC  6D                 	db	109
   308  0072BD  0C                 	db	12
   309  0072BE  01                 	db	1
   310                           
   311                           ;initializer for __i2c_display_send_init_sequence@F6826
   312  0072BF  3A                 	db	58
   313  0072C0  1E                 	db	30
   314  0072C1  39                 	db	57
   315  0072C2  0C                 	db	12
   316  0072C3  74                 	db	116
   317  0072C4  5C                 	db	92
   318  0072C5  6D                 	db	109
   319  0072C6  0C                 	db	12
   320  0072C7  01                 	db	1
   321                           
   322                           ;initializer for _tx_buf
   323  0072C8  01                 	db	1
   324  0072C9  02                 	db	2
   325  0072CA  03                 	db	3
   326  0072CB  04                 	db	4
   327  0072CC  05                 	db	5
   328  0072CD  06                 	db	6
   329  0072CE  07                 	db	7
   330  0072CF  08                 	db	8
   331                           
   332                           	psect	mediumconst
   333  008C44                     __pmediumconst:
   334                           	opt stack 0
   335  008C44  00                 	db	0
   336  008C45                     _checked_line2:
   337                           	opt stack 0
   338  008C45  46                 	db	70
   339  008C46  69                 	db	105
   340  008C47  6C                 	db	108
   341  008C48  65                 	db	101
   342  008C49  20                 	db	32
   343  008C4A  63                 	db	99
   344  008C4B  68                 	db	104
   345  008C4C  65                 	db	101
   346  008C4D  63                 	db	99
   347  008C4E  6B                 	db	107
   348  008C4F  20                 	db	32
   349  008C50  63                 	db	99
   350  008C51  6F                 	db	111
   351  008C52  6D                 	db	109
   352  008C53  70                 	db	112
   353  008C54  6C                 	db	108
   354  008C55  65                 	db	101
   355  008C56  74                 	db	116
   356  008C57  65                 	db	101
   357  008C58  64                 	db	100
   358  008C59  00                 	db	0
   359  008C5A                     __end_of_checked_line2:
   360                           	opt stack 0
   361  008C5A                     _failed_line3_addressRange:
   362                           	opt stack 0
   363  008C5A  41                 	db	65
   364  008C5B  64                 	db	100
   365  008C5C  64                 	db	100
   366  008C5D  72                 	db	114
   367  008C5E  2E                 	db	46
   368  008C5F  20                 	db	32
   369  008C60  6F                 	db	111
   370  008C61  75                 	db	117
   371  008C62  74                 	db	116
   372  008C63  73                 	db	115
   373  008C64  69                 	db	105
   374  008C65  64                 	db	100
   375  008C66  65                 	db	101
   376  008C67  20                 	db	32
   377  008C68  72                 	db	114
   378  008C69  61                 	db	97
   379  008C6A  6E                 	db	110
   380  008C6B  67                 	db	103
   381  008C6C  65                 	db	101
   382  008C6D  00                 	db	0
   383  008C6E                     __end_of_failed_line3_addressRange:
   384                           	opt stack 0
   385  008C6E                     _search_line3:
   386                           	opt stack 0
   387  008C6E  46                 	db	70
   388  008C6F  49                 	db	73
   389  008C70  52                 	db	82
   390  008C71  4D                 	db	77
   391  008C72  57                 	db	87
   392  008C73  41                 	db	65
   393  008C74  52                 	db	82
   394  008C75  45                 	db	69
   395  008C76  2E                 	db	46
   396  008C77  48                 	db	72
   397  008C78  45                 	db	69
   398  008C79  58                 	db	88
   399  008C7A  20                 	db	32
   400  008C7B  6F                 	db	111
   401  008C7C  6E                 	db	110
   402  008C7D  20                 	db	32
   403  008C7E  55                 	db	85
   404  008C7F  53                 	db	83
   405  008C80  42                 	db	66
   406  008C81  00                 	db	0
   407  008C82                     __end_of_search_line3:
   408                           	opt stack 0
   409  008C82                     _failed_line3_startCode:
   410                           	opt stack 0
   411  008C82  4D                 	db	77
   412  008C83  69                 	db	105
   413  008C84  73                 	db	115
   414  008C85  73                 	db	115
   415  008C86  69                 	db	105
   416  008C87  6E                 	db	110
   417  008C88  67                 	db	103
   418  008C89  20                 	db	32
   419  008C8A  73                 	db	115
   420  008C8B  74                 	db	116
   421  008C8C  61                 	db	97
   422  008C8D  72                 	db	114
   423  008C8E  74                 	db	116
   424  008C8F  20                 	db	32
   425  008C90  63                 	db	99
   426  008C91  6F                 	db	111
   427  008C92  64                 	db	100
   428  008C93  65                 	db	101
   429  008C94  00                 	db	0
   430  008C95                     __end_of_failed_line3_startCode:
   431                           	opt stack 0
   432  008C95                     _found_line2:
   433                           	opt stack 0
   434  008C95  46                 	db	70
   435  008C96  49                 	db	73
   436  008C97  52                 	db	82
   437  008C98  4D                 	db	77
   438  008C99  57                 	db	87
   439  008C9A  41                 	db	65
   440  008C9B  52                 	db	82
   441  008C9C  45                 	db	69
   442  008C9D  2E                 	db	46
   443  008C9E  48                 	db	72
   444  008C9F  45                 	db	69
   445  008CA0  58                 	db	88
   446  008CA1  20                 	db	32
   447  008CA2  66                 	db	102
   448  008CA3  6F                 	db	111
   449  008CA4  75                 	db	117
   450  008CA5  6E                 	db	110
   451  008CA6  64                 	db	100
   452  008CA7  00                 	db	0
   453  008CA8                     __end_of_found_line2:
   454                           	opt stack 0
   455  008CA8                     _programming_line2:
   456                           	opt stack 0
   457  008CA8  50                 	db	80
   458  008CA9  72                 	db	114
   459  008CAA  6F                 	db	111
   460  008CAB  67                 	db	103
   461  008CAC  72                 	db	114
   462  008CAD  61                 	db	97
   463  008CAE  6D                 	db	109
   464  008CAF  6D                 	db	109
   465  008CB0  69                 	db	105
   466  008CB1  6E                 	db	110
   467  008CB2  67                 	db	103
   468  008CB3  20                 	db	32
   469  008CB4  66                 	db	102
   470  008CB5  6C                 	db	108
   471  008CB6  61                 	db	97
   472  008CB7  73                 	db	115
   473  008CB8  68                 	db	104
   474  008CB9  00                 	db	0
   475  008CBA                     __end_of_programming_line2:
   476                           	opt stack 0
   477  008CBA                     _failed_line2:
   478                           	opt stack 0
   479  008CBA  46                 	db	70
   480  008CBB  69                 	db	105
   481  008CBC  6C                 	db	108
   482  008CBD  65                 	db	101
   483  008CBE  20                 	db	32
   484  008CBF  63                 	db	99
   485  008CC0  68                 	db	104
   486  008CC1  65                 	db	101
   487  008CC2  63                 	db	99
   488  008CC3  6B                 	db	107
   489  008CC4  20                 	db	32
   490  008CC5  66                 	db	102
   491  008CC6  61                 	db	97
   492  008CC7  69                 	db	105
   493  008CC8  6C                 	db	108
   494  008CC9  65                 	db	101
   495  008CCA  64                 	db	100
   496  008CCB  00                 	db	0
   497  008CCC                     __end_of_failed_line2:
   498                           	opt stack 0
   499  008CCC                     _found_line4:
   500                           	opt stack 0
   501  008CCC  50                 	db	80
   502  008CCD  72                 	db	114
   503  008CCE  65                 	db	101
   504  008CCF  73                 	db	115
   505  008CD0  73                 	db	115
   506  008CD1  20                 	db	32
   507  008CD2  74                 	db	116
   508  008CD3  6F                 	db	111
   509  008CD4  20                 	db	32
   510  008CD5  75                 	db	117
   511  008CD6  73                 	db	115
   512  008CD7  65                 	db	101
   513  008CD8  20                 	db	32
   514  008CD9  66                 	db	102
   515  008CDA  69                 	db	105
   516  008CDB  6C                 	db	108
   517  008CDC  65                 	db	101
   518  008CDD  00                 	db	0
   519  008CDE                     __end_of_found_line4:
   520                           	opt stack 0
   521  008CDE                     _checked_line4:
   522                           	opt stack 0
   523  008CDE  50                 	db	80
   524  008CDF  72                 	db	114
   525  008CE0  65                 	db	101
   526  008CE1  73                 	db	115
   527  008CE2  73                 	db	115
   528  008CE3  20                 	db	32
   529  008CE4  74                 	db	116
   530  008CE5  6F                 	db	111
   531  008CE6  20                 	db	32
   532  008CE7  70                 	db	112
   533  008CE8  72                 	db	114
   534  008CE9  6F                 	db	111
   535  008CEA  67                 	db	103
   536  008CEB  72                 	db	114
   537  008CEC  61                 	db	97
   538  008CED  6D                 	db	109
   539  008CEE  00                 	db	0
   540  008CEF                     __end_of_checked_line4:
   541                           	opt stack 0
   542  008CEF                     _search_line2:
   543                           	opt stack 0
   544  008CEF  4C                 	db	76
   545  008CF0  6F                 	db	111
   546  008CF1  6F                 	db	111
   547  008CF2  6B                 	db	107
   548  008CF3  69                 	db	105
   549  008CF4  6E                 	db	110
   550  008CF5  67                 	db	103
   551  008CF6  20                 	db	32
   552  008CF7  66                 	db	102
   553  008CF8  6F                 	db	111
   554  008CF9  72                 	db	114
   555  008CFA  20                 	db	32
   556  008CFB  66                 	db	102
   557  008CFC  69                 	db	105
   558  008CFD  6C                 	db	108
   559  008CFE  65                 	db	101
   560  008CFF  00                 	db	0
   561  008D00                     __end_of_search_line2:
   562                           	opt stack 0
   563  008D00                     _suspended_line4:
   564                           	opt stack 0
   565  008D00  50                 	db	80
   566  008D01  72                 	db	114
   567  008D02  65                 	db	101
   568  008D03  73                 	db	115
   569  008D04  73                 	db	115
   570  008D05  20                 	db	32
   571  008D06  74                 	db	116
   572  008D07  6F                 	db	111
   573  008D08  20                 	db	32
   574  008D09  72                 	db	114
   575  008D0A  65                 	db	101
   576  008D0B  73                 	db	115
   577  008D0C  75                 	db	117
   578  008D0D  6D                 	db	109
   579  008D0E  65                 	db	101
   580  008D0F  00                 	db	0
   581  008D10                     __end_of_suspended_line4:
   582                           	opt stack 0
   583  008D10                     _suspended_line1:
   584                           	opt stack 0
   585  008D10  42                 	db	66
   586  008D11  6F                 	db	111
   587  008D12  6F                 	db	111
   588  008D13  74                 	db	116
   589  008D14  6C                 	db	108
   590  008D15  6F                 	db	111
   591  008D16  61                 	db	97
   592  008D17  64                 	db	100
   593  008D18  65                 	db	101
   594  008D19  72                 	db	114
   595  008D1A  20                 	db	32
   596  008D1B  4D                 	db	77
   597  008D1C  6F                 	db	111
   598  008D1D  64                 	db	100
   599  008D1E  65                 	db	101
   600  008D1F  00                 	db	0
   601  008D20                     __end_of_suspended_line1:
   602                           	opt stack 0
   603  008D20                     _done_line4:
   604                           	opt stack 0
   605  008D20  50                 	db	80
   606  008D21  72                 	db	114
   607  008D22  65                 	db	101
   608  008D23  73                 	db	115
   609  008D24  73                 	db	115
   610  008D25  20                 	db	32
   611  008D26  74                 	db	116
   612  008D27  6F                 	db	111
   613  008D28  20                 	db	32
   614  008D29  72                 	db	114
   615  008D2A  65                 	db	101
   616  008D2B  62                 	db	98
   617  008D2C  6F                 	db	111
   618  008D2D  6F                 	db	111
   619  008D2E  74                 	db	116
   620  008D2F  00                 	db	0
   621  008D30                     __end_of_done_line4:
   622                           	opt stack 0
   623  008D30                     _done_line3:
   624                           	opt stack 0
   625  008D30  50                 	db	80
   626  008D31  61                 	db	97
   627  008D32  67                 	db	103
   628  008D33  65                 	db	101
   629  008D34  73                 	db	115
   630  008D35  20                 	db	32
   631  008D36  77                 	db	119
   632  008D37  72                 	db	114
   633  008D38  69                 	db	105
   634  008D39  74                 	db	116
   635  008D3A  74                 	db	116
   636  008D3B  65                 	db	101
   637  008D3C  6E                 	db	110
   638  008D3D  3A                 	db	58
   639  008D3E  20                 	db	32
   640  008D3F  00                 	db	0
   641  008D40                     __end_of_done_line3:
   642                           	opt stack 0
   643  008D40                     _done_line1:
   644                           	opt stack 0
   645  008D40  42                 	db	66
   646  008D41  6F                 	db	111
   647  008D42  6F                 	db	111
   648  008D43  74                 	db	116
   649  008D44  6C                 	db	108
   650  008D45  6F                 	db	111
   651  008D46  61                 	db	97
   652  008D47  64                 	db	100
   653  008D48  65                 	db	101
   654  008D49  72                 	db	114
   655  008D4A  20                 	db	32
   656  008D4B  4D                 	db	77
   657  008D4C  6F                 	db	111
   658  008D4D  64                 	db	100
   659  008D4E  65                 	db	101
   660  008D4F  00                 	db	0
   661  008D50                     __end_of_done_line1:
   662                           	opt stack 0
   663  008D50                     _programming_line4:
   664                           	opt stack 0
   665  008D50  50                 	db	80
   666  008D51  61                 	db	97
   667  008D52  67                 	db	103
   668  008D53  65                 	db	101
   669  008D54  73                 	db	115
   670  008D55  20                 	db	32
   671  008D56  77                 	db	119
   672  008D57  72                 	db	114
   673  008D58  69                 	db	105
   674  008D59  74                 	db	116
   675  008D5A  74                 	db	116
   676  008D5B  65                 	db	101
   677  008D5C  6E                 	db	110
   678  008D5D  3A                 	db	58
   679  008D5E  20                 	db	32
   680  008D5F  00                 	db	0
   681  008D60                     __end_of_programming_line4:
   682                           	opt stack 0
   683  008D60                     _programming_line1:
   684                           	opt stack 0
   685  008D60  42                 	db	66
   686  008D61  6F                 	db	111
   687  008D62  6F                 	db	111
   688  008D63  74                 	db	116
   689  008D64  6C                 	db	108
   690  008D65  6F                 	db	111
   691  008D66  61                 	db	97
   692  008D67  64                 	db	100
   693  008D68  65                 	db	101
   694  008D69  72                 	db	114
   695  008D6A  20                 	db	32
   696  008D6B  4D                 	db	77
   697  008D6C  6F                 	db	111
   698  008D6D  64                 	db	100
   699  008D6E  65                 	db	101
   700  008D6F  00                 	db	0
   701  008D70                     __end_of_programming_line1:
   702                           	opt stack 0
   703  008D70                     _failed_line1:
   704                           	opt stack 0
   705  008D70  42                 	db	66
   706  008D71  6F                 	db	111
   707  008D72  6F                 	db	111
   708  008D73  74                 	db	116
   709  008D74  6C                 	db	108
   710  008D75  6F                 	db	111
   711  008D76  61                 	db	97
   712  008D77  64                 	db	100
   713  008D78  65                 	db	101
   714  008D79  72                 	db	114
   715  008D7A  20                 	db	32
   716  008D7B  4D                 	db	77
   717  008D7C  6F                 	db	111
   718  008D7D  64                 	db	100
   719  008D7E  65                 	db	101
   720  008D7F  00                 	db	0
   721  008D80                     __end_of_failed_line1:
   722                           	opt stack 0
   723  008D80                     _checked_line1:
   724                           	opt stack 0
   725  008D80  42                 	db	66
   726  008D81  6F                 	db	111
   727  008D82  6F                 	db	111
   728  008D83  74                 	db	116
   729  008D84  6C                 	db	108
   730  008D85  6F                 	db	111
   731  008D86  61                 	db	97
   732  008D87  64                 	db	100
   733  008D88  65                 	db	101
   734  008D89  72                 	db	114
   735  008D8A  20                 	db	32
   736  008D8B  4D                 	db	77
   737  008D8C  6F                 	db	111
   738  008D8D  64                 	db	100
   739  008D8E  65                 	db	101
   740  008D8F  00                 	db	0
   741  008D90                     __end_of_checked_line1:
   742                           	opt stack 0
   743  008D90                     _verify_line1:
   744                           	opt stack 0
   745  008D90  42                 	db	66
   746  008D91  6F                 	db	111
   747  008D92  6F                 	db	111
   748  008D93  74                 	db	116
   749  008D94  6C                 	db	108
   750  008D95  6F                 	db	111
   751  008D96  61                 	db	97
   752  008D97  64                 	db	100
   753  008D98  65                 	db	101
   754  008D99  72                 	db	114
   755  008D9A  20                 	db	32
   756  008D9B  4D                 	db	77
   757  008D9C  6F                 	db	111
   758  008D9D  64                 	db	100
   759  008D9E  65                 	db	101
   760  008D9F  00                 	db	0
   761  008DA0                     __end_of_verify_line1:
   762                           	opt stack 0
   763  008DA0                     _found_line1:
   764                           	opt stack 0
   765  008DA0  42                 	db	66
   766  008DA1  6F                 	db	111
   767  008DA2  6F                 	db	111
   768  008DA3  74                 	db	116
   769  008DA4  6C                 	db	108
   770  008DA5  6F                 	db	111
   771  008DA6  61                 	db	97
   772  008DA7  64                 	db	100
   773  008DA8  65                 	db	101
   774  008DA9  72                 	db	114
   775  008DAA  20                 	db	32
   776  008DAB  4D                 	db	77
   777  008DAC  6F                 	db	111
   778  008DAD  64                 	db	100
   779  008DAE  65                 	db	101
   780  008DAF  00                 	db	0
   781  008DB0                     __end_of_found_line1:
   782                           	opt stack 0
   783  008DB0                     _search_line1:
   784                           	opt stack 0
   785  008DB0  42                 	db	66
   786  008DB1  6F                 	db	111
   787  008DB2  6F                 	db	111
   788  008DB3  74                 	db	116
   789  008DB4  6C                 	db	108
   790  008DB5  6F                 	db	111
   791  008DB6  61                 	db	97
   792  008DB7  64                 	db	100
   793  008DB8  65                 	db	101
   794  008DB9  72                 	db	114
   795  008DBA  20                 	db	32
   796  008DBB  4D                 	db	77
   797  008DBC  6F                 	db	111
   798  008DBD  64                 	db	100
   799  008DBE  65                 	db	101
   800  008DBF  00                 	db	0
   801  008DC0                     __end_of_search_line1:
   802                           	opt stack 0
   803  008DC0                     _start_line1:
   804                           	opt stack 0
   805  008DC0  42                 	db	66
   806  008DC1  6F                 	db	111
   807  008DC2  6F                 	db	111
   808  008DC3  74                 	db	116
   809  008DC4  6C                 	db	108
   810  008DC5  6F                 	db	111
   811  008DC6  61                 	db	97
   812  008DC7  64                 	db	100
   813  008DC8  65                 	db	101
   814  008DC9  72                 	db	114
   815  008DCA  20                 	db	32
   816  008DCB  4D                 	db	77
   817  008DCC  6F                 	db	111
   818  008DCD  64                 	db	100
   819  008DCE  65                 	db	101
   820  008DCF  00                 	db	0
   821  008DD0                     __end_of_start_line1:
   822                           	opt stack 0
   823  008DD0                     _failed_line3_checksum:
   824                           	opt stack 0
   825  008DD0  43                 	db	67
   826  008DD1  68                 	db	104
   827  008DD2  65                 	db	101
   828  008DD3  63                 	db	99
   829  008DD4  6B                 	db	107
   830  008DD5  73                 	db	115
   831  008DD6  75                 	db	117
   832  008DD7  6D                 	db	109
   833  008DD8  20                 	db	32
   834  008DD9  65                 	db	101
   835  008DDA  72                 	db	114
   836  008DDB  72                 	db	114
   837  008DDC  6F                 	db	111
   838  008DDD  72                 	db	114
   839  008DDE  00                 	db	0
   840  008DDF                     __end_of_failed_line3_checksum:
   841                           	opt stack 0
   842  008DDF                     _failed_line3_noNextRecord:
   843                           	opt stack 0
   844  008DDF  4E                 	db	78
   845  008DE0  6F                 	db	111
   846  008DE1  20                 	db	32
   847  008DE2  6E                 	db	110
   848  008DE3  65                 	db	101
   849  008DE4  78                 	db	120
   850  008DE5  74                 	db	116
   851  008DE6  20                 	db	32
   852  008DE7  72                 	db	114
   853  008DE8  65                 	db	101
   854  008DE9  63                 	db	99
   855  008DEA  6F                 	db	111
   856  008DEB  72                 	db	114
   857  008DEC  64                 	db	100
   858  008DED  00                 	db	0
   859  008DEE                     __end_of_failed_line3_noNextRecord:
   860                           	opt stack 0
   861  008DEE                     _start_line4:
   862                           	opt stack 0
   863  008DEE  73                 	db	115
   864  008DEF  6F                 	db	111
   865  008DF0  6C                 	db	108
   866  008DF1  64                 	db	100
   867  008DF2  65                 	db	101
   868  008DF3  72                 	db	114
   869  008DF4  6E                 	db	110
   870  008DF5  65                 	db	101
   871  008DF6  72                 	db	114
   872  008DF7  64                 	db	100
   873  008DF8  2E                 	db	46
   874  008DF9  63                 	db	99
   875  008DFA  6F                 	db	111
   876  008DFB  6D                 	db	109
   877  008DFC  00                 	db	0
   878  008DFD                     __end_of_start_line4:
   879                           	opt stack 0
   880  008DFD                     _failed_line3_dataTooLong:
   881                           	opt stack 0
   882  008DFD  44                 	db	68
   883  008DFE  61                 	db	97
   884  008DFF  74                 	db	116
   885  008E00  61                 	db	97
   886  008E01  20                 	db	32
   887  008E02  74                 	db	116
   888  008E03  6F                 	db	111
   889  008E04  6F                 	db	111
   890  008E05  20                 	db	32
   891  008E06  6C                 	db	108
   892  008E07  6F                 	db	111
   893  008E08  6E                 	db	110
   894  008E09  67                 	db	103
   895  008E0A  00                 	db	0
   896  008E0B                     __end_of_failed_line3_dataTooLong:
   897                           	opt stack 0
   898  008E0B                     _reboot_line1:
   899                           	opt stack 0
   900  008E0B  52                 	db	82
   901  008E0C  65                 	db	101
   902  008E0D  62                 	db	98
   903  008E0E  6F                 	db	111
   904  008E0F  6F                 	db	111
   905  008E10  74                 	db	116
   906  008E11  69                 	db	105
   907  008E12  6E                 	db	110
   908  008E13  67                 	db	103
   909  008E14  2E                 	db	46
   910  008E15  2E                 	db	46
   911  008E16  2E                 	db	46
   912  008E17  00                 	db	0
   913  008E18                     __end_of_reboot_line1:
   914                           	opt stack 0
   915  008E18                     _verify_line2:
   916                           	opt stack 0
   917  008E18  56                 	db	86
   918  008E19  65                 	db	101
   919  008E1A  72                 	db	114
   920  008E1B  69                 	db	105
   921  008E1C  66                 	db	102
   922  008E1D  79                 	db	121
   923  008E1E  69                 	db	105
   924  008E1F  6E                 	db	110
   925  008E20  67                 	db	103
   926  008E21  2E                 	db	46
   927  008E22  2E                 	db	46
   928  008E23  2E                 	db	46
   929  008E24  00                 	db	0
   930  008E25                     __end_of_verify_line2:
   931                           	opt stack 0
   932  008E25                     _suspended_line2:
   933                           	opt stack 0
   934  008E25  53                 	db	83
   935  008E26  75                 	db	117
   936  008E27  73                 	db	115
   937  008E28  70                 	db	112
   938  008E29  65                 	db	101
   939  008E2A  6E                 	db	110
   940  008E2B  64                 	db	100
   941  008E2C  65                 	db	101
   942  008E2D  64                 	db	100
   943  008E2E  00                 	db	0
   944  008E2F                     __end_of_suspended_line2:
   945                           	opt stack 0
   946  008E2F                     _search_line4:
   947                           	opt stack 0
   948  008E2F  64                 	db	100
   949  008E30  72                 	db	114
   950  008E31  69                 	db	105
   951  008E32  76                 	db	118
   952  008E33  65                 	db	101
   953  008E34  2E                 	db	46
   954  008E35  2E                 	db	46
   955  008E36  2E                 	db	46
   956  008E37  00                 	db	0
   957  008E38                     __end_of_search_line4:
   958                           	opt stack 0
   959  008E38                     _start_line2:
   960                           	opt stack 0
   961  008E38  56                 	db	86
   962  008E39  65                 	db	101
   963  008E3A  72                 	db	114
   964  008E3B  73                 	db	115
   965  008E3C  69                 	db	105
   966  008E3D  6F                 	db	111
   967  008E3E  6E                 	db	110
   968  008E3F  20                 	db	32
   969  008E40  00                 	db	0
   970  008E41                     __end_of_start_line2:
   971                           	opt stack 0
   972  008E41                     _failed_line4:
   973                           	opt stack 0
   974  008E41  52                 	db	82
   975  008E42  65                 	db	101
   976  008E43  63                 	db	99
   977  008E44  6F                 	db	111
   978  008E45  72                 	db	114
   979  008E46  64                 	db	100
   980  008E47  20                 	db	32
   981  008E48  00                 	db	0
   982  008E49                     __end_of_failed_line4:
   983                           	opt stack 0
   984  008E49                     _checked_line3:
   985                           	opt stack 0
   986  008E49  72                 	db	114
   987  008E4A  65                 	db	101
   988  008E4B  63                 	db	99
   989  008E4C  6F                 	db	111
   990  008E4D  72                 	db	114
   991  008E4E  64                 	db	100
   992  008E4F  73                 	db	115
   993  008E50  00                 	db	0
   994  008E51                     __end_of_checked_line3:
   995                           	opt stack 0
   996  008E51                     _USB_SD_Ptr:
   997                           	opt stack 0
   998  008E51  CB                 	db	low _sd000
   999  008E52  8F                 	db	high _sd000
  1000  008E53  BF                 	db	low _sd001
  1001  008E54  8E                 	db	high _sd001
  1002  008E55  F3                 	db	low _sd002
  1003  008E56  8E                 	db	high _sd002
  1004  008E57  62                 	db	low _sd003
  1005  008E58  8F                 	db	high _sd003
  1006  008E59                     __end_of_USB_SD_Ptr:
  1007                           	opt stack 0
  1008  008E59                     _programming_line3:
  1009                           	opt stack 0
  1010  008E59  45                 	db	69
  1011  008E5A  6E                 	db	110
  1012  008E5B  74                 	db	116
  1013  008E5C  72                 	db	114
  1014  008E5D  79                 	db	121
  1015  008E5E  20                 	db	32
  1016  008E5F  00                 	db	0
  1017  008E60                     __end_of_programming_line3:
  1018                           	opt stack 0
  1019  008E60                     _verify_line3:
  1020                           	opt stack 0
  1021  008E60  52                 	db	82
  1022  008E61  65                 	db	101
  1023  008E62  63                 	db	99
  1024  008E63  6F                 	db	111
  1025  008E64  72                 	db	114
  1026  008E65  64                 	db	100
  1027  008E66  00                 	db	0
  1028  008E67                     __end_of_verify_line3:
  1029                           	opt stack 0
  1030  008E67                     _found_line3b:
  1031                           	opt stack 0
  1032  008E67  20                 	db	32
  1033  008E68  62                 	db	98
  1034  008E69  79                 	db	121
  1035  008E6A  74                 	db	116
  1036  008E6B  65                 	db	101
  1037  008E6C  73                 	db	115
  1038  008E6D  00                 	db	0
  1039  008E6E                     __end_of_found_line3b:
  1040                           	opt stack 0
  1041  008E6E                     _found_line3:
  1042                           	opt stack 0
  1043  008E6E  53                 	db	83
  1044  008E6F  69                 	db	105
  1045  008E70  7A                 	db	122
  1046  008E71  65                 	db	101
  1047  008E72  3A                 	db	58
  1048  008E73  20                 	db	32
  1049  008E74  00                 	db	0
  1050  008E75                     __end_of_found_line3:
  1051                           	opt stack 0
  1052  008E75                     _done_line2:
  1053                           	opt stack 0
  1054  008E75  44                 	db	68
  1055  008E76  6F                 	db	111
  1056  008E77  6E                 	db	110
  1057  008E78  65                 	db	101
  1058  008E79  21                 	db	33
  1059  008E7A  00                 	db	0
  1060  008E7B                     __end_of_done_line2:
  1061                           	opt stack 0
  1062  008E7B                     _USB_CD_Ptr:
  1063                           	opt stack 0
  1064  008E7B  7F                 	db	low _configDescriptor1
  1065  008E7C  8E                 	db	high _configDescriptor1
  1066  008E7D                     __end_of_USB_CD_Ptr:
  1067                           	opt stack 0
  1068  008E7D                     _suspended_line3:
  1069                           	opt stack 0
  1070  008E7D  00                 	db	0
  1071  008E7E                     __end_of_suspended_line3:
  1072                           	opt stack 0
  1073  008E7E                     _start_line3:
  1074                           	opt stack 0
  1075  008E7E  00                 	db	0
  1076  008E7F                     __end_of_start_line3:
  1077                           	opt stack 0
  1078  008E7F                     _configDescriptor1:
  1079                           	opt stack 0
  1080  008E7F  09                 	db	9
  1081  008E80  02                 	db	2
  1082  008E81  40                 	db	64
  1083  008E82  00                 	db	0
  1084  008E83  02                 	db	2
  1085  008E84  01                 	db	1
  1086  008E85  00                 	db	0
  1087  008E86  C0                 	db	192
  1088  008E87  32                 	db	50
  1089  008E88  09                 	db	9
  1090  008E89  04                 	db	4
  1091  008E8A  00                 	db	0
  1092  008E8B  00                 	db	0
  1093  008E8C  02                 	db	2
  1094  008E8D  03                 	db	3
  1095  008E8E  00                 	db	0
  1096  008E8F  00                 	db	0
  1097  008E90  00                 	db	0
  1098  008E91  09                 	db	9
  1099  008E92  21                 	db	33
  1100  008E93  11                 	db	17
  1101  008E94  01                 	db	1
  1102  008E95  00                 	db	0
  1103  008E96  01                 	db	1
  1104  008E97  22                 	db	34
  1105  008E98  1D                 	db	29
  1106  008E99  00                 	db	0
  1107  008E9A  07                 	db	7
  1108  008E9B  05                 	db	5
  1109  008E9C  81                 	db	129
  1110  008E9D  03                 	db	3
  1111  008E9E  40                 	db	64
  1112  008E9F  00                 	db	0
  1113  008EA0  01                 	db	1
  1114  008EA1  07                 	db	7
  1115  008EA2  05                 	db	5
  1116  008EA3  01                 	db	1
  1117  008EA4  03                 	db	3
  1118  008EA5  40                 	db	64
  1119  008EA6  00                 	db	0
  1120  008EA7  01                 	db	1
  1121  008EA8  09                 	db	9
  1122  008EA9  04                 	db	4
  1123  008EAA  01                 	db	1
  1124  008EAB  00                 	db	0
  1125  008EAC  02                 	db	2
  1126  008EAD  08                 	db	8
  1127  008EAE  06                 	db	6
  1128  008EAF  50                 	db	80
  1129  008EB0  00                 	db	0
  1130  008EB1  07                 	db	7
  1131  008EB2  05                 	db	5
  1132  008EB3  82                 	db	130
  1133  008EB4  02                 	db	2
  1134  008EB5  40                 	db	64
  1135  008EB6  00                 	db	0
  1136  008EB7  01                 	db	1
  1137  008EB8  07                 	db	7
  1138  008EB9  05                 	db	5
  1139  008EBA  02                 	db	2
  1140  008EBB  02                 	db	2
  1141  008EBC  40                 	db	64
  1142  008EBD  00                 	db	0
  1143  008EBE  01                 	db	1
  1144  008EBF                     __end_of_configDescriptor1:
  1145                           	opt stack 0
  1146  008EBF                     _sd001:
  1147                           	opt stack 0
  1148  008EBF  34                 	db	52
  1149  008EC0  03                 	db	3
  1150  008EC1  0053               	dw	83
  1151  008EC3  006F               	dw	111
  1152  008EC5  006C               	dw	108
  1153  008EC7  0064               	dw	100
  1154  008EC9  0065               	dw	101
  1155  008ECB  0072               	dw	114
  1156  008ECD  006E               	dw	110
  1157  008ECF  0065               	dw	101
  1158  008ED1  0072               	dw	114
  1159  008ED3  0064               	dw	100
  1160  008ED5  002E               	dw	46
  1161  008ED7  0063               	dw	99
  1162  008ED9  006F               	dw	111
  1163  008EDB  006D               	dw	109
  1164  008EDD  0020               	dw	32
  1165  008EDF  0020               	dw	32
  1166  008EE1  0020               	dw	32
  1167  008EE3  0020               	dw	32
  1168  008EE5  0020               	dw	32
  1169  008EE7  0020               	dw	32
  1170  008EE9  0020               	dw	32
  1171  008EEB  0020               	dw	32
  1172  008EED  0020               	dw	32
  1173  008EEF  0020               	dw	32
  1174  008EF1  0020               	dw	32
  1175  008EF3                     __end_of_sd001:
  1176                           	opt stack 0
  1177  008EF3                     _sd002:
  1178                           	opt stack 0
  1179  008EF3  2E                 	db	46
  1180  008EF4  03                 	db	3
  1181  008EF5  0053               	dw	83
  1182  008EF7  0074               	dw	116
  1183  008EF9  0065               	dw	101
  1184  008EFB  0070               	dw	112
  1185  008EFD  0070               	dw	112
  1186  008EFF  0065               	dw	101
  1187  008F01  0072               	dw	114
  1188  008F03  004D               	dw	77
  1189  008F05  006F               	dw	111
  1190  008F07  0074               	dw	116
  1191  008F09  006F               	dw	111
  1192  008F0B  0072               	dw	114
  1193  008F0D  0043               	dw	67
  1194  008F0F  006F               	dw	111
  1195  008F11  006E               	dw	110
  1196  008F13  0074               	dw	116
  1197  008F15  0072               	dw	114
  1198  008F17  006F               	dw	111
  1199  008F19  006C               	dw	108
  1200  008F1B  006C               	dw	108
  1201  008F1D  0065               	dw	101
  1202  008F1F  0072               	dw	114
  1203  008F21                     __end_of_sd002:
  1204                           	opt stack 0
  1205  008F21                     _inq_resp:
  1206                           	opt stack 0
  1207  008F21  00                 	db	0
  1208  008F22  80                 	db	128
  1209  008F23  04                 	db	4
  1210  008F24  02                 	db	2
  1211  008F25  20                 	db	32
  1212  008F26  00                 	db	0
  1213  008F27  00                 	db	0
  1214  008F28  00                 	db	0
  1215  008F29  4D                 	db	77
  1216  008F2A  69                 	db	105
  1217  008F2B  63                 	db	99
  1218  008F2C  72                 	db	114
  1219  008F2D  6F                 	db	111
  1220  008F2E  63                 	db	99
  1221  008F2F  68                 	db	104
  1222  008F30  70                 	db	112
  1223  008F31  4D                 	db	77
  1224  008F32  61                 	db	97
  1225  008F33  73                 	db	115
  1226  008F34  73                 	db	115
  1227  008F35  20                 	db	32
  1228  008F36  53                 	db	83
  1229  008F37  74                 	db	116
  1230  008F38  6F                 	db	111
  1231  008F39  72                 	db	114
  1232  008F3A  61                 	db	97
  1233  008F3B  67                 	db	103
  1234  008F3C  65                 	db	101
  1235  008F3D  20                 	db	32
  1236  008F3E  20                 	db	32
  1237  008F3F  20                 	db	32
  1238  008F40  20                 	db	32
  1239  008F41  30                 	db	48
  1240  008F42  30                 	db	48
  1241  008F43  30                 	db	48
  1242  008F44  31                 	db	49
  1243  008F45                     __end_of_inq_resp:
  1244                           	opt stack 0
  1245  008F45                     _hid_rpt01:
  1246                           	opt stack 0
  1247  008F45  06                 	db	6
  1248  008F46  00                 	db	0
  1249  008F47  FF                 	db	255
  1250  008F48  09                 	db	9
  1251  008F49  01                 	db	1
  1252  008F4A  A1                 	db	161
  1253  008F4B  01                 	db	1
  1254  008F4C  19                 	db	25
  1255  008F4D  01                 	db	1
  1256  008F4E  29                 	db	41
  1257  008F4F  40                 	db	64
  1258  008F50  15                 	db	21
  1259  008F51  00                 	db	0
  1260  008F52  26                 	db	38
  1261  008F53  FF                 	db	255
  1262  008F54  00                 	db	0
  1263  008F55  75                 	db	117
  1264  008F56  08                 	db	8
  1265  008F57  95                 	db	149
  1266  008F58  40                 	db	64
  1267  008F59  81                 	db	129
  1268  008F5A  00                 	db	0
  1269  008F5B  19                 	db	25
  1270  008F5C  01                 	db	1
  1271  008F5D  29                 	db	41
  1272  008F5E  40                 	db	64
  1273  008F5F  91                 	db	145
  1274  008F60  00                 	db	0
  1275  008F61  C0                 	db	192
  1276  008F62                     __end_of_hid_rpt01:
  1277                           	opt stack 0
  1278  008F62                     _sd003:
  1279                           	opt stack 0
  1280  008F62  1A                 	db	26
  1281  008F63  03                 	db	3
  1282  008F64  0031               	dw	49
  1283  008F66  0032               	dw	50
  1284  008F68  0033               	dw	51
  1285  008F6A  0034               	dw	52
  1286  008F6C  0035               	dw	53
  1287  008F6E  0036               	dw	54
  1288  008F70  0037               	dw	55
  1289  008F72  0038               	dw	56
  1290  008F74  0039               	dw	57
  1291  008F76  0030               	dw	48
  1292  008F78  0039               	dw	57
  1293  008F7A  0039               	dw	57
  1294  008F7C                     __end_of_sd003:
  1295                           	opt stack 0
  1296  008F7C                     _device_dsc:
  1297                           	opt stack 0
  1298  008F7C  12                 	db	18
  1299  008F7D  01                 	db	1
  1300  008F7E  0200               	dw	512
  1301  008F80  00                 	db	0
  1302  008F81  00                 	db	0
  1303  008F82  00                 	db	0
  1304  008F83  08                 	db	8
  1305  008F84  04D8               	dw	1240
  1306  008F86  EDCF               	dw	60879
  1307  008F88  0100               	dw	256
  1308  008F8A  01                 	db	1
  1309  008F8B  02                 	db	2
  1310  008F8C  00                 	db	0
  1311  008F8D  01                 	db	1
  1312  008F8E                     __end_of_device_dsc:
  1313                           	opt stack 0
  1314  008F8E                     _bootloader_filename:
  1315                           	opt stack 0
  1316  008F8E  46                 	db	70
  1317  008F8F  49                 	db	73
  1318  008F90  52                 	db	82
  1319  008F91  4D                 	db	77
  1320  008F92  57                 	db	87
  1321  008F93  41                 	db	65
  1322  008F94  52                 	db	82
  1323  008F95  45                 	db	69
  1324  008F96  00                 	db	0
  1325  008F97                     __end_of_bootloader_filename:
  1326                           	opt stack 0
  1327  008F97                     _bit_pattern_oe:
  1328                           	opt stack 0
  1329  008F97  0A                 	db	10
  1330  008F98  00                 	db	0
  1331  008F99  0E                 	db	14
  1332  008F9A  11                 	db	17
  1333  008F9B  11                 	db	17
  1334  008F9C  11                 	db	17
  1335  008F9D  0E                 	db	14
  1336  008F9E  00                 	db	0
  1337  008F9F                     __end_of_bit_pattern_oe:
  1338                           	opt stack 0
  1339  008F9F                     _bit_pattern_ue:
  1340                           	opt stack 0
  1341  008F9F  0A                 	db	10
  1342  008FA0  00                 	db	0
  1343  008FA1  11                 	db	17
  1344  008FA2  11                 	db	17
  1345  008FA3  11                 	db	17
  1346  008FA4  13                 	db	19
  1347  008FA5  0D                 	db	13
  1348  008FA6  00                 	db	0
  1349  008FA7                     __end_of_bit_pattern_ue:
  1350                           	opt stack 0
  1351  008FA7                     _bit_pattern_ae:
  1352                           	opt stack 0
  1353  008FA7  0A                 	db	10
  1354  008FA8  00                 	db	0
  1355  008FA9  0E                 	db	14
  1356  008FAA  01                 	db	1
  1357  008FAB  0F                 	db	15
  1358  008FAC  11                 	db	17
  1359  008FAD  0F                 	db	15
  1360  008FAE  00                 	db	0
  1361  008FAF                     __end_of_bit_pattern_ae:
  1362                           	opt stack 0
  1363  008FAF                     _bit_pattern_degree:
  1364                           	opt stack 0
  1365  008FAF  18                 	db	24
  1366  008FB0  18                 	db	24
  1367  008FB1  00                 	db	0
  1368  008FB2  00                 	db	0
  1369  008FB3  00                 	db	0
  1370  008FB4  00                 	db	0
  1371  008FB5  00                 	db	0
  1372  008FB6  00                 	db	0
  1373  008FB7                     __end_of_bit_pattern_degree:
  1374                           	opt stack 0
  1375  008FB7                     _bit_pattern_verticalbar:
  1376                           	opt stack 0
  1377  008FB7  04                 	db	4
  1378  008FB8  04                 	db	4
  1379  008FB9  04                 	db	4
  1380  008FBA  04                 	db	4
  1381  008FBB  04                 	db	4
  1382  008FBC  04                 	db	4
  1383  008FBD  04                 	db	4
  1384  008FBE  04                 	db	4
  1385  008FBF                     __end_of_bit_pattern_verticalbar:
  1386                           	opt stack 0
  1387  008FBF                     _flash_command_pagesize_528:
  1388                           	opt stack 0
  1389  008FBF  3D                 	db	61
  1390  008FC0  2A                 	db	42
  1391  008FC1  80                 	db	128
  1392  008FC2  A7                 	db	167
  1393  008FC3                     __end_of_flash_command_pagesize_528:
  1394                           	opt stack 0
  1395  008FC3                     _flash_command_pagesize_512:
  1396                           	opt stack 0
  1397  008FC3  3D                 	db	61
  1398  008FC4  2A                 	db	42
  1399  008FC5  80                 	db	128
  1400  008FC6  A6                 	db	166
  1401  008FC7                     __end_of_flash_command_pagesize_512:
  1402                           	opt stack 0
  1403  008FC7                     _bootloader_extension:
  1404                           	opt stack 0
  1405  008FC7  48                 	db	72
  1406  008FC8  45                 	db	69
  1407  008FC9  58                 	db	88
  1408  008FCA  00                 	db	0
  1409  008FCB                     __end_of_bootloader_extension:
  1410                           	opt stack 0
  1411  008FCB                     _sd000:
  1412                           	opt stack 0
  1413  008FCB  04                 	db	4
  1414  008FCC  03                 	db	3
  1415  008FCD  0409               	dw	1033
  1416  008FCF                     __end_of_sd000:
  1417                           	opt stack 0
  1418  0000                     _RPINR22	set	3837
  1419  0000                     _RPOR23	set	3799
  1420  0000                     _RPOR21	set	3797
  1421  0000                     _RPINR21	set	3836
  1422  0000                     _PPSCONbits	set	3775
  1423  0000                     _ANCON0bits	set	3912
  1424  0000                     _UEP0bits	set	3878
  1425  0000                     _UIEbits	set	3894
  1426  0000                     _UADDR	set	3896
  1427  0000                     _UIE	set	3894
  1428  0000                     _UEIE	set	3895
  1429  0000                     _UCFG	set	3897
  1430  0000                     _UEP1	set	3879
  1431  0000                     _UEP0	set	3878
  1432  0000                     _TBLPTR	set	4086
  1433  0000                     _RXADDRL	set	3945
  1434  0000                     _RXADDRH	set	3944
  1435  0000                     _DMABCL	set	3943
  1436  0000                     _DMABCH	set	3942
  1437  0000                     _TXADDRL	set	3947
  1438  0000                     _TXADDRH	set	3946
  1439  0000                     _DMACON2bits	set	3974
  1440  0000                     _DMACON1bits	set	3976
  1441  0000                     _SSP2CON1bits	set	3954
  1442  0000                     _SSP2STATbits	set	3955
  1443  0000                     _EECON2	set	4007
  1444  0000                     _INTCON	set	4082
  1445  0000                     _EECON1	set	4006
  1446  0000                     _TABLAT	set	4085
  1447  0000                     _EECON1bits	set	4006
  1448  0000                     _SSP1BUF	set	4041
  1449  0000                     _SSP1CON2bits	set	4037
  1450  0000                     _SSP1CON1bits	set	4038
  1451  0000                     _SSP1ADD	set	4040
  1452  0000                     _SSP1STATbits	set	4039
  1453  0000                     _TRISBbits	set	3987
  1454  0000                     _LATDbits	set	3980
  1455  0000                     _TRISDbits	set	3989
  1456  0000                     _TRISCbits	set	3988
  1457  0000                     _LATAbits	set	3977
  1458  0000                     _TRISAbits	set	3986
  1459  0000                     _TRISEbits	set	3990
  1460  0000                     _T0CONbits	set	4053
  1461  0000                     _INTCON3bits	set	4080
  1462  0000                     _PORTA	set	3968
  1463  0000                     _LATCbits	set	3979
  1464  0000                     _PORTE	set	3972
  1465  0000                     _TMR0L	set	4054
  1466  0000                     _TMR0H	set	4055
  1467  0000                     _INTCONbits	set	4082
  1468  0000                     _OSCCON	set	4051
  1469  0000                     _OSCTUNEbits	set	3995
  1470  0000                     _PORTAbits	set	3968
  1471  0000                     _PORTEbits	set	3972
  1472  0000                     _USTAT	set	3940
  1473  0000                     _PIR2bits	set	4001
  1474  0000                     _UCON	set	3941
  1475  0000                     _UIRbits	set	3938
  1476  0000                     _UCONbits	set	3941
  1477  0000                     _UIR	set	3938
  1478  0000                     _UEIR	set	3939
  1479  0000                     _PIE2bits	set	4000
  1480  008FCF                     STR_12:
  1481  008FCF  68                 	db	104	;'h'
  1482  008FD0  65                 	db	101	;'e'
  1483  008FD1  6C                 	db	108	;'l'
  1484  008FD2  6C                 	db	108	;'l'
  1485  008FD3  6F                 	db	111	;'o'
  1486  008FD4  20                 	db	32
  1487  008FD5  77                 	db	119	;'w'
  1488  008FD6  6F                 	db	111	;'o'
  1489  008FD7  72                 	db	114	;'r'
  1490  008FD8  6C                 	db	108	;'l'
  1491  008FD9  64                 	db	100	;'d'
  1492  008FDA  21                 	db	33
  1493  008FDB  00                 	db	0
  1494  008FDC                     STR_9:
  1495  008FDC  53                 	db	83	;'S'
  1496  008FDD  74                 	db	116	;'t'
  1497  008FDE  65                 	db	101	;'e'
  1498  008FDF  70                 	db	112	;'p'
  1499  008FE0  70                 	db	112	;'p'
  1500  008FE1  65                 	db	101	;'e'
  1501  008FE2  72                 	db	114	;'r'
  1502  008FE3  43                 	db	67	;'C'
  1503  008FE4  74                 	db	116	;'t'
  1504  008FE5  72                 	db	114	;'r'
  1505  008FE6  6C                 	db	108	;'l'
  1506  008FE7  00                 	db	0
  1507  008FE8                     STR_10:
  1508  008FE8  46                 	db	70	;'F'
  1509  008FE9  49                 	db	73	;'I'
  1510  008FEA  4C                 	db	76	;'L'
  1511  008FEB  45                 	db	69	;'E'
  1512  008FEC  20                 	db	32
  1513  008FED  20                 	db	32
  1514  008FEE  20                 	db	32
  1515  008FEF  20                 	db	32
  1516  008FF0  00                 	db	0
  1517  008FF1                     STR_1:
  1518  008FF1  4D                 	db	77	;'M'
  1519  008FF2  53                 	db	83	;'S'
  1520  008FF3  44                 	db	68	;'D'
  1521  008FF4  4F                 	db	79	;'O'
  1522  008FF5  53                 	db	83	;'S'
  1523  008FF6  35                 	db	53	;'5'
  1524  008FF7  2E                 	db	46
  1525  008FF8  30                 	db	48	;'0'
  1526  008FF9  00                 	db	0
  1527  008FFA                     STR_11:
  1528  008FFA  54                 	db	84	;'T'
  1529  008FFB  58                 	db	88	;'X'
  1530  008FFC  54                 	db	84	;'T'
  1531  008FFD  00                 	db	0
  1532  0000                     
  1533                           ; #config settings
  1534  008FFE  00                 	db	0	; dummy byte at the end
  1535  0000                     
  1536                           	psect	cinit
  1537  0053E8                     __pcinit:
  1538                           	opt stack 0
  1539  0053E8                     start_initialization:
  1540                           	opt stack 0
  1541  0053E8                     __initialization:
  1542                           	opt stack 0
  1543                           
  1544                           ; Initialize objects allocated to BANK2 (26 bytes)
  1545                           ; load TBLPTR registers with __pidataBANK2
  1546  0053E8  0EB6               	movlw	low __pidataBANK2
  1547  0053EA  6EF6               	movwf	tblptrl,c
  1548  0053EC  0E72               	movlw	high __pidataBANK2
  1549  0053EE  6EF7               	movwf	tblptrh,c
  1550  0053F0  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1551  0053F2  6EF8               	movwf	tblptru,c
  1552  0053F4  EE02  F0B2         	lfsr	0,__pdataBANK2
  1553  0053F8  EE10 F01A          	lfsr	1,26
  1554  0053FC                     copy_data0:
  1555  0053FC  0009               	tblrd		*+
  1556  0053FE  CFF5 FFEE          	movff	tablat,postinc0
  1557  005402  50E5               	movf	postdec1,w,c
  1558  005404  50E1               	movf	fsr1l,w,c
  1559  005406  E1FA               	bnz	copy_data0
  1560                           
  1561                           ; Initialize objects allocated to BANK1 (20 bytes)
  1562                           ; load TBLPTR registers with __pidataBANK1
  1563  005408  0E60               	movlw	low __pidataBANK1
  1564  00540A  6EF6               	movwf	tblptrl,c
  1565  00540C  0E73               	movlw	high __pidataBANK1
  1566  00540E  6EF7               	movwf	tblptrh,c
  1567  005410  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1568  005412  6EF8               	movwf	tblptru,c
  1569  005414  EE01  F0E9         	lfsr	0,__pdataBANK1
  1570  005418  EE10 F014          	lfsr	1,20
  1571  00541C                     copy_data1:
  1572  00541C  0009               	tblrd		*+
  1573  00541E  CFF5 FFEE          	movff	tablat,postinc0
  1574  005422  50E5               	movf	postdec1,w,c
  1575  005424  50E1               	movf	fsr1l,w,c
  1576  005426  E1FA               	bnz	copy_data1
  1577                           
  1578                           ; Initialize objects allocated to BANK0 (1 bytes)
  1579                           ; load TBLPTR registers with __pidataBANK0
  1580  005428  0EB6               	movlw	low __pidataBANK0
  1581  00542A  6EF6               	movwf	tblptrl,c
  1582  00542C  0E74               	movlw	high __pidataBANK0
  1583  00542E  6EF7               	movwf	tblptrh,c
  1584  005430  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1585  005432  6EF8               	movwf	tblptru,c
  1586  005434  0009               	tblrd		*+	;fetch initializer
  1587  005436  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1588                           
  1589                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1590  00543A  EE02  F0CC         	lfsr	0,__pbssBIGRAMll
  1591  00543E  EE12 F000          	lfsr	1,512
  1592  005442                     clear_0:
  1593  005442  6AEE               	clrf	postinc0,c
  1594  005444  50E5               	movf	postdec1,w,c
  1595  005446  50E1               	movf	fsr1l,w,c
  1596  005448  E1FC               	bnz	clear_0
  1597  00544A  50E2               	movf	fsr1h,w,c
  1598  00544C  E1FA               	bnz	clear_0
  1599                           
  1600                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1601  00544E  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1602  005452  EE14 F000          	lfsr	1,1024
  1603  005456                     clear_1:
  1604  005456  6AEE               	clrf	postinc0,c
  1605  005458  50E5               	movf	postdec1,w,c
  1606  00545A  50E1               	movf	fsr1l,w,c
  1607  00545C  E1FC               	bnz	clear_1
  1608  00545E  50E2               	movf	fsr1h,w,c
  1609  005460  E1FA               	bnz	clear_1
  1610                           
  1611                           ; Clear objects allocated to BANK2 (178 bytes)
  1612  005462  EE02  F000         	lfsr	0,__pbssBANK2
  1613  005466  0EB2               	movlw	178
  1614  005468                     clear_2:
  1615  005468  6AEE               	clrf	postinc0,c
  1616  00546A  06E8               	decf	wreg,f,c
  1617  00546C  E1FD               	bnz	clear_2
  1618                           
  1619                           ; Clear objects allocated to BANK1 (233 bytes)
  1620  00546E  EE01  F000         	lfsr	0,__pbssBANK1
  1621  005472  0EE9               	movlw	233
  1622  005474                     clear_3:
  1623  005474  6AEE               	clrf	postinc0,c
  1624  005476  06E8               	decf	wreg,f,c
  1625  005478  E1FD               	bnz	clear_3
  1626                           
  1627                           ; Clear objects allocated to BANK0 (86 bytes)
  1628  00547A  EE00  F060         	lfsr	0,__pbssBANK0
  1629  00547E  0E56               	movlw	86
  1630  005480                     clear_4:
  1631  005480  6AEE               	clrf	postinc0,c
  1632  005482  06E8               	decf	wreg,f,c
  1633  005484  E1FD               	bnz	clear_4
  1634                           
  1635                           ; Clear objects allocated to COMRAM (1 bytes)
  1636  005486  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1637  005488                     end_of_initialization:
  1638                           	opt stack 0
  1639  005488                     __end_of__initialization:
  1640                           	opt stack 0
  1641  005488  0100               	movlb	0
  1642  00548A  EF13  F025         	goto	_main	;jump to C main() function
  1643                           tblptru	equ	0xFF8
  1644                           tblptrh	equ	0xFF7
  1645                           tblptrl	equ	0xFF6
  1646                           tablat	equ	0xFF5
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           postdec1	equ	0xFE5
  1650                           fsr1h	equ	0xFE2
  1651                           fsr1l	equ	0xFE1
  1652                           
  1653                           	psect	bssCOMRAM
  1654  00005F                     __pbssCOMRAM:
  1655                           	opt stack 0
  1656  00005F                     _USBDeviceState:
  1657                           	opt stack 0
  1658  00005F                     	ds	1
  1659                           tblptru	equ	0xFF8
  1660                           tblptrh	equ	0xFF7
  1661                           tblptrl	equ	0xFF6
  1662                           tablat	equ	0xFF5
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1h	equ	0xFE2
  1667                           fsr1l	equ	0xFE1
  1668                           
  1669                           	psect	bssBANK0
  1670  000060                     __pbssBANK0:
  1671                           	opt stack 0
  1672  000060                     _os:
  1673                           	opt stack 0
  1674  000060                     	ds	15
  1675  00006F                     _inPipes:
  1676                           	opt stack 0
  1677  00006F                     	ds	6
  1678  000075                     _pBDTEntryIn:
  1679                           	opt stack 0
  1680  000075                     	ds	6
  1681  00007B                     _hex_file_size:
  1682                           	opt stack 0
  1683  00007B                     	ds	4
  1684  00007F                     _hex_file_offset:
  1685                           	opt stack 0
  1686  00007F                     	ds	4
  1687  000083                     _LBA:
  1688                           	opt stack 0
  1689  000083                     	ds	4
  1690  000087                     _TransferLength:
  1691                           	opt stack 0
  1692  000087                     	ds	2
  1693  000089                     _USBMSDInHandle:
  1694                           	opt stack 0
  1695  000089                     	ds	2
  1696  00008B                     _USBMSDOutHandle:
  1697                           	opt stack 0
  1698  00008B                     	ds	2
  1699  00008D                     _pBDTEntryEP0OutNext:
  1700                           	opt stack 0
  1701  00008D                     	ds	2
  1702  00008F                     _pBDTEntryEP0OutCurrent:
  1703                           	opt stack 0
  1704  00008F                     	ds	2
  1705  000091                     _active_configuration:
  1706                           	opt stack 0
  1707  000091                     	ds	1
  1708  000092                     _start_from_byte_next:
  1709                           	opt stack 0
  1710  000092                     	ds	1
  1711  000093                     _last_error:
  1712                           	opt stack 0
  1713  000093                     	ds	1
  1714  000094                     _power_state:
  1715                           	opt stack 0
  1716  000094                     	ds	1
  1717  000095                     _userInterfaceStatus:
  1718                           	opt stack 0
  1719  000095                     	ds	1
  1720  000096                     _enc2:
  1721                           	opt stack 0
  1722  000096                     	ds	1
  1723  000097                     _enc1:
  1724                           	opt stack 0
  1725  000097                     	ds	1
  1726  000098                     _MSDCBWValid:
  1727                           	opt stack 0
  1728  000098                     	ds	1
  1729  000099                     _MSDHostNoData:
  1730                           	opt stack 0
  1731  000099                     	ds	1
  1732  00009A                     _SoftDetach:
  1733                           	opt stack 0
  1734  00009A                     	ds	1
  1735  00009B                     _gblCBWLength:
  1736                           	opt stack 0
  1737  00009B                     	ds	1
  1738  00009C                     _MSDRetryAttempt:
  1739                           	opt stack 0
  1740  00009C                     	ds	1
  1741  00009D                     _MSDWriteState:
  1742                           	opt stack 0
  1743  00009D                     	ds	1
  1744  00009E                     _MSDReadState:
  1745                           	opt stack 0
  1746  00009E                     	ds	1
  1747  00009F                     _MSDCommandState:
  1748                           	opt stack 0
  1749  00009F                     	ds	1
  1750  0000A0                     _MSD_State:
  1751                           	opt stack 0
  1752  0000A0                     	ds	1
  1753  0000A1                     _USBTicksSinceSuspendEnd:
  1754                           	opt stack 0
  1755  0000A1                     	ds	1
  1756  0000A2                     _USBDeferOUTDataStagePackets:
  1757                           	opt stack 0
  1758  0000A2                     	ds	1
  1759  0000A3                     _USBDeferINDataStagePackets:
  1760                           	opt stack 0
  1761  0000A3                     	ds	1
  1762  0000A4                     _USBStatusStageEnabledFlag2:
  1763                           	opt stack 0
  1764  0000A4                     	ds	1
  1765  0000A5                     _USBStatusStageEnabledFlag1:
  1766                           	opt stack 0
  1767  0000A5                     	ds	1
  1768  0000A6                     _USBDeferStatusStagePacket:
  1769                           	opt stack 0
  1770  0000A6                     	ds	1
  1771  0000A7                     _USBStatusStageTimeoutCounter:
  1772                           	opt stack 0
  1773  0000A7                     	ds	1
  1774  0000A8                     _BothEP0OutUOWNsSet:
  1775                           	opt stack 0
  1776  0000A8                     	ds	1
  1777  0000A9                     _endpoint_number:
  1778                           	opt stack 0
  1779  0000A9                     	ds	1
  1780  0000AA                     _USBBusIsSuspended:
  1781                           	opt stack 0
  1782  0000AA                     	ds	1
  1783  0000AB                     _RemoteWakeup:
  1784                           	opt stack 0
  1785  0000AB                     	ds	1
  1786  0000AC                     _controlTransferState:
  1787                           	opt stack 0
  1788  0000AC                     	ds	1
  1789  0000AD                     _shortPacketStatus:
  1790                           	opt stack 0
  1791  0000AD                     	ds	1
  1792  0000AE                     _fast_read_cluster_number:
  1793                           	opt stack 0
  1794  0000AE                     	ds	2
  1795  0000B0                     _fast_read_cluster:
  1796                           	opt stack 0
  1797  0000B0                     	ds	2
  1798  0000B2                     _active_protocol:
  1799                           	opt stack 0
  1800  0000B2                     	ds	1
  1801  0000B3                     _idle_rate:
  1802                           	opt stack 0
  1803  0000B3                     	ds	1
  1804  0000B4                     _USTATcopy:
  1805                           	opt stack 0
  1806  0000B4                     	ds	1
  1807  0000B5                     _USBActiveConfiguration:
  1808                           	opt stack 0
  1809  0000B5                     	ds	1
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           postinc0	equ	0xFEE
  1815                           wreg	equ	0xFE8
  1816                           postdec1	equ	0xFE5
  1817                           fsr1h	equ	0xFE2
  1818                           fsr1l	equ	0xFE1
  1819                           
  1820                           	psect	dataBANK0
  1821  0000FF                     __pdataBANK0:
  1822                           	opt stack 0
  1823  0000FF                     _file_number:
  1824                           	opt stack 0
  1825  0000FF                     	ds	1
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1h	equ	0xFE2
  1834                           fsr1l	equ	0xFE1
  1835                           
  1836                           	psect	bssBANK1
  1837  000100                     __pbssBANK1:
  1838                           	opt stack 0
  1839  000100                     _gblCBW:
  1840                           	opt stack 0
  1841  000100                     	ds	31
  1842  00011F                     _gblSenseData:
  1843                           	opt stack 0
  1844  00011F                     	ds	18
  1845  000131                     _outPipes:
  1846                           	opt stack 0
  1847  000131                     	ds	8
  1848  000139                     _pBDTEntryOut:
  1849                           	opt stack 0
  1850  000139                     	ds	6
  1851  00013F                     _extended_linear_address:
  1852                           	opt stack 0
  1853  00013F                     	ds	4
  1854  000143                     _file_maximum_address:
  1855                           	opt stack 0
  1856  000143                     	ds	4
  1857  000147                     _file_minimum_address:
  1858                           	opt stack 0
  1859  000147                     	ds	4
  1860  00014B                     _gblBLKLen:
  1861                           	opt stack 0
  1862  00014B                     	ds	4
  1863  00014F                     _gblNumBLKS:
  1864                           	opt stack 0
  1865  00014F                     	ds	4
  1866  000153                     _USB1msTickCount:
  1867                           	opt stack 0
  1868  000153                     	ds	4
  1869  000157                     _config_external:
  1870                           	opt stack 0
  1871  000157                     	ds	3
  1872  00015A                     _config_internal:
  1873                           	opt stack 0
  1874  00015A                     	ds	3
  1875  00015D                     _ep_data_out:
  1876                           	opt stack 0
  1877  00015D                     	ds	3
  1878  000160                     _ep_data_in:
  1879                           	opt stack 0
  1880  000160                     	ds	3
  1881  000163                     _FileAddress:
  1882                           	opt stack 0
  1883  000163                     	ds	2
  1884  000165                     _flash_pages_written:
  1885                           	opt stack 0
  1886  000165                     	ds	2
  1887  000167                     _total_hex_file_entries:
  1888                           	opt stack 0
  1889  000167                     	ds	2
  1890  000169                     _hex_file_entries:
  1891                           	opt stack 0
  1892  000169                     	ds	2
  1893  00016B                     _startup_timer:
  1894                           	opt stack 0
  1895  00016B                     	ds	2
  1896  00016D                     _system_ui_inactive_count:
  1897                           	opt stack 0
  1898  00016D                     	ds	2
  1899  00016F                     _USBInHandle:
  1900                           	opt stack 0
  1901  00016F                     	ds	2
  1902  000171                     _USBOutHandle:
  1903                           	opt stack 0
  1904  000171                     	ds	2
  1905  000173                     _gblMediaPresent:
  1906                           	opt stack 0
  1907  000173                     	ds	2
  1908  000175                     _MSBBufferIndex:
  1909                           	opt stack 0
  1910  000175                     	ds	2
  1911  000177                     _ptrNextData:
  1912                           	opt stack 0
  1913  000177                     	ds	2
  1914  000179                     _pDst:
  1915                           	opt stack 0
  1916  000179                     	ds	2
  1917  00017B                     _display_content:
  1918                           	opt stack 0
  1919  00017B                     	ds	80
  1920  0001CB                     _hex_file_entry:
  1921                           	opt stack 0
  1922  0001CB                     	ds	23
  1923  0001E2                     _mediaInformation:
  1924                           	opt stack 0
  1925  0001E2                     	ds	5
  1926  0001E7                     _USBAlternateInterface:
  1927                           	opt stack 0
  1928  0001E7                     	ds	2
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           
  1939                           	psect	dataBANK1
  1940  0001E9                     __pdataBANK1:
  1941                           	opt stack 0
  1942  0001E9                     _LUN:
  1943                           	opt stack 0
  1944  0001E9                     	ds	20
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           postinc0	equ	0xFEE
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           
  1955                           	psect	bssBANK2
  1956  000200                     __pbssBANK2:
  1957                           	opt stack 0
  1958  000200                     _ToSendDataBuffer:
  1959                           	opt stack 0
  1960  000200                     	ds	64
  1961  000240                     _ReceivedDataBuffer:
  1962                           	opt stack 0
  1963  000240                     	ds	64
  1964  000280                     _file_buffer:
  1965                           	opt stack 0
  1966  000280                     	ds	50
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1h	equ	0xFE2
  1975                           fsr1l	equ	0xFE1
  1976                           
  1977                           	psect	dataBANK2
  1978  0002B2                     __pdataBANK2:
  1979                           	opt stack 0
  1980  0002B2                     i2c_display_init@F6829:
  1981                           	opt stack 0
  1982  0002B2                     	ds	9
  1983  0002BB                     __i2c_display_send_init_sequence@F6826:
  1984                           	opt stack 0
  1985  0002BB                     	ds	9
  1986  0002C4                     	ds	8
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postdec1	equ	0xFE5
  1994                           fsr1h	equ	0xFE2
  1995                           fsr1l	equ	0xFE1
  1996                           
  1997                           	psect	bssBIGRAMlh
  1998  000800                     __pbssBIGRAMlh:
  1999                           	opt stack 0
  2000  000800                     _pageBuffer:
  2001                           	opt stack 0
  2002  000800                     	ds	1024
  2003                           tblptru	equ	0xFF8
  2004                           tblptrh	equ	0xFF7
  2005                           tblptrl	equ	0xFF6
  2006                           tablat	equ	0xFF5
  2007                           postinc0	equ	0xFEE
  2008                           wreg	equ	0xFE8
  2009                           postdec1	equ	0xFE5
  2010                           fsr1h	equ	0xFE2
  2011                           fsr1l	equ	0xFE1
  2012                           
  2013                           	psect	bssBIGRAMll
  2014  0002CC                     __pbssBIGRAMll:
  2015                           	opt stack 0
  2016  0002CC                     _buffer:
  2017                           	opt stack 0
  2018  0002CC                     	ds	512
  2019                           tblptru	equ	0xFF8
  2020                           tblptrh	equ	0xFF7
  2021                           tblptrl	equ	0xFF6
  2022                           tablat	equ	0xFF5
  2023                           postinc0	equ	0xFEE
  2024                           wreg	equ	0xFE8
  2025                           postdec1	equ	0xFE5
  2026                           fsr1h	equ	0xFE2
  2027                           fsr1l	equ	0xFE1
  2028                           
  2029                           	psect	cstackBANK0
  2030  0000B6                     __pcstackBANK0:
  2031                           	opt stack 0
  2032  0000B6                     fat_read_from_file_fast@sector:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x0
  2036  0000B6                     	ds	2
  2037  0000B8                     fat_read_from_file_fast@working_cluster:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0x2
  2041  0000B8                     	ds	2
  2042  0000BA                     fat_read_from_file_fast@offset:
  2043                           	opt stack 0
  2044                           
  2045                           ; 2 bytes @ 0x4
  2046  0000BA                     	ds	2
  2047  0000BC                     fat_read_from_file_fast@needed_cluster:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x6
  2051  0000BC                     	ds	2
  2052  0000BE                     fat_read_from_file_fast@read_length:
  2053                           	opt stack 0
  2054                           
  2055                           ; 2 bytes @ 0x8
  2056  0000BE                     	ds	2
  2057  0000C0                     fat_read_from_file_fast@position:
  2058                           	opt stack 0
  2059                           
  2060                           ; 4 bytes @ 0xA
  2061  0000C0                     	ds	4
  2062  0000C4                     ??__bootloader_verify_file:
  2063  0000C4                     ??__bootloader_program:
  2064                           
  2065                           ; 1 bytes @ 0xE
  2066  0000C4                     	ds	8
  2067  0000CC                     __bootloader_program@buffer:
  2068                           	opt stack 0
  2069  0000CC                     __bootloader_verify_file@root:
  2070                           	opt stack 0
  2071                           
  2072                           ; 32 bytes @ 0x16
  2073  0000CC                     	ds	2
  2074  0000CE                     __bootloader_program@entry_page:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x18
  2078  0000CE                     	ds	2
  2079  0000D0                     __bootloader_program@address_within_page:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0x1A
  2083  0000D0                     	ds	2
  2084  0000D2                     __bootloader_program@root:
  2085                           	opt stack 0
  2086                           
  2087                           ; 32 bytes @ 0x1C
  2088  0000D2                     	ds	26
  2089  0000EC                     __bootloader_verify_file@rec_counter:
  2090                           	opt stack 0
  2091                           
  2092                           ; 1 bytes @ 0x36
  2093  0000EC                     	ds	1
  2094  0000ED                     __bootloader_verify_file@return_value:
  2095                           	opt stack 0
  2096                           
  2097                           ; 4 bytes @ 0x37
  2098  0000ED                     	ds	4
  2099  0000F1                     __bootloader_verify_file@address32:
  2100                           	opt stack 0
  2101                           
  2102                           ; 4 bytes @ 0x3B
  2103  0000F1                     	ds	1
  2104  0000F2                     __bootloader_program@return_value:
  2105                           	opt stack 0
  2106                           
  2107                           ; 4 bytes @ 0x3C
  2108  0000F2                     	ds	4
  2109  0000F6                     __bootloader_program@address32:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x40
  2113  0000F6                     	ds	4
  2114  0000FA                     __bootloader_program@start_from_byte:
  2115                           	opt stack 0
  2116                           
  2117                           ; 1 bytes @ 0x44
  2118  0000FA                     	ds	1
  2119  0000FB                     __bootloader_program@cntr:
  2120                           	opt stack 0
  2121                           
  2122                           ; 2 bytes @ 0x45
  2123  0000FB                     	ds	2
  2124  0000FD                     __bootloader_program@page_to_write:
  2125                           	opt stack 0
  2126                           
  2127                           ; 2 bytes @ 0x47
  2128  0000FD                     	ds	2
  2129                           tblptru	equ	0xFF8
  2130                           tblptrh	equ	0xFF7
  2131                           tblptrl	equ	0xFF6
  2132                           tablat	equ	0xFF5
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           
  2139                           	psect	cstackCOMRAM
  2140  000001                     __pcstackCOMRAM:
  2141                           	opt stack 0
  2142  000001                     ??_USBStdGetDscHandler:
  2143  000001                     ??_USBStdGetStatusHandler:
  2144  000001                     ??_system_delay_ms:
  2145  000001                     ??__i2c_wait_idle:
  2146  000001                     ??__display_clear:
  2147  000001                     ?_USBTransferOnePacket:
  2148                           	opt stack 0
  2149  000001                     ?_ExternalFlash_MediaInitialize:
  2150                           	opt stack 0
  2151  000001                     ?_ExternalFlash_SectorSizeRead:
  2152                           	opt stack 0
  2153  000001                     ?_bootloader_get_entries:
  2154                           	opt stack 0
  2155  000001                     ?_bootloader_get_total_entries:
  2156                           	opt stack 0
  2157  000001                     ?_bootloader_get_rec_address:
  2158                           	opt stack 0
  2159  000001                     ?_bootloader_get_flashPagesWritten:
  2160                           	opt stack 0
  2161  000001                     ?_strncmp:
  2162                           	opt stack 0
  2163  000001                     ?_internalFlash_pageFromAddress:
  2164                           	opt stack 0
  2165  000001                     ?_internalFlash_getBuffer:
  2166                           	opt stack 0
  2167  000001                     ?__sector_from_file_number:
  2168                           	opt stack 0
  2169  000001                     ?__offset_from_file_number:
  2170                           	opt stack 0
  2171  000001                     ?__data_sector_from_cluster:
  2172                           	opt stack 0
  2173  000001                     ?__fat_sector_from_cluster:
  2174                           	opt stack 0
  2175  000001                     ?__fat_offset_from_cluster:
  2176                           	opt stack 0
  2177  000001                     ?__read_value_from_offset:
  2178                           	opt stack 0
  2179  000001                     ?_bootloader_get_rec_dataLength:
  2180                           	opt stack 0
  2181  000001                     ?___wmul:
  2182                           	opt stack 0
  2183  000001                     ?___lwdiv:
  2184                           	opt stack 0
  2185  000001                     ?___lwmod:
  2186                           	opt stack 0
  2187  000001                     ?_ExternalFlash_CapacityRead:
  2188                           	opt stack 0
  2189  000001                     ?_bootloader_get_file_size:
  2190                           	opt stack 0
  2191  000001                     ?_internalFlash_addressFromPage:
  2192                           	opt stack 0
  2193  000001                     ?___lldiv:
  2194                           	opt stack 0
  2195  000001                     ?___llmod:
  2196                           	opt stack 0
  2197  000001                     USBTransferOnePacket@dir:
  2198                           	opt stack 0
  2199  000001                     USBStallEndpoint@dir:
  2200                           	opt stack 0
  2201  000001                     USBConfigureEndpoint@direction:
  2202                           	opt stack 0
  2203  000001                     USBCtrlTrfTxService@byteToSend:
  2204                           	opt stack 0
  2205  000001                     USBCtrlTrfRxService@i:
  2206                           	opt stack 0
  2207  000001                     __i2c_send@dat:
  2208                           	opt stack 0
  2209  000001                     display_get_character@position:
  2210                           	opt stack 0
  2211  000001                     __display_search@cntr:
  2212                           	opt stack 0
  2213  000001                     __display_rebooting@cntr:
  2214                           	opt stack 0
  2215  000001                     __display_suspended@cntr:
  2216                           	opt stack 0
  2217  000001                     hexCharToUint8@c:
  2218                           	opt stack 0
  2219  000001                     bootloader_get_rec_data@index:
  2220                           	opt stack 0
  2221  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2222                           	opt stack 0
  2223  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2224                           	opt stack 0
  2225  000001                     SYSTEM_Initialize@pll_startup_counter:
  2226                           	opt stack 0
  2227  000001                     ExternalFlash_MediaInitialize@config:
  2228                           	opt stack 0
  2229  000001                     ExternalFlash_SectorSizeRead@config:
  2230                           	opt stack 0
  2231  000001                     ExternalFlash_CapacityRead@config:
  2232                           	opt stack 0
  2233  000001                     ExternalFlash_MediaDetect@config:
  2234                           	opt stack 0
  2235  000001                     ExternalFlash_WriteProtectStateGet@config:
  2236                           	opt stack 0
  2237  000001                     __data_sector_from_cluster@fat_cluster:
  2238                           	opt stack 0
  2239  000001                     __fat_sector_from_cluster@cluster:
  2240                           	opt stack 0
  2241  000001                     __fat_offset_from_cluster@cluster:
  2242                           	opt stack 0
  2243  000001                     __read_value_from_offset@offset:
  2244                           	opt stack 0
  2245  000001                     __get_mbr@idx:
  2246                           	opt stack 0
  2247  000001                     __get_fbr@idx:
  2248                           	opt stack 0
  2249  000001                     __get_fat@idx:
  2250                           	opt stack 0
  2251  000001                     __get_root@idx:
  2252                           	opt stack 0
  2253  000001                     __get_data@idx:
  2254                           	opt stack 0
  2255  000001                     internalFlash_addressFromPage@page:
  2256                           	opt stack 0
  2257  000001                     spi_tx@data:
  2258                           	opt stack 0
  2259  000001                     spi_tx_tx@command:
  2260                           	opt stack 0
  2261  000001                     spi_tx_rx@command:
  2262                           	opt stack 0
  2263  000001                     ___wmul@multiplier:
  2264                           	opt stack 0
  2265  000001                     ___lwdiv@dividend:
  2266                           	opt stack 0
  2267  000001                     ___lwmod@dividend:
  2268                           	opt stack 0
  2269  000001                     memcpy@d1:
  2270                           	opt stack 0
  2271  000001                     memset@p1:
  2272                           	opt stack 0
  2273  000001                     strncmp@s1:
  2274                           	opt stack 0
  2275  000001                     __spi_init@details:
  2276                           	opt stack 0
  2277  000001                     __bootloader_check_address@address:
  2278                           	opt stack 0
  2279  000001                     internalFlash_pageFromAddress@address:
  2280                           	opt stack 0
  2281  000001                     ___lldiv@dividend:
  2282                           	opt stack 0
  2283  000001                     ___llmod@dividend:
  2284                           	opt stack 0
  2285                           
  2286                           ; 4 bytes @ 0x0
  2287  000001                     	ds	1
  2288  000002                     ??_USBConfigureEndpoint:
  2289  000002                     ??_USBStallEndpoint:
  2290  000002                     ??_display_get_character:
  2291  000002                     USBCtrlTrfRxService@byteToRead:
  2292                           	opt stack 0
  2293  000002                     USBCtrlTrfInHandler@lastDTS:
  2294                           	opt stack 0
  2295  000002                     system_delay_ms@ms:
  2296                           	opt stack 0
  2297  000002                     hexCharToUint8@ascii:
  2298                           	opt stack 0
  2299  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2300                           	opt stack 0
  2301  000002                     USBTransferOnePacket@data:
  2302                           	opt stack 0
  2303  000002                     USBStdGetStatusHandler@p:
  2304                           	opt stack 0
  2305                           
  2306                           ; 2 bytes @ 0x1
  2307  000002                     	ds	1
  2308  000003                     ??_MSDComputeDeviceInAndResidue:
  2309  000003                     ??__get_mbr:
  2310  000003                     ??__get_fbr:
  2311  000003                     ??__get_fat:
  2312  000003                     ??__get_root:
  2313  000003                     ?_hexCharsToUint16:
  2314                           	opt stack 0
  2315  000003                     system_delay_ms@cntr:
  2316                           	opt stack 0
  2317  000003                     __display_clear@row:
  2318                           	opt stack 0
  2319  000003                     __sector_from_file_number@file_number:
  2320                           	opt stack 0
  2321  000003                     __offset_from_file_number@file_number:
  2322                           	opt stack 0
  2323  000003                     hexCharsToUint8@c2:
  2324                           	opt stack 0
  2325  000003                     hexCharsToUint16@c2:
  2326                           	opt stack 0
  2327  000003                     SYSTEM_Initialize@pll_startup_counter_2932:
  2328                           	opt stack 0
  2329  000003                     __read_value_from_offset@buffer:
  2330                           	opt stack 0
  2331  000003                     spi_tx@length:
  2332                           	opt stack 0
  2333  000003                     spi_tx_tx@command_length:
  2334                           	opt stack 0
  2335  000003                     spi_tx_rx@command_length:
  2336                           	opt stack 0
  2337  000003                     ___wmul@multiplicand:
  2338                           	opt stack 0
  2339  000003                     ___lwdiv@divisor:
  2340                           	opt stack 0
  2341  000003                     ___lwmod@divisor:
  2342                           	opt stack 0
  2343  000003                     memset@c:
  2344                           	opt stack 0
  2345  000003                     strncmp@s2:
  2346                           	opt stack 0
  2347  000003                     memcpy@s1:
  2348                           	opt stack 0
  2349                           
  2350                           ; 3 bytes @ 0x2
  2351  000003                     	ds	1
  2352  000004                     ??_hexCharsToUint8:
  2353  000004                     USBTransferOnePacket@len:
  2354                           	opt stack 0
  2355  000004                     display_get_character@line:
  2356                           	opt stack 0
  2357  000004                     __display_clear@col:
  2358                           	opt stack 0
  2359  000004                     hexCharsToUint16@c3:
  2360                           	opt stack 0
  2361  000004                     spi_init@configuration:
  2362                           	opt stack 0
  2363  000004                     __sector_from_file_number@sector:
  2364                           	opt stack 0
  2365  000004                     __offset_from_file_number@offset:
  2366                           	opt stack 0
  2367                           
  2368                           ; 2 bytes @ 0x3
  2369  000004                     	ds	1
  2370  000005                     ??_USBTransferOnePacket:
  2371  000005                     ??_spi_tx:
  2372  000005                     ??_internalFlash_pageFromAddress:
  2373  000005                     ??__read_value_from_offset:
  2374  000005                     SYSTEM_Initialize@state:
  2375                           	opt stack 0
  2376  000005                     hexCharsToUint8@c1:
  2377                           	opt stack 0
  2378  000005                     hexCharsToUint16@c4:
  2379                           	opt stack 0
  2380  000005                     __bootloader_check_address@dataLength:
  2381                           	opt stack 0
  2382  000005                     ___lwmod@counter:
  2383                           	opt stack 0
  2384  000005                     __fill_buffer_get_display@outBuffer:
  2385                           	opt stack 0
  2386  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2387                           	opt stack 0
  2388  000005                     spi_tx_tx@data:
  2389                           	opt stack 0
  2390  000005                     spi_tx_rx@data:
  2391                           	opt stack 0
  2392  000005                     ___wmul@product:
  2393                           	opt stack 0
  2394  000005                     ___lwdiv@quotient:
  2395                           	opt stack 0
  2396  000005                     memset@n:
  2397                           	opt stack 0
  2398  000005                     strncmp@len:
  2399                           	opt stack 0
  2400  000005                     internalFlash_addressFromPage@address:
  2401                           	opt stack 0
  2402  000005                     ___lldiv@divisor:
  2403                           	opt stack 0
  2404  000005                     ___llmod@divisor:
  2405                           	opt stack 0
  2406                           
  2407                           ; 4 bytes @ 0x4
  2408  000005                     	ds	1
  2409  000006                     ??_hexCharsToUint16:
  2410  000006                     ??__bootloader_check_address:
  2411  000006                     USBStallEndpoint@ep:
  2412                           	opt stack 0
  2413  000006                     USBConfigureEndpoint@EPNum:
  2414                           	opt stack 0
  2415  000006                     __i2c_eeprom_busy@busy:
  2416                           	opt stack 0
  2417  000006                     hexCharsToUint8@retVal:
  2418                           	opt stack 0
  2419  000006                     __i2c_write@data:
  2420                           	opt stack 0
  2421  000006                     __i2c_read@data:
  2422                           	opt stack 0
  2423  000006                     i2c_display_write_fixed@data:
  2424                           	opt stack 0
  2425  000006                     memcpy@n:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0x5
  2429  000006                     	ds	1
  2430  000007                     ??_strncmp:
  2431  000007                     ??__fill_buffer_get_bootloader_details:
  2432  000007                     __fill_buffer_get_display@secondHalf:
  2433                           	opt stack 0
  2434  000007                     ___lwdiv@counter:
  2435                           	opt stack 0
  2436  000007                     USBStallEndpoint@p:
  2437                           	opt stack 0
  2438  000007                     USBConfigureEndpoint@handle:
  2439                           	opt stack 0
  2440  000007                     spi_tx_tx@data_length:
  2441                           	opt stack 0
  2442  000007                     spi_tx_rx@data_length:
  2443                           	opt stack 0
  2444  000007                     memset@p:
  2445                           	opt stack 0
  2446                           
  2447                           ; 2 bytes @ 0x6
  2448  000007                     	ds	1
  2449  000008                     ??__fill_buffer_get_display:
  2450  000008                     __i2c_write@length:
  2451                           	opt stack 0
  2452  000008                     __i2c_read@length:
  2453                           	opt stack 0
  2454  000008                     i2c_display_write_fixed@length:
  2455                           	opt stack 0
  2456  000008                     __read_value_from_offset@value:
  2457                           	opt stack 0
  2458  000008                     utoa@buf:
  2459                           	opt stack 0
  2460  000008                     memcpy@s:
  2461                           	opt stack 0
  2462                           
  2463                           ; 3 bytes @ 0x7
  2464  000008                     	ds	1
  2465  000009                     ??_spi_tx_rx:
  2466  000009                     ??_spi_tx_tx:
  2467  000009                     ??__i2c_read:
  2468  000009                     ?_internalFlash_addressWithinPage:
  2469                           	opt stack 0
  2470  000009                     USBDeviceInit@i:
  2471                           	opt stack 0
  2472  000009                     USBEnableEndpoint@options:
  2473                           	opt stack 0
  2474  000009                     USBTransferOnePacket@ep:
  2475                           	opt stack 0
  2476  000009                     MSDErrorHandler@ErrorCase:
  2477                           	opt stack 0
  2478  000009                     __i2c_write@slave_address:
  2479                           	opt stack 0
  2480  000009                     i2c_display_write_fixed@pos:
  2481                           	opt stack 0
  2482  000009                     __flash_wakeup@command:
  2483                           	opt stack 0
  2484  000009                     hexCharsToUint16@c1:
  2485                           	opt stack 0
  2486  000009                     ___llmod@counter:
  2487                           	opt stack 0
  2488  000009                     internalFlash_erasePage@page:
  2489                           	opt stack 0
  2490  000009                     internalFlash_writePage@page:
  2491                           	opt stack 0
  2492  000009                     internalFlash_addressWithinPage@address:
  2493                           	opt stack 0
  2494  000009                     ___lldiv@quotient:
  2495                           	opt stack 0
  2496                           
  2497                           ; 4 bytes @ 0x8
  2498  000009                     	ds	1
  2499  00000A                     MSDErrorHandler@OldMSD_State:
  2500                           	opt stack 0
  2501  00000A                     __i2c_write@cntr:
  2502                           	opt stack 0
  2503  00000A                     __bootloader_check_address@worst_case:
  2504                           	opt stack 0
  2505  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2506                           	opt stack 0
  2507  00000A                     USBEnableEndpoint@p:
  2508                           	opt stack 0
  2509  00000A                     USBTransferOnePacket@handle:
  2510                           	opt stack 0
  2511  00000A                     hexCharsToUint16@retVal:
  2512                           	opt stack 0
  2513  00000A                     utoa@val:
  2514                           	opt stack 0
  2515                           
  2516                           ; 2 bytes @ 0x9
  2517  00000A                     	ds	1
  2518  00000B                     ??_internalFlash_erasePage:
  2519  00000B                     ??_internalFlash_writePage:
  2520  00000B                     ??_i2c_display_init:
  2521  00000B                     __ic2_display_set_ddram_address@address:
  2522                           	opt stack 0
  2523  00000B                     __bootloader_check_address@byte_status:
  2524                           	opt stack 0
  2525  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2526                           	opt stack 0
  2527  00000B                     i2c_eeprom_writeByte@address:
  2528                           	opt stack 0
  2529  00000B                     memcpy@d:
  2530                           	opt stack 0
  2531  00000B                     __ic2_display_set_cgram_address@data_array:
  2532                           	opt stack 0
  2533  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2534                           	opt stack 0
  2535                           
  2536                           ; 4 bytes @ 0xA
  2537  00000B                     	ds	1
  2538  00000C                     ??_USBMSDInit:
  2539  00000C                     ?_parseHexFileEntry:
  2540                           	opt stack 0
  2541  00000C                     USBEnableEndpoint@ep:
  2542                           	opt stack 0
  2543  00000C                     __bootloader_check_address@cntr:
  2544                           	opt stack 0
  2545  00000C                     _USBCheckMSDRequest$2319:
  2546                           	opt stack 0
  2547  00000C                     MSDTransferTerminated@handle:
  2548                           	opt stack 0
  2549  00000C                     __ic2_display_set_ddram_address@data_array:
  2550                           	opt stack 0
  2551  00000C                     parseHexFileEntry@data:
  2552                           	opt stack 0
  2553  00000C                     utoa@base:
  2554                           	opt stack 0
  2555  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2556                           	opt stack 0
  2557  00000C                     i2c_display_init@init_sequence:
  2558                           	opt stack 0
  2559                           
  2560                           ; 9 bytes @ 0xB
  2561  00000C                     	ds	1
  2562  00000D                     ?__flash_get_status:
  2563                           	opt stack 0
  2564  00000D                     i2c_eeprom_writeByte@data:
  2565                           	opt stack 0
  2566  00000D                     __fill_buffer_get_display@cntr:
  2567                           	opt stack 0
  2568  00000D                     ___lldiv@counter:
  2569                           	opt stack 0
  2570  00000D                     memcpy@tmp:
  2571                           	opt stack 0
  2572  00000D                     internalFlash_addressWithinPage@page:
  2573                           	opt stack 0
  2574                           
  2575                           ; 2 bytes @ 0xC
  2576  00000D                     	ds	1
  2577  00000E                     ??_i2c_eeprom_writeByte:
  2578  00000E                     __ic2_display_set_cgram_address@address:
  2579                           	opt stack 0
  2580  00000E                     i2c_display_cursor@position:
  2581                           	opt stack 0
  2582  00000E                     __fill_buffer_get_display@line:
  2583                           	opt stack 0
  2584  00000E                     _USBCheckMSDRequest$2320:
  2585                           	opt stack 0
  2586  00000E                     _MSDTransferTerminated$2407:
  2587                           	opt stack 0
  2588  00000E                     utoa@v:
  2589                           	opt stack 0
  2590  00000E                     __display_itoa_u32@value:
  2591                           	opt stack 0
  2592  00000E                     parseHexFileEntry@offset:
  2593                           	opt stack 0
  2594  00000E                     internalFlash_read@address:
  2595                           	opt stack 0
  2596                           
  2597                           ; 4 bytes @ 0xD
  2598  00000E                     	ds	1
  2599  00000F                     ??_internalFlash_addressWithinPage:
  2600  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2601                           	opt stack 0
  2602  00000F                     i2c_display_cursor@line:
  2603                           	opt stack 0
  2604  00000F                     __flash_get_status@command:
  2605                           	opt stack 0
  2606  00000F                     __fill_buffer_get_display@start_line:
  2607                           	opt stack 0
  2608  00000F                     i2c_display_program_custom_character@bit_pattern:
  2609                           	opt stack 0
  2610  00000F                     internalFlash_writePage@cntr:
  2611                           	opt stack 0
  2612  00000F                     internalFlash_erasePage@address:
  2613                           	opt stack 0
  2614                           
  2615                           ; 4 bytes @ 0xE
  2616  00000F                     	ds	1
  2617  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2618                           	opt stack 0
  2619  000010                     __i2c_read@slave_address:
  2620                           	opt stack 0
  2621  000010                     i2c_display_cursor@address:
  2622                           	opt stack 0
  2623  000010                     __fill_buffer_get_display@position:
  2624                           	opt stack 0
  2625  000010                     utoa@c:
  2626                           	opt stack 0
  2627  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2628                           	opt stack 0
  2629  000010                     __flash_get_status@status:
  2630                           	opt stack 0
  2631  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2632                           	opt stack 0
  2633                           
  2634                           ; 2 bytes @ 0xF
  2635  000010                     	ds	1
  2636  000011                     ??_i2c_display_program_custom_character:
  2637  000011                     MSDCheckForErrorCases@DeviceNoData:
  2638                           	opt stack 0
  2639  000011                     __i2c_read@cntr:
  2640                           	opt stack 0
  2641  000011                     internalFlash_writePage@block_cntr:
  2642                           	opt stack 0
  2643  000011                     i2c_eeprom_writeByte@dat:
  2644                           	opt stack 0
  2645  000011                     itoa@buf:
  2646                           	opt stack 0
  2647                           
  2648                           ; 2 bytes @ 0x10
  2649  000011                     	ds	1
  2650  000012                     internalFlash_writePage@byte_cntr:
  2651                           	opt stack 0
  2652  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2653                           	opt stack 0
  2654  000012                     i2c_eeprom_readByte@address:
  2655                           	opt stack 0
  2656  000012                     __display_itoa_u32@text:
  2657                           	opt stack 0
  2658  000012                     __flash_is_busy@status:
  2659                           	opt stack 0
  2660  000012                     parseHexFileEntry@hexEntry:
  2661                           	opt stack 0
  2662  000012                     internalFlash_read@data_length:
  2663                           	opt stack 0
  2664                           
  2665                           ; 2 bytes @ 0x11
  2666  000012                     	ds	1
  2667  000013                     i2c_eeprom_writeByte@slave_address:
  2668                           	opt stack 0
  2669  000013                     itoa@val:
  2670                           	opt stack 0
  2671  000013                     internalFlash_writePage@address:
  2672                           	opt stack 0
  2673  000013                     internalFlash_addressWithinPage@page_start_address:
  2674                           	opt stack 0
  2675                           
  2676                           ; 4 bytes @ 0x12
  2677  000013                     	ds	1
  2678  000014                     ??_i2c_eeprom_readByte:
  2679  000014                     ??_parseHexFileEntry:
  2680  000014                     __display_itoa_u32@cntr:
  2681                           	opt stack 0
  2682  000014                     flash_is_busy@result:
  2683                           	opt stack 0
  2684  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2685                           	opt stack 0
  2686  000014                     __flash_compare_page_to_buffer@page:
  2687                           	opt stack 0
  2688  000014                     __flash_write_to_buffer@start:
  2689                           	opt stack 0
  2690  000014                     __flash_write_page_from_buffer@page:
  2691                           	opt stack 0
  2692  000014                     __flash_partial_read@page:
  2693                           	opt stack 0
  2694  000014                     internalFlash_read@buffer:
  2695                           	opt stack 0
  2696  000014                     __flash_set_page_size@command:
  2697                           	opt stack 0
  2698                           
  2699                           ; 4 bytes @ 0x13
  2700  000014                     	ds	1
  2701  000015                     __display_itoa_u32@number_of_digits:
  2702                           	opt stack 0
  2703  000015                     __fill_buffer_get_status@outBuffer:
  2704                           	opt stack 0
  2705  000015                     itoa@base:
  2706                           	opt stack 0
  2707  000015                     i2c_display_program_custom_character@data_array:
  2708                           	opt stack 0
  2709                           
  2710                           ; 11 bytes @ 0x14
  2711  000015                     	ds	1
  2712  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2713  000016                     ??__display_found:
  2714  000016                     __flash_compare_page_to_buffer@buffer:
  2715                           	opt stack 0
  2716  000016                     __flash_write_page_from_buffer@buffer:
  2717                           	opt stack 0
  2718  000016                     __flash_write_to_buffer@data:
  2719                           	opt stack 0
  2720  000016                     __flash_partial_read@start:
  2721                           	opt stack 0
  2722  000016                     internalFlash_readPage@page:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x15
  2726  000016                     	ds	1
  2727  000017                     ??__flash_compare_page_to_buffer:
  2728  000017                     ??__flash_write_page_from_buffer:
  2729  000017                     i2c_eeprom_readByte@slave_address:
  2730                           	opt stack 0
  2731  000017                     api_prepare@inBuffer:
  2732                           	opt stack 0
  2733  000017                     itoa@cp:
  2734                           	opt stack 0
  2735                           
  2736                           ; 2 bytes @ 0x16
  2737  000017                     	ds	1
  2738  000018                     ??_USBStdFeatureReqHandler:
  2739  000018                     USBStdSetCfgHandler@i:
  2740                           	opt stack 0
  2741  000018                     i2c_eeprom_readByte@addr:
  2742                           	opt stack 0
  2743  000018                     __display_found@start:
  2744                           	opt stack 0
  2745  000018                     __flash_set_page_size@size:
  2746                           	opt stack 0
  2747  000018                     __flash_write_to_buffer@data_length:
  2748                           	opt stack 0
  2749  000018                     __flash_partial_read@length:
  2750                           	opt stack 0
  2751  000018                     internalFlash_readPage@address:
  2752                           	opt stack 0
  2753                           
  2754                           ; 4 bytes @ 0x17
  2755  000018                     	ds	1
  2756  000019                     __display_found@cntr:
  2757                           	opt stack 0
  2758  000019                     USBStdFeatureReqHandler@pUEP:
  2759                           	opt stack 0
  2760  000019                     __display_itoa_u16@value:
  2761                           	opt stack 0
  2762  000019                     api_prepare@outBuffer:
  2763                           	opt stack 0
  2764                           
  2765                           ; 2 bytes @ 0x18
  2766  000019                     	ds	1
  2767  00001A                     __flash_write_to_buffer@buffer:
  2768                           	opt stack 0
  2769  00001A                     __flash_compare_page_to_buffer@status:
  2770                           	opt stack 0
  2771  00001A                     __flash_partial_read@data:
  2772                           	opt stack 0
  2773  00001A                     __flash_write_page_from_buffer@command:
  2774                           	opt stack 0
  2775                           
  2776                           ; 4 bytes @ 0x19
  2777  00001A                     	ds	1
  2778  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2779                           	opt stack 0
  2780  00001B                     api_prepare@command:
  2781                           	opt stack 0
  2782  00001B                     __display_itoa_u16@text:
  2783                           	opt stack 0
  2784  00001B                     __flash_write_to_buffer@command:
  2785                           	opt stack 0
  2786                           
  2787                           ; 4 bytes @ 0x1A
  2788  00001B                     	ds	1
  2789  00001C                     ??__flash_partial_read:
  2790  00001C                     parseHexFileEntry@i:
  2791                           	opt stack 0
  2792  00001C                     USBStdFeatureReqHandler@p:
  2793                           	opt stack 0
  2794  00001C                     __flash_compare_page_to_buffer@command:
  2795                           	opt stack 0
  2796                           
  2797                           ; 4 bytes @ 0x1B
  2798  00001C                     	ds	1
  2799  00001D                     ??__display_verify:
  2800  00001D                     ??__display_checked:
  2801  00001D                     __display_start@cntr:
  2802                           	opt stack 0
  2803  00001D                     __display_failed@cntr:
  2804                           	opt stack 0
  2805  00001D                     __display_programming@cntr:
  2806                           	opt stack 0
  2807  00001D                     __display_done@cntr:
  2808                           	opt stack 0
  2809                           
  2810                           ; 1 bytes @ 0x1C
  2811  00001D                     	ds	1
  2812  00001E                     ??_USBCtrlEPService:
  2813  00001E                     
  2814                           ; 1 bytes @ 0x1D
  2815  00001E                     	ds	1
  2816  00001F                     __display_verify@cntr:
  2817                           	opt stack 0
  2818  00001F                     __display_checked@start:
  2819                           	opt stack 0
  2820                           
  2821                           ; 1 bytes @ 0x1E
  2822  00001F                     	ds	1
  2823  000020                     USBDeviceTasks@i:
  2824                           	opt stack 0
  2825  000020                     i2c_display_program_custom_character@address:
  2826                           	opt stack 0
  2827  000020                     __display_checked@cntr:
  2828                           	opt stack 0
  2829  000020                     flash_sector_write@page:
  2830                           	opt stack 0
  2831  000020                     __flash_partial_read@command:
  2832                           	opt stack 0
  2833                           
  2834                           ; 4 bytes @ 0x1F
  2835  000020                     	ds	1
  2836  000021                     ??_display_prepare:
  2837  000021                     i2c_display_program_custom_character@cntr:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x20
  2841  000021                     	ds	1
  2842  000022                     flash_sector_write@data:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x21
  2846  000022                     	ds	1
  2847  000023                     display_prepare@mode:
  2848                           	opt stack 0
  2849                           
  2850                           ; 1 bytes @ 0x22
  2851  000023                     	ds	1
  2852  000024                     flash_sector_write@match:
  2853                           	opt stack 0
  2854  000024                     __parse_command_short@cmd:
  2855                           	opt stack 0
  2856  000024                     __flash_partial_read@address:
  2857                           	opt stack 0
  2858                           
  2859                           ; 4 bytes @ 0x23
  2860  000024                     	ds	1
  2861  000025                     ExternalFlash_SectorWrite@config:
  2862                           	opt stack 0
  2863  000025                     fat_format@cntr:
  2864                           	opt stack 0
  2865                           
  2866                           ; 2 bytes @ 0x24
  2867  000025                     	ds	2
  2868  000027                     __parse_format_drive@data:
  2869                           	opt stack 0
  2870  000027                     ExternalFlash_SectorWrite@sector_addr:
  2871                           	opt stack 0
  2872                           
  2873                           ; 4 bytes @ 0x26
  2874  000027                     	ds	1
  2875  000028                     flash_sector_read@page:
  2876                           	opt stack 0
  2877  000028                     flash_partial_read@page:
  2878                           	opt stack 0
  2879                           
  2880                           ; 2 bytes @ 0x27
  2881  000028                     	ds	1
  2882  000029                     __parse_format_drive@out_buffer:
  2883                           	opt stack 0
  2884                           
  2885                           ; 2 bytes @ 0x28
  2886  000029                     	ds	1
  2887  00002A                     flash_sector_read@data:
  2888                           	opt stack 0
  2889  00002A                     flash_partial_read@start:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x29
  2893  00002A                     	ds	1
  2894  00002B                     ExternalFlash_SectorWrite@buffer:
  2895                           	opt stack 0
  2896  00002B                     __parse_format_drive@out_idx_ptr:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x2A
  2900  00002B                     	ds	1
  2901  00002C                     ??_fat_get_format_status:
  2902  00002C                     flash_partial_read@length:
  2903                           	opt stack 0
  2904  00002C                     ExternalFlash_SectorRead@config:
  2905                           	opt stack 0
  2906  00002C                     fat_find_file@name:
  2907                           	opt stack 0
  2908                           
  2909                           ; 2 bytes @ 0x2B
  2910  00002C                     	ds	1
  2911  00002D                     ??__parse_format_drive:
  2912  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2913                           	opt stack 0
  2914                           
  2915                           ; 1 bytes @ 0x2C
  2916  00002D                     	ds	1
  2917  00002E                     __parse_format_drive@return_value:
  2918                           	opt stack 0
  2919  00002E                     flash_partial_read@data:
  2920                           	opt stack 0
  2921  00002E                     ExternalFlash_SectorWrite@page:
  2922                           	opt stack 0
  2923  00002E                     fat_find_file@extension:
  2924                           	opt stack 0
  2925  00002E                     fat_get_format_status@cntr:
  2926                           	opt stack 0
  2927  00002E                     ExternalFlash_SectorRead@sector_addr:
  2928                           	opt stack 0
  2929                           
  2930                           ; 4 bytes @ 0x2D
  2931  00002E                     	ds	1
  2932  00002F                     __parse_command_long@data:
  2933                           	opt stack 0
  2934                           
  2935                           ; 2 bytes @ 0x2E
  2936  00002F                     	ds	1
  2937  000030                     ??_MSDWriteHandler:
  2938  000030                     ??_fat_find_file:
  2939  000030                     ?__read_fat:
  2940                           	opt stack 0
  2941  000030                     __root_is_available@root_sector:
  2942                           	opt stack 0
  2943  000030                     __read_fat@cluster:
  2944                           	opt stack 0
  2945  000030                     fat_get_file_information@data:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x2F
  2949  000030                     	ds	1
  2950  000031                     __parse_command_long@out_buffer:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x30
  2954  000031                     	ds	1
  2955  000032                     fat_find_file@file_number:
  2956                           	opt stack 0
  2957  000032                     ExternalFlash_SectorRead@buffer:
  2958                           	opt stack 0
  2959  000032                     __root_is_available@offset:
  2960                           	opt stack 0
  2961  000032                     __read_fat@sector:
  2962                           	opt stack 0
  2963                           
  2964                           ; 2 bytes @ 0x31
  2965  000032                     	ds	1
  2966  000033                     fat_find_file@sector:
  2967                           	opt stack 0
  2968  000033                     fat_get_file_information@root_sector:
  2969                           	opt stack 0
  2970  000033                     __parse_command_long@out_idx_ptr:
  2971                           	opt stack 0
  2972                           
  2973                           ; 2 bytes @ 0x32
  2974  000033                     	ds	1
  2975  000034                     __root_is_available@file_number:
  2976                           	opt stack 0
  2977  000034                     ExternalFlash_SectorRead@page:
  2978                           	opt stack 0
  2979  000034                     __read_fat@offset:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x33
  2983  000034                     	ds	1
  2984  000035                     __root_is_available@first_byte:
  2985                           	opt stack 0
  2986  000035                     __parse_command_long@length:
  2987                           	opt stack 0
  2988  000035                     fat_find_file@offset:
  2989                           	opt stack 0
  2990  000035                     fat_get_file_information@offset:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x34
  2994  000035                     	ds	1
  2995  000036                     ??_MSDReadHandler:
  2996  000036                     ?_fat_get_file_size:
  2997                           	opt stack 0
  2998  000036                     __read_fat@value:
  2999                           	opt stack 0
  3000  000036                     api_parse@inBuffer:
  3001                           	opt stack 0
  3002                           
  3003                           ; 2 bytes @ 0x35
  3004  000036                     	ds	1
  3005  000037                     fat_get_file_information@file_number:
  3006                           	opt stack 0
  3007                           
  3008                           ; 1 bytes @ 0x36
  3009  000037                     	ds	1
  3010  000038                     ?__find_nth_cluster:
  3011                           	opt stack 0
  3012  000038                     api_parse@receivedDataLength:
  3013                           	opt stack 0
  3014  000038                     __find_nth_cluster@cluster:
  3015                           	opt stack 0
  3016                           
  3017                           ; 2 bytes @ 0x37
  3018  000038                     	ds	1
  3019  000039                     api_parse@outBuffer:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x38
  3023  000039                     	ds	1
  3024  00003A                     ??_MSDProcessCommandMediaPresent:
  3025  00003A                     __find_nth_cluster@n:
  3026                           	opt stack 0
  3027  00003A                     fat_get_file_size@sector:
  3028                           	opt stack 0
  3029                           
  3030                           ; 2 bytes @ 0x39
  3031  00003A                     	ds	1
  3032  00003B                     ??_api_parse:
  3033                           
  3034                           ; 1 bytes @ 0x3A
  3035  00003B                     	ds	1
  3036  00003C                     _MSDProcessCommandMediaPresent$2390:
  3037                           	opt stack 0
  3038  00003C                     __find_nth_cluster@offset:
  3039                           	opt stack 0
  3040  00003C                     fat_get_file_size@offset:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x3B
  3044  00003C                     	ds	1
  3045  00003D                     api_parse@out_idx_ptr:
  3046                           	opt stack 0
  3047                           
  3048                           ; 2 bytes @ 0x3C
  3049  00003D                     	ds	1
  3050  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3051                           	opt stack 0
  3052  00003E                     __find_nth_cluster@sector_in_buffer:
  3053                           	opt stack 0
  3054  00003E                     fat_get_file_size@file_size:
  3055                           	opt stack 0
  3056                           
  3057                           ; 4 bytes @ 0x3D
  3058  00003E                     	ds	1
  3059  00003F                     api_parse@out_idx:
  3060                           	opt stack 0
  3061  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3062                           	opt stack 0
  3063                           
  3064                           ; 4 bytes @ 0x3E
  3065  00003F                     	ds	1
  3066  000040                     api_parse@in_idx:
  3067                           	opt stack 0
  3068  000040                     __find_nth_cluster@sector:
  3069                           	opt stack 0
  3070                           
  3071                           ; 2 bytes @ 0x3F
  3072  000040                     	ds	1
  3073  000041                     
  3074                           ; 1 bytes @ 0x40
  3075  000041                     	ds	1
  3076  000042                     fat_get_file_size@file_number:
  3077                           	opt stack 0
  3078  000042                     fat_read_from_file_fast@start_byte:
  3079                           	opt stack 0
  3080                           
  3081                           ; 4 bytes @ 0x41
  3082  000042                     	ds	1
  3083  000043                     MSDProcessCommandMediaPresent@capacity:
  3084                           	opt stack 0
  3085                           
  3086                           ; 4 bytes @ 0x42
  3087  000043                     	ds	3
  3088  000046                     fat_read_from_file_fast@length:
  3089                           	opt stack 0
  3090                           
  3091                           ; 4 bytes @ 0x45
  3092  000046                     	ds	1
  3093  000047                     MSDProcessCommandMediaPresent@i:
  3094                           	opt stack 0
  3095                           
  3096                           ; 1 bytes @ 0x46
  3097  000047                     	ds	1
  3098  000048                     ??_MSDProcessCommand:
  3099  000048                     
  3100                           ; 1 bytes @ 0x47
  3101  000048                     	ds	2
  3102  00004A                     fat_read_from_file_fast@data:
  3103                           	opt stack 0
  3104                           
  3105                           ; 2 bytes @ 0x49
  3106  00004A                     	ds	2
  3107  00004C                     fat_read_from_file_fast@cluster:
  3108                           	opt stack 0
  3109                           
  3110                           ; 2 bytes @ 0x4B
  3111  00004C                     	ds	1
  3112  00004D                     ??_MSDTasks:
  3113                           
  3114                           ; 1 bytes @ 0x4C
  3115  00004D                     	ds	1
  3116  00004E                     _MSDTasks$2372:
  3117                           	opt stack 0
  3118  00004E                     fat_read_from_file_fast@cluster_number:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x4D
  3122  00004E                     	ds	2
  3123  000050                     ??_fat_read_from_file_fast:
  3124  000050                     _MSDTasks$2373:
  3125                           	opt stack 0
  3126                           
  3127                           ; 2 bytes @ 0x4F
  3128  000050                     	ds	2
  3129  000052                     MSDTasks@i:
  3130                           	opt stack 0
  3131                           
  3132                           ; 1 bytes @ 0x51
  3133  000052                     	ds	1
  3134  000053                     
  3135                           ; 1 bytes @ 0x52
  3136  000053                     	ds	9
  3137  00005C                     bootloader_run@timeslot:
  3138                           	opt stack 0
  3139                           
  3140                           ; 1 bytes @ 0x5B
  3141  00005C                     	ds	1
  3142  00005D                     ??_main:
  3143                           
  3144                           ; 1 bytes @ 0x5C
  3145  00005D                     	ds	2
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           postinc0	equ	0xFEE
  3151                           wreg	equ	0xFE8
  3152                           postdec1	equ	0xFE5
  3153                           fsr1h	equ	0xFE2
  3154                           fsr1l	equ	0xFE1
  3155                           
  3156 ;;
  3157 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3158 ;;
  3159 ;; *************** function _main *****************
  3160 ;; Defined at:
  3161 ;;		line 57 in file "main.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;		None
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels required when called:   12
  3181 ;; This function calls:
  3182 ;;		_APP_DeviceCustomHIDTasks
  3183 ;;		_APP_DeviceMSDTasks
  3184 ;;		_SYSTEM_Initialize
  3185 ;;		_USBDeviceInit
  3186 ;;		_USBDeviceTasks
  3187 ;;		__normal_mode
  3188 ;;		_bootloader_run
  3189 ;;		_display_prepare
  3190 ;;		_display_update
  3191 ;;		_jump_to_main_program
  3192 ;;		_system_full_init
  3193 ;;		_system_minimal_init
  3194 ;;		_system_minimal_init_undo
  3195 ;;		_timer_pseudo_isr
  3196 ;;		_ui_get_status
  3197 ;;		_ui_run
  3198 ;; This function is called by:
  3199 ;;		Startup code after reset
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text0
  3204  004A26                     __ptext0:
  3205                           	opt stack 0
  3206  004A26                     _main:
  3207                           	opt stack 19
  3208                           
  3209                           ;incstack = 0
  3210  004A26  0004               	clrwdt		;# 
  3211                           
  3212                           ;main.c: 64: system_minimal_init();
  3213  004A28  EC9A  F039         	call	_system_minimal_init	;wreg free
  3214                           
  3215                           ;main.c: 67: if(_normal_mode())
  3216  004A2C  EC7E  F032         	call	__normal_mode	;wreg free
  3217  004A30  0900               	iorlw	0
  3218  004A32  B4D8               	btfsc	status,2,c
  3219  004A34  D004               	goto	l863
  3220                           
  3221                           ;main.c: 68: {;main.c: 70: system_minimal_init_undo();
  3222  004A36  ECFC  F039         	call	_system_minimal_init_undo	;wreg free
  3223                           
  3224                           ;main.c: 71: jump_to_main_program();
  3225  004A3A  EC45  F03A         	call	_jump_to_main_program	;wreg free
  3226  004A3E                     l863:
  3227                           
  3228                           ;main.c: 72: };main.c: 76: system_full_init();
  3229  004A3E  EC07  F034         	call	_system_full_init	;wreg free
  3230                           
  3231                           ;main.c: 80: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3232  004A42  0E00               	movlw	0
  3233  004A44  EC5B  F034         	call	_SYSTEM_Initialize
  3234                           
  3235                           ;main.c: 81: USBDeviceInit();
  3236  004A48  EC77  F01A         	call	_USBDeviceInit	;wreg free
  3237  004A4C                     l864:
  3238  004A4C  0004               	clrwdt		;# 
  3239                           
  3240                           ;main.c: 94: USBDeviceTasks();
  3241  004A4E  EC05  F017         	call	_USBDeviceTasks	;wreg free
  3242                           
  3243                           ;main.c: 95: APP_DeviceMSDTasks();
  3244  004A52  ECC3  F039         	call	_APP_DeviceMSDTasks	;wreg free
  3245                           
  3246                           ;main.c: 96: APP_DeviceCustomHIDTasks();
  3247  004A56  EC3B  F02B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3248                           
  3249                           ;main.c: 100: timer_pseudo_isr();
  3250  004A5A  EC8A  F021         	call	_timer_pseudo_isr	;wreg free
  3251                           
  3252                           ;main.c: 104: if(!os.done)
  3253  004A5E  0100               	movlb	0	; () banked
  3254  004A60  5165               	movf	(_os+5)& (0+255),w,b
  3255  004A62  A4D8               	btfss	status,2,c
  3256  004A64  D7F3               	goto	l864
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;main.c: 105: {;main.c: 107: ui_run();
  3260  004A66  ECF6  F01D         	call	_ui_run	;wreg free
  3261                           
  3262                           ;main.c: 112: switch(os.timeSlot&0b00000111)
  3263  004A6A  D025               	goto	l866
  3264  004A6C                     
  3265                           ;main.c: 115: bootloader_run(0);
  3266  004A6C  0E00               	movlw	0
  3267  004A6E  ECF1  F030         	call	_bootloader_run
  3268                           
  3269                           ;main.c: 116: break;
  3270  004A72  D043               	goto	l868
  3271  004A74                     
  3272                           ;main.c: 119: bootloader_run(1);
  3273  004A74  0E01               	movlw	1
  3274  004A76  ECF1  F030         	call	_bootloader_run
  3275                           
  3276                           ;main.c: 120: break;
  3277  004A7A  D03F               	goto	l868
  3278  004A7C                     
  3279                           ;main.c: 123: bootloader_run(2);
  3280  004A7C  0E02               	movlw	2
  3281  004A7E  ECF1  F030         	call	_bootloader_run
  3282                           
  3283                           ;main.c: 124: break;
  3284  004A82  D03B               	goto	l868
  3285  004A84                     
  3286                           ;main.c: 127: bootloader_run(3);
  3287  004A84  0E03               	movlw	3
  3288  004A86  ECF1  F030         	call	_bootloader_run
  3289                           
  3290                           ;main.c: 128: break;
  3291  004A8A  D037               	goto	l868
  3292  004A8C                     
  3293                           ;main.c: 131: bootloader_run(4);
  3294  004A8C  0E04               	movlw	4
  3295  004A8E  ECF1  F030         	call	_bootloader_run
  3296                           
  3297                           ;main.c: 132: break;
  3298  004A92  D033               	goto	l868
  3299  004A94                     
  3300                           ;main.c: 135: bootloader_run(5);
  3301  004A94  0E05               	movlw	5
  3302  004A96  ECF1  F030         	call	_bootloader_run
  3303                           
  3304                           ;main.c: 136: break;
  3305  004A9A  D02F               	goto	l868
  3306  004A9C                     
  3307                           ;main.c: 139: display_prepare(os.display_mode);
  3308  004A9C  0100               	movlb	0	; () banked
  3309  004A9E  5167               	movf	(_os+7)& (0+255),w,b
  3310  004AA0  ECA4  F024         	call	_display_prepare
  3311                           
  3312                           ;main.c: 140: break;
  3313  004AA4  D02A               	goto	l868
  3314  004AA6                     
  3315                           ;main.c: 143: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3316  004AA6  EC51  F03A         	call	_ui_get_status	;wreg free
  3317  004AAA  0A05               	xorlw	5
  3318  004AAC  A4D8               	btfss	status,2,c
  3319  004AAE  D025               	goto	l868
  3320                           
  3321                           ;main.c: 144: {;main.c: 145: display_update();
  3322  004AB0  ECBC  F030         	call	_display_update	;wreg free
  3323                           
  3324                           ;main.c: 148: }
  3325                           
  3326                           ;main.c: 146: };main.c: 147: break;
  3327  004AB4  D022               	goto	l868
  3328  004AB6                     l866:
  3329  004AB6  0100               	movlb	0	; () banked
  3330  004AB8  5164               	movf	(_os+4)& (0+255),w,b
  3331  004ABA  0B07               	andlw	7
  3332  004ABC  6E5D               	movwf	??_main& (0+255),c
  3333  004ABE  6A5E               	clrf	(??_main+1)& (0+255),c
  3334                           
  3335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3336                           ; Switch size 1, requested type "space"
  3337                           ; Number of cases is 1, Range of values is 0 to 0
  3338                           ; switch strategies available:
  3339                           ; Name         Instructions Cycles
  3340                           ; simple_byte            4     3 (average)
  3341                           ;	Chosen strategy is simple_byte
  3342  004AC0  505E               	movf	??_main+1,w,c
  3343  004AC2  0A00               	xorlw	0	; case 0
  3344  004AC4  A4D8               	btfss	status,2,c
  3345  004AC6  D019               	goto	l868
  3346                           
  3347                           ; BSR set to: 0
  3348                           ; Switch size 1, requested type "space"
  3349                           ; Number of cases is 8, Range of values is 0 to 7
  3350                           ; switch strategies available:
  3351                           ; Name         Instructions Cycles
  3352                           ; simple_byte           25    13 (average)
  3353                           ;	Chosen strategy is simple_byte
  3354  004AC8  505D               	movf	??_main,w,c
  3355  004ACA  0A00               	xorlw	0	; case 0
  3356  004ACC  B4D8               	btfsc	status,2,c
  3357  004ACE  D7CE               	goto	l867
  3358  004AD0  0A01               	xorlw	1	; case 1
  3359  004AD2  B4D8               	btfsc	status,2,c
  3360  004AD4  D7CF               	goto	l869
  3361  004AD6  0A03               	xorlw	3	; case 2
  3362  004AD8  B4D8               	btfsc	status,2,c
  3363  004ADA  D7D0               	goto	l870
  3364  004ADC  0A01               	xorlw	1	; case 3
  3365  004ADE  B4D8               	btfsc	status,2,c
  3366  004AE0  D7D1               	goto	l871
  3367  004AE2  0A07               	xorlw	7	; case 4
  3368  004AE4  B4D8               	btfsc	status,2,c
  3369  004AE6  D7D2               	goto	l872
  3370  004AE8  0A01               	xorlw	1	; case 5
  3371  004AEA  B4D8               	btfsc	status,2,c
  3372  004AEC  D7D3               	goto	l873
  3373  004AEE  0A03               	xorlw	3	; case 6
  3374  004AF0  B4D8               	btfsc	status,2,c
  3375  004AF2  D7D4               	goto	l874
  3376  004AF4  0A01               	xorlw	1	; case 7
  3377  004AF6  B4D8               	btfsc	status,2,c
  3378  004AF8  D7D6               	goto	l875
  3379  004AFA                     l868:
  3380                           
  3381                           ;main.c: 149: os.done = 1;
  3382                           
  3383                           ; BSR set to: 0
  3384  004AFA  0E01               	movlw	1
  3385  004AFC  0100               	movlb	0	; () banked
  3386  004AFE  6F65               	movwf	(_os+5)& (0+255),b
  3387                           
  3388                           ; BSR set to: 0
  3389                           
  3390                           ; BSR set to: 0
  3391  004B00  D7A5               	goto	l864
  3392  004B02                     __end_of_main:
  3393                           	opt stack 0
  3394                           tblptru	equ	0xFF8
  3395                           tblptrh	equ	0xFF7
  3396                           tblptrl	equ	0xFF6
  3397                           tablat	equ	0xFF5
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           postdec1	equ	0xFE5
  3401                           fsr1h	equ	0xFE2
  3402                           fsr1l	equ	0xFE1
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _ui_run *****************
  3406 ;; Defined at:
  3407 ;;		line 128 in file "ui.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:    8
  3428 ;; This function calls:
  3429 ;;		__ui_encoder
  3430 ;;		_display_init
  3431 ;;		_system_encoder_enable
  3432 ;;		_ui_init
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text1
  3439  003BEC                     __ptext1:
  3440                           	opt stack 0
  3441  003BEC                     _ui_run:
  3442                           	opt stack 22
  3443                           
  3444                           ;ui.c: 130: switch(userInterfaceStatus)
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;incstack = 0
  3448  003BEC  D072               	goto	l1314
  3449  003BEE                     
  3450                           ;ui.c: 134: if (os.button1!=0 || os.button2!=0)
  3451  003BEE  0100               	movlb	0	; () banked
  3452  003BF0  5161               	movf	(_os+1)& (0+255),w,b
  3453  003BF2  A4D8               	btfss	status,2,c
  3454  003BF4  D003               	goto	u12780
  3455                           
  3456                           ; BSR set to: 0
  3457  003BF6  5163               	movf	(_os+3)& (0+255),w,b
  3458  003BF8  B4D8               	btfsc	status,2,c
  3459  003BFA  0012               	return	
  3460  003BFC                     u12780:
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;ui.c: 135: {;ui.c: 136: ui_init();
  3464                           
  3465                           ; BSR set to: 0
  3466  003BFC  ECBA  F039         	call	_ui_init	;wreg free
  3467                           
  3468                           ;ui.c: 137: os.button1 = 0;
  3469  003C00  0E00               	movlw	0
  3470  003C02  0100               	movlb	0	; () banked
  3471  003C04  6F61               	movwf	(_os+1)& (0+255),b
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;ui.c: 138: os.button2 = 0;
  3475  003C06  0E00               	movlw	0
  3476  003C08  6F63               	movwf	(_os+3)& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;ui.c: 139: };ui.c: 140: break;
  3480  003C0A  0012               	return	
  3481  003C0C                     
  3482                           ; BSR set to: 0
  3483                           ;ui.c: 145: system_ui_inactive_count = 0;
  3484                           
  3485                           ; BSR set to: 0
  3486  003C0C  0E00               	movlw	0
  3487  003C0E  0101               	movlb	1	; () banked
  3488  003C10  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3489  003C12  0E00               	movlw	0
  3490  003C14  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3491                           
  3492                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3493  003C16  0E02               	movlw	2
  3494  003C18  0100               	movlb	0	; () banked
  3495  003C1A  6F95               	movwf	_userInterfaceStatus& (0+255),b
  3496                           
  3497                           ;ui.c: 147: break;
  3498  003C1C  0012               	return	
  3499  003C1E                     l1321:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;ui.c: 151: LATAbits.LA3 = 0;
  3503  003C1E  9689               	bcf	3977,3,c	;volatile
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;ui.c: 153: system_ui_inactive_count = 0;
  3507  003C20  0E00               	movlw	0
  3508  003C22  0101               	movlb	1	; () banked
  3509  003C24  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3510  003C26  0E00               	movlw	0
  3511  003C28  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3512                           
  3513                           ;ui.c: 154: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3514  003C2A  0E03               	movlw	3
  3515  003C2C  0100               	movlb	0	; () banked
  3516  003C2E  6F95               	movwf	_userInterfaceStatus& (0+255),b
  3517                           
  3518                           ;ui.c: 155: break;
  3519  003C30  0012               	return	
  3520  003C32                     
  3521                           ; BSR set to: 0
  3522                           ;ui.c: 158: ++system_ui_inactive_count;
  3523                           
  3524                           ; BSR set to: 0
  3525  003C32  0101               	movlb	1	; () banked
  3526  003C34  4B6D               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3527  003C36  2B6E               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;ui.c: 160: if (system_ui_inactive_count>3)
  3531  003C38  516E               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3532  003C3A  E104               	bnz	u12790
  3533  003C3C  0E04               	movlw	4
  3534  003C3E  5D6D               	subwf	_system_ui_inactive_count& (0+255),w,b
  3535  003C40  A0D8               	btfss	status,0,c
  3536  003C42  0012               	return	
  3537  003C44                     u12790:
  3538                           
  3539                           ; BSR set to: 1
  3540                           ;ui.c: 161: {;ui.c: 162: LATAbits.LA3 = 1;
  3541  003C44  8689               	bsf	3977,3,c	;volatile
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;ui.c: 163: system_ui_inactive_count = 0;
  3545  003C46  0E00               	movlw	0
  3546  003C48  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3547  003C4A  0E00               	movlw	0
  3548  003C4C  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3549                           
  3550                           ;ui.c: 164: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3551  003C4E  0E04               	movlw	4
  3552  003C50  0100               	movlb	0	; () banked
  3553  003C52  6F95               	movwf	_userInterfaceStatus& (0+255),b
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;ui.c: 165: };ui.c: 166: break;
  3557  003C54  0012               	return	
  3558  003C56                     
  3559                           ; BSR set to: 0
  3560                           ;ui.c: 171: display_init();
  3561                           
  3562                           ; BSR set to: 0
  3563  003C56  ECFE  F034         	call	_display_init	;wreg free
  3564                           
  3565                           ;ui.c: 174: LATCbits.LC1 = 1;
  3566  003C5A  828B               	bsf	3979,1,c	;volatile
  3567                           
  3568                           ;ui.c: 176: system_encoder_enable();
  3569  003C5C  EC23  F039         	call	_system_encoder_enable	;wreg free
  3570                           
  3571                           ;ui.c: 178: system_ui_inactive_count = 0;
  3572  003C60  0E00               	movlw	0
  3573  003C62  0101               	movlb	1	; () banked
  3574  003C64  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3575  003C66  0E00               	movlw	0
  3576  003C68  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;ui.c: 179: startup_timer = 0;
  3580  003C6A  0E00               	movlw	0
  3581  003C6C  6F6C               	movwf	(_startup_timer+1)& (0+255),b
  3582  003C6E  0E00               	movlw	0
  3583  003C70  6F6B               	movwf	_startup_timer& (0+255),b
  3584                           
  3585                           ; BSR set to: 1
  3586                           ;ui.c: 180: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3587  003C72  0E05               	movlw	5
  3588  003C74  0100               	movlb	0	; () banked
  3589  003C76  6F95               	movwf	_userInterfaceStatus& (0+255),b
  3590                           
  3591                           ;ui.c: 181: break;
  3592  003C78  0012               	return	
  3593  003C7A                     
  3594                           ; BSR set to: 0
  3595                           ;ui.c: 184: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3596                           
  3597                           ; BSR set to: 0
  3598  003C7A  5167               	movf	(_os+7)& (0+255),w,b
  3599  003C7C  A4D8               	btfss	status,2,c
  3600  003C7E  D00B               	goto	l1327
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;ui.c: 185: {;ui.c: 186: ++startup_timer;
  3604  003C80  0101               	movlb	1	; () banked
  3605  003C82  4B6B               	infsnz	_startup_timer& (0+255),f,b
  3606  003C84  2B6C               	incf	(_startup_timer+1)& (0+255),f,b
  3607                           
  3608                           ; BSR set to: 1
  3609                           ;ui.c: 187: if(startup_timer==250)
  3610  003C86  0EFA               	movlw	250
  3611  003C88  196B               	xorwf	_startup_timer& (0+255),w,b
  3612  003C8A  116C               	iorwf	(_startup_timer+1)& (0+255),w,b
  3613  003C8C  A4D8               	btfss	status,2,c
  3614  003C8E  D003               	goto	l1327
  3615                           
  3616                           ; BSR set to: 1
  3617                           ;ui.c: 188: {;ui.c: 189: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3618  003C90  0E10               	movlw	16
  3619  003C92  0100               	movlb	0	; () banked
  3620  003C94  6F67               	movwf	(_os+7)& (0+255),b
  3621  003C96                     l1327:
  3622                           
  3623                           ;ui.c: 190: };ui.c: 191: };ui.c: 192: if (os.encoder1Count==0 && os.button1==0 && os.enc
      +                          oder2Count==0 && os.button2==0)
  3624                           
  3625                           ; BSR set to: 0
  3626  003C96  0100               	movlb	0	; () banked
  3627  003C98  5160               	movf	_os& (0+255),w,b
  3628  003C9A  A4D8               	btfss	status,2,c
  3629  003C9C  D012               	goto	l1328
  3630                           
  3631                           ; BSR set to: 0
  3632  003C9E  5161               	movf	(_os+1)& (0+255),w,b
  3633  003CA0  A4D8               	btfss	status,2,c
  3634  003CA2  D00F               	goto	l1328
  3635                           
  3636                           ; BSR set to: 0
  3637  003CA4  5162               	movf	(_os+2)& (0+255),w,b
  3638  003CA6  A4D8               	btfss	status,2,c
  3639  003CA8  D00C               	goto	l1328
  3640                           
  3641                           ; BSR set to: 0
  3642  003CAA  5163               	movf	(_os+3)& (0+255),w,b
  3643  003CAC  A4D8               	btfss	status,2,c
  3644  003CAE  D009               	goto	l1328
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;ui.c: 193: {;ui.c: 194: if(system_ui_inactive_count<0xFFFF)
  3648  003CB0  0101               	movlb	1	; () banked
  3649  003CB2  296D               	incf	_system_ui_inactive_count& (0+255),w,b
  3650  003CB4  E103               	bnz	u12860
  3651  003CB6  296E               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3652  003CB8  B4D8               	btfsc	status,2,c
  3653  003CBA  0012               	return	
  3654  003CBC                     u12860:
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;ui.c: 195: ++system_ui_inactive_count;
  3658  003CBC  4B6D               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3659  003CBE  2B6E               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3660                           
  3661                           ; BSR set to: 1
  3662                           ;ui.c: 196: }
  3663  003CC0  0012               	return	
  3664  003CC2                     l1328:
  3665                           
  3666                           ;ui.c: 197: else;ui.c: 198: {;ui.c: 199: system_ui_inactive_count = 0;
  3667                           
  3668                           ; BSR set to: 1
  3669  003CC2  0E00               	movlw	0
  3670  003CC4  0101               	movlb	1	; () banked
  3671  003CC6  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3672  003CC8  0E00               	movlw	0
  3673  003CCA  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;ui.c: 200: _ui_encoder();
  3677  003CCC  EC8C  F015         	call	__ui_encoder	;wreg free
  3678                           
  3679                           ;ui.c: 203: }
  3680                           
  3681                           ;ui.c: 201: };ui.c: 202: break;
  3682  003CD0  0012               	return	
  3683  003CD2                     l1314:
  3684  003CD2  0100               	movlb	0	; () banked
  3685  003CD4  5195               	movf	_userInterfaceStatus& (0+255),w,b
  3686                           
  3687                           ; Switch size 1, requested type "space"
  3688                           ; Number of cases is 6, Range of values is 0 to 5
  3689                           ; switch strategies available:
  3690                           ; Name         Instructions Cycles
  3691                           ; simple_byte           19    10 (average)
  3692                           ;	Chosen strategy is simple_byte
  3693  003CD6  0A00               	xorlw	0	; case 0
  3694  003CD8  B4D8               	btfsc	status,2,c
  3695  003CDA  D789               	goto	l1315
  3696  003CDC  0A01               	xorlw	1	; case 1
  3697  003CDE  B4D8               	btfsc	status,2,c
  3698  003CE0  D795               	goto	l1320
  3699  003CE2  0A03               	xorlw	3	; case 2
  3700  003CE4  B4D8               	btfsc	status,2,c
  3701  003CE6  D79B               	goto	l1321
  3702  003CE8  0A01               	xorlw	1	; case 3
  3703  003CEA  B4D8               	btfsc	status,2,c
  3704  003CEC  D7A2               	goto	l1322
  3705  003CEE  0A07               	xorlw	7	; case 4
  3706  003CF0  B4D8               	btfsc	status,2,c
  3707  003CF2  D7B1               	goto	l1324
  3708  003CF4  0A01               	xorlw	1	; case 5
  3709  003CF6  A4D8               	btfss	status,2,c
  3710  003CF8  0012               	return	
  3711  003CFA  D7BF               	goto	l1325
  3712  003CFC                     __end_of_ui_run:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postdec1	equ	0xFE5
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           status	equ	0xFD8
  3724                           
  3725 ;; *************** function _system_encoder_enable *****************
  3726 ;; Defined at:
  3727 ;;		line 229 in file "os.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;Total ram usage:        0 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_ui_run
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text2
  3755  007246                     __ptext2:
  3756                           	opt stack 0
  3757  007246                     _system_encoder_enable:
  3758                           	opt stack 29
  3759                           
  3760                           ;os.c: 232: INTCON3bits.INT2IF = 0;
  3761                           
  3762                           ;incstack = 0
  3763  007246  92F0               	bcf	intcon3,1,c	;volatile
  3764                           
  3765                           ;os.c: 233: INTCON3bits.INT3IF = 0;
  3766  007248  94F0               	bcf	intcon3,2,c	;volatile
  3767                           
  3768                           ;os.c: 236: os.encoder1Count = 0;
  3769  00724A  0E00               	movlw	0
  3770  00724C  0100               	movlb	0	; () banked
  3771  00724E  6F60               	movwf	_os& (0+255),b
  3772                           
  3773                           ;os.c: 237: os.encoder1Count = 0;
  3774  007250  0E00               	movlw	0
  3775  007252  6F60               	movwf	_os& (0+255),b
  3776                           
  3777                           ;os.c: 238: os.button1 = 0;
  3778  007254  0E00               	movlw	0
  3779  007256  6F61               	movwf	(_os+1)& (0+255),b
  3780                           
  3781                           ;os.c: 239: os.button2 = 0;
  3782  007258  0E00               	movlw	0
  3783  00725A  6F63               	movwf	(_os+3)& (0+255),b
  3784                           
  3785                           ;os.c: 242: os.beep_count = 0;
  3786  00725C  0E00               	movlw	0
  3787  00725E  6F6E               	movwf	(_os+14)& (0+255),b
  3788                           
  3789                           ; BSR set to: 0
  3790  007260  0012               	return		;funcret
  3791  007262                     __end_of_system_encoder_enable:
  3792                           	opt stack 0
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           intcon3	equ	0xFF0
  3798                           postinc0	equ	0xFEE
  3799                           wreg	equ	0xFE8
  3800                           postdec1	equ	0xFE5
  3801                           fsr1h	equ	0xFE2
  3802                           fsr1l	equ	0xFE1
  3803                           status	equ	0xFD8
  3804                           
  3805 ;; *************** function _display_init *****************
  3806 ;; Defined at:
  3807 ;;		line 171 in file "display.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;		None
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;Total ram usage:        0 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    4
  3828 ;; This function calls:
  3829 ;;		_i2c_display_init
  3830 ;;		_i2c_display_program_custom_character
  3831 ;; This function is called by:
  3832 ;;		_ui_run
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text3
  3837  0069FC                     __ptext3:
  3838                           	opt stack 0
  3839  0069FC                     _display_init:
  3840                           	opt stack 25
  3841                           
  3842                           ;display.c: 173: i2c_display_init();
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;incstack = 0
  3846  0069FC  EC49  F035         	call	_i2c_display_init	;wreg free
  3847                           
  3848                           ;display.c: 174: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
  3849  006A00  0EB7               	movlw	low _bit_pattern_verticalbar
  3850  006A02  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3851  006A04  0E8F               	movlw	high _bit_pattern_verticalbar
  3852  006A06  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3853  006A08  0E00               	movlw	0
  3854  006A0A  ECA4  F02F         	call	_i2c_display_program_custom_character
  3855                           
  3856                           ;display.c: 175: i2c_display_program_custom_character(0x01, bit_pattern_degree);
  3857  006A0E  0EAF               	movlw	low _bit_pattern_degree
  3858  006A10  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3859  006A12  0E8F               	movlw	high _bit_pattern_degree
  3860  006A14  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3861  006A16  0E01               	movlw	1
  3862  006A18  ECA4  F02F         	call	_i2c_display_program_custom_character
  3863                           
  3864                           ;display.c: 176: i2c_display_program_custom_character(0x02, bit_pattern_ae);
  3865  006A1C  0EA7               	movlw	low _bit_pattern_ae
  3866  006A1E  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3867  006A20  0E8F               	movlw	high _bit_pattern_ae
  3868  006A22  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3869  006A24  0E02               	movlw	2
  3870  006A26  ECA4  F02F         	call	_i2c_display_program_custom_character
  3871                           
  3872                           ;display.c: 177: i2c_display_program_custom_character(0x03, bit_pattern_ue);
  3873  006A2A  0E9F               	movlw	low _bit_pattern_ue
  3874  006A2C  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3875  006A2E  0E8F               	movlw	high _bit_pattern_ue
  3876  006A30  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3877  006A32  0E03               	movlw	3
  3878  006A34  ECA4  F02F         	call	_i2c_display_program_custom_character
  3879                           
  3880                           ;display.c: 178: i2c_display_program_custom_character(0x04, bit_pattern_oe);
  3881  006A38  0E97               	movlw	low _bit_pattern_oe
  3882  006A3A  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3883  006A3C  0E8F               	movlw	high _bit_pattern_oe
  3884  006A3E  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3885  006A40  0E04               	movlw	4
  3886  006A42  ECA4  F02F         	call	_i2c_display_program_custom_character
  3887  006A46  0012               	return		;funcret
  3888  006A48                     __end_of_display_init:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           intcon3	equ	0xFF0
  3895                           postinc0	equ	0xFEE
  3896                           wreg	equ	0xFE8
  3897                           postdec1	equ	0xFE5
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           status	equ	0xFD8
  3901                           
  3902 ;; *************** function _i2c_display_program_custom_character *****************
  3903 ;; Defined at:
  3904 ;;		line 421 in file "i2c.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  address         1    wreg     unsigned char 
  3907 ;;  bit_pattern     2   14[COMRAM] PTR unsigned char 
  3908 ;;		 -> bit_pattern_oe(8), bit_pattern_ue(8), bit_pattern_ae(8), bit_pattern_degree(8), 
  3909 ;;		 -> bit_pattern_verticalbar(8), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  address         1   31[COMRAM] unsigned char 
  3912 ;;  data_array     11   20[COMRAM] unsigned char [11]
  3913 ;;  cntr            1   32[COMRAM] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;Total ram usage:       19 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    3
  3930 ;; This function calls:
  3931 ;;		__i2c_write
  3932 ;;		__ic2_display_set_cgram_address
  3933 ;; This function is called by:
  3934 ;;		_display_init
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text4
  3939  005F48                     __ptext4:
  3940                           	opt stack 0
  3941  005F48                     _i2c_display_program_custom_character:
  3942                           	opt stack 25
  3943                           
  3944                           ;incstack = 0
  3945                           ;i2c_display_program_custom_character@address stored from wreg
  3946  005F48  6E20               	movwf	i2c_display_program_custom_character@address,c
  3947                           
  3948                           ;i2c.c: 423: uint8_t cntr;;i2c.c: 424: uint8_t data_array[11];;i2c.c: 427: _ic2_display_
      +                          set_cgram_address(address<<3);
  3949  005F4A  3820               	swapf	i2c_display_program_custom_character@address,w,c
  3950  005F4C  42E8               	rrncf	wreg,f,c
  3951  005F4E  0BF8               	andlw	248
  3952  005F50  EC3E  F038         	call	__ic2_display_set_cgram_address
  3953                           
  3954                           ;i2c.c: 430: data_array[0] = 0b01000000;
  3955  005F54  0E40               	movlw	64
  3956  005F56  6E15               	movwf	i2c_display_program_custom_character@data_array,c
  3957                           
  3958                           ;i2c.c: 431: for(cntr=0; cntr<8; ++cntr)
  3959  005F58  0E00               	movlw	0
  3960  005F5A  6E21               	movwf	i2c_display_program_custom_character@cntr,c
  3961  005F5C                     l12969:
  3962  005F5C  0E07               	movlw	7
  3963  005F5E  6421               	cpfsgt	i2c_display_program_custom_character@cntr,c
  3964  005F60  D001               	goto	l1240
  3965  005F62  D022               	goto	u10510
  3966  005F64                     l1240:
  3967                           
  3968                           ;i2c.c: 432: {;i2c.c: 433: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
  3969  005F64  5021               	movf	i2c_display_program_custom_character@cntr,w,c
  3970  005F66  6E11               	movwf	??_i2c_display_program_custom_character& (0+255),c
  3971  005F68  6A12               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),c
  3972  005F6A  0E01               	movlw	1
  3973  005F6C  2611               	addwf	??_i2c_display_program_custom_character,f,c
  3974  005F6E  0E00               	movlw	0
  3975  005F70  2212               	addwfc	??_i2c_display_program_custom_character+1,f,c
  3976  005F72  0E15               	movlw	low i2c_display_program_custom_character@data_array
  3977  005F74  2411               	addwf	??_i2c_display_program_custom_character,w,c
  3978  005F76  6ED9               	movwf	fsr2l,c
  3979  005F78  0E00               	movlw	high i2c_display_program_custom_character@data_array
  3980  005F7A  2012               	addwfc	??_i2c_display_program_custom_character+1,w,c
  3981  005F7C  6EDA               	movwf	fsr2h,c
  3982  005F7E  5021               	movf	i2c_display_program_custom_character@cntr,w,c
  3983  005F80  0D01               	mullw	1
  3984  005F82  C00F  F013         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
  3985  005F86  C010  F014         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
  3986  005F8A  50F3               	movf	prodl,w,c
  3987  005F8C  2613               	addwf	??_i2c_display_program_custom_character+2,f,c
  3988  005F8E  50F4               	movf	prodh,w,c
  3989  005F90  2214               	addwfc	??_i2c_display_program_custom_character+3,f,c
  3990  005F92  C013  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
  3991  005F96  C014  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
  3992  005F9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3993  005F9A  6AF8               	clrf	tblptru,c
  3994  005F9C                     	endif
  3995  005F9C                     	if	0	;tblptru may be non-zero
  3996  005F9C                     	endif
  3997  005F9C  0008               	tblrd		*
  3998  005F9E  50F5               	movf	tablat,w,c
  3999  005FA0  0B1F               	andlw	31
  4000  005FA2  6EDF               	movwf	indf2,c
  4001  005FA4  2A21               	incf	i2c_display_program_custom_character@cntr,f,c
  4002  005FA6  D7DA               	goto	l12969
  4003  005FA8                     u10510:
  4004                           
  4005                           ;i2c.c: 434: };i2c.c: 435: _i2c_write(0b01111000, data_array, 9);
  4006  005FA8  0E15               	movlw	low i2c_display_program_custom_character@data_array
  4007  005FAA  6E06               	movwf	__i2c_write@data,c
  4008  005FAC  0E00               	movlw	high i2c_display_program_custom_character@data_array
  4009  005FAE  6E07               	movwf	__i2c_write@data+1,c
  4010  005FB0  0E09               	movlw	9
  4011  005FB2  6E08               	movwf	__i2c_write@length,c
  4012  005FB4  0E78               	movlw	120
  4013  005FB6  EC91  F035         	call	__i2c_write
  4014  005FBA  0012               	return		;funcret
  4015  005FBC                     __end_of_i2c_display_program_custom_character:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon3	equ	0xFF0
  4024                           postinc0	equ	0xFEE
  4025                           wreg	equ	0xFE8
  4026                           postdec1	equ	0xFE5
  4027                           fsr1h	equ	0xFE2
  4028                           fsr1l	equ	0xFE1
  4029                           indf2	equ	0xFDF
  4030                           fsr2h	equ	0xFDA
  4031                           fsr2l	equ	0xFD9
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function __ic2_display_set_cgram_address *****************
  4035 ;; Defined at:
  4036 ;;		line 340 in file "i2c.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  address         1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  address         1   13[COMRAM] unsigned char 
  4041 ;;  data_array      3   10[COMRAM] unsigned char [3]
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;Total ram usage:        4 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    2
  4058 ;; This function calls:
  4059 ;;		__i2c_write
  4060 ;; This function is called by:
  4061 ;;		_i2c_display_program_custom_character
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text5
  4066  00707C                     __ptext5:
  4067                           	opt stack 0
  4068  00707C                     __ic2_display_set_cgram_address:
  4069                           	opt stack 25
  4070                           
  4071                           ;incstack = 0
  4072                           ;__ic2_display_set_cgram_address@address stored from wreg
  4073  00707C  6E0E               	movwf	__ic2_display_set_cgram_address@address,c
  4074                           
  4075                           ;i2c.c: 342: uint8_t data_array[3];;i2c.c: 347: address &= 0b001111111;
  4076  00707E  9E0E               	bcf	__ic2_display_set_cgram_address@address,7,c
  4077                           
  4078                           ;i2c.c: 348: data_array[0] = 0b00000000;
  4079  007080  0E00               	movlw	0
  4080  007082  6E0B               	movwf	__ic2_display_set_cgram_address@data_array,c
  4081                           
  4082                           ;i2c.c: 349: data_array[1] = 0b00111000;
  4083  007084  0E38               	movlw	56
  4084  007086  6E0C               	movwf	__ic2_display_set_cgram_address@data_array+1,c
  4085                           
  4086                           ;i2c.c: 350: data_array[2] = 0b01000000 | address;
  4087  007088  500E               	movf	__ic2_display_set_cgram_address@address,w,c
  4088  00708A  0940               	iorlw	64
  4089  00708C  6E0D               	movwf	__ic2_display_set_cgram_address@data_array+2,c
  4090                           
  4091                           ;i2c.c: 353: _i2c_write(0b01111000, data_array, 3);
  4092  00708E  0E0B               	movlw	low __ic2_display_set_cgram_address@data_array
  4093  007090  6E06               	movwf	__i2c_write@data,c
  4094  007092  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
  4095  007094  6E07               	movwf	__i2c_write@data+1,c
  4096  007096  0E03               	movlw	3
  4097  007098  6E08               	movwf	__i2c_write@length,c
  4098  00709A  0E78               	movlw	120
  4099  00709C  EC91  F035         	call	__i2c_write
  4100  0070A0  0012               	return		;funcret
  4101  0070A2                     __end_of__ic2_display_set_cgram_address:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           intcon3	equ	0xFF0
  4110                           postinc0	equ	0xFEE
  4111                           wreg	equ	0xFE8
  4112                           postdec1	equ	0xFE5
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           indf2	equ	0xFDF
  4116                           fsr2h	equ	0xFDA
  4117                           fsr2l	equ	0xFD9
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _i2c_display_init *****************
  4121 ;; Defined at:
  4122 ;;		line 298 in file "i2c.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  init_sequenc    9   11[COMRAM] unsigned char [9]
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4139 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4140 ;;Total ram usage:       10 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    2
  4143 ;; This function calls:
  4144 ;;		__i2c_write
  4145 ;; This function is called by:
  4146 ;;		_display_init
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text6
  4151  006A92                     __ptext6:
  4152                           	opt stack 0
  4153  006A92                     _i2c_display_init:
  4154                           	opt stack 26
  4155                           
  4156                           ;i2c.c: 300: uint8_t init_sequence[9] = {;i2c.c: 301: 0x3A,;i2c.c: 303: 0b00011110,;i2c.
      +                          c: 304: 0x39,;i2c.c: 306: 0b00001100,;i2c.c: 307: 0x74,;i2c.c: 308: 0b1011100,;i2c.c: 30
      +                          9: 0x6d,;i2c.c: 310: 0x0c,;i2c.c: 311: 0x01;i2c.c: 312: };
  4157                           
  4158                           ;incstack = 0
  4159  006A92  EE22  F0B2         	lfsr	2,i2c_display_init@F6829
  4160  006A96  EE10  F00C         	lfsr	1,i2c_display_init@init_sequence
  4161  006A9A  0E08               	movlw	8
  4162  006A9C                     u10491:
  4163  006A9C  CFDB FFE3          	movff	plusw2,plusw1
  4164  006AA0  06E8               	decf	wreg,f,c
  4165  006AA2  E2FC               	bc	u10491
  4166                           
  4167                           ;i2c.c: 315: LATAbits.LA3 = 0;
  4168  006AA4  9689               	bcf	3977,3,c	;volatile
  4169                           
  4170                           ;i2c.c: 316: _delay((unsigned long)((10)*(8000000/4000.0)));
  4171  006AA6  0E1A               	movlw	26
  4172  006AA8  6E0B               	movwf	??_i2c_display_init& (0+255),c
  4173  006AAA  0EF8               	movlw	248
  4174  006AAC                     u13847:
  4175  006AAC  2EE8               	decfsz	wreg,f,c
  4176  006AAE  D7FE               	bra	u13847
  4177  006AB0  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  4178  006AB2  D7FC               	bra	u13847
  4179  006AB4  D000               	nop2	
  4180                           
  4181                           ;i2c.c: 317: LATAbits.LA3 = 1;
  4182  006AB6  8689               	bsf	3977,3,c	;volatile
  4183                           
  4184                           ;i2c.c: 318: _delay((unsigned long)((50)*(8000000/4000.0)));
  4185  006AB8  0E82               	movlw	130
  4186  006ABA  6E0B               	movwf	??_i2c_display_init& (0+255),c
  4187  006ABC  0EDE               	movlw	222
  4188  006ABE                     u13857:
  4189  006ABE  2EE8               	decfsz	wreg,f,c
  4190  006AC0  D7FE               	bra	u13857
  4191  006AC2  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  4192  006AC4  D7FC               	bra	u13857
  4193                           
  4194                           ;i2c.c: 324: _i2c_write(0b01111000, &init_sequence[0], 9);
  4195  006AC6  0E0C               	movlw	low i2c_display_init@init_sequence
  4196  006AC8  6E06               	movwf	__i2c_write@data,c
  4197  006ACA  0E00               	movlw	high i2c_display_init@init_sequence
  4198  006ACC  6E07               	movwf	__i2c_write@data+1,c
  4199  006ACE  0E09               	movlw	9
  4200  006AD0  6E08               	movwf	__i2c_write@length,c
  4201  006AD2  0E78               	movlw	120
  4202  006AD4  EC91  F035         	call	__i2c_write
  4203  006AD8  0012               	return		;funcret
  4204  006ADA                     __end_of_i2c_display_init:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon3	equ	0xFF0
  4213                           postinc0	equ	0xFEE
  4214                           wreg	equ	0xFE8
  4215                           postdec1	equ	0xFE5
  4216                           plusw1	equ	0xFE3
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           indf2	equ	0xFDF
  4220                           plusw2	equ	0xFDB
  4221                           fsr2h	equ	0xFDA
  4222                           fsr2l	equ	0xFD9
  4223                           status	equ	0xFD8
  4224                           
  4225 ;; *************** function __ui_encoder *****************
  4226 ;; Defined at:
  4227 ;;		line 25 in file "ui.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;		None
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;Total ram usage:        0 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    7
  4248 ;; This function calls:
  4249 ;;		_i2c_eeprom_writeByte
  4250 ;;		_reboot
  4251 ;;		_system_delay_ms
  4252 ;; This function is called by:
  4253 ;;		_ui_run
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text7
  4258  002B18                     __ptext7:
  4259                           	opt stack 0
  4260  002B18                     __ui_encoder:
  4261                           	opt stack 22
  4262                           
  4263                           ;ui.c: 27: switch(os.display_mode)
  4264                           
  4265                           ;incstack = 0
  4266  002B18  D09E               	goto	l1267
  4267  002B1A                     
  4268                           ;ui.c: 30: if(os.button1>0 || os.button2>0)
  4269  002B1A  0100               	movlb	0	; () banked
  4270  002B1C  5161               	movf	(_os+1)& (0+255),w,b
  4271  002B1E  0A80               	xorlw	128
  4272  002B20  0F7F               	addlw	-129
  4273  002B22  B0D8               	btfsc	status,0,c
  4274  002B24  D005               	goto	u11570
  4275                           
  4276                           ; BSR set to: 0
  4277  002B26  5163               	movf	(_os+3)& (0+255),w,b
  4278  002B28  0A80               	xorlw	128
  4279  002B2A  0F7F               	addlw	-129
  4280  002B2C  A0D8               	btfss	status,0,c
  4281  002B2E  0012               	return	
  4282  002B30                     u11570:
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;ui.c: 31: {;ui.c: 32: os.button1 = 0;
  4286                           
  4287                           ; BSR set to: 0
  4288  002B30  0E00               	movlw	0
  4289  002B32  6F61               	movwf	(_os+1)& (0+255),b
  4290                           
  4291                           ;ui.c: 33: os.button2 = 0;
  4292  002B34  0E00               	movlw	0
  4293  002B36  6F63               	movwf	(_os+3)& (0+255),b
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;ui.c: 34: };ui.c: 35: break;
  4297  002B38  0012               	return	
  4298  002B3A                     
  4299                           ; BSR set to: 0
  4300                           ;ui.c: 38: if(os.button1>0 || os.button2>0)
  4301                           
  4302                           ; BSR set to: 0
  4303  002B3A  5161               	movf	(_os+1)& (0+255),w,b
  4304  002B3C  0A80               	xorlw	128
  4305  002B3E  0F7F               	addlw	-129
  4306  002B40  B0D8               	btfsc	status,0,c
  4307  002B42  D005               	goto	u11590
  4308                           
  4309                           ; BSR set to: 0
  4310  002B44  5163               	movf	(_os+3)& (0+255),w,b
  4311  002B46  0A80               	xorlw	128
  4312  002B48  0F7F               	addlw	-129
  4313  002B4A  A0D8               	btfss	status,0,c
  4314  002B4C  0012               	return	
  4315  002B4E                     u11590:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;ui.c: 39: {;ui.c: 40: os.button1 = 0;
  4319                           
  4320                           ; BSR set to: 0
  4321  002B4E  0E00               	movlw	0
  4322  002B50  6F61               	movwf	(_os+1)& (0+255),b
  4323                           
  4324                           ;ui.c: 41: os.button2 = 0;;
  4325  002B52  0E00               	movlw	0
  4326  002B54  6F63               	movwf	(_os+3)& (0+255),b
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;ui.c: 42: };ui.c: 43: break;
  4330  002B56  0012               	return	
  4331  002B58                     
  4332                           ; BSR set to: 0
  4333                           ;ui.c: 46: if(os.button1>0 || os.button2>0)
  4334                           
  4335                           ; BSR set to: 0
  4336  002B58  5161               	movf	(_os+1)& (0+255),w,b
  4337  002B5A  0A80               	xorlw	128
  4338  002B5C  0F7F               	addlw	-129
  4339  002B5E  B0D8               	btfsc	status,0,c
  4340  002B60  D005               	goto	u11610
  4341                           
  4342                           ; BSR set to: 0
  4343  002B62  5163               	movf	(_os+3)& (0+255),w,b
  4344  002B64  0A80               	xorlw	128
  4345  002B66  0F7F               	addlw	-129
  4346  002B68  A0D8               	btfss	status,0,c
  4347  002B6A  0012               	return	
  4348  002B6C                     u11610:
  4349                           
  4350                           ; BSR set to: 0
  4351                           ;ui.c: 47: {;ui.c: 48: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4352                           
  4353                           ; BSR set to: 0
  4354  002B6C  0E30               	movlw	48
  4355  002B6E  6F66               	movwf	(_os+6)& (0+255),b
  4356                           
  4357                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4358  002B70  0E30               	movlw	48
  4359  002B72  6F67               	movwf	(_os+7)& (0+255),b
  4360                           
  4361                           ;ui.c: 50: os.button1 = 0;
  4362  002B74  0E00               	movlw	0
  4363  002B76  6F61               	movwf	(_os+1)& (0+255),b
  4364                           
  4365                           ;ui.c: 51: os.button2 = 0;
  4366  002B78  0E00               	movlw	0
  4367  002B7A  6F63               	movwf	(_os+3)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;ui.c: 52: };ui.c: 53: break;
  4371  002B7C  0012               	return	
  4372  002B7E                     
  4373                           ; BSR set to: 0
  4374                           ;ui.c: 56: if(os.button1>0 || os.button2>0)
  4375                           
  4376                           ; BSR set to: 0
  4377  002B7E  5161               	movf	(_os+1)& (0+255),w,b
  4378  002B80  0A80               	xorlw	128
  4379  002B82  0F7F               	addlw	-129
  4380  002B84  B0D8               	btfsc	status,0,c
  4381  002B86  D005               	goto	u11630
  4382                           
  4383                           ; BSR set to: 0
  4384  002B88  5163               	movf	(_os+3)& (0+255),w,b
  4385  002B8A  0A80               	xorlw	128
  4386  002B8C  0F7F               	addlw	-129
  4387  002B8E  A0D8               	btfss	status,0,c
  4388  002B90  0012               	return	
  4389  002B92                     u11630:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;ui.c: 57: {;ui.c: 58: os.button1 = 0;
  4393                           
  4394                           ; BSR set to: 0
  4395  002B92  0E00               	movlw	0
  4396  002B94  6F61               	movwf	(_os+1)& (0+255),b
  4397                           
  4398                           ;ui.c: 59: os.button2 = 0;
  4399  002B96  0E00               	movlw	0
  4400  002B98  6F63               	movwf	(_os+3)& (0+255),b
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;ui.c: 60: };ui.c: 61: break;
  4404  002B9A  0012               	return	
  4405  002B9C                     
  4406                           ; BSR set to: 0
  4407                           ;ui.c: 64: if(os.button1>0 || os.button2>0)
  4408                           
  4409                           ; BSR set to: 0
  4410  002B9C  5161               	movf	(_os+1)& (0+255),w,b
  4411  002B9E  0A80               	xorlw	128
  4412  002BA0  0F7F               	addlw	-129
  4413  002BA2  B0D8               	btfsc	status,0,c
  4414  002BA4  D005               	goto	u11650
  4415                           
  4416                           ; BSR set to: 0
  4417  002BA6  5163               	movf	(_os+3)& (0+255),w,b
  4418  002BA8  0A80               	xorlw	128
  4419  002BAA  0F7F               	addlw	-129
  4420  002BAC  A0D8               	btfss	status,0,c
  4421  002BAE  0012               	return	
  4422  002BB0                     u11650:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;ui.c: 65: {;ui.c: 66: os.button1 = 0;
  4426                           
  4427                           ; BSR set to: 0
  4428  002BB0  0E00               	movlw	0
  4429  002BB2  6F61               	movwf	(_os+1)& (0+255),b
  4430                           
  4431                           ;ui.c: 67: os.button2 = 0;
  4432  002BB4  0E00               	movlw	0
  4433  002BB6  6F63               	movwf	(_os+3)& (0+255),b
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;ui.c: 68: };ui.c: 69: break;
  4437  002BB8  0012               	return	
  4438  002BBA                     
  4439                           ; BSR set to: 0
  4440                           ;ui.c: 72: if(os.button1>0 || os.button2>0)
  4441                           
  4442                           ; BSR set to: 0
  4443  002BBA  5161               	movf	(_os+1)& (0+255),w,b
  4444  002BBC  0A80               	xorlw	128
  4445  002BBE  0F7F               	addlw	-129
  4446  002BC0  B0D8               	btfsc	status,0,c
  4447  002BC2  D005               	goto	u11670
  4448                           
  4449                           ; BSR set to: 0
  4450  002BC4  5163               	movf	(_os+3)& (0+255),w,b
  4451  002BC6  0A80               	xorlw	128
  4452  002BC8  0F7F               	addlw	-129
  4453  002BCA  A0D8               	btfss	status,0,c
  4454  002BCC  0012               	return	
  4455  002BCE                     u11670:
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;ui.c: 73: {;ui.c: 74: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4459                           
  4460                           ; BSR set to: 0
  4461  002BCE  0E60               	movlw	96
  4462  002BD0  6F66               	movwf	(_os+6)& (0+255),b
  4463                           
  4464                           ;ui.c: 75: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4465  002BD2  0E60               	movlw	96
  4466  002BD4  6F67               	movwf	(_os+7)& (0+255),b
  4467                           
  4468                           ;ui.c: 76: os.button1 = 0;
  4469  002BD6  0E00               	movlw	0
  4470  002BD8  6F61               	movwf	(_os+1)& (0+255),b
  4471                           
  4472                           ;ui.c: 77: os.button2 = 0;
  4473  002BDA  0E00               	movlw	0
  4474  002BDC  6F63               	movwf	(_os+3)& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;ui.c: 78: };ui.c: 79: break;
  4478  002BDE  0012               	return	
  4479  002BE0                     
  4480                           ; BSR set to: 0
  4481                           ;ui.c: 82: if(os.button1>0 || os.button2>0)
  4482                           
  4483                           ; BSR set to: 0
  4484  002BE0  5161               	movf	(_os+1)& (0+255),w,b
  4485  002BE2  0A80               	xorlw	128
  4486  002BE4  0F7F               	addlw	-129
  4487  002BE6  B0D8               	btfsc	status,0,c
  4488  002BE8  D005               	goto	u11690
  4489                           
  4490                           ; BSR set to: 0
  4491  002BEA  5163               	movf	(_os+3)& (0+255),w,b
  4492  002BEC  0A80               	xorlw	128
  4493  002BEE  0F7F               	addlw	-129
  4494  002BF0  A0D8               	btfss	status,0,c
  4495  002BF2  0012               	return	
  4496  002BF4                     u11690:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;ui.c: 83: {;ui.c: 84: os.button1 = 0;
  4500                           
  4501                           ; BSR set to: 0
  4502  002BF4  0E00               	movlw	0
  4503  002BF6  6F61               	movwf	(_os+1)& (0+255),b
  4504                           
  4505                           ;ui.c: 85: os.button2 = 0;
  4506  002BF8  0E00               	movlw	0
  4507  002BFA  6F63               	movwf	(_os+3)& (0+255),b
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;ui.c: 86: };ui.c: 87: break;
  4511  002BFC  0012               	return	
  4512  002BFE                     
  4513                           ; BSR set to: 0
  4514                           ;ui.c: 90: if(os.button1>0 || os.button2>0)
  4515                           
  4516                           ; BSR set to: 0
  4517  002BFE  5161               	movf	(_os+1)& (0+255),w,b
  4518  002C00  0A80               	xorlw	128
  4519  002C02  0F7F               	addlw	-129
  4520  002C04  B0D8               	btfsc	status,0,c
  4521  002C06  D005               	goto	u11710
  4522                           
  4523                           ; BSR set to: 0
  4524  002C08  5163               	movf	(_os+3)& (0+255),w,b
  4525  002C0A  0A80               	xorlw	128
  4526  002C0C  0F7F               	addlw	-129
  4527  002C0E  A0D8               	btfss	status,0,c
  4528  002C10  0012               	return	
  4529  002C12                     u11710:
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;ui.c: 91: {;ui.c: 92: i2c_eeprom_writeByte(0x100, 0x78);
  4533                           
  4534                           ; BSR set to: 0
  4535  002C12  0E01               	movlw	1
  4536  002C14  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4537  002C16  0E00               	movlw	0
  4538  002C18  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4539  002C1A  0E78               	movlw	120
  4540  002C1C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4541  002C1E  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
  4542                           
  4543                           ;ui.c: 93: system_delay_ms(10);
  4544  002C22  0E0A               	movlw	10
  4545  002C24  ECB0  F038         	call	_system_delay_ms
  4546                           
  4547                           ;ui.c: 94: reboot();
  4548  002C28  EC75  F039         	call	_reboot	;wreg free
  4549                           
  4550                           ;ui.c: 95: };ui.c: 96: break;
  4551  002C2C  0012               	return	
  4552  002C2E                     
  4553                           ;ui.c: 99: if(os.button1>0 || os.button2>0)
  4554  002C2E  0100               	movlb	0	; () banked
  4555  002C30  5161               	movf	(_os+1)& (0+255),w,b
  4556  002C32  0A80               	xorlw	128
  4557  002C34  0F7F               	addlw	-129
  4558  002C36  B0D8               	btfsc	status,0,c
  4559  002C38  D005               	goto	u11730
  4560                           
  4561                           ; BSR set to: 0
  4562  002C3A  5163               	movf	(_os+3)& (0+255),w,b
  4563  002C3C  0A80               	xorlw	128
  4564  002C3E  0F7F               	addlw	-129
  4565  002C40  A0D8               	btfss	status,0,c
  4566  002C42  0012               	return	
  4567  002C44                     u11730:
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;ui.c: 100: {;ui.c: 101: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4571                           
  4572                           ; BSR set to: 0
  4573  002C44  0E10               	movlw	16
  4574  002C46  6F66               	movwf	(_os+6)& (0+255),b
  4575                           
  4576                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4577  002C48  0E10               	movlw	16
  4578  002C4A  6F67               	movwf	(_os+7)& (0+255),b
  4579                           
  4580                           ;ui.c: 103: os.button1 = 0;
  4581  002C4C  0E00               	movlw	0
  4582  002C4E  6F61               	movwf	(_os+1)& (0+255),b
  4583                           
  4584                           ;ui.c: 104: os.button2 = 0;
  4585  002C50  0E00               	movlw	0
  4586  002C52  6F63               	movwf	(_os+3)& (0+255),b
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;ui.c: 107: }
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;ui.c: 105: };ui.c: 106: break;
  4593  002C54  0012               	return	
  4594  002C56                     l1267:
  4595                           
  4596                           ; BSR set to: 0
  4597  002C56  0100               	movlb	0	; () banked
  4598  002C58  5167               	movf	(_os+7)& (0+255),w,b
  4599                           
  4600                           ; Switch size 1, requested type "space"
  4601                           ; Number of cases is 9, Range of values is 0 to 144
  4602                           ; switch strategies available:
  4603                           ; Name         Instructions Cycles
  4604                           ; simple_byte           28    15 (average)
  4605                           ;	Chosen strategy is simple_byte
  4606  002C5A  0A00               	xorlw	0	; case 0
  4607  002C5C  B4D8               	btfsc	status,2,c
  4608  002C5E  D75D               	goto	l1268
  4609  002C60  0A10               	xorlw	16	; case 16
  4610  002C62  B4D8               	btfsc	status,2,c
  4611  002C64  D76A               	goto	l1273
  4612  002C66  0A30               	xorlw	48	; case 32
  4613  002C68  B4D8               	btfsc	status,2,c
  4614  002C6A  D776               	goto	l1277
  4615  002C6C  0A10               	xorlw	16	; case 48
  4616  002C6E  B4D8               	btfsc	status,2,c
  4617  002C70  D786               	goto	l1281
  4618  002C72  0A70               	xorlw	112	; case 64
  4619  002C74  B4D8               	btfsc	status,2,c
  4620  002C76  D7A1               	goto	l1289
  4621  002C78  0A10               	xorlw	16	; case 80
  4622  002C7A  B4D8               	btfsc	status,2,c
  4623  002C7C  D78F               	goto	l1285
  4624  002C7E  0A30               	xorlw	48	; case 96
  4625  002C80  B4D8               	btfsc	status,2,c
  4626  002C82  D7AE               	goto	l1293
  4627  002C84  0A10               	xorlw	16	; case 112
  4628  002C86  B4D8               	btfsc	status,2,c
  4629  002C88  D7BA               	goto	l1297
  4630  002C8A  0AE0               	xorlw	224	; case 144
  4631  002C8C  A4D8               	btfss	status,2,c
  4632  002C8E  0012               	return	
  4633  002C90  D7CE               	goto	l1301
  4634  002C92                     __end_of__ui_encoder:
  4635                           	opt stack 0
  4636                           tblptru	equ	0xFF8
  4637                           tblptrh	equ	0xFF7
  4638                           tblptrl	equ	0xFF6
  4639                           tablat	equ	0xFF5
  4640                           prodh	equ	0xFF4
  4641                           prodl	equ	0xFF3
  4642                           intcon3	equ	0xFF0
  4643                           postinc0	equ	0xFEE
  4644                           wreg	equ	0xFE8
  4645                           postdec1	equ	0xFE5
  4646                           plusw1	equ	0xFE3
  4647                           fsr1h	equ	0xFE2
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           plusw2	equ	0xFDB
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _timer_pseudo_isr *****************
  4656 ;; Defined at:
  4657 ;;		line 33 in file "os.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text8
  4685  004314                     __ptext8:
  4686                           	opt stack 0
  4687  004314                     _timer_pseudo_isr:
  4688                           	opt stack 30
  4689                           
  4690                           ;os.c: 36: if(INTCONbits.T0IF==0)
  4691                           
  4692                           ;incstack = 0
  4693  004314  A4F2               	btfss	intcon,2,c	;volatile
  4694  004316  0012               	return	
  4695                           
  4696                           ;os.c: 39: };os.c: 43: TMR0H = 0xD1;
  4697                           
  4698                           ;os.c: 37: {;os.c: 38: return;
  4699  004318  0ED1               	movlw	209
  4700  00431A  6ED7               	movwf	4055,c	;volatile
  4701                           
  4702                           ;os.c: 44: TMR0L = 0x20;
  4703  00431C  0E20               	movlw	32
  4704  00431E  6ED6               	movwf	4054,c	;volatile
  4705                           
  4706                           ;os.c: 45: ++os.timeSlot;
  4707  004320  0100               	movlb	0	; () banked
  4708  004322  2B64               	incf	(_os+4)& (0+255),f,b
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;os.c: 46: os.done = 0;
  4712  004324  0E00               	movlw	0
  4713  004326  6F65               	movwf	(_os+5)& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;os.c: 47: INTCONbits.T0IF = 0;
  4717  004328  94F2               	bcf	intcon,2,c	;volatile
  4718                           
  4719                           ; BSR set to: 0
  4720                           ;os.c: 50: if(enc1 != (PORTE&0b00000111))
  4721  00432A  5084               	movf	3972,w,c	;volatile
  4722  00432C  0B07               	andlw	7
  4723  00432E  1997               	xorwf	_enc1& (0+255),w,b
  4724  004330  B4D8               	btfsc	status,2,c
  4725  004332  D02D               	goto	l1041
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;os.c: 51: {;os.c: 53: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b00000001)))
  4729  004334  B084               	btfsc	3972,0,c	;volatile
  4730                           
  4731                           ; BSR set to: 0
  4732  004336  A484               	btfss	3972,2,c	;volatile
  4733  004338  D00A               	goto	l1044
  4734                           
  4735                           ; BSR set to: 0
  4736  00433A  B197               	btfsc	_enc1& (0+255),0,b
  4737  00433C  D008               	goto	l1044
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;os.c: 54: {;os.c: 55: if(os.encoder1Count<127)
  4741  00433E  0E7F               	movlw	127
  4742  004340  1960               	xorwf	_os& (0+255),w,b
  4743  004342  B4D8               	btfsc	status,2,c
  4744  004344  D004               	goto	l1044
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;os.c: 58: if(5)
  4748  004346  2B60               	incf	_os& (0+255),f,b
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;os.c: 59: {;os.c: 60: LATCbits.LC7 = 1;
  4752  004348  8E8B               	bsf	3979,7,c	;volatile
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;os.c: 61: os.beep_count = 5;
  4756  00434A  0E05               	movlw	5
  4757  00434C  6F6E               	movwf	(_os+14)& (0+255),b
  4758  00434E                     l1044:
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;os.c: 62: };os.c: 63: };os.c: 64: };os.c: 66: if(PORTEbits.RE2 && PORTEbits.RE0 && (!(e
      +                          nc1&0b00000100)))
  4762                           
  4763                           ; BSR set to: 0
  4764                           
  4765                           ; BSR set to: 0
  4766                           
  4767                           ; BSR set to: 0
  4768  00434E  B484               	btfsc	3972,2,c	;volatile
  4769                           
  4770                           ; BSR set to: 0
  4771  004350  A084               	btfss	3972,0,c	;volatile
  4772  004352  D00B               	goto	l1047
  4773                           
  4774                           ; BSR set to: 0
  4775  004354  B597               	btfsc	_enc1& (0+255),2,b
  4776  004356  D009               	goto	l1047
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;os.c: 67: {;os.c: 68: if(os.encoder1Count>-128)
  4780  004358  5160               	movf	_os& (0+255),w,b
  4781  00435A  0A80               	xorlw	128
  4782  00435C  0FFF               	addlw	255
  4783  00435E  A0D8               	btfss	status,0,c
  4784  004360  D004               	goto	l1047
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;os.c: 71: if(5)
  4788  004362  0760               	decf	_os& (0+255),f,b
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;os.c: 72: {;os.c: 73: LATCbits.LC7 = 1;
  4792  004364  8E8B               	bsf	3979,7,c	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;os.c: 74: os.beep_count = 5;
  4796  004366  0E05               	movlw	5
  4797  004368  6F6E               	movwf	(_os+14)& (0+255),b
  4798  00436A                     l1047:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;os.c: 75: };os.c: 76: };os.c: 77: };os.c: 79: if(PORTEbits.RE1 && (!(enc1&0b00000010)))
  4802                           
  4803                           ; BSR set to: 0
  4804                           
  4805                           ; BSR set to: 0
  4806                           
  4807                           ; BSR set to: 0
  4808  00436A  B284               	btfsc	3972,1,c	;volatile
  4809                           
  4810                           ; BSR set to: 0
  4811  00436C  B397               	btfsc	_enc1& (0+255),1,b
  4812  00436E  D005               	goto	l1049
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;os.c: 82: if(5)
  4816  004370  0E01               	movlw	1
  4817  004372  6F61               	movwf	(_os+1)& (0+255),b
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;os.c: 83: {;os.c: 84: LATCbits.LC7 = 1;
  4821  004374  8E8B               	bsf	3979,7,c	;volatile
  4822                           
  4823                           ;os.c: 85: os.beep_count = 5;
  4824  004376  0E05               	movlw	5
  4825  004378  6F6E               	movwf	(_os+14)& (0+255),b
  4826  00437A                     l1049:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;os.c: 86: };os.c: 87: };os.c: 89: if((!PORTEbits.RE1) && (enc1&0b00000010))
  4830                           
  4831                           ; BSR set to: 0
  4832                           
  4833                           ; BSR set to: 0
  4834  00437A  A284               	btfss	3972,1,c	;volatile
  4835                           
  4836                           ; BSR set to: 0
  4837  00437C  A397               	btfss	_enc1& (0+255),1,b
  4838  00437E  D004               	goto	l1051
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;os.c: 92: if(5)
  4842  004380  6961               	setf	(_os+1)& (0+255),b
  4843                           
  4844                           ;os.c: 93: {;os.c: 94: LATCbits.LC7 = 1;
  4845  004382  8E8B               	bsf	3979,7,c	;volatile
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;os.c: 95: os.beep_count = 5;
  4849  004384  0E05               	movlw	5
  4850  004386  6F6E               	movwf	(_os+14)& (0+255),b
  4851  004388                     l1051:
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;os.c: 96: };os.c: 97: };os.c: 99: enc1 = PORTE & 0b00000111;
  4855                           
  4856                           ; BSR set to: 0
  4857                           
  4858                           ; BSR set to: 0
  4859  004388  5084               	movf	3972,w,c	;volatile
  4860  00438A  0B07               	andlw	7
  4861  00438C  6F97               	movwf	_enc1& (0+255),b
  4862  00438E                     l1041:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;os.c: 100: };os.c: 102: if(enc2 != (PORTA&0b00000111))
  4866                           
  4867                           ; BSR set to: 0
  4868  00438E  5080               	movf	3968,w,c	;volatile
  4869  004390  0B07               	andlw	7
  4870  004392  1996               	xorwf	_enc2& (0+255),w,b
  4871  004394  B4D8               	btfsc	status,2,c
  4872  004396  D02D               	goto	l1052
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;os.c: 103: {;os.c: 105: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b00000100)))
  4876  004398  B480               	btfsc	3968,2,c	;volatile
  4877                           
  4878                           ; BSR set to: 0
  4879  00439A  A080               	btfss	3968,0,c	;volatile
  4880  00439C  D00A               	goto	l1055
  4881                           
  4882                           ; BSR set to: 0
  4883  00439E  B596               	btfsc	_enc2& (0+255),2,b
  4884  0043A0  D008               	goto	l1055
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;os.c: 106: {;os.c: 107: if(os.encoder2Count<127)
  4888  0043A2  0E7F               	movlw	127
  4889  0043A4  1962               	xorwf	(_os+2)& (0+255),w,b
  4890  0043A6  B4D8               	btfsc	status,2,c
  4891  0043A8  D004               	goto	l1055
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;os.c: 110: if(5)
  4895  0043AA  2B62               	incf	(_os+2)& (0+255),f,b
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;os.c: 111: {;os.c: 112: LATCbits.LC7 = 1;
  4899  0043AC  8E8B               	bsf	3979,7,c	;volatile
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;os.c: 113: os.beep_count = 5;
  4903  0043AE  0E05               	movlw	5
  4904  0043B0  6F6E               	movwf	(_os+14)& (0+255),b
  4905  0043B2                     l1055:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;os.c: 114: };os.c: 115: };os.c: 116: };os.c: 118: if(PORTAbits.RA0 && PORTAbits.RA2 && 
      +                          (!(enc2&0b00000001)))
  4909                           
  4910                           ; BSR set to: 0
  4911                           
  4912                           ; BSR set to: 0
  4913                           
  4914                           ; BSR set to: 0
  4915  0043B2  B080               	btfsc	3968,0,c	;volatile
  4916                           
  4917                           ; BSR set to: 0
  4918  0043B4  A480               	btfss	3968,2,c	;volatile
  4919  0043B6  D00B               	goto	l1058
  4920                           
  4921                           ; BSR set to: 0
  4922  0043B8  B196               	btfsc	_enc2& (0+255),0,b
  4923  0043BA  D009               	goto	l1058
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;os.c: 119: {;os.c: 120: if(os.encoder2Count>-128)
  4927  0043BC  5162               	movf	(_os+2)& (0+255),w,b
  4928  0043BE  0A80               	xorlw	128
  4929  0043C0  0FFF               	addlw	255
  4930  0043C2  A0D8               	btfss	status,0,c
  4931  0043C4  D004               	goto	l1058
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;os.c: 123: if(5)
  4935  0043C6  0762               	decf	(_os+2)& (0+255),f,b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;os.c: 124: {;os.c: 125: LATCbits.LC7 = 1;
  4939  0043C8  8E8B               	bsf	3979,7,c	;volatile
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;os.c: 126: os.beep_count = 5;
  4943  0043CA  0E05               	movlw	5
  4944  0043CC  6F6E               	movwf	(_os+14)& (0+255),b
  4945  0043CE                     l1058:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;os.c: 127: };os.c: 128: };os.c: 129: };os.c: 131: if(PORTAbits.RA1 && (!(enc2&0b0000001
      +                          0)))
  4949                           
  4950                           ; BSR set to: 0
  4951                           
  4952                           ; BSR set to: 0
  4953                           
  4954                           ; BSR set to: 0
  4955  0043CE  B280               	btfsc	3968,1,c	;volatile
  4956                           
  4957                           ; BSR set to: 0
  4958  0043D0  B396               	btfsc	_enc2& (0+255),1,b
  4959  0043D2  D005               	goto	l1060
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;os.c: 134: if(5)
  4963  0043D4  0E01               	movlw	1
  4964  0043D6  6F63               	movwf	(_os+3)& (0+255),b
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;os.c: 135: {;os.c: 136: LATCbits.LC7 = 1;
  4968  0043D8  8E8B               	bsf	3979,7,c	;volatile
  4969                           
  4970                           ;os.c: 137: os.beep_count = 5;
  4971  0043DA  0E05               	movlw	5
  4972  0043DC  6F6E               	movwf	(_os+14)& (0+255),b
  4973  0043DE                     l1060:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;os.c: 138: };os.c: 139: };os.c: 141: if((!PORTAbits.RA1) && (enc2&0b00000010))
  4977                           
  4978                           ; BSR set to: 0
  4979                           
  4980                           ; BSR set to: 0
  4981  0043DE  A280               	btfss	3968,1,c	;volatile
  4982                           
  4983                           ; BSR set to: 0
  4984  0043E0  A396               	btfss	_enc2& (0+255),1,b
  4985  0043E2  D004               	goto	l1062
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;os.c: 144: if(5)
  4989  0043E4  6963               	setf	(_os+3)& (0+255),b
  4990                           
  4991                           ;os.c: 145: {;os.c: 146: LATCbits.LC7 = 1;
  4992  0043E6  8E8B               	bsf	3979,7,c	;volatile
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;os.c: 147: os.beep_count = 5;
  4996  0043E8  0E05               	movlw	5
  4997  0043EA  6F6E               	movwf	(_os+14)& (0+255),b
  4998  0043EC                     l1062:
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;os.c: 148: };os.c: 149: };os.c: 151: enc2 = PORTA & 0b00000111;
  5002                           
  5003                           ; BSR set to: 0
  5004                           
  5005                           ; BSR set to: 0
  5006  0043EC  5080               	movf	3968,w,c	;volatile
  5007  0043EE  0B07               	andlw	7
  5008  0043F0  6F96               	movwf	_enc2& (0+255),b
  5009  0043F2                     l1052:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;os.c: 152: };os.c: 155: if(os.beep_count>0)
  5013                           
  5014                           ; BSR set to: 0
  5015  0043F2  516E               	movf	(_os+14)& (0+255),w,b
  5016  0043F4  B4D8               	btfsc	status,2,c
  5017  0043F6  0012               	return	
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;os.c: 156: {;os.c: 157: --os.beep_count;
  5021  0043F8  076E               	decf	(_os+14)& (0+255),f,b
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;os.c: 158: if(os.beep_count==0)
  5025  0043FA  516E               	movf	(_os+14)& (0+255),w,b
  5026  0043FC  A4D8               	btfss	status,2,c
  5027  0043FE  0012               	return	
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;os.c: 159: {;os.c: 160: LATCbits.LC7 = 0;
  5031  004400  9E8B               	bcf	3979,7,c	;volatile
  5032                           
  5033                           ; BSR set to: 0
  5034  004402  0012               	return	
  5035  004404                     __end_of_timer_pseudo_isr:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           intcon	equ	0xFF2
  5044                           intcon3	equ	0xFF0
  5045                           postinc0	equ	0xFEE
  5046                           wreg	equ	0xFE8
  5047                           postdec1	equ	0xFE5
  5048                           plusw1	equ	0xFE3
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           indf2	equ	0xFDF
  5052                           plusw2	equ	0xFDB
  5053                           fsr2h	equ	0xFDA
  5054                           fsr2l	equ	0xFD9
  5055                           status	equ	0xFD8
  5056                           
  5057 ;; *************** function _system_minimal_init_undo *****************
  5058 ;; Defined at:
  5059 ;;		line 294 in file "os.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;		None
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;		None
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      void 
  5066 ;; Registers used:
  5067 ;;		None
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;Total ram usage:        0 bytes
  5078 ;; Hardware stack levels used:    1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text9
  5087  0073F8                     __ptext9:
  5088                           	opt stack 0
  5089  0073F8                     _system_minimal_init_undo:
  5090                           	opt stack 30
  5091                           
  5092                           ;os.c: 300: TRISEbits.TRISE1 = 1;
  5093                           
  5094                           ;incstack = 0
  5095  0073F8  8296               	bsf	3990,1,c	;volatile
  5096                           
  5097                           ;os.c: 301: ANCON0bits.PCFG6 = 0;
  5098  0073FA  010F               	movlb	15	; () banked
  5099  0073FC  9D48               	bcf	72,6,b	;volatile
  5100                           
  5101                           ;os.c: 302: TRISAbits.TRISA1 = 1;
  5102  0073FE  8292               	bsf	3986,1,c	;volatile
  5103                           
  5104                           ;os.c: 303: ANCON0bits.PCFG1 = 0;
  5105  007400  9348               	bcf	72,1,b	;volatile
  5106                           
  5107                           ; BSR set to: 15
  5108  007402  0012               	return		;funcret
  5109  007404                     __end_of_system_minimal_init_undo:
  5110                           	opt stack 0
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           intcon3	equ	0xFF0
  5119                           postinc0	equ	0xFEE
  5120                           wreg	equ	0xFE8
  5121                           postdec1	equ	0xFE5
  5122                           plusw1	equ	0xFE3
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           plusw2	equ	0xFDB
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _system_minimal_init *****************
  5132 ;; Defined at:
  5133 ;;		line 278 in file "os.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;Total ram usage:        0 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		_i2c_init
  5156 ;;		_system_delay_ms
  5157 ;; This function is called by:
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text10
  5163  007334                     __ptext10:
  5164                           	opt stack 0
  5165  007334                     _system_minimal_init:
  5166                           	opt stack 29
  5167                           
  5168                           ;os.c: 281: TRISEbits.TRISE1 = 1;
  5169                           
  5170                           ; BSR set to: 15
  5171                           ;incstack = 0
  5172  007334  8296               	bsf	3990,1,c	;volatile
  5173                           
  5174                           ;os.c: 282: ANCON0bits.PCFG6 = 1;
  5175  007336  010F               	movlb	15	; () banked
  5176  007338  8D48               	bsf	72,6,b	;volatile
  5177                           
  5178                           ;os.c: 283: TRISAbits.TRISA1 = 1;
  5179  00733A  8292               	bsf	3986,1,c	;volatile
  5180                           
  5181                           ;os.c: 284: ANCON0bits.PCFG1 = 1;
  5182  00733C  8348               	bsf	72,1,b	;volatile
  5183                           
  5184                           ; BSR set to: 15
  5185                           ;os.c: 287: i2c_init();
  5186  00733E  EC31  F039         	call	_i2c_init	;wreg free
  5187                           
  5188                           ;os.c: 290: system_delay_ms(50);
  5189  007342  0E32               	movlw	50
  5190  007344  ECB0  F038         	call	_system_delay_ms
  5191  007348  0012               	return		;funcret
  5192  00734A                     __end_of_system_minimal_init:
  5193                           	opt stack 0
  5194                           tblptru	equ	0xFF8
  5195                           tblptrh	equ	0xFF7
  5196                           tblptrl	equ	0xFF6
  5197                           tablat	equ	0xFF5
  5198                           prodh	equ	0xFF4
  5199                           prodl	equ	0xFF3
  5200                           intcon	equ	0xFF2
  5201                           intcon3	equ	0xFF0
  5202                           postinc0	equ	0xFEE
  5203                           wreg	equ	0xFE8
  5204                           postdec1	equ	0xFE5
  5205                           plusw1	equ	0xFE3
  5206                           fsr1h	equ	0xFE2
  5207                           fsr1l	equ	0xFE1
  5208                           indf2	equ	0xFDF
  5209                           plusw2	equ	0xFDB
  5210                           fsr2h	equ	0xFDA
  5211                           fsr2l	equ	0xFD9
  5212                           status	equ	0xFD8
  5213                           
  5214 ;; *************** function _i2c_init *****************
  5215 ;; Defined at:
  5216 ;;		line 24 in file "i2c.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used:    1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_system_minimal_init
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text11
  5244  007262                     __ptext11:
  5245                           	opt stack 0
  5246  007262                     _i2c_init:
  5247                           	opt stack 29
  5248                           
  5249                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  5250                           
  5251                           ;incstack = 0
  5252  007262  8A93               	bsf	3987,5,c	;volatile
  5253                           
  5254                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  5255  007264  8893               	bsf	3987,4,c	;volatile
  5256                           
  5257                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  5258  007266  8EC7               	bsf	4039,7,c	;volatile
  5259                           
  5260                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  5261  007268  9CC7               	bcf	4039,6,c	;volatile
  5262                           
  5263                           ;i2c.c: 32: SSP1ADD = 119;
  5264  00726A  0E77               	movlw	119
  5265  00726C  6EC8               	movwf	4040,c	;volatile
  5266                           
  5267                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  5268  00726E  9EC6               	bcf	4038,7,c	;volatile
  5269                           
  5270                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  5271  007270  9CC6               	bcf	4038,6,c	;volatile
  5272                           
  5273                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  5274  007272  50C6               	movf	4038,w,c	;volatile
  5275  007274  0BF0               	andlw	-16
  5276  007276  0908               	iorlw	8
  5277  007278  6EC6               	movwf	4038,c	;volatile
  5278                           
  5279                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  5280  00727A  8AC6               	bsf	4038,5,c	;volatile
  5281  00727C  0012               	return		;funcret
  5282  00727E                     __end_of_i2c_init:
  5283                           	opt stack 0
  5284                           tblptru	equ	0xFF8
  5285                           tblptrh	equ	0xFF7
  5286                           tblptrl	equ	0xFF6
  5287                           tablat	equ	0xFF5
  5288                           prodh	equ	0xFF4
  5289                           prodl	equ	0xFF3
  5290                           intcon	equ	0xFF2
  5291                           intcon3	equ	0xFF0
  5292                           postinc0	equ	0xFEE
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           plusw1	equ	0xFE3
  5296                           fsr1h	equ	0xFE2
  5297                           fsr1l	equ	0xFE1
  5298                           indf2	equ	0xFDF
  5299                           plusw2	equ	0xFDB
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304 ;; *************** function _system_full_init *****************
  5305 ;; Defined at:
  5306 ;;		line 307 in file "os.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;		None
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;		None
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  1    wreg      void 
  5313 ;; Registers used:
  5314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;Total ram usage:        0 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    7
  5327 ;; This function calls:
  5328 ;;		__system_encoder_init
  5329 ;;		__system_timer0_init
  5330 ;;		_fat_init
  5331 ;;		_flash_init
  5332 ;;		_ui_init
  5333 ;; This function is called by:
  5334 ;;		_main
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text12
  5339  00680E                     __ptext12:
  5340                           	opt stack 0
  5341  00680E                     _system_full_init:
  5342                           	opt stack 23
  5343                           
  5344                           ;os.c: 314: TRISAbits.TRISA3 = 0;
  5345                           
  5346                           ;incstack = 0
  5347  00680E  9692               	bcf	3986,3,c	;volatile
  5348                           
  5349                           ;os.c: 315: LATAbits.LA3 = 0;
  5350  006810  9689               	bcf	3977,3,c	;volatile
  5351                           
  5352                           ;os.c: 318: TRISCbits.TRISC1 = 0;
  5353  006812  9294               	bcf	3988,1,c	;volatile
  5354                           
  5355                           ;os.c: 319: LATCbits.LC1 = 1;
  5356  006814  828B               	bsf	3979,1,c	;volatile
  5357                           
  5358                           ;os.c: 322: TRISCbits.TRISC6 = 0;
  5359  006816  9C94               	bcf	3988,6,c	;volatile
  5360                           
  5361                           ;os.c: 323: LATCbits.LC6 = 0;
  5362  006818  9C8B               	bcf	3979,6,c	;volatile
  5363                           
  5364                           ;os.c: 326: TRISAbits.TRISA5 = 0;
  5365  00681A  9A92               	bcf	3986,5,c	;volatile
  5366                           
  5367                           ;os.c: 327: LATAbits.LA5 = 0;
  5368  00681C  9A89               	bcf	3977,5,c	;volatile
  5369                           
  5370                           ;os.c: 330: TRISDbits.TRISD5 = 1;
  5371  00681E  8A95               	bsf	3989,5,c	;volatile
  5372                           
  5373                           ;os.c: 331: TRISDbits.TRISD4 = 0;
  5374  006820  9895               	bcf	3989,4,c	;volatile
  5375                           
  5376                           ;os.c: 332: TRISDbits.TRISD6 = 0;
  5377  006822  9C95               	bcf	3989,6,c	;volatile
  5378                           
  5379                           ;os.c: 333: TRISDbits.TRISD7 = 0;
  5380  006824  9E95               	bcf	3989,7,c	;volatile
  5381                           
  5382                           ;os.c: 334: LATDbits.LD7 = 1;
  5383  006826  8E8C               	bsf	3980,7,c	;volatile
  5384                           
  5385                           ;os.c: 337: TRISEbits.TRISE2 = 1;
  5386  006828  8496               	bsf	3990,2,c	;volatile
  5387                           
  5388                           ;os.c: 338: ANCON0bits.PCFG7 = 1;
  5389  00682A  010F               	movlb	15	; () banked
  5390  00682C  8F48               	bsf	72,7,b	;volatile
  5391                           
  5392                           ;os.c: 339: TRISEbits.TRISE0 = 1;
  5393  00682E  8096               	bsf	3990,0,c	;volatile
  5394                           
  5395                           ;os.c: 340: ANCON0bits.PCFG5 = 1;
  5396  006830  8B48               	bsf	72,5,b	;volatile
  5397                           
  5398                           ;os.c: 341: TRISEbits.TRISE1 = 1;
  5399  006832  8296               	bsf	3990,1,c	;volatile
  5400                           
  5401                           ;os.c: 342: ANCON0bits.PCFG6 = 1;
  5402  006834  8D48               	bsf	72,6,b	;volatile
  5403                           
  5404                           ;os.c: 343: TRISAbits.TRISA0 = 1;
  5405  006836  8092               	bsf	3986,0,c	;volatile
  5406                           
  5407                           ;os.c: 344: ANCON0bits.PCFG0 = 1;
  5408  006838  8148               	bsf	72,0,b	;volatile
  5409                           
  5410                           ;os.c: 345: TRISAbits.TRISA2 = 1;
  5411  00683A  8492               	bsf	3986,2,c	;volatile
  5412                           
  5413                           ;os.c: 346: ANCON0bits.PCFG2 = 1;
  5414  00683C  8548               	bsf	72,2,b	;volatile
  5415                           
  5416                           ;os.c: 347: TRISAbits.TRISA1 = 1;
  5417  00683E  8292               	bsf	3986,1,c	;volatile
  5418                           
  5419                           ;os.c: 348: ANCON0bits.PCFG1 = 1;
  5420  006840  8348               	bsf	72,1,b	;volatile
  5421                           
  5422                           ; BSR set to: 15
  5423                           ;os.c: 351: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5424  006842  0E10               	movlw	16
  5425  006844  0100               	movlb	0	; () banked
  5426  006846  6F66               	movwf	(_os+6)& (0+255),b
  5427                           
  5428                           ;os.c: 352: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5429  006848  0E00               	movlw	0
  5430  00684A  6F67               	movwf	(_os+7)& (0+255),b
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;os.c: 355: flash_init();
  5434  00684C  ECEE  F039         	call	_flash_init	;wreg free
  5435                           
  5436                           ;os.c: 358: fat_init();
  5437  006850  ECDE  F039         	call	_fat_init	;wreg free
  5438                           
  5439                           ;os.c: 362: _system_encoder_init();
  5440  006854  ECF4  F038         	call	__system_encoder_init	;wreg free
  5441                           
  5442                           ;os.c: 365: ui_init();
  5443  006858  ECBA  F039         	call	_ui_init	;wreg free
  5444                           
  5445                           ;os.c: 368: _system_timer0_init();
  5446  00685C  ECE4  F038         	call	__system_timer0_init	;wreg free
  5447  006860  0012               	return		;funcret
  5448  006862                     __end_of_system_full_init:
  5449                           	opt stack 0
  5450                           tblptru	equ	0xFF8
  5451                           tblptrh	equ	0xFF7
  5452                           tblptrl	equ	0xFF6
  5453                           tablat	equ	0xFF5
  5454                           prodh	equ	0xFF4
  5455                           prodl	equ	0xFF3
  5456                           intcon	equ	0xFF2
  5457                           intcon3	equ	0xFF0
  5458                           postinc0	equ	0xFEE
  5459                           wreg	equ	0xFE8
  5460                           postdec1	equ	0xFE5
  5461                           plusw1	equ	0xFE3
  5462                           fsr1h	equ	0xFE2
  5463                           fsr1l	equ	0xFE1
  5464                           indf2	equ	0xFDF
  5465                           plusw2	equ	0xFDB
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function _ui_init *****************
  5471 ;; Defined at:
  5472 ;;		line 121 in file "ui.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_system_full_init
  5496 ;;		_ui_run
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text13
  5501  007374                     __ptext13:
  5502                           	opt stack 0
  5503  007374                     _ui_init:
  5504                           	opt stack 29
  5505                           
  5506                           ;ui.c: 123: system_ui_inactive_count = 0;
  5507                           
  5508                           ;incstack = 0
  5509  007374  0E00               	movlw	0
  5510  007376  0101               	movlb	1	; () banked
  5511  007378  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5512  00737A  0E00               	movlw	0
  5513  00737C  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  5514                           
  5515                           ;ui.c: 124: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5516  00737E  0E01               	movlw	1
  5517  007380  0100               	movlb	0	; () banked
  5518  007382  6F95               	movwf	_userInterfaceStatus& (0+255),b
  5519                           
  5520                           ; BSR set to: 0
  5521  007384  0012               	return		;funcret
  5522  007386                     __end_of_ui_init:
  5523                           	opt stack 0
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           intcon	equ	0xFF2
  5531                           intcon3	equ	0xFF0
  5532                           postinc0	equ	0xFEE
  5533                           wreg	equ	0xFE8
  5534                           postdec1	equ	0xFE5
  5535                           plusw1	equ	0xFE3
  5536                           fsr1h	equ	0xFE2
  5537                           fsr1l	equ	0xFE1
  5538                           indf2	equ	0xFDF
  5539                           plusw2	equ	0xFDB
  5540                           fsr2h	equ	0xFDA
  5541                           fsr2l	equ	0xFD9
  5542                           status	equ	0xFD8
  5543                           
  5544 ;; *************** function _flash_init *****************
  5545 ;; Defined at:
  5546 ;;		line 361 in file "flash.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;		None
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;		None
  5551 ;; Return value:  Size  Location     Type
  5552 ;;                  1    wreg      void 
  5553 ;; Registers used:
  5554 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5555 ;; Tracked objects:
  5556 ;;		On entry : 0/0
  5557 ;;		On exit  : 0/0
  5558 ;;		Unchanged: 0/0
  5559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5564 ;;Total ram usage:        0 bytes
  5565 ;; Hardware stack levels used:    1
  5566 ;; Hardware stack levels required when called:    4
  5567 ;; This function calls:
  5568 ;;		__flash_set_page_size
  5569 ;;		_spi_init
  5570 ;; This function is called by:
  5571 ;;		_system_full_init
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text14
  5576  0073DC                     __ptext14:
  5577                           	opt stack 0
  5578  0073DC                     _flash_init:
  5579                           	opt stack 25
  5580                           
  5581                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  5582                           
  5583                           ; BSR set to: 0
  5584                           ;incstack = 0
  5585  0073DC  0E00               	movlw	0
  5586  0073DE  EC7F  F036         	call	_spi_init
  5587                           
  5588                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5589  0073E2  0E00               	movlw	0
  5590  0073E4  ECEF  F02E         	call	__flash_set_page_size
  5591  0073E8  0012               	return		;funcret
  5592  0073EA                     __end_of_flash_init:
  5593                           	opt stack 0
  5594                           tblptru	equ	0xFF8
  5595                           tblptrh	equ	0xFF7
  5596                           tblptrl	equ	0xFF6
  5597                           tablat	equ	0xFF5
  5598                           prodh	equ	0xFF4
  5599                           prodl	equ	0xFF3
  5600                           intcon	equ	0xFF2
  5601                           intcon3	equ	0xFF0
  5602                           postinc0	equ	0xFEE
  5603                           wreg	equ	0xFE8
  5604                           postdec1	equ	0xFE5
  5605                           plusw1	equ	0xFE3
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           plusw2	equ	0xFDB
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _spi_init *****************
  5615 ;; Defined at:
  5616 ;;		line 89 in file "spi.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  configuratio    1    wreg     enum E6746
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  configuratio    1    3[COMRAM] enum E6746
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;Total ram usage:        1 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    1
  5637 ;; This function calls:
  5638 ;;		__spi_init
  5639 ;; This function is called by:
  5640 ;;		_flash_init
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text15
  5645  006CFE                     __ptext15:
  5646                           	opt stack 0
  5647  006CFE                     _spi_init:
  5648                           	opt stack 27
  5649                           
  5650                           ;incstack = 0
  5651                           ;spi_init@configuration stored from wreg
  5652  006CFE  6E04               	movwf	spi_init@configuration,c
  5653                           
  5654                           ;spi.c: 91: switch(configuration)
  5655  006D00  D012               	goto	l2842
  5656  006D02                     
  5657                           ;spi.c: 94: _spi_init(config_internal);
  5658  006D02  C15A  F001         	movff	_config_internal,__spi_init@details
  5659  006D06  C15B  F002         	movff	_config_internal+1,__spi_init@details+1
  5660  006D0A  C15C  F003         	movff	_config_internal+2,__spi_init@details+2
  5661  006D0E  ECD8  F036         	call	__spi_init	;wreg free
  5662                           
  5663                           ;spi.c: 95: break;
  5664  006D12  D010               	goto	l2844
  5665  006D14                     
  5666                           ;spi.c: 98: _spi_init(config_external);
  5667  006D14  C157  F001         	movff	_config_external,__spi_init@details
  5668  006D18  C158  F002         	movff	_config_external+1,__spi_init@details+1
  5669  006D1C  C159  F003         	movff	_config_external+2,__spi_init@details+2
  5670  006D20  ECD8  F036         	call	__spi_init	;wreg free
  5671                           
  5672                           ;spi.c: 100: }
  5673                           
  5674                           ;spi.c: 99: break;
  5675  006D24  D007               	goto	l2844
  5676  006D26                     l2842:
  5677  006D26  5004               	movf	spi_init@configuration,w,c
  5678                           
  5679                           ; Switch size 1, requested type "space"
  5680                           ; Number of cases is 2, Range of values is 0 to 1
  5681                           ; switch strategies available:
  5682                           ; Name         Instructions Cycles
  5683                           ; simple_byte            7     4 (average)
  5684                           ;	Chosen strategy is simple_byte
  5685  006D28  0A00               	xorlw	0	; case 0
  5686  006D2A  B4D8               	btfsc	status,2,c
  5687  006D2C  D7EA               	goto	l2843
  5688  006D2E  0A01               	xorlw	1	; case 1
  5689  006D30  B4D8               	btfsc	status,2,c
  5690  006D32  D7F0               	goto	l2845
  5691  006D34                     l2844:
  5692                           
  5693                           ;spi.c: 102: active_configuration = configuration;
  5694  006D34  C004  F091         	movff	spi_init@configuration,_active_configuration
  5695  006D38  0012               	return		;funcret
  5696  006D3A                     __end_of_spi_init:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           intcon3	equ	0xFF0
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           postdec1	equ	0xFE5
  5709                           plusw1	equ	0xFE3
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           indf2	equ	0xFDF
  5713                           plusw2	equ	0xFDB
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function __spi_init *****************
  5719 ;; Defined at:
  5720 ;;		line 24 in file "spi.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  details         3    0[COMRAM] struct .
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5734 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;Total ram usage:        3 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_spi_init
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           	psect	text16
  5748  006DB0                     __ptext16:
  5749                           	opt stack 0
  5750  006DB0                     __spi_init:
  5751                           	opt stack 27
  5752                           
  5753                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5754                           
  5755                           ;incstack = 0
  5756  006DB0  0E55               	movlw	85
  5757  006DB2  6EA7               	movwf	4007,c	;volsfr
  5758  006DB4  0EAA               	movlw	170
  5759  006DB6  6EA7               	movwf	4007,c	;volsfr
  5760  006DB8  010E               	movlb	14	; () banked
  5761  006DBA  91BF               	bcf	191,0,b	;volatile
  5762                           
  5763                           ;spi.c: 31: RPINR21 = 22;
  5764  006DBC  0E16               	movlw	22
  5765  006DBE  6FFC               	movwf	252,b	;volatile
  5766                           
  5767                           ;spi.c: 32: RPOR21 = 10;
  5768  006DC0  0E0A               	movlw	10
  5769  006DC2  6FD5               	movwf	213,b	;volatile
  5770                           
  5771                           ;spi.c: 34: RPOR23 = 11;
  5772  006DC4  0E0B               	movlw	11
  5773  006DC6  6FD7               	movwf	215,b	;volatile
  5774                           
  5775                           ;spi.c: 35: RPINR22 = 23;
  5776  006DC8  0E17               	movlw	23
  5777  006DCA  6FFD               	movwf	253,b	;volatile
  5778                           
  5779                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5780  006DCC  0E55               	movlw	85
  5781  006DCE  6EA7               	movwf	4007,c	;volsfr
  5782  006DD0  0EAA               	movlw	170
  5783  006DD2  6EA7               	movwf	4007,c	;volsfr
  5784                           
  5785                           ; BSR set to: 14
  5786  006DD4  81BF               	bsf	191,0,b	;volatile
  5787                           
  5788                           ; BSR set to: 14
  5789                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  5790  006DD6  8E73               	bsf	3955,7,c	;volatile
  5791                           
  5792                           ; BSR set to: 14
  5793                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  5794  006DD8  8C73               	bsf	3955,6,c	;volatile
  5795                           
  5796                           ; BSR set to: 14
  5797                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  5798  006DDA  9872               	bcf	3954,4,c	;volatile
  5799                           
  5800                           ; BSR set to: 14
  5801                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  5802  006DDC  9072               	bcf	3954,0,c	;volatile
  5803  006DDE  9272               	bcf	3954,1,c	;volatile
  5804  006DE0  9472               	bcf	3954,2,c	;volatile
  5805  006DE2  9672               	bcf	3954,3,c	;volatile
  5806                           
  5807                           ; BSR set to: 14
  5808                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  5809  006DE4  8A72               	bsf	3954,5,c	;volatile
  5810                           
  5811                           ; BSR set to: 14
  5812  006DE6  0012               	return		;funcret
  5813  006DE8                     __end_of__spi_init:
  5814                           	opt stack 0
  5815                           tblptru	equ	0xFF8
  5816                           tblptrh	equ	0xFF7
  5817                           tblptrl	equ	0xFF6
  5818                           tablat	equ	0xFF5
  5819                           prodh	equ	0xFF4
  5820                           prodl	equ	0xFF3
  5821                           intcon	equ	0xFF2
  5822                           intcon3	equ	0xFF0
  5823                           postinc0	equ	0xFEE
  5824                           wreg	equ	0xFE8
  5825                           postdec1	equ	0xFE5
  5826                           plusw1	equ	0xFE3
  5827                           fsr1h	equ	0xFE2
  5828                           fsr1l	equ	0xFE1
  5829                           indf2	equ	0xFDF
  5830                           plusw2	equ	0xFDB
  5831                           fsr2h	equ	0xFDA
  5832                           fsr2l	equ	0xFD9
  5833                           status	equ	0xFD8
  5834                           
  5835 ;; *************** function __flash_set_page_size *****************
  5836 ;; Defined at:
  5837 ;;		line 99 in file "flash.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  size            1    wreg     enum E6891
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  size            1   23[COMRAM] enum E6891
  5842 ;;  command         4   19[COMRAM] unsigned char [4]
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;Total ram usage:        5 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    3
  5859 ;; This function calls:
  5860 ;;		__flash_is_busy
  5861 ;;		_memcpy
  5862 ;;		_spi_tx
  5863 ;; This function is called by:
  5864 ;;		_flash_init
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text17
  5869  005DDE                     __ptext17:
  5870                           	opt stack 0
  5871  005DDE                     __flash_set_page_size:
  5872                           	opt stack 25
  5873                           
  5874                           ; BSR set to: 14
  5875                           ;incstack = 0
  5876                           ;__flash_set_page_size@size stored from wreg
  5877  005DDE  6E18               	movwf	__flash_set_page_size@size,c
  5878  005DE0                     
  5879                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  5880  005DE0  ECD3  F038         	call	__flash_is_busy	;wreg free
  5881  005DE4  0900               	iorlw	0
  5882  005DE6  A4D8               	btfss	status,2,c
  5883  005DE8  D7FB               	goto	l12981
  5884                           
  5885                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  5886  005DEA  5018               	movf	__flash_set_page_size@size,w,c
  5887  005DEC  A4D8               	btfss	status,2,c
  5888  005DEE  D013               	goto	l1786
  5889                           
  5890                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  5891  005DF0  0E14               	movlw	low __flash_set_page_size@command
  5892  005DF2  6E01               	movwf	memcpy@d1,c
  5893  005DF4  0E00               	movlw	high __flash_set_page_size@command
  5894  005DF6  6E02               	movwf	memcpy@d1+1,c
  5895  005DF8  0EC3               	movlw	low _flash_command_pagesize_512
  5896  005DFA  6E03               	movwf	memcpy@s1,c
  5897  005DFC  0E8F               	movlw	high _flash_command_pagesize_512
  5898  005DFE  6E04               	movwf	memcpy@s1+1,c
  5899  005E00  5003               	movf	memcpy@s1,w,c
  5900  005E02  1004               	iorwf	memcpy@s1+1,w,c
  5901  005E04  A4D8               	btfss	status,2,c
  5902  005E06  0E00               	movlw	low (__mediumconst shr (0+16))
  5903  005E08  6E05               	movwf	memcpy@s1+2,c
  5904  005E0A  0E00               	movlw	0
  5905  005E0C  6E07               	movwf	memcpy@n+1,c
  5906  005E0E  0E04               	movlw	4
  5907  005E10  6E06               	movwf	memcpy@n,c
  5908  005E12  EC25  F031         	call	_memcpy	;wreg free
  5909  005E16                     l1786:
  5910                           
  5911                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  5912  005E16  0418               	decf	__flash_set_page_size@size,w,c
  5913  005E18  A4D8               	btfss	status,2,c
  5914  005E1A  D013               	goto	l1787
  5915                           
  5916                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  5917  005E1C  0E14               	movlw	low __flash_set_page_size@command
  5918  005E1E  6E01               	movwf	memcpy@d1,c
  5919  005E20  0E00               	movlw	high __flash_set_page_size@command
  5920  005E22  6E02               	movwf	memcpy@d1+1,c
  5921  005E24  0EBF               	movlw	low _flash_command_pagesize_528
  5922  005E26  6E03               	movwf	memcpy@s1,c
  5923  005E28  0E8F               	movlw	high _flash_command_pagesize_528
  5924  005E2A  6E04               	movwf	memcpy@s1+1,c
  5925  005E2C  5003               	movf	memcpy@s1,w,c
  5926  005E2E  1004               	iorwf	memcpy@s1+1,w,c
  5927  005E30  A4D8               	btfss	status,2,c
  5928  005E32  0E00               	movlw	low (__mediumconst shr (0+16))
  5929  005E34  6E05               	movwf	memcpy@s1+2,c
  5930  005E36  0E00               	movlw	0
  5931  005E38  6E07               	movwf	memcpy@n+1,c
  5932  005E3A  0E04               	movlw	4
  5933  005E3C  6E06               	movwf	memcpy@n,c
  5934  005E3E  EC25  F031         	call	_memcpy	;wreg free
  5935  005E42                     l1787:
  5936                           
  5937                           ;flash.c: 113: spi_tx(command, 4);
  5938  005E42  0E14               	movlw	low __flash_set_page_size@command
  5939  005E44  6E01               	movwf	spi_tx@data,c
  5940  005E46  0E00               	movlw	high __flash_set_page_size@command
  5941  005E48  6E02               	movwf	spi_tx@data+1,c
  5942  005E4A  0E00               	movlw	0
  5943  005E4C  6E04               	movwf	spi_tx@length+1,c
  5944  005E4E  0E04               	movlw	4
  5945  005E50  6E03               	movwf	spi_tx@length,c
  5946  005E52  EC04  F033         	call	_spi_tx	;wreg free
  5947  005E56  0012               	return		;funcret
  5948  005E58                     __end_of__flash_set_page_size:
  5949                           	opt stack 0
  5950                           tblptru	equ	0xFF8
  5951                           tblptrh	equ	0xFF7
  5952                           tblptrl	equ	0xFF6
  5953                           tablat	equ	0xFF5
  5954                           prodh	equ	0xFF4
  5955                           prodl	equ	0xFF3
  5956                           intcon	equ	0xFF2
  5957                           intcon3	equ	0xFF0
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           postdec1	equ	0xFE5
  5961                           plusw1	equ	0xFE3
  5962                           fsr1h	equ	0xFE2
  5963                           fsr1l	equ	0xFE1
  5964                           indf2	equ	0xFDF
  5965                           plusw2	equ	0xFDB
  5966                           fsr2h	equ	0xFDA
  5967                           fsr2l	equ	0xFD9
  5968                           status	equ	0xFD8
  5969                           
  5970 ;; *************** function _fat_init *****************
  5971 ;; Defined at:
  5972 ;;		line 1382 in file "fat16.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;		None
  5975 ;; Auto vars:     Size  Location     Type
  5976 ;;		None
  5977 ;; Return value:  Size  Location     Type
  5978 ;;                  1    wreg      void 
  5979 ;; Registers used:
  5980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5981 ;; Tracked objects:
  5982 ;;		On entry : 0/0
  5983 ;;		On exit  : 0/0
  5984 ;;		Unchanged: 0/0
  5985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;Total ram usage:        0 bytes
  5991 ;; Hardware stack levels used:    1
  5992 ;; Hardware stack levels required when called:    6
  5993 ;; This function calls:
  5994 ;;		_fat_format
  5995 ;;		_fat_get_format_status
  5996 ;; This function is called by:
  5997 ;;		_system_full_init
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text18
  6002  0073BC                     __ptext18:
  6003                           	opt stack 0
  6004  0073BC                     _fat_init:
  6005                           	opt stack 23
  6006                           
  6007                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6008                           
  6009                           ;incstack = 0
  6010  0073BC  EC47  F02A         	call	_fat_get_format_status	;wreg free
  6011  0073C0  0900               	iorlw	0
  6012  0073C2  A4D8               	btfss	status,2,c
  6013  0073C4  0012               	return	
  6014                           
  6015                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  6016  0073C6  EC1E  F00F         	call	_fat_format	;wreg free
  6017  0073CA  0012               	return	
  6018  0073CC                     __end_of_fat_init:
  6019                           	opt stack 0
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           intcon3	equ	0xFF0
  6028                           postinc0	equ	0xFEE
  6029                           wreg	equ	0xFE8
  6030                           postdec1	equ	0xFE5
  6031                           plusw1	equ	0xFE3
  6032                           fsr1h	equ	0xFE2
  6033                           fsr1l	equ	0xFE1
  6034                           indf2	equ	0xFDF
  6035                           plusw2	equ	0xFDB
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _fat_get_format_status *****************
  6041 ;; Defined at:
  6042 ;;		line 1292 in file "fat16.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;		None
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  cntr            2   45[COMRAM] unsigned int 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      enum E6865
  6049 ;; Registers used:
  6050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        4 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    5
  6063 ;; This function calls:
  6064 ;;		__get_fbr
  6065 ;;		__get_mbr
  6066 ;;		_flash_sector_read
  6067 ;; This function is called by:
  6068 ;;		_fat_init
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text19
  6073  00548E                     __ptext19:
  6074                           	opt stack 0
  6075  00548E                     _fat_get_format_status:
  6076                           	opt stack 23
  6077                           
  6078                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  6079                           
  6080                           ;incstack = 0
  6081  00548E  0E00               	movlw	0
  6082  005490  6E29               	movwf	flash_sector_read@page+1,c
  6083  005492  0E00               	movlw	0
  6084  005494  6E28               	movwf	flash_sector_read@page,c
  6085  005496  0ECC               	movlw	low _buffer
  6086  005498  6E2A               	movwf	flash_sector_read@data,c
  6087  00549A  0E02               	movlw	high _buffer
  6088  00549C  6E2B               	movwf	flash_sector_read@data+1,c
  6089  00549E  EC77  F038         	call	_flash_sector_read	;wreg free
  6090                           
  6091                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6092  0054A2  0E00               	movlw	0
  6093  0054A4  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6094  0054A6  0E00               	movlw	0
  6095  0054A8  6E2E               	movwf	fat_get_format_status@cntr,c
  6096  0054AA                     l13133:
  6097  0054AA  0E02               	movlw	2
  6098  0054AC  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6099  0054AE  B0D8               	btfsc	status,0,c
  6100  0054B0  D016               	goto	u10750
  6101                           
  6102                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6103  0054B2  0ECC               	movlw	low _buffer
  6104  0054B4  242E               	addwf	fat_get_format_status@cntr,w,c
  6105  0054B6  6ED9               	movwf	fsr2l,c
  6106  0054B8  0E02               	movlw	high _buffer
  6107  0054BA  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6108  0054BC  6EDA               	movwf	fsr2h,c
  6109  0054BE  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6110  0054C2  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6111  0054C6  EC58  F026         	call	__get_mbr	;wreg free
  6112  0054CA  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6113  0054CC  50DE               	movf	postinc2,w,c
  6114  0054CE  182D               	xorwf	??_fat_get_format_status+1,w,c
  6115  0054D0  B4D8               	btfsc	status,2,c
  6116  0054D2  D002               	goto	l2306
  6117                           
  6118                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6119  0054D4  0E00               	movlw	0
  6120  0054D6  0012               	return	
  6121  0054D8                     l2306:
  6122  0054D8  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6123  0054DA  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6124  0054DC  D7E6               	goto	l13133
  6125  0054DE                     u10750:
  6126                           
  6127                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6128  0054DE  0E00               	movlw	0
  6129  0054E0  6E29               	movwf	flash_sector_read@page+1,c
  6130  0054E2  0E01               	movlw	1
  6131  0054E4  6E28               	movwf	flash_sector_read@page,c
  6132  0054E6  0ECC               	movlw	low _buffer
  6133  0054E8  6E2A               	movwf	flash_sector_read@data,c
  6134  0054EA  0E02               	movlw	high _buffer
  6135  0054EC  6E2B               	movwf	flash_sector_read@data+1,c
  6136  0054EE  EC77  F038         	call	_flash_sector_read	;wreg free
  6137                           
  6138                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6139  0054F2  0E00               	movlw	0
  6140  0054F4  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6141  0054F6  0E00               	movlw	0
  6142  0054F8  6E2E               	movwf	fat_get_format_status@cntr,c
  6143  0054FA                     l13151:
  6144  0054FA  0E02               	movlw	2
  6145  0054FC  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6146  0054FE  B0D8               	btfsc	status,0,c
  6147  005500  D016               	goto	u10780
  6148                           
  6149                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6150  005502  0ECC               	movlw	low _buffer
  6151  005504  242E               	addwf	fat_get_format_status@cntr,w,c
  6152  005506  6ED9               	movwf	fsr2l,c
  6153  005508  0E02               	movlw	high _buffer
  6154  00550A  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6155  00550C  6EDA               	movwf	fsr2h,c
  6156  00550E  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6157  005512  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6158  005516  ECAD  F00B         	call	__get_fbr	;wreg free
  6159  00551A  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6160  00551C  50DE               	movf	postinc2,w,c
  6161  00551E  182D               	xorwf	??_fat_get_format_status+1,w,c
  6162  005520  B4D8               	btfsc	status,2,c
  6163  005522  D002               	goto	l2310
  6164                           
  6165                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6166  005524  0E00               	movlw	0
  6167  005526  0012               	return	
  6168  005528                     l2310:
  6169  005528  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6170  00552A  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6171  00552C  D7E6               	goto	l13151
  6172  00552E                     u10780:
  6173                           
  6174                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6175  00552E  0E01               	movlw	1
  6176  005530  0012               	return	
  6177  005532                     __end_of_fat_get_format_status:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           prodh	equ	0xFF4
  6184                           prodl	equ	0xFF3
  6185                           intcon	equ	0xFF2
  6186                           intcon3	equ	0xFF0
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           postdec1	equ	0xFE5
  6190                           plusw1	equ	0xFE3
  6191                           fsr1h	equ	0xFE2
  6192                           fsr1l	equ	0xFE1
  6193                           indf2	equ	0xFDF
  6194                           postinc2	equ	0xFDE
  6195                           plusw2	equ	0xFDB
  6196                           fsr2h	equ	0xFDA
  6197                           fsr2l	equ	0xFD9
  6198                           status	equ	0xFD8
  6199                           
  6200 ;; *************** function __system_timer0_init *****************
  6201 ;; Defined at:
  6202 ;;		line 251 in file "os.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;Total ram usage:        0 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; This function calls:
  6223 ;;		Nothing
  6224 ;; This function is called by:
  6225 ;;		_system_full_init
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text20
  6230  0071C8                     __ptext20:
  6231                           	opt stack 0
  6232  0071C8                     __system_timer0_init:
  6233                           	opt stack 29
  6234                           
  6235                           ;os.c: 254: T0CONbits.T0CS = 0;
  6236                           
  6237                           ;incstack = 0
  6238  0071C8  9AD5               	bcf	4053,5,c	;volatile
  6239                           
  6240                           ;os.c: 256: T0CONbits.T08BIT = 0;
  6241  0071CA  9CD5               	bcf	4053,6,c	;volatile
  6242                           
  6243                           ;os.c: 258: T0CONbits.T0PS2 = 0;
  6244  0071CC  94D5               	bcf	4053,2,c	;volatile
  6245                           
  6246                           ;os.c: 259: T0CONbits.T0PS1 = 1;
  6247  0071CE  82D5               	bsf	4053,1,c	;volatile
  6248                           
  6249                           ;os.c: 260: T0CONbits.T0PS0 = 0;
  6250  0071D0  90D5               	bcf	4053,0,c	;volatile
  6251                           
  6252                           ;os.c: 262: T0CONbits.PSA = 0;
  6253  0071D2  96D5               	bcf	4053,3,c	;volatile
  6254                           
  6255                           ;os.c: 264: TMR0H = 0xD1;
  6256  0071D4  0ED1               	movlw	209
  6257  0071D6  6ED7               	movwf	4055,c	;volatile
  6258                           
  6259                           ;os.c: 265: TMR0L = 0x20;
  6260  0071D8  0E20               	movlw	32
  6261  0071DA  6ED6               	movwf	4054,c	;volatile
  6262                           
  6263                           ;os.c: 267: T0CONbits.TMR0ON = 1;
  6264  0071DC  8ED5               	bsf	4053,7,c	;volatile
  6265                           
  6266                           ;os.c: 271: INTCONbits.TMR0IF = 0;
  6267  0071DE  94F2               	bcf	intcon,2,c	;volatile
  6268                           
  6269                           ;os.c: 274: os.timeSlot = 0;
  6270  0071E0  0E00               	movlw	0
  6271  0071E2  0100               	movlb	0	; () banked
  6272  0071E4  6F64               	movwf	(_os+4)& (0+255),b
  6273                           
  6274                           ; BSR set to: 0
  6275  0071E6  0012               	return		;funcret
  6276  0071E8                     __end_of__system_timer0_init:
  6277                           	opt stack 0
  6278                           tblptru	equ	0xFF8
  6279                           tblptrh	equ	0xFF7
  6280                           tblptrl	equ	0xFF6
  6281                           tablat	equ	0xFF5
  6282                           prodh	equ	0xFF4
  6283                           prodl	equ	0xFF3
  6284                           intcon	equ	0xFF2
  6285                           intcon3	equ	0xFF0
  6286                           postinc0	equ	0xFEE
  6287                           wreg	equ	0xFE8
  6288                           postdec1	equ	0xFE5
  6289                           plusw1	equ	0xFE3
  6290                           fsr1h	equ	0xFE2
  6291                           fsr1l	equ	0xFE1
  6292                           indf2	equ	0xFDF
  6293                           postinc2	equ	0xFDE
  6294                           plusw2	equ	0xFDB
  6295                           fsr2h	equ	0xFDA
  6296                           fsr2l	equ	0xFD9
  6297                           status	equ	0xFD8
  6298                           
  6299 ;; *************** function __system_encoder_init *****************
  6300 ;; Defined at:
  6301 ;;		line 202 in file "os.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_system_full_init
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327                           
  6328                           	psect	text21
  6329  0071E8                     __ptext21:
  6330                           	opt stack 0
  6331  0071E8                     __system_encoder_init:
  6332                           	opt stack 29
  6333                           
  6334                           ;os.c: 220: enc1 = PORTE & 0b00000111;
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;incstack = 0
  6338  0071E8  5084               	movf	3972,w,c	;volatile
  6339  0071EA  0B07               	andlw	7
  6340  0071EC  0100               	movlb	0	; () banked
  6341  0071EE  6F97               	movwf	_enc1& (0+255),b
  6342                           
  6343                           ;os.c: 221: enc2 = PORTA & 0b00000111;
  6344  0071F0  5080               	movf	3968,w,c	;volatile
  6345  0071F2  0B07               	andlw	7
  6346  0071F4  6F96               	movwf	_enc2& (0+255),b
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;os.c: 222: os.encoder1Count = 0;
  6350  0071F6  0E00               	movlw	0
  6351  0071F8  6F60               	movwf	_os& (0+255),b
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;os.c: 223: os.encoder2Count = 0;
  6355  0071FA  0E00               	movlw	0
  6356  0071FC  6F62               	movwf	(_os+2)& (0+255),b
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;os.c: 224: os.button1 = 0;
  6360  0071FE  0E00               	movlw	0
  6361  007200  6F61               	movwf	(_os+1)& (0+255),b
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;os.c: 225: os.button2 = 0;
  6365  007202  0E00               	movlw	0
  6366  007204  6F63               	movwf	(_os+3)& (0+255),b
  6367                           
  6368                           ; BSR set to: 0
  6369  007206  0012               	return		;funcret
  6370  007208                     __end_of__system_encoder_init:
  6371                           	opt stack 0
  6372                           tblptru	equ	0xFF8
  6373                           tblptrh	equ	0xFF7
  6374                           tblptrl	equ	0xFF6
  6375                           tablat	equ	0xFF5
  6376                           prodh	equ	0xFF4
  6377                           prodl	equ	0xFF3
  6378                           intcon	equ	0xFF2
  6379                           intcon3	equ	0xFF0
  6380                           postinc0	equ	0xFEE
  6381                           wreg	equ	0xFE8
  6382                           postdec1	equ	0xFE5
  6383                           plusw1	equ	0xFE3
  6384                           fsr1h	equ	0xFE2
  6385                           fsr1l	equ	0xFE1
  6386                           indf2	equ	0xFDF
  6387                           postinc2	equ	0xFDE
  6388                           plusw2	equ	0xFDB
  6389                           fsr2h	equ	0xFDA
  6390                           fsr2l	equ	0xFD9
  6391                           status	equ	0xFD8
  6392                           
  6393 ;; *************** function _jump_to_main_program *****************
  6394 ;; Defined at:
  6395 ;;		line 376 in file "os.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		None
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_main
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text22
  6423  00748A                     __ptext22:
  6424                           	opt stack 0
  6425  00748A                     _jump_to_main_program:
  6426                           	opt stack 30
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;incstack = 0
  6430  00748A  EF00 F048          	goto	36864	; ;# 
  6431  00748E  0012               	return		;funcret
  6432  007490                     __end_of_jump_to_main_program:
  6433                           	opt stack 0
  6434                           tblptru	equ	0xFF8
  6435                           tblptrh	equ	0xFF7
  6436                           tblptrl	equ	0xFF6
  6437                           tablat	equ	0xFF5
  6438                           prodh	equ	0xFF4
  6439                           prodl	equ	0xFF3
  6440                           intcon	equ	0xFF2
  6441                           intcon3	equ	0xFF0
  6442                           postinc0	equ	0xFEE
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           plusw1	equ	0xFE3
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           indf2	equ	0xFDF
  6449                           postinc2	equ	0xFDE
  6450                           plusw2	equ	0xFDB
  6451                           fsr2h	equ	0xFDA
  6452                           fsr2l	equ	0xFD9
  6453                           status	equ	0xFD8
  6454                           
  6455 ;; *************** function _bootloader_run *****************
  6456 ;; Defined at:
  6457 ;;		line 63 in file "bootloader.c"
  6458 ;; Parameters:    Size  Location     Type
  6459 ;;  timeslot        1    wreg     unsigned char 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  timeslot        1   91[COMRAM] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  1    wreg      void 
  6464 ;; Registers used:
  6465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;Total ram usage:        1 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; Hardware stack levels required when called:    9
  6478 ;; This function calls:
  6479 ;;		__bootloader_find_file
  6480 ;;		__bootloader_program
  6481 ;;		__bootloader_verify_file
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text23
  6488  0061E2                     __ptext23:
  6489                           	opt stack 0
  6490  0061E2                     _bootloader_run:
  6491                           	opt stack 21
  6492                           
  6493                           ;incstack = 0
  6494                           ;bootloader_run@timeslot stored from wreg
  6495  0061E2  6E5C               	movwf	bootloader_run@timeslot,c
  6496                           
  6497                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6498  0061E4  0100               	movlb	0	; () banked
  6499  0061E6  5167               	movf	(_os+7)& (0+255),w,b
  6500  0061E8  B4D8               	btfsc	status,2,c
  6501  0061EA  0012               	return	
  6502  0061EC  D015               	goto	l2464
  6503  0061EE                     
  6504                           ; BSR set to: 0
  6505                           ;bootloader.c: 74: if(timeslot==0)
  6506                           
  6507                           ; BSR set to: 0
  6508  0061EE  505C               	movf	bootloader_run@timeslot,w,c
  6509  0061F0  A4D8               	btfss	status,2,c
  6510  0061F2  0012               	return	
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6514  0061F4  ECEB  F02A         	call	__bootloader_find_file	;wreg free
  6515                           
  6516                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6517  0061F8  0012               	return	
  6518  0061FA                     
  6519                           ;bootloader.c: 81: if(timeslot==0)
  6520  0061FA  505C               	movf	bootloader_run@timeslot,w,c
  6521  0061FC  A4D8               	btfss	status,2,c
  6522  0061FE  0012               	return	
  6523                           
  6524                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6525  006200  ECEB  F02A         	call	__bootloader_find_file	;wreg free
  6526                           
  6527                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6528  006204  0012               	return	
  6529  006206                     
  6530                           ;bootloader.c: 88: _bootloader_verify_file();
  6531  006206  EC07  F006         	call	__bootloader_verify_file	;wreg free
  6532                           
  6533                           ;bootloader.c: 95: break;
  6534                           
  6535                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6536                           
  6537                           ;bootloader.c: 92: break;
  6538                           
  6539                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6540                           
  6541                           ;bootloader.c: 89: break;
  6542  00620A  0012               	return	
  6543  00620C                     
  6544                           ;bootloader.c: 98: if(timeslot==0)
  6545  00620C  505C               	movf	bootloader_run@timeslot,w,c
  6546  00620E  A4D8               	btfss	status,2,c
  6547  006210  0012               	return	
  6548                           
  6549                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6550  006212  EC2D  F004         	call	__bootloader_program	;wreg free
  6551                           
  6552                           ;bootloader.c: 109: }
  6553                           
  6554                           ;bootloader.c: 108: break;
  6555                           
  6556                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  6557                           
  6558                           ;bootloader.c: 105: break;
  6559                           
  6560                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6561                           
  6562                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6563  006216  0012               	return	
  6564  006218                     l2464:
  6565  006218  0100               	movlb	0	; () banked
  6566  00621A  5166               	movf	(_os+6)& (0+255),w,b
  6567                           
  6568                           ; Switch size 1, requested type "space"
  6569                           ; Number of cases is 8, Range of values is 16 to 144
  6570                           ; switch strategies available:
  6571                           ; Name         Instructions Cycles
  6572                           ; simple_byte           25    13 (average)
  6573                           ;	Chosen strategy is simple_byte
  6574  00621C  0A10               	xorlw	16	; case 16
  6575  00621E  B4D8               	btfsc	status,2,c
  6576  006220  D7E6               	goto	l2465
  6577  006222  0A30               	xorlw	48	; case 32
  6578  006224  B4D8               	btfsc	status,2,c
  6579  006226  D7E9               	goto	l2468
  6580  006228  0A10               	xorlw	16	; case 48
  6581  00622A  B4D8               	btfsc	status,2,c
  6582  00622C  D7EC               	goto	l2470
  6583  00622E  0A70               	xorlw	112	; case 64
  6584  006230  B4D8               	btfsc	status,2,c
  6585  006232  0012               	return	
  6586  006234  0A10               	xorlw	16	; case 80
  6587  006236  B4D8               	btfsc	status,2,c
  6588  006238  0012               	return	
  6589  00623A  0A30               	xorlw	48	; case 96
  6590  00623C  B4D8               	btfsc	status,2,c
  6591  00623E  D7E6               	goto	l2473
  6592  006240  0A10               	xorlw	16	; case 112
  6593  006242  B4D8               	btfsc	status,2,c
  6594  006244  0012               	return	
  6595  006246  0AE0               	xorlw	224	; case 144
  6596  006248  0012               	return	
  6597  00624A                     __end_of_bootloader_run:
  6598                           	opt stack 0
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           intcon	equ	0xFF2
  6606                           intcon3	equ	0xFF0
  6607                           postinc0	equ	0xFEE
  6608                           wreg	equ	0xFE8
  6609                           postdec1	equ	0xFE5
  6610                           plusw1	equ	0xFE3
  6611                           fsr1h	equ	0xFE2
  6612                           fsr1l	equ	0xFE1
  6613                           indf2	equ	0xFDF
  6614                           postinc2	equ	0xFDE
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           
  6620 ;; *************** function __bootloader_verify_file *****************
  6621 ;; Defined at:
  6622 ;;		line 185 in file "bootloader.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;		None
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  root           32   22[BANK0 ] struct .
  6627 ;;  address32       4   59[BANK0 ] unsigned long 
  6628 ;;  return_value    4   55[BANK0 ] unsigned long 
  6629 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6641 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6642 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;Total ram usage:       49 bytes
  6644 ;; Hardware stack levels used:    1
  6645 ;; Hardware stack levels required when called:    8
  6646 ;; This function calls:
  6647 ;;		__bootloader_check_address
  6648 ;;		_fat_get_file_information
  6649 ;;		_fat_get_file_size
  6650 ;;		_fat_read_from_file_fast
  6651 ;;		_parseHexFileEntry
  6652 ;; This function is called by:
  6653 ;;		_bootloader_run
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text24
  6658  000C0E                     __ptext24:
  6659                           	opt stack 0
  6660  000C0E                     __bootloader_verify_file:
  6661                           	opt stack 21
  6662                           
  6663                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  6664                           
  6665                           ;incstack = 0
  6666  000C0E  0E00               	movlw	0
  6667  000C10  0100               	movlb	0	; () banked
  6668  000C12  6FED               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6669  000C14  0E00               	movlw	0
  6670  000C16  6FEE               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6671  000C18  0E00               	movlw	0
  6672  000C1A  6FEF               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6673  000C1C  0E00               	movlw	0
  6674  000C1E  6FF0               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  6678  000C20  517F               	movf	_hex_file_offset& (0+255),w,b
  6679  000C22  1180               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6680  000C24  1181               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6681  000C26  1182               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6682  000C28  A4D8               	btfss	status,2,c
  6683  000C2A  D010               	goto	l2496
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  6687  000C2C  0ECC               	movlw	low __bootloader_verify_file@root
  6688  000C2E  6E30               	movwf	fat_get_file_information@data,c
  6689  000C30  0E00               	movlw	high __bootloader_verify_file@root
  6690  000C32  6E31               	movwf	fat_get_file_information@data+1,c
  6691  000C34  51FF               	movf	_file_number& (0+255),w,b
  6692  000C36  ECDE  F02F         	call	_fat_get_file_information
  6693                           
  6694                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  6695  000C3A  C0E6  F0B0         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6696  000C3E  C0E7  F0B1         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6697                           
  6698                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  6699  000C42  0E00               	movlw	0
  6700  000C44  0100               	movlb	0	; () banked
  6701  000C46  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6702  000C48  0E00               	movlw	0
  6703  000C4A  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  6704  000C4C                     l2496:
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  6708                           
  6709                           ; BSR set to: 0
  6710  000C4C  51FF               	movf	_file_number& (0+255),w,b
  6711  000C4E  EC4F  F030         	call	_fat_get_file_size
  6712  000C52  C036  F07B         	movff	?_fat_get_file_size,_hex_file_size
  6713  000C56  C037  F07C         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6714  000C5A  C038  F07D         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6715  000C5E  C039  F07E         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6716                           
  6717                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6718  000C62  0E00               	movlw	0
  6719  000C64  0100               	movlb	0	; () banked
  6720  000C66  6FEC               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6721  000C68                     l14107:
  6722                           
  6723                           ; BSR set to: 0
  6724  000C68  0E0F               	movlw	15
  6725  000C6A  65EC               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6726  000C6C  D001               	goto	l2497
  6727  000C6E  0012               	return	
  6728  000C70                     l2497:
  6729                           
  6730                           ; BSR set to: 0
  6731                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  6732                           
  6733                           ; BSR set to: 0
  6734  000C70  C07F  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  6735  000C74  C080  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6736  000C78  C081  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6737  000C7C  C082  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6738  000C80  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  6739  000C82  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6740  000C84  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6741  000C86  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6742  000C88  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  6743  000C8A  0E00               	movlw	0
  6744  000C8C  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6745  000C8E  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6746  000C90  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6747  000C92  517B               	movf	_hex_file_size& (0+255),w,b
  6748  000C94  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  6749  000C96  6FC8               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6750  000C98  517C               	movf	(_hex_file_size+1)& (0+255),w,b
  6751  000C9A  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6752  000C9C  6FC9               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6753  000C9E  517D               	movf	(_hex_file_size+2)& (0+255),w,b
  6754  000CA0  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6755  000CA2  6FCA               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6756  000CA4  517E               	movf	(_hex_file_size+3)& (0+255),w,b
  6757  000CA6  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6758  000CA8  6FCB               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6759  000CAA  51CB               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6760  000CAC  11CA               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6761  000CAE  11C9               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6762  000CB0  E104               	bnz	u11930
  6763  000CB2  0E32               	movlw	50
  6764  000CB4  5DC8               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6765  000CB6  A0D8               	btfss	status,0,c
  6766  000CB8  D01F               	goto	l2499
  6767  000CBA                     u11930:
  6768                           
  6769                           ; BSR set to: 0
  6770                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6771  000CBA  C07F  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6772  000CBE  C080  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6773  000CC2  C081  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6774  000CC6  C082  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6775  000CCA  0E32               	movlw	50
  6776  000CCC  6E46               	movwf	fat_read_from_file_fast@length,c
  6777  000CCE  0E00               	movlw	0
  6778  000CD0  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6779  000CD2  0E00               	movlw	0
  6780  000CD4  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6781  000CD6  0E00               	movlw	0
  6782  000CD8  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6783  000CDA  0E80               	movlw	low _file_buffer
  6784  000CDC  6E4A               	movwf	fat_read_from_file_fast@data,c
  6785  000CDE  0E02               	movlw	high _file_buffer
  6786  000CE0  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6787  000CE2  0EB0               	movlw	low _fast_read_cluster
  6788  000CE4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6789  000CE6  0E00               	movlw	high _fast_read_cluster
  6790  000CE8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6791  000CEA  0EAE               	movlw	low _fast_read_cluster_number
  6792  000CEC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6793  000CEE  0E00               	movlw	high _fast_read_cluster_number
  6794  000CF0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6795  000CF2  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6796                           
  6797                           ;bootloader.c: 211: }
  6798  000CF6  D034               	goto	l2500
  6799  000CF8                     l2499:
  6800                           
  6801                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6802  000CF8  C07F  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6803  000CFC  C080  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6804  000D00  C081  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6805  000D04  C082  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6806  000D08  C07F  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  6807  000D0C  C080  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6808  000D10  C081  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6809  000D14  C082  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6810  000D18  0100               	movlb	0	; () banked
  6811  000D1A  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  6812  000D1C  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6813  000D1E  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6814  000D20  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6815  000D22  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  6816  000D24  0E00               	movlw	0
  6817  000D26  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6818  000D28  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6819  000D2A  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6820  000D2C  517B               	movf	_hex_file_size& (0+255),w,b
  6821  000D2E  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  6822  000D30  6E46               	movwf	fat_read_from_file_fast@length,c
  6823  000D32  517C               	movf	(_hex_file_size+1)& (0+255),w,b
  6824  000D34  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6825  000D36  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6826  000D38  517D               	movf	(_hex_file_size+2)& (0+255),w,b
  6827  000D3A  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6828  000D3C  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6829  000D3E  517E               	movf	(_hex_file_size+3)& (0+255),w,b
  6830  000D40  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6831  000D42  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6832  000D44  0E80               	movlw	low _file_buffer
  6833  000D46  6E4A               	movwf	fat_read_from_file_fast@data,c
  6834  000D48  0E02               	movlw	high _file_buffer
  6835  000D4A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6836  000D4C  0EB0               	movlw	low _fast_read_cluster
  6837  000D4E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6838  000D50  0E00               	movlw	high _fast_read_cluster
  6839  000D52  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6840  000D54  0EAE               	movlw	low _fast_read_cluster_number
  6841  000D56  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6842  000D58  0E00               	movlw	high _fast_read_cluster_number
  6843  000D5A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6844  000D5C  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6845  000D60                     l2500:
  6846                           
  6847                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6848  000D60  0E80               	movlw	low _file_buffer
  6849  000D62  6E0C               	movwf	parseHexFileEntry@data,c
  6850  000D64  0E02               	movlw	high _file_buffer
  6851  000D66  6E0D               	movwf	parseHexFileEntry@data+1,c
  6852  000D68  0E00               	movlw	0
  6853  000D6A  6E0E               	movwf	parseHexFileEntry@offset,c
  6854  000D6C  0E00               	movlw	0
  6855  000D6E  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6856  000D70  0E00               	movlw	0
  6857  000D72  6E10               	movwf	parseHexFileEntry@offset+2,c
  6858  000D74  0E00               	movlw	0
  6859  000D76  6E11               	movwf	parseHexFileEntry@offset+3,c
  6860  000D78  0ECB               	movlw	low _hex_file_entry
  6861  000D7A  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6862  000D7C  0E01               	movlw	high _hex_file_entry
  6863  000D7E  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6864  000D80  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6865  000D84  C00C  F0ED         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6866  000D88  C00D  F0EE         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6867  000D8C  C00E  F0EF         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6868  000D90  C00F  F0F0         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6869                           
  6870                           ;bootloader.c: 222: ++hex_file_entries;
  6871  000D94  0101               	movlb	1	; () banked
  6872  000D96  4B69               	infsnz	_hex_file_entries& (0+255),f,b
  6873  000D98  2B6A               	incf	(_hex_file_entries+1)& (0+255),f,b
  6874                           
  6875                           ; BSR set to: 1
  6876                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6877  000D9A  0E04               	movlw	4
  6878  000D9C  19CF               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6879  000D9E  A4D8               	btfss	status,2,c
  6880  000DA0  D01C               	goto	l2501
  6881                           
  6882                           ; BSR set to: 1
  6883                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6884  000DA2  51D0               	movf	(_hex_file_entry+5)& (0+255),w,b
  6885  000DA4  6F3F               	movwf	_extended_linear_address& (0+255),b
  6886  000DA6  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  6887  000DA8  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  6888  000DAA  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  6889                           
  6890                           ; BSR set to: 1
  6891                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6892  000DAC  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6893  000DB0  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6894  000DB4  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6895  000DB8  6B3F               	clrf	_extended_linear_address& (0+255),b
  6896                           
  6897                           ; BSR set to: 1
  6898                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  6899  000DBA  51D1               	movf	(_hex_file_entry+6)& (0+255),w,b
  6900  000DBC  133F               	iorwf	_extended_linear_address& (0+255),f,b
  6901                           
  6902                           ; BSR set to: 1
  6903                           ;bootloader.c: 230: extended_linear_address <<= 8;
  6904  000DBE  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6905  000DC2  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6906  000DC6  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6907  000DCA  6B3F               	clrf	_extended_linear_address& (0+255),b
  6908                           
  6909                           ; BSR set to: 1
  6910                           ;bootloader.c: 231: extended_linear_address <<= 8;
  6911  000DCC  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6912  000DD0  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6913  000DD4  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6914  000DD8  6B3F               	clrf	_extended_linear_address& (0+255),b
  6915  000DDA                     l2501:
  6916                           
  6917                           ; BSR set to: 1
  6918                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  6919                           
  6920                           ; BSR set to: 1
  6921  000DDA  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
  6922  000DDC  A4D8               	btfss	status,2,c
  6923  000DDE  D05D               	goto	l2505
  6924                           
  6925                           ; BSR set to: 1
  6926                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6927  000DE0  51CD               	movf	(_hex_file_entry+2)& (0+255),w,b
  6928  000DE2  253F               	addwf	_extended_linear_address& (0+255),w,b
  6929  000DE4  0100               	movlb	0	; () banked
  6930  000DE6  6FF1               	movwf	__bootloader_verify_file@address32& (0+255),b
  6931  000DE8  0101               	movlb	1	; () banked
  6932  000DEA  51CE               	movf	(_hex_file_entry+3)& (0+255),w,b
  6933  000DEC  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6934  000DEE  0100               	movlb	0	; () banked
  6935  000DF0  6FF2               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6936  000DF2  0E00               	movlw	0
  6937  000DF4  0101               	movlb	1	; () banked
  6938  000DF6  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6939  000DF8  0100               	movlb	0	; () banked
  6940  000DFA  6FF3               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6941  000DFC  0E00               	movlw	0
  6942  000DFE  0101               	movlb	1	; () banked
  6943  000E00  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6944  000E02  0100               	movlb	0	; () banked
  6945  000E04  6FF4               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6946                           
  6947                           ;bootloader.c: 241: if(address32<file_minimum_address)
  6948  000E06  0101               	movlb	1	; () banked
  6949  000E08  5147               	movf	_file_minimum_address& (0+255),w,b
  6950  000E0A  0100               	movlb	0	; () banked
  6951  000E0C  5DF1               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6952  000E0E  0101               	movlb	1	; () banked
  6953  000E10  5148               	movf	(_file_minimum_address+1)& (0+255),w,b
  6954  000E12  0100               	movlb	0	; () banked
  6955  000E14  59F2               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6956  000E16  0101               	movlb	1	; () banked
  6957  000E18  5149               	movf	(_file_minimum_address+2)& (0+255),w,b
  6958  000E1A  0100               	movlb	0	; () banked
  6959  000E1C  59F3               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6960  000E1E  0101               	movlb	1	; () banked
  6961  000E20  514A               	movf	(_file_minimum_address+3)& (0+255),w,b
  6962  000E22  0100               	movlb	0	; () banked
  6963  000E24  59F4               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6964  000E26  B0D8               	btfsc	status,0,c
  6965  000E28  D008               	goto	l2503
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  6969  000E2A  C0F1  F147         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6970  000E2E  C0F2  F148         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6971  000E32  C0F3  F149         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6972  000E36  C0F4  F14A         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6973  000E3A                     l2503:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  6977                           
  6978                           ; BSR set to: 0
  6979  000E3A  51F1               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6980  000E3C  0101               	movlb	1	; () banked
  6981  000E3E  5D43               	subwf	_file_maximum_address& (0+255),w,b
  6982  000E40  0100               	movlb	0	; () banked
  6983  000E42  51F2               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6984  000E44  0101               	movlb	1	; () banked
  6985  000E46  5944               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6986  000E48  0100               	movlb	0	; () banked
  6987  000E4A  51F3               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6988  000E4C  0101               	movlb	1	; () banked
  6989  000E4E  5945               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6990  000E50  0100               	movlb	0	; () banked
  6991  000E52  51F4               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6992  000E54  0101               	movlb	1	; () banked
  6993  000E56  5946               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6994  000E58  B0D8               	btfsc	status,0,c
  6995  000E5A  D008               	goto	l2504
  6996                           
  6997                           ; BSR set to: 1
  6998                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  6999  000E5C  C0F1  F143         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7000  000E60  C0F2  F144         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7001  000E64  C0F3  F145         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7002  000E68  C0F4  F146         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7003  000E6C                     l2504:
  7004                           
  7005                           ; BSR set to: 1
  7006                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7007                           
  7008                           ; BSR set to: 1
  7009  000E6C  C0F1  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7010  000E70  C0F2  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7011  000E74  C0F3  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7012  000E78  C0F4  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7013  000E7C  C1CB  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7014  000E80  EC81  F025         	call	__bootloader_check_address	;wreg free
  7015  000E84  0AFF               	xorlw	255
  7016  000E86  A4D8               	btfss	status,2,c
  7017  000E88  D008               	goto	l2505
  7018                           
  7019                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  7020  000E8A  0E0B               	movlw	11
  7021  000E8C  0100               	movlb	0	; () banked
  7022  000E8E  6F93               	movwf	_last_error& (0+255),b
  7023                           
  7024                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7025  000E90  0E50               	movlw	80
  7026  000E92  6F66               	movwf	(_os+6)& (0+255),b
  7027                           
  7028                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7029  000E94  0E50               	movlw	80
  7030  000E96  6F67               	movwf	(_os+7)& (0+255),b
  7031                           
  7032                           ;bootloader.c: 258: break;
  7033  000E98  0012               	return	
  7034  000E9A                     l2505:
  7035                           
  7036                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  7037                           
  7038                           ; BSR set to: 0
  7039                           
  7040                           ; BSR set to: 0
  7041  000E9A  0100               	movlb	0	; () banked
  7042  000E9C  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7043  000E9E  11EE               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7044  000EA0  11EF               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7045  000EA2  11F0               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7046  000EA4  A4D8               	btfss	status,2,c
  7047  000EA6  D027               	goto	l2506
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  7051  000EA8  C169  F167         	movff	_hex_file_entries,_total_hex_file_entries
  7052  000EAC  C16A  F168         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;bootloader.c: 267: hex_file_entries = 0;
  7056  000EB0  0E00               	movlw	0
  7057  000EB2  0101               	movlb	1	; () banked
  7058  000EB4  6F6A               	movwf	(_hex_file_entries+1)& (0+255),b
  7059  000EB6  0E00               	movlw	0
  7060  000EB8  6F69               	movwf	_hex_file_entries& (0+255),b
  7061                           
  7062                           ;bootloader.c: 268: hex_file_offset = 0;
  7063  000EBA  0E00               	movlw	0
  7064  000EBC  0100               	movlb	0	; () banked
  7065  000EBE  6F7F               	movwf	_hex_file_offset& (0+255),b
  7066  000EC0  0E00               	movlw	0
  7067  000EC2  6F80               	movwf	(_hex_file_offset+1)& (0+255),b
  7068  000EC4  0E00               	movlw	0
  7069  000EC6  6F81               	movwf	(_hex_file_offset+2)& (0+255),b
  7070  000EC8  0E00               	movlw	0
  7071  000ECA  6F82               	movwf	(_hex_file_offset+3)& (0+255),b
  7072                           
  7073                           ;bootloader.c: 269: extended_linear_address = 0;
  7074  000ECC  0E00               	movlw	0
  7075  000ECE  0101               	movlb	1	; () banked
  7076  000ED0  6F3F               	movwf	_extended_linear_address& (0+255),b
  7077  000ED2  0E00               	movlw	0
  7078  000ED4  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
  7079  000ED6  0E00               	movlw	0
  7080  000ED8  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
  7081  000EDA  0E00               	movlw	0
  7082  000EDC  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
  7083                           
  7084                           ;bootloader.c: 270: flash_pages_written = 0;
  7085  000EDE  0E00               	movlw	0
  7086  000EE0  6F66               	movwf	(_flash_pages_written+1)& (0+255),b
  7087  000EE2  0E00               	movlw	0
  7088  000EE4  6F65               	movwf	_flash_pages_written& (0+255),b
  7089                           
  7090                           ;bootloader.c: 271: start_from_byte_next = 0;
  7091  000EE6  0E00               	movlw	0
  7092  000EE8  0100               	movlb	0	; () banked
  7093  000EEA  6F92               	movwf	_start_from_byte_next& (0+255),b
  7094                           
  7095                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7096  000EEC  0E40               	movlw	64
  7097  000EEE  6F66               	movwf	(_os+6)& (0+255),b
  7098                           
  7099                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7100  000EF0  0E40               	movlw	64
  7101  000EF2  6F67               	movwf	(_os+7)& (0+255),b
  7102                           
  7103                           ;bootloader.c: 275: break;
  7104  000EF4  0012               	return	
  7105  000EF6                     l2506:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  7109                           
  7110                           ; BSR set to: 0
  7111  000EF6  0EF1               	movlw	241
  7112  000EF8  5DED               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7113  000EFA  0EFF               	movlw	255
  7114  000EFC  59EE               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7115  000EFE  0EFF               	movlw	255
  7116  000F00  59EF               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7117  000F02  0EFF               	movlw	255
  7118  000F04  59F0               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7119  000F06  A0D8               	btfss	status,0,c
  7120  000F08  D007               	goto	l2508
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  7124  000F0A  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7125  000F0C  0B0F               	andlw	15
  7126  000F0E  6F93               	movwf	_last_error& (0+255),b
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7130  000F10  0E50               	movlw	80
  7131  000F12  6F66               	movwf	(_os+6)& (0+255),b
  7132                           
  7133                           ; BSR set to: 0
  7134                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7135  000F14  0E50               	movlw	80
  7136  000F16  D7ED               	goto	L1
  7137  000F18                     l2508:
  7138                           
  7139                           ; BSR set to: 0
  7140                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  7141                           
  7142                           ; BSR set to: 0
  7143  000F18  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7144  000F1A  277F               	addwf	_hex_file_offset& (0+255),f,b
  7145  000F1C  51EE               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7146  000F1E  2380               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7147  000F20  51EF               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7148  000F22  2381               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7149  000F24  51F0               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7150  000F26  2382               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7151                           
  7152                           ; BSR set to: 0
  7153                           
  7154                           ; BSR set to: 0
  7155                           
  7156                           ; BSR set to: 0
  7157  000F28  2BEC               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7158  000F2A  D69E               	goto	l14107
  7159  000F2C                     __end_of__bootloader_verify_file:
  7160                           	opt stack 0
  7161                           tblptru	equ	0xFF8
  7162                           tblptrh	equ	0xFF7
  7163                           tblptrl	equ	0xFF6
  7164                           tablat	equ	0xFF5
  7165                           prodh	equ	0xFF4
  7166                           prodl	equ	0xFF3
  7167                           intcon	equ	0xFF2
  7168                           intcon3	equ	0xFF0
  7169                           postinc0	equ	0xFEE
  7170                           wreg	equ	0xFE8
  7171                           postdec1	equ	0xFE5
  7172                           plusw1	equ	0xFE3
  7173                           fsr1h	equ	0xFE2
  7174                           fsr1l	equ	0xFE1
  7175                           indf2	equ	0xFDF
  7176                           postinc2	equ	0xFDE
  7177                           plusw2	equ	0xFDB
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function __bootloader_program *****************
  7183 ;; Defined at:
  7184 ;;		line 294 in file "bootloader.c"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;		None
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  root           32   28[BANK0 ] struct .
  7189 ;;  address32       4   64[BANK0 ] unsigned long 
  7190 ;;  return_value    4   60[BANK0 ] unsigned long 
  7191 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7192 ;;  cntr            2   69[BANK0 ] unsigned int 
  7193 ;;  address_with    2   26[BANK0 ] unsigned int 
  7194 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7195 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7196 ;;		 -> pageBuffer(1024), 
  7197 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;Total ram usage:       59 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    8
  7214 ;; This function calls:
  7215 ;;		__bootloader_check_address
  7216 ;;		_fat_get_file_information
  7217 ;;		_fat_read_from_file_fast
  7218 ;;		_internalFlash_addressWithinPage
  7219 ;;		_internalFlash_erasePage
  7220 ;;		_internalFlash_getBuffer
  7221 ;;		_internalFlash_pageFromAddress
  7222 ;;		_internalFlash_readPage
  7223 ;;		_internalFlash_writePage
  7224 ;;		_parseHexFileEntry
  7225 ;; This function is called by:
  7226 ;;		_bootloader_run
  7227 ;; This function uses a non-reentrant model
  7228 ;;
  7229                           
  7230                           	psect	text25
  7231  00085A                     __ptext25:
  7232                           	opt stack 0
  7233  00085A                     __bootloader_program:
  7234                           	opt stack 21
  7235                           
  7236                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;incstack = 0
  7240  00085A  0E00               	movlw	0
  7241  00085C  0100               	movlb	0	; () banked
  7242  00085E  6FFE               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7243  000860  0E00               	movlw	0
  7244  000862  6FFD               	movwf	__bootloader_program@page_to_write& (0+255),b
  7245                           
  7246                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  7247  000864  0E00               	movlw	0
  7248  000866  6FF2               	movwf	__bootloader_program@return_value& (0+255),b
  7249  000868  0E00               	movlw	0
  7250  00086A  6FF3               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7251  00086C  0E00               	movlw	0
  7252  00086E  6FF4               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7253  000870  0E00               	movlw	0
  7254  000872  6FF5               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  7258  000874  517F               	movf	_hex_file_offset& (0+255),w,b
  7259  000876  1180               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7260  000878  1181               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7261  00087A  1182               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7262  00087C  A4D8               	btfss	status,2,c
  7263  00087E  D010               	goto	l2513
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  7267  000880  0ED2               	movlw	low __bootloader_program@root
  7268  000882  6E30               	movwf	fat_get_file_information@data,c
  7269  000884  0E00               	movlw	high __bootloader_program@root
  7270  000886  6E31               	movwf	fat_get_file_information@data+1,c
  7271  000888  51FF               	movf	_file_number& (0+255),w,b
  7272  00088A  ECDE  F02F         	call	_fat_get_file_information
  7273                           
  7274                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  7275  00088E  C0EC  F0B0         	movff	__bootloader_program@root+26,_fast_read_cluster
  7276  000892  C0ED  F0B1         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7277                           
  7278                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  7279  000896  0E00               	movlw	0
  7280  000898  0100               	movlb	0	; () banked
  7281  00089A  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7282  00089C  0E00               	movlw	0
  7283  00089E  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  7284  0008A0                     l2513:
  7285                           
  7286                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  7287                           
  7288                           ; BSR set to: 0
  7289                           
  7290                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  7291                           
  7292                           ; BSR set to: 0
  7293  0008A0  C07F  F0C4         	movff	_hex_file_offset,??__bootloader_program
  7294  0008A4  C080  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  7295  0008A8  C081  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  7296  0008AC  C082  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  7297  0008B0  0100               	movlb	0	; () banked
  7298  0008B2  1FC4               	comf	??__bootloader_program& (0+255),f,b
  7299  0008B4  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  7300  0008B6  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  7301  0008B8  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  7302  0008BA  2BC4               	incf	??__bootloader_program& (0+255),f,b
  7303  0008BC  0E00               	movlw	0
  7304  0008BE  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7305  0008C0  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7306  0008C2  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7307  0008C4  517B               	movf	_hex_file_size& (0+255),w,b
  7308  0008C6  25C4               	addwf	??__bootloader_program& (0+255),w,b
  7309  0008C8  6FC8               	movwf	(??__bootloader_program+4)& (0+255),b
  7310  0008CA  517C               	movf	(_hex_file_size+1)& (0+255),w,b
  7311  0008CC  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7312  0008CE  6FC9               	movwf	(??__bootloader_program+5)& (0+255),b
  7313  0008D0  517D               	movf	(_hex_file_size+2)& (0+255),w,b
  7314  0008D2  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7315  0008D4  6FCA               	movwf	(??__bootloader_program+6)& (0+255),b
  7316  0008D6  517E               	movf	(_hex_file_size+3)& (0+255),w,b
  7317  0008D8  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7318  0008DA  6FCB               	movwf	(??__bootloader_program+7)& (0+255),b
  7319  0008DC  51CB               	movf	(??__bootloader_program+7)& (0+255),w,b
  7320  0008DE  11CA               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7321  0008E0  11C9               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7322  0008E2  E104               	bnz	u12030
  7323  0008E4  0E32               	movlw	50
  7324  0008E6  5DC8               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7325  0008E8  A0D8               	btfss	status,0,c
  7326  0008EA  D01F               	goto	l2515
  7327  0008EC                     u12030:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7331  0008EC  C07F  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7332  0008F0  C080  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7333  0008F4  C081  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7334  0008F8  C082  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7335  0008FC  0E32               	movlw	50
  7336  0008FE  6E46               	movwf	fat_read_from_file_fast@length,c
  7337  000900  0E00               	movlw	0
  7338  000902  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7339  000904  0E00               	movlw	0
  7340  000906  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7341  000908  0E00               	movlw	0
  7342  00090A  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7343  00090C  0E80               	movlw	low _file_buffer
  7344  00090E  6E4A               	movwf	fat_read_from_file_fast@data,c
  7345  000910  0E02               	movlw	high _file_buffer
  7346  000912  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7347  000914  0EB0               	movlw	low _fast_read_cluster
  7348  000916  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7349  000918  0E00               	movlw	high _fast_read_cluster
  7350  00091A  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7351  00091C  0EAE               	movlw	low _fast_read_cluster_number
  7352  00091E  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7353  000920  0E00               	movlw	high _fast_read_cluster_number
  7354  000922  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7355  000924  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  7356                           
  7357                           ;bootloader.c: 325: }
  7358  000928  D034               	goto	l2516
  7359  00092A                     l2515:
  7360                           
  7361                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7362  00092A  C07F  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7363  00092E  C080  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7364  000932  C081  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7365  000936  C082  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7366  00093A  C07F  F0C4         	movff	_hex_file_offset,??__bootloader_program
  7367  00093E  C080  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  7368  000942  C081  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  7369  000946  C082  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  7370  00094A  0100               	movlb	0	; () banked
  7371  00094C  1FC4               	comf	??__bootloader_program& (0+255),f,b
  7372  00094E  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  7373  000950  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  7374  000952  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  7375  000954  2BC4               	incf	??__bootloader_program& (0+255),f,b
  7376  000956  0E00               	movlw	0
  7377  000958  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7378  00095A  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7379  00095C  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7380  00095E  517B               	movf	_hex_file_size& (0+255),w,b
  7381  000960  25C4               	addwf	??__bootloader_program& (0+255),w,b
  7382  000962  6E46               	movwf	fat_read_from_file_fast@length,c
  7383  000964  517C               	movf	(_hex_file_size+1)& (0+255),w,b
  7384  000966  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7385  000968  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7386  00096A  517D               	movf	(_hex_file_size+2)& (0+255),w,b
  7387  00096C  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7388  00096E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7389  000970  517E               	movf	(_hex_file_size+3)& (0+255),w,b
  7390  000972  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7391  000974  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7392  000976  0E80               	movlw	low _file_buffer
  7393  000978  6E4A               	movwf	fat_read_from_file_fast@data,c
  7394  00097A  0E02               	movlw	high _file_buffer
  7395  00097C  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7396  00097E  0EB0               	movlw	low _fast_read_cluster
  7397  000980  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7398  000982  0E00               	movlw	high _fast_read_cluster
  7399  000984  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7400  000986  0EAE               	movlw	low _fast_read_cluster_number
  7401  000988  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7402  00098A  0E00               	movlw	high _fast_read_cluster_number
  7403  00098C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7404  00098E  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  7405  000992                     l2516:
  7406                           
  7407                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7408  000992  0E80               	movlw	low _file_buffer
  7409  000994  6E0C               	movwf	parseHexFileEntry@data,c
  7410  000996  0E02               	movlw	high _file_buffer
  7411  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  7412  00099A  0E00               	movlw	0
  7413  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  7414  00099E  0E00               	movlw	0
  7415  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7416  0009A2  0E00               	movlw	0
  7417  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  7418  0009A6  0E00               	movlw	0
  7419  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  7420  0009AA  0ECB               	movlw	low _hex_file_entry
  7421  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7422  0009AE  0E01               	movlw	high _hex_file_entry
  7423  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7424  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7425  0009B6  C00C  F0F2         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7426  0009BA  C00D  F0F3         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7427  0009BE  C00E  F0F4         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7428  0009C2  C00F  F0F5         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7429                           
  7430                           ;bootloader.c: 336: ++hex_file_entries;
  7431  0009C6  0101               	movlb	1	; () banked
  7432  0009C8  4B69               	infsnz	_hex_file_entries& (0+255),f,b
  7433  0009CA  2B6A               	incf	(_hex_file_entries+1)& (0+255),f,b
  7434                           
  7435                           ; BSR set to: 1
  7436                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  7437  0009CC  0EF1               	movlw	241
  7438  0009CE  0100               	movlb	0	; () banked
  7439  0009D0  5DF2               	subwf	__bootloader_program@return_value& (0+255),w,b
  7440  0009D2  0EFF               	movlw	255
  7441  0009D4  59F3               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7442  0009D6  0EFF               	movlw	255
  7443  0009D8  59F4               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7444  0009DA  0EFF               	movlw	255
  7445  0009DC  59F5               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7446  0009DE  A0D8               	btfss	status,0,c
  7447  0009E0  D005               	goto	l2517
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7451  0009E2  0E50               	movlw	80
  7452  0009E4  6F66               	movwf	(_os+6)& (0+255),b
  7453                           
  7454                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7455  0009E6  0E50               	movlw	80
  7456  0009E8  6F67               	movwf	(_os+7)& (0+255),b
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;bootloader.c: 344: return;
  7460  0009EA  0012               	return	
  7461  0009EC                     l2517:
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  7465                           
  7466                           ; BSR set to: 0
  7467  0009EC  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  7468  0009EE  277F               	addwf	_hex_file_offset& (0+255),f,b
  7469  0009F0  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7470  0009F2  2380               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7471  0009F4  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7472  0009F6  2381               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7473  0009F8  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7474  0009FA  2382               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7475                           
  7476                           ; BSR set to: 0
  7477                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  7478  0009FC  D0FC               	goto	l2520
  7479  0009FE                     
  7480                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  7481                           
  7482                           ; BSR set to: 0
  7483  0009FE  0101               	movlb	1	; () banked
  7484  000A00  51D0               	movf	(_hex_file_entry+5)& (0+255),w,b
  7485  000A02  6F3F               	movwf	_extended_linear_address& (0+255),b
  7486  000A04  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  7487  000A06  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  7488  000A08  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  7489                           
  7490                           ; BSR set to: 1
  7491                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7492  000A0A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7493  000A0E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7494  000A12  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7495  000A16  6B3F               	clrf	_extended_linear_address& (0+255),b
  7496                           
  7497                           ; BSR set to: 1
  7498                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  7499  000A18  51D1               	movf	(_hex_file_entry+6)& (0+255),w,b
  7500  000A1A  133F               	iorwf	_extended_linear_address& (0+255),f,b
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;bootloader.c: 361: extended_linear_address <<= 8;
  7504  000A1C  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7505  000A20  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7506  000A24  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7507  000A28  6B3F               	clrf	_extended_linear_address& (0+255),b
  7508                           
  7509                           ; BSR set to: 1
  7510                           ;bootloader.c: 362: extended_linear_address <<= 8;
  7511  000A2A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7512  000A2E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7513  000A32  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7514  000A36  6B3F               	clrf	_extended_linear_address& (0+255),b
  7515                           
  7516                           ; BSR set to: 1
  7517                           ;bootloader.c: 364: break;
  7518                           
  7519                           ;bootloader.c: 363: continue;
  7520  000A38  D733               	goto	l2513
  7521  000A3A                     l2524:
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  7525  000A3A  C092  F0FA         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7526                           
  7527                           ; BSR set to: 1
  7528                           ;bootloader.c: 371: start_from_byte_next = 0;
  7529  000A3E  0E00               	movlw	0
  7530  000A40  0100               	movlb	0	; () banked
  7531  000A42  6F92               	movwf	_start_from_byte_next& (0+255),b
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  7535  000A44  0101               	movlb	1	; () banked
  7536  000A46  51CD               	movf	(_hex_file_entry+2)& (0+255),w,b
  7537  000A48  253F               	addwf	_extended_linear_address& (0+255),w,b
  7538  000A4A  0100               	movlb	0	; () banked
  7539  000A4C  6FF6               	movwf	__bootloader_program@address32& (0+255),b
  7540  000A4E  0101               	movlb	1	; () banked
  7541  000A50  51CE               	movf	(_hex_file_entry+3)& (0+255),w,b
  7542  000A52  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7543  000A54  0100               	movlb	0	; () banked
  7544  000A56  6FF7               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7545  000A58  0E00               	movlw	0
  7546  000A5A  0101               	movlb	1	; () banked
  7547  000A5C  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7548  000A5E  0100               	movlb	0	; () banked
  7549  000A60  6FF8               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7550  000A62  0E00               	movlw	0
  7551  000A64  0101               	movlb	1	; () banked
  7552  000A66  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7553  000A68  0100               	movlb	0	; () banked
  7554  000A6A  6FF9               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7558  000A6C  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7559  000A6E  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  7560  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7561  000A72  0E00               	movlw	0
  7562  000A74  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7563  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7564  000A78  0E00               	movlw	0
  7565  000A7A  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7566  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7567  000A7E  0E00               	movlw	0
  7568  000A80  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7569  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7570  000A84  EC4D  F039         	call	_internalFlash_pageFromAddress	;wreg free
  7571  000A88  C001  F0CE         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7572  000A8C  C002  F0CF         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7573                           
  7574                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7575  000A90  0100               	movlb	0	; () banked
  7576  000A92  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7577  000A94  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  7578  000A96  6E01               	movwf	__bootloader_check_address@address,c
  7579  000A98  0E00               	movlw	0
  7580  000A9A  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7581  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  7582  000A9E  0E00               	movlw	0
  7583  000AA0  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7584  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  7585  000AA4  0E00               	movlw	0
  7586  000AA6  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7587  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  7588  000AAA  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7589  000AAC  0800               	sublw	0
  7590  000AAE  0101               	movlb	1	; () banked
  7591  000AB0  25CB               	addwf	_hex_file_entry& (0+255),w,b
  7592  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  7593  000AB4  EC81  F025         	call	__bootloader_check_address	;wreg free
  7594  000AB8  0900               	iorlw	0
  7595  000ABA  A4D8               	btfss	status,2,c
  7596  000ABC  D6F1               	goto	l2513
  7597                           
  7598                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  7599                           
  7600                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  7601  000ABE  0100               	movlb	0	; () banked
  7602  000AC0  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7603  000AC2  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7604  000AC4  A4D8               	btfss	status,2,c
  7605  000AC6  D010               	goto	l2526
  7606                           
  7607                           ; BSR set to: 0
  7608                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  7609  000AC8  C0CE  F0FD         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7610  000ACC  C0CF  F0FE         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  7614  000AD0  C0FD  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7615  000AD4  C0FE  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7616  000AD8  EC1C  F036         	call	_internalFlash_readPage	;wreg free
  7617                           
  7618                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  7619  000ADC  EC02  F03A         	call	_internalFlash_getBuffer	;wreg free
  7620  000AE0  C001  F0CC         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7621  000AE4  C002  F0CD         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7622  000AE8                     l2526:
  7623                           
  7624                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7625  000AE8  C0FA  F0FB         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7626  000AEC  0100               	movlb	0	; () banked
  7627  000AEE  6BFC               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7628  000AF0  D05D               	goto	l2527
  7629  000AF2                     
  7630                           ; BSR set to: 0
  7631                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7632                           
  7633                           ; BSR set to: 0
  7634  000AF2  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  7635  000AF4  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  7636  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7637  000AF8  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7638  000AFA  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7639  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7640  000AFE  0E00               	movlw	0
  7641  000B00  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7642  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7643  000B04  0E00               	movlw	0
  7644  000B06  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7645  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7646  000B0A  EC4D  F039         	call	_internalFlash_pageFromAddress	;wreg free
  7647  000B0E  0100               	movlb	0	; () banked
  7648  000B10  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7649  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7650  000B14  E12A               	bnz	l14239
  7651  000B16  51FE               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7652  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7653  000B1A  A4D8               	btfss	status,2,c
  7654  000B1C  D026               	goto	l2529
  7655                           
  7656                           ; BSR set to: 0
  7657                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7658  000B1E  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  7659  000B20  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  7660  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7661  000B24  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7662  000B26  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7663  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7664  000B2A  0E00               	movlw	0
  7665  000B2C  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7666  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7667  000B30  0E00               	movlw	0
  7668  000B32  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7669  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7670  000B36  C0FD  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7671  000B3A  C0FE  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7672  000B3E  EC1E  F032         	call	_internalFlash_addressWithinPage	;wreg free
  7673  000B42  C009  F0D0         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7674  000B46  C00A  F0D1         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7675                           
  7676                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  7677  000B4A  0ED0               	movlw	low (_hex_file_entry+5)
  7678  000B4C  0100               	movlb	0	; () banked
  7679  000B4E  25FB               	addwf	__bootloader_program@cntr& (0+255),w,b
  7680  000B50  6ED9               	movwf	fsr2l,c
  7681  000B52  0E01               	movlw	high (_hex_file_entry+5)
  7682  000B54  21FC               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7683  000B56  6EDA               	movwf	fsr2h,c
  7684  000B58  51D0               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7685  000B5A  25CC               	addwf	__bootloader_program@buffer& (0+255),w,b
  7686  000B5C  6EE1               	movwf	fsr1l,c
  7687  000B5E  51D1               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7688  000B60  21CD               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7689  000B62  6EE2               	movwf	fsr1h,c
  7690  000B64  CFDF FFE7          	movff	indf2,indf1
  7691                           
  7692                           ;bootloader.c: 401: }
  7693  000B68  D01E               	goto	l2530
  7694  000B6A                     l2529:
  7695  000B6A                     l14239:
  7696                           
  7697                           ; BSR set to: 0
  7698                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  7699  000B6A  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  7700  000B6C  5F7F               	subwf	_hex_file_offset& (0+255),f,b
  7701  000B6E  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7702  000B70  5B80               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7703  000B72  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7704  000B74  5B81               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7705  000B76  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7706  000B78  5B82               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;bootloader.c: 406: --hex_file_entries;
  7710  000B7A  0101               	movlb	1	; () banked
  7711  000B7C  0769               	decf	_hex_file_entries& (0+255),f,b
  7712  000B7E  A0D8               	btfss	status,0,c
  7713  000B80  076A               	decf	(_hex_file_entries+1)& (0+255),f,b
  7714                           
  7715                           ; BSR set to: 1
  7716                           ;bootloader.c: 408: start_from_byte_next = cntr;
  7717  000B82  C0FB  F092         	movff	__bootloader_program@cntr,_start_from_byte_next
  7718                           
  7719                           ; BSR set to: 1
  7720                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  7721  000B86  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7722  000B8A  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7723  000B8E  EC86  F030         	call	_internalFlash_erasePage	;wreg free
  7724                           
  7725                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  7726  000B92  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7727  000B96  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7728  000B9A  ECE6  F027         	call	_internalFlash_writePage	;wreg free
  7729                           
  7730                           ;bootloader.c: 412: ++flash_pages_written;
  7731  000B9E  0101               	movlb	1	; () banked
  7732  000BA0  4B65               	infsnz	_flash_pages_written& (0+255),f,b
  7733  000BA2  2B66               	incf	(_flash_pages_written+1)& (0+255),f,b
  7734                           
  7735                           ; BSR set to: 1
  7736                           ;bootloader.c: 414: return;
  7737  000BA4  0012               	return	
  7738  000BA6                     l2530:
  7739                           
  7740                           ; BSR set to: 1
  7741  000BA6  0100               	movlb	0	; () banked
  7742  000BA8  4BFB               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7743  000BAA  2BFC               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7744  000BAC                     l2527:
  7745                           
  7746                           ; BSR set to: 0
  7747                           
  7748                           ; BSR set to: 0
  7749  000BAC  0101               	movlb	1	; () banked
  7750  000BAE  51CB               	movf	_hex_file_entry& (0+255),w,b
  7751  000BB0  0100               	movlb	0	; () banked
  7752  000BB2  5DFB               	subwf	__bootloader_program@cntr& (0+255),w,b
  7753  000BB4  0101               	movlb	1	; () banked
  7754  000BB6  51CC               	movf	(_hex_file_entry+1)& (0+255),w,b
  7755  000BB8  0100               	movlb	0	; () banked
  7756  000BBA  59FC               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7757  000BBC  B0D8               	btfsc	status,0,c
  7758  000BBE  D670               	goto	l2513
  7759  000BC0  D798               	goto	l2528
  7760  000BC2                     
  7761                           ;bootloader.c: 422: if(page_to_write!=0)
  7762                           
  7763                           ; BSR set to: 0
  7764  000BC2  0100               	movlb	0	; () banked
  7765  000BC4  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7766  000BC6  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7767  000BC8  B4D8               	btfsc	status,2,c
  7768  000BCA  0012               	return	
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  7772  000BCC  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7773  000BD0  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7774  000BD4  EC86  F030         	call	_internalFlash_erasePage	;wreg free
  7775                           
  7776                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  7777  000BD8  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7778  000BDC  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7779  000BE0  ECE6  F027         	call	_internalFlash_writePage	;wreg free
  7780                           
  7781                           ;bootloader.c: 427: ++flash_pages_written;
  7782  000BE4  0101               	movlb	1	; () banked
  7783  000BE6  4B65               	infsnz	_flash_pages_written& (0+255),f,b
  7784  000BE8  2B66               	incf	(_flash_pages_written+1)& (0+255),f,b
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7788  000BEA  0E70               	movlw	112
  7789  000BEC  0100               	movlb	0	; () banked
  7790  000BEE  6F66               	movwf	(_os+6)& (0+255),b
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7794  000BF0  0E70               	movlw	112
  7795  000BF2  6F67               	movwf	(_os+7)& (0+255),b
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;bootloader.c: 431: };bootloader.c: 433: return;
  7799                           
  7800                           ; BSR set to: 0
  7801  000BF4  0012               	return	
  7802  000BF6                     l2520:
  7803                           
  7804                           ; BSR set to: 0
  7805                           
  7806                           ; BSR set to: 0
  7807  000BF6  0101               	movlb	1	; () banked
  7808  000BF8  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
  7809                           
  7810                           ; Switch size 1, requested type "space"
  7811                           ; Number of cases is 3, Range of values is 0 to 4
  7812                           ; switch strategies available:
  7813                           ; Name         Instructions Cycles
  7814                           ; simple_byte           10     6 (average)
  7815                           ;	Chosen strategy is simple_byte
  7816  000BFA  0A00               	xorlw	0	; case 0
  7817  000BFC  B4D8               	btfsc	status,2,c
  7818  000BFE  D71D               	goto	l2524
  7819  000C00  0A01               	xorlw	1	; case 1
  7820  000C02  B4D8               	btfsc	status,2,c
  7821  000C04  D7DE               	goto	l2532
  7822  000C06  0A05               	xorlw	5	; case 4
  7823  000C08  B4D8               	btfsc	status,2,c
  7824  000C0A  D6F9               	goto	l2521
  7825                           
  7826                           ; BSR set to: 1
  7827                           
  7828                           ; BSR set to: 1
  7829  000C0C  D649               	goto	l2513
  7830  000C0E                     __end_of__bootloader_program:
  7831                           	opt stack 0
  7832                           tblptru	equ	0xFF8
  7833                           tblptrh	equ	0xFF7
  7834                           tblptrl	equ	0xFF6
  7835                           tablat	equ	0xFF5
  7836                           prodh	equ	0xFF4
  7837                           prodl	equ	0xFF3
  7838                           intcon	equ	0xFF2
  7839                           intcon3	equ	0xFF0
  7840                           postinc0	equ	0xFEE
  7841                           wreg	equ	0xFE8
  7842                           indf1	equ	0xFE7
  7843                           postdec1	equ	0xFE5
  7844                           plusw1	equ	0xFE3
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           plusw2	equ	0xFDB
  7850                           fsr2h	equ	0xFDA
  7851                           fsr2l	equ	0xFD9
  7852                           status	equ	0xFD8
  7853                           
  7854 ;; *************** function _parseHexFileEntry *****************
  7855 ;; Defined at:
  7856 ;;		line 59 in file "hex.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  data            2   11[COMRAM] PTR unsigned char 
  7859 ;;		 -> file_buffer(50), 
  7860 ;;  offset          4   13[COMRAM] unsigned long 
  7861 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7862 ;;		 -> hex_file_entry(23), 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  i               1   27[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  4   11[COMRAM] unsigned long 
  7867 ;; Registers used:
  7868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7874 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;Total ram usage:       17 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		_hexCharsToUint16
  7883 ;;		_hexCharsToUint8
  7884 ;; This function is called by:
  7885 ;;		__bootloader_verify_file
  7886 ;;		__bootloader_program
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text26
  7891  000020                     __ptext26:
  7892                           	opt stack 0
  7893  000020                     _parseHexFileEntry:
  7894                           	opt stack 26
  7895                           
  7896                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7897                           
  7898                           ;incstack = 0
  7899  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7900  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7901  000024  6ED9               	movwf	fsr2l,c
  7902  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7903  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7904  00002A  6EDA               	movwf	fsr2h,c
  7905  00002C  0E3A               	movlw	58
  7906  00002E  18DE               	xorwf	postinc2,w,c
  7907  000030  B4D8               	btfsc	status,2,c
  7908  000032  D005               	goto	l2376
  7909                           
  7910                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7911  000034  680C               	setf	?_parseHexFileEntry,c
  7912  000036  680D               	setf	?_parseHexFileEntry+1,c
  7913  000038  680E               	setf	?_parseHexFileEntry+2,c
  7914  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7915  00003C  0012               	return	
  7916  00003E                     l2376:
  7917                           
  7918                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7919  00003E  0E02               	movlw	2
  7920  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7921  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7922  000044  0E00               	movlw	0
  7923  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7924  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7925  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7926  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7927  00004E  6ED9               	movwf	fsr2l,c
  7928  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7929  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7930  000054  6EDA               	movwf	fsr2h,c
  7931  000056  50DF               	movf	indf2,w,c
  7932  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7933  00005A  0E01               	movlw	1
  7934  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7935  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7936  000060  0E00               	movlw	0
  7937  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7938  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7939  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7940  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7941  00006A  6ED9               	movwf	fsr2l,c
  7942  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7943  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7944  000070  6EDA               	movwf	fsr2h,c
  7945  000072  50DF               	movf	indf2,w,c
  7946  000074  EC3F  F039         	call	_hexCharsToUint8
  7947  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7948  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7949  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7950  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7951  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7952  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7953                           
  7954                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7955  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7956  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7957  000094  0E01               	movlw	1
  7958  000096  50DB               	movf	plusw2,w,c
  7959  000098  E104               	bnz	u10800
  7960  00009A  0E11               	movlw	17
  7961  00009C  5CDE               	subwf	postinc2,w,c
  7962  00009E  A0D8               	btfss	status,0,c
  7963  0000A0  D009               	goto	l2378
  7964  0000A2                     u10800:
  7965                           
  7966                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7967  0000A2  0EFC               	movlw	252
  7968  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7969  0000A6  0EFF               	movlw	255
  7970  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7971  0000AA  0EFF               	movlw	255
  7972  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7973  0000AE  0EFF               	movlw	255
  7974  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7975  0000B2  0012               	return	
  7976  0000B4                     l2378:
  7977                           
  7978                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7979  0000B4  0E04               	movlw	4
  7980  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7981  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7982  0000BA  0E00               	movlw	0
  7983  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7984  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7985  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7986  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7987  0000C4  6ED9               	movwf	fsr2l,c
  7988  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7989  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7990  0000CA  6EDA               	movwf	fsr2h,c
  7991  0000CC  50DF               	movf	indf2,w,c
  7992  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7993  0000D0  0E05               	movlw	5
  7994  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7995  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7996  0000D6  0E00               	movlw	0
  7997  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7998  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7999  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8000  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8001  0000E0  6ED9               	movwf	fsr2l,c
  8002  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8003  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8004  0000E6  6EDA               	movwf	fsr2h,c
  8005  0000E8  50DF               	movf	indf2,w,c
  8006  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8007  0000EC  0E06               	movlw	6
  8008  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8009  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8010  0000F2  0E00               	movlw	0
  8011  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8012  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8013  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8014  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8015  0000FC  6ED9               	movwf	fsr2l,c
  8016  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8017  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8018  000102  6EDA               	movwf	fsr2h,c
  8019  000104  50DF               	movf	indf2,w,c
  8020  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8021  000108  0E03               	movlw	3
  8022  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8023  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8024  00010E  0E00               	movlw	0
  8025  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8026  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8027  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8028  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8029  000118  6ED9               	movwf	fsr2l,c
  8030  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8031  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8032  00011E  6EDA               	movwf	fsr2h,c
  8033  000120  50DF               	movf	indf2,w,c
  8034  000122  EC17  F030         	call	_hexCharsToUint16
  8035  000126  EE20 F002          	lfsr	2,2
  8036  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8037  00012C  26D9               	addwf	fsr2l,f,c
  8038  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8039  000130  22DA               	addwfc	fsr2h,f,c
  8040  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8041  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8042                           
  8043                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8044  00013A  EE20 F004          	lfsr	2,4
  8045  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8046  000140  26D9               	addwf	fsr2l,f,c
  8047  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8048  000144  22DA               	addwfc	fsr2h,f,c
  8049  000146  0E08               	movlw	8
  8050  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8051  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8052  00014C  0E00               	movlw	0
  8053  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8054  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8055  000152  5014               	movf	??_parseHexFileEntry,w,c
  8056  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8057  000156  6EE1               	movwf	fsr1l,c
  8058  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8059  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8060  00015C  6EE2               	movwf	fsr1h,c
  8061  00015E  50E7               	movf	indf1,w,c
  8062  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8063  000162  0E07               	movlw	7
  8064  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8065  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8066  000168  0E00               	movlw	0
  8067  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8068  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8069  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8070  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8071  000172  6EE1               	movwf	fsr1l,c
  8072  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8073  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8074  000178  6EE2               	movwf	fsr1h,c
  8075  00017A  50E7               	movf	indf1,w,c
  8076  00017C  EC3F  F039         	call	_hexCharsToUint8
  8077  000180  6EDF               	movwf	indf2,c
  8078                           
  8079                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8080  000182  0E00               	movlw	0
  8081  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8082  000186  D03D               	goto	l2379
  8083  000188                     
  8084                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8085  000188  501C               	movf	parseHexFileEntry@i,w,c
  8086  00018A  0D01               	mullw	1
  8087  00018C  0E05               	movlw	5
  8088  00018E  26F3               	addwf	prodl,f,c
  8089  000190  0E00               	movlw	0
  8090  000192  22F4               	addwfc	prodh,f,c
  8091  000194  50F3               	movf	prodl,w,c
  8092  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8093  000198  6ED9               	movwf	fsr2l,c
  8094  00019A  50F4               	movf	prodh,w,c
  8095  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8096  00019E  6EDA               	movwf	fsr2h,c
  8097  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8098  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8099  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8100  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8101  0001AA  0E00               	movlw	0
  8102  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8103  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8104  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8105  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8106  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8107  0001B6  0E0A               	movlw	10
  8108  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8109  0001BA  0E00               	movlw	0
  8110  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8111  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8112  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8113  0001C2  6EE1               	movwf	fsr1l,c
  8114  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8115  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8116  0001C8  6EE2               	movwf	fsr1h,c
  8117  0001CA  50E7               	movf	indf1,w,c
  8118  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8119  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8120  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8121  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8122  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8123  0001D8  0E00               	movlw	0
  8124  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8125  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8126  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8127  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8128  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8129  0001E4  0E09               	movlw	9
  8130  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8131  0001E8  0E00               	movlw	0
  8132  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8133  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8134  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8135  0001F0  6EE1               	movwf	fsr1l,c
  8136  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8137  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8138  0001F6  6EE2               	movwf	fsr1h,c
  8139  0001F8  50E7               	movf	indf1,w,c
  8140  0001FA  EC3F  F039         	call	_hexCharsToUint8
  8141  0001FE  6EDF               	movwf	indf2,c
  8142  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8143  000202                     l2379:
  8144  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8145  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8146  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8147  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8148  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8149  000210  50DE               	movf	postinc2,w,c
  8150  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8151  000214  50DE               	movf	postinc2,w,c
  8152  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8153  000218  A0D8               	btfss	status,0,c
  8154  00021A  D7B6               	goto	l2380
  8155                           
  8156                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8157  00021C  EE20 F015          	lfsr	2,21
  8158  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8159  000222  26D9               	addwf	fsr2l,f,c
  8160  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8161  000226  22DA               	addwfc	fsr2h,f,c
  8162  000228  501C               	movf	parseHexFileEntry@i,w,c
  8163  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8164  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8165  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8166  000232  0E00               	movlw	0
  8167  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8168  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8169  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8170  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8171  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8172  00023E  0E0A               	movlw	10
  8173  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8174  000242  0E00               	movlw	0
  8175  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8176  000246  5014               	movf	??_parseHexFileEntry,w,c
  8177  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8178  00024A  6EE1               	movwf	fsr1l,c
  8179  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8180  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8181  000250  6EE2               	movwf	fsr1h,c
  8182  000252  50E7               	movf	indf1,w,c
  8183  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8184  000256  501C               	movf	parseHexFileEntry@i,w,c
  8185  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8186  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8187  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8188  000260  0E00               	movlw	0
  8189  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8190  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8191  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8192  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8193  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8194  00026C  0E09               	movlw	9
  8195  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8196  000270  0E00               	movlw	0
  8197  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8198  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8199  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8200  000278  6EE1               	movwf	fsr1l,c
  8201  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8202  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8203  00027E  6EE2               	movwf	fsr1h,c
  8204  000280  50E7               	movf	indf1,w,c
  8205  000282  EC3F  F039         	call	_hexCharsToUint8
  8206  000286  6EDF               	movwf	indf2,c
  8207                           
  8208                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8209  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8210  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8211  000290  EE10 F016          	lfsr	1,22
  8212  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8213  000296  26E1               	addwf	fsr1l,f,c
  8214  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8215  00029A  22E2               	addwfc	fsr1h,f,c
  8216  00029C  CFDF FFE7          	movff	indf2,indf1
  8217                           
  8218                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8219  0002A0  EE20 F002          	lfsr	2,2
  8220  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8221  0002A6  26D9               	addwf	fsr2l,f,c
  8222  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8223  0002AA  22DA               	addwfc	fsr2h,f,c
  8224  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8225  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8226  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8227  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8228  0002BA  EE20 F016          	lfsr	2,22
  8229  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8230  0002C0  26D9               	addwf	fsr2l,f,c
  8231  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8232  0002C4  22DA               	addwfc	fsr2h,f,c
  8233  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8234  0002C8  26DF               	addwf	indf2,f,c
  8235                           
  8236                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8237  0002CA  EE20 F002          	lfsr	2,2
  8238  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8239  0002D0  26D9               	addwf	fsr2l,f,c
  8240  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8241  0002D4  22DA               	addwfc	fsr2h,f,c
  8242  0002D6  50DF               	movf	indf2,w,c
  8243  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8244  0002DA  EE20 F016          	lfsr	2,22
  8245  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8246  0002E0  26D9               	addwf	fsr2l,f,c
  8247  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8248  0002E4  22DA               	addwfc	fsr2h,f,c
  8249  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8250  0002E8  26DF               	addwf	indf2,f,c
  8251                           
  8252                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8253  0002EA  EE20 F004          	lfsr	2,4
  8254  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8255  0002F0  26D9               	addwf	fsr2l,f,c
  8256  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8257  0002F4  22DA               	addwfc	fsr2h,f,c
  8258  0002F6  50DF               	movf	indf2,w,c
  8259  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8260  0002FA  EE20 F016          	lfsr	2,22
  8261  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8262  000300  26D9               	addwf	fsr2l,f,c
  8263  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8264  000304  22DA               	addwfc	fsr2h,f,c
  8265  000306  5014               	movf	??_parseHexFileEntry,w,c
  8266  000308  26DF               	addwf	indf2,f,c
  8267                           
  8268                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8269  00030A  0E00               	movlw	0
  8270  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8271  00030E  D017               	goto	l2382
  8272  000310                     
  8273                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8274  000310  501C               	movf	parseHexFileEntry@i,w,c
  8275  000312  0D01               	mullw	1
  8276  000314  0E05               	movlw	5
  8277  000316  26F3               	addwf	prodl,f,c
  8278  000318  0E00               	movlw	0
  8279  00031A  22F4               	addwfc	prodh,f,c
  8280  00031C  50F3               	movf	prodl,w,c
  8281  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8282  000320  6ED9               	movwf	fsr2l,c
  8283  000322  50F4               	movf	prodh,w,c
  8284  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8285  000326  6EDA               	movwf	fsr2h,c
  8286  000328  50DF               	movf	indf2,w,c
  8287  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8288  00032C  EE20 F016          	lfsr	2,22
  8289  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8290  000332  26D9               	addwf	fsr2l,f,c
  8291  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8292  000336  22DA               	addwfc	fsr2h,f,c
  8293  000338  5014               	movf	??_parseHexFileEntry,w,c
  8294  00033A  26DF               	addwf	indf2,f,c
  8295  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8296  00033E                     l2382:
  8297  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8298  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8299  000346  501C               	movf	parseHexFileEntry@i,w,c
  8300  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8301  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8302  00034C  50DE               	movf	postinc2,w,c
  8303  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8304  000350  50DE               	movf	postinc2,w,c
  8305  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8306  000354  A0D8               	btfss	status,0,c
  8307  000356  D7DC               	goto	l2383
  8308                           
  8309                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8310  000358  EE20 F015          	lfsr	2,21
  8311  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8312  00035E  26D9               	addwf	fsr2l,f,c
  8313  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8314  000362  22DA               	addwfc	fsr2h,f,c
  8315  000364  50DF               	movf	indf2,w,c
  8316  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8317  000368  EE20 F016          	lfsr	2,22
  8318  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8319  00036E  26D9               	addwf	fsr2l,f,c
  8320  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8321  000372  22DA               	addwfc	fsr2h,f,c
  8322  000374  5014               	movf	??_parseHexFileEntry,w,c
  8323  000376  26DF               	addwf	indf2,f,c
  8324                           
  8325                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8326  000378  EE20 F016          	lfsr	2,22
  8327  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8328  00037E  26D9               	addwf	fsr2l,f,c
  8329  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8330  000382  22DA               	addwfc	fsr2h,f,c
  8331  000384  50DF               	movf	indf2,w,c
  8332  000386  B4D8               	btfsc	status,2,c
  8333  000388  D009               	goto	l2385
  8334                           
  8335                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8336  00038A  0EFE               	movlw	254
  8337  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8338  00038E  0EFF               	movlw	255
  8339  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8340  000392  0EFF               	movlw	255
  8341  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8342  000396  0EFF               	movlw	255
  8343  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8344  00039A  0012               	return	
  8345  00039C                     l2385:
  8346                           
  8347                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8348  00039C  EE20 F004          	lfsr	2,4
  8349  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8350  0003A2  26D9               	addwf	fsr2l,f,c
  8351  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8352  0003A6  22DA               	addwfc	fsr2h,f,c
  8353  0003A8  04DE               	decf	postinc2,w,c
  8354  0003AA  A4D8               	btfss	status,2,c
  8355  0003AC  D009               	goto	l2386
  8356                           
  8357                           ;hex.c: 110: {;hex.c: 112: return 0;
  8358  0003AE  0E00               	movlw	0
  8359  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8360  0003B2  0E00               	movlw	0
  8361  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8362  0003B6  0E00               	movlw	0
  8363  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8364  0003BA  0E00               	movlw	0
  8365  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8366                           
  8367                           ;hex.c: 113: }
  8368  0003BE  0012               	return	
  8369  0003C0                     l2386:
  8370                           
  8371                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8372  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8373  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8374  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8375  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8376  0003CA  0E00               	movlw	0
  8377  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8378  0003CE  0E0B               	movlw	11
  8379  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8380  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8381  0003D4  0E00               	movlw	0
  8382  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8383  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8384  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8385  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8386  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8387  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8388  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8389  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8390  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8391  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8392  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8393  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8394  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8395  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8396  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8397                           
  8398                           ;hex.c: 117: if (data[++offset] == ':')
  8399  0003F4  0E01               	movlw	1
  8400  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8401  0003F8  0E00               	movlw	0
  8402  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8403  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8404  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8405  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8406  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8407  000404  6ED9               	movwf	fsr2l,c
  8408  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8409  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8410  00040A  6EDA               	movwf	fsr2h,c
  8411  00040C  0E3A               	movlw	58
  8412  00040E  18DE               	xorwf	postinc2,w,c
  8413  000410  A4D8               	btfss	status,2,c
  8414  000412  D009               	goto	l2388
  8415                           
  8416                           ;hex.c: 118: {;hex.c: 119: return offset;
  8417  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8418  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8419  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8420  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8421                           
  8422                           ;hex.c: 120: }
  8423  000424  0012               	return	
  8424  000426                     l2388:
  8425                           
  8426                           ;hex.c: 121: else if (data[++offset] == ':')
  8427  000426  0E01               	movlw	1
  8428  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8429  00042A  0E00               	movlw	0
  8430  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8431  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8432  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8433  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8434  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8435  000436  6ED9               	movwf	fsr2l,c
  8436  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8437  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8438  00043C  6EDA               	movwf	fsr2h,c
  8439  00043E  0E3A               	movlw	58
  8440  000440  18DE               	xorwf	postinc2,w,c
  8441  000442  A4D8               	btfss	status,2,c
  8442  000444  D009               	goto	l2390
  8443                           
  8444                           ;hex.c: 122: {;hex.c: 123: return offset;
  8445  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8446  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8447  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8448  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8449                           
  8450                           ;hex.c: 124: }
  8451  000456  0012               	return	
  8452  000458                     l2390:
  8453                           
  8454                           ;hex.c: 125: else if (data[++offset] == ':')
  8455  000458  0E01               	movlw	1
  8456  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8457  00045C  0E00               	movlw	0
  8458  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8459  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8460  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8461  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8462  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8463  000468  6ED9               	movwf	fsr2l,c
  8464  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8465  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8466  00046E  6EDA               	movwf	fsr2h,c
  8467  000470  0E3A               	movlw	58
  8468  000472  18DE               	xorwf	postinc2,w,c
  8469  000474  A4D8               	btfss	status,2,c
  8470  000476  D009               	goto	l2392
  8471                           
  8472                           ;hex.c: 126: {;hex.c: 127: return offset;
  8473  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8474  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8475  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8476  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8477                           
  8478                           ;hex.c: 128: }
  8479  000488  0012               	return	
  8480  00048A                     l2392:
  8481                           
  8482                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8483  00048A  0EFD               	movlw	253
  8484  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8485  00048E  0EFF               	movlw	255
  8486  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8487  000492  0EFF               	movlw	255
  8488  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8489  000496  0EFF               	movlw	255
  8490  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8491  00049A  0012               	return	
  8492  00049C                     __end_of_parseHexFileEntry:
  8493                           	opt stack 0
  8494                           tblptru	equ	0xFF8
  8495                           tblptrh	equ	0xFF7
  8496                           tblptrl	equ	0xFF6
  8497                           tablat	equ	0xFF5
  8498                           prodh	equ	0xFF4
  8499                           prodl	equ	0xFF3
  8500                           intcon	equ	0xFF2
  8501                           intcon3	equ	0xFF0
  8502                           postinc0	equ	0xFEE
  8503                           wreg	equ	0xFE8
  8504                           indf1	equ	0xFE7
  8505                           postdec1	equ	0xFE5
  8506                           plusw1	equ	0xFE3
  8507                           fsr1h	equ	0xFE2
  8508                           fsr1l	equ	0xFE1
  8509                           indf2	equ	0xFDF
  8510                           postinc2	equ	0xFDE
  8511                           postdec2	equ	0xFDD
  8512                           plusw2	equ	0xFDB
  8513                           fsr2h	equ	0xFDA
  8514                           fsr2l	equ	0xFD9
  8515                           status	equ	0xFD8
  8516                           
  8517 ;; *************** function _hexCharsToUint8 *****************
  8518 ;; Defined at:
  8519 ;;		line 42 in file "hex.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  c1              1    wreg     unsigned char 
  8522 ;;  c2              1    2[COMRAM] unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  c1              1    4[COMRAM] unsigned char 
  8525 ;;  retVal          1    5[COMRAM] unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  1    wreg      unsigned char 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8535 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;Total ram usage:        4 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    1
  8542 ;; This function calls:
  8543 ;;		_hexCharToUint8
  8544 ;; This function is called by:
  8545 ;;		_parseHexFileEntry
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text27
  8550  00727E                     __ptext27:
  8551                           	opt stack 0
  8552  00727E                     _hexCharsToUint8:
  8553                           	opt stack 26
  8554                           
  8555                           ;incstack = 0
  8556                           ;hexCharsToUint8@c1 stored from wreg
  8557  00727E  6E05               	movwf	hexCharsToUint8@c1,c
  8558                           
  8559                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8560  007280  5005               	movf	hexCharsToUint8@c1,w,c
  8561  007282  ECBF  F037         	call	_hexCharToUint8
  8562  007286  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8563  007288  3804               	swapf	??_hexCharsToUint8,w,c
  8564  00728A  0BF0               	andlw	240
  8565  00728C  6E06               	movwf	hexCharsToUint8@retVal,c
  8566                           
  8567                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8568  00728E  5003               	movf	hexCharsToUint8@c2,w,c
  8569  007290  ECBF  F037         	call	_hexCharToUint8
  8570  007294  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8571                           
  8572                           ;hex.c: 46: return retVal;
  8573  007296  5006               	movf	hexCharsToUint8@retVal,w,c
  8574  007298  0012               	return	
  8575  00729A                     __end_of_hexCharsToUint8:
  8576                           	opt stack 0
  8577                           tblptru	equ	0xFF8
  8578                           tblptrh	equ	0xFF7
  8579                           tblptrl	equ	0xFF6
  8580                           tablat	equ	0xFF5
  8581                           prodh	equ	0xFF4
  8582                           prodl	equ	0xFF3
  8583                           intcon	equ	0xFF2
  8584                           intcon3	equ	0xFF0
  8585                           postinc0	equ	0xFEE
  8586                           wreg	equ	0xFE8
  8587                           indf1	equ	0xFE7
  8588                           postdec1	equ	0xFE5
  8589                           plusw1	equ	0xFE3
  8590                           fsr1h	equ	0xFE2
  8591                           fsr1l	equ	0xFE1
  8592                           indf2	equ	0xFDF
  8593                           postinc2	equ	0xFDE
  8594                           postdec2	equ	0xFDD
  8595                           plusw2	equ	0xFDB
  8596                           fsr2h	equ	0xFDA
  8597                           fsr2l	equ	0xFD9
  8598                           status	equ	0xFD8
  8599                           
  8600 ;; *************** function _hexCharsToUint16 *****************
  8601 ;; Defined at:
  8602 ;;		line 49 in file "hex.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  c1              1    wreg     unsigned char 
  8605 ;;  c2              1    2[COMRAM] unsigned char 
  8606 ;;  c3              1    3[COMRAM] unsigned char 
  8607 ;;  c4              1    4[COMRAM] unsigned char 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  c1              1    8[COMRAM] unsigned char 
  8610 ;;  retVal          2    9[COMRAM] unsigned int 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  2    2[COMRAM] unsigned int 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8620 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8623 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8624 ;;Total ram usage:        9 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    1
  8627 ;; This function calls:
  8628 ;;		_hexCharToUint8
  8629 ;; This function is called by:
  8630 ;;		_parseHexFileEntry
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text28
  8635  00602E                     __ptext28:
  8636                           	opt stack 0
  8637  00602E                     _hexCharsToUint16:
  8638                           	opt stack 26
  8639                           
  8640                           ;incstack = 0
  8641                           ;hexCharsToUint16@c1 stored from wreg
  8642  00602E  6E09               	movwf	hexCharsToUint16@c1,c
  8643                           
  8644                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8645  006030  5009               	movf	hexCharsToUint16@c1,w,c
  8646  006032  ECBF  F037         	call	_hexCharToUint8
  8647  006036  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8648  006038  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8649  00603A  0E0C               	movlw	12
  8650  00603C                     u10215:
  8651  00603C  90D8               	bcf	status,0,c
  8652  00603E  3606               	rlcf	??_hexCharsToUint16,f,c
  8653  006040  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8654  006042  2EE8               	decfsz	wreg,f,c
  8655  006044  D7FB               	goto	u10215
  8656  006046  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8657  00604A  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8658                           
  8659                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8660  00604E  5003               	movf	hexCharsToUint16@c2,w,c
  8661  006050  ECBF  F037         	call	_hexCharToUint8
  8662  006054  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8663  006056  5006               	movf	??_hexCharsToUint16,w,c
  8664  006058  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8665  00605A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8666  00605C  5007               	movf	??_hexCharsToUint16+1,w,c
  8667  00605E  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8668  006060  5008               	movf	??_hexCharsToUint16+2,w,c
  8669  006062  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8670                           
  8671                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8672  006064  5004               	movf	hexCharsToUint16@c3,w,c
  8673  006066  ECBF  F037         	call	_hexCharToUint8
  8674  00606A  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8675  00606C  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8676  00606E  3A06               	swapf	??_hexCharsToUint16,f,c
  8677  006070  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8678  006072  0EF0               	movlw	240
  8679  006074  1607               	andwf	??_hexCharsToUint16+1,f,c
  8680  006076  5006               	movf	??_hexCharsToUint16,w,c
  8681  006078  0B0F               	andlw	15
  8682  00607A  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8683  00607C  0EF0               	movlw	240
  8684  00607E  1606               	andwf	??_hexCharsToUint16,f,c
  8685  006080  5006               	movf	??_hexCharsToUint16,w,c
  8686  006082  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8687  006084  5007               	movf	??_hexCharsToUint16+1,w,c
  8688  006086  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8689                           
  8690                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8691  006088  5005               	movf	hexCharsToUint16@c4,w,c
  8692  00608A  ECBF  F037         	call	_hexCharToUint8
  8693  00608E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8694  006090  5006               	movf	??_hexCharsToUint16,w,c
  8695  006092  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8696                           
  8697                           ;hex.c: 55: return retVal;
  8698  006094  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8699  006098  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8700  00609C  0012               	return	
  8701  00609E                     __end_of_hexCharsToUint16:
  8702                           	opt stack 0
  8703                           tblptru	equ	0xFF8
  8704                           tblptrh	equ	0xFF7
  8705                           tblptrl	equ	0xFF6
  8706                           tablat	equ	0xFF5
  8707                           prodh	equ	0xFF4
  8708                           prodl	equ	0xFF3
  8709                           intcon	equ	0xFF2
  8710                           intcon3	equ	0xFF0
  8711                           postinc0	equ	0xFEE
  8712                           wreg	equ	0xFE8
  8713                           indf1	equ	0xFE7
  8714                           postdec1	equ	0xFE5
  8715                           plusw1	equ	0xFE3
  8716                           fsr1h	equ	0xFE2
  8717                           fsr1l	equ	0xFE1
  8718                           indf2	equ	0xFDF
  8719                           postinc2	equ	0xFDE
  8720                           postdec2	equ	0xFDD
  8721                           plusw2	equ	0xFDB
  8722                           fsr2h	equ	0xFDA
  8723                           fsr2l	equ	0xFD9
  8724                           status	equ	0xFD8
  8725                           
  8726 ;; *************** function _hexCharToUint8 *****************
  8727 ;; Defined at:
  8728 ;;		line 11 in file "hex.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  c               1    wreg     unsigned char 
  8731 ;; Auto vars:     Size  Location     Type
  8732 ;;  c               1    0[COMRAM] unsigned char 
  8733 ;;  ascii           1    1[COMRAM] unsigned char 
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      unsigned char 
  8736 ;; Registers used:
  8737 ;;		wreg, status,2, status,0
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;Total ram usage:        2 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; This function calls:
  8750 ;;		Nothing
  8751 ;; This function is called by:
  8752 ;;		_hexCharsToUint8
  8753 ;;		_hexCharsToUint16
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text29
  8758  006F7E                     __ptext29:
  8759                           	opt stack 0
  8760  006F7E                     _hexCharToUint8:
  8761                           	opt stack 26
  8762                           
  8763                           ;incstack = 0
  8764                           ;hexCharToUint8@c stored from wreg
  8765  006F7E  6E01               	movwf	hexCharToUint8@c,c
  8766                           
  8767                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8768  006F80  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8769                           
  8770                           ;hex.c: 16: if (ascii >= 97)
  8771  006F84  0E60               	movlw	96
  8772  006F86  6402               	cpfsgt	hexCharToUint8@ascii,c
  8773  006F88  D002               	goto	l2361
  8774                           
  8775                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8776  006F8A  0E57               	movlw	87
  8777  006F8C  D006               	goto	L3
  8778  006F8E                     l2361:
  8779                           
  8780                           ;hex.c: 21: else if (ascii >= 65)
  8781  006F8E  0E40               	movlw	64
  8782  006F90  6402               	cpfsgt	hexCharToUint8@ascii,c
  8783  006F92  D002               	goto	l2363
  8784                           
  8785                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8786  006F94  0E37               	movlw	55
  8787  006F96  D001               	goto	L3
  8788  006F98                     l2363:
  8789                           
  8790                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8791  006F98  0E30               	movlw	48
  8792  006F9A                     L3:
  8793  006F9A  5E02               	subwf	hexCharToUint8@ascii,f,c
  8794                           
  8795                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8796  006F9C  0E0F               	movlw	15
  8797  006F9E  6402               	cpfsgt	hexCharToUint8@ascii,c
  8798  006FA0  D002               	goto	l2365
  8799                           
  8800                           ;hex.c: 32: {;hex.c: 33: return 0;
  8801  006FA2  0E00               	movlw	0
  8802                           
  8803                           ;hex.c: 34: }
  8804  006FA4  0012               	return	
  8805  006FA6                     l2365:
  8806                           
  8807                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8808  006FA6  5002               	movf	hexCharToUint8@ascii,w,c
  8809  006FA8  0012               	return	
  8810  006FAA                     __end_of_hexCharToUint8:
  8811                           	opt stack 0
  8812                           tblptru	equ	0xFF8
  8813                           tblptrh	equ	0xFF7
  8814                           tblptrl	equ	0xFF6
  8815                           tablat	equ	0xFF5
  8816                           prodh	equ	0xFF4
  8817                           prodl	equ	0xFF3
  8818                           intcon	equ	0xFF2
  8819                           intcon3	equ	0xFF0
  8820                           postinc0	equ	0xFEE
  8821                           wreg	equ	0xFE8
  8822                           indf1	equ	0xFE7
  8823                           postdec1	equ	0xFE5
  8824                           plusw1	equ	0xFE3
  8825                           fsr1h	equ	0xFE2
  8826                           fsr1l	equ	0xFE1
  8827                           indf2	equ	0xFDF
  8828                           postinc2	equ	0xFDE
  8829                           postdec2	equ	0xFDD
  8830                           plusw2	equ	0xFDB
  8831                           fsr2h	equ	0xFDA
  8832                           fsr2l	equ	0xFD9
  8833                           status	equ	0xFD8
  8834                           
  8835 ;; *************** function _internalFlash_writePage *****************
  8836 ;; Defined at:
  8837 ;;		line 65 in file "internal_flash.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;  page            2    8[COMRAM] unsigned int 
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;  address         4   18[COMRAM] unsigned long 
  8842 ;;  cntr            2   14[COMRAM] unsigned int 
  8843 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  8844 ;;  block_cntr      1   16[COMRAM] unsigned char 
  8845 ;;  i               1    0        unsigned char 
  8846 ;;  gie             1    0        unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      void 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;Total ram usage:       14 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    1
  8863 ;; This function calls:
  8864 ;;		__internalFlash_unlockAndActivate
  8865 ;;		_internalFlash_addressFromPage
  8866 ;; This function is called by:
  8867 ;;		__bootloader_program
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text30
  8872  004FCC                     __ptext30:
  8873                           	opt stack 0
  8874  004FCC                     _internalFlash_writePage:
  8875                           	opt stack 27
  8876                           
  8877                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  8878                           
  8879                           ;incstack = 0
  8880  004FCC  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  8881  004FD0  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  8882  004FD4  ECA8  F037         	call	_internalFlash_addressFromPage	;wreg free
  8883  004FD8  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  8884  004FDC  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  8885  004FE0  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  8886  004FE4  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  8887                           
  8888                           ;internal_flash.c: 76: TBLPTR = address;
  8889  004FE8  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8890  004FEC  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8891  004FF0  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8892                           
  8893                           ;internal_flash.c: 79: if((address<0x9000) || (address+1023>=0x1FFFF))
  8894  004FF4  5016               	movf	internalFlash_writePage@address+3,w,c
  8895  004FF6  1015               	iorwf	internalFlash_writePage@address+2,w,c
  8896  004FF8  E104               	bnz	u10980
  8897  004FFA  0E90               	movlw	144
  8898  004FFC  5C14               	subwf	internalFlash_writePage@address+1,w,c
  8899  004FFE  A0D8               	btfss	status,0,c
  8900  005000  0012               	return	
  8901  005002                     u10980:
  8902  005002  0EFF               	movlw	255
  8903  005004  2413               	addwf	internalFlash_writePage@address,w,c
  8904  005006  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  8905  005008  0E03               	movlw	3
  8906  00500A  2014               	addwfc	internalFlash_writePage@address+1,w,c
  8907  00500C  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  8908  00500E  0E00               	movlw	0
  8909  005010  2015               	addwfc	internalFlash_writePage@address+2,w,c
  8910  005012  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  8911  005014  0E00               	movlw	0
  8912  005016  2016               	addwfc	internalFlash_writePage@address+3,w,c
  8913  005018  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  8914  00501A  500E               	movf	??_internalFlash_writePage+3,w,c
  8915  00501C  E132               	bnz	l2618
  8916  00501E  280B               	incf	??_internalFlash_writePage,w,c
  8917  005020  0EFF               	movlw	255
  8918  005022  580C               	subwfb	??_internalFlash_writePage+1,w,c
  8919  005024  0E01               	movlw	1
  8920  005026  580D               	subwfb	??_internalFlash_writePage+2,w,c
  8921  005028  B0D8               	btfsc	status,0,c
  8922  00502A  0012               	return	
  8923                           
  8924                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  8925                           
  8926                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  8927  00502C  0E00               	movlw	0
  8928  00502E  6E10               	movwf	internalFlash_writePage@cntr+1,c
  8929  005030  0E00               	movlw	0
  8930  005032  6E0F               	movwf	internalFlash_writePage@cntr,c
  8931                           
  8932                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8933  005034  0E00               	movlw	0
  8934  005036  6E11               	movwf	internalFlash_writePage@block_cntr,c
  8935  005038                     l13323:
  8936  005038  0E0F               	movlw	15
  8937  00503A  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  8938  00503C  D001               	goto	l2619
  8939  00503E  0012               	return	
  8940  005040                     l2619:
  8941                           
  8942                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8943  005040  0E00               	movlw	0
  8944  005042  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  8945  005044                     l13329:
  8946  005044  0E3F               	movlw	63
  8947  005046  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8948  005048  D001               	goto	l2621
  8949  00504A  D00D               	goto	u11020
  8950  00504C                     l2621:
  8951                           
  8952                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  8953  00504C  0E00               	movlw	low _pageBuffer
  8954  00504E  240F               	addwf	internalFlash_writePage@cntr,w,c
  8955  005050  6ED9               	movwf	fsr2l,c
  8956  005052  0E08               	movlw	high _pageBuffer
  8957  005054  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  8958  005056  6EDA               	movwf	fsr2h,c
  8959  005058  50DF               	movf	indf2,w,c
  8960  00505A  6EF5               	movwf	tablat,c	;volatile
  8961  00505C  000D               	tblwt		*+	;# 
  8962                           
  8963                           ;internal_flash.c: 97: ++cntr;
  8964  00505E  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  8965  005060  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  8966  005062  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  8967  005064  D7EF               	goto	l13329
  8968  005066                     u11020:
  8969  005066  000A               	tblrd		*-	;# 
  8970                           
  8971                           ;internal_flash.c: 104: EECON1 = 0x84;
  8972  005068  0E84               	movlw	132
  8973  00506A  6EA6               	movwf	4006,c	;volsfr
  8974                           
  8975                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8976  00506C  0EB5               	movlw	181
  8977  00506E  EC16  F038         	call	__internalFlash_unlockAndActivate
  8978                           
  8979                           ;internal_flash.c: 106: TBLPTR++;
  8980  005072  0E01               	movlw	1
  8981  005074  26F6               	addwf	tblptrl,f,c	;volatile
  8982  005076  0E00               	movlw	0
  8983  005078  22F7               	addwfc	tblptrh,f,c	;volatile
  8984  00507A  0E00               	movlw	0
  8985  00507C  22F8               	addwfc	tblptru,f,c	;volatile
  8986  00507E  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  8987  005080  D7DB               	goto	l13323
  8988  005082                     l2618:
  8989  005082  0012               	return		;funcret
  8990  005084                     __end_of_internalFlash_writePage:
  8991                           	opt stack 0
  8992                           tblptru	equ	0xFF8
  8993                           tblptrh	equ	0xFF7
  8994                           tblptrl	equ	0xFF6
  8995                           tablat	equ	0xFF5
  8996                           prodh	equ	0xFF4
  8997                           prodl	equ	0xFF3
  8998                           intcon	equ	0xFF2
  8999                           intcon3	equ	0xFF0
  9000                           postinc0	equ	0xFEE
  9001                           wreg	equ	0xFE8
  9002                           indf1	equ	0xFE7
  9003                           postdec1	equ	0xFE5
  9004                           plusw1	equ	0xFE3
  9005                           fsr1h	equ	0xFE2
  9006                           fsr1l	equ	0xFE1
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           postdec2	equ	0xFDD
  9010                           plusw2	equ	0xFDB
  9011                           fsr2h	equ	0xFDA
  9012                           fsr2l	equ	0xFD9
  9013                           status	equ	0xFD8
  9014                           
  9015 ;; *************** function _internalFlash_readPage *****************
  9016 ;; Defined at:
  9017 ;;		line 37 in file "internal_flash.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  page            2   21[COMRAM] unsigned int 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  address         4   23[COMRAM] unsigned long 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;Total ram usage:        6 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    2
  9038 ;; This function calls:
  9039 ;;		_internalFlash_addressFromPage
  9040 ;;		_internalFlash_read
  9041 ;; This function is called by:
  9042 ;;		__bootloader_program
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text31
  9047  006C38                     __ptext31:
  9048                           	opt stack 0
  9049  006C38                     _internalFlash_readPage:
  9050                           	opt stack 26
  9051                           
  9052                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9053                           
  9054                           ;incstack = 0
  9055  006C38  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9056  006C3C  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9057  006C40  ECA8  F037         	call	_internalFlash_addressFromPage	;wreg free
  9058  006C44  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9059  006C48  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9060  006C4C  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9061  006C50  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9062                           
  9063                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9064  006C54  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9065  006C58  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9066  006C5C  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9067  006C60  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9068  006C64  0E04               	movlw	4
  9069  006C66  6E13               	movwf	internalFlash_read@data_length+1,c
  9070  006C68  0E00               	movlw	0
  9071  006C6A  6E12               	movwf	internalFlash_read@data_length,c
  9072  006C6C  0E00               	movlw	low _pageBuffer
  9073  006C6E  6E14               	movwf	internalFlash_read@buffer,c
  9074  006C70  0E08               	movlw	high _pageBuffer
  9075  006C72  6E15               	movwf	internalFlash_read@buffer+1,c
  9076  006C74  EC10  F037         	call	_internalFlash_read	;wreg free
  9077  006C78  0012               	return		;funcret
  9078  006C7A                     __end_of_internalFlash_readPage:
  9079                           	opt stack 0
  9080                           tblptru	equ	0xFF8
  9081                           tblptrh	equ	0xFF7
  9082                           tblptrl	equ	0xFF6
  9083                           tablat	equ	0xFF5
  9084                           prodh	equ	0xFF4
  9085                           prodl	equ	0xFF3
  9086                           intcon	equ	0xFF2
  9087                           intcon3	equ	0xFF0
  9088                           postinc0	equ	0xFEE
  9089                           wreg	equ	0xFE8
  9090                           indf1	equ	0xFE7
  9091                           postdec1	equ	0xFE5
  9092                           plusw1	equ	0xFE3
  9093                           fsr1h	equ	0xFE2
  9094                           fsr1l	equ	0xFE1
  9095                           indf2	equ	0xFDF
  9096                           postinc2	equ	0xFDE
  9097                           postdec2	equ	0xFDD
  9098                           plusw2	equ	0xFDB
  9099                           fsr2h	equ	0xFDA
  9100                           fsr2l	equ	0xFD9
  9101                           status	equ	0xFD8
  9102                           
  9103 ;; *************** function _internalFlash_read *****************
  9104 ;; Defined at:
  9105 ;;		line 150 in file "internal_flash.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  address         4   13[COMRAM] unsigned long 
  9108 ;;  data_length     2   17[COMRAM] unsigned int 
  9109 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9110 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;		None
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      unsigned char 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;Total ram usage:        8 bytes
  9127 ;; Hardware stack levels used:    1
  9128 ;; Hardware stack levels required when called:    1
  9129 ;; This function calls:
  9130 ;;		_memcpy
  9131 ;; This function is called by:
  9132 ;;		_internalFlash_readPage
  9133 ;;		__bootloader_verify_program_memory
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text32
  9138  006E20                     __ptext32:
  9139                           	opt stack 0
  9140  006E20                     _internalFlash_read:
  9141                           	opt stack 26
  9142                           
  9143                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  9144                           
  9145                           ;incstack = 0
  9146  006E20  5011               	movf	internalFlash_read@address+3,w,c
  9147  006E22  E118               	bnz	l2634
  9148  006E24  280E               	incf	internalFlash_read@address,w,c
  9149  006E26  0EFF               	movlw	255
  9150  006E28  580F               	subwfb	internalFlash_read@address+1,w,c
  9151  006E2A  0E01               	movlw	1
  9152  006E2C  5810               	subwfb	internalFlash_read@address+2,w,c
  9153  006E2E  B0D8               	btfsc	status,0,c
  9154  006E30  0012               	return	
  9155                           
  9156                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  9157                           
  9158                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9159  006E32  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9160  006E36  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9161  006E3A  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9162  006E3E  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9163  006E42  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9164  006E46  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9165  006E4A  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9166  006E4E  EC25  F031         	call	_memcpy	;wreg free
  9167  006E52  0012               	return	
  9168  006E54                     l2634:
  9169  006E54  0012               	return		;funcret
  9170  006E56                     __end_of_internalFlash_read:
  9171                           	opt stack 0
  9172                           tblptru	equ	0xFF8
  9173                           tblptrh	equ	0xFF7
  9174                           tblptrl	equ	0xFF6
  9175                           tablat	equ	0xFF5
  9176                           prodh	equ	0xFF4
  9177                           prodl	equ	0xFF3
  9178                           intcon	equ	0xFF2
  9179                           intcon3	equ	0xFF0
  9180                           postinc0	equ	0xFEE
  9181                           wreg	equ	0xFE8
  9182                           indf1	equ	0xFE7
  9183                           postdec1	equ	0xFE5
  9184                           plusw1	equ	0xFE3
  9185                           fsr1h	equ	0xFE2
  9186                           fsr1l	equ	0xFE1
  9187                           indf2	equ	0xFDF
  9188                           postinc2	equ	0xFDE
  9189                           postdec2	equ	0xFDD
  9190                           plusw2	equ	0xFDB
  9191                           fsr2h	equ	0xFDA
  9192                           fsr2l	equ	0xFD9
  9193                           status	equ	0xFD8
  9194                           
  9195 ;; *************** function _internalFlash_pageFromAddress *****************
  9196 ;; Defined at:
  9197 ;;		line 171 in file "internal_flash.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  address         4    0[COMRAM] unsigned long 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;		None
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  2    0[COMRAM] unsigned int 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9215 ;;Total ram usage:        5 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; This function calls:
  9218 ;;		Nothing
  9219 ;; This function is called by:
  9220 ;;		__bootloader_program
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text33
  9225  00729A                     __ptext33:
  9226                           	opt stack 0
  9227  00729A                     _internalFlash_pageFromAddress:
  9228                           	opt stack 28
  9229                           
  9230                           ;internal_flash.c: 173: address >>= 10;
  9231                           
  9232                           ;incstack = 0
  9233  00729A  0E0A               	movlw	10
  9234  00729C  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9235  00729E                     u10955:
  9236  00729E  90D8               	bcf	status,0,c
  9237  0072A0  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9238  0072A2  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9239  0072A4  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9240  0072A6  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9241  0072A8  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9242  0072AA  D7F9               	goto	u10955
  9243                           
  9244                           ;internal_flash.c: 174: return (uint16_t) address;
  9245  0072AC  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9246  0072B0  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9247  0072B4  0012               	return	
  9248  0072B6                     __end_of_internalFlash_pageFromAddress:
  9249                           	opt stack 0
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           intcon3	equ	0xFF0
  9258                           postinc0	equ	0xFEE
  9259                           wreg	equ	0xFE8
  9260                           indf1	equ	0xFE7
  9261                           postdec1	equ	0xFE5
  9262                           plusw1	equ	0xFE3
  9263                           fsr1h	equ	0xFE2
  9264                           fsr1l	equ	0xFE1
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           plusw2	equ	0xFDB
  9269                           fsr2h	equ	0xFDA
  9270                           fsr2l	equ	0xFD9
  9271                           status	equ	0xFD8
  9272                           
  9273 ;; *************** function _internalFlash_getBuffer *****************
  9274 ;; Defined at:
  9275 ;;		line 32 in file "internal_flash.c"
  9276 ;; Parameters:    Size  Location     Type
  9277 ;;		None
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;		None
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  2    0[COMRAM] PTR unsigned char 
  9282 ;; Registers used:
  9283 ;;		wreg, status,2, status,0
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;Total ram usage:        2 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; This function calls:
  9296 ;;		Nothing
  9297 ;; This function is called by:
  9298 ;;		__bootloader_program
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text34
  9303  007404                     __ptext34:
  9304                           	opt stack 0
  9305  007404                     _internalFlash_getBuffer:
  9306                           	opt stack 28
  9307                           
  9308                           ;internal_flash.c: 34: return pageBuffer;
  9309                           
  9310                           ;incstack = 0
  9311  007404  0E00               	movlw	low _pageBuffer
  9312  007406  6E01               	movwf	?_internalFlash_getBuffer,c
  9313  007408  0E08               	movlw	high _pageBuffer
  9314  00740A  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9315  00740C  0012               	return	
  9316  00740E                     __end_of_internalFlash_getBuffer:
  9317                           	opt stack 0
  9318                           tblptru	equ	0xFF8
  9319                           tblptrh	equ	0xFF7
  9320                           tblptrl	equ	0xFF6
  9321                           tablat	equ	0xFF5
  9322                           prodh	equ	0xFF4
  9323                           prodl	equ	0xFF3
  9324                           intcon	equ	0xFF2
  9325                           intcon3	equ	0xFF0
  9326                           postinc0	equ	0xFEE
  9327                           wreg	equ	0xFE8
  9328                           indf1	equ	0xFE7
  9329                           postdec1	equ	0xFE5
  9330                           plusw1	equ	0xFE3
  9331                           fsr1h	equ	0xFE2
  9332                           fsr1l	equ	0xFE1
  9333                           indf2	equ	0xFDF
  9334                           postinc2	equ	0xFDE
  9335                           postdec2	equ	0xFDD
  9336                           plusw2	equ	0xFDB
  9337                           fsr2h	equ	0xFDA
  9338                           fsr2l	equ	0xFD9
  9339                           status	equ	0xFD8
  9340                           
  9341 ;; *************** function _internalFlash_erasePage *****************
  9342 ;; Defined at:
  9343 ;;		line 44 in file "internal_flash.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  page            2    8[COMRAM] unsigned int 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  address         4   14[COMRAM] unsigned long 
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      void 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0, cstack
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9358 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;Total ram usage:       10 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:    1
  9364 ;; This function calls:
  9365 ;;		__internalFlash_unlockAndActivate
  9366 ;;		_internalFlash_addressFromPage
  9367 ;; This function is called by:
  9368 ;;		__bootloader_program
  9369 ;; This function uses a non-reentrant model
  9370 ;;
  9371                           
  9372                           	psect	text35
  9373  00610C                     __ptext35:
  9374                           	opt stack 0
  9375  00610C                     _internalFlash_erasePage:
  9376                           	opt stack 27
  9377                           
  9378                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  9379                           
  9380                           ;incstack = 0
  9381  00610C  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  9382  006110  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  9383  006114  ECA8  F037         	call	_internalFlash_addressFromPage	;wreg free
  9384  006118  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  9385  00611C  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  9386  006120  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  9387  006124  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  9388                           
  9389                           ;internal_flash.c: 50: TBLPTR = address;
  9390  006128  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9391  00612C  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9392  006130  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9393                           
  9394                           ;internal_flash.c: 53: if((address<0x9000) || (address+1023>=0x1FFFF))
  9395  006134  5012               	movf	internalFlash_erasePage@address+3,w,c
  9396  006136  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  9397  006138  E104               	bnz	u10960
  9398  00613A  0E90               	movlw	144
  9399  00613C  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  9400  00613E  A0D8               	btfss	status,0,c
  9401  006140  0012               	return	
  9402  006142                     u10960:
  9403  006142  0EFF               	movlw	255
  9404  006144  240F               	addwf	internalFlash_erasePage@address,w,c
  9405  006146  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  9406  006148  0E03               	movlw	3
  9407  00614A  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  9408  00614C  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  9409  00614E  0E00               	movlw	0
  9410  006150  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  9411  006152  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  9412  006154  0E00               	movlw	0
  9413  006156  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  9414  006158  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  9415  00615A  500E               	movf	??_internalFlash_erasePage+3,w,c
  9416  00615C  E10C               	bnz	l2612
  9417  00615E  280B               	incf	??_internalFlash_erasePage,w,c
  9418  006160  0EFF               	movlw	255
  9419  006162  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  9420  006164  0E01               	movlw	1
  9421  006166  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  9422  006168  B0D8               	btfsc	status,0,c
  9423  00616A  0012               	return	
  9424                           
  9425                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  9426                           
  9427                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  9428  00616C  84A6               	bsf	4006,2,c	;volsfr
  9429                           
  9430                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  9431  00616E  88A6               	bsf	4006,4,c	;volsfr
  9432                           
  9433                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9434  006170  0EB5               	movlw	181
  9435  006172  EC16  F038         	call	__internalFlash_unlockAndActivate
  9436  006176                     l2612:
  9437  006176  0012               	return		;funcret
  9438  006178                     __end_of_internalFlash_erasePage:
  9439                           	opt stack 0
  9440                           tblptru	equ	0xFF8
  9441                           tblptrh	equ	0xFF7
  9442                           tblptrl	equ	0xFF6
  9443                           tablat	equ	0xFF5
  9444                           prodh	equ	0xFF4
  9445                           prodl	equ	0xFF3
  9446                           intcon	equ	0xFF2
  9447                           intcon3	equ	0xFF0
  9448                           postinc0	equ	0xFEE
  9449                           wreg	equ	0xFE8
  9450                           indf1	equ	0xFE7
  9451                           postdec1	equ	0xFE5
  9452                           plusw1	equ	0xFE3
  9453                           fsr1h	equ	0xFE2
  9454                           fsr1l	equ	0xFE1
  9455                           indf2	equ	0xFDF
  9456                           postinc2	equ	0xFDE
  9457                           postdec2	equ	0xFDD
  9458                           plusw2	equ	0xFDB
  9459                           fsr2h	equ	0xFDA
  9460                           fsr2l	equ	0xFD9
  9461                           status	equ	0xFD8
  9462                           
  9463 ;; *************** function __internalFlash_unlockAndActivate *****************
  9464 ;; Defined at:
  9465 ;;		line 112 in file "internal_flash.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;  UnlockKey       1    wreg     unsigned char 
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9470 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  1    wreg      void 
  9473 ;; Registers used:
  9474 ;;		wreg, status,2, status,0
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9481 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9483 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9484 ;;Total ram usage:        2 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; This function calls:
  9487 ;;		Nothing
  9488 ;; This function is called by:
  9489 ;;		_internalFlash_erasePage
  9490 ;;		_internalFlash_writePage
  9491 ;;		_EraseBlock
  9492 ;; This function uses a non-reentrant model
  9493 ;;
  9494                           
  9495                           	psect	text36
  9496  00702C                     __ptext36:
  9497                           	opt stack 0
  9498  00702C                     __internalFlash_unlockAndActivate:
  9499                           	opt stack 27
  9500                           
  9501                           ;incstack = 0
  9502                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9503  00702C  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9504                           
  9505                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9506  00702E  0EB5               	movlw	181
  9507  007030  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9508  007032  B4D8               	btfsc	status,2,c
  9509  007034  D002               	goto	l2625
  9510                           
  9511                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
  9512  007036  94A6               	bcf	4006,2,c	;volsfr
  9513                           
  9514                           ;internal_flash.c: 124: return;
  9515  007038  0012               	return	
  9516  00703A                     l2625:
  9517                           
  9518                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
  9519  00703A  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9520                           
  9521                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
  9522  00703E  9EF2               	bcf	intcon,7,c	;volatile
  9523                           
  9524                           ;internal_flash.c: 129: EECON2 = 0x55;
  9525  007040  0E55               	movlw	85
  9526  007042  6EA7               	movwf	4007,c	;volsfr
  9527                           
  9528                           ;internal_flash.c: 130: EECON2 = 0xAA;
  9529  007044  0EAA               	movlw	170
  9530  007046  6EA7               	movwf	4007,c	;volsfr
  9531                           
  9532                           ;internal_flash.c: 131: EECON1bits.WR = 1;
  9533  007048  82A6               	bsf	4006,1,c	;volsfr
  9534                           
  9535                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
  9536  00704A  94A6               	bcf	4006,2,c	;volsfr
  9537                           
  9538                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
  9539  00704C  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9540  00704E  0012               	return	
  9541                           
  9542                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
  9543  007050  8EF2               	bsf	intcon,7,c	;volatile
  9544  007052  0012               	return	
  9545  007054                     __end_of__internalFlash_unlockAndActivate:
  9546                           	opt stack 0
  9547                           tblptru	equ	0xFF8
  9548                           tblptrh	equ	0xFF7
  9549                           tblptrl	equ	0xFF6
  9550                           tablat	equ	0xFF5
  9551                           prodh	equ	0xFF4
  9552                           prodl	equ	0xFF3
  9553                           intcon	equ	0xFF2
  9554                           intcon3	equ	0xFF0
  9555                           postinc0	equ	0xFEE
  9556                           wreg	equ	0xFE8
  9557                           indf1	equ	0xFE7
  9558                           postdec1	equ	0xFE5
  9559                           plusw1	equ	0xFE3
  9560                           fsr1h	equ	0xFE2
  9561                           fsr1l	equ	0xFE1
  9562                           indf2	equ	0xFDF
  9563                           postinc2	equ	0xFDE
  9564                           postdec2	equ	0xFDD
  9565                           plusw2	equ	0xFDB
  9566                           fsr2h	equ	0xFDA
  9567                           fsr2l	equ	0xFD9
  9568                           status	equ	0xFD8
  9569                           
  9570 ;; *************** function _internalFlash_addressWithinPage *****************
  9571 ;; Defined at:
  9572 ;;		line 185 in file "internal_flash.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  address         4    8[COMRAM] unsigned long 
  9575 ;;  page            2   12[COMRAM] unsigned int 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  2    8[COMRAM] unsigned int 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0, cstack
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9587 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9588 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9590 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;Total ram usage:       14 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    1
  9594 ;; This function calls:
  9595 ;;		_internalFlash_addressFromPage
  9596 ;; This function is called by:
  9597 ;;		__bootloader_program
  9598 ;; This function uses a non-reentrant model
  9599 ;;
  9600                           
  9601                           	psect	text37
  9602  00643C                     __ptext37:
  9603                           	opt stack 0
  9604  00643C                     _internalFlash_addressWithinPage:
  9605                           	opt stack 27
  9606                           
  9607                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9608                           
  9609                           ;incstack = 0
  9610  00643C  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9611  006440  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9612  006444  ECA8  F037         	call	_internalFlash_addressFromPage	;wreg free
  9613  006448  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9614  00644C  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9615  006450  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9616  006454  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9617                           
  9618                           ;internal_flash.c: 189: address = address - page_start_address;
  9619  006458  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9620  00645C  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9621  006460  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9622  006464  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9623  006468  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9624  00646A  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9625  00646C  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9626  00646E  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9627  006470  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9628  006472  0E00               	movlw	0
  9629  006474  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9630  006476  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9631  006478  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9632  00647A  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9633  00647C  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9634  00647E  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9635  006480  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9636  006482  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9637  006484  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9638  006486  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9639  006488  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9640  00648A  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9641  00648C  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9642  00648E  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9643  006490  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9644                           
  9645                           ;internal_flash.c: 190: return (uint16_t) address;
  9646  006492  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9647  006496  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9648  00649A  0012               	return	
  9649  00649C                     __end_of_internalFlash_addressWithinPage:
  9650                           	opt stack 0
  9651                           tblptru	equ	0xFF8
  9652                           tblptrh	equ	0xFF7
  9653                           tblptrl	equ	0xFF6
  9654                           tablat	equ	0xFF5
  9655                           prodh	equ	0xFF4
  9656                           prodl	equ	0xFF3
  9657                           intcon	equ	0xFF2
  9658                           intcon3	equ	0xFF0
  9659                           postinc0	equ	0xFEE
  9660                           wreg	equ	0xFE8
  9661                           indf1	equ	0xFE7
  9662                           postdec1	equ	0xFE5
  9663                           plusw1	equ	0xFE3
  9664                           fsr1h	equ	0xFE2
  9665                           fsr1l	equ	0xFE1
  9666                           indf2	equ	0xFDF
  9667                           postinc2	equ	0xFDE
  9668                           postdec2	equ	0xFDD
  9669                           plusw2	equ	0xFDB
  9670                           fsr2h	equ	0xFDA
  9671                           fsr2l	equ	0xFD9
  9672                           status	equ	0xFD8
  9673                           
  9674 ;; *************** function _internalFlash_addressFromPage *****************
  9675 ;; Defined at:
  9676 ;;		line 177 in file "internal_flash.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  page            2    0[COMRAM] unsigned int 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;  address         4    4[COMRAM] unsigned long 
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  4    0[COMRAM] unsigned long 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9691 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9693 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;Total ram usage:        8 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_internalFlash_readPage
  9700 ;;		_internalFlash_erasePage
  9701 ;;		_internalFlash_writePage
  9702 ;;		_internalFlash_addressWithinPage
  9703 ;; This function uses a non-reentrant model
  9704 ;;
  9705                           
  9706                           	psect	text38
  9707  006F50                     __ptext38:
  9708                           	opt stack 0
  9709  006F50                     _internalFlash_addressFromPage:
  9710                           	opt stack 27
  9711                           
  9712                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
  9713                           
  9714                           ;incstack = 0
  9715  006F50  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9716  006F54  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9717  006F58  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9718  006F5A  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9719                           
  9720                           ;internal_flash.c: 181: address <<= 10;
  9721  006F5C  0E0A               	movlw	10
  9722  006F5E                     u10235:
  9723  006F5E  90D8               	bcf	status,0,c
  9724  006F60  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9725  006F62  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9726  006F64  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9727  006F66  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9728  006F68  2EE8               	decfsz	wreg,f,c
  9729  006F6A  D7F9               	goto	u10235
  9730                           
  9731                           ;internal_flash.c: 182: return address;
  9732  006F6C  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9733  006F70  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9734  006F74  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9735  006F78  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9736  006F7C  0012               	return	
  9737  006F7E                     __end_of_internalFlash_addressFromPage:
  9738                           	opt stack 0
  9739                           tblptru	equ	0xFF8
  9740                           tblptrh	equ	0xFF7
  9741                           tblptrl	equ	0xFF6
  9742                           tablat	equ	0xFF5
  9743                           prodh	equ	0xFF4
  9744                           prodl	equ	0xFF3
  9745                           intcon	equ	0xFF2
  9746                           intcon3	equ	0xFF0
  9747                           postinc0	equ	0xFEE
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postdec1	equ	0xFE5
  9751                           plusw1	equ	0xFE3
  9752                           fsr1h	equ	0xFE2
  9753                           fsr1l	equ	0xFE1
  9754                           indf2	equ	0xFDF
  9755                           postinc2	equ	0xFDE
  9756                           postdec2	equ	0xFDD
  9757                           plusw2	equ	0xFDB
  9758                           fsr2h	equ	0xFDA
  9759                           fsr2l	equ	0xFD9
  9760                           status	equ	0xFD8
  9761                           
  9762 ;; *************** function _fat_read_from_file_fast *****************
  9763 ;; Defined at:
  9764 ;;		line 787 in file "fat16.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  start_byte      4   65[COMRAM] unsigned long 
  9767 ;;  length          4   69[COMRAM] unsigned long 
  9768 ;;  data            2   73[COMRAM] PTR unsigned char 
  9769 ;;		 -> file_buffer(50), 
  9770 ;;  cluster         2   75[COMRAM] PTR unsigned int 
  9771 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
  9772 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
  9773 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
  9774 ;; Auto vars:     Size  Location     Type
  9775 ;;  position        4   10[BANK0 ] unsigned long 
  9776 ;;  read_length     2    8[BANK0 ] unsigned int 
  9777 ;;  needed_clust    2    6[BANK0 ] unsigned int 
  9778 ;;  offset          2    4[BANK0 ] unsigned int 
  9779 ;;  working_clus    2    2[BANK0 ] unsigned int 
  9780 ;;  sector          2    0[BANK0 ] unsigned int 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      unsigned char 
  9783 ;; Registers used:
  9784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9790 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:       40 bytes
  9795 ;; Hardware stack levels used:    1
  9796 ;; Hardware stack levels required when called:    7
  9797 ;; This function calls:
  9798 ;;		__data_sector_from_cluster
  9799 ;;		__find_nth_cluster
  9800 ;;		__read_fat
  9801 ;;		_flash_partial_read
  9802 ;; This function is called by:
  9803 ;;		__bootloader_verify_file
  9804 ;;		__bootloader_program
  9805 ;;		_fat_read_from_file
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           	psect	text39
  9810  001C16                     __ptext39:
  9811                           	opt stack 0
  9812  001C16                     _fat_read_from_file_fast:
  9813                           	opt stack 21
  9814                           
  9815                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
  9816                           
  9817                           ;incstack = 0
  9818  001C16  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
  9819  001C1A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
  9820  001C1E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
  9821  001C22  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
  9822  001C26  0E0A               	movlw	10
  9823  001C28  D005               	goto	u10670
  9824  001C2A                     u10675:
  9825  001C2A  90D8               	bcf	status,0,c
  9826  001C2C  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
  9827  001C2E  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
  9828  001C30  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
  9829  001C32  3250               	rrcf	??_fat_read_from_file_fast,f,c
  9830  001C34                     u10670:
  9831  001C34  2EE8               	decfsz	wreg,f,c
  9832  001C36  D7F9               	goto	u10675
  9833  001C38  C050  F0BC         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
  9834  001C3C  C051  F0BD         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
  9835                           
  9836                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
  9837  001C40  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9838  001C44  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9839  001C48  50DE               	movf	postinc2,w,c
  9840  001C4A  0100               	movlb	0	; () banked
  9841  001C4C  5DBC               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9842  001C4E  50DE               	movf	postinc2,w,c
  9843  001C50  59BD               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9844  001C52  B0D8               	btfsc	status,0,c
  9845  001C54  D002               	goto	l2140
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
  9849  001C56  0EFF               	movlw	255
  9850                           
  9851                           ; BSR set to: 0
  9852  001C58  0012               	return	
  9853  001C5A                     l2140:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
  9857                           
  9858                           ; BSR set to: 0
  9859  001C5A  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9860  001C5E  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9861  001C62  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
  9862  001C66  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
  9863  001C6A  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9864  001C6E  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9865  001C72  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
  9866  001C76  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
  9867  001C7A  1E50               	comf	??_fat_read_from_file_fast,f,c
  9868  001C7C  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9869  001C7E  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9870  001C80  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9871  001C82  51BC               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9872  001C84  2450               	addwf	??_fat_read_from_file_fast,w,c
  9873  001C86  6E3A               	movwf	__find_nth_cluster@n,c
  9874  001C88  51BD               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9875  001C8A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9876  001C8C  6E3B               	movwf	__find_nth_cluster@n+1,c
  9877  001C8E  EC8B  F02B         	call	__find_nth_cluster	;wreg free
  9878  001C92  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9879  001C96  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9880  001C9A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
  9881  001C9E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
  9882                           
  9883                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
  9884  001CA2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9885  001CA6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9886  001CAA  C0BC  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
  9887  001CAE  C0BD  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
  9888                           
  9889                           ;fat16.c: 813: working_cluster = (*cluster);
  9890  001CB2  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9891  001CB6  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9892  001CBA  CFDE F0B8          	movff	postinc2,fat_read_from_file_fast@working_cluster
  9893  001CBE  CFDD F0B9          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
  9894                           
  9895                           ;fat16.c: 816: position = (needed_cluster << 9);
  9896  001CC2  C0BC  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
  9897  001CC6  C0BD  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
  9898  001CCA  0E09               	movlw	9
  9899  001CCC                     u10695:
  9900  001CCC  90D8               	bcf	status,0,c
  9901  001CCE  3650               	rlcf	??_fat_read_from_file_fast,f,c
  9902  001CD0  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
  9903  001CD2  2EE8               	decfsz	wreg,f,c
  9904  001CD4  D7FB               	goto	u10695
  9905  001CD6  C050  F0C0         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
  9906  001CDA  C051  F0C1         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
  9907  001CDE  0100               	movlb	0	; () banked
  9908  001CE0  6BC2               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
  9909  001CE2  6BC3               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;fat16.c: 817: offset = start_byte - position;
  9913  001CE4  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9914  001CE8  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9915  001CEC  1E50               	comf	??_fat_read_from_file_fast,f,c
  9916  001CEE  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9917  001CF0  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9918  001CF2  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9919  001CF4  5042               	movf	fat_read_from_file_fast@start_byte,w,c
  9920  001CF6  2450               	addwf	??_fat_read_from_file_fast,w,c
  9921  001CF8  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9922  001CFA  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
  9923  001CFC  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9924  001CFE  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;fat16.c: 820: position = 0;
  9928  001D00  0E00               	movlw	0
  9929  001D02  6FC0               	movwf	fat_read_from_file_fast@position& (0+255),b
  9930  001D04  0E00               	movlw	0
  9931  001D06  6FC1               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
  9932  001D08  0E00               	movlw	0
  9933  001D0A  6FC2               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
  9934  001D0C  0E00               	movlw	0
  9935  001D0E  6FC3               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
  9936                           
  9937                           ;fat16.c: 821: while(position < length)
  9938  001D10  D089               	goto	l2142
  9939  001D12                     
  9940                           ; BSR set to: 0
  9941                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
  9942                           
  9943                           ; BSR set to: 0
  9944  001D12  0E02               	movlw	2
  9945  001D14  19BB               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
  9946  001D16  11BA               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
  9947  001D18  A4D8               	btfss	status,2,c
  9948  001D1A  D00F               	goto	l2144
  9949                           
  9950                           ; BSR set to: 0
  9951                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
  9952  001D1C  C0B8  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
  9953  001D20  C0B9  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
  9954  001D24  EC30  F033         	call	__read_fat	;wreg free
  9955  001D28  C030  F0B8         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
  9956  001D2C  C031  F0B9         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
  9957                           
  9958                           ;fat16.c: 828: offset = 0;
  9959  001D30  0E00               	movlw	0
  9960  001D32  0100               	movlb	0	; () banked
  9961  001D34  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9962  001D36  0E00               	movlw	0
  9963  001D38  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9964  001D3A                     l2144:
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
  9968                           
  9969                           ; BSR set to: 0
  9970  001D3A  C0B8  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
  9971  001D3E  C0B9  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
  9972  001D42  ECF5  F039         	call	__data_sector_from_cluster	;wreg free
  9973  001D46  C001  F0B6         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
  9974  001D4A  C002  F0B7         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
  9975                           
  9976                           ;fat16.c: 835: read_length = 512 - offset;
  9977  001D4E  C0BA  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
  9978  001D52  C0BB  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
  9979  001D56  1E50               	comf	??_fat_read_from_file_fast,f,c
  9980  001D58  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9981  001D5A  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9982  001D5C  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9983  001D5E  0E00               	movlw	0
  9984  001D60  2450               	addwf	??_fat_read_from_file_fast,w,c
  9985  001D62  0100               	movlb	0	; () banked
  9986  001D64  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9987  001D66  0E02               	movlw	2
  9988  001D68  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9989  001D6A  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;fat16.c: 836: if(read_length > (length-position))
  9993  001D6C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9994  001D6E  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
  9995  001D70  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9996  001D72  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
  9997  001D74  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
  9998  001D76  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
  9999  001D78  C0C0  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 10000  001D7C  C0C1  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 10001  001D80  C0C2  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 10002  001D84  C0C3  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 10003  001D88  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 10004  001D8A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 10005  001D8C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 10006  001D8E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 10007  001D90  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 10008  001D92  0E00               	movlw	0
 10009  001D94  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 10010  001D96  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 10011  001D98  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 10012  001D9A  5046               	movf	fat_read_from_file_fast@length,w,c
 10013  001D9C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 10014  001D9E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 10015  001DA0  5047               	movf	fat_read_from_file_fast@length+1,w,c
 10016  001DA2  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 10017  001DA4  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 10018  001DA6  5048               	movf	fat_read_from_file_fast@length+2,w,c
 10019  001DA8  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 10020  001DAA  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 10021  001DAC  5049               	movf	fat_read_from_file_fast@length+3,w,c
 10022  001DAE  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 10023  001DB0  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 10024  001DB2  5050               	movf	??_fat_read_from_file_fast,w,c
 10025  001DB4  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 10026  001DB6  5051               	movf	??_fat_read_from_file_fast+1,w,c
 10027  001DB8  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 10028  001DBA  5052               	movf	??_fat_read_from_file_fast+2,w,c
 10029  001DBC  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 10030  001DBE  5053               	movf	??_fat_read_from_file_fast+3,w,c
 10031  001DC0  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 10032  001DC2  B0D8               	btfsc	status,0,c
 10033  001DC4  D00E               	goto	l2145
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 10037  001DC6  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 10038  001DCA  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 10039  001DCE  1E50               	comf	??_fat_read_from_file_fast,f,c
 10040  001DD0  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 10041  001DD2  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 10042  001DD4  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 10043  001DD6  5046               	movf	fat_read_from_file_fast@length,w,c
 10044  001DD8  2450               	addwf	??_fat_read_from_file_fast,w,c
 10045  001DDA  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 10046  001DDC  5047               	movf	fat_read_from_file_fast@length+1,w,c
 10047  001DDE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 10048  001DE0  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 10049  001DE2                     l2145:
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 10053                           
 10054                           ; BSR set to: 0
 10055  001DE2  C0B6  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 10056  001DE6  C0B7  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 10057  001DEA  C0BA  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 10058  001DEE  C0BB  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 10059  001DF2  C0BE  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 10060  001DF6  C0BF  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 10061  001DFA  51C0               	movf	fat_read_from_file_fast@position& (0+255),w,b
 10062  001DFC  244A               	addwf	fat_read_from_file_fast@data,w,c
 10063  001DFE  6E2E               	movwf	flash_partial_read@data,c
 10064  001E00  51C1               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 10065  001E02  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 10066  001E04  6E2F               	movwf	flash_partial_read@data+1,c
 10067  001E06  EC51  F038         	call	_flash_partial_read	;wreg free
 10068                           
 10069                           ;fat16.c: 846: position += read_length;
 10070  001E0A  0100               	movlb	0	; () banked
 10071  001E0C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 10072  001E0E  27C0               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 10073  001E10  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 10074  001E12  23C1               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 10075  001E14  0E00               	movlw	0
 10076  001E16  23C2               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 10077  001E18  0E00               	movlw	0
 10078  001E1A  23C3               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;fat16.c: 847: offset += read_length;
 10082  001E1C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 10083  001E1E  27BA               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 10084  001E20  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 10085  001E22  23BB               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 10086  001E24                     l2142:
 10087                           
 10088                           ; BSR set to: 0
 10089                           
 10090                           ; BSR set to: 0
 10091  001E24  5046               	movf	fat_read_from_file_fast@length,w,c
 10092  001E26  5DC0               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 10093  001E28  5047               	movf	fat_read_from_file_fast@length+1,w,c
 10094  001E2A  59C1               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 10095  001E2C  5048               	movf	fat_read_from_file_fast@length+2,w,c
 10096  001E2E  59C2               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 10097  001E30  5049               	movf	fat_read_from_file_fast@length+3,w,c
 10098  001E32  59C3               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 10099  001E34  A0D8               	btfss	status,0,c
 10100  001E36  D76D               	goto	l2143
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 10104                           
 10105                           ; BSR set to: 0
 10106  001E38  0E00               	movlw	0
 10107  001E3A  0012               	return	
 10108  001E3C                     __end_of_fat_read_from_file_fast:
 10109                           	opt stack 0
 10110                           tblptru	equ	0xFF8
 10111                           tblptrh	equ	0xFF7
 10112                           tblptrl	equ	0xFF6
 10113                           tablat	equ	0xFF5
 10114                           prodh	equ	0xFF4
 10115                           prodl	equ	0xFF3
 10116                           intcon	equ	0xFF2
 10117                           intcon3	equ	0xFF0
 10118                           postinc0	equ	0xFEE
 10119                           wreg	equ	0xFE8
 10120                           indf1	equ	0xFE7
 10121                           postdec1	equ	0xFE5
 10122                           plusw1	equ	0xFE3
 10123                           fsr1h	equ	0xFE2
 10124                           fsr1l	equ	0xFE1
 10125                           indf2	equ	0xFDF
 10126                           postinc2	equ	0xFDE
 10127                           postdec2	equ	0xFDD
 10128                           plusw2	equ	0xFDB
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function __find_nth_cluster *****************
 10134 ;; Defined at:
 10135 ;;		line 182 in file "fat16.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  cluster         2   55[COMRAM] unsigned int 
 10138 ;;  n               2   57[COMRAM] unsigned int 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  sector          2   63[COMRAM] unsigned int 
 10141 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 10142 ;;  offset          2   59[COMRAM] unsigned int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  2   55[COMRAM] unsigned int 
 10145 ;; Registers used:
 10146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10156 ;;Total ram usage:       10 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    6
 10159 ;; This function calls:
 10160 ;;		__fat_offset_from_cluster
 10161 ;;		__fat_sector_from_cluster
 10162 ;;		__read_fat
 10163 ;;		__read_value_from_offset
 10164 ;;		_flash_sector_read
 10165 ;; This function is called by:
 10166 ;;		_fat_read_from_file_fast
 10167 ;;		_fat_modify_file
 10168 ;;		_fat_copy_sector_to_buffer
 10169 ;; This function uses a non-reentrant model
 10170 ;;
 10171                           
 10172                           	psect	text40
 10173  005716                     __ptext40:
 10174                           	opt stack 0
 10175  005716                     __find_nth_cluster:
 10176                           	opt stack 21
 10177                           
 10178                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;incstack = 0
 10182  005716  0E00               	movlw	0
 10183  005718  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 10184  00571A  0E00               	movlw	0
 10185  00571C  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 10186                           
 10187                           ;fat16.c: 189: if(n==1)
 10188  00571E  043A               	decf	__find_nth_cluster@n,w,c
 10189  005720  103B               	iorwf	__find_nth_cluster@n+1,w,c
 10190  005722  A4D8               	btfss	status,2,c
 10191  005724  D03E               	goto	l2027
 10192                           
 10193                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 10194  005726  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 10195  00572A  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 10196  00572E  EC30  F033         	call	__read_fat	;wreg free
 10197  005732  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 10198  005736  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 10199  00573A  0012               	return	
 10200  00573C                     
 10201                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 10202  00573C  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 10203  005740  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 10204  005744  EC82  F039         	call	__fat_sector_from_cluster	;wreg free
 10205  005748  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 10206  00574C  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 10207                           
 10208                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 10209  005750  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 10210  005754  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 10211  005758  EC8E  F039         	call	__fat_offset_from_cluster	;wreg free
 10212  00575C  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 10213  005760  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 10214                           
 10215                           ;fat16.c: 201: if(sector != sector_in_buffer)
 10216  005764  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 10217  005766  1840               	xorwf	__find_nth_cluster@sector,w,c
 10218  005768  E104               	bnz	u10130
 10219  00576A  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 10220  00576C  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 10221  00576E  B4D8               	btfsc	status,2,c
 10222  005770  D00A               	goto	l2029
 10223  005772                     u10130:
 10224                           
 10225                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 10226  005772  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 10227  005776  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 10228  00577A  0ECC               	movlw	low _buffer
 10229  00577C  6E2A               	movwf	flash_sector_read@data,c
 10230  00577E  0E02               	movlw	high _buffer
 10231  005780  6E2B               	movwf	flash_sector_read@data+1,c
 10232  005782  EC77  F038         	call	_flash_sector_read	;wreg free
 10233  005786                     l2029:
 10234                           
 10235                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 10236  005786  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 10237  00578A  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 10238  00578E  0ECC               	movlw	low _buffer
 10239  005790  6E03               	movwf	__read_value_from_offset@buffer,c
 10240  005792  0E02               	movlw	high _buffer
 10241  005794  6E04               	movwf	__read_value_from_offset@buffer+1,c
 10242  005796  ECB5  F035         	call	__read_value_from_offset	;wreg free
 10243  00579A  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 10244  00579E  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 10245  0057A2                     l2027:
 10246  0057A2  503A               	movf	__find_nth_cluster@n,w,c
 10247  0057A4  103B               	iorwf	__find_nth_cluster@n+1,w,c
 10248  0057A6  A4D8               	btfss	status,2,c
 10249  0057A8  D7C9               	goto	l2028
 10250                           
 10251                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 10252  0057AA  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 10253  0057AE  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 10254  0057B2  0012               	return		;funcret
 10255  0057B4                     __end_of__find_nth_cluster:
 10256                           	opt stack 0
 10257                           tblptru	equ	0xFF8
 10258                           tblptrh	equ	0xFF7
 10259                           tblptrl	equ	0xFF6
 10260                           tablat	equ	0xFF5
 10261                           prodh	equ	0xFF4
 10262                           prodl	equ	0xFF3
 10263                           intcon	equ	0xFF2
 10264                           intcon3	equ	0xFF0
 10265                           postinc0	equ	0xFEE
 10266                           wreg	equ	0xFE8
 10267                           indf1	equ	0xFE7
 10268                           postdec1	equ	0xFE5
 10269                           plusw1	equ	0xFE3
 10270                           fsr1h	equ	0xFE2
 10271                           fsr1l	equ	0xFE1
 10272                           indf2	equ	0xFDF
 10273                           postinc2	equ	0xFDE
 10274                           postdec2	equ	0xFDD
 10275                           plusw2	equ	0xFDB
 10276                           fsr2h	equ	0xFDA
 10277                           fsr2l	equ	0xFD9
 10278                           status	equ	0xFD8
 10279                           
 10280 ;; *************** function __read_value_from_offset *****************
 10281 ;; Defined at:
 10282 ;;		line 114 in file "fat16.c"
 10283 ;; Parameters:    Size  Location     Type
 10284 ;;  offset          2    0[COMRAM] unsigned int 
 10285 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 10286 ;;		 -> buffer(512), 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  value           2    7[COMRAM] unsigned int 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  2    0[COMRAM] unsigned int 
 10291 ;; Registers used:
 10292 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10300 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;Total ram usage:        9 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		__find_nth_cluster
 10308 ;;		__make_cluster_chain
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text41
 10313  006B6A                     __ptext41:
 10314                           	opt stack 0
 10315  006B6A                     __read_value_from_offset:
 10316                           	opt stack 26
 10317                           
 10318                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 10319                           
 10320                           ;incstack = 0
 10321  006B6A  0E01               	movlw	1
 10322  006B6C  2401               	addwf	__read_value_from_offset@offset,w,c
 10323  006B6E  6E05               	movwf	??__read_value_from_offset& (0+255),c
 10324  006B70  0E00               	movlw	0
 10325  006B72  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 10326  006B74  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 10327  006B76  5005               	movf	??__read_value_from_offset,w,c
 10328  006B78  2403               	addwf	__read_value_from_offset@buffer,w,c
 10329  006B7A  6ED9               	movwf	fsr2l,c
 10330  006B7C  5006               	movf	??__read_value_from_offset+1,w,c
 10331  006B7E  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 10332  006B80  6EDA               	movwf	fsr2h,c
 10333  006B82  50DF               	movf	indf2,w,c
 10334  006B84  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 10335  006B86  5007               	movf	??__read_value_from_offset+2,w,c
 10336  006B88  6E08               	movwf	__read_value_from_offset@value,c
 10337  006B8A  6A09               	clrf	__read_value_from_offset@value+1,c
 10338                           
 10339                           ;fat16.c: 118: value <<= 8;
 10340  006B8C  5008               	movf	__read_value_from_offset@value,w,c
 10341  006B8E  6E09               	movwf	__read_value_from_offset@value+1,c
 10342  006B90  6A08               	clrf	__read_value_from_offset@value,c
 10343                           
 10344                           ;fat16.c: 119: value |= buffer[offset];
 10345  006B92  5001               	movf	__read_value_from_offset@offset,w,c
 10346  006B94  2403               	addwf	__read_value_from_offset@buffer,w,c
 10347  006B96  6ED9               	movwf	fsr2l,c
 10348  006B98  5002               	movf	__read_value_from_offset@offset+1,w,c
 10349  006B9A  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 10350  006B9C  6EDA               	movwf	fsr2h,c
 10351  006B9E  50DF               	movf	indf2,w,c
 10352  006BA0  6E05               	movwf	??__read_value_from_offset& (0+255),c
 10353  006BA2  5005               	movf	??__read_value_from_offset,w,c
 10354  006BA4  1208               	iorwf	__read_value_from_offset@value,f,c
 10355                           
 10356                           ;fat16.c: 120: return value;
 10357  006BA6  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 10358  006BAA  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 10359  006BAE  0012               	return	
 10360  006BB0                     __end_of__read_value_from_offset:
 10361                           	opt stack 0
 10362                           tblptru	equ	0xFF8
 10363                           tblptrh	equ	0xFF7
 10364                           tblptrl	equ	0xFF6
 10365                           tablat	equ	0xFF5
 10366                           prodh	equ	0xFF4
 10367                           prodl	equ	0xFF3
 10368                           intcon	equ	0xFF2
 10369                           intcon3	equ	0xFF0
 10370                           postinc0	equ	0xFEE
 10371                           wreg	equ	0xFE8
 10372                           indf1	equ	0xFE7
 10373                           postdec1	equ	0xFE5
 10374                           plusw1	equ	0xFE3
 10375                           fsr1h	equ	0xFE2
 10376                           fsr1l	equ	0xFE1
 10377                           indf2	equ	0xFDF
 10378                           postinc2	equ	0xFDE
 10379                           postdec2	equ	0xFDD
 10380                           plusw2	equ	0xFDB
 10381                           fsr2h	equ	0xFDA
 10382                           fsr2l	equ	0xFD9
 10383                           status	equ	0xFD8
 10384                           
 10385 ;; *************** function __read_fat *****************
 10386 ;; Defined at:
 10387 ;;		line 456 in file "fat16.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  cluster         2   47[COMRAM] unsigned int 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;  value           2   53[COMRAM] unsigned int 
 10392 ;;  offset          2   51[COMRAM] unsigned int 
 10393 ;;  sector          2   49[COMRAM] unsigned int 
 10394 ;; Return value:  Size  Location     Type
 10395 ;;                  2   47[COMRAM] unsigned int 
 10396 ;; Registers used:
 10397 ;;		wreg, status,2, status,0, cstack
 10398 ;; Tracked objects:
 10399 ;;		On entry : 0/0
 10400 ;;		On exit  : 0/0
 10401 ;;		Unchanged: 0/0
 10402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10404 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10406 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10407 ;;Total ram usage:        8 bytes
 10408 ;; Hardware stack levels used:    1
 10409 ;; Hardware stack levels required when called:    5
 10410 ;; This function calls:
 10411 ;;		__fat_offset_from_cluster
 10412 ;;		__fat_sector_from_cluster
 10413 ;;		_flash_partial_read
 10414 ;; This function is called by:
 10415 ;;		__find_nth_cluster
 10416 ;;		_fat_read_from_file_fast
 10417 ;;		_fat_modify_file
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text42
 10422  006660                     __ptext42:
 10423                           	opt stack 0
 10424  006660                     __read_fat:
 10425                           	opt stack 22
 10426                           
 10427                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 10428                           
 10429                           ;incstack = 0
 10430  006660  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 10431  006664  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 10432  006668  EC82  F039         	call	__fat_sector_from_cluster	;wreg free
 10433  00666C  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 10434  006670  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 10435                           
 10436                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 10437  006674  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 10438  006678  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 10439  00667C  EC8E  F039         	call	__fat_offset_from_cluster	;wreg free
 10440  006680  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 10441  006684  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 10442                           
 10443                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 10444  006688  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 10445  00668C  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 10446  006690  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 10447  006694  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 10448  006698  0E00               	movlw	0
 10449  00669A  6E2D               	movwf	flash_partial_read@length+1,c
 10450  00669C  0E02               	movlw	2
 10451  00669E  6E2C               	movwf	flash_partial_read@length,c
 10452  0066A0  0E36               	movlw	low __read_fat@value
 10453  0066A2  6E2E               	movwf	flash_partial_read@data,c
 10454  0066A4  0E00               	movlw	high __read_fat@value
 10455  0066A6  6E2F               	movwf	flash_partial_read@data+1,c
 10456  0066A8  EC51  F038         	call	_flash_partial_read	;wreg free
 10457                           
 10458                           ;fat16.c: 470: return value;
 10459  0066AC  C036  F030         	movff	__read_fat@value,?__read_fat
 10460  0066B0  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 10461  0066B4  0012               	return	
 10462  0066B6                     __end_of__read_fat:
 10463                           	opt stack 0
 10464                           tblptru	equ	0xFF8
 10465                           tblptrh	equ	0xFF7
 10466                           tblptrl	equ	0xFF6
 10467                           tablat	equ	0xFF5
 10468                           prodh	equ	0xFF4
 10469                           prodl	equ	0xFF3
 10470                           intcon	equ	0xFF2
 10471                           intcon3	equ	0xFF0
 10472                           postinc0	equ	0xFEE
 10473                           wreg	equ	0xFE8
 10474                           indf1	equ	0xFE7
 10475                           postdec1	equ	0xFE5
 10476                           plusw1	equ	0xFE3
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           postdec2	equ	0xFDD
 10482                           plusw2	equ	0xFDB
 10483                           fsr2h	equ	0xFDA
 10484                           fsr2l	equ	0xFD9
 10485                           status	equ	0xFD8
 10486                           
 10487 ;; *************** function __fat_sector_from_cluster *****************
 10488 ;; Defined at:
 10489 ;;		line 75 in file "fat16.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;  cluster         2    0[COMRAM] unsigned int 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  2    0[COMRAM] unsigned int 
 10496 ;; Registers used:
 10497 ;;		wreg, status,2, status,0
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;Total ram usage:        2 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		__find_nth_cluster
 10513 ;;		__read_fat
 10514 ;;		__make_cluster_chain
 10515 ;; This function uses a non-reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text43
 10519  007304                     __ptext43:
 10520                           	opt stack 0
 10521  007304                     __fat_sector_from_cluster:
 10522                           	opt stack 26
 10523                           
 10524                           ;fat16.c: 77: cluster >>= 8;
 10525                           
 10526                           ;incstack = 0
 10527  007304  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 10528  007306  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 10529  007308  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 10530                           
 10531                           ;fat16.c: 78: cluster += 2;
 10532  00730A  0E02               	movlw	2
 10533  00730C  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 10534  00730E  0E00               	movlw	0
 10535  007310  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 10536                           
 10537                           ;fat16.c: 79: return cluster;
 10538  007312  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 10539  007316  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 10540  00731A  0012               	return	
 10541  00731C                     __end_of__fat_sector_from_cluster:
 10542                           	opt stack 0
 10543                           tblptru	equ	0xFF8
 10544                           tblptrh	equ	0xFF7
 10545                           tblptrl	equ	0xFF6
 10546                           tablat	equ	0xFF5
 10547                           prodh	equ	0xFF4
 10548                           prodl	equ	0xFF3
 10549                           intcon	equ	0xFF2
 10550                           intcon3	equ	0xFF0
 10551                           postinc0	equ	0xFEE
 10552                           wreg	equ	0xFE8
 10553                           indf1	equ	0xFE7
 10554                           postdec1	equ	0xFE5
 10555                           plusw1	equ	0xFE3
 10556                           fsr1h	equ	0xFE2
 10557                           fsr1l	equ	0xFE1
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           postdec2	equ	0xFDD
 10561                           plusw2	equ	0xFDB
 10562                           fsr2h	equ	0xFDA
 10563                           fsr2l	equ	0xFD9
 10564                           status	equ	0xFD8
 10565                           
 10566 ;; *************** function __fat_offset_from_cluster *****************
 10567 ;; Defined at:
 10568 ;;		line 82 in file "fat16.c"
 10569 ;; Parameters:    Size  Location     Type
 10570 ;;  cluster         2    0[COMRAM] unsigned int 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;		None
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  2    0[COMRAM] unsigned int 
 10575 ;; Registers used:
 10576 ;;		wreg, status,2, status,0
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;Total ram usage:        2 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		__find_nth_cluster
 10592 ;;		__read_fat
 10593 ;;		__make_cluster_chain
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           
 10597                           	psect	text44
 10598  00731C                     __ptext44:
 10599                           	opt stack 0
 10600  00731C                     __fat_offset_from_cluster:
 10601                           	opt stack 26
 10602                           
 10603                           ;fat16.c: 84: cluster &= 0xFF;
 10604                           
 10605                           ;incstack = 0
 10606  00731C  0EFF               	movlw	255
 10607  00731E  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 10608  007320  0E00               	movlw	0
 10609  007322  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 10610                           
 10611                           ;fat16.c: 85: cluster <<= 1;
 10612  007324  90D8               	bcf	status,0,c
 10613  007326  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 10614  007328  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 10615                           
 10616                           ;fat16.c: 86: return cluster;
 10617  00732A  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 10618  00732E  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 10619  007332  0012               	return	
 10620  007334                     __end_of__fat_offset_from_cluster:
 10621                           	opt stack 0
 10622                           tblptru	equ	0xFF8
 10623                           tblptrh	equ	0xFF7
 10624                           tblptrl	equ	0xFF6
 10625                           tablat	equ	0xFF5
 10626                           prodh	equ	0xFF4
 10627                           prodl	equ	0xFF3
 10628                           intcon	equ	0xFF2
 10629                           intcon3	equ	0xFF0
 10630                           postinc0	equ	0xFEE
 10631                           wreg	equ	0xFE8
 10632                           indf1	equ	0xFE7
 10633                           postdec1	equ	0xFE5
 10634                           plusw1	equ	0xFE3
 10635                           fsr1h	equ	0xFE2
 10636                           fsr1l	equ	0xFE1
 10637                           indf2	equ	0xFDF
 10638                           postinc2	equ	0xFDE
 10639                           postdec2	equ	0xFDD
 10640                           plusw2	equ	0xFDB
 10641                           fsr2h	equ	0xFDA
 10642                           fsr2l	equ	0xFD9
 10643                           status	equ	0xFD8
 10644                           
 10645 ;; *************** function __data_sector_from_cluster *****************
 10646 ;; Defined at:
 10647 ;;		line 70 in file "fat16.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;		None
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  2    0[COMRAM] unsigned int 
 10654 ;; Registers used:
 10655 ;;		wreg, status,2, status,0
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;Total ram usage:        2 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; This function calls:
 10668 ;;		Nothing
 10669 ;; This function is called by:
 10670 ;;		_fat_read_from_file_fast
 10671 ;;		_fat_modify_file
 10672 ;;		_fat_copy_sector_to_buffer
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text45
 10677  0073EA                     __ptext45:
 10678                           	opt stack 0
 10679  0073EA                     __data_sector_from_cluster:
 10680                           	opt stack 27
 10681                           
 10682                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 10683                           
 10684                           ;incstack = 0
 10685  0073EA  0E24               	movlw	36
 10686  0073EC  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 10687  0073EE  6E01               	movwf	?__data_sector_from_cluster,c
 10688  0073F0  0E00               	movlw	0
 10689  0073F2  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 10690  0073F4  6E02               	movwf	?__data_sector_from_cluster+1,c
 10691  0073F6  0012               	return	
 10692  0073F8                     __end_of__data_sector_from_cluster:
 10693                           	opt stack 0
 10694                           tblptru	equ	0xFF8
 10695                           tblptrh	equ	0xFF7
 10696                           tblptrl	equ	0xFF6
 10697                           tablat	equ	0xFF5
 10698                           prodh	equ	0xFF4
 10699                           prodl	equ	0xFF3
 10700                           intcon	equ	0xFF2
 10701                           intcon3	equ	0xFF0
 10702                           postinc0	equ	0xFEE
 10703                           wreg	equ	0xFE8
 10704                           indf1	equ	0xFE7
 10705                           postdec1	equ	0xFE5
 10706                           plusw1	equ	0xFE3
 10707                           fsr1h	equ	0xFE2
 10708                           fsr1l	equ	0xFE1
 10709                           indf2	equ	0xFDF
 10710                           postinc2	equ	0xFDE
 10711                           postdec2	equ	0xFDD
 10712                           plusw2	equ	0xFDB
 10713                           fsr2h	equ	0xFDA
 10714                           fsr2l	equ	0xFD9
 10715                           status	equ	0xFD8
 10716                           
 10717 ;; *************** function _fat_get_file_information *****************
 10718 ;; Defined at:
 10719 ;;		line 1391 in file "fat16.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  file_number     1    wreg     unsigned char 
 10722 ;;  data            2   47[COMRAM] PTR struct .
 10723 ;;		 -> _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@root(32), fat_resize_file@root(3
      +2), 
 10724 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), 
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  file_number     1   54[COMRAM] unsigned char 
 10727 ;;  offset          2   52[COMRAM] unsigned int 
 10728 ;;  root_sector     2   50[COMRAM] unsigned int 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      unsigned char 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;Total ram usage:        8 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    5
 10745 ;; This function calls:
 10746 ;;		__offset_from_file_number
 10747 ;;		__sector_from_file_number
 10748 ;;		_flash_partial_read
 10749 ;; This function is called by:
 10750 ;;		__bootloader_verify_file
 10751 ;;		__bootloader_program
 10752 ;;		_fat_rename_file
 10753 ;;		_fat_read_from_file
 10754 ;;		_fat_resize_file
 10755 ;;		_fat_modify_file
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text46
 10760  005FBC                     __ptext46:
 10761                           	opt stack 0
 10762  005FBC                     _fat_get_file_information:
 10763                           	opt stack 23
 10764                           
 10765                           ;incstack = 0
 10766                           ;fat_get_file_information@file_number stored from wreg
 10767  005FBC  6E37               	movwf	fat_get_file_information@file_number,c
 10768                           
 10769                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 10770  005FBE  0E3F               	movlw	63
 10771  005FC0  6437               	cpfsgt	fat_get_file_information@file_number,c
 10772  005FC2  D002               	goto	l2338
 10773                           
 10774                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 10775  005FC4  0E01               	movlw	1
 10776  005FC6  0012               	return	
 10777  005FC8                     l2338:
 10778                           
 10779                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 10780  005FC8  5037               	movf	fat_get_file_information@file_number,w,c
 10781  005FCA  ECD5  F037         	call	__sector_from_file_number
 10782  005FCE  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 10783  005FD2  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 10784                           
 10785                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 10786  005FD6  5037               	movf	fat_get_file_information@file_number,w,c
 10787  005FD8  EC64  F038         	call	__offset_from_file_number
 10788  005FDC  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 10789  005FE0  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 10790                           
 10791                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 10792  005FE4  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 10793  005FE8  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 10794  005FEC  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 10795  005FF0  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 10796  005FF4  0E00               	movlw	0
 10797  005FF6  6E2D               	movwf	flash_partial_read@length+1,c
 10798  005FF8  0E20               	movlw	32
 10799  005FFA  6E2C               	movwf	flash_partial_read@length,c
 10800  005FFC  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 10801  006000  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 10802  006004  EC51  F038         	call	_flash_partial_read	;wreg free
 10803                           
 10804                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 10805  006008  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10806  00600C  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10807  006010  50DF               	movf	indf2,w,c
 10808  006012  B4D8               	btfsc	status,2,c
 10809  006014  D008               	goto	u10660
 10810  006016  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10811  00601A  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10812  00601E  0EE5               	movlw	229
 10813  006020  18DE               	xorwf	postinc2,w,c
 10814  006022  A4D8               	btfss	status,2,c
 10815  006024  D002               	goto	l2340
 10816  006026                     u10660:
 10817                           
 10818                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 10819  006026  0E02               	movlw	2
 10820  006028  0012               	return	
 10821  00602A                     l2340:
 10822                           
 10823                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 10824  00602A  0E00               	movlw	0
 10825  00602C  0012               	return	
 10826  00602E                     __end_of_fat_get_file_information:
 10827                           	opt stack 0
 10828                           tblptru	equ	0xFF8
 10829                           tblptrh	equ	0xFF7
 10830                           tblptrl	equ	0xFF6
 10831                           tablat	equ	0xFF5
 10832                           prodh	equ	0xFF4
 10833                           prodl	equ	0xFF3
 10834                           intcon	equ	0xFF2
 10835                           intcon3	equ	0xFF0
 10836                           postinc0	equ	0xFEE
 10837                           wreg	equ	0xFE8
 10838                           indf1	equ	0xFE7
 10839                           postdec1	equ	0xFE5
 10840                           plusw1	equ	0xFE3
 10841                           fsr1h	equ	0xFE2
 10842                           fsr1l	equ	0xFE1
 10843                           indf2	equ	0xFDF
 10844                           postinc2	equ	0xFDE
 10845                           postdec2	equ	0xFDD
 10846                           plusw2	equ	0xFDB
 10847                           fsr2h	equ	0xFDA
 10848                           fsr2l	equ	0xFD9
 10849                           status	equ	0xFD8
 10850                           
 10851 ;; *************** function __bootloader_check_address *****************
 10852 ;; Defined at:
 10853 ;;		line 112 in file "bootloader.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;  address         4    0[COMRAM] unsigned long 
 10856 ;;  dataLength      1    4[COMRAM] unsigned char 
 10857 ;; Auto vars:     Size  Location     Type
 10858 ;;  cntr            1   11[COMRAM] unsigned char 
 10859 ;;  byte_status     1   10[COMRAM] enum E6956
 10860 ;;  worst_case      1    9[COMRAM] enum E6956
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      enum E6956
 10863 ;; Registers used:
 10864 ;;		wreg, status,2, status,0
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10870 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;Total ram usage:       12 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		__bootloader_verify_file
 10880 ;;		__bootloader_program
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           	psect	text47
 10885  004B02                     __ptext47:
 10886                           	opt stack 0
 10887  004B02                     __bootloader_check_address:
 10888                           	opt stack 28
 10889                           
 10890                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10891                           
 10892                           ;incstack = 0
 10893  004B02  0E00               	movlw	0
 10894  004B04  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10895                           
 10896                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10897  004B06  0E00               	movlw	0
 10898  004B08  6E0C               	movwf	__bootloader_check_address@cntr,c
 10899  004B0A  D062               	goto	l2479
 10900  004B0C                     
 10901                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 10902  004B0C  500C               	movf	__bootloader_check_address@cntr,w,c
 10903  004B0E  2401               	addwf	__bootloader_check_address@address,w,c
 10904  004B10  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10905  004B12  0E00               	movlw	0
 10906  004B14  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10907  004B16  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10908  004B18  0E00               	movlw	0
 10909  004B1A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10910  004B1C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10911  004B1E  0E00               	movlw	0
 10912  004B20  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10913  004B22  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10914  004B24  5009               	movf	??__bootloader_check_address+3,w,c
 10915  004B26  1008               	iorwf	??__bootloader_check_address+2,w,c
 10916  004B28  E104               	bnz	u10880
 10917  004B2A  0E90               	movlw	144
 10918  004B2C  5C07               	subwf	??__bootloader_check_address+1,w,c
 10919  004B2E  A0D8               	btfss	status,0,c
 10920  004B30  D018               	goto	l2481
 10921  004B32                     u10880:
 10922  004B32  500C               	movf	__bootloader_check_address@cntr,w,c
 10923  004B34  2401               	addwf	__bootloader_check_address@address,w,c
 10924  004B36  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10925  004B38  0E00               	movlw	0
 10926  004B3A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10927  004B3C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10928  004B3E  0E00               	movlw	0
 10929  004B40  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10930  004B42  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10931  004B44  0E00               	movlw	0
 10932  004B46  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10933  004B48  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10934  004B4A  5009               	movf	??__bootloader_check_address+3,w,c
 10935  004B4C  E10A               	bnz	l13257
 10936  004B4E  0EF8               	movlw	248
 10937  004B50  5C06               	subwf	??__bootloader_check_address,w,c
 10938  004B52  0EFF               	movlw	255
 10939  004B54  5807               	subwfb	??__bootloader_check_address+1,w,c
 10940  004B56  0E01               	movlw	1
 10941  004B58  5808               	subwfb	??__bootloader_check_address+2,w,c
 10942  004B5A  B0D8               	btfsc	status,0,c
 10943  004B5C  D002               	goto	l2481
 10944                           
 10945                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10946  004B5E  0E00               	movlw	0
 10947  004B60  D029               	goto	L4
 10948  004B62                     l2481:
 10949  004B62                     l13257:
 10950                           
 10951                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10952  004B62  500C               	movf	__bootloader_check_address@cntr,w,c
 10953  004B64  2401               	addwf	__bootloader_check_address@address,w,c
 10954  004B66  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10955  004B68  0E00               	movlw	0
 10956  004B6A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10957  004B6C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10958  004B6E  0E00               	movlw	0
 10959  004B70  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10960  004B72  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10961  004B74  0E00               	movlw	0
 10962  004B76  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10963  004B78  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10964  004B7A  5009               	movf	??__bootloader_check_address+3,w,c
 10965  004B7C  E108               	bnz	u10900
 10966  004B7E  0EF8               	movlw	248
 10967  004B80  5C06               	subwf	??__bootloader_check_address,w,c
 10968  004B82  0EFF               	movlw	255
 10969  004B84  5807               	subwfb	??__bootloader_check_address+1,w,c
 10970  004B86  0E01               	movlw	1
 10971  004B88  5808               	subwfb	??__bootloader_check_address+2,w,c
 10972  004B8A  A0D8               	btfss	status,0,c
 10973  004B8C  D015               	goto	l2483
 10974  004B8E                     u10900:
 10975  004B8E  500C               	movf	__bootloader_check_address@cntr,w,c
 10976  004B90  2401               	addwf	__bootloader_check_address@address,w,c
 10977  004B92  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10978  004B94  0E00               	movlw	0
 10979  004B96  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10980  004B98  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10981  004B9A  0E00               	movlw	0
 10982  004B9C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10983  004B9E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10984  004BA0  0E00               	movlw	0
 10985  004BA2  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10986  004BA4  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10987  004BA6  5009               	movf	??__bootloader_check_address+3,w,c
 10988  004BA8  E107               	bnz	l2483
 10989  004BAA  0E02               	movlw	2
 10990  004BAC  5C08               	subwf	??__bootloader_check_address+2,w,c
 10991  004BAE  B0D8               	btfsc	status,0,c
 10992  004BB0  D003               	goto	l2483
 10993                           
 10994                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10995  004BB2  0E01               	movlw	1
 10996  004BB4                     L4:
 10997  004BB4  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10998                           
 10999                           ;bootloader.c: 133: }
 11000  004BB6  D001               	goto	l2484
 11001  004BB8                     l2483:
 11002                           
 11003                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 11004  004BB8  680B               	setf	__bootloader_check_address@byte_status,c
 11005  004BBA                     l2484:
 11006                           
 11007                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 11008  004BBA  280B               	incf	__bootloader_check_address@byte_status,w,c
 11009  004BBC  A4D8               	btfss	status,2,c
 11010  004BBE  D002               	goto	l2485
 11011                           
 11012                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 11013  004BC0  0EFF               	movlw	255
 11014  004BC2  0012               	return	
 11015  004BC4                     l2485:
 11016                           
 11017                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 11018  004BC4  500B               	movf	__bootloader_check_address@byte_status,w,c
 11019  004BC6  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 11020  004BC8  A0D8               	btfss	status,0,c
 11021                           
 11022                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 11023  004BCA  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 11024  004BCE  2A0C               	incf	__bootloader_check_address@cntr,f,c
 11025  004BD0                     l2479:
 11026  004BD0  5005               	movf	__bootloader_check_address@dataLength,w,c
 11027  004BD2  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 11028  004BD4  A0D8               	btfss	status,0,c
 11029  004BD6  D79A               	goto	l2480
 11030                           
 11031                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 11032  004BD8  500A               	movf	__bootloader_check_address@worst_case,w,c
 11033  004BDA  0012               	return	
 11034  004BDC                     __end_of__bootloader_check_address:
 11035                           	opt stack 0
 11036                           tblptru	equ	0xFF8
 11037                           tblptrh	equ	0xFF7
 11038                           tblptrl	equ	0xFF6
 11039                           tablat	equ	0xFF5
 11040                           prodh	equ	0xFF4
 11041                           prodl	equ	0xFF3
 11042                           intcon	equ	0xFF2
 11043                           intcon3	equ	0xFF0
 11044                           postinc0	equ	0xFEE
 11045                           wreg	equ	0xFE8
 11046                           indf1	equ	0xFE7
 11047                           postdec1	equ	0xFE5
 11048                           plusw1	equ	0xFE3
 11049                           fsr1h	equ	0xFE2
 11050                           fsr1l	equ	0xFE1
 11051                           indf2	equ	0xFDF
 11052                           postinc2	equ	0xFDE
 11053                           postdec2	equ	0xFDD
 11054                           plusw2	equ	0xFDB
 11055                           fsr2h	equ	0xFDA
 11056                           fsr2l	equ	0xFD9
 11057                           status	equ	0xFD8
 11058                           
 11059 ;; *************** function __bootloader_find_file *****************
 11060 ;; Defined at:
 11061 ;;		line 155 in file "bootloader.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;		None
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;		None
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  1    wreg      void 
 11068 ;; Registers used:
 11069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11070 ;; Tracked objects:
 11071 ;;		On entry : 0/0
 11072 ;;		On exit  : 0/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;Total ram usage:        0 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    7
 11082 ;; This function calls:
 11083 ;;		_fat_find_file
 11084 ;;		_fat_get_file_size
 11085 ;; This function is called by:
 11086 ;;		_bootloader_run
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text48
 11091  0055D6                     __ptext48:
 11092                           	opt stack 0
 11093  0055D6                     __bootloader_find_file:
 11094                           	opt stack 22
 11095                           
 11096                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 11097                           
 11098                           ;incstack = 0
 11099  0055D6  0E8E               	movlw	low _bootloader_filename
 11100  0055D8  6E2C               	movwf	fat_find_file@name,c
 11101  0055DA  0E8F               	movlw	high _bootloader_filename
 11102  0055DC  6E2D               	movwf	fat_find_file@name+1,c
 11103  0055DE  0EC7               	movlw	low _bootloader_extension
 11104  0055E0  6E2E               	movwf	fat_find_file@extension,c
 11105  0055E2  0E8F               	movlw	high _bootloader_extension
 11106  0055E4  6E2F               	movwf	fat_find_file@extension+1,c
 11107  0055E6  EC55  F023         	call	_fat_find_file	;wreg free
 11108  0055EA  0100               	movlb	0	; () banked
 11109  0055EC  6FFF               	movwf	_file_number& (0+255),b
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;bootloader.c: 161: if(file_number!=0xFF)
 11113  0055EE  29FF               	incf	_file_number& (0+255),w,b
 11114  0055F0  B4D8               	btfsc	status,2,c
 11115  0055F2  D034               	goto	l2491
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 11119  0055F4  51FF               	movf	_file_number& (0+255),w,b
 11120  0055F6  EC4F  F030         	call	_fat_get_file_size
 11121  0055FA  C036  F07B         	movff	?_fat_get_file_size,_hex_file_size
 11122  0055FE  C037  F07C         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11123  005602  C038  F07D         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11124  005606  C039  F07E         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11125                           
 11126                           ;bootloader.c: 166: hex_file_entries = 0;
 11127  00560A  0E00               	movlw	0
 11128  00560C  0101               	movlb	1	; () banked
 11129  00560E  6F6A               	movwf	(_hex_file_entries+1)& (0+255),b
 11130  005610  0E00               	movlw	0
 11131  005612  6F69               	movwf	_hex_file_entries& (0+255),b
 11132                           
 11133                           ; BSR set to: 1
 11134                           ;bootloader.c: 167: hex_file_offset = 0;
 11135  005614  0E00               	movlw	0
 11136  005616  0100               	movlb	0	; () banked
 11137  005618  6F7F               	movwf	_hex_file_offset& (0+255),b
 11138  00561A  0E00               	movlw	0
 11139  00561C  6F80               	movwf	(_hex_file_offset+1)& (0+255),b
 11140  00561E  0E00               	movlw	0
 11141  005620  6F81               	movwf	(_hex_file_offset+2)& (0+255),b
 11142  005622  0E00               	movlw	0
 11143  005624  6F82               	movwf	(_hex_file_offset+3)& (0+255),b
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 11147  005626  0101               	movlb	1	; () banked
 11148  005628  6947               	setf	_file_minimum_address& (0+255),b
 11149  00562A  6948               	setf	(_file_minimum_address+1)& (0+255),b
 11150  00562C  6949               	setf	(_file_minimum_address+2)& (0+255),b
 11151  00562E  694A               	setf	(_file_minimum_address+3)& (0+255),b
 11152                           
 11153                           ; BSR set to: 1
 11154                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 11155  005630  0E00               	movlw	0
 11156  005632  6F43               	movwf	_file_maximum_address& (0+255),b
 11157  005634  0E00               	movlw	0
 11158  005636  6F44               	movwf	(_file_maximum_address+1)& (0+255),b
 11159  005638  0E00               	movlw	0
 11160  00563A  6F45               	movwf	(_file_maximum_address+2)& (0+255),b
 11161  00563C  0E00               	movlw	0
 11162  00563E  6F46               	movwf	(_file_maximum_address+3)& (0+255),b
 11163                           
 11164                           ; BSR set to: 1
 11165                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 11166  005640  0E00               	movlw	0
 11167  005642  6F3F               	movwf	_extended_linear_address& (0+255),b
 11168  005644  0E00               	movlw	0
 11169  005646  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 11170  005648  0E00               	movlw	0
 11171  00564A  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 11172  00564C  0E00               	movlw	0
 11173  00564E  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 11174                           
 11175                           ; BSR set to: 1
 11176                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 11177  005650  0E20               	movlw	32
 11178  005652  0100               	movlb	0	; () banked
 11179  005654  6F66               	movwf	(_os+6)& (0+255),b
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 11183  005656  0E20               	movlw	32
 11184  005658  6F67               	movwf	(_os+7)& (0+255),b
 11185                           
 11186                           ;bootloader.c: 173: }
 11187  00565A  0012               	return	
 11188  00565C                     l2491:
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 11192                           
 11193                           ; BSR set to: 0
 11194  00565C  0E00               	movlw	0
 11195  00565E  6F7B               	movwf	_hex_file_size& (0+255),b
 11196  005660  0E00               	movlw	0
 11197  005662  6F7C               	movwf	(_hex_file_size+1)& (0+255),b
 11198  005664  0E00               	movlw	0
 11199  005666  6F7D               	movwf	(_hex_file_size+2)& (0+255),b
 11200  005668  0E00               	movlw	0
 11201  00566A  6F7E               	movwf	(_hex_file_size+3)& (0+255),b
 11202                           
 11203                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 11204  00566C  0E10               	movlw	16
 11205  00566E  6F66               	movwf	(_os+6)& (0+255),b
 11206                           
 11207                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 11208  005670  0E10               	movlw	16
 11209  005672  6F67               	movwf	(_os+7)& (0+255),b
 11210  005674  0012               	return	
 11211  005676                     __end_of__bootloader_find_file:
 11212                           	opt stack 0
 11213                           tblptru	equ	0xFF8
 11214                           tblptrh	equ	0xFF7
 11215                           tblptrl	equ	0xFF6
 11216                           tablat	equ	0xFF5
 11217                           prodh	equ	0xFF4
 11218                           prodl	equ	0xFF3
 11219                           intcon	equ	0xFF2
 11220                           intcon3	equ	0xFF0
 11221                           postinc0	equ	0xFEE
 11222                           wreg	equ	0xFE8
 11223                           indf1	equ	0xFE7
 11224                           postdec1	equ	0xFE5
 11225                           plusw1	equ	0xFE3
 11226                           fsr1h	equ	0xFE2
 11227                           fsr1l	equ	0xFE1
 11228                           indf2	equ	0xFDF
 11229                           postinc2	equ	0xFDE
 11230                           postdec2	equ	0xFDD
 11231                           plusw2	equ	0xFDB
 11232                           fsr2h	equ	0xFDA
 11233                           fsr2l	equ	0xFD9
 11234                           status	equ	0xFD8
 11235                           
 11236 ;; *************** function _fat_get_file_size *****************
 11237 ;; Defined at:
 11238 ;;		line 562 in file "fat16.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;  file_number     1    wreg     unsigned char 
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;  file_number     1   65[COMRAM] unsigned char 
 11243 ;;  file_size       4   61[COMRAM] unsigned long 
 11244 ;;  offset          2   59[COMRAM] unsigned int 
 11245 ;;  sector          2   57[COMRAM] unsigned int 
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  4   53[COMRAM] unsigned long 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0, cstack
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11259 ;;Total ram usage:       13 bytes
 11260 ;; Hardware stack levels used:    1
 11261 ;; Hardware stack levels required when called:    6
 11262 ;; This function calls:
 11263 ;;		__offset_from_file_number
 11264 ;;		__root_is_available
 11265 ;;		__sector_from_file_number
 11266 ;;		_flash_partial_read
 11267 ;; This function is called by:
 11268 ;;		__bootloader_find_file
 11269 ;;		__bootloader_verify_file
 11270 ;;		_fat_append_to_file
 11271 ;;		_fat_copy_file
 11272 ;;		_fat_copy_sector_to_buffer
 11273 ;;		_fat_write_sector_from_buffer
 11274 ;; This function uses a non-reentrant model
 11275 ;;
 11276                           
 11277                           	psect	text49
 11278  00609E                     __ptext49:
 11279                           	opt stack 0
 11280  00609E                     _fat_get_file_size:
 11281                           	opt stack 22
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;incstack = 0
 11285                           ;fat_get_file_size@file_number stored from wreg
 11286  00609E  6E42               	movwf	fat_get_file_size@file_number,c
 11287                           
 11288                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 11289  0060A0  5042               	movf	fat_get_file_size@file_number,w,c
 11290  0060A2  EC8B  F031         	call	__root_is_available
 11291  0060A6  0900               	iorlw	0
 11292  0060A8  B4D8               	btfsc	status,2,c
 11293  0060AA  D005               	goto	l2105
 11294                           
 11295                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 11296  0060AC  6836               	setf	?_fat_get_file_size,c
 11297  0060AE  6837               	setf	?_fat_get_file_size+1,c
 11298  0060B0  6838               	setf	?_fat_get_file_size+2,c
 11299  0060B2  6839               	setf	?_fat_get_file_size+3,c
 11300  0060B4  0012               	return	
 11301  0060B6                     l2105:
 11302                           
 11303                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 11304  0060B6  5042               	movf	fat_get_file_size@file_number,w,c
 11305  0060B8  ECD5  F037         	call	__sector_from_file_number
 11306  0060BC  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 11307  0060C0  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 11308                           
 11309                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 11310  0060C4  5042               	movf	fat_get_file_size@file_number,w,c
 11311  0060C6  EC64  F038         	call	__offset_from_file_number
 11312  0060CA  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 11313  0060CE  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 11314                           
 11315                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 11316  0060D2  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 11317  0060D6  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 11318  0060DA  0E1C               	movlw	28
 11319  0060DC  243C               	addwf	fat_get_file_size@offset,w,c
 11320  0060DE  6E2A               	movwf	flash_partial_read@start,c
 11321  0060E0  0E00               	movlw	0
 11322  0060E2  203D               	addwfc	fat_get_file_size@offset+1,w,c
 11323  0060E4  6E2B               	movwf	flash_partial_read@start+1,c
 11324  0060E6  0E00               	movlw	0
 11325  0060E8  6E2D               	movwf	flash_partial_read@length+1,c
 11326  0060EA  0E04               	movlw	4
 11327  0060EC  6E2C               	movwf	flash_partial_read@length,c
 11328  0060EE  0E3E               	movlw	low fat_get_file_size@file_size
 11329  0060F0  6E2E               	movwf	flash_partial_read@data,c
 11330  0060F2  0E00               	movlw	high fat_get_file_size@file_size
 11331  0060F4  6E2F               	movwf	flash_partial_read@data+1,c
 11332  0060F6  EC51  F038         	call	_flash_partial_read	;wreg free
 11333                           
 11334                           ;fat16.c: 583: return file_size;
 11335  0060FA  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 11336  0060FE  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 11337  006102  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 11338  006106  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 11339  00610A  0012               	return	
 11340  00610C                     __end_of_fat_get_file_size:
 11341                           	opt stack 0
 11342                           tblptru	equ	0xFF8
 11343                           tblptrh	equ	0xFF7
 11344                           tblptrl	equ	0xFF6
 11345                           tablat	equ	0xFF5
 11346                           prodh	equ	0xFF4
 11347                           prodl	equ	0xFF3
 11348                           intcon	equ	0xFF2
 11349                           intcon3	equ	0xFF0
 11350                           postinc0	equ	0xFEE
 11351                           wreg	equ	0xFE8
 11352                           indf1	equ	0xFE7
 11353                           postdec1	equ	0xFE5
 11354                           plusw1	equ	0xFE3
 11355                           fsr1h	equ	0xFE2
 11356                           fsr1l	equ	0xFE1
 11357                           indf2	equ	0xFDF
 11358                           postinc2	equ	0xFDE
 11359                           postdec2	equ	0xFDD
 11360                           plusw2	equ	0xFDB
 11361                           fsr2h	equ	0xFDA
 11362                           fsr2l	equ	0xFD9
 11363                           status	equ	0xFD8
 11364                           
 11365 ;; *************** function __root_is_available *****************
 11366 ;; Defined at:
 11367 ;;		line 408 in file "fat16.c"
 11368 ;; Parameters:    Size  Location     Type
 11369 ;;  file_number     1    wreg     unsigned char 
 11370 ;; Auto vars:     Size  Location     Type
 11371 ;;  file_number     1   51[COMRAM] unsigned char 
 11372 ;;  offset          2   49[COMRAM] unsigned int 
 11373 ;;  root_sector     2   47[COMRAM] unsigned int 
 11374 ;;  first_byte      1   52[COMRAM] unsigned char 
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      unsigned char 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11385 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;Total ram usage:        6 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    5
 11391 ;; This function calls:
 11392 ;;		__offset_from_file_number
 11393 ;;		__sector_from_file_number
 11394 ;;		_flash_partial_read
 11395 ;; This function is called by:
 11396 ;;		_fat_get_file_size
 11397 ;;		__get_available_root_entry
 11398 ;;		_fat_delete_file
 11399 ;;		_fat_append_to_file
 11400 ;;		_fat_copy_file
 11401 ;;		_fat_resize_file
 11402 ;;		_fat_copy_sector_to_buffer
 11403 ;;		_fat_write_sector_from_buffer
 11404 ;; This function uses a non-reentrant model
 11405 ;;
 11406                           
 11407                           	psect	text50
 11408  006316                     __ptext50:
 11409                           	opt stack 0
 11410  006316                     __root_is_available:
 11411                           	opt stack 22
 11412                           
 11413                           ;incstack = 0
 11414                           ;__root_is_available@file_number stored from wreg
 11415  006316  6E34               	movwf	__root_is_available@file_number,c
 11416                           
 11417                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 11418  006318  0E3F               	movlw	63
 11419  00631A  6434               	cpfsgt	__root_is_available@file_number,c
 11420  00631C  D002               	goto	l2066
 11421                           
 11422                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 11423  00631E  0E00               	movlw	0
 11424  006320  0012               	return	
 11425  006322                     l2066:
 11426                           
 11427                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 11428  006322  5034               	movf	__root_is_available@file_number,w,c
 11429  006324  ECD5  F037         	call	__sector_from_file_number
 11430  006328  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 11431  00632C  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 11432                           
 11433                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 11434  006330  5034               	movf	__root_is_available@file_number,w,c
 11435  006332  EC64  F038         	call	__offset_from_file_number
 11436  006336  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 11437  00633A  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 11438                           
 11439                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 11440  00633E  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 11441  006342  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 11442  006346  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 11443  00634A  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 11444  00634E  0E00               	movlw	0
 11445  006350  6E2D               	movwf	flash_partial_read@length+1,c
 11446  006352  0E01               	movlw	1
 11447  006354  6E2C               	movwf	flash_partial_read@length,c
 11448  006356  0E35               	movlw	low __root_is_available@first_byte
 11449  006358  6E2E               	movwf	flash_partial_read@data,c
 11450  00635A  0E00               	movlw	high __root_is_available@first_byte
 11451  00635C  6E2F               	movwf	flash_partial_read@data+1,c
 11452  00635E  EC51  F038         	call	_flash_partial_read	;wreg free
 11453                           
 11454                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 11455  006362  5035               	movf	__root_is_available@first_byte,w,c
 11456  006364  B4D8               	btfsc	status,2,c
 11457  006366  D004               	goto	u10170
 11458  006368  0EE5               	movlw	229
 11459  00636A  1835               	xorwf	__root_is_available@first_byte,w,c
 11460  00636C  A4D8               	btfss	status,2,c
 11461  00636E  D002               	goto	l2068
 11462  006370                     u10170:
 11463                           
 11464                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 11465  006370  0E01               	movlw	1
 11466                           
 11467                           ;fat16.c: 434: }
 11468  006372  0012               	return	
 11469  006374                     l2068:
 11470                           
 11471                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 11472  006374  0E00               	movlw	0
 11473  006376  0012               	return	
 11474  006378                     __end_of__root_is_available:
 11475                           	opt stack 0
 11476                           tblptru	equ	0xFF8
 11477                           tblptrh	equ	0xFF7
 11478                           tblptrl	equ	0xFF6
 11479                           tablat	equ	0xFF5
 11480                           prodh	equ	0xFF4
 11481                           prodl	equ	0xFF3
 11482                           intcon	equ	0xFF2
 11483                           intcon3	equ	0xFF0
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           indf1	equ	0xFE7
 11487                           postdec1	equ	0xFE5
 11488                           plusw1	equ	0xFE3
 11489                           fsr1h	equ	0xFE2
 11490                           fsr1l	equ	0xFE1
 11491                           indf2	equ	0xFDF
 11492                           postinc2	equ	0xFDE
 11493                           postdec2	equ	0xFDD
 11494                           plusw2	equ	0xFDB
 11495                           fsr2h	equ	0xFDA
 11496                           fsr2l	equ	0xFD9
 11497                           status	equ	0xFD8
 11498                           
 11499 ;; *************** function _flash_partial_read *****************
 11500 ;; Defined at:
 11501 ;;		line 452 in file "flash.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;  page            2   39[COMRAM] unsigned int 
 11504 ;;  start           2   41[COMRAM] unsigned int 
 11505 ;;  length          2   43[COMRAM] unsigned int 
 11506 ;;  data            2   45[COMRAM] PTR unsigned char 
 11507 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 11508 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 11509 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), 
 11510 ;; Auto vars:     Size  Location     Type
 11511 ;;		None
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      void 
 11514 ;; Registers used:
 11515 ;;		wreg, status,2, status,0, cstack
 11516 ;; Tracked objects:
 11517 ;;		On entry : 0/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11521 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11524 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11525 ;;Total ram usage:        8 bytes
 11526 ;; Hardware stack levels used:    1
 11527 ;; Hardware stack levels required when called:    4
 11528 ;; This function calls:
 11529 ;;		__flash_partial_read
 11530 ;; This function is called by:
 11531 ;;		__root_is_available
 11532 ;;		__read_fat
 11533 ;;		_fat_get_file_size
 11534 ;;		_fat_read_from_file_fast
 11535 ;;		_fat_get_file_information
 11536 ;;		__get_first_cluster
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text51
 11541  0070A2                     __ptext51:
 11542                           	opt stack 0
 11543  0070A2                     _flash_partial_read:
 11544                           	opt stack 23
 11545                           
 11546                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 11547                           
 11548                           ;incstack = 0
 11549  0070A2  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 11550  0070A6  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 11551  0070AA  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 11552  0070AE  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 11553  0070B2  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 11554  0070B6  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 11555  0070BA  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 11556  0070BE  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 11557  0070C2  EC2C  F02F         	call	__flash_partial_read	;wreg free
 11558  0070C6  0012               	return		;funcret
 11559  0070C8                     __end_of_flash_partial_read:
 11560                           	opt stack 0
 11561                           tblptru	equ	0xFF8
 11562                           tblptrh	equ	0xFF7
 11563                           tblptrl	equ	0xFF6
 11564                           tablat	equ	0xFF5
 11565                           prodh	equ	0xFF4
 11566                           prodl	equ	0xFF3
 11567                           intcon	equ	0xFF2
 11568                           intcon3	equ	0xFF0
 11569                           postinc0	equ	0xFEE
 11570                           wreg	equ	0xFE8
 11571                           indf1	equ	0xFE7
 11572                           postdec1	equ	0xFE5
 11573                           plusw1	equ	0xFE3
 11574                           fsr1h	equ	0xFE2
 11575                           fsr1l	equ	0xFE1
 11576                           indf2	equ	0xFDF
 11577                           postinc2	equ	0xFDE
 11578                           postdec2	equ	0xFDD
 11579                           plusw2	equ	0xFDB
 11580                           fsr2h	equ	0xFDA
 11581                           fsr2l	equ	0xFD9
 11582                           status	equ	0xFD8
 11583                           
 11584 ;; *************** function __sector_from_file_number *****************
 11585 ;; Defined at:
 11586 ;;		line 52 in file "fat16.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;  file_number     1    wreg     unsigned char 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  file_number     1    2[COMRAM] unsigned char 
 11591 ;;  sector          2    3[COMRAM] unsigned int 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  2    0[COMRAM] unsigned int 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11604 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;Total ram usage:        5 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		__root_is_available
 11611 ;;		_fat_get_file_size
 11612 ;;		_fat_get_file_information
 11613 ;;		__write_root
 11614 ;;		__delete_root
 11615 ;;		__get_first_cluster
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text52
 11620  006FAA                     __ptext52:
 11621                           	opt stack 0
 11622  006FAA                     __sector_from_file_number:
 11623                           	opt stack 27
 11624                           
 11625                           ;incstack = 0
 11626                           ;__sector_from_file_number@file_number stored from wreg
 11627  006FAA  6E03               	movwf	__sector_from_file_number@file_number,c
 11628                           
 11629                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 11630  006FAC  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 11631  006FB0  6A05               	clrf	__sector_from_file_number@sector+1,c
 11632                           
 11633                           ;fat16.c: 56: sector >>= 4;
 11634  006FB2  3A04               	swapf	__sector_from_file_number@sector,f,c
 11635  006FB4  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 11636  006FB6  0E0F               	movlw	15
 11637  006FB8  1604               	andwf	__sector_from_file_number@sector,f,c
 11638  006FBA  5005               	movf	__sector_from_file_number@sector+1,w,c
 11639  006FBC  0BF0               	andlw	240
 11640  006FBE  1204               	iorwf	__sector_from_file_number@sector,f,c
 11641  006FC0  0E0F               	movlw	15
 11642  006FC2  1605               	andwf	__sector_from_file_number@sector+1,f,c
 11643                           
 11644                           ;fat16.c: 57: sector += 34;
 11645  006FC4  0E22               	movlw	34
 11646  006FC6  2604               	addwf	__sector_from_file_number@sector,f,c
 11647  006FC8  0E00               	movlw	0
 11648  006FCA  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 11649                           
 11650                           ;fat16.c: 58: return sector;
 11651  006FCC  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 11652  006FD0  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 11653  006FD4  0012               	return	
 11654  006FD6                     __end_of__sector_from_file_number:
 11655                           	opt stack 0
 11656                           tblptru	equ	0xFF8
 11657                           tblptrh	equ	0xFF7
 11658                           tblptrl	equ	0xFF6
 11659                           tablat	equ	0xFF5
 11660                           prodh	equ	0xFF4
 11661                           prodl	equ	0xFF3
 11662                           intcon	equ	0xFF2
 11663                           intcon3	equ	0xFF0
 11664                           postinc0	equ	0xFEE
 11665                           wreg	equ	0xFE8
 11666                           indf1	equ	0xFE7
 11667                           postdec1	equ	0xFE5
 11668                           plusw1	equ	0xFE3
 11669                           fsr1h	equ	0xFE2
 11670                           fsr1l	equ	0xFE1
 11671                           indf2	equ	0xFDF
 11672                           postinc2	equ	0xFDE
 11673                           postdec2	equ	0xFDD
 11674                           plusw2	equ	0xFDB
 11675                           fsr2h	equ	0xFDA
 11676                           fsr2l	equ	0xFD9
 11677                           status	equ	0xFD8
 11678                           
 11679 ;; *************** function __offset_from_file_number *****************
 11680 ;; Defined at:
 11681 ;;		line 61 in file "fat16.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  file_number     1    wreg     unsigned char 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  file_number     1    2[COMRAM] unsigned char 
 11686 ;;  offset          2    3[COMRAM] unsigned int 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  2    0[COMRAM] unsigned int 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11696 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;Total ram usage:        5 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		__root_is_available
 11706 ;;		_fat_get_file_size
 11707 ;;		_fat_get_file_information
 11708 ;;		__write_root
 11709 ;;		__delete_root
 11710 ;;		__get_first_cluster
 11711 ;; This function uses a non-reentrant model
 11712 ;;
 11713                           
 11714                           	psect	text53
 11715  0070C8                     __ptext53:
 11716                           	opt stack 0
 11717  0070C8                     __offset_from_file_number:
 11718                           	opt stack 26
 11719                           
 11720                           ;incstack = 0
 11721                           ;__offset_from_file_number@file_number stored from wreg
 11722  0070C8  6E03               	movwf	__offset_from_file_number@file_number,c
 11723                           
 11724                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 11725  0070CA  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 11726  0070CE  6A05               	clrf	__offset_from_file_number@offset+1,c
 11727                           
 11728                           ;fat16.c: 65: offset &= 0b1111;
 11729  0070D0  0E0F               	movlw	15
 11730  0070D2  1604               	andwf	__offset_from_file_number@offset,f,c
 11731  0070D4  0E00               	movlw	0
 11732  0070D6  1605               	andwf	__offset_from_file_number@offset+1,f,c
 11733                           
 11734                           ;fat16.c: 66: offset <<= 5;
 11735  0070D8  0E05               	movlw	5
 11736  0070DA                     u9705:
 11737  0070DA  90D8               	bcf	status,0,c
 11738  0070DC  3604               	rlcf	__offset_from_file_number@offset,f,c
 11739  0070DE  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 11740  0070E0  2EE8               	decfsz	wreg,f,c
 11741  0070E2  D7FB               	goto	u9705
 11742                           
 11743                           ;fat16.c: 67: return offset;
 11744  0070E4  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 11745  0070E8  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 11746  0070EC  0012               	return	
 11747  0070EE                     __end_of__offset_from_file_number:
 11748                           	opt stack 0
 11749                           tblptru	equ	0xFF8
 11750                           tblptrh	equ	0xFF7
 11751                           tblptrl	equ	0xFF6
 11752                           tablat	equ	0xFF5
 11753                           prodh	equ	0xFF4
 11754                           prodl	equ	0xFF3
 11755                           intcon	equ	0xFF2
 11756                           intcon3	equ	0xFF0
 11757                           postinc0	equ	0xFEE
 11758                           wreg	equ	0xFE8
 11759                           indf1	equ	0xFE7
 11760                           postdec1	equ	0xFE5
 11761                           plusw1	equ	0xFE3
 11762                           fsr1h	equ	0xFE2
 11763                           fsr1l	equ	0xFE1
 11764                           indf2	equ	0xFDF
 11765                           postinc2	equ	0xFDE
 11766                           postdec2	equ	0xFDD
 11767                           plusw2	equ	0xFDB
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function _fat_find_file *****************
 11773 ;; Defined at:
 11774 ;;		line 517 in file "fat16.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  name            2   43[COMRAM] PTR unsigned char 
 11777 ;;		 -> bootloader_filename(9), 
 11778 ;;  extension       2   45[COMRAM] PTR unsigned char 
 11779 ;;		 -> bootloader_extension(4), 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;  offset          2   52[COMRAM] unsigned int 
 11782 ;;  sector          2   50[COMRAM] unsigned int 
 11783 ;;  file_number     1   49[COMRAM] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      unsigned char 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11794 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11796 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;Total ram usage:       11 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    5
 11800 ;; This function calls:
 11801 ;;		_flash_sector_read
 11802 ;;		_strncmp
 11803 ;; This function is called by:
 11804 ;;		__bootloader_find_file
 11805 ;;		_fat_create_file
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text54
 11810  0046AA                     __ptext54:
 11811                           	opt stack 0
 11812  0046AA                     _fat_find_file:
 11813                           	opt stack 23
 11814                           
 11815                           ;fat16.c: 519: uint8_t file_number = 0;
 11816                           
 11817                           ;incstack = 0
 11818  0046AA  0E00               	movlw	0
 11819  0046AC  6E32               	movwf	fat_find_file@file_number,c
 11820                           
 11821                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 11822  0046AE  0E00               	movlw	0
 11823  0046B0  6E34               	movwf	fat_find_file@sector+1,c
 11824  0046B2  0E22               	movlw	34
 11825  0046B4  6E33               	movwf	fat_find_file@sector,c
 11826  0046B6  5034               	movf	fat_find_file@sector+1,w,c
 11827  0046B8  E166               	bnz	l2093
 11828  0046BA  0E26               	movlw	38
 11829  0046BC  5C33               	subwf	fat_find_file@sector,w,c
 11830  0046BE  B0D8               	btfsc	status,0,c
 11831  0046C0  D062               	goto	u10620
 11832                           
 11833                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 11834  0046C2  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 11835  0046C6  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 11836  0046CA  0ECC               	movlw	low _buffer
 11837  0046CC  6E2A               	movwf	flash_sector_read@data,c
 11838  0046CE  0E02               	movlw	high _buffer
 11839  0046D0  6E2B               	movwf	flash_sector_read@data+1,c
 11840  0046D2  EC77  F038         	call	_flash_sector_read	;wreg free
 11841                           
 11842                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 11843  0046D6  0E00               	movlw	0
 11844  0046D8  6E36               	movwf	fat_find_file@offset+1,c
 11845  0046DA  0E00               	movlw	0
 11846  0046DC  6E35               	movwf	fat_find_file@offset,c
 11847  0046DE                     l13015:
 11848  0046DE  0E02               	movlw	2
 11849  0046E0  5C36               	subwf	fat_find_file@offset+1,w,c
 11850  0046E2  B0D8               	btfsc	status,0,c
 11851  0046E4  D04B               	goto	u10610
 11852                           
 11853                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 11854  0046E6  0ECC               	movlw	low _buffer
 11855  0046E8  2435               	addwf	fat_find_file@offset,w,c
 11856  0046EA  6ED9               	movwf	fsr2l,c
 11857  0046EC  0E02               	movlw	high _buffer
 11858  0046EE  2036               	addwfc	fat_find_file@offset+1,w,c
 11859  0046F0  6EDA               	movwf	fsr2h,c
 11860  0046F2  50DF               	movf	indf2,w,c
 11861  0046F4  A4D8               	btfss	status,2,c
 11862  0046F6  D002               	goto	l2096
 11863                           
 11864                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 11865  0046F8  0EFF               	movlw	255
 11866  0046FA  0012               	return	
 11867  0046FC                     l2096:
 11868                           
 11869                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 11870  0046FC  0ECC               	movlw	low _buffer
 11871  0046FE  2435               	addwf	fat_find_file@offset,w,c
 11872  004700  6ED9               	movwf	fsr2l,c
 11873  004702  0E02               	movlw	high _buffer
 11874  004704  2036               	addwfc	fat_find_file@offset+1,w,c
 11875  004706  6EDA               	movwf	fsr2h,c
 11876  004708  0EE5               	movlw	229
 11877  00470A  18DE               	xorwf	postinc2,w,c
 11878  00470C  B4D8               	btfsc	status,2,c
 11879  00470E  D030               	goto	l2102
 11880                           
 11881                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 11882                           
 11883                           ;fat16.c: 537: {;fat16.c: 541: }
 11884  004710  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 11885  004714  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 11886  004718  0ECC               	movlw	low _buffer
 11887  00471A  2435               	addwf	fat_find_file@offset,w,c
 11888  00471C  6E03               	movwf	strncmp@s2,c
 11889  00471E  0E02               	movlw	high _buffer
 11890  004720  2036               	addwfc	fat_find_file@offset+1,w,c
 11891  004722  6E04               	movwf	strncmp@s2+1,c
 11892  004724  0E00               	movlw	0
 11893  004726  6E06               	movwf	strncmp@len+1,c
 11894  004728  0E08               	movlw	8
 11895  00472A  6E05               	movwf	strncmp@len,c
 11896  00472C  EC6C  F02E         	call	_strncmp	;wreg free
 11897  004730  5001               	movf	?_strncmp,w,c
 11898  004732  1002               	iorwf	?_strncmp+1,w,c
 11899  004734  A4D8               	btfss	status,2,c
 11900  004736  D01C               	goto	l2102
 11901                           
 11902                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 11903  004738  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 11904  00473C  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 11905  004740  0E08               	movlw	8
 11906  004742  2435               	addwf	fat_find_file@offset,w,c
 11907  004744  6E30               	movwf	??_fat_find_file& (0+255),c
 11908  004746  0E00               	movlw	0
 11909  004748  2036               	addwfc	fat_find_file@offset+1,w,c
 11910  00474A  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 11911  00474C  0ECC               	movlw	low _buffer
 11912  00474E  2430               	addwf	??_fat_find_file,w,c
 11913  004750  6E03               	movwf	strncmp@s2,c
 11914  004752  0E02               	movlw	high _buffer
 11915  004754  2031               	addwfc	??_fat_find_file+1,w,c
 11916  004756  6E04               	movwf	strncmp@s2+1,c
 11917  004758  0E00               	movlw	0
 11918  00475A  6E06               	movwf	strncmp@len+1,c
 11919  00475C  0E03               	movlw	3
 11920  00475E  6E05               	movwf	strncmp@len,c
 11921  004760  EC6C  F02E         	call	_strncmp	;wreg free
 11922  004764  5001               	movf	?_strncmp,w,c
 11923  004766  1002               	iorwf	?_strncmp+1,w,c
 11924  004768  A4D8               	btfss	status,2,c
 11925  00476A  D002               	goto	l2102
 11926                           
 11927                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 11928  00476C  5032               	movf	fat_find_file@file_number,w,c
 11929  00476E  0012               	return	
 11930  004770                     l2102:
 11931                           
 11932                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 11933  004770  2A32               	incf	fat_find_file@file_number,f,c
 11934  004772  0E20               	movlw	32
 11935  004774  2635               	addwf	fat_find_file@offset,f,c
 11936  004776  0E00               	movlw	0
 11937  004778  2236               	addwfc	fat_find_file@offset+1,f,c
 11938  00477A  D7B1               	goto	l13015
 11939  00477C                     u10610:
 11940  00477C  4A33               	infsnz	fat_find_file@sector,f,c
 11941  00477E  2A34               	incf	fat_find_file@sector+1,f,c
 11942  004780  5034               	movf	fat_find_file@sector+1,w,c
 11943  004782  E101               	bnz	l13049
 11944  004784  D79A               	goto	L5
 11945  004786                     u10620:
 11946  004786                     l2093:
 11947  004786                     l13049:
 11948                           
 11949                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 11950  004786  0EFF               	movlw	255
 11951  004788  0012               	return	
 11952  00478A                     __end_of_fat_find_file:
 11953                           	opt stack 0
 11954                           tblptru	equ	0xFF8
 11955                           tblptrh	equ	0xFF7
 11956                           tblptrl	equ	0xFF6
 11957                           tablat	equ	0xFF5
 11958                           prodh	equ	0xFF4
 11959                           prodl	equ	0xFF3
 11960                           intcon	equ	0xFF2
 11961                           intcon3	equ	0xFF0
 11962                           postinc0	equ	0xFEE
 11963                           wreg	equ	0xFE8
 11964                           indf1	equ	0xFE7
 11965                           postdec1	equ	0xFE5
 11966                           plusw1	equ	0xFE3
 11967                           fsr1h	equ	0xFE2
 11968                           fsr1l	equ	0xFE1
 11969                           indf2	equ	0xFDF
 11970                           postinc2	equ	0xFDE
 11971                           postdec2	equ	0xFDD
 11972                           plusw2	equ	0xFDB
 11973                           fsr2h	equ	0xFDA
 11974                           fsr2l	equ	0xFD9
 11975                           status	equ	0xFD8
 11976                           
 11977 ;; *************** function _strncmp *****************
 11978 ;; Defined at:
 11979 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 11982 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 11983 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 11984 ;;		 -> buffer(512), 
 11985 ;;  len             2    4[COMRAM] unsigned int 
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  2    0[COMRAM] int 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11997 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12000 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;Total ram usage:        8 bytes
 12002 ;; Hardware stack levels used:    1
 12003 ;; This function calls:
 12004 ;;		Nothing
 12005 ;; This function is called by:
 12006 ;;		_fat_find_file
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           	psect	text55
 12011  005CD8                     __ptext55:
 12012                           	opt stack 0
 12013  005CD8                     _strncmp:
 12014                           	opt stack 27
 12015                           
 12016                           ;incstack = 0
 12017  005CD8  D034               	goto	l3567
 12018  005CDA                     l12699:
 12019  005CDA  C001  FFF6         	movff	strncmp@s1,tblptrl
 12020  005CDE  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 12021  005CE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12022  005CE2  6AF8               	clrf	tblptru,c
 12023  005CE4                     	endif
 12024  005CE4                     	if	0	;tblptru may be non-zero
 12025  005CE4                     	endif
 12026  005CE4  0008               	tblrd		*
 12027  005CE6  50F5               	movf	tablat,w,c
 12028  005CE8  0900               	iorlw	0
 12029  005CEA  B4D8               	btfsc	status,2,c
 12030  005CEC  D00E               	goto	u10190
 12031  005CEE  C003  FFD9         	movff	strncmp@s2,fsr2l
 12032  005CF2  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 12033  005CF6  C001  FFF6         	movff	strncmp@s1,tblptrl
 12034  005CFA  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 12035  005CFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12036  005CFE  6AF8               	clrf	tblptru,c
 12037  005D00                     	endif
 12038  005D00                     	if	0	;tblptru may be non-zero
 12039  005D00                     	endif
 12040  005D00  50DE               	movf	postinc2,w,c
 12041  005D02  0009               	tblrd		*+
 12042  005D04  18F5               	xorwf	tablat,w,c
 12043  005D06  B4D8               	btfsc	status,2,c
 12044  005D08  D018               	goto	l3569
 12045  005D0A                     u10190:
 12046  005D0A  C003  FFD9         	movff	strncmp@s2,fsr2l
 12047  005D0E  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 12048  005D12  50DF               	movf	indf2,w,c
 12049  005D14  6E07               	movwf	??_strncmp& (0+255),c
 12050  005D16  6A08               	clrf	(??_strncmp+1)& (0+255),c
 12051  005D18  1E07               	comf	??_strncmp,f,c
 12052  005D1A  1E08               	comf	??_strncmp+1,f,c
 12053  005D1C  4A07               	infsnz	??_strncmp,f,c
 12054  005D1E  2A08               	incf	??_strncmp+1,f,c
 12055  005D20  C001  FFF6         	movff	strncmp@s1,tblptrl
 12056  005D24  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 12057  005D28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12058  005D28  6AF8               	clrf	tblptru,c
 12059  005D2A                     	endif
 12060  005D2A                     	if	0	;tblptru may be non-zero
 12061  005D2A                     	endif
 12062  005D2A  0008               	tblrd		*
 12063  005D2C  50F5               	movf	tablat,w,c
 12064  005D2E  2407               	addwf	??_strncmp,w,c
 12065  005D30  6E01               	movwf	?_strncmp,c
 12066  005D32  0E00               	movlw	0
 12067  005D34  2008               	addwfc	??_strncmp+1,w,c
 12068  005D36  6E02               	movwf	?_strncmp+1,c
 12069  005D38  0012               	return	
 12070  005D3A                     l3569:
 12071  005D3A  4A01               	infsnz	strncmp@s1,f,c
 12072  005D3C  2A02               	incf	strncmp@s1+1,f,c
 12073  005D3E  4A03               	infsnz	strncmp@s2,f,c
 12074  005D40  2A04               	incf	strncmp@s2+1,f,c
 12075  005D42                     l3567:
 12076  005D42  0605               	decf	strncmp@len,f,c
 12077  005D44  A0D8               	btfss	status,0,c
 12078  005D46  0606               	decf	strncmp@len+1,f,c
 12079  005D48  2805               	incf	strncmp@len,w,c
 12080  005D4A  E1C7               	bnz	l12699
 12081  005D4C  2806               	incf	strncmp@len+1,w,c
 12082  005D4E  A4D8               	btfss	status,2,c
 12083  005D50  D7C4               	goto	l3568
 12084  005D52  0E00               	movlw	0
 12085  005D54  6E02               	movwf	?_strncmp+1,c
 12086  005D56  0E00               	movlw	0
 12087  005D58  6E01               	movwf	?_strncmp,c
 12088  005D5A  0012               	return	
 12089  005D5C                     __end_of_strncmp:
 12090                           	opt stack 0
 12091                           tblptru	equ	0xFF8
 12092                           tblptrh	equ	0xFF7
 12093                           tblptrl	equ	0xFF6
 12094                           tablat	equ	0xFF5
 12095                           prodh	equ	0xFF4
 12096                           prodl	equ	0xFF3
 12097                           intcon	equ	0xFF2
 12098                           intcon3	equ	0xFF0
 12099                           postinc0	equ	0xFEE
 12100                           wreg	equ	0xFE8
 12101                           indf1	equ	0xFE7
 12102                           postdec1	equ	0xFE5
 12103                           plusw1	equ	0xFE3
 12104                           fsr1h	equ	0xFE2
 12105                           fsr1l	equ	0xFE1
 12106                           indf2	equ	0xFDF
 12107                           postinc2	equ	0xFDE
 12108                           postdec2	equ	0xFDD
 12109                           plusw2	equ	0xFDB
 12110                           fsr2h	equ	0xFDA
 12111                           fsr2l	equ	0xFD9
 12112                           status	equ	0xFD8
 12113                           
 12114 ;; *************** function __normal_mode *****************
 12115 ;; Defined at:
 12116 ;;		line 161 in file "main.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;		None
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      unsigned char 
 12123 ;; Registers used:
 12124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;Total ram usage:        0 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    3
 12137 ;; This function calls:
 12138 ;;		_i2c_eeprom_readByte
 12139 ;;		_i2c_eeprom_writeByte
 12140 ;; This function is called by:
 12141 ;;		_main
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           	psect	text56
 12146  0064FC                     __ptext56:
 12147                           	opt stack 0
 12148  0064FC                     __normal_mode:
 12149                           	opt stack 27
 12150                           
 12151                           ;main.c: 163: if(i2c_eeprom_readByte(0x100)==0x94)
 12152                           
 12153                           ;incstack = 0
 12154  0064FC  0E01               	movlw	1
 12155  0064FE  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 12156  006500  0E00               	movlw	0
 12157  006502  6E12               	movwf	i2c_eeprom_readByte@address,c
 12158  006504  EC31  F034         	call	_i2c_eeprom_readByte	;wreg free
 12159  006508  0A94               	xorlw	148
 12160  00650A  A4D8               	btfss	status,2,c
 12161  00650C  D00A               	goto	l882
 12162                           
 12163                           ;main.c: 164: {;main.c: 166: i2c_eeprom_writeByte(0x100, 0x00);
 12164  00650E  0E01               	movlw	1
 12165  006510  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 12166  006512  0E00               	movlw	0
 12167  006514  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 12168  006516  0E00               	movlw	0
 12169  006518  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 12170  00651A  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
 12171                           
 12172                           ;main.c: 168: return 0;
 12173  00651E  0E00               	movlw	0
 12174  006520  0012               	return	
 12175  006522                     l882:
 12176                           
 12177                           ;main.c: 170: else if(i2c_eeprom_readByte(0x100)==0x78)
 12178  006522  0E01               	movlw	1
 12179  006524  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 12180  006526  0E00               	movlw	0
 12181  006528  6E12               	movwf	i2c_eeprom_readByte@address,c
 12182  00652A  EC31  F034         	call	_i2c_eeprom_readByte	;wreg free
 12183  00652E  0A78               	xorlw	120
 12184  006530  A4D8               	btfss	status,2,c
 12185  006532  D00A               	goto	l885
 12186                           
 12187                           ;main.c: 171: {;main.c: 173: i2c_eeprom_writeByte(0x100, 0x00);
 12188  006534  0E01               	movlw	1
 12189  006536  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 12190  006538  0E00               	movlw	0
 12191  00653A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 12192  00653C  0E00               	movlw	0
 12193  00653E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 12194  006540  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
 12195                           
 12196                           ;main.c: 175: return 1;
 12197  006544  0E01               	movlw	1
 12198  006546  0012               	return	
 12199  006548                     l885:
 12200                           
 12201                           ;main.c: 176: };main.c: 178: if(PORTEbits.RE1 || PORTAbits.RA1)
 12202  006548  B284               	btfsc	3972,1,c	;volatile
 12203  00654A  D002               	goto	u12390
 12204  00654C  A280               	btfss	3968,1,c	;volatile
 12205  00654E  D002               	goto	l886
 12206  006550                     u12390:
 12207                           
 12208                           ;main.c: 179: {;main.c: 181: return 0;
 12209  006550  0E00               	movlw	0
 12210                           
 12211                           ;main.c: 182: }
 12212  006552  0012               	return	
 12213  006554                     l886:
 12214                           
 12215                           ;main.c: 183: else;main.c: 184: {;main.c: 186: return 1;
 12216  006554  0E01               	movlw	1
 12217  006556  0012               	return	
 12218  006558                     __end_of__normal_mode:
 12219                           	opt stack 0
 12220                           tblptru	equ	0xFF8
 12221                           tblptrh	equ	0xFF7
 12222                           tblptrl	equ	0xFF6
 12223                           tablat	equ	0xFF5
 12224                           prodh	equ	0xFF4
 12225                           prodl	equ	0xFF3
 12226                           intcon	equ	0xFF2
 12227                           intcon3	equ	0xFF0
 12228                           postinc0	equ	0xFEE
 12229                           wreg	equ	0xFE8
 12230                           indf1	equ	0xFE7
 12231                           postdec1	equ	0xFE5
 12232                           plusw1	equ	0xFE3
 12233                           fsr1h	equ	0xFE2
 12234                           fsr1l	equ	0xFE1
 12235                           indf2	equ	0xFDF
 12236                           postinc2	equ	0xFDE
 12237                           postdec2	equ	0xFDD
 12238                           plusw2	equ	0xFDB
 12239                           fsr2h	equ	0xFDA
 12240                           fsr2l	equ	0xFD9
 12241                           status	equ	0xFD8
 12242                           
 12243 ;; *************** function _i2c_eeprom_readByte *****************
 12244 ;; Defined at:
 12245 ;;		line 203 in file "i2c.c"
 12246 ;; Parameters:    Size  Location     Type
 12247 ;;  address         2   17[COMRAM] unsigned int 
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;  addr            1   23[COMRAM] unsigned char 
 12250 ;;  slave_addres    1   22[COMRAM] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      unsigned char 
 12253 ;; Registers used:
 12254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12262 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12263 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12264 ;;Total ram usage:        7 bytes
 12265 ;; Hardware stack levels used:    1
 12266 ;; Hardware stack levels required when called:    2
 12267 ;; This function calls:
 12268 ;;		__i2c_eeprom_busy
 12269 ;;		__i2c_read
 12270 ;;		__i2c_write
 12271 ;; This function is called by:
 12272 ;;		__normal_mode
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text57
 12277  006862                     __ptext57:
 12278                           	opt stack 0
 12279  006862                     _i2c_eeprom_readByte:
 12280                           	opt stack 27
 12281                           
 12282                           ;i2c.c: 205: uint8_t slave_address;;i2c.c: 206: uint8_t addr;;i2c.c: 207: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 12283                           
 12284                           ;incstack = 0
 12285  006862  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 12286  006866  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 12287  00686A  0E07               	movlw	7
 12288  00686C  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 12289  00686E                     u11475:
 12290  00686E  90D8               	bcf	status,0,c
 12291  006870  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 12292  006872  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 12293  006874  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 12294  006876  D7FB               	goto	u11475
 12295  006878  5014               	movf	??_i2c_eeprom_readByte,w,c
 12296  00687A  0B0E               	andlw	14
 12297  00687C  09A0               	iorlw	160
 12298  00687E  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 12299                           
 12300                           ;i2c.c: 208: addr = address & 0xFF;
 12301  006880  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 12302  006884  EC9D  F038         	call	__i2c_eeprom_busy	;wreg free
 12303  006888  0900               	iorlw	0
 12304  00688A  A4D8               	btfss	status,2,c
 12305  00688C  D7FB               	goto	l1189
 12306                           
 12307                           ;i2c.c: 213: _i2c_write(slave_address, &addr, 1);
 12308  00688E  0E18               	movlw	low i2c_eeprom_readByte@addr
 12309  006890  6E06               	movwf	__i2c_write@data,c
 12310  006892  0E00               	movlw	high i2c_eeprom_readByte@addr
 12311  006894  6E07               	movwf	__i2c_write@data+1,c
 12312  006896  0E01               	movlw	1
 12313  006898  6E08               	movwf	__i2c_write@length,c
 12314  00689A  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 12315  00689C  EC91  F035         	call	__i2c_write
 12316                           
 12317                           ;i2c.c: 214: _i2c_read(slave_address, &addr, 1);
 12318  0068A0  0E18               	movlw	low i2c_eeprom_readByte@addr
 12319  0068A2  6E06               	movwf	__i2c_read@data,c
 12320  0068A4  0E00               	movlw	high i2c_eeprom_readByte@addr
 12321  0068A6  6E07               	movwf	__i2c_read@data+1,c
 12322  0068A8  0E01               	movlw	1
 12323  0068AA  6E08               	movwf	__i2c_read@length,c
 12324  0068AC  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 12325  0068AE  EC9D  F02D         	call	__i2c_read
 12326                           
 12327                           ;i2c.c: 215: return addr;
 12328  0068B2  5018               	movf	i2c_eeprom_readByte@addr,w,c
 12329  0068B4  0012               	return	
 12330  0068B6                     __end_of_i2c_eeprom_readByte:
 12331                           	opt stack 0
 12332                           tblptru	equ	0xFF8
 12333                           tblptrh	equ	0xFF7
 12334                           tblptrl	equ	0xFF6
 12335                           tablat	equ	0xFF5
 12336                           prodh	equ	0xFF4
 12337                           prodl	equ	0xFF3
 12338                           intcon	equ	0xFF2
 12339                           intcon3	equ	0xFF0
 12340                           postinc0	equ	0xFEE
 12341                           wreg	equ	0xFE8
 12342                           indf1	equ	0xFE7
 12343                           postdec1	equ	0xFE5
 12344                           plusw1	equ	0xFE3
 12345                           fsr1h	equ	0xFE2
 12346                           fsr1l	equ	0xFE1
 12347                           indf2	equ	0xFDF
 12348                           postinc2	equ	0xFDE
 12349                           postdec2	equ	0xFDD
 12350                           plusw2	equ	0xFDB
 12351                           fsr2h	equ	0xFDA
 12352                           fsr2l	equ	0xFD9
 12353                           status	equ	0xFD8
 12354                           
 12355 ;; *************** function __i2c_read *****************
 12356 ;; Defined at:
 12357 ;;		line 103 in file "i2c.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;  slave_addres    1    wreg     unsigned char 
 12360 ;;  data            2    5[COMRAM] PTR unsigned char 
 12361 ;;		 -> i2c_eeprom_readByte@addr(1), 
 12362 ;;  length          1    7[COMRAM] unsigned char 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;  slave_addres    1   15[COMRAM] unsigned char 
 12365 ;;  cntr            1   16[COMRAM] unsigned char 
 12366 ;; Return value:  Size  Location     Type
 12367 ;;                  1    wreg      void 
 12368 ;; Registers used:
 12369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12370 ;; Tracked objects:
 12371 ;;		On entry : 0/0
 12372 ;;		On exit  : 0/0
 12373 ;;		Unchanged: 0/0
 12374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12377 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12378 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12379 ;;Total ram usage:       12 bytes
 12380 ;; Hardware stack levels used:    1
 12381 ;; Hardware stack levels required when called:    1
 12382 ;; This function calls:
 12383 ;;		__i2c_acknowledge
 12384 ;;		__i2c_get
 12385 ;;		__i2c_not_acknowledge
 12386 ;;		__i2c_send
 12387 ;;		__i2c_start
 12388 ;;		__i2c_stop
 12389 ;;		__i2c_wait_idle
 12390 ;; This function is called by:
 12391 ;;		_i2c_eeprom_readByte
 12392 ;;		_i2c_eeprom_read
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text58
 12397  005B3A                     __ptext58:
 12398                           	opt stack 0
 12399  005B3A                     __i2c_read:
 12400                           	opt stack 27
 12401                           
 12402                           ;incstack = 0
 12403                           ;__i2c_read@slave_address stored from wreg
 12404  005B3A  6E10               	movwf	__i2c_read@slave_address,c
 12405                           
 12406                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
 12407  005B3C  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 12408                           
 12409                           ;i2c.c: 108: _i2c_start();
 12410  005B40  EC3D  F03A         	call	__i2c_start	;wreg free
 12411                           
 12412                           ;i2c.c: 109: _i2c_wait_idle();
 12413  005B44  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 12414                           
 12415                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
 12416  005B48  5010               	movf	__i2c_read@slave_address,w,c
 12417  005B4A  0901               	iorlw	1
 12418  005B4C  EC41  F03A         	call	__i2c_send
 12419                           
 12420                           ;i2c.c: 111: _i2c_wait_idle();
 12421  005B50  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 12422                           
 12423                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
 12424  005B54  0E00               	movlw	0
 12425  005B56  6E11               	movwf	__i2c_read@cntr,c
 12426  005B58  D00E               	goto	l1167
 12427  005B5A                     
 12428                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
 12429  005B5A  5011               	movf	__i2c_read@cntr,w,c
 12430  005B5C  0D01               	mullw	1
 12431  005B5E  50F3               	movf	prodl,w,c
 12432  005B60  2406               	addwf	__i2c_read@data,w,c
 12433  005B62  6ED9               	movwf	fsr2l,c
 12434  005B64  50F4               	movf	prodh,w,c
 12435  005B66  2007               	addwfc	__i2c_read@data+1,w,c
 12436  005B68  6EDA               	movwf	fsr2h,c
 12437  005B6A  EC0C  F03A         	call	__i2c_get	;wreg free
 12438  005B6E  6EDF               	movwf	indf2,c
 12439                           
 12440                           ;i2c.c: 124: _i2c_acknowledge();
 12441  005B70  EC11  F03A         	call	__i2c_acknowledge	;wreg free
 12442  005B74  2A11               	incf	__i2c_read@cntr,f,c
 12443  005B76                     l1167:
 12444  005B76  0EFF               	movlw	255
 12445  005B78  6E09               	movwf	??__i2c_read& (0+255),c
 12446  005B7A  0EFF               	movlw	255
 12447  005B7C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 12448  005B7E  5008               	movf	__i2c_read@length,w,c
 12449  005B80  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 12450  005B82  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 12451  005B84  5009               	movf	??__i2c_read,w,c
 12452  005B86  260B               	addwf	??__i2c_read+2,f,c
 12453  005B88  500A               	movf	??__i2c_read+1,w,c
 12454  005B8A  220C               	addwfc	??__i2c_read+3,f,c
 12455  005B8C  5011               	movf	__i2c_read@cntr,w,c
 12456  005B8E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 12457  005B90  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 12458  005B92  500B               	movf	??__i2c_read+2,w,c
 12459  005B94  5C0D               	subwf	??__i2c_read+4,w,c
 12460  005B96  500E               	movf	??__i2c_read+5,w,c
 12461  005B98  0A80               	xorlw	128
 12462  005B9A  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 12463  005B9C  500C               	movf	??__i2c_read+3,w,c
 12464  005B9E  0A80               	xorlw	128
 12465  005BA0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 12466  005BA2  A0D8               	btfss	status,0,c
 12467  005BA4  D7DA               	goto	l1168
 12468                           
 12469                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
 12470  005BA6  5011               	movf	__i2c_read@cntr,w,c
 12471  005BA8  0D01               	mullw	1
 12472  005BAA  50F3               	movf	prodl,w,c
 12473  005BAC  2406               	addwf	__i2c_read@data,w,c
 12474  005BAE  6ED9               	movwf	fsr2l,c
 12475  005BB0  50F4               	movf	prodh,w,c
 12476  005BB2  2007               	addwfc	__i2c_read@data+1,w,c
 12477  005BB4  6EDA               	movwf	fsr2h,c
 12478  005BB6  EC0C  F03A         	call	__i2c_get	;wreg free
 12479  005BBA  6EDF               	movwf	indf2,c
 12480                           
 12481                           ;i2c.c: 127: _i2c_not_acknowledge();
 12482  005BBC  EC07  F03A         	call	__i2c_not_acknowledge	;wreg free
 12483                           
 12484                           ;i2c.c: 129: _i2c_stop();
 12485  005BC0  EC39  F03A         	call	__i2c_stop	;wreg free
 12486  005BC4  0012               	return		;funcret
 12487  005BC6                     __end_of__i2c_read:
 12488                           	opt stack 0
 12489                           tblptru	equ	0xFF8
 12490                           tblptrh	equ	0xFF7
 12491                           tblptrl	equ	0xFF6
 12492                           tablat	equ	0xFF5
 12493                           prodh	equ	0xFF4
 12494                           prodl	equ	0xFF3
 12495                           intcon	equ	0xFF2
 12496                           intcon3	equ	0xFF0
 12497                           postinc0	equ	0xFEE
 12498                           wreg	equ	0xFE8
 12499                           indf1	equ	0xFE7
 12500                           postdec1	equ	0xFE5
 12501                           plusw1	equ	0xFE3
 12502                           fsr1h	equ	0xFE2
 12503                           fsr1l	equ	0xFE1
 12504                           indf2	equ	0xFDF
 12505                           postinc2	equ	0xFDE
 12506                           postdec2	equ	0xFDD
 12507                           plusw2	equ	0xFDB
 12508                           fsr2h	equ	0xFDA
 12509                           fsr2l	equ	0xFD9
 12510                           status	equ	0xFD8
 12511                           
 12512 ;; *************** function __i2c_not_acknowledge *****************
 12513 ;; Defined at:
 12514 ;;		line 76 in file "i2c.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;		None
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  1    wreg      void 
 12521 ;; Registers used:
 12522 ;;		None
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12532 ;;Total ram usage:        0 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		__i2c_read
 12538 ;;		_i2c_adc_read
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text59
 12543  00740E                     __ptext59:
 12544                           	opt stack 0
 12545  00740E                     __i2c_not_acknowledge:
 12546                           	opt stack 27
 12547                           
 12548                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
 12549                           
 12550                           ;incstack = 0
 12551  00740E  8AC5               	bsf	4037,5,c	;volatile
 12552                           
 12553                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
 12554  007410  88C5               	bsf	4037,4,c	;volatile
 12555  007412  A8C5               	btfss	4037,4,c	;volatile
 12556  007414  0012               	return	
 12557  007416  D7FD               	goto	l1156
 12558  007418                     __end_of__i2c_not_acknowledge:
 12559                           	opt stack 0
 12560                           tblptru	equ	0xFF8
 12561                           tblptrh	equ	0xFF7
 12562                           tblptrl	equ	0xFF6
 12563                           tablat	equ	0xFF5
 12564                           prodh	equ	0xFF4
 12565                           prodl	equ	0xFF3
 12566                           intcon	equ	0xFF2
 12567                           intcon3	equ	0xFF0
 12568                           postinc0	equ	0xFEE
 12569                           wreg	equ	0xFE8
 12570                           indf1	equ	0xFE7
 12571                           postdec1	equ	0xFE5
 12572                           plusw1	equ	0xFE3
 12573                           fsr1h	equ	0xFE2
 12574                           fsr1l	equ	0xFE1
 12575                           indf2	equ	0xFDF
 12576                           postinc2	equ	0xFDE
 12577                           postdec2	equ	0xFDD
 12578                           plusw2	equ	0xFDB
 12579                           fsr2h	equ	0xFDA
 12580                           fsr2l	equ	0xFD9
 12581                           status	equ	0xFD8
 12582                           
 12583 ;; *************** function __i2c_get *****************
 12584 ;; Defined at:
 12585 ;;		line 56 in file "i2c.c"
 12586 ;; Parameters:    Size  Location     Type
 12587 ;;		None
 12588 ;; Auto vars:     Size  Location     Type
 12589 ;;		None
 12590 ;; Return value:  Size  Location     Type
 12591 ;;                  1    wreg      unsigned char 
 12592 ;; Registers used:
 12593 ;;		wreg, status,2
 12594 ;; Tracked objects:
 12595 ;;		On entry : 0/0
 12596 ;;		On exit  : 0/0
 12597 ;;		Unchanged: 0/0
 12598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;Total ram usage:        0 bytes
 12604 ;; Hardware stack levels used:    1
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		__i2c_read
 12609 ;;		_i2c_adc_read
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text60
 12614  007418                     __ptext60:
 12615                           	opt stack 0
 12616  007418                     __i2c_get:
 12617                           	opt stack 27
 12618                           
 12619                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
 12620                           
 12621                           ;incstack = 0
 12622  007418  86C5               	bsf	4037,3,c	;volatile
 12623  00741A  B6C5               	btfsc	4037,3,c	;volatile
 12624  00741C  D7FE               	goto	l1138
 12625                           
 12626                           ;i2c.c: 60: return SSP1BUF;
 12627  00741E  50C9               	movf	4041,w,c	;volatile
 12628  007420  0012               	return	
 12629  007422                     __end_of__i2c_get:
 12630                           	opt stack 0
 12631                           tblptru	equ	0xFF8
 12632                           tblptrh	equ	0xFF7
 12633                           tblptrl	equ	0xFF6
 12634                           tablat	equ	0xFF5
 12635                           prodh	equ	0xFF4
 12636                           prodl	equ	0xFF3
 12637                           intcon	equ	0xFF2
 12638                           intcon3	equ	0xFF0
 12639                           postinc0	equ	0xFEE
 12640                           wreg	equ	0xFE8
 12641                           indf1	equ	0xFE7
 12642                           postdec1	equ	0xFE5
 12643                           plusw1	equ	0xFE3
 12644                           fsr1h	equ	0xFE2
 12645                           fsr1l	equ	0xFE1
 12646                           indf2	equ	0xFDF
 12647                           postinc2	equ	0xFDE
 12648                           postdec2	equ	0xFDD
 12649                           plusw2	equ	0xFDB
 12650                           fsr2h	equ	0xFDA
 12651                           fsr2l	equ	0xFD9
 12652                           status	equ	0xFD8
 12653                           
 12654 ;; *************** function __i2c_acknowledge *****************
 12655 ;; Defined at:
 12656 ;;		line 69 in file "i2c.c"
 12657 ;; Parameters:    Size  Location     Type
 12658 ;;		None
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;		None
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		None
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;Total ram usage:        0 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; This function calls:
 12677 ;;		Nothing
 12678 ;; This function is called by:
 12679 ;;		__i2c_read
 12680 ;;		_i2c_adc_read
 12681 ;; This function uses a non-reentrant model
 12682 ;;
 12683                           
 12684                           	psect	text61
 12685  007422                     __ptext61:
 12686                           	opt stack 0
 12687  007422                     __i2c_acknowledge:
 12688                           	opt stack 27
 12689                           
 12690                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
 12691                           
 12692                           ;incstack = 0
 12693  007422  9AC5               	bcf	4037,5,c	;volatile
 12694                           
 12695                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
 12696  007424  88C5               	bsf	4037,4,c	;volatile
 12697  007426  A8C5               	btfss	4037,4,c	;volatile
 12698  007428  0012               	return	
 12699  00742A  D7FD               	goto	l1150
 12700  00742C                     __end_of__i2c_acknowledge:
 12701                           	opt stack 0
 12702                           tblptru	equ	0xFF8
 12703                           tblptrh	equ	0xFF7
 12704                           tblptrl	equ	0xFF6
 12705                           tablat	equ	0xFF5
 12706                           prodh	equ	0xFF4
 12707                           prodl	equ	0xFF3
 12708                           intcon	equ	0xFF2
 12709                           intcon3	equ	0xFF0
 12710                           postinc0	equ	0xFEE
 12711                           wreg	equ	0xFE8
 12712                           indf1	equ	0xFE7
 12713                           postdec1	equ	0xFE5
 12714                           plusw1	equ	0xFE3
 12715                           fsr1h	equ	0xFE2
 12716                           fsr1l	equ	0xFE1
 12717                           indf2	equ	0xFDF
 12718                           postinc2	equ	0xFDE
 12719                           postdec2	equ	0xFDD
 12720                           plusw2	equ	0xFDB
 12721                           fsr2h	equ	0xFDA
 12722                           fsr2l	equ	0xFD9
 12723                           status	equ	0xFD8
 12724                           
 12725 ;; *************** function _USBDeviceTasks *****************
 12726 ;; Defined at:
 12727 ;;		line 477 in file "usb_device.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;		None
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;  i               1   31[COMRAM] unsigned char 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;Total ram usage:        1 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    8
 12748 ;; This function calls:
 12749 ;;		_USBCtrlEPAllowStatusStage
 12750 ;;		_USBCtrlEPService
 12751 ;;		_USBDeviceInit
 12752 ;;		_USBIncrement1msInternalTimers
 12753 ;;		_USBStallHandler
 12754 ;;		_USBSuspend
 12755 ;;		_USBWakeFromSuspend
 12756 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           	psect	text62
 12763  002E0A                     __ptext62:
 12764                           	opt stack 0
 12765  002E0A                     _USBDeviceTasks:
 12766                           	opt stack 22
 12767                           
 12768                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12769                           
 12770                           ; BSR set to: 15
 12771                           
 12772                           ; BSR set to: 15
 12773                           ;usb_device.c: 543: return;
 12774                           
 12775                           ; BSR set to: 15
 12776                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12777                           
 12778                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12779                           
 12780                           ;usb_device.c: 511: UIE = 0;
 12781                           
 12782                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12783                           
 12784                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12785                           
 12786                           ;incstack = 0
 12787  002E0A  505F               	movf	_USBDeviceState,w,c
 12788  002E0C  A4D8               	btfss	status,2,c
 12789  002E0E  D011               	goto	l150
 12790                           
 12791                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12792  002E10  0E00               	movlw	0
 12793  002E12  6E65               	movwf	3941,c	;volatile
 12794                           
 12795                           ;usb_device.c: 572: UIE = 0;
 12796  002E14  0E00               	movlw	0
 12797  002E16  010F               	movlb	15	; () banked
 12798  002E18  6F36               	movwf	54,b	;volatile
 12799                           
 12800                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12801  002E1A  0E16               	movlw	22
 12802  002E1C  6F39               	movwf	57,b	;volatile
 12803  002E1E  0E9F               	movlw	159
 12804  002E20  6F37               	movwf	55,b	;volatile
 12805  002E22  0E7B               	movlw	123
 12806  002E24  6F36               	movwf	54,b	;volatile
 12807                           
 12808                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12809  002E26  D001               	goto	l151
 12810  002E28                     l152:
 12811  002E28  8665               	bsf	3941,3,c	;volatile
 12812  002E2A                     l151:
 12813  002E2A  A665               	btfss	3941,3,c	;volatile
 12814  002E2C  D7FD               	goto	l152
 12815                           
 12816                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12817  002E2E  0E01               	movlw	1
 12818  002E30  6E5F               	movwf	_USBDeviceState,c
 12819  002E32                     l150:
 12820                           
 12821                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12822  002E32  045F               	decf	_USBDeviceState,w,c
 12823  002E34  B4D8               	btfsc	status,2,c
 12824                           
 12825                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12826  002E36  BA65               	btfsc	3941,5,c	;volatile
 12827  002E38  D009               	goto	l155
 12828                           
 12829                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12830  002E3A  0E00               	movlw	0
 12831  002E3C  6E62               	movwf	3938,c	;volatile
 12832                           
 12833                           ;usb_device.c: 612: UIE=0;
 12834  002E3E  0E00               	movlw	0
 12835  002E40  010F               	movlb	15	; () banked
 12836  002E42  6F36               	movwf	54,b	;volatile
 12837                           
 12838                           ; BSR set to: 15
 12839                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12840  002E44  8136               	bsf	54,0,b	;volatile
 12841                           
 12842                           ; BSR set to: 15
 12843                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12844  002E46  8936               	bsf	54,4,b	;volatile
 12845                           
 12846                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12847  002E48  0E02               	movlw	2
 12848  002E4A  6E5F               	movwf	_USBDeviceState,c
 12849  002E4C                     l155:
 12850                           
 12851                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12852                           
 12853                           ; BSR set to: 15
 12854                           
 12855                           ; BSR set to: 15
 12856  002E4C  A462               	btfss	3938,2,c	;volatile
 12857  002E4E  D006               	goto	l156
 12858  002E50  010F               	movlb	15	; () banked
 12859  002E52  A536               	btfss	54,2,b	;volatile
 12860  002E54  D003               	goto	l156
 12861                           
 12862                           ; BSR set to: 15
 12863                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12864  002E56  9462               	bcf	3938,2,c	;volatile
 12865                           
 12866                           ; BSR set to: 15
 12867                           ;usb_device.c: 640: USBWakeFromSuspend();
 12868  002E58  ECF4  F036         	call	_USBWakeFromSuspend	;wreg free
 12869  002E5C                     l156:
 12870                           
 12871                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12872  002E5C  A265               	btfss	3941,1,c	;volatile
 12873  002E5E  D002               	goto	l157
 12874                           
 12875                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12876  002E60  98A1               	bcf	4001,4,c	;volatile
 12877                           
 12878                           ;usb_device.c: 650: return;
 12879  002E62  0012               	return	
 12880  002E64                     l157:
 12881                           
 12882                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12883  002E64  A062               	btfss	3938,0,c	;volatile
 12884  002E66  D008               	goto	l158
 12885  002E68  010F               	movlb	15	; () banked
 12886  002E6A  A136               	btfss	54,0,b	;volatile
 12887  002E6C  D005               	goto	l158
 12888                           
 12889                           ; BSR set to: 15
 12890                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12891  002E6E  EC77  F01A         	call	_USBDeviceInit	;wreg free
 12892                           
 12893                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12894  002E72  0E04               	movlw	4
 12895  002E74  6E5F               	movwf	_USBDeviceState,c
 12896                           
 12897                           ;usb_device.c: 681: (UIR &= 0xFE);
 12898  002E76  9062               	bcf	3938,0,c	;volatile
 12899  002E78                     l158:
 12900                           
 12901                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12902  002E78  A862               	btfss	3938,4,c	;volatile
 12903  002E7A  D004               	goto	l159
 12904  002E7C  010F               	movlb	15	; () banked
 12905  002E7E  B936               	btfsc	54,4,b	;volatile
 12906                           
 12907                           ; BSR set to: 15
 12908                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12909  002E80  EC90  F037         	call	_USBSuspend	;wreg free
 12910  002E84                     l159:
 12911                           
 12912                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12913  002E84  AC62               	btfss	3938,6,c	;volatile
 12914  002E86  D01C               	goto	l163
 12915                           
 12916                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12917  002E88  010F               	movlb	15	; () banked
 12918  002E8A  AD36               	btfss	54,6,b	;volatile
 12919  002E8C  D00E               	goto	l161
 12920                           
 12921                           ; BSR set to: 15
 12922                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12923  002E8E  0E00               	movlw	0
 12924  002E90  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12925  002E92  0E73               	movlw	115
 12926  002E94  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12927  002E96  0E00               	movlw	0
 12928  002E98  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12929  002E9A  0E00               	movlw	0
 12930  002E9C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12931  002E9E  0E00               	movlw	0
 12932  002EA0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12933  002EA2  0E01               	movlw	1
 12934  002EA4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12935  002EA6  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12936  002EAA                     l161:
 12937                           
 12938                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12939  002EAA  9C62               	bcf	3938,6,c	;volatile
 12940                           
 12941                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12942  002EAC  ECC2  F038         	call	_USBIncrement1msInternalTimers	;wreg free
 12943                           
 12944                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12945  002EB0  0100               	movlb	0	; () banked
 12946  002EB2  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12947  002EB4  A4D8               	btfss	status,2,c
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12951  002EB6  07A7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12955                           
 12956                           ; BSR set to: 0
 12957  002EB8  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12958  002EBA  B4D8               	btfsc	status,2,c
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12962  002EBC  EC23  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12963  002EC0                     l163:
 12964                           
 12965                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12966  002EC0  AA62               	btfss	3938,5,c	;volatile
 12967  002EC2  D004               	goto	l164
 12968  002EC4  010F               	movlb	15	; () banked
 12969  002EC6  BB36               	btfsc	54,5,b	;volatile
 12970                           
 12971                           ; BSR set to: 15
 12972                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12973  002EC8  ECD8  F035         	call	_USBStallHandler	;wreg free
 12974  002ECC                     l164:
 12975                           
 12976                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12977  002ECC  A262               	btfss	3938,1,c	;volatile
 12978  002ECE  D012               	goto	l165
 12979  002ED0  010F               	movlb	15	; () banked
 12980  002ED2  A336               	btfss	54,1,b	;volatile
 12981  002ED4  D00F               	goto	l165
 12982                           
 12983                           ; BSR set to: 15
 12984                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12985  002ED6  0E7F               	movlw	127
 12986  002ED8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12987  002EDA  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12988  002EDC  0E00               	movlw	0
 12989  002EDE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12990  002EE0  0E00               	movlw	0
 12991  002EE2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12992  002EE4  0E00               	movlw	0
 12993  002EE6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12994  002EE8  0E01               	movlw	1
 12995  002EEA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12996  002EEC  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12997                           
 12998                           ;usb_device.c: 759: {UEIR = 0;};
 12999  002EF0  0E00               	movlw	0
 13000  002EF2  6E63               	movwf	3939,c	;volatile
 13001  002EF4                     l165:
 13002                           
 13003                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 13004  002EF4  0E04               	movlw	4
 13005  002EF6  605F               	cpfslt	_USBDeviceState,c
 13006  002EF8  D002               	goto	l166
 13007                           
 13008                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 13009  002EFA  98A1               	bcf	4001,4,c	;volatile
 13010                           
 13011                           ;usb_device.c: 777: return;
 13012  002EFC  0012               	return	
 13013  002EFE                     l166:
 13014                           
 13015                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 13016  002EFE  010F               	movlb	15	; () banked
 13017  002F00  A736               	btfss	54,3,b	;volatile
 13018  002F02  D03C               	goto	u12350
 13019                           
 13020                           ; BSR set to: 15
 13021                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 13022  002F04  0E00               	movlw	0
 13023  002F06  6E20               	movwf	USBDeviceTasks@i,c
 13024  002F08                     l14365:
 13025                           
 13026                           ; BSR set to: 15
 13027  002F08  0E03               	movlw	3
 13028  002F0A  6420               	cpfsgt	USBDeviceTasks@i,c
 13029  002F0C  D001               	goto	l168
 13030  002F0E  D036               	goto	u12350
 13031  002F10                     l168:
 13032                           
 13033                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 13034  002F10  A662               	btfss	3938,3,c	;volatile
 13035  002F12  D034               	goto	u12350
 13036                           
 13037                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 13038  002F14  CF64 F0B4          	movff	3940,_USTATcopy	;volatile
 13039                           
 13040                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 13041  002F18  0100               	movlb	0	; () banked
 13042  002F1A  31B4               	rrcf	_USTATcopy& (0+255),w,b
 13043  002F1C  32E8               	rrcf	wreg,f,c
 13044  002F1E  32E8               	rrcf	wreg,f,c
 13045  002F20  0B0F               	andlw	15
 13046  002F22  6FA9               	movwf	_endpoint_number& (0+255),b
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;usb_device.c: 793: (UIR &= 0xF7);
 13050  002F24  9662               	bcf	3938,3,c	;volatile
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 13054  002F26  B5B4               	btfsc	_USTATcopy& (0+255),2,b
 13055  002F28  D007               	goto	l171
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 13059  002F2A  51A9               	movf	_endpoint_number& (0+255),w,b
 13060  002F2C  0D01               	mullw	1
 13061  002F2E  0E5D               	movlw	low _ep_data_out
 13062  002F30  24F3               	addwf	prodl,w,c
 13063  002F32  6ED9               	movwf	fsr2l,c
 13064  002F34  0E01               	movlw	high _ep_data_out
 13065  002F36  D007               	goto	L6
 13066  002F38                     l171:
 13067                           
 13068                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 13069                           
 13070                           ; BSR set to: 1
 13071  002F38  0100               	movlb	0	; () banked
 13072  002F3A  51A9               	movf	_endpoint_number& (0+255),w,b
 13073  002F3C  0D01               	mullw	1
 13074  002F3E  0E60               	movlw	low _ep_data_in
 13075  002F40  24F3               	addwf	prodl,w,c
 13076  002F42  6ED9               	movwf	fsr2l,c
 13077  002F44  0E01               	movlw	high _ep_data_in
 13078  002F46                     L6:
 13079  002F46  20F4               	addwfc	prodh,w,c
 13080  002F48  6EDA               	movwf	fsr2h,c
 13081  002F4A  0101               	movlb	1	; () banked
 13082  002F4C  70DF               	btg	indf2,0,c
 13083                           
 13084                           ; BSR set to: 1
 13085                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 13086                           
 13087                           ; BSR set to: 1
 13088  002F4E  0100               	movlb	0	; () banked
 13089  002F50  51A9               	movf	_endpoint_number& (0+255),w,b
 13090  002F52  A4D8               	btfss	status,2,c
 13091  002F54  D003               	goto	l173
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 13095  002F56  ECF4  F028         	call	_USBCtrlEPService	;wreg free
 13096                           
 13097                           ;usb_device.c: 813: }
 13098  002F5A  D00E               	goto	l175
 13099  002F5C                     l173:
 13100                           
 13101                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 13102  002F5C  0E00               	movlw	0
 13103  002F5E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13104  002F60  0E72               	movlw	114
 13105  002F62  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13106  002F64  0EB4               	movlw	low _USTATcopy
 13107  002F66  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13108  002F68  0E00               	movlw	high _USTATcopy
 13109  002F6A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13110  002F6C  0E00               	movlw	0
 13111  002F6E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13112  002F70  0E00               	movlw	0
 13113  002F72  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13114  002F74  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13115  002F78                     l175:
 13116  002F78  2A20               	incf	USBDeviceTasks@i,f,c
 13117  002F7A  D7C6               	goto	l14365
 13118  002F7C                     u12350:
 13119                           
 13120                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 13121  002F7C  98A1               	bcf	4001,4,c	;volatile
 13122  002F7E  0012               	return		;funcret
 13123  002F80                     __end_of_USBDeviceTasks:
 13124                           	opt stack 0
 13125                           tblptru	equ	0xFF8
 13126                           tblptrh	equ	0xFF7
 13127                           tblptrl	equ	0xFF6
 13128                           tablat	equ	0xFF5
 13129                           prodh	equ	0xFF4
 13130                           prodl	equ	0xFF3
 13131                           intcon	equ	0xFF2
 13132                           intcon3	equ	0xFF0
 13133                           postinc0	equ	0xFEE
 13134                           wreg	equ	0xFE8
 13135                           indf1	equ	0xFE7
 13136                           postdec1	equ	0xFE5
 13137                           plusw1	equ	0xFE3
 13138                           fsr1h	equ	0xFE2
 13139                           fsr1l	equ	0xFE1
 13140                           indf2	equ	0xFDF
 13141                           postinc2	equ	0xFDE
 13142                           postdec2	equ	0xFDD
 13143                           plusw2	equ	0xFDB
 13144                           fsr2h	equ	0xFDA
 13145                           fsr2l	equ	0xFD9
 13146                           status	equ	0xFD8
 13147                           
 13148 ;; *************** function _USBWakeFromSuspend *****************
 13149 ;; Defined at:
 13150 ;;		line 2305 in file "usb_device.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;		None
 13153 ;; Auto vars:     Size  Location     Type
 13154 ;;		None
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  1    wreg      void 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13168 ;;Total ram usage:        0 bytes
 13169 ;; Hardware stack levels used:    1
 13170 ;; Hardware stack levels required when called:    4
 13171 ;; This function calls:
 13172 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13173 ;; This function is called by:
 13174 ;;		_USBDeviceTasks
 13175 ;; This function uses a non-reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text63
 13179  006DE8                     __ptext63:
 13180                           	opt stack 0
 13181  006DE8                     _USBWakeFromSuspend:
 13182                           	opt stack 25
 13183                           
 13184                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 13185                           
 13186                           ;incstack = 0
 13187  006DE8  0E00               	movlw	0
 13188  006DEA  0100               	movlb	0	; () banked
 13189  006DEC  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 13190                           
 13191                           ; BSR set to: 0
 13192                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13193  006DEE  0E00               	movlw	0
 13194  006DF0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13195  006DF2  0E74               	movlw	116
 13196  006DF4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13197  006DF6  0E00               	movlw	0
 13198  006DF8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13199  006DFA  0E00               	movlw	0
 13200  006DFC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13201  006DFE  0E00               	movlw	0
 13202  006E00  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13203  006E02  0E00               	movlw	0
 13204  006E04  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13205  006E06  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13206                           
 13207                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 13208  006E0A  9265               	bcf	3941,1,c	;volatile
 13209                           
 13210                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 13211  006E0C  010F               	movlb	15	; () banked
 13212  006E0E  9536               	bcf	54,2,b	;volatile
 13213                           
 13214                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 13215  006E10  D001               	goto	l303
 13216  006E12                     
 13217                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 13218                           
 13219                           ; BSR set to: 15
 13220  006E12  9462               	bcf	3938,2,c	;volatile
 13221  006E14                     l303:
 13222  006E14  B462               	btfsc	3938,2,c	;volatile
 13223  006E16  D7FD               	goto	l304
 13224                           
 13225                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 13226  006E18  0E00               	movlw	0
 13227  006E1A  0100               	movlb	0	; () banked
 13228  006E1C  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13229                           
 13230                           ; BSR set to: 0
 13231  006E1E  0012               	return		;funcret
 13232  006E20                     __end_of_USBWakeFromSuspend:
 13233                           	opt stack 0
 13234                           tblptru	equ	0xFF8
 13235                           tblptrh	equ	0xFF7
 13236                           tblptrl	equ	0xFF6
 13237                           tablat	equ	0xFF5
 13238                           prodh	equ	0xFF4
 13239                           prodl	equ	0xFF3
 13240                           intcon	equ	0xFF2
 13241                           intcon3	equ	0xFF0
 13242                           postinc0	equ	0xFEE
 13243                           wreg	equ	0xFE8
 13244                           indf1	equ	0xFE7
 13245                           postdec1	equ	0xFE5
 13246                           plusw1	equ	0xFE3
 13247                           fsr1h	equ	0xFE2
 13248                           fsr1l	equ	0xFE1
 13249                           indf2	equ	0xFDF
 13250                           postinc2	equ	0xFDE
 13251                           postdec2	equ	0xFDD
 13252                           plusw2	equ	0xFDB
 13253                           fsr2h	equ	0xFDA
 13254                           fsr2l	equ	0xFD9
 13255                           status	equ	0xFD8
 13256                           
 13257 ;; *************** function _USBSuspend *****************
 13258 ;; Defined at:
 13259 ;;		line 2247 in file "usb_device.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;		None
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;		None
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      void 
 13266 ;; Registers used:
 13267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13277 ;;Total ram usage:        0 bytes
 13278 ;; Hardware stack levels used:    1
 13279 ;; Hardware stack levels required when called:    4
 13280 ;; This function calls:
 13281 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13282 ;; This function is called by:
 13283 ;;		_USBDeviceTasks
 13284 ;; This function uses a non-reentrant model
 13285 ;;
 13286                           
 13287                           	psect	text64
 13288  006F20                     __ptext64:
 13289                           	opt stack 0
 13290  006F20                     _USBSuspend:
 13291                           	opt stack 25
 13292                           
 13293                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;incstack = 0
 13297  006F20  010F               	movlb	15	; () banked
 13298  006F22  8536               	bsf	54,2,b	;volatile
 13299                           
 13300                           ; BSR set to: 15
 13301                           ;usb_device.c: 2273: (UIR &= 0xEF);
 13302  006F24  9862               	bcf	3938,4,c	;volatile
 13303                           
 13304                           ; BSR set to: 15
 13305                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 13306  006F26  8265               	bsf	3941,1,c	;volatile
 13307                           
 13308                           ; BSR set to: 15
 13309                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 13310  006F28  0E01               	movlw	1
 13311  006F2A  0100               	movlb	0	; () banked
 13312  006F2C  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 13313                           
 13314                           ; BSR set to: 0
 13315                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 13316  006F2E  0E00               	movlw	0
 13317  006F30  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 13321  006F32  0E00               	movlw	0
 13322  006F34  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13323  006F36  0E75               	movlw	117
 13324  006F38  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13325  006F3A  0E00               	movlw	0
 13326  006F3C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13327  006F3E  0E00               	movlw	0
 13328  006F40  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13329  006F42  0E00               	movlw	0
 13330  006F44  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13331  006F46  0E00               	movlw	0
 13332  006F48  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13333  006F4A  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13334  006F4E  0012               	return		;funcret
 13335  006F50                     __end_of_USBSuspend:
 13336                           	opt stack 0
 13337                           tblptru	equ	0xFF8
 13338                           tblptrh	equ	0xFF7
 13339                           tblptrl	equ	0xFF6
 13340                           tablat	equ	0xFF5
 13341                           prodh	equ	0xFF4
 13342                           prodl	equ	0xFF3
 13343                           intcon	equ	0xFF2
 13344                           intcon3	equ	0xFF0
 13345                           postinc0	equ	0xFEE
 13346                           wreg	equ	0xFE8
 13347                           indf1	equ	0xFE7
 13348                           postdec1	equ	0xFE5
 13349                           plusw1	equ	0xFE3
 13350                           fsr1h	equ	0xFE2
 13351                           fsr1l	equ	0xFE1
 13352                           indf2	equ	0xFDF
 13353                           postinc2	equ	0xFDE
 13354                           postdec2	equ	0xFDD
 13355                           plusw2	equ	0xFDB
 13356                           fsr2h	equ	0xFDA
 13357                           fsr2l	equ	0xFD9
 13358                           status	equ	0xFD8
 13359                           
 13360 ;; *************** function _USBStallHandler *****************
 13361 ;; Defined at:
 13362 ;;		line 2204 in file "usb_device.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;		None
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  1    wreg      void 
 13369 ;; Registers used:
 13370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13380 ;;Total ram usage:        1 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; This function calls:
 13383 ;;		Nothing
 13384 ;; This function is called by:
 13385 ;;		_USBDeviceTasks
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           	psect	text65
 13390  006BB0                     __ptext65:
 13391                           	opt stack 0
 13392  006BB0                     _USBStallHandler:
 13393                           	opt stack 29
 13394                           
 13395                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 13396                           
 13397                           ;incstack = 0
 13398  006BB0  010F               	movlb	15	; () banked
 13399  006BB2  A126               	btfss	38,0,b	;volatile
 13400  006BB4  D01D               	goto	l295
 13401                           
 13402                           ; BSR set to: 15
 13403                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 13404  006BB6  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13405  006BBA  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13406  006BBE  0E80               	movlw	128
 13407  006BC0  18DE               	xorwf	postinc2,w,c
 13408  006BC2  A4D8               	btfss	status,2,c
 13409  006BC4  D014               	goto	l296
 13410                           
 13411                           ; BSR set to: 15
 13412  006BC6  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 13413  006BCA  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13414  006BCE  0E84               	movlw	132
 13415  006BD0  18DE               	xorwf	postinc2,w,c
 13416  006BD2  A4D8               	btfss	status,2,c
 13417  006BD4  D00C               	goto	l296
 13418                           
 13419                           ; BSR set to: 15
 13420                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 13421  006BD6  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13422  006BDA  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13423  006BDE  0E0C               	movlw	12
 13424  006BE0  6EDF               	movwf	indf2,c
 13425                           
 13426                           ; BSR set to: 15
 13427                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13428  006BE2  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13429  006BE6  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13430  006BEA  0E00               	movlw	0
 13431  006BEC  8EDB               	bsf	plusw2,7,c
 13432  006BEE                     l296:
 13433                           
 13434                           ; BSR set to: 15
 13435                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 13436                           
 13437                           ; BSR set to: 15
 13438  006BEE  9126               	bcf	38,0,b	;volatile
 13439  006BF0                     l295:
 13440                           
 13441                           ; BSR set to: 15
 13442                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 13443  006BF0  9A62               	bcf	3938,5,c	;volatile
 13444                           
 13445                           ; BSR set to: 15
 13446  006BF2  0012               	return		;funcret
 13447  006BF4                     __end_of_USBStallHandler:
 13448                           	opt stack 0
 13449                           tblptru	equ	0xFF8
 13450                           tblptrh	equ	0xFF7
 13451                           tblptrl	equ	0xFF6
 13452                           tablat	equ	0xFF5
 13453                           prodh	equ	0xFF4
 13454                           prodl	equ	0xFF3
 13455                           intcon	equ	0xFF2
 13456                           intcon3	equ	0xFF0
 13457                           postinc0	equ	0xFEE
 13458                           wreg	equ	0xFE8
 13459                           indf1	equ	0xFE7
 13460                           postdec1	equ	0xFE5
 13461                           plusw1	equ	0xFE3
 13462                           fsr1h	equ	0xFE2
 13463                           fsr1l	equ	0xFE1
 13464                           indf2	equ	0xFDF
 13465                           postinc2	equ	0xFDE
 13466                           postdec2	equ	0xFDD
 13467                           plusw2	equ	0xFDB
 13468                           fsr2h	equ	0xFDA
 13469                           fsr2l	equ	0xFD9
 13470                           status	equ	0xFD8
 13471                           
 13472 ;; *************** function _USBIncrement1msInternalTimers *****************
 13473 ;; Defined at:
 13474 ;;		line 3027 in file "usb_device.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		wreg, status,2, status,0
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used:    1
 13494 ;; This function calls:
 13495 ;;		Nothing
 13496 ;; This function is called by:
 13497 ;;		_USBDeviceTasks
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501                           	psect	text66
 13502  007184                     __ptext66:
 13503                           	opt stack 0
 13504  007184                     _USBIncrement1msInternalTimers:
 13505                           	opt stack 29
 13506                           
 13507                           ;usb_device.c: 3035: USB1msTickCount++;
 13508                           
 13509                           ; BSR set to: 15
 13510                           ;incstack = 0
 13511  007184  0E01               	movlw	1
 13512  007186  0101               	movlb	1	; () banked
 13513  007188  2753               	addwf	_USB1msTickCount& (0+255),f,b
 13514  00718A  0E00               	movlw	0
 13515  00718C  2354               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 13516  00718E  2355               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 13517  007190  2356               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 13518                           
 13519                           ; BSR set to: 1
 13520                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 13521  007192  0100               	movlb	0	; () banked
 13522  007194  51AA               	movf	_USBBusIsSuspended& (0+255),w,b
 13523  007196  A4D8               	btfss	status,2,c
 13524  007198  0012               	return	
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 13528  00719A  2BA1               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 13532  00719C  51A1               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 13533  00719E  A4D8               	btfss	status,2,c
 13534  0071A0  0012               	return	
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 13538  0071A2  69A1               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 13539                           
 13540                           ; BSR set to: 0
 13541  0071A4  0012               	return	
 13542  0071A6                     __end_of_USBIncrement1msInternalTimers:
 13543                           	opt stack 0
 13544                           tblptru	equ	0xFF8
 13545                           tblptrh	equ	0xFF7
 13546                           tblptrl	equ	0xFF6
 13547                           tablat	equ	0xFF5
 13548                           prodh	equ	0xFF4
 13549                           prodl	equ	0xFF3
 13550                           intcon	equ	0xFF2
 13551                           intcon3	equ	0xFF0
 13552                           postinc0	equ	0xFEE
 13553                           wreg	equ	0xFE8
 13554                           indf1	equ	0xFE7
 13555                           postdec1	equ	0xFE5
 13556                           plusw1	equ	0xFE3
 13557                           fsr1h	equ	0xFE2
 13558                           fsr1l	equ	0xFE1
 13559                           indf2	equ	0xFDF
 13560                           postinc2	equ	0xFDE
 13561                           postdec2	equ	0xFDD
 13562                           plusw2	equ	0xFDB
 13563                           fsr2h	equ	0xFDA
 13564                           fsr2l	equ	0xFD9
 13565                           status	equ	0xFD8
 13566                           
 13567 ;; *************** function _USBDeviceInit *****************
 13568 ;; Defined at:
 13569 ;;		line 277 in file "usb_device.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;		None
 13572 ;; Auto vars:     Size  Location     Type
 13573 ;;  i               1    8[COMRAM] unsigned char 
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  1    wreg      void 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13587 ;;Total ram usage:        1 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:    1
 13590 ;; This function calls:
 13591 ;;		_memset
 13592 ;; This function is called by:
 13593 ;;		_USBDeviceTasks
 13594 ;;		_main
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text67
 13599  0034EE                     __ptext67:
 13600                           	opt stack 0
 13601  0034EE                     _USBDeviceInit:
 13602                           	opt stack 28
 13603                           
 13604                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;incstack = 0
 13608  0034EE  98A0               	bcf	4000,4,c	;volatile
 13609                           
 13610                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 13611  0034F0  0E00               	movlw	0
 13612  0034F2  6E63               	movwf	3939,c	;volatile
 13613                           
 13614                           ;usb_device.c: 291: {UIR = 0;};
 13615  0034F4  0E00               	movlw	0
 13616  0034F6  6E62               	movwf	3938,c	;volatile
 13617                           
 13618                           ;usb_device.c: 294: UEP0 = 0;
 13619  0034F8  0E00               	movlw	0
 13620  0034FA  010F               	movlb	15	; () banked
 13621  0034FC  6F26               	movwf	38,b	;volatile
 13622                           
 13623                           ; BSR set to: 15
 13624                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 13625  0034FE  0E27               	movlw	39
 13626  003500  6E01               	movwf	memset@p1,c
 13627  003502  0E0F               	movlw	15
 13628  003504  6E02               	movwf	memset@p1+1,c
 13629  003506  0E00               	movlw	0
 13630  003508  6E04               	movwf	memset@c+1,c
 13631  00350A  0E00               	movlw	0
 13632  00350C  6E03               	movwf	memset@c,c
 13633  00350E  0E00               	movlw	0
 13634  003510  6E06               	movwf	memset@n+1,c
 13635  003512  0E02               	movlw	2
 13636  003514  6E05               	movwf	memset@n,c
 13637  003516  ECEB  F037         	call	_memset	;wreg free
 13638                           
 13639                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13640  00351A  0E16               	movlw	22
 13641  00351C  010F               	movlb	15	; () banked
 13642  00351E  6F39               	movwf	57,b	;volatile
 13643                           
 13644                           ; BSR set to: 15
 13645  003520  0E9F               	movlw	159
 13646  003522  6F37               	movwf	55,b	;volatile
 13647                           
 13648                           ; BSR set to: 15
 13649  003524  0E7B               	movlw	123
 13650  003526  6F36               	movwf	54,b	;volatile
 13651                           
 13652                           ; BSR set to: 15
 13653                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 13654  003528  0E00               	movlw	0
 13655  00352A  6E09               	movwf	USBDeviceInit@i,c
 13656  00352C                     l13543:
 13657                           
 13658                           ; BSR set to: 15
 13659  00352C  0E0B               	movlw	11
 13660  00352E  6409               	cpfsgt	USBDeviceInit@i,c
 13661  003530  D001               	goto	l139
 13662  003532  D00E               	goto	u11120
 13663  003534                     l139:
 13664                           
 13665                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 13666                           
 13667                           ; BSR set to: 15
 13668  003534  5009               	movf	USBDeviceInit@i,w,c
 13669  003536  0D04               	mullw	4
 13670  003538  0E00               	movlw	0
 13671  00353A  24F3               	addwf	prodl,w,c
 13672  00353C  6ED9               	movwf	fsr2l,c
 13673  00353E  0E0D               	movlw	13
 13674  003540  20F4               	addwfc	prodh,w,c
 13675  003542  6EDA               	movwf	fsr2h,c
 13676  003544  6ADE               	clrf	postinc2,c
 13677  003546  6ADE               	clrf	postinc2,c
 13678  003548  6ADE               	clrf	postinc2,c
 13679  00354A  6ADD               	clrf	postdec2,c
 13680  00354C  2A09               	incf	USBDeviceInit@i,f,c
 13681  00354E  D7EE               	goto	l13543
 13682  003550                     u11120:
 13683                           
 13684                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 13685  003550  8C65               	bsf	3941,6,c	;volatile
 13686                           
 13687                           ;usb_device.c: 316: UADDR = 0x00;
 13688  003552  0E00               	movlw	0
 13689  003554  010F               	movlb	15	; () banked
 13690  003556  6F38               	movwf	56,b	;volatile
 13691                           
 13692                           ; BSR set to: 15
 13693                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 13694  003558  9865               	bcf	3941,4,c	;volatile
 13695                           
 13696                           ; BSR set to: 15
 13697                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 13698  00355A  9C65               	bcf	3941,6,c	;volatile
 13699  00355C                     
 13700                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 13701                           
 13702                           ; BSR set to: 15
 13703  00355C  9662               	bcf	3938,3,c	;volatile
 13704                           
 13705                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 13706  00355E  0E00               	movlw	0
 13707  003560  0100               	movlb	0	; () banked
 13708  003562  6F72               	movwf	(_inPipes+3)& (0+255),b
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 13712  003564  0E00               	movlw	0
 13713  003566  0101               	movlb	1	; () banked
 13714  003568  6F34               	movwf	(_outPipes+3)& (0+255),b
 13715                           
 13716                           ; BSR set to: 1
 13717                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 13718  00356A  0E00               	movlw	0
 13719  00356C  6F36               	movwf	(_outPipes+5)& (0+255),b
 13720  00356E  0E00               	movlw	0
 13721  003570  6F35               	movwf	(_outPipes+4)& (0+255),b
 13722                           
 13723                           ; BSR set to: 1
 13724                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 13725  003572  B662               	btfsc	3938,3,c	;volatile
 13726  003574  D7F3               	goto	l141
 13727                           
 13728                           ; BSR set to: 1
 13729                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 13730                           
 13731                           ; BSR set to: 1
 13732  003576  0E01               	movlw	1
 13733  003578  0100               	movlb	0	; () banked
 13734  00357A  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13735                           
 13736                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 13737  00357C  0E01               	movlw	1
 13738  00357E  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13739                           
 13740                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 13741  003580  0E00               	movlw	0
 13742  003582  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13743                           
 13744                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 13745  003584  0E00               	movlw	0
 13746  003586  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13747                           
 13748                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 13749  003588  0E00               	movlw	0
 13750  00358A  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 13751                           
 13752                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 13753  00358C  0E00               	movlw	0
 13754  00358E  6E09               	movwf	USBDeviceInit@i,c
 13755  003590                     l13571:
 13756                           
 13757                           ; BSR set to: 0
 13758  003590  0E02               	movlw	2
 13759  003592  6409               	cpfsgt	USBDeviceInit@i,c
 13760  003594  D001               	goto	l143
 13761  003596  D02E               	goto	u11150
 13762  003598                     l143:
 13763                           
 13764                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13765                           
 13766                           ; BSR set to: 0
 13767  003598  5009               	movf	USBDeviceInit@i,w,c
 13768  00359A  0D02               	mullw	2
 13769  00359C  0E75               	movlw	low _pBDTEntryIn
 13770  00359E  24F3               	addwf	prodl,w,c
 13771  0035A0  6ED9               	movwf	fsr2l,c
 13772  0035A2  0E00               	movlw	high _pBDTEntryIn
 13773  0035A4  20F4               	addwfc	prodh,w,c
 13774  0035A6  6EDA               	movwf	fsr2h,c
 13775  0035A8  0E00               	movlw	0
 13776  0035AA  6EDE               	movwf	postinc2,c
 13777  0035AC  0E00               	movlw	0
 13778  0035AE  6EDD               	movwf	postdec2,c
 13779                           
 13780                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13781  0035B0  5009               	movf	USBDeviceInit@i,w,c
 13782  0035B2  0D02               	mullw	2
 13783  0035B4  0E39               	movlw	low _pBDTEntryOut
 13784  0035B6  24F3               	addwf	prodl,w,c
 13785  0035B8  6ED9               	movwf	fsr2l,c
 13786  0035BA  0E01               	movlw	high _pBDTEntryOut
 13787  0035BC  20F4               	addwfc	prodh,w,c
 13788  0035BE  6EDA               	movwf	fsr2h,c
 13789  0035C0  0E00               	movlw	0
 13790  0035C2  6EDE               	movwf	postinc2,c
 13791  0035C4  0E00               	movlw	0
 13792  0035C6  6EDD               	movwf	postdec2,c
 13793                           
 13794                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13795  0035C8  5009               	movf	USBDeviceInit@i,w,c
 13796  0035CA  0D01               	mullw	1
 13797  0035CC  0E60               	movlw	low _ep_data_in
 13798  0035CE  24F3               	addwf	prodl,w,c
 13799  0035D0  6ED9               	movwf	fsr2l,c
 13800  0035D2  0E01               	movlw	high _ep_data_in
 13801  0035D4  20F4               	addwfc	prodh,w,c
 13802  0035D6  6EDA               	movwf	fsr2h,c
 13803  0035D8  0E00               	movlw	0
 13804  0035DA  6EDF               	movwf	indf2,c
 13805                           
 13806                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13807  0035DC  5009               	movf	USBDeviceInit@i,w,c
 13808  0035DE  0D01               	mullw	1
 13809  0035E0  0E5D               	movlw	low _ep_data_out
 13810  0035E2  24F3               	addwf	prodl,w,c
 13811  0035E4  6ED9               	movwf	fsr2l,c
 13812  0035E6  0E01               	movlw	high _ep_data_out
 13813  0035E8  20F4               	addwfc	prodh,w,c
 13814  0035EA  6EDA               	movwf	fsr2h,c
 13815  0035EC  0E00               	movlw	0
 13816  0035EE  6EDF               	movwf	indf2,c
 13817  0035F0  2A09               	incf	USBDeviceInit@i,f,c
 13818  0035F2  D7CE               	goto	l13571
 13819  0035F4                     u11150:
 13820                           
 13821                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13822  0035F4  0E08               	movlw	8
 13823  0035F6  0100               	movlb	0	; () banked
 13824  0035F8  6F75               	movwf	_pBDTEntryIn& (0+255),b
 13825  0035FA  0E0D               	movlw	13
 13826  0035FC  6F76               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13830  0035FE  0E16               	movlw	22
 13831  003600  010F               	movlb	15	; () banked
 13832  003602  6F26               	movwf	38,b	;volatile
 13833                           
 13834                           ; BSR set to: 15
 13835                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13836  003604  0E0D               	movlw	13
 13837  003606  010D               	movlb	13	; () banked
 13838  003608  6F03               	movwf	3,b	;volatile
 13839  00360A  0E30               	movlw	48
 13840  00360C  6F02               	movwf	2,b	;volatile
 13841                           
 13842                           ; BSR set to: 13
 13843                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13844  00360E  0E08               	movlw	8
 13845  003610  6F01               	movwf	1,b	;volatile
 13846                           
 13847                           ; BSR set to: 13
 13848                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13849  003612  0E04               	movlw	4
 13850  003614  6F00               	movwf	0,b	;volatile
 13851                           
 13852                           ; BSR set to: 13
 13853                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13854  003616  8F00               	bsf	0,7,b	;volatile
 13855                           
 13856                           ; BSR set to: 13
 13857                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13858  003618  0E00               	movlw	0
 13859  00361A  0100               	movlb	0	; () banked
 13860  00361C  6FB5               	movwf	_USBActiveConfiguration& (0+255),b
 13861                           
 13862                           ; BSR set to: 0
 13863                           ;usb_device.c: 366: USB1msTickCount = 0;
 13864  00361E  0E00               	movlw	0
 13865  003620  0101               	movlb	1	; () banked
 13866  003622  6F53               	movwf	_USB1msTickCount& (0+255),b
 13867  003624  0E00               	movlw	0
 13868  003626  6F54               	movwf	(_USB1msTickCount+1)& (0+255),b
 13869  003628  0E00               	movlw	0
 13870  00362A  6F55               	movwf	(_USB1msTickCount+2)& (0+255),b
 13871  00362C  0E00               	movlw	0
 13872  00362E  6F56               	movwf	(_USB1msTickCount+3)& (0+255),b
 13873                           
 13874                           ; BSR set to: 1
 13875                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13876  003630  0E00               	movlw	0
 13877  003632  0100               	movlb	0	; () banked
 13878  003634  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13882  003636  0E00               	movlw	0
 13883  003638  6E5F               	movwf	_USBDeviceState,c
 13884                           
 13885                           ; BSR set to: 0
 13886  00363A  0012               	return		;funcret
 13887  00363C                     __end_of_USBDeviceInit:
 13888                           	opt stack 0
 13889                           tblptru	equ	0xFF8
 13890                           tblptrh	equ	0xFF7
 13891                           tblptrl	equ	0xFF6
 13892                           tablat	equ	0xFF5
 13893                           prodh	equ	0xFF4
 13894                           prodl	equ	0xFF3
 13895                           intcon	equ	0xFF2
 13896                           intcon3	equ	0xFF0
 13897                           postinc0	equ	0xFEE
 13898                           wreg	equ	0xFE8
 13899                           indf1	equ	0xFE7
 13900                           postdec1	equ	0xFE5
 13901                           plusw1	equ	0xFE3
 13902                           fsr1h	equ	0xFE2
 13903                           fsr1l	equ	0xFE1
 13904                           indf2	equ	0xFDF
 13905                           postinc2	equ	0xFDE
 13906                           postdec2	equ	0xFDD
 13907                           plusw2	equ	0xFDB
 13908                           fsr2h	equ	0xFDA
 13909                           fsr2l	equ	0xFD9
 13910                           status	equ	0xFD8
 13911                           
 13912 ;; *************** function _USBCtrlEPService *****************
 13913 ;; Defined at:
 13914 ;;		line 2374 in file "usb_device.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;		None
 13917 ;; Auto vars:     Size  Location     Type
 13918 ;;		None
 13919 ;; Return value:  Size  Location     Type
 13920 ;;                  1    wreg      void 
 13921 ;; Registers used:
 13922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13923 ;; Tracked objects:
 13924 ;;		On entry : 0/0
 13925 ;;		On exit  : 0/0
 13926 ;;		Unchanged: 0/0
 13927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13931 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13932 ;;Total ram usage:        2 bytes
 13933 ;; Hardware stack levels used:    1
 13934 ;; Hardware stack levels required when called:    7
 13935 ;; This function calls:
 13936 ;;		_USBCtrlTrfInHandler
 13937 ;;		_USBCtrlTrfOutHandler
 13938 ;;		_USBCtrlTrfSetupHandler
 13939 ;;		_memcpy
 13940 ;; This function is called by:
 13941 ;;		_USBDeviceTasks
 13942 ;; This function uses a non-reentrant model
 13943 ;;
 13944                           
 13945                           	psect	text68
 13946  0051E8                     __ptext68:
 13947                           	opt stack 0
 13948  0051E8                     _USBCtrlEPService:
 13949                           	opt stack 22
 13950                           
 13951                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;incstack = 0
 13955  0051E8  0E2D               	movlw	45
 13956  0051EA  0100               	movlb	0	; () banked
 13957  0051EC  6FA7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13961  0051EE  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13962  0051F2  0EFD               	movlw	253
 13963  0051F4  161E               	andwf	??_USBCtrlEPService,f,c
 13964  0051F6  A4D8               	btfss	status,2,c
 13965  0051F8  D044               	goto	l309
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13969  0051FA  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13970  0051FE  90D8               	bcf	status,0,c
 13971  005200  321E               	rrcf	??_USBCtrlEPService,f,c
 13972  005202  0E3F               	movlw	63
 13973  005204  161E               	andwf	??_USBCtrlEPService,f,c
 13974  005206  501E               	movf	??_USBCtrlEPService,w,c
 13975  005208  0D04               	mullw	4
 13976  00520A  0E00               	movlw	0
 13977  00520C  24F3               	addwf	prodl,w,c
 13978  00520E  6F8F               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13979  005210  0E0D               	movlw	13
 13980  005212  20F4               	addwfc	prodh,w,c
 13981  005214  6F90               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13985  005216  C08F  F08D         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13986  00521A  C090  F08E         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13987                           
 13988                           ; BSR set to: 0
 13989                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13990  00521E  0E04               	movlw	4
 13991  005220  198D               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13992  005222  6F8D               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13993  005224  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13994  005226  6F8E               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13998  005228  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13999  00522C  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 14000  005230  30DF               	rrcf	223,w,c
 14001  005232  32E8               	rrcf	wreg,f,c
 14002  005234  0B0F               	andlw	15
 14003  005236  0A0D               	xorlw	13
 14004  005238  A4D8               	btfss	status,2,c
 14005  00523A  D020               	goto	l310
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 14009  00523C  0E30               	movlw	48
 14010  00523E  6E01               	movwf	memcpy@d1,c
 14011  005240  0E0D               	movlw	13
 14012  005242  6E02               	movwf	memcpy@d1+1,c
 14013  005244  EE20 F002          	lfsr	2,2
 14014  005248  518F               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 14015  00524A  26D9               	addwf	fsr2l,f,c
 14016  00524C  5190               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 14017  00524E  22DA               	addwfc	fsr2h,f,c
 14018  005250  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 14019  005254  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 14020  005258  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 14021  00525C  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 14022  005260  5003               	movf	memcpy@s1,w,c
 14023  005262  1004               	iorwf	memcpy@s1+1,w,c
 14024  005264  A4D8               	btfss	status,2,c
 14025  005266  0E20               	movlw	32
 14026  005268  6E05               	movwf	memcpy@s1+2,c
 14027  00526A  0E00               	movlw	0
 14028  00526C  6E07               	movwf	memcpy@n+1,c
 14029  00526E  0E08               	movlw	8
 14030  005270  6E06               	movwf	memcpy@n,c
 14031  005272  EC25  F031         	call	_memcpy	;wreg free
 14032                           
 14033                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 14034  005276  EC0B  F02D         	call	_USBCtrlTrfSetupHandler	;wreg free
 14035                           
 14036                           ;usb_device.c: 2411: }
 14037  00527A  0012               	return	
 14038  00527C                     l310:
 14039                           
 14040                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 14041  00527C  EC4E  F032         	call	_USBCtrlTrfOutHandler	;wreg free
 14042                           
 14043                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 14044  005280  0012               	return	
 14045  005282                     l309:
 14046                           
 14047                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 14048  005282  0100               	movlb	0	; () banked
 14049  005284  51B4               	movf	_USTATcopy& (0+255),w,b
 14050  005286  0BFD               	andlw	253
 14051  005288  0A04               	xorlw	4
 14052  00528A  A4D8               	btfss	status,2,c
 14053  00528C  0012               	return	
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 14057  00528E  ECBF  F026         	call	_USBCtrlTrfInHandler	;wreg free
 14058  005292  0012               	return	
 14059  005294                     __end_of_USBCtrlEPService:
 14060                           	opt stack 0
 14061                           tblptru	equ	0xFF8
 14062                           tblptrh	equ	0xFF7
 14063                           tblptrl	equ	0xFF6
 14064                           tablat	equ	0xFF5
 14065                           prodh	equ	0xFF4
 14066                           prodl	equ	0xFF3
 14067                           intcon	equ	0xFF2
 14068                           intcon3	equ	0xFF0
 14069                           postinc0	equ	0xFEE
 14070                           wreg	equ	0xFE8
 14071                           indf1	equ	0xFE7
 14072                           postdec1	equ	0xFE5
 14073                           plusw1	equ	0xFE3
 14074                           fsr1h	equ	0xFE2
 14075                           fsr1l	equ	0xFE1
 14076                           indf2	equ	0xFDF
 14077                           postinc2	equ	0xFDE
 14078                           postdec2	equ	0xFDD
 14079                           plusw2	equ	0xFDB
 14080                           fsr2h	equ	0xFDA
 14081                           fsr2l	equ	0xFD9
 14082                           status	equ	0xFD8
 14083                           
 14084 ;; *************** function _USBCtrlTrfSetupHandler *****************
 14085 ;; Defined at:
 14086 ;;		line 2467 in file "usb_device.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;		None
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14104 ;;Total ram usage:        0 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    6
 14107 ;; This function calls:
 14108 ;;		_USBCheckStdRequest
 14109 ;;		_USBCtrlEPServiceComplete
 14110 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14111 ;; This function is called by:
 14112 ;;		_USBCtrlEPService
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text69
 14117  005A16                     __ptext69:
 14118                           	opt stack 0
 14119  005A16                     _USBCtrlTrfSetupHandler:
 14120                           	opt stack 22
 14121                           
 14122                           ;usb_device.c: 2472: shortPacketStatus = 0;
 14123                           
 14124                           ;incstack = 0
 14125  005A16  0E00               	movlw	0
 14126  005A18  0100               	movlb	0	; () banked
 14127  005A1A  6FAD               	movwf	_shortPacketStatus& (0+255),b
 14128                           
 14129                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 14130  005A1C  0E00               	movlw	0
 14131  005A1E  6FA6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 14132                           
 14133                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 14134  005A20  0E00               	movlw	0
 14135  005A22  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14136                           
 14137                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 14138  005A24  0E00               	movlw	0
 14139  005A26  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14140                           
 14141                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 14142  005A28  0E00               	movlw	0
 14143  005A2A  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 14144                           
 14145                           ;usb_device.c: 2477: controlTransferState = 0;
 14146  005A2C  0E00               	movlw	0
 14147  005A2E  6FAC               	movwf	_controlTransferState& (0+255),b
 14148                           
 14149                           ; BSR set to: 0
 14150                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14151  005A30  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14152  005A34  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14153  005A38  0E7F               	movlw	127
 14154  005A3A  16DF               	andwf	indf2,f,c
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14158  005A3C  0E04               	movlw	4
 14159  005A3E  1975               	xorwf	_pBDTEntryIn& (0+255),w,b
 14160  005A40  6F75               	movwf	_pBDTEntryIn& (0+255),b
 14161  005A42  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14162  005A44  6F76               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14166  005A46  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14167  005A4A  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14168  005A4E  0E7F               	movlw	127
 14169  005A50  16DF               	andwf	indf2,f,c
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14173  005A52  0E04               	movlw	4
 14174  005A54  1975               	xorwf	_pBDTEntryIn& (0+255),w,b
 14175  005A56  6F75               	movwf	_pBDTEntryIn& (0+255),b
 14176  005A58  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14177  005A5A  6F76               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 14181  005A5C  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14182  005A60  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14183  005A64  0E7F               	movlw	127
 14184  005A66  16DF               	andwf	indf2,f,c
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 14188  005A68  0E00               	movlw	0
 14189  005A6A  6F72               	movwf	(_inPipes+3)& (0+255),b
 14190                           
 14191                           ; BSR set to: 0
 14192                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 14193  005A6C  0E00               	movlw	0
 14194  005A6E  6F74               	movwf	(_inPipes+5)& (0+255),b
 14195  005A70  0E00               	movlw	0
 14196  005A72  6F73               	movwf	(_inPipes+4)& (0+255),b
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 14200  005A74  0E00               	movlw	0
 14201  005A76  0101               	movlb	1	; () banked
 14202  005A78  6F34               	movwf	(_outPipes+3)& (0+255),b
 14203                           
 14204                           ; BSR set to: 1
 14205                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 14206  005A7A  0E00               	movlw	0
 14207  005A7C  6F36               	movwf	(_outPipes+5)& (0+255),b
 14208  005A7E  0E00               	movlw	0
 14209  005A80  6F35               	movwf	(_outPipes+4)& (0+255),b
 14210                           
 14211                           ; BSR set to: 1
 14212                           ;usb_device.c: 2502: USBCheckStdRequest();
 14213  005A82  EC02  F022         	call	_USBCheckStdRequest	;wreg free
 14214                           
 14215                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 14216  005A86  0E00               	movlw	0
 14217  005A88  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14218  005A8A  0E03               	movlw	3
 14219  005A8C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14220  005A8E  0E00               	movlw	0
 14221  005A90  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14222  005A92  0E00               	movlw	0
 14223  005A94  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14224  005A96  0E00               	movlw	0
 14225  005A98  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14226  005A9A  0E00               	movlw	0
 14227  005A9C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14228  005A9E  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14229                           
 14230                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 14231  005AA2  EC0A  F021         	call	_USBCtrlEPServiceComplete	;wreg free
 14232  005AA6  0012               	return		;funcret
 14233  005AA8                     __end_of_USBCtrlTrfSetupHandler:
 14234                           	opt stack 0
 14235                           tblptru	equ	0xFF8
 14236                           tblptrh	equ	0xFF7
 14237                           tblptrl	equ	0xFF6
 14238                           tablat	equ	0xFF5
 14239                           prodh	equ	0xFF4
 14240                           prodl	equ	0xFF3
 14241                           intcon	equ	0xFF2
 14242                           intcon3	equ	0xFF0
 14243                           postinc0	equ	0xFEE
 14244                           wreg	equ	0xFE8
 14245                           indf1	equ	0xFE7
 14246                           postdec1	equ	0xFE5
 14247                           plusw1	equ	0xFE3
 14248                           fsr1h	equ	0xFE2
 14249                           fsr1l	equ	0xFE1
 14250                           indf2	equ	0xFDF
 14251                           postinc2	equ	0xFDE
 14252                           postdec2	equ	0xFDD
 14253                           plusw2	equ	0xFDB
 14254                           fsr2h	equ	0xFDA
 14255                           fsr2l	equ	0xFD9
 14256                           status	equ	0xFD8
 14257                           
 14258 ;; *************** function _USBCtrlEPServiceComplete *****************
 14259 ;; Defined at:
 14260 ;;		line 1618 in file "usb_device.c"
 14261 ;; Parameters:    Size  Location     Type
 14262 ;;		None
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;		None
 14265 ;; Return value:  Size  Location     Type
 14266 ;;                  1    wreg      void 
 14267 ;; Registers used:
 14268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14269 ;; Tracked objects:
 14270 ;;		On entry : 0/0
 14271 ;;		On exit  : 0/0
 14272 ;;		Unchanged: 0/0
 14273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14278 ;;Total ram usage:        0 bytes
 14279 ;; Hardware stack levels used:    1
 14280 ;; Hardware stack levels required when called:    2
 14281 ;; This function calls:
 14282 ;;		_USBCtrlEPAllowDataStage
 14283 ;;		_USBCtrlEPAllowStatusStage
 14284 ;; This function is called by:
 14285 ;;		_USBCtrlTrfSetupHandler
 14286 ;; This function uses a non-reentrant model
 14287 ;;
 14288                           
 14289                           	psect	text70
 14290  004214                     __ptext70:
 14291                           	opt stack 0
 14292  004214                     _USBCtrlEPServiceComplete:
 14293                           	opt stack 25
 14294                           
 14295                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 14296                           
 14297                           ;incstack = 0
 14298  004214  9865               	bcf	3941,4,c	;volatile
 14299                           
 14300                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 14301  004216  0100               	movlb	0	; () banked
 14302  004218  BF72               	btfsc	(_inPipes+3)& (0+255),7,b
 14303  00421A  D03C               	goto	l219
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 14307  00421C  0101               	movlb	1	; () banked
 14308  00421E  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 14309  004220  D00D               	goto	l220
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 14313  004222  0E02               	movlw	2
 14314  004224  0100               	movlb	0	; () banked
 14315  004226  6FAC               	movwf	_controlTransferState& (0+255),b
 14316                           
 14317                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 14318  004228  51A2               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 14319  00422A  B4D8               	btfsc	status,2,c
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 14323  00422C  ECDA  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 14324                           
 14325                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 14326  004230  0E00               	movlw	0
 14327  004232  0100               	movlb	0	; () banked
 14328  004234  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14329                           
 14330                           ; BSR set to: 0
 14331                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 14332  004236  0E00               	movlw	0
 14333  004238  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14334                           
 14335                           ;usb_device.c: 1654: }
 14336  00423A  0012               	return	
 14337  00423C                     l220:
 14338                           
 14339                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 14340                           
 14341                           ; BSR set to: 0
 14342  00423C  0100               	movlb	0	; () banked
 14343  00423E  EE20 F001          	lfsr	2,1
 14344  004242  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14345  004244  26D9               	addwf	fsr2l,f,c
 14346  004246  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14347  004248  22DA               	addwfc	fsr2h,f,c
 14348  00424A  0E08               	movlw	8
 14349  00424C  6EDF               	movwf	indf2,c
 14350                           
 14351                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14352  00424E  EE20 F002          	lfsr	2,2
 14353  004252  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14354  004254  26D9               	addwf	fsr2l,f,c
 14355  004256  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14356  004258  22DA               	addwfc	fsr2h,f,c
 14357  00425A  0E30               	movlw	48
 14358  00425C  6EDE               	movwf	postinc2,c
 14359  00425E  0E0D               	movlw	13
 14360  004260  6EDD               	movwf	postdec2,c
 14361                           
 14362                           ; BSR set to: 0
 14363                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14364  004262  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14365  004266  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14366  00426A  0E0C               	movlw	12
 14367  00426C  6EDF               	movwf	indf2,c
 14368                           
 14369                           ; BSR set to: 0
 14370                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14371  00426E  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14372  004272  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14373  004276  0E00               	movlw	0
 14374  004278  8EDB               	bsf	plusw2,7,c
 14375                           
 14376                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 14377  00427A  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14378  00427E  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14379  004282  0E04               	movlw	4
 14380  004284  6EDF               	movwf	indf2,c
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14384  004286  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14385  00428A  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14386  00428E  0E00               	movlw	0
 14387  004290  8EDB               	bsf	plusw2,7,c
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 14391  004292  0012               	return	
 14392  004294                     l219:
 14393                           
 14394                           ; BSR set to: 0
 14395                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 14396  004294  010D               	movlb	13	; () banked
 14397  004296  AF30               	btfss	48,7,b	;volatile
 14398  004298  D012               	goto	l224
 14399                           
 14400                           ; BSR set to: 13
 14401                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 14402  00429A  0E01               	movlw	1
 14403  00429C  0100               	movlb	0	; () banked
 14404  00429E  6FAC               	movwf	_controlTransferState& (0+255),b
 14405                           
 14406                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 14407  0042A0  51A3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 14408  0042A2  B4D8               	btfsc	status,2,c
 14409                           
 14410                           ; BSR set to: 0
 14411                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 14412  0042A4  ECDA  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 14413                           
 14414                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 14415  0042A8  0E00               	movlw	0
 14416  0042AA  0100               	movlb	0	; () banked
 14417  0042AC  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14418                           
 14419                           ; BSR set to: 0
 14420                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 14421  0042AE  0E00               	movlw	0
 14422  0042B0  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 14426  0042B2  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14427  0042B4  A4D8               	btfss	status,2,c
 14428  0042B6  0012               	return	
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 14432  0042B8  EC23  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14433                           
 14434                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 14435  0042BC  0012               	return	
 14436  0042BE                     l224:
 14437                           
 14438                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 14439  0042BE  0E02               	movlw	2
 14440  0042C0  0100               	movlb	0	; () banked
 14441  0042C2  6FAC               	movwf	_controlTransferState& (0+255),b
 14442                           
 14443                           ; BSR set to: 0
 14444                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 14445  0042C4  EE20 F001          	lfsr	2,1
 14446  0042C8  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14447  0042CA  26D9               	addwf	fsr2l,f,c
 14448  0042CC  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14449  0042CE  22DA               	addwfc	fsr2h,f,c
 14450  0042D0  0E08               	movlw	8
 14451  0042D2  6EDF               	movwf	indf2,c
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14455  0042D4  EE20 F002          	lfsr	2,2
 14456  0042D8  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14457  0042DA  26D9               	addwf	fsr2l,f,c
 14458  0042DC  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14459  0042DE  22DA               	addwfc	fsr2h,f,c
 14460  0042E0  0E30               	movlw	48
 14461  0042E2  6EDE               	movwf	postinc2,c
 14462  0042E4  0E0D               	movlw	13
 14463  0042E6  6EDD               	movwf	postdec2,c
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14467  0042E8  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14468  0042EC  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14469  0042F0  0E04               	movlw	4
 14470  0042F2  6EDF               	movwf	indf2,c
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14474  0042F4  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14475  0042F8  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14476  0042FC  0E00               	movlw	0
 14477  0042FE  8EDB               	bsf	plusw2,7,c
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 14481  004300  0E00               	movlw	0
 14482  004302  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14483                           
 14484                           ; BSR set to: 0
 14485                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 14486  004304  0E00               	movlw	0
 14487  004306  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 14491  004308  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14492  00430A  A4D8               	btfss	status,2,c
 14493  00430C  0012               	return	
 14494                           
 14495                           ; BSR set to: 0
 14496                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 14497  00430E  EC23  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14498  004312  0012               	return	
 14499  004314                     __end_of_USBCtrlEPServiceComplete:
 14500                           	opt stack 0
 14501                           tblptru	equ	0xFF8
 14502                           tblptrh	equ	0xFF7
 14503                           tblptrl	equ	0xFF6
 14504                           tablat	equ	0xFF5
 14505                           prodh	equ	0xFF4
 14506                           prodl	equ	0xFF3
 14507                           intcon	equ	0xFF2
 14508                           intcon3	equ	0xFF0
 14509                           postinc0	equ	0xFEE
 14510                           wreg	equ	0xFE8
 14511                           indf1	equ	0xFE7
 14512                           postdec1	equ	0xFE5
 14513                           plusw1	equ	0xFE3
 14514                           fsr1h	equ	0xFE2
 14515                           fsr1l	equ	0xFE1
 14516                           indf2	equ	0xFDF
 14517                           postinc2	equ	0xFDE
 14518                           postdec2	equ	0xFDD
 14519                           plusw2	equ	0xFDB
 14520                           fsr2h	equ	0xFDA
 14521                           fsr2l	equ	0xFD9
 14522                           status	equ	0xFD8
 14523                           
 14524 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14525 ;; Defined at:
 14526 ;;		line 1490 in file "usb_device.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;		None
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;		None
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  1    wreg      void 
 14533 ;; Registers used:
 14534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14544 ;;Total ram usage:        0 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:    1
 14547 ;; This function calls:
 14548 ;;		_USBCtrlTrfTxService
 14549 ;; This function is called by:
 14550 ;;		_USBCtrlEPServiceComplete
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           	psect	text71
 14555  0057B4                     __ptext71:
 14556                           	opt stack 0
 14557  0057B4                     _USBCtrlEPAllowDataStage:
 14558                           	opt stack 25
 14559                           
 14560                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 14561                           
 14562                           ;incstack = 0
 14563  0057B4  0E00               	movlw	0
 14564  0057B6  0100               	movlb	0	; () banked
 14565  0057B8  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14566                           
 14567                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 14568  0057BA  0E00               	movlw	0
 14569  0057BC  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14570                           
 14571                           ; BSR set to: 0
 14572                           ;usb_device.c: 1495: if(controlTransferState == 2)
 14573  0057BE  0E02               	movlw	2
 14574  0057C0  19AC               	xorwf	_controlTransferState& (0+255),w,b
 14575  0057C2  A4D8               	btfss	status,2,c
 14576  0057C4  D01F               	goto	l208
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 14580  0057C6  EE20 F001          	lfsr	2,1
 14581  0057CA  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14582  0057CC  26D9               	addwf	fsr2l,f,c
 14583  0057CE  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14584  0057D0  22DA               	addwfc	fsr2h,f,c
 14585  0057D2  0E08               	movlw	8
 14586  0057D4  6EDF               	movwf	indf2,c
 14587                           
 14588                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14589  0057D6  EE20 F002          	lfsr	2,2
 14590  0057DA  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14591  0057DC  26D9               	addwf	fsr2l,f,c
 14592  0057DE  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14593  0057E0  22DA               	addwfc	fsr2h,f,c
 14594  0057E2  0E38               	movlw	56
 14595  0057E4  6EDE               	movwf	postinc2,c
 14596  0057E6  0E0D               	movlw	13
 14597  0057E8  6EDD               	movwf	postdec2,c
 14598                           
 14599                           ; BSR set to: 0
 14600                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14601  0057EA  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14602  0057EE  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14603  0057F2  0E48               	movlw	72
 14604  0057F4  6EDF               	movwf	indf2,c
 14605                           
 14606                           ; BSR set to: 0
 14607                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14608  0057F6  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14609  0057FA  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14610  0057FE  0E00               	movlw	0
 14611  005800  8EDB               	bsf	plusw2,7,c
 14612                           
 14613                           ;usb_device.c: 1502: }
 14614  005802  0012               	return	
 14615  005804                     l208:
 14616                           
 14617                           ; BSR set to: 0
 14618                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 14619                           
 14620                           ; BSR set to: 0
 14621  005804  5173               	movf	(_inPipes+4)& (0+255),w,b
 14622  005806  010D               	movlb	13	; () banked
 14623  005808  5D36               	subwf	54,w,b	;volatile
 14624  00580A  0100               	movlb	0	; () banked
 14625  00580C  5174               	movf	(_inPipes+5)& (0+255),w,b
 14626  00580E  010D               	movlb	13	; () banked
 14627  005810  5937               	subwfb	55,w,b	;volatile
 14628  005812  B0D8               	btfsc	status,0,c
 14629  005814  D004               	goto	l210
 14630                           
 14631                           ; BSR set to: 13
 14632                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 14633  005816  CD36 F073          	movff	3382,_inPipes+4	;volatile
 14634  00581A  CD37 F074          	movff	3383,_inPipes+5	;volatile
 14635  00581E                     l210:
 14636                           
 14637                           ; BSR set to: 13
 14638                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 14639                           
 14640                           ; BSR set to: 13
 14641  00581E  ECEE  F025         	call	_USBCtrlTrfTxService	;wreg free
 14642                           
 14643                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14644  005822  0100               	movlb	0	; () banked
 14645  005824  EE20 F002          	lfsr	2,2
 14646  005828  5175               	movf	_pBDTEntryIn& (0+255),w,b
 14647  00582A  26D9               	addwf	fsr2l,f,c
 14648  00582C  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14649  00582E  22DA               	addwfc	fsr2h,f,c
 14650  005830  0E38               	movlw	56
 14651  005832  6EDE               	movwf	postinc2,c
 14652  005834  0E0D               	movlw	13
 14653  005836  6EDD               	movwf	postdec2,c
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14657  005838  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14658  00583C  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14659  005840  0E48               	movlw	72
 14660  005842  6EDF               	movwf	indf2,c
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14664  005844  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 14665  005848  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14666  00584C  0E00               	movlw	0
 14667  00584E  8EDB               	bsf	plusw2,7,c
 14668  005850  0012               	return	
 14669  005852                     __end_of_USBCtrlEPAllowDataStage:
 14670                           	opt stack 0
 14671                           tblptru	equ	0xFF8
 14672                           tblptrh	equ	0xFF7
 14673                           tblptrl	equ	0xFF6
 14674                           tablat	equ	0xFF5
 14675                           prodh	equ	0xFF4
 14676                           prodl	equ	0xFF3
 14677                           intcon	equ	0xFF2
 14678                           intcon3	equ	0xFF0
 14679                           postinc0	equ	0xFEE
 14680                           wreg	equ	0xFE8
 14681                           indf1	equ	0xFE7
 14682                           postdec1	equ	0xFE5
 14683                           plusw1	equ	0xFE3
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           postdec2	equ	0xFDD
 14689                           plusw2	equ	0xFDB
 14690                           fsr2h	equ	0xFDA
 14691                           fsr2l	equ	0xFD9
 14692                           status	equ	0xFD8
 14693                           
 14694 ;; *************** function _USBCheckStdRequest *****************
 14695 ;; Defined at:
 14696 ;;		line 2688 in file "usb_device.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;		None
 14699 ;; Auto vars:     Size  Location     Type
 14700 ;;		None
 14701 ;; Return value:  Size  Location     Type
 14702 ;;                  1    wreg      void 
 14703 ;; Registers used:
 14704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14705 ;; Tracked objects:
 14706 ;;		On entry : 0/0
 14707 ;;		On exit  : 0/0
 14708 ;;		Unchanged: 0/0
 14709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14714 ;;Total ram usage:        0 bytes
 14715 ;; Hardware stack levels used:    1
 14716 ;; Hardware stack levels required when called:    5
 14717 ;; This function calls:
 14718 ;;		_USBStdFeatureReqHandler
 14719 ;;		_USBStdGetDscHandler
 14720 ;;		_USBStdGetStatusHandler
 14721 ;;		_USBStdSetCfgHandler
 14722 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14723 ;; This function is called by:
 14724 ;;		_USBCtrlTrfSetupHandler
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text72
 14729  004404                     __ptext72:
 14730                           	opt stack 0
 14731  004404                     _USBCheckStdRequest:
 14732                           	opt stack 22
 14733                           
 14734                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 14735                           
 14736                           ; BSR set to: 0
 14737                           ;incstack = 0
 14738  004404  010D               	movlb	13	; () banked
 14739  004406  3930               	swapf	48,w,b	;volatile
 14740  004408  32E8               	rrcf	wreg,f,c
 14741  00440A  0B03               	andlw	3
 14742  00440C  0900               	iorlw	0
 14743  00440E  A4D8               	btfss	status,2,c
 14744  004410  0012               	return	
 14745  004412  D047               	goto	l343
 14746  004414                     l344:
 14747                           
 14748                           ; BSR set to: 13
 14749                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 14750  004414  0100               	movlb	0	; () banked
 14751  004416  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14755  004418  0E08               	movlw	8
 14756  00441A  6E5F               	movwf	_USBDeviceState,c
 14757                           
 14758                           ;usb_device.c: 2698: break;
 14759  00441C  0012               	return	
 14760  00441E                     
 14761                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14762                           
 14763                           ; BSR set to: 0
 14764  00441E  EC1E  F01B         	call	_USBStdGetDscHandler	;wreg free
 14765                           
 14766                           ;usb_device.c: 2701: break;
 14767  004422  0012               	return	
 14768  004424                     
 14769                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14770  004424  ECC5  F023         	call	_USBStdSetCfgHandler	;wreg free
 14771                           
 14772                           ;usb_device.c: 2704: break;
 14773  004428  0012               	return	
 14774  00442A                     
 14775                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14776  00442A  0EB5               	movlw	low _USBActiveConfiguration
 14777  00442C  0100               	movlb	0	; () banked
 14778  00442E  6F6F               	movwf	_inPipes& (0+255),b
 14779  004430  0E00               	movlw	high _USBActiveConfiguration
 14780  004432  6F70               	movwf	(_inPipes+1)& (0+255),b
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14784  004434  8172               	bsf	(_inPipes+3)& (0+255),0,b
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14788  004436  0E01               	movlw	1
 14789  004438  6F73               	movwf	(_inPipes+4)& (0+255),b
 14790                           
 14791                           ; BSR set to: 0
 14792                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14793  00443A  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 14794                           
 14795                           ;usb_device.c: 2710: break;
 14796  00443C  0012               	return	
 14797  00443E                     
 14798                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14799                           
 14800                           ; BSR set to: 0
 14801  00443E  EC4A  F029         	call	_USBStdGetStatusHandler	;wreg free
 14802                           
 14803                           ;usb_device.c: 2713: break;
 14804  004442  0012               	return	
 14805  004444                     
 14806                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14807  004444  EC6B  F00A         	call	_USBStdFeatureReqHandler	;wreg free
 14808                           
 14809                           ;usb_device.c: 2717: break;
 14810  004448  0012               	return	
 14811  00444A                     
 14812                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14813  00444A  010D               	movlb	13	; () banked
 14814  00444C  5134               	movf	52,w,b	;volatile
 14815  00444E  0D01               	mullw	1
 14816  004450  0EE7               	movlw	low _USBAlternateInterface
 14817  004452  24F3               	addwf	prodl,w,c
 14818  004454  0100               	movlb	0	; () banked
 14819  004456  6F6F               	movwf	_inPipes& (0+255),b
 14820  004458  0E01               	movlw	high _USBAlternateInterface
 14821  00445A  20F4               	addwfc	prodh,w,c
 14822  00445C  6F70               	movwf	(_inPipes+1)& (0+255),b
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14826  00445E  8172               	bsf	(_inPipes+3)& (0+255),0,b
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14830  004460  0E01               	movlw	1
 14831  004462  6F73               	movwf	(_inPipes+4)& (0+255),b
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14835  004464  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 14836                           
 14837                           ;usb_device.c: 2723: break;
 14838  004466  0012               	return	
 14839  004468                     l353:
 14840                           
 14841                           ; BSR set to: 13
 14842                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14843  004468  0100               	movlb	0	; () banked
 14844  00446A  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14848  00446C  010D               	movlb	13	; () banked
 14849  00446E  5134               	movf	52,w,b	;volatile
 14850  004470  0D01               	mullw	1
 14851  004472  0EE7               	movlw	low _USBAlternateInterface
 14852  004474  24F3               	addwf	prodl,w,c
 14853  004476  6ED9               	movwf	fsr2l,c
 14854  004478  0E01               	movlw	high _USBAlternateInterface
 14855  00447A  20F4               	addwfc	prodh,w,c
 14856  00447C  6EDA               	movwf	fsr2h,c
 14857  00447E  CD32 FFDF          	movff	3378,indf2	;volatile
 14858                           
 14859                           ;usb_device.c: 2727: break;
 14860  004482  0012               	return	
 14861  004484                     
 14862                           ; BSR set to: 13
 14863                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14864                           
 14865                           ; BSR set to: 13
 14866  004484  0E00               	movlw	0
 14867  004486  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14868  004488  0E02               	movlw	2
 14869  00448A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14870  00448C  0E00               	movlw	0
 14871  00448E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14872  004490  0E00               	movlw	0
 14873  004492  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14874  004494  0E00               	movlw	0
 14875  004496  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14876  004498  0E00               	movlw	0
 14877  00449A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14878  00449C  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14879                           
 14880                           ;usb_device.c: 2734: }
 14881                           
 14882                           ;usb_device.c: 2733: break;
 14883                           
 14884                           ;usb_device.c: 2732: default:
 14885                           
 14886                           ;usb_device.c: 2731: case 12:
 14887                           
 14888                           ;usb_device.c: 2730: break;
 14889  0044A0  0012               	return	
 14890  0044A2                     l343:
 14891  0044A2  010D               	movlb	13	; () banked
 14892  0044A4  5131               	movf	49,w,b	;volatile
 14893                           
 14894                           ; Switch size 1, requested type "space"
 14895                           ; Number of cases is 11, Range of values is 0 to 12
 14896                           ; switch strategies available:
 14897                           ; Name         Instructions Cycles
 14898                           ; simple_byte           34    18 (average)
 14899                           ;	Chosen strategy is simple_byte
 14900  0044A6  0A00               	xorlw	0	; case 0
 14901  0044A8  B4D8               	btfsc	status,2,c
 14902  0044AA  D7C9               	goto	l349
 14903  0044AC  0A01               	xorlw	1	; case 1
 14904  0044AE  B4D8               	btfsc	status,2,c
 14905  0044B0  D7C9               	goto	l350
 14906  0044B2  0A02               	xorlw	2	; case 3
 14907  0044B4  B4D8               	btfsc	status,2,c
 14908  0044B6  D7C6               	goto	l350
 14909  0044B8  0A06               	xorlw	6	; case 5
 14910  0044BA  B4D8               	btfsc	status,2,c
 14911  0044BC  D7AB               	goto	l344
 14912  0044BE  0A03               	xorlw	3	; case 6
 14913  0044C0  B4D8               	btfsc	status,2,c
 14914  0044C2  D7AD               	goto	l346
 14915  0044C4  0A01               	xorlw	1	; case 7
 14916  0044C6  B4D8               	btfsc	status,2,c
 14917  0044C8  D7DD               	goto	l354
 14918  0044CA  0A0F               	xorlw	15	; case 8
 14919  0044CC  B4D8               	btfsc	status,2,c
 14920  0044CE  D7AD               	goto	l348
 14921  0044D0  0A01               	xorlw	1	; case 9
 14922  0044D2  B4D8               	btfsc	status,2,c
 14923  0044D4  D7A7               	goto	l347
 14924  0044D6  0A03               	xorlw	3	; case 10
 14925  0044D8  B4D8               	btfsc	status,2,c
 14926  0044DA  D7B7               	goto	l352
 14927  0044DC  0A01               	xorlw	1	; case 11
 14928  0044DE  B4D8               	btfsc	status,2,c
 14929  0044E0  D7C3               	goto	l353
 14930  0044E2  0A07               	xorlw	7	; case 12
 14931  0044E4  0012               	return	
 14932  0044E6                     __end_of_USBCheckStdRequest:
 14933                           	opt stack 0
 14934                           tblptru	equ	0xFF8
 14935                           tblptrh	equ	0xFF7
 14936                           tblptrl	equ	0xFF6
 14937                           tablat	equ	0xFF5
 14938                           prodh	equ	0xFF4
 14939                           prodl	equ	0xFF3
 14940                           intcon	equ	0xFF2
 14941                           intcon3	equ	0xFF0
 14942                           postinc0	equ	0xFEE
 14943                           wreg	equ	0xFE8
 14944                           indf1	equ	0xFE7
 14945                           postdec1	equ	0xFE5
 14946                           plusw1	equ	0xFE3
 14947                           fsr1h	equ	0xFE2
 14948                           fsr1l	equ	0xFE1
 14949                           indf2	equ	0xFDF
 14950                           postinc2	equ	0xFDE
 14951                           postdec2	equ	0xFDD
 14952                           plusw2	equ	0xFDB
 14953                           fsr2h	equ	0xFDA
 14954                           fsr2l	equ	0xFD9
 14955                           status	equ	0xFD8
 14956                           
 14957 ;; *************** function _USBStdSetCfgHandler *****************
 14958 ;; Defined at:
 14959 ;;		line 1970 in file "usb_device.c"
 14960 ;; Parameters:    Size  Location     Type
 14961 ;;		None
 14962 ;; Auto vars:     Size  Location     Type
 14963 ;;  i               1   23[COMRAM] unsigned char 
 14964 ;; Return value:  Size  Location     Type
 14965 ;;                  1    wreg      void 
 14966 ;; Registers used:
 14967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14968 ;; Tracked objects:
 14969 ;;		On entry : 0/0
 14970 ;;		On exit  : 0/0
 14971 ;;		Unchanged: 0/0
 14972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14977 ;;Total ram usage:        1 bytes
 14978 ;; Hardware stack levels used:    1
 14979 ;; Hardware stack levels required when called:    4
 14980 ;; This function calls:
 14981 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14982 ;;		_memset
 14983 ;; This function is called by:
 14984 ;;		_USBCheckStdRequest
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text73
 14989  00478A                     __ptext73:
 14990                           	opt stack 0
 14991  00478A                     _USBStdSetCfgHandler:
 14992                           	opt stack 22
 14993                           
 14994                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14995                           
 14996                           ;incstack = 0
 14997  00478A  0100               	movlb	0	; () banked
 14998  00478C  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 14999                           
 15000                           ; BSR set to: 0
 15001                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 15002  00478E  0E27               	movlw	39
 15003  004790  6E01               	movwf	memset@p1,c
 15004  004792  0E0F               	movlw	15
 15005  004794  6E02               	movwf	memset@p1+1,c
 15006  004796  0E00               	movlw	0
 15007  004798  6E04               	movwf	memset@c+1,c
 15008  00479A  0E00               	movlw	0
 15009  00479C  6E03               	movwf	memset@c,c
 15010  00479E  0E00               	movlw	0
 15011  0047A0  6E06               	movwf	memset@n+1,c
 15012  0047A2  0E02               	movlw	2
 15013  0047A4  6E05               	movwf	memset@n,c
 15014  0047A6  ECEB  F037         	call	_memset	;wreg free
 15015                           
 15016                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 15017  0047AA  0E00               	movlw	0
 15018  0047AC  6E01               	movwf	memset@p1,c
 15019  0047AE  0E0D               	movlw	13
 15020  0047B0  6E02               	movwf	memset@p1+1,c
 15021  0047B2  0E00               	movlw	0
 15022  0047B4  6E04               	movwf	memset@c+1,c
 15023  0047B6  0E00               	movlw	0
 15024  0047B8  6E03               	movwf	memset@c,c
 15025  0047BA  0E00               	movlw	0
 15026  0047BC  6E06               	movwf	memset@n+1,c
 15027  0047BE  0E30               	movlw	48
 15028  0047C0  6E05               	movwf	memset@n,c
 15029  0047C2  ECEB  F037         	call	_memset	;wreg free
 15030                           
 15031                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 15032  0047C6  8C65               	bsf	3941,6,c	;volatile
 15033                           
 15034                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 15035  0047C8  0E00               	movlw	0
 15036  0047CA  6E18               	movwf	USBStdSetCfgHandler@i,c
 15037  0047CC                     l11871:
 15038  0047CC  0E02               	movlw	2
 15039  0047CE  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 15040  0047D0  D001               	goto	l260
 15041  0047D2  D016               	goto	u9170
 15042  0047D4                     l260:
 15043                           
 15044                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 15045  0047D4  5018               	movf	USBStdSetCfgHandler@i,w,c
 15046  0047D6  0D01               	mullw	1
 15047  0047D8  0E60               	movlw	low _ep_data_in
 15048  0047DA  24F3               	addwf	prodl,w,c
 15049  0047DC  6ED9               	movwf	fsr2l,c
 15050  0047DE  0E01               	movlw	high _ep_data_in
 15051  0047E0  20F4               	addwfc	prodh,w,c
 15052  0047E2  6EDA               	movwf	fsr2h,c
 15053  0047E4  0E00               	movlw	0
 15054  0047E6  6EDF               	movwf	indf2,c
 15055                           
 15056                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 15057  0047E8  5018               	movf	USBStdSetCfgHandler@i,w,c
 15058  0047EA  0D01               	mullw	1
 15059  0047EC  0E5D               	movlw	low _ep_data_out
 15060  0047EE  24F3               	addwf	prodl,w,c
 15061  0047F0  6ED9               	movwf	fsr2l,c
 15062  0047F2  0E01               	movlw	high _ep_data_out
 15063  0047F4  20F4               	addwfc	prodh,w,c
 15064  0047F6  6EDA               	movwf	fsr2h,c
 15065  0047F8  0E00               	movlw	0
 15066  0047FA  6EDF               	movwf	indf2,c
 15067  0047FC  2A18               	incf	USBStdSetCfgHandler@i,f,c
 15068  0047FE  D7E6               	goto	l11871
 15069  004800                     u9170:
 15070                           
 15071                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 15072  004800  0EE7               	movlw	low _USBAlternateInterface
 15073  004802  6E01               	movwf	memset@p1,c
 15074  004804  0E01               	movlw	high _USBAlternateInterface
 15075  004806  6E02               	movwf	memset@p1+1,c
 15076  004808  0E00               	movlw	0
 15077  00480A  6E04               	movwf	memset@c+1,c
 15078  00480C  0E00               	movlw	0
 15079  00480E  6E03               	movwf	memset@c,c
 15080  004810  0E00               	movlw	0
 15081  004812  6E06               	movwf	memset@n+1,c
 15082  004814  0E02               	movlw	2
 15083  004816  6E05               	movwf	memset@n,c
 15084  004818  ECEB  F037         	call	_memset	;wreg free
 15085                           
 15086                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 15087  00481C  9C65               	bcf	3941,6,c	;volatile
 15088                           
 15089                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15090  00481E  0E08               	movlw	8
 15091  004820  0100               	movlb	0	; () banked
 15092  004822  6F75               	movwf	_pBDTEntryIn& (0+255),b
 15093  004824  0E0D               	movlw	13
 15094  004826  6F76               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15095                           
 15096                           ; BSR set to: 0
 15097                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15098  004828  0E00               	movlw	0
 15099  00482A  6F8F               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 15100  00482C  0E0D               	movlw	13
 15101  00482E  6F90               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 15102                           
 15103                           ; BSR set to: 0
 15104                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15105  004830  C08F  F08D         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15106  004834  C090  F08E         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15107                           
 15108                           ; BSR set to: 0
 15109                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15110  004838  CD32 F0B5          	movff	3378,_USBActiveConfiguration	;volatile
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 15114  00483C  51B5               	movf	_USBActiveConfiguration& (0+255),w,b
 15115  00483E  A4D8               	btfss	status,2,c
 15116  004840  D003               	goto	l262
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 15120  004842  0E10               	movlw	16
 15121  004844  6E5F               	movwf	_USBDeviceState,c
 15122                           
 15123                           ;usb_device.c: 2015: }
 15124  004846  0012               	return	
 15125  004848                     l262:
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 15129                           
 15130                           ; BSR set to: 0
 15131  004848  0E00               	movlw	0
 15132  00484A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15133  00484C  0E01               	movlw	1
 15134  00484E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15135  004850  0EB5               	movlw	low _USBActiveConfiguration
 15136  004852  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15137  004854  0E00               	movlw	high _USBActiveConfiguration
 15138  004856  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15139  004858  0E00               	movlw	0
 15140  00485A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15141  00485C  0E01               	movlw	1
 15142  00485E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15143  004860  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15144                           
 15145                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 15146  004864  0E20               	movlw	32
 15147  004866  6E5F               	movwf	_USBDeviceState,c
 15148  004868  0012               	return	
 15149  00486A                     __end_of_USBStdSetCfgHandler:
 15150                           	opt stack 0
 15151                           tblptru	equ	0xFF8
 15152                           tblptrh	equ	0xFF7
 15153                           tblptrl	equ	0xFF6
 15154                           tablat	equ	0xFF5
 15155                           prodh	equ	0xFF4
 15156                           prodl	equ	0xFF3
 15157                           intcon	equ	0xFF2
 15158                           intcon3	equ	0xFF0
 15159                           postinc0	equ	0xFEE
 15160                           wreg	equ	0xFE8
 15161                           indf1	equ	0xFE7
 15162                           postdec1	equ	0xFE5
 15163                           plusw1	equ	0xFE3
 15164                           fsr1h	equ	0xFE2
 15165                           fsr1l	equ	0xFE1
 15166                           indf2	equ	0xFDF
 15167                           postinc2	equ	0xFDE
 15168                           postdec2	equ	0xFDD
 15169                           plusw2	equ	0xFDB
 15170                           fsr2h	equ	0xFDA
 15171                           fsr2l	equ	0xFD9
 15172                           status	equ	0xFD8
 15173                           
 15174 ;; *************** function _memset *****************
 15175 ;; Defined at:
 15176 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  p1              2    0[COMRAM] PTR void 
 15179 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15180 ;;  c               2    2[COMRAM] int 
 15181 ;;  n               2    4[COMRAM] unsigned int 
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;  p               2    6[COMRAM] PTR unsigned char 
 15184 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  2    0[COMRAM] PTR void 
 15187 ;; Registers used:
 15188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15197 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15198 ;;Total ram usage:        8 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_USBDeviceInit
 15204 ;;		_USBStdSetCfgHandler
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text74
 15209  006FD6                     __ptext74:
 15210                           	opt stack 0
 15211  006FD6                     _memset:
 15212                           	opt stack 28
 15213                           
 15214                           ;incstack = 0
 15215  006FD6  C001  F007         	movff	memset@p1,memset@p
 15216  006FDA  C002  F008         	movff	memset@p1+1,memset@p+1
 15217  006FDE  D008               	goto	l3555
 15218  006FE0                     l10637:
 15219  006FE0  C007  FFD9         	movff	memset@p,fsr2l
 15220  006FE4  C008  FFDA         	movff	memset@p+1,fsr2h
 15221  006FE8  C003  FFDF         	movff	memset@c,indf2
 15222  006FEC  4A07               	infsnz	memset@p,f,c
 15223  006FEE  2A08               	incf	memset@p+1,f,c
 15224  006FF0                     l3555:
 15225  006FF0  0605               	decf	memset@n,f,c
 15226  006FF2  A0D8               	btfss	status,0,c
 15227  006FF4  0606               	decf	memset@n+1,f,c
 15228  006FF6  2805               	incf	memset@n,w,c
 15229  006FF8  E1F3               	bnz	l10637
 15230  006FFA  2806               	incf	memset@n+1,w,c
 15231  006FFC  B4D8               	btfsc	status,2,c
 15232  006FFE  0012               	return	
 15233  007000  D7EF               	goto	l3556
 15234  007002                     __end_of_memset:
 15235                           	opt stack 0
 15236                           tblptru	equ	0xFF8
 15237                           tblptrh	equ	0xFF7
 15238                           tblptrl	equ	0xFF6
 15239                           tablat	equ	0xFF5
 15240                           prodh	equ	0xFF4
 15241                           prodl	equ	0xFF3
 15242                           intcon	equ	0xFF2
 15243                           intcon3	equ	0xFF0
 15244                           postinc0	equ	0xFEE
 15245                           wreg	equ	0xFE8
 15246                           indf1	equ	0xFE7
 15247                           postdec1	equ	0xFE5
 15248                           plusw1	equ	0xFE3
 15249                           fsr1h	equ	0xFE2
 15250                           fsr1l	equ	0xFE1
 15251                           indf2	equ	0xFDF
 15252                           postinc2	equ	0xFDE
 15253                           postdec2	equ	0xFDD
 15254                           plusw2	equ	0xFDB
 15255                           fsr2h	equ	0xFDA
 15256                           fsr2l	equ	0xFD9
 15257                           status	equ	0xFD8
 15258                           
 15259 ;; *************** function _USBStdGetStatusHandler *****************
 15260 ;; Defined at:
 15261 ;;		line 2131 in file "usb_device.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;		None
 15264 ;; Auto vars:     Size  Location     Type
 15265 ;;  p               2    1[COMRAM] PTR struct __BDT
 15266 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15267 ;; Return value:  Size  Location     Type
 15268 ;;                  1    wreg      void 
 15269 ;; Registers used:
 15270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15271 ;; Tracked objects:
 15272 ;;		On entry : 0/0
 15273 ;;		On exit  : 0/0
 15274 ;;		Unchanged: 0/0
 15275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15278 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15279 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15280 ;;Total ram usage:        3 bytes
 15281 ;; Hardware stack levels used:    1
 15282 ;; This function calls:
 15283 ;;		Nothing
 15284 ;; This function is called by:
 15285 ;;		_USBCheckStdRequest
 15286 ;; This function uses a non-reentrant model
 15287 ;;
 15288                           
 15289                           	psect	text75
 15290  005294                     __ptext75:
 15291                           	opt stack 0
 15292  005294                     _USBStdGetStatusHandler:
 15293                           	opt stack 26
 15294                           
 15295                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 15296                           
 15297                           ;incstack = 0
 15298  005294  0E00               	movlw	0
 15299  005296  010D               	movlb	13	; () banked
 15300  005298  6F38               	movwf	56,b	;volatile
 15301                           
 15302                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 15303  00529A  0E00               	movlw	0
 15304  00529C  6F39               	movwf	57,b	;volatile
 15305                           
 15306                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 15307  00529E  D039               	goto	l281
 15308  0052A0                     l282:
 15309                           
 15310                           ; BSR set to: 13
 15311                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 15312  0052A0  0100               	movlb	0	; () banked
 15313  0052A2  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 15314                           
 15315                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 15316                           
 15317                           ; BSR set to: 13
 15318                           
 15319                           ; BSR set to: 0
 15320                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 15321                           
 15322                           ;usb_device.c: 2144: if(0 == 1)
 15323  0052A4  0100               	movlb	0	; () banked
 15324  0052A6  05AB               	decf	_RemoteWakeup& (0+255),w,b
 15325  0052A8  A4D8               	btfss	status,2,c
 15326  0052AA  D03E               	goto	l285
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 15330  0052AC  010D               	movlb	13	; () banked
 15331  0052AE  8338               	bsf	56,1,b	;volatile
 15332                           
 15333                           ; BSR set to: 13
 15334                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 15335  0052B0  D03B               	goto	l285
 15336  0052B2                     l286:
 15337                           
 15338                           ; BSR set to: 13
 15339                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 15340  0052B2  0100               	movlb	0	; () banked
 15341  0052B4  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 15342                           
 15343                           ;usb_device.c: 2156: break;
 15344  0052B6  D038               	goto	l285
 15345  0052B8                     l287:
 15346                           
 15347                           ; BSR set to: 13
 15348                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 15349  0052B8  0100               	movlb	0	; () banked
 15350  0052BA  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 15351                           
 15352                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 15353  0052BC  010D               	movlb	13	; () banked
 15354  0052BE  BF34               	btfsc	52,7,b	;volatile
 15355  0052C0  D00A               	goto	l288
 15356                           
 15357                           ; BSR set to: 13
 15358                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15359  0052C2  5134               	movf	52,w,b	;volatile
 15360  0052C4  0B0F               	andlw	15
 15361  0052C6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15362  0052C8  5001               	movf	??_USBStdGetStatusHandler,w,c
 15363  0052CA  0D02               	mullw	2
 15364  0052CC  0E39               	movlw	low _pBDTEntryOut
 15365  0052CE  24F3               	addwf	prodl,w,c
 15366  0052D0  6ED9               	movwf	fsr2l,c
 15367  0052D2  0E01               	movlw	high _pBDTEntryOut
 15368  0052D4  D009               	goto	L7
 15369  0052D6                     l288:
 15370                           
 15371                           ; BSR set to: 13
 15372                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15373                           
 15374                           ; BSR set to: 13
 15375  0052D6  5134               	movf	52,w,b	;volatile
 15376  0052D8  0B0F               	andlw	15
 15377  0052DA  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15378  0052DC  5001               	movf	??_USBStdGetStatusHandler,w,c
 15379  0052DE  0D02               	mullw	2
 15380  0052E0  0E75               	movlw	low _pBDTEntryIn
 15381  0052E2  24F3               	addwf	prodl,w,c
 15382  0052E4  6ED9               	movwf	fsr2l,c
 15383  0052E6  0E00               	movlw	high _pBDTEntryIn
 15384  0052E8                     L7:
 15385  0052E8  20F4               	addwfc	prodh,w,c
 15386  0052EA  6EDA               	movwf	fsr2h,c
 15387  0052EC  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 15388  0052F0  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 15389                           
 15390                           ; BSR set to: 13
 15391                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 15392                           
 15393                           ; BSR set to: 13
 15394  0052F4  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15395  0052F8  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15396  0052FC  AEDF               	btfss	indf2,7,c
 15397  0052FE  D014               	goto	l285
 15398                           
 15399                           ; BSR set to: 13
 15400  005300  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15401  005304  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15402  005308  A4DF               	btfss	indf2,2,c
 15403  00530A  D00E               	goto	l285
 15404                           
 15405                           ; BSR set to: 13
 15406                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 15407  00530C  0E01               	movlw	1
 15408  00530E  6F38               	movwf	56,b	;volatile
 15409                           
 15410                           ; BSR set to: 13
 15411                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 15412                           
 15413                           ; BSR set to: 13
 15414                           ;usb_device.c: 2176: break;
 15415  005310  D00B               	goto	l285
 15416  005312                     l281:
 15417                           
 15418                           ; BSR set to: 13
 15419                           
 15420                           ; BSR set to: 13
 15421  005312  5130               	movf	48,w,b	;volatile
 15422  005314  0B1F               	andlw	31
 15423                           
 15424                           ; Switch size 1, requested type "space"
 15425                           ; Number of cases is 3, Range of values is 0 to 2
 15426                           ; switch strategies available:
 15427                           ; Name         Instructions Cycles
 15428                           ; simple_byte           10     6 (average)
 15429                           ;	Chosen strategy is simple_byte
 15430  005316  0A00               	xorlw	0	; case 0
 15431  005318  B4D8               	btfsc	status,2,c
 15432  00531A  D7C2               	goto	l282
 15433  00531C  0A01               	xorlw	1	; case 1
 15434  00531E  B4D8               	btfsc	status,2,c
 15435  005320  D7C8               	goto	l286
 15436  005322  0A03               	xorlw	3	; case 2
 15437  005324  B4D8               	btfsc	status,2,c
 15438  005326  D7C8               	goto	l287
 15439  005328                     l285:
 15440                           
 15441                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 15442  005328  0100               	movlb	0	; () banked
 15443  00532A  AF72               	btfss	(_inPipes+3)& (0+255),7,b
 15444  00532C  0012               	return	
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 15448  00532E  0E38               	movlw	56
 15449  005330  6F6F               	movwf	_inPipes& (0+255),b
 15450  005332  0E0D               	movlw	13
 15451  005334  6F70               	movwf	(_inPipes+1)& (0+255),b
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15455  005336  8172               	bsf	(_inPipes+3)& (0+255),0,b
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 15459  005338  0E02               	movlw	2
 15460  00533A  6F73               	movwf	(_inPipes+4)& (0+255),b
 15461  00533C  0012               	return	
 15462  00533E                     __end_of_USBStdGetStatusHandler:
 15463                           	opt stack 0
 15464                           tblptru	equ	0xFF8
 15465                           tblptrh	equ	0xFF7
 15466                           tblptrl	equ	0xFF6
 15467                           tablat	equ	0xFF5
 15468                           prodh	equ	0xFF4
 15469                           prodl	equ	0xFF3
 15470                           intcon	equ	0xFF2
 15471                           intcon3	equ	0xFF0
 15472                           postinc0	equ	0xFEE
 15473                           wreg	equ	0xFE8
 15474                           indf1	equ	0xFE7
 15475                           postdec1	equ	0xFE5
 15476                           plusw1	equ	0xFE3
 15477                           fsr1h	equ	0xFE2
 15478                           fsr1l	equ	0xFE1
 15479                           indf2	equ	0xFDF
 15480                           postinc2	equ	0xFDE
 15481                           postdec2	equ	0xFDD
 15482                           plusw2	equ	0xFDB
 15483                           fsr2h	equ	0xFDA
 15484                           fsr2l	equ	0xFD9
 15485                           status	equ	0xFD8
 15486                           
 15487 ;; *************** function _USBStdGetDscHandler *****************
 15488 ;; Defined at:
 15489 ;;		line 2045 in file "usb_device.c"
 15490 ;; Parameters:    Size  Location     Type
 15491 ;;		None
 15492 ;; Auto vars:     Size  Location     Type
 15493 ;;		None
 15494 ;; Return value:  Size  Location     Type
 15495 ;;                  1    wreg      void 
 15496 ;; Registers used:
 15497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15498 ;; Tracked objects:
 15499 ;;		On entry : 0/0
 15500 ;;		On exit  : 0/0
 15501 ;;		Unchanged: 0/0
 15502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15507 ;;Total ram usage:        2 bytes
 15508 ;; Hardware stack levels used:    1
 15509 ;; This function calls:
 15510 ;;		Nothing
 15511 ;; This function is called by:
 15512 ;;		_USBCheckStdRequest
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text76
 15517  00363C                     __ptext76:
 15518                           	opt stack 0
 15519  00363C                     _USBStdGetDscHandler:
 15520                           	opt stack 26
 15521                           
 15522                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 15523                           
 15524                           ; BSR set to: 0
 15525                           ;incstack = 0
 15526  00363C  0E80               	movlw	128
 15527  00363E  010D               	movlb	13	; () banked
 15528  003640  1930               	xorwf	48,w,b	;volatile
 15529  003642  A4D8               	btfss	status,2,c
 15530  003644  0012               	return	
 15531                           
 15532                           ; BSR set to: 13
 15533                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15534  003646  0EC0               	movlw	192
 15535  003648  0100               	movlb	0	; () banked
 15536  00364A  6F72               	movwf	(_inPipes+3)& (0+255),b
 15537                           
 15538                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 15539  00364C  D088               	goto	l268
 15540  00364E                     
 15541                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15542                           
 15543                           ; BSR set to: 0
 15544  00364E  0E7C               	movlw	low _device_dsc
 15545  003650  0100               	movlb	0	; () banked
 15546  003652  6F6F               	movwf	_inPipes& (0+255),b
 15547  003654  0E8F               	movlw	high _device_dsc
 15548  003656  6F70               	movwf	(_inPipes+1)& (0+255),b
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 15552  003658  0E00               	movlw	0
 15553  00365A  6F74               	movwf	(_inPipes+5)& (0+255),b
 15554  00365C  0E12               	movlw	18
 15555  00365E  6F73               	movwf	(_inPipes+4)& (0+255),b
 15556                           
 15557                           ;usb_device.c: 2060: break;
 15558  003660  0012               	return	
 15559  003662                     
 15560                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 15561                           
 15562                           ; BSR set to: 0
 15563  003662  010D               	movlb	13	; () banked
 15564  003664  5132               	movf	50,w,b	;volatile
 15565  003666  A4D8               	btfss	status,2,c
 15566  003668  D043               	goto	l272
 15567                           
 15568                           ; BSR set to: 13
 15569                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 15570  00366A  5132               	movf	50,w,b	;volatile
 15571  00366C  0D02               	mullw	2
 15572  00366E  0E7B               	movlw	low _USB_CD_Ptr
 15573  003670  24F3               	addwf	prodl,w,c
 15574  003672  6EF6               	movwf	tblptrl,c
 15575  003674  0E8E               	movlw	high _USB_CD_Ptr
 15576  003676  20F4               	addwfc	prodh,w,c
 15577  003678  6EF7               	movwf	tblptrh,c
 15578  00367A                     	if	1	;There are 3 active tblptr bytes
 15579  00367A  6AF8               	clrf	tblptru,c
 15580  00367C  0E00               	movlw	low (__mediumconst shr (0+16))
 15581  00367E  22F8               	addwfc	tblptru,f,c
 15582  003680                     	endif
 15583  003680  0009               	tblrd		*+
 15584  003682  CFF5 F06F          	movff	tablat,_inPipes
 15585  003686  000A               	tblrd		*-
 15586  003688  CFF5 F070          	movff	tablat,_inPipes+1
 15587                           
 15588                           ; BSR set to: 13
 15589                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15590  00368C  0E02               	movlw	2
 15591  00368E  0100               	movlb	0	; () banked
 15592  003690  256F               	addwf	_inPipes& (0+255),w,b
 15593  003692  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15594  003694  0E00               	movlw	0
 15595  003696  2170               	addwfc	(_inPipes+1)& (0+255),w,b
 15596  003698  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15597  00369A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15598  00369E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15599  0036A2  6AF8               	clrf	tblptru,c
 15600  0036A4  0E0E               	movlw	(high __ramtop+-1)
 15601  0036A6  64F7               	cpfsgt	tblptrh,c
 15602  0036A8  D003               	bra	u9217
 15603  0036AA  0008               	tblrd		*
 15604  0036AC  50F5               	movf	tablat,w,c
 15605  0036AE  D005               	bra	u9210
 15606  0036B0                     u9217:
 15607  0036B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15608  0036B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15609  0036B8  50EF               	movf	indf0,w,c
 15610  0036BA                     u9210:
 15611  0036BA  0100               	movlb	0	; () banked
 15612  0036BC  6F73               	movwf	(_inPipes+4)& (0+255),b
 15613                           
 15614                           ; BSR set to: 0
 15615                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15616  0036BE  0E03               	movlw	3
 15617  0036C0  256F               	addwf	_inPipes& (0+255),w,b
 15618  0036C2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15619  0036C4  0E00               	movlw	0
 15620  0036C6  2170               	addwfc	(_inPipes+1)& (0+255),w,b
 15621  0036C8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15622  0036CA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15623  0036CE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15624  0036D2  6AF8               	clrf	tblptru,c
 15625  0036D4  0E0E               	movlw	(high __ramtop+-1)
 15626  0036D6  64F7               	cpfsgt	tblptrh,c
 15627  0036D8  D003               	bra	u9227
 15628  0036DA  0008               	tblrd		*
 15629  0036DC  50F5               	movf	tablat,w,c
 15630  0036DE  D005               	bra	u9220
 15631  0036E0                     u9227:
 15632  0036E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 15633  0036E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 15634  0036E8  50EF               	movf	indf0,w,c
 15635  0036EA                     u9220:
 15636  0036EA  0100               	movlb	0	; () banked
 15637  0036EC  6F74               	movwf	(_inPipes+5)& (0+255),b
 15638                           
 15639                           ;usb_device.c: 2078: }
 15640  0036EE  0012               	return	
 15641  0036F0                     l272:
 15642                           
 15643                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 15644                           
 15645                           ; BSR set to: 0
 15646  0036F0  0E00               	movlw	0
 15647  0036F2  0100               	movlb	0	; () banked
 15648  0036F4  6F72               	movwf	(_inPipes+3)& (0+255),b
 15649                           
 15650                           ; BSR set to: 0
 15651                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 15652  0036F6  0012               	return	
 15653  0036F8                     
 15654                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 15655                           
 15656                           ; BSR set to: 0
 15657  0036F8  0E04               	movlw	4
 15658  0036FA  010D               	movlb	13	; () banked
 15659  0036FC  6132               	cpfslt	50,b	;volatile
 15660  0036FE  D027               	goto	l275
 15661                           
 15662                           ; BSR set to: 13
 15663                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 15664  003700  5132               	movf	50,w,b	;volatile
 15665  003702  0D02               	mullw	2
 15666  003704  0E51               	movlw	low _USB_SD_Ptr
 15667  003706  24F3               	addwf	prodl,w,c
 15668  003708  6EF6               	movwf	tblptrl,c
 15669  00370A  0E8E               	movlw	high _USB_SD_Ptr
 15670  00370C  20F4               	addwfc	prodh,w,c
 15671  00370E  6EF7               	movwf	tblptrh,c
 15672  003710                     	if	1	;There are 3 active tblptr bytes
 15673  003710  6AF8               	clrf	tblptru,c
 15674  003712  0E00               	movlw	low (__mediumconst shr (0+16))
 15675  003714  22F8               	addwfc	tblptru,f,c
 15676  003716                     	endif
 15677  003716  0009               	tblrd		*+
 15678  003718  CFF5 F06F          	movff	tablat,_inPipes
 15679  00371C  000A               	tblrd		*-
 15680  00371E  CFF5 F070          	movff	tablat,_inPipes+1
 15681                           
 15682                           ; BSR set to: 13
 15683                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15684  003722  C06F  FFF6         	movff	_inPipes,tblptrl
 15685  003726  C070  FFF7         	movff	_inPipes+1,tblptrh
 15686  00372A  6AF8               	clrf	tblptru,c
 15687  00372C  0E0E               	movlw	(high __ramtop+-1)
 15688  00372E  64F7               	cpfsgt	tblptrh,c
 15689  003730  D003               	bra	u9247
 15690  003732  0008               	tblrd		*
 15691  003734  50F5               	movf	tablat,w,c
 15692  003736  D005               	bra	u9240
 15693  003738                     u9247:
 15694  003738  CFF6 FFE9          	movff	tblptrl,fsr0l
 15695  00373C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15696  003740  50EF               	movf	indf0,w,c
 15697  003742                     u9240:
 15698  003742  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15699  003744  5001               	movf	??_USBStdGetDscHandler,w,c
 15700  003746  0100               	movlb	0	; () banked
 15701  003748  6F73               	movwf	(_inPipes+4)& (0+255),b
 15702  00374A  6B74               	clrf	(_inPipes+5)& (0+255),b
 15703                           
 15704                           ;usb_device.c: 2094: }
 15705  00374C  0012               	return	
 15706  00374E                     l275:
 15707                           
 15708                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 15709                           
 15710                           ; BSR set to: 0
 15711  00374E  0E00               	movlw	0
 15712  003750  0100               	movlb	0	; () banked
 15713  003752  6F72               	movwf	(_inPipes+3)& (0+255),b
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 15717  003754  0012               	return	
 15718  003756                     
 15719                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 15720                           
 15721                           ; BSR set to: 0
 15722  003756  0E00               	movlw	0
 15723  003758  0100               	movlb	0	; () banked
 15724  00375A  6F72               	movwf	(_inPipes+3)& (0+255),b
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;usb_device.c: 2112: }
 15728                           
 15729                           ;usb_device.c: 2111: break;
 15730  00375C  0012               	return	
 15731  00375E                     l268:
 15732                           
 15733                           ; BSR set to: 0
 15734                           
 15735                           ; BSR set to: 0
 15736  00375E  010D               	movlb	13	; () banked
 15737  003760  5133               	movf	51,w,b	;volatile
 15738                           
 15739                           ; Switch size 1, requested type "space"
 15740                           ; Number of cases is 3, Range of values is 1 to 3
 15741                           ; switch strategies available:
 15742                           ; Name         Instructions Cycles
 15743                           ; simple_byte           10     6 (average)
 15744                           ;	Chosen strategy is simple_byte
 15745  003762  0A01               	xorlw	1	; case 1
 15746  003764  B4D8               	btfsc	status,2,c
 15747  003766  D773               	goto	l269
 15748  003768  0A03               	xorlw	3	; case 2
 15749  00376A  B4D8               	btfsc	status,2,c
 15750  00376C  D77A               	goto	l271
 15751  00376E  0A01               	xorlw	1	; case 3
 15752  003770  B4D8               	btfsc	status,2,c
 15753  003772  D7C2               	goto	l274
 15754  003774  D7F0               	goto	l277
 15755  003776                     __end_of_USBStdGetDscHandler:
 15756                           	opt stack 0
 15757                           tblptru	equ	0xFF8
 15758                           tblptrh	equ	0xFF7
 15759                           tblptrl	equ	0xFF6
 15760                           tablat	equ	0xFF5
 15761                           prodh	equ	0xFF4
 15762                           prodl	equ	0xFF3
 15763                           intcon	equ	0xFF2
 15764                           intcon3	equ	0xFF0
 15765                           indf0	equ	0xFEF
 15766                           postinc0	equ	0xFEE
 15767                           fsr0h	equ	0xFEA
 15768                           fsr0l	equ	0xFE9
 15769                           wreg	equ	0xFE8
 15770                           indf1	equ	0xFE7
 15771                           postdec1	equ	0xFE5
 15772                           plusw1	equ	0xFE3
 15773                           fsr1h	equ	0xFE2
 15774                           fsr1l	equ	0xFE1
 15775                           indf2	equ	0xFDF
 15776                           postinc2	equ	0xFDE
 15777                           postdec2	equ	0xFDD
 15778                           plusw2	equ	0xFDB
 15779                           fsr2h	equ	0xFDA
 15780                           fsr2l	equ	0xFD9
 15781                           status	equ	0xFD8
 15782                           
 15783 ;; *************** function _USBStdFeatureReqHandler *****************
 15784 ;; Defined at:
 15785 ;;		line 2756 in file "usb_device.c"
 15786 ;; Parameters:    Size  Location     Type
 15787 ;;		None
 15788 ;; Auto vars:     Size  Location     Type
 15789 ;;  p               2   27[COMRAM] PTR struct __BDT
 15790 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15791 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15792 ;;		 -> UEP0(1), 
 15793 ;;  current_ep_d    1   26[COMRAM] struct .
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15804 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15807 ;;Total ram usage:        6 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    4
 15810 ;; This function calls:
 15811 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15812 ;; This function is called by:
 15813 ;;		_USBCheckStdRequest
 15814 ;; This function uses a non-reentrant model
 15815 ;;
 15816                           
 15817                           	psect	text77
 15818  0014D6                     __ptext77:
 15819                           	opt stack 0
 15820  0014D6                     _USBStdFeatureReqHandler:
 15821                           	opt stack 22
 15822                           
 15823                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15824                           
 15825                           ;incstack = 0
 15826  0014D6  010D               	movlb	13	; () banked
 15827  0014D8  0532               	decf	50,w,b	;volatile
 15828  0014DA  A4D8               	btfss	status,2,c
 15829  0014DC  D011               	goto	l361
 15830                           
 15831                           ; BSR set to: 13
 15832  0014DE  5130               	movf	48,w,b	;volatile
 15833  0014E0  0B1F               	andlw	31
 15834  0014E2  0900               	iorlw	0
 15835  0014E4  A4D8               	btfss	status,2,c
 15836  0014E6  D00C               	goto	l361
 15837                           
 15838                           ; BSR set to: 13
 15839                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15840  0014E8  0100               	movlb	0	; () banked
 15841  0014EA  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 15842                           
 15843                           ; BSR set to: 0
 15844                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15845  0014EC  0E03               	movlw	3
 15846  0014EE  010D               	movlb	13	; () banked
 15847  0014F0  1931               	xorwf	49,w,b	;volatile
 15848  0014F2  A4D8               	btfss	status,2,c
 15849  0014F4  D002               	goto	l360
 15850                           
 15851                           ; BSR set to: 13
 15852                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15853  0014F6  0E01               	movlw	1
 15854  0014F8  D001               	goto	L8
 15855  0014FA                     l360:
 15856                           
 15857                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15858                           
 15859                           ; BSR set to: 0
 15860  0014FA  0E00               	movlw	0
 15861  0014FC                     L8:
 15862  0014FC  0100               	movlb	0	; () banked
 15863  0014FE  6FAB               	movwf	_RemoteWakeup& (0+255),b
 15864  001500                     l361:
 15865                           
 15866                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15867                           
 15868                           ; BSR set to: 0
 15869  001500  010D               	movlb	13	; () banked
 15870  001502  5132               	movf	50,w,b	;volatile
 15871  001504  A4D8               	btfss	status,2,c
 15872  001506  0012               	return	
 15873                           
 15874                           ; BSR set to: 13
 15875  001508  5130               	movf	48,w,b	;volatile
 15876  00150A  0B1F               	andlw	31
 15877  00150C  0A02               	xorlw	2
 15878  00150E  A4D8               	btfss	status,2,c
 15879  001510  0012               	return	
 15880                           
 15881                           ; BSR set to: 13
 15882  001512  5134               	movf	52,w,b	;volatile
 15883  001514  0B0F               	andlw	15
 15884  001516  0900               	iorlw	0
 15885  001518  B4D8               	btfsc	status,2,c
 15886  00151A  0012               	return	
 15887                           
 15888                           ; BSR set to: 13
 15889  00151C  5134               	movf	52,w,b	;volatile
 15890  00151E  0B0F               	andlw	15
 15891  001520  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15892  001522  0E03               	movlw	3
 15893  001524  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15894  001526  0012               	return	
 15895                           
 15896                           ; BSR set to: 13
 15897  001528  0E20               	movlw	32
 15898  00152A  185F               	xorwf	_USBDeviceState,w,c
 15899  00152C  A4D8               	btfss	status,2,c
 15900  00152E  0012               	return	
 15901                           
 15902                           ; BSR set to: 13
 15903                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15904  001530  0100               	movlb	0	; () banked
 15905  001532  8F72               	bsf	(_inPipes+3)& (0+255),7,b
 15906                           
 15907                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15908  001534  010D               	movlb	13	; () banked
 15909  001536  BF34               	btfsc	52,7,b	;volatile
 15910  001538  D019               	goto	l363
 15911                           
 15912                           ; BSR set to: 13
 15913                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15914  00153A  5134               	movf	52,w,b	;volatile
 15915  00153C  0B0F               	andlw	15
 15916  00153E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15917  001540  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15918  001542  0D02               	mullw	2
 15919  001544  0E39               	movlw	low _pBDTEntryOut
 15920  001546  24F3               	addwf	prodl,w,c
 15921  001548  6ED9               	movwf	fsr2l,c
 15922  00154A  0E01               	movlw	high _pBDTEntryOut
 15923  00154C  20F4               	addwfc	prodh,w,c
 15924  00154E  6EDA               	movwf	fsr2h,c
 15925  001550  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15926  001554  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15927                           
 15928                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15929  001558  5134               	movf	52,w,b	;volatile
 15930  00155A  0B0F               	andlw	15
 15931  00155C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15932  00155E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15933  001560  0D01               	mullw	1
 15934  001562  0E5D               	movlw	low _ep_data_out
 15935  001564  24F3               	addwf	prodl,w,c
 15936  001566  6ED9               	movwf	fsr2l,c
 15937  001568  0E01               	movlw	high _ep_data_out
 15938  00156A  D018               	goto	L9
 15939  00156C                     l363:
 15940                           
 15941                           ; BSR set to: 13
 15942                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15943                           
 15944                           ; BSR set to: 13
 15945  00156C  5134               	movf	52,w,b	;volatile
 15946  00156E  0B0F               	andlw	15
 15947  001570  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15948  001572  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15949  001574  0D02               	mullw	2
 15950  001576  0E75               	movlw	low _pBDTEntryIn
 15951  001578  24F3               	addwf	prodl,w,c
 15952  00157A  6ED9               	movwf	fsr2l,c
 15953  00157C  0E00               	movlw	high _pBDTEntryIn
 15954  00157E  20F4               	addwfc	prodh,w,c
 15955  001580  6EDA               	movwf	fsr2h,c
 15956  001582  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15957  001586  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15958                           
 15959                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15960  00158A  5134               	movf	52,w,b	;volatile
 15961  00158C  0B0F               	andlw	15
 15962  00158E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15963  001590  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15964  001592  0D01               	mullw	1
 15965  001594  0E60               	movlw	low _ep_data_in
 15966  001596  24F3               	addwf	prodl,w,c
 15967  001598  6ED9               	movwf	fsr2l,c
 15968  00159A  0E01               	movlw	high _ep_data_in
 15969  00159C                     L9:
 15970  00159C  20F4               	addwfc	prodh,w,c
 15971  00159E  6EDA               	movwf	fsr2h,c
 15972  0015A0  50DF               	movf	indf2,w,c
 15973  0015A2  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15974                           
 15975                           ; BSR set to: 13
 15976                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15977                           
 15978                           ; BSR set to: 13
 15979  0015A4  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15980  0015A6  D006               	goto	l365
 15981                           
 15982                           ; BSR set to: 13
 15983                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15984  0015A8  0EFB               	movlw	251
 15985  0015AA  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15986  0015AC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15987  0015AE  0EFF               	movlw	255
 15988  0015B0  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15989  0015B2  D004               	goto	L10
 15990  0015B4                     l365:
 15991                           
 15992                           ; BSR set to: 13
 15993                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15994                           
 15995                           ; BSR set to: 13
 15996  0015B4  0E04               	movlw	4
 15997  0015B6  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15998  0015B8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15999  0015BA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 16000  0015BC                     L10:
 16001  0015BC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 16002                           
 16003                           ; BSR set to: 13
 16004                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 16005                           
 16006                           ; BSR set to: 13
 16007  0015BE  BF34               	btfsc	52,7,b	;volatile
 16008  0015C0  D00A               	goto	l367
 16009                           
 16010                           ; BSR set to: 13
 16011                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 16012  0015C2  5134               	movf	52,w,b	;volatile
 16013  0015C4  0B0F               	andlw	15
 16014  0015C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16015  0015C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16016  0015CA  0D02               	mullw	2
 16017  0015CC  0E39               	movlw	low _pBDTEntryOut
 16018  0015CE  24F3               	addwf	prodl,w,c
 16019  0015D0  6ED9               	movwf	fsr2l,c
 16020  0015D2  0E01               	movlw	high _pBDTEntryOut
 16021  0015D4  D009               	goto	L11
 16022  0015D6                     l367:
 16023                           
 16024                           ; BSR set to: 13
 16025                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 16026                           
 16027                           ; BSR set to: 13
 16028  0015D6  5134               	movf	52,w,b	;volatile
 16029  0015D8  0B0F               	andlw	15
 16030  0015DA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16031  0015DC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16032  0015DE  0D02               	mullw	2
 16033  0015E0  0E75               	movlw	low _pBDTEntryIn
 16034  0015E2  24F3               	addwf	prodl,w,c
 16035  0015E4  6ED9               	movwf	fsr2l,c
 16036  0015E6  0E00               	movlw	high _pBDTEntryIn
 16037  0015E8                     L11:
 16038  0015E8  20F4               	addwfc	prodh,w,c
 16039  0015EA  6EDA               	movwf	fsr2h,c
 16040  0015EC  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 16041  0015F0  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 16042                           
 16043                           ; BSR set to: 13
 16044                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 16045                           
 16046                           ; BSR set to: 13
 16047  0015F4  0E03               	movlw	3
 16048  0015F6  1931               	xorwf	49,w,b	;volatile
 16049  0015F8  A4D8               	btfss	status,2,c
 16050  0015FA  D02D               	goto	l369
 16051                           
 16052                           ; BSR set to: 13
 16053                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 16054  0015FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16055  001600  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16056  001604  AEDF               	btfss	indf2,7,c
 16057  001606  D01A               	goto	l372
 16058                           
 16059                           ; BSR set to: 13
 16060                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 16061  001608  BF34               	btfsc	52,7,b	;volatile
 16062  00160A  D00A               	goto	l371
 16063                           
 16064                           ; BSR set to: 13
 16065                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 16066  00160C  5134               	movf	52,w,b	;volatile
 16067  00160E  0B0F               	andlw	15
 16068  001610  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16069  001612  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16070  001614  0D01               	mullw	1
 16071  001616  0E5D               	movlw	low _ep_data_out
 16072  001618  24F3               	addwf	prodl,w,c
 16073  00161A  6ED9               	movwf	fsr2l,c
 16074  00161C  0E01               	movlw	high _ep_data_out
 16075  00161E  D00A               	goto	L12
 16076  001620                     l371:
 16077                           
 16078                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 16079                           
 16080                           ; BSR set to: 1
 16081  001620  010D               	movlb	13	; () banked
 16082  001622  5134               	movf	52,w,b	;volatile
 16083  001624  0B0F               	andlw	15
 16084  001626  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16085  001628  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16086  00162A  0D01               	mullw	1
 16087  00162C  0E60               	movlw	low _ep_data_in
 16088  00162E  24F3               	addwf	prodl,w,c
 16089  001630  6ED9               	movwf	fsr2l,c
 16090  001632  0E01               	movlw	high _ep_data_in
 16091  001634                     L12:
 16092  001634  20F4               	addwfc	prodh,w,c
 16093  001636  6EDA               	movwf	fsr2h,c
 16094  001638  0101               	movlb	1	; () banked
 16095  00163A  82DF               	bsf	indf2,1,c
 16096  00163C                     l372:
 16097                           
 16098                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 16099                           
 16100                           ; BSR set to: 1
 16101                           
 16102                           ; BSR set to: 1
 16103  00163C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16104  001640  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16105  001644  0E00               	movlw	0
 16106  001646  84DB               	bsf	plusw2,2,c
 16107                           
 16108                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 16109  001648  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16110  00164C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16111  001650  0E00               	movlw	0
 16112  001652  8EDB               	bsf	plusw2,7,c
 16113                           
 16114                           ;usb_device.c: 2878: }
 16115  001654  0012               	return	
 16116  001656                     l369:
 16117                           
 16118                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 16119  001656  0E04               	movlw	4
 16120  001658  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 16121  00165A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 16122  00165C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 16123  00165E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 16124                           
 16125                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 16126  001660  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16127  001664  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16128  001668  AEDF               	btfss	indf2,7,c
 16129  00166A  D01B               	goto	l374
 16130                           
 16131                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 16132  00166C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16133  001670  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16134  001674  0E7F               	movlw	127
 16135  001676  16DF               	andwf	indf2,f,c
 16136                           
 16137                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 16138  001678  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16139  00167C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16140  001680  0E00               	movlw	0
 16141  001682  8CDB               	bsf	plusw2,6,c
 16142                           
 16143                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16144  001684  0E00               	movlw	0
 16145  001686  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16146  001688  0E05               	movlw	5
 16147  00168A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16148  00168C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16149  001690  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16150  001694  0E00               	movlw	0
 16151  001696  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16152  001698  0E02               	movlw	2
 16153  00169A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16154  00169C  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16155                           
 16156                           ;usb_device.c: 2893: }
 16157  0016A0  D006               	goto	l375
 16158  0016A2                     l374:
 16159                           
 16160                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 16161  0016A2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16162  0016A6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16163  0016AA  0E00               	movlw	0
 16164  0016AC  8CDB               	bsf	plusw2,6,c
 16165  0016AE                     l375:
 16166                           
 16167                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 16168  0016AE  0E04               	movlw	4
 16169  0016B0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 16170  0016B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 16171  0016B4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 16172  0016B6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 16173                           
 16174                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 16175  0016B8  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 16176  0016BA  D006               	goto	u9460
 16177  0016BC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16178  0016C0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16179  0016C4  AEDF               	btfss	indf2,7,c
 16180  0016C6  D030               	goto	l376
 16181  0016C8                     u9460:
 16182                           
 16183                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 16184  0016C8  010D               	movlb	13	; () banked
 16185  0016CA  BF34               	btfsc	52,7,b	;volatile
 16186  0016CC  D00A               	goto	l379
 16187                           
 16188                           ; BSR set to: 13
 16189                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 16190  0016CE  5134               	movf	52,w,b	;volatile
 16191  0016D0  0B0F               	andlw	15
 16192  0016D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16193  0016D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16194  0016D6  0D01               	mullw	1
 16195  0016D8  0E5D               	movlw	low _ep_data_out
 16196  0016DA  24F3               	addwf	prodl,w,c
 16197  0016DC  6ED9               	movwf	fsr2l,c
 16198  0016DE  0E01               	movlw	high _ep_data_out
 16199  0016E0  D00A               	goto	L13
 16200  0016E2                     l379:
 16201                           
 16202                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 16203                           
 16204                           ; BSR set to: 1
 16205  0016E2  010D               	movlb	13	; () banked
 16206  0016E4  5134               	movf	52,w,b	;volatile
 16207  0016E6  0B0F               	andlw	15
 16208  0016E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16209  0016EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16210  0016EC  0D01               	mullw	1
 16211  0016EE  0E60               	movlw	low _ep_data_in
 16212  0016F0  24F3               	addwf	prodl,w,c
 16213  0016F2  6ED9               	movwf	fsr2l,c
 16214  0016F4  0E01               	movlw	high _ep_data_in
 16215  0016F6                     L13:
 16216  0016F6  20F4               	addwfc	prodh,w,c
 16217  0016F8  6EDA               	movwf	fsr2h,c
 16218  0016FA  0101               	movlb	1	; () banked
 16219  0016FC  92DF               	bcf	indf2,1,c
 16220                           
 16221                           ; BSR set to: 1
 16222                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16223                           
 16224                           ; BSR set to: 1
 16225  0016FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16226  001702  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16227  001706  0E3B               	movlw	59
 16228  001708  16DF               	andwf	indf2,f,c
 16229                           
 16230                           ; BSR set to: 1
 16231                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16232  00170A  0E00               	movlw	0
 16233  00170C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16234  00170E  0E05               	movlw	5
 16235  001710  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16236  001712  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16237  001716  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16238  00171A  0E00               	movlw	0
 16239  00171C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16240  00171E  0E02               	movlw	2
 16241  001720  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16242  001722  EC29  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16243                           
 16244                           ;usb_device.c: 2923: }
 16245  001726  D006               	goto	l381
 16246  001728                     l376:
 16247                           
 16248                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 16249  001728  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16250  00172C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16251  001730  0E3B               	movlw	59
 16252  001732  16DF               	andwf	indf2,f,c
 16253  001734                     l381:
 16254                           
 16255                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 16256  001734  010D               	movlb	13	; () banked
 16257  001736  5134               	movf	52,w,b	;volatile
 16258  001738  0B0F               	andlw	15
 16259  00173A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16260  00173C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16261  00173E  0D01               	mullw	1
 16262  001740  0E26               	movlw	38
 16263  001742  24F3               	addwf	prodl,w,c
 16264  001744  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 16265  001746  0E0F               	movlw	15
 16266  001748  20F4               	addwfc	prodh,w,c
 16267  00174A  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 16268                           
 16269                           ; BSR set to: 13
 16270                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 16271  00174C  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 16272  001750  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 16273  001754  0EFE               	movlw	254
 16274  001756  16DF               	andwf	indf2,f,c
 16275                           
 16276                           ; BSR set to: 13
 16277  001758  0012               	return	
 16278  00175A                     __end_of_USBStdFeatureReqHandler:
 16279                           	opt stack 0
 16280                           tblptru	equ	0xFF8
 16281                           tblptrh	equ	0xFF7
 16282                           tblptrl	equ	0xFF6
 16283                           tablat	equ	0xFF5
 16284                           prodh	equ	0xFF4
 16285                           prodl	equ	0xFF3
 16286                           intcon	equ	0xFF2
 16287                           intcon3	equ	0xFF0
 16288                           indf0	equ	0xFEF
 16289                           postinc0	equ	0xFEE
 16290                           fsr0h	equ	0xFEA
 16291                           fsr0l	equ	0xFE9
 16292                           wreg	equ	0xFE8
 16293                           indf1	equ	0xFE7
 16294                           postdec1	equ	0xFE5
 16295                           plusw1	equ	0xFE3
 16296                           fsr1h	equ	0xFE2
 16297                           fsr1l	equ	0xFE1
 16298                           indf2	equ	0xFDF
 16299                           postinc2	equ	0xFDE
 16300                           postdec2	equ	0xFDD
 16301                           plusw2	equ	0xFDB
 16302                           fsr2h	equ	0xFDA
 16303                           fsr2l	equ	0xFD9
 16304                           status	equ	0xFD8
 16305                           
 16306 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 16307 ;; Defined at:
 16308 ;;		line 54 in file "usb_events.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;  event           2   15[COMRAM] enum E6832
 16311 ;;  pdata           2   17[COMRAM] PTR void 
 16312 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16313 ;;		 -> BDT(48), 
 16314 ;;  size            2   19[COMRAM] unsigned int 
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;		None
 16317 ;; Return value:  Size  Location     Type
 16318 ;;                  1    wreg      unsigned char 
 16319 ;; Registers used:
 16320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16321 ;; Tracked objects:
 16322 ;;		On entry : 0/0
 16323 ;;		On exit  : 0/0
 16324 ;;		Unchanged: 0/0
 16325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16330 ;;Total ram usage:        8 bytes
 16331 ;; Hardware stack levels used:    1
 16332 ;; Hardware stack levels required when called:    3
 16333 ;; This function calls:
 16334 ;;		_APP_DeviceCustomHIDInitialize
 16335 ;;		_APP_DeviceMSDInitialize
 16336 ;;		_MSDTransferTerminated
 16337 ;;		_SYSTEM_Initialize
 16338 ;;		_USBCheckHIDRequest
 16339 ;;		_USBCheckMSDRequest
 16340 ;; This function is called by:
 16341 ;;		_USBDeviceTasks
 16342 ;;		_USBStdSetCfgHandler
 16343 ;;		_USBSuspend
 16344 ;;		_USBWakeFromSuspend
 16345 ;;		_USBCtrlTrfSetupHandler
 16346 ;;		_USBCheckStdRequest
 16347 ;;		_USBStdFeatureReqHandler
 16348 ;; This function uses a non-reentrant model
 16349 ;;
 16350                           
 16351                           	psect	text78
 16352  005C52                     __ptext78:
 16353                           	opt stack 0
 16354  005C52                     _USER_USB_CALLBACK_EVENT_HANDLER:
 16355                           	opt stack 26
 16356                           
 16357                           ;usb_events.c: 56: switch((int)event)
 16358                           
 16359                           ;incstack = 0
 16360  005C52  D019               	goto	l800
 16361  005C54                     
 16362                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 16363  005C54  0E01               	movlw	1
 16364  005C56  EC5B  F034         	call	_SYSTEM_Initialize
 16365                           
 16366                           ;usb_events.c: 79: break;
 16367  005C5A  0012               	return	
 16368  005C5C                     
 16369                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 16370  005C5C  0E02               	movlw	2
 16371  005C5E  EC5B  F034         	call	_SYSTEM_Initialize
 16372                           
 16373                           ;usb_events.c: 90: break;
 16374  005C62  0012               	return	
 16375  005C64                     
 16376                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 16377  005C64  EC2B  F037         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 16378                           
 16379                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 16380  005C68  ECE6  F039         	call	_APP_DeviceMSDInitialize	;wreg free
 16381                           
 16382                           ;usb_events.c: 100: break;
 16383                           
 16384                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 16385                           
 16386                           ;usb_events.c: 97: break;
 16387  005C6C  0012               	return	
 16388  005C6E                     
 16389                           ;usb_events.c: 105: USBCheckHIDRequest();
 16390  005C6E  EC73  F022         	call	_USBCheckHIDRequest	;wreg free
 16391                           
 16392                           ;usb_events.c: 108: USBCheckMSDRequest();
 16393  005C72  EC85  F027         	call	_USBCheckMSDRequest	;wreg free
 16394                           
 16395                           ;usb_events.c: 112: break;
 16396                           
 16397                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 16398                           
 16399                           ;usb_events.c: 109: break;
 16400  005C76  0012               	return	
 16401  005C78                     
 16402                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 16403  005C78  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 16404  005C7C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 16405  005C80  EC5B  F033         	call	_MSDTransferTerminated	;wreg free
 16406                           
 16407                           ;usb_events.c: 129: }
 16408                           
 16409                           ;usb_events.c: 128: break;
 16410                           
 16411                           ;usb_events.c: 127: default:
 16412                           
 16413                           ;usb_events.c: 125: break;
 16414  005C84  0012               	return	
 16415  005C86                     l800:
 16416  005C86  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16417  005C8A  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16418                           
 16419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16420                           ; Switch size 1, requested type "space"
 16421                           ; Number of cases is 2, Range of values is 0 to 127
 16422                           ; switch strategies available:
 16423                           ; Name         Instructions Cycles
 16424                           ; simple_byte            7     4 (average)
 16425                           ;	Chosen strategy is simple_byte
 16426  005C8E  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16427  005C90  0A00               	xorlw	0	; case 0
 16428  005C92  B4D8               	btfsc	status,2,c
 16429  005C94  D004               	goto	l15619
 16430  005C96  0A7F               	xorlw	127	; case 127
 16431  005C98  A4D8               	btfss	status,2,c
 16432  005C9A  0012               	return	
 16433  005C9C  D01A               	goto	l15621
 16434  005C9E                     l15619:
 16435                           
 16436                           ; Switch size 1, requested type "space"
 16437                           ; Number of cases is 8, Range of values is 1 to 117
 16438                           ; switch strategies available:
 16439                           ; Name         Instructions Cycles
 16440                           ; simple_byte           25    13 (average)
 16441                           ;	Chosen strategy is simple_byte
 16442  005C9E  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16443  005CA0  0A01               	xorlw	1	; case 1
 16444  005CA2  B4D8               	btfsc	status,2,c
 16445  005CA4  D7DF               	goto	l806
 16446  005CA6  0A03               	xorlw	3	; case 2
 16447  005CA8  B4D8               	btfsc	status,2,c
 16448  005CAA  0012               	return	
 16449  005CAC  0A01               	xorlw	1	; case 3
 16450  005CAE  B4D8               	btfsc	status,2,c
 16451  005CB0  D7DE               	goto	l808
 16452  005CB2  0A06               	xorlw	6	; case 5
 16453  005CB4  B4D8               	btfsc	status,2,c
 16454  005CB6  D7E0               	goto	l810
 16455  005CB8  0A77               	xorlw	119	; case 114
 16456  005CBA  B4D8               	btfsc	status,2,c
 16457  005CBC  0012               	return	
 16458  005CBE  0A01               	xorlw	1	; case 115
 16459  005CC0  B4D8               	btfsc	status,2,c
 16460  005CC2  0012               	return	
 16461  005CC4  0A07               	xorlw	7	; case 116
 16462  005CC6  B4D8               	btfsc	status,2,c
 16463  005CC8  D7C9               	goto	l805
 16464  005CCA  0A01               	xorlw	1	; case 117
 16465  005CCC  A4D8               	btfss	status,2,c
 16466  005CCE  0012               	return	
 16467  005CD0  D7C1               	goto	l804
 16468  005CD2                     l15621:
 16469                           
 16470                           ; Switch size 1, requested type "space"
 16471                           ; Number of cases is 1, Range of values is 255 to 255
 16472                           ; switch strategies available:
 16473                           ; Name         Instructions Cycles
 16474                           ; simple_byte            4     3 (average)
 16475                           ;	Chosen strategy is simple_byte
 16476  005CD2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16477  005CD4  0AFF               	xorlw	255	; case 255
 16478  005CD6  0012               	return	
 16479  005CD8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16480                           	opt stack 0
 16481                           tblptru	equ	0xFF8
 16482                           tblptrh	equ	0xFF7
 16483                           tblptrl	equ	0xFF6
 16484                           tablat	equ	0xFF5
 16485                           prodh	equ	0xFF4
 16486                           prodl	equ	0xFF3
 16487                           intcon	equ	0xFF2
 16488                           intcon3	equ	0xFF0
 16489                           indf0	equ	0xFEF
 16490                           postinc0	equ	0xFEE
 16491                           fsr0h	equ	0xFEA
 16492                           fsr0l	equ	0xFE9
 16493                           wreg	equ	0xFE8
 16494                           indf1	equ	0xFE7
 16495                           postdec1	equ	0xFE5
 16496                           plusw1	equ	0xFE3
 16497                           fsr1h	equ	0xFE2
 16498                           fsr1l	equ	0xFE1
 16499                           indf2	equ	0xFDF
 16500                           postinc2	equ	0xFDE
 16501                           postdec2	equ	0xFDD
 16502                           plusw2	equ	0xFDB
 16503                           fsr2h	equ	0xFDA
 16504                           fsr2l	equ	0xFD9
 16505                           status	equ	0xFD8
 16506                           
 16507 ;; *************** function _USBCheckMSDRequest *****************
 16508 ;; Defined at:
 16509 ;;		line 218 in file "usb_device_msd.c"
 16510 ;; Parameters:    Size  Location     Type
 16511 ;;		None
 16512 ;; Auto vars:     Size  Location     Type
 16513 ;;		None
 16514 ;; Return value:  Size  Location     Type
 16515 ;;                  1    wreg      void 
 16516 ;; Registers used:
 16517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16518 ;; Tracked objects:
 16519 ;;		On entry : 0/0
 16520 ;;		On exit  : 0/0
 16521 ;;		Unchanged: 0/0
 16522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16526 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16527 ;;Total ram usage:        4 bytes
 16528 ;; Hardware stack levels used:    1
 16529 ;; Hardware stack levels required when called:    1
 16530 ;; This function calls:
 16531 ;;		_USBTransferOnePacket
 16532 ;; This function is called by:
 16533 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           	psect	text79
 16538  004F0A                     __ptext79:
 16539                           	opt stack 0
 16540  004F0A                     _USBCheckMSDRequest:
 16541                           	opt stack 27
 16542                           
 16543                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 16544                           
 16545                           ;incstack = 0
 16546  004F0A  010D               	movlb	13	; () banked
 16547  004F0C  5130               	movf	48,w,b	;volatile
 16548  004F0E  0B1F               	andlw	31
 16549  004F10  06E8               	decf	wreg,f,c
 16550  004F12  A4D8               	btfss	status,2,c
 16551  004F14  0012               	return	
 16552                           
 16553                           ; BSR set to: 13
 16554                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 16555                           
 16556                           ; BSR set to: 13
 16557                           
 16558                           ; BSR set to: 13
 16559                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 16560  004F16  5134               	movf	52,w,b	;volatile
 16561  004F18  A4D8               	btfss	status,2,c
 16562  004F1A  0012               	return	
 16563  004F1C  D04E               	goto	l529
 16564  004F1E                     
 16565                           ; BSR set to: 13
 16566                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 16567                           
 16568                           ; BSR set to: 13
 16569  004F1E  5132               	movf	50,w,b	;volatile
 16570  004F20  1133               	iorwf	51,w,b	;volatile
 16571  004F22  A4D8               	btfss	status,2,c
 16572  004F24  0012               	return	
 16573                           
 16574                           ; BSR set to: 13
 16575  004F26  5136               	movf	54,w,b	;volatile
 16576  004F28  1137               	iorwf	55,w,b	;volatile
 16577  004F2A  A4D8               	btfss	status,2,c
 16578  004F2C  0012               	return	
 16579                           
 16580                           ; BSR set to: 13
 16581                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 16582                           
 16583                           ; BSR set to: 13
 16584                           
 16585                           ; BSR set to: 13
 16586                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 16587  004F2E  0E00               	movlw	0
 16588  004F30  0100               	movlb	0	; () banked
 16589  004F32  6FA0               	movwf	_MSD_State& (0+255),b
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 16593  004F34  699F               	setf	_MSDCommandState& (0+255),b
 16594                           
 16595                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 16596  004F36  0E00               	movlw	0
 16597  004F38  6F9E               	movwf	_MSDReadState& (0+255),b
 16598                           
 16599                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 16600  004F3A  0E00               	movlw	0
 16601  004F3C  6F9D               	movwf	_MSDWriteState& (0+255),b
 16602                           
 16603                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 16604  004F3E  0E01               	movlw	1
 16605  004F40  6F98               	movwf	_MSDCBWValid& (0+255),b
 16606                           
 16607                           ; BSR set to: 0
 16608                           
 16609                           ; BSR set to: 0
 16610                           
 16611                           ; BSR set to: 0
 16612                           
 16613                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 16614  004F42  C13D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 16615  004F46  C13E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 16616                           
 16617                           ; BSR set to: 0
 16618  004F4A  500C               	movf	_USBCheckMSDRequest$2319,w,c
 16619  004F4C  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 16620  004F4E  B4D8               	btfsc	status,2,c
 16621  004F50  D00A               	goto	u7730
 16622                           
 16623                           ; BSR set to: 0
 16624                           
 16625                           ; BSR set to: 0
 16626                           
 16627                           ; BSR set to: 0
 16628                           
 16629                           ; BSR set to: 0
 16630  004F52  C13D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 16631  004F56  C13E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 16632                           
 16633                           ; BSR set to: 0
 16634                           
 16635                           ; BSR set to: 0
 16636  004F5A  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 16637  004F5E  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 16638  004F62  BEDF               	btfsc	indf2,7,c
 16639  004F64  D00F               	goto	l534
 16640  004F66                     u7730:
 16641                           
 16642                           ; BSR set to: 0
 16643                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 16644                           
 16645                           ; BSR set to: 0
 16646  004F66  0E00               	movlw	0
 16647  004F68  6E01               	movwf	USBTransferOnePacket@dir,c
 16648  004F6A  0E40               	movlw	64
 16649  004F6C  6E02               	movwf	USBTransferOnePacket@data,c
 16650  004F6E  0E0D               	movlw	13
 16651  004F70  6E03               	movwf	USBTransferOnePacket@data+1,c
 16652  004F72  0E40               	movlw	64
 16653  004F74  6E04               	movwf	USBTransferOnePacket@len,c
 16654  004F76  0E02               	movlw	2
 16655  004F78  EC89  F020         	call	_USBTransferOnePacket
 16656  004F7C  C001  F08B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16657  004F80  C002  F08C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16658  004F84                     l534:
 16659                           
 16660                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 16661  004F84  0E80               	movlw	128
 16662  004F86  0100               	movlb	0	; () banked
 16663  004F88  6F72               	movwf	(_inPipes+3)& (0+255),b
 16664                           
 16665                           ;usb_device_msd.c: 263: break;
 16666  004F8A  0012               	return	
 16667  004F8C                     
 16668                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 16669                           
 16670                           ; BSR set to: 0
 16671  004F8C  010D               	movlb	13	; () banked
 16672  004F8E  5132               	movf	50,w,b	;volatile
 16673  004F90  1133               	iorwf	51,w,b	;volatile
 16674  004F92  A4D8               	btfss	status,2,c
 16675  004F94  0012               	return	
 16676                           
 16677                           ; BSR set to: 13
 16678  004F96  0536               	decf	54,w,b	;volatile
 16679  004F98  1137               	iorwf	55,w,b	;volatile
 16680  004F9A  A4D8               	btfss	status,2,c
 16681  004F9C  0012               	return	
 16682                           
 16683                           ; BSR set to: 13
 16684                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 16685                           
 16686                           ; BSR set to: 13
 16687                           
 16688                           ; BSR set to: 13
 16689                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 16690  004F9E  0E00               	movlw	0
 16691  004FA0  6F38               	movwf	56,b	;volatile
 16692                           
 16693                           ; BSR set to: 13
 16694                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16695  004FA2  0E38               	movlw	56
 16696  004FA4  0100               	movlb	0	; () banked
 16697  004FA6  6F6F               	movwf	_inPipes& (0+255),b
 16698  004FA8  0E0D               	movlw	13
 16699  004FAA  6F70               	movwf	(_inPipes+1)& (0+255),b
 16700                           
 16701                           ; BSR set to: 0
 16702  004FAC  0E00               	movlw	0
 16703  004FAE  6F74               	movwf	(_inPipes+5)& (0+255),b
 16704  004FB0  0E01               	movlw	1
 16705  004FB2  6F73               	movwf	(_inPipes+4)& (0+255),b
 16706                           
 16707                           ; BSR set to: 0
 16708  004FB4  0EC1               	movlw	193
 16709  004FB6  6F72               	movwf	(_inPipes+3)& (0+255),b
 16710                           
 16711                           ; BSR set to: 0
 16712                           ;usb_device_msd.c: 278: }
 16713                           
 16714                           ;usb_device_msd.c: 277: break;
 16715  004FB8  0012               	return	
 16716  004FBA                     l529:
 16717                           
 16718                           ; BSR set to: 0
 16719  004FBA  010D               	movlb	13	; () banked
 16720  004FBC  5131               	movf	49,w,b	;volatile
 16721                           
 16722                           ; Switch size 1, requested type "space"
 16723                           ; Number of cases is 2, Range of values is 254 to 255
 16724                           ; switch strategies available:
 16725                           ; Name         Instructions Cycles
 16726                           ; simple_byte            7     4 (average)
 16727                           ;	Chosen strategy is simple_byte
 16728  004FBE  0AFE               	xorlw	254	; case 254
 16729  004FC0  B4D8               	btfsc	status,2,c
 16730  004FC2  D7E4               	goto	l546
 16731  004FC4  0A01               	xorlw	1	; case 255
 16732  004FC6  A4D8               	btfss	status,2,c
 16733  004FC8  0012               	return	
 16734  004FCA  D7A9               	goto	l530
 16735  004FCC                     __end_of_USBCheckMSDRequest:
 16736                           	opt stack 0
 16737                           tblptru	equ	0xFF8
 16738                           tblptrh	equ	0xFF7
 16739                           tblptrl	equ	0xFF6
 16740                           tablat	equ	0xFF5
 16741                           prodh	equ	0xFF4
 16742                           prodl	equ	0xFF3
 16743                           intcon	equ	0xFF2
 16744                           intcon3	equ	0xFF0
 16745                           indf0	equ	0xFEF
 16746                           postinc0	equ	0xFEE
 16747                           fsr0h	equ	0xFEA
 16748                           fsr0l	equ	0xFE9
 16749                           wreg	equ	0xFE8
 16750                           indf1	equ	0xFE7
 16751                           postdec1	equ	0xFE5
 16752                           plusw1	equ	0xFE3
 16753                           fsr1h	equ	0xFE2
 16754                           fsr1l	equ	0xFE1
 16755                           indf2	equ	0xFDF
 16756                           postinc2	equ	0xFDE
 16757                           postdec2	equ	0xFDD
 16758                           plusw2	equ	0xFDB
 16759                           fsr2h	equ	0xFDA
 16760                           fsr2l	equ	0xFD9
 16761                           status	equ	0xFD8
 16762                           
 16763 ;; *************** function _USBCheckHIDRequest *****************
 16764 ;; Defined at:
 16765 ;;		line 153 in file "usb_device_hid.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;		None
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;		None
 16770 ;; Return value:  Size  Location     Type
 16771 ;;                  1    wreg      void 
 16772 ;; Registers used:
 16773 ;;		wreg, status,2, status,0
 16774 ;; Tracked objects:
 16775 ;;		On entry : 0/0
 16776 ;;		On exit  : 0/0
 16777 ;;		Unchanged: 0/0
 16778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16783 ;;Total ram usage:        0 bytes
 16784 ;; Hardware stack levels used:    1
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           	psect	text80
 16793  0044E6                     __ptext80:
 16794                           	opt stack 0
 16795  0044E6                     _USBCheckHIDRequest:
 16796                           	opt stack 28
 16797                           
 16798                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16799                           
 16800                           ;incstack = 0
 16801  0044E6  010D               	movlb	13	; () banked
 16802  0044E8  5130               	movf	48,w,b	;volatile
 16803  0044EA  0B1F               	andlw	31
 16804  0044EC  06E8               	decf	wreg,f,c
 16805  0044EE  A4D8               	btfss	status,2,c
 16806  0044F0  0012               	return	
 16807                           
 16808                           ; BSR set to: 13
 16809                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16810                           
 16811                           ; BSR set to: 13
 16812                           
 16813                           ; BSR set to: 13
 16814  0044F2  5134               	movf	52,w,b	;volatile
 16815  0044F4  A4D8               	btfss	status,2,c
 16816  0044F6  0012               	return	
 16817                           
 16818                           ; BSR set to: 13
 16819                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16820                           
 16821                           ; BSR set to: 13
 16822                           
 16823                           ; BSR set to: 13
 16824  0044F8  0E06               	movlw	6
 16825  0044FA  1931               	xorwf	49,w,b	;volatile
 16826  0044FC  B4D8               	btfsc	status,2,c
 16827  0044FE  D01A               	goto	l411
 16828  004500  D022               	goto	l414
 16829  004502                     
 16830                           ; BSR set to: 13
 16831                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16832                           
 16833                           ; BSR set to: 13
 16834  004502  0100               	movlb	0	; () banked
 16835  004504  05B5               	decf	_USBActiveConfiguration& (0+255),w,b
 16836  004506  A4D8               	btfss	status,2,c
 16837  004508  D01E               	goto	l414
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16841  00450A  0E91               	movlw	low (_configDescriptor1+18)
 16842  00450C  6F6F               	movwf	_inPipes& (0+255),b
 16843  00450E  0E8E               	movlw	high (_configDescriptor1+18)
 16844  004510  6F70               	movwf	(_inPipes+1)& (0+255),b
 16845                           
 16846                           ; BSR set to: 0
 16847  004512  0E00               	movlw	0
 16848  004514  6F74               	movwf	(_inPipes+5)& (0+255),b
 16849  004516  0E09               	movlw	9
 16850  004518  D00B               	goto	L14
 16851  00451A                     l10273:
 16852                           
 16853                           ; BSR set to: 0
 16854  00451A  0EC0               	movlw	192
 16855  00451C  6F72               	movwf	(_inPipes+3)& (0+255),b
 16856                           
 16857                           ; BSR set to: 0
 16858                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16859  00451E  D013               	goto	l414
 16860  004520                     
 16861                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16862                           
 16863                           ; BSR set to: 0
 16864  004520  0E45               	movlw	low _hid_rpt01
 16865  004522  0100               	movlb	0	; () banked
 16866  004524  6F6F               	movwf	_inPipes& (0+255),b
 16867  004526  0E8F               	movlw	high _hid_rpt01
 16868  004528  6F70               	movwf	(_inPipes+1)& (0+255),b
 16869                           
 16870                           ; BSR set to: 0
 16871  00452A  0E00               	movlw	0
 16872  00452C  6F74               	movwf	(_inPipes+5)& (0+255),b
 16873  00452E  0E1D               	movlw	29
 16874  004530                     L14:
 16875  004530  6F73               	movwf	(_inPipes+4)& (0+255),b
 16876  004532  D7F3               	goto	l10273
 16877  004534                     l411:
 16878                           
 16879                           ; BSR set to: 0
 16880  004534  010D               	movlb	13	; () banked
 16881  004536  5133               	movf	51,w,b	;volatile
 16882                           
 16883                           ; Switch size 1, requested type "space"
 16884                           ; Number of cases is 3, Range of values is 33 to 35
 16885                           ; switch strategies available:
 16886                           ; Name         Instructions Cycles
 16887                           ; simple_byte           10     6 (average)
 16888                           ;	Chosen strategy is simple_byte
 16889  004538  0A21               	xorlw	33	; case 33
 16890  00453A  B4D8               	btfsc	status,2,c
 16891  00453C  D7E2               	goto	l412
 16892  00453E  0A03               	xorlw	3	; case 34
 16893  004540  B4D8               	btfsc	status,2,c
 16894  004542  D7EE               	goto	l415
 16895  004544  0A01               	xorlw	1	; case 35
 16896  004546                     l414:
 16897                           
 16898                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16899                           
 16900                           ; BSR set to: 13
 16901                           
 16902                           ; BSR set to: 13
 16903  004546  010D               	movlb	13	; () banked
 16904  004548  3930               	swapf	48,w,b	;volatile
 16905  00454A  32E8               	rrcf	wreg,f,c
 16906  00454C  0B03               	andlw	3
 16907  00454E  06E8               	decf	wreg,f,c
 16908  004550  A4D8               	btfss	status,2,c
 16909  004552  0012               	return	
 16910  004554  D024               	goto	l418
 16911  004556                     
 16912                           ; BSR set to: 13
 16913                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16914                           
 16915                           ; BSR set to: 13
 16916  004556  0EB3               	movlw	low _idle_rate
 16917  004558  0100               	movlb	0	; () banked
 16918  00455A  6F6F               	movwf	_inPipes& (0+255),b
 16919  00455C  0E00               	movlw	high _idle_rate
 16920  00455E  6F70               	movwf	(_inPipes+1)& (0+255),b
 16921                           
 16922                           ; BSR set to: 0
 16923  004560  0E00               	movlw	0
 16924  004562  6F74               	movwf	(_inPipes+5)& (0+255),b
 16925  004564  0E01               	movlw	1
 16926  004566  6F73               	movwf	(_inPipes+4)& (0+255),b
 16927                           
 16928                           ; BSR set to: 0
 16929  004568  0EC1               	movlw	193
 16930  00456A  6F72               	movwf	(_inPipes+3)& (0+255),b
 16931                           
 16932                           ;usb_device_hid.c: 223: break;
 16933  00456C  0012               	return	
 16934  00456E                     
 16935                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16936                           
 16937                           ; BSR set to: 0
 16938  00456E  0E80               	movlw	128
 16939  004570  0100               	movlb	0	; () banked
 16940  004572  6F72               	movwf	(_inPipes+3)& (0+255),b
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16944  004574  CD33 F0B3          	movff	3379,_idle_rate	;volatile
 16945                           
 16946                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16947  004578  0012               	return	
 16948  00457A                     
 16949                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16950                           
 16951                           ; BSR set to: 0
 16952  00457A  0EB2               	movlw	low _active_protocol
 16953  00457C  0100               	movlb	0	; () banked
 16954  00457E  6F6F               	movwf	_inPipes& (0+255),b
 16955  004580  0E00               	movlw	high _active_protocol
 16956  004582  6F70               	movwf	(_inPipes+1)& (0+255),b
 16957                           
 16958                           ; BSR set to: 0
 16959  004584  0E00               	movlw	0
 16960  004586  6F74               	movwf	(_inPipes+5)& (0+255),b
 16961  004588  0E01               	movlw	1
 16962  00458A  6F73               	movwf	(_inPipes+4)& (0+255),b
 16963                           
 16964                           ; BSR set to: 0
 16965  00458C  0E81               	movlw	129
 16966  00458E  6F72               	movwf	(_inPipes+3)& (0+255),b
 16967                           
 16968                           ;usb_device_hid.c: 234: break;
 16969  004590  0012               	return	
 16970  004592                     
 16971                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16972                           
 16973                           ; BSR set to: 0
 16974  004592  0E80               	movlw	128
 16975  004594  0100               	movlb	0	; () banked
 16976  004596  6F72               	movwf	(_inPipes+3)& (0+255),b
 16977                           
 16978                           ; BSR set to: 0
 16979                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16980  004598  CD32 F0B2          	movff	3378,_active_protocol	;volatile
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;usb_device_hid.c: 239: }
 16984                           
 16985                           ;usb_device_hid.c: 238: break;
 16986  00459C  0012               	return	
 16987  00459E                     l418:
 16988                           
 16989                           ; BSR set to: 0
 16990  00459E  010D               	movlb	13	; () banked
 16991  0045A0  5131               	movf	49,w,b	;volatile
 16992                           
 16993                           ; Switch size 1, requested type "space"
 16994                           ; Number of cases is 6, Range of values is 1 to 11
 16995                           ; switch strategies available:
 16996                           ; Name         Instructions Cycles
 16997                           ; simple_byte           19    10 (average)
 16998                           ;	Chosen strategy is simple_byte
 16999  0045A2  0A01               	xorlw	1	; case 1
 17000  0045A4  B4D8               	btfsc	status,2,c
 17001  0045A6  0012               	return	
 17002  0045A8  0A03               	xorlw	3	; case 2
 17003  0045AA  B4D8               	btfsc	status,2,c
 17004  0045AC  D7D4               	goto	l422
 17005  0045AE  0A01               	xorlw	1	; case 3
 17006  0045B0  B4D8               	btfsc	status,2,c
 17007  0045B2  D7E3               	goto	l424
 17008  0045B4  0A0A               	xorlw	10	; case 9
 17009  0045B6  B4D8               	btfsc	status,2,c
 17010  0045B8  0012               	return	
 17011  0045BA  0A03               	xorlw	3	; case 10
 17012  0045BC  B4D8               	btfsc	status,2,c
 17013  0045BE  D7D7               	goto	l423
 17014  0045C0  0A01               	xorlw	1	; case 11
 17015  0045C2  A4D8               	btfss	status,2,c
 17016  0045C4  0012               	return	
 17017  0045C6  D7E5               	goto	l425
 17018  0045C8                     __end_of_USBCheckHIDRequest:
 17019                           	opt stack 0
 17020                           tblptru	equ	0xFF8
 17021                           tblptrh	equ	0xFF7
 17022                           tblptrl	equ	0xFF6
 17023                           tablat	equ	0xFF5
 17024                           prodh	equ	0xFF4
 17025                           prodl	equ	0xFF3
 17026                           intcon	equ	0xFF2
 17027                           intcon3	equ	0xFF0
 17028                           indf0	equ	0xFEF
 17029                           postinc0	equ	0xFEE
 17030                           fsr0h	equ	0xFEA
 17031                           fsr0l	equ	0xFE9
 17032                           wreg	equ	0xFE8
 17033                           indf1	equ	0xFE7
 17034                           postdec1	equ	0xFE5
 17035                           plusw1	equ	0xFE3
 17036                           fsr1h	equ	0xFE2
 17037                           fsr1l	equ	0xFE1
 17038                           indf2	equ	0xFDF
 17039                           postinc2	equ	0xFDE
 17040                           postdec2	equ	0xFDD
 17041                           plusw2	equ	0xFDB
 17042                           fsr2h	equ	0xFDA
 17043                           fsr2l	equ	0xFD9
 17044                           status	equ	0xFD8
 17045                           
 17046 ;; *************** function _SYSTEM_Initialize *****************
 17047 ;; Defined at:
 17048 ;;		line 37 in file "system.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  state           1    wreg     enum E6623
 17051 ;; Auto vars:     Size  Location     Type
 17052 ;;  state           1    4[COMRAM] enum E6623
 17053 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 17054 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  1    wreg      void 
 17057 ;; Registers used:
 17058 ;;		wreg, status,2, status,0
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17067 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17068 ;;Total ram usage:        5 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; This function calls:
 17071 ;;		Nothing
 17072 ;; This function is called by:
 17073 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17074 ;;		_main
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078                           	psect	text81
 17079  0068B6                     __ptext81:
 17080                           	opt stack 0
 17081  0068B6                     _SYSTEM_Initialize:
 17082                           	opt stack 28
 17083                           
 17084                           ;incstack = 0
 17085                           ;SYSTEM_Initialize@state stored from wreg
 17086  0068B6  6E05               	movwf	SYSTEM_Initialize@state,c
 17087                           
 17088                           ;system.c: 39: switch(state)
 17089  0068B8  D01D               	goto	l896
 17090  0068BA                     
 17091                           ;system.c: 48: {;system.c: 49: unsigned int pll_startup_counter = 600;
 17092  0068BA  0E02               	movlw	2
 17093  0068BC  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 17094  0068BE  0E58               	movlw	88
 17095  0068C0  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 17096                           
 17097                           ;system.c: 50: OSCTUNEbits.PLLEN = 1;
 17098  0068C2  8C9B               	bsf	3995,6,c	;volatile
 17099  0068C4                     l10459:
 17100  0068C4  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 17101  0068C6  A0D8               	btfss	status,0,c
 17102  0068C8  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 17103  0068CA  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 17104  0068CC  E1FB               	bnz	l10459
 17105  0068CE  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 17106  0068D0  B4D8               	btfsc	status,2,c
 17107  0068D2  0012               	return	
 17108  0068D4  D7F7               	goto	l899
 17109  0068D6                     
 17110                           ;system.c: 76: OSCCON = 0x70;
 17111  0068D6  0E70               	movlw	112
 17112  0068D8  6ED3               	movwf	4051,c	;volatile
 17113                           
 17114                           ;system.c: 82: {;system.c: 83: unsigned int pll_startup_counter = 800;
 17115  0068DA  0E03               	movlw	3
 17116  0068DC  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2932+1,c
 17117  0068DE  0E20               	movlw	32
 17118  0068E0  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2932,c
 17119  0068E2                     l10463:
 17120  0068E2  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2932,f,c
 17121  0068E4  A0D8               	btfss	status,0,c
 17122  0068E6  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2932+1,f,c
 17123  0068E8  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2932,w,c
 17124  0068EA  E1FB               	bnz	l10463
 17125  0068EC  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2932+1,w,c
 17126  0068EE  B4D8               	btfsc	status,2,c
 17127  0068F0  0012               	return	
 17128  0068F2  D7F7               	goto	l905
 17129  0068F4                     l896:
 17130  0068F4  5005               	movf	SYSTEM_Initialize@state,w,c
 17131                           
 17132                           ; Switch size 1, requested type "space"
 17133                           ; Number of cases is 3, Range of values is 0 to 2
 17134                           ; switch strategies available:
 17135                           ; Name         Instructions Cycles
 17136                           ; simple_byte           10     6 (average)
 17137                           ;	Chosen strategy is simple_byte
 17138  0068F6  0A00               	xorlw	0	; case 0
 17139  0068F8  B4D8               	btfsc	status,2,c
 17140  0068FA  D7DF               	goto	l897
 17141  0068FC  0A01               	xorlw	1	; case 1
 17142  0068FE  B4D8               	btfsc	status,2,c
 17143  006900  0012               	return	
 17144  006902  0A03               	xorlw	3	; case 2
 17145  006904  A4D8               	btfss	status,2,c
 17146  006906  0012               	return	
 17147  006908  D7E6               	goto	l903
 17148  00690A                     __end_of_SYSTEM_Initialize:
 17149                           	opt stack 0
 17150                           tblptru	equ	0xFF8
 17151                           tblptrh	equ	0xFF7
 17152                           tblptrl	equ	0xFF6
 17153                           tablat	equ	0xFF5
 17154                           prodh	equ	0xFF4
 17155                           prodl	equ	0xFF3
 17156                           intcon	equ	0xFF2
 17157                           intcon3	equ	0xFF0
 17158                           indf0	equ	0xFEF
 17159                           postinc0	equ	0xFEE
 17160                           fsr0h	equ	0xFEA
 17161                           fsr0l	equ	0xFE9
 17162                           wreg	equ	0xFE8
 17163                           indf1	equ	0xFE7
 17164                           postdec1	equ	0xFE5
 17165                           plusw1	equ	0xFE3
 17166                           fsr1h	equ	0xFE2
 17167                           fsr1l	equ	0xFE1
 17168                           indf2	equ	0xFDF
 17169                           postinc2	equ	0xFDE
 17170                           postdec2	equ	0xFDD
 17171                           plusw2	equ	0xFDB
 17172                           fsr2h	equ	0xFDA
 17173                           fsr2l	equ	0xFD9
 17174                           status	equ	0xFD8
 17175                           
 17176 ;; *************** function _MSDTransferTerminated *****************
 17177 ;; Defined at:
 17178 ;;		line 1674 in file "usb_device_msd.c"
 17179 ;; Parameters:    Size  Location     Type
 17180 ;;  handle          2   11[COMRAM] PTR void 
 17181 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 17182 ;;		 -> BDT(48), 
 17183 ;; Auto vars:     Size  Location     Type
 17184 ;;		None
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      void 
 17187 ;; Registers used:
 17188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17197 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17198 ;;Total ram usage:        4 bytes
 17199 ;; Hardware stack levels used:    1
 17200 ;; Hardware stack levels required when called:    1
 17201 ;; This function calls:
 17202 ;;		_USBStallEndpoint
 17203 ;;		_USBTransferOnePacket
 17204 ;; This function is called by:
 17205 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17206 ;; This function uses a non-reentrant model
 17207 ;;
 17208                           
 17209                           	psect	text82
 17210  0066B6                     __ptext82:
 17211                           	opt stack 0
 17212  0066B6                     _MSDTransferTerminated:
 17213                           	opt stack 27
 17214                           
 17215                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 17216                           
 17217                           ;incstack = 0
 17218  0066B6  0100               	movlb	0	; () banked
 17219  0066B8  5198               	movf	_MSDCBWValid& (0+255),w,b
 17220  0066BA  A4D8               	btfss	status,2,c
 17221  0066BC  D00B               	goto	l764
 17222                           
 17223                           ; BSR set to: 0
 17224                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 17225  0066BE  0E01               	movlw	1
 17226  0066C0  6E01               	movwf	USBStallEndpoint@dir,c
 17227  0066C2  0E02               	movlw	2
 17228  0066C4  EC7E  F01E         	call	_USBStallEndpoint
 17229                           
 17230                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 17231  0066C8  0E00               	movlw	0
 17232  0066CA  6E01               	movwf	USBStallEndpoint@dir,c
 17233  0066CC  0E02               	movlw	2
 17234  0066CE  EC7E  F01E         	call	_USBStallEndpoint
 17235                           
 17236                           ;usb_device_msd.c: 1681: }
 17237  0066D2  0012               	return	
 17238  0066D4                     l764:
 17239  0066D4  C13D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 17240  0066D8  C13E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 17241  0066DC  500E               	movf	_MSDTransferTerminated$2407,w,c
 17242  0066DE  180C               	xorwf	MSDTransferTerminated@handle,w,c
 17243  0066E0  E114               	bnz	l767
 17244  0066E2  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 17245  0066E4  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 17246  0066E6  A4D8               	btfss	status,2,c
 17247  0066E8  0012               	return	
 17248                           
 17249                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 17250  0066EA  0E00               	movlw	0
 17251  0066EC  6E01               	movwf	USBTransferOnePacket@dir,c
 17252  0066EE  0E40               	movlw	64
 17253  0066F0  6E02               	movwf	USBTransferOnePacket@data,c
 17254  0066F2  0E0D               	movlw	13
 17255  0066F4  6E03               	movwf	USBTransferOnePacket@data+1,c
 17256  0066F6  0E40               	movlw	64
 17257  0066F8  6E04               	movwf	USBTransferOnePacket@len,c
 17258  0066FA  0E02               	movlw	2
 17259  0066FC  EC89  F020         	call	_USBTransferOnePacket
 17260  006700  C001  F08B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17261  006704  C002  F08C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17262  006708  0012               	return	
 17263  00670A                     l767:
 17264  00670A  0012               	return		;funcret
 17265  00670C                     __end_of_MSDTransferTerminated:
 17266                           	opt stack 0
 17267                           tblptru	equ	0xFF8
 17268                           tblptrh	equ	0xFF7
 17269                           tblptrl	equ	0xFF6
 17270                           tablat	equ	0xFF5
 17271                           prodh	equ	0xFF4
 17272                           prodl	equ	0xFF3
 17273                           intcon	equ	0xFF2
 17274                           intcon3	equ	0xFF0
 17275                           indf0	equ	0xFEF
 17276                           postinc0	equ	0xFEE
 17277                           fsr0h	equ	0xFEA
 17278                           fsr0l	equ	0xFE9
 17279                           wreg	equ	0xFE8
 17280                           indf1	equ	0xFE7
 17281                           postdec1	equ	0xFE5
 17282                           plusw1	equ	0xFE3
 17283                           fsr1h	equ	0xFE2
 17284                           fsr1l	equ	0xFE1
 17285                           indf2	equ	0xFDF
 17286                           postinc2	equ	0xFDE
 17287                           postdec2	equ	0xFDD
 17288                           plusw2	equ	0xFDB
 17289                           fsr2h	equ	0xFDA
 17290                           fsr2l	equ	0xFD9
 17291                           status	equ	0xFD8
 17292                           
 17293 ;; *************** function _APP_DeviceMSDInitialize *****************
 17294 ;; Defined at:
 17295 ;;		line 84 in file "app_device_msd.c"
 17296 ;; Parameters:    Size  Location     Type
 17297 ;;		None
 17298 ;; Auto vars:     Size  Location     Type
 17299 ;;		None
 17300 ;; Return value:  Size  Location     Type
 17301 ;;                  1    wreg      void 
 17302 ;; Registers used:
 17303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17313 ;;Total ram usage:        0 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:    2
 17316 ;; This function calls:
 17317 ;;		_USBEnableEndpoint
 17318 ;;		_USBMSDInit
 17319 ;; This function is called by:
 17320 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17321 ;; This function uses a non-reentrant model
 17322 ;;
 17323                           
 17324                           	psect	text83
 17325  0073CC                     __ptext83:
 17326                           	opt stack 0
 17327  0073CC                     _APP_DeviceMSDInitialize:
 17328                           	opt stack 26
 17329                           
 17330                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 17331                           
 17332                           ;incstack = 0
 17333  0073CC  0E1E               	movlw	30
 17334  0073CE  6E09               	movwf	USBEnableEndpoint@options,c
 17335  0073D0  0E02               	movlw	2
 17336  0073D2  EC9D  F036         	call	_USBEnableEndpoint
 17337                           
 17338                           ;app_device_msd.c: 93: USBMSDInit();
 17339  0073D6  EC02  F01F         	call	_USBMSDInit	;wreg free
 17340  0073DA  0012               	return		;funcret
 17341  0073DC                     __end_of_APP_DeviceMSDInitialize:
 17342                           	opt stack 0
 17343                           tblptru	equ	0xFF8
 17344                           tblptrh	equ	0xFF7
 17345                           tblptrl	equ	0xFF6
 17346                           tablat	equ	0xFF5
 17347                           prodh	equ	0xFF4
 17348                           prodl	equ	0xFF3
 17349                           intcon	equ	0xFF2
 17350                           intcon3	equ	0xFF0
 17351                           indf0	equ	0xFEF
 17352                           postinc0	equ	0xFEE
 17353                           fsr0h	equ	0xFEA
 17354                           fsr0l	equ	0xFE9
 17355                           wreg	equ	0xFE8
 17356                           indf1	equ	0xFE7
 17357                           postdec1	equ	0xFE5
 17358                           plusw1	equ	0xFE3
 17359                           fsr1h	equ	0xFE2
 17360                           fsr1l	equ	0xFE1
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           plusw2	equ	0xFDB
 17365                           fsr2h	equ	0xFDA
 17366                           fsr2l	equ	0xFD9
 17367                           status	equ	0xFD8
 17368                           
 17369 ;; *************** function _USBMSDInit *****************
 17370 ;; Defined at:
 17371 ;;		line 142 in file "usb_device_msd.c"
 17372 ;; Parameters:    Size  Location     Type
 17373 ;;		None
 17374 ;; Auto vars:     Size  Location     Type
 17375 ;;		None
 17376 ;; Return value:  Size  Location     Type
 17377 ;;                  1    wreg      void 
 17378 ;; Registers used:
 17379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17380 ;; Tracked objects:
 17381 ;;		On entry : 0/0
 17382 ;;		On exit  : 0/0
 17383 ;;		Unchanged: 0/0
 17384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17387 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17389 ;;Total ram usage:        3 bytes
 17390 ;; Hardware stack levels used:    1
 17391 ;; Hardware stack levels required when called:    1
 17392 ;; This function calls:
 17393 ;;		_ExternalFlash_MediaDetect
 17394 ;;		_ExternalFlash_MediaInitialize
 17395 ;;		_ResetSenseData
 17396 ;;		_USBTransferOnePacket
 17397 ;; This function is called by:
 17398 ;;		_APP_DeviceMSDInitialize
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text84
 17403  003E04                     __ptext84:
 17404                           	opt stack 0
 17405  003E04                     _USBMSDInit:
 17406                           	opt stack 26
 17407                           
 17408                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 17409                           
 17410                           ;incstack = 0
 17411  003E04  0E00               	movlw	0
 17412  003E06  6E01               	movwf	USBTransferOnePacket@dir,c
 17413  003E08  0E40               	movlw	64
 17414  003E0A  6E02               	movwf	USBTransferOnePacket@data,c
 17415  003E0C  0E0D               	movlw	13
 17416  003E0E  6E03               	movwf	USBTransferOnePacket@data+1,c
 17417  003E10  0E40               	movlw	64
 17418  003E12  6E04               	movwf	USBTransferOnePacket@len,c
 17419  003E14  0E02               	movlw	2
 17420  003E16  EC89  F020         	call	_USBTransferOnePacket
 17421  003E1A  C001  F08B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17422  003E1E  C002  F08C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17423  003E22  C079  F089         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 17424  003E26  C07A  F08A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 17425                           
 17426                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 17427  003E2A  0E00               	movlw	0
 17428  003E2C  0100               	movlb	0	; () banked
 17429  003E2E  6FA0               	movwf	_MSD_State& (0+255),b
 17430                           
 17431                           ; BSR set to: 0
 17432                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 17433  003E30  699F               	setf	_MSDCommandState& (0+255),b
 17434                           
 17435                           ; BSR set to: 0
 17436                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 17437  003E32  0E00               	movlw	0
 17438  003E34  6F9E               	movwf	_MSDReadState& (0+255),b
 17439                           
 17440                           ; BSR set to: 0
 17441                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 17442  003E36  0E00               	movlw	0
 17443  003E38  6F9D               	movwf	_MSDWriteState& (0+255),b
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 17447  003E3A  0E00               	movlw	0
 17448  003E3C  6F99               	movwf	_MSDHostNoData& (0+255),b
 17449                           
 17450                           ; BSR set to: 0
 17451                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 17452  003E3E  0E00               	movlw	0
 17453  003E40  0101               	movlb	1	; () banked
 17454  003E42  6F4F               	movwf	_gblNumBLKS& (0+255),b
 17455  003E44  0E00               	movlw	0
 17456  003E46  6F50               	movwf	(_gblNumBLKS+1)& (0+255),b
 17457  003E48  0E00               	movlw	0
 17458  003E4A  6F51               	movwf	(_gblNumBLKS+2)& (0+255),b
 17459  003E4C  0E00               	movlw	0
 17460  003E4E  6F52               	movwf	(_gblNumBLKS+3)& (0+255),b
 17461                           
 17462                           ; BSR set to: 1
 17463                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 17464  003E50  0E00               	movlw	0
 17465  003E52  6F4B               	movwf	_gblBLKLen& (0+255),b
 17466  003E54  0E00               	movlw	0
 17467  003E56  6F4C               	movwf	(_gblBLKLen+1)& (0+255),b
 17468  003E58  0E00               	movlw	0
 17469  003E5A  6F4D               	movwf	(_gblBLKLen+2)& (0+255),b
 17470  003E5C  0E00               	movlw	0
 17471  003E5E  6F4E               	movwf	(_gblBLKLen+3)& (0+255),b
 17472                           
 17473                           ; BSR set to: 1
 17474                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 17475  003E60  0E01               	movlw	1
 17476  003E62  0100               	movlb	0	; () banked
 17477  003E64  6F98               	movwf	_MSDCBWValid& (0+255),b
 17478                           
 17479                           ; BSR set to: 0
 17480                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 17481  003E66  0E00               	movlw	0
 17482  003E68  0101               	movlb	1	; () banked
 17483  003E6A  6F74               	movwf	(_gblMediaPresent+1)& (0+255),b
 17484  003E6C  0E00               	movlw	0
 17485  003E6E  6F73               	movwf	_gblMediaPresent& (0+255),b
 17486                           
 17487                           ; BSR set to: 1
 17488                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 17489  003E70  0E00               	movlw	0
 17490  003E72  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 17491  003E74  D046               	goto	l518
 17492  003E76                     
 17493                           ; BSR set to: 1
 17494                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 17495                           
 17496                           ; BSR set to: 1
 17497  003E76  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17498  003E78  0D01               	mullw	1
 17499  003E7A  0E9A               	movlw	low _SoftDetach
 17500  003E7C  24F3               	addwf	prodl,w,c
 17501  003E7E  6ED9               	movwf	fsr2l,c
 17502  003E80  0E00               	movlw	high _SoftDetach
 17503  003E82  20F4               	addwfc	prodh,w,c
 17504  003E84  6EDA               	movwf	fsr2h,c
 17505  003E86  0E00               	movlw	0
 17506  003E88  6EDF               	movwf	indf2,c
 17507                           
 17508                           ; BSR set to: 1
 17509                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 17510  003E8A  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17511  003E8E  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17512  003E92  D801               	call	u7428
 17513  003E94  D009               	goto	u7429
 17514  003E96                     u7428:
 17515  003E96  0005               	push	
 17516  003E98  6EFA               	movwf	pclath,c
 17517  003E9A  51EF               	movf	(_LUN+6)& (0+255),w,b
 17518  003E9C  6EFD               	movwf	tosl,c
 17519  003E9E  51F0               	movf	(_LUN+7)& (0+255),w,b
 17520  003EA0  6EFE               	movwf	tosh,c
 17521  003EA2  6AFF               	clrf	tosu,c
 17522  003EA4  50FA               	movf	pclath,w,c
 17523  003EA6  0012               	return		;indir
 17524  003EA8                     u7429:
 17525  003EA8  0900               	iorlw	0
 17526  003EAA  B4D8               	btfsc	status,2,c
 17527  003EAC  D026               	goto	l521
 17528                           
 17529                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17530  003EAE  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17531  003EB2  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17532  003EB6  D801               	call	u7448
 17533  003EB8  D00A               	goto	u7449
 17534  003EBA                     u7448:
 17535  003EBA  0005               	push	
 17536  003EBC  6EFA               	movwf	pclath,c
 17537  003EBE  0101               	movlb	1	; () banked
 17538  003EC0  51E9               	movf	_LUN& (0+255),w,b
 17539  003EC2  6EFD               	movwf	tosl,c
 17540  003EC4  51EA               	movf	(_LUN+1)& (0+255),w,b
 17541  003EC6  6EFE               	movwf	tosh,c
 17542  003EC8  6AFF               	clrf	tosu,c
 17543  003ECA  50FA               	movf	pclath,w,c
 17544  003ECC  0012               	return		;indir
 17545  003ECE                     u7449:
 17546  003ECE  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17547  003ED0  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17548  003ED2  B4D8               	btfsc	status,2,c
 17549  003ED4  D012               	goto	l521
 17550                           
 17551                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17552  003ED6  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 17553  003EDA  0E01               	movlw	1
 17554  003EDC  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 17555  003EDE  0E00               	movlw	0
 17556  003EE0  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 17557  003EE2  2A0C               	incf	??_USBMSDInit,f,c
 17558  003EE4  D003               	goto	u7464
 17559  003EE6                     u7465:
 17560  003EE6  90D8               	bcf	status,0,c
 17561  003EE8  360D               	rlcf	??_USBMSDInit+1,f,c
 17562  003EEA  360E               	rlcf	??_USBMSDInit+2,f,c
 17563  003EEC                     u7464:
 17564  003EEC  2E0C               	decfsz	??_USBMSDInit,f,c
 17565  003EEE  D7FB               	goto	u7465
 17566  003EF0  500D               	movf	??_USBMSDInit+1,w,c
 17567  003EF2  0101               	movlb	1	; () banked
 17568  003EF4  1373               	iorwf	_gblMediaPresent& (0+255),f,b
 17569  003EF6  500E               	movf	??_USBMSDInit+2,w,c
 17570  003EF8  1374               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17571  003EFA                     l521:
 17572                           
 17573                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 17574                           
 17575                           ; BSR set to: 1
 17576                           
 17577                           ; BSR set to: 1
 17578  003EFA  ECED  F031         	call	_ResetSenseData	;wreg free
 17579  003EFE  0101               	movlb	1	; () banked
 17580  003F00  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 17581  003F02                     l518:
 17582                           
 17583                           ; BSR set to: 1
 17584                           
 17585                           ; BSR set to: 1
 17586  003F02  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17587  003F04  A4D8               	btfss	status,2,c
 17588  003F06  0012               	return	
 17589  003F08  D7B6               	goto	l519
 17590  003F0A                     __end_of_USBMSDInit:
 17591                           	opt stack 0
 17592                           tosu	equ	0xFFF
 17593                           tosh	equ	0xFFE
 17594                           tosl	equ	0xFFD
 17595                           pclath	equ	0xFFA
 17596                           tblptru	equ	0xFF8
 17597                           tblptrh	equ	0xFF7
 17598                           tblptrl	equ	0xFF6
 17599                           tablat	equ	0xFF5
 17600                           prodh	equ	0xFF4
 17601                           prodl	equ	0xFF3
 17602                           intcon	equ	0xFF2
 17603                           intcon3	equ	0xFF0
 17604                           indf0	equ	0xFEF
 17605                           postinc0	equ	0xFEE
 17606                           fsr0h	equ	0xFEA
 17607                           fsr0l	equ	0xFE9
 17608                           wreg	equ	0xFE8
 17609                           indf1	equ	0xFE7
 17610                           postdec1	equ	0xFE5
 17611                           plusw1	equ	0xFE3
 17612                           fsr1h	equ	0xFE2
 17613                           fsr1l	equ	0xFE1
 17614                           indf2	equ	0xFDF
 17615                           postinc2	equ	0xFDE
 17616                           postdec2	equ	0xFDD
 17617                           plusw2	equ	0xFDB
 17618                           fsr2h	equ	0xFDA
 17619                           fsr2l	equ	0xFD9
 17620                           status	equ	0xFD8
 17621                           
 17622 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 17623 ;; Defined at:
 17624 ;;		line 46 in file "app_device_custom_hid.c"
 17625 ;; Parameters:    Size  Location     Type
 17626 ;;		None
 17627 ;; Auto vars:     Size  Location     Type
 17628 ;;		None
 17629 ;; Return value:  Size  Location     Type
 17630 ;;                  1    wreg      void 
 17631 ;; Registers used:
 17632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17633 ;; Tracked objects:
 17634 ;;		On entry : 0/0
 17635 ;;		On exit  : 0/0
 17636 ;;		Unchanged: 0/0
 17637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17642 ;;Total ram usage:        0 bytes
 17643 ;; Hardware stack levels used:    1
 17644 ;; Hardware stack levels required when called:    2
 17645 ;; This function calls:
 17646 ;;		_USBEnableEndpoint
 17647 ;;		_USBTransferOnePacket
 17648 ;; This function is called by:
 17649 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17650 ;; This function uses a non-reentrant model
 17651 ;;
 17652                           
 17653                           	psect	text85
 17654  006E56                     __ptext85:
 17655                           	opt stack 0
 17656  006E56                     _APP_DeviceCustomHIDInitialize:
 17657                           	opt stack 26
 17658                           
 17659                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 17660                           
 17661                           ; BSR set to: 1
 17662                           ;incstack = 0
 17663  006E56  0E00               	movlw	0
 17664  006E58  0101               	movlb	1	; () banked
 17665  006E5A  6F6F               	movwf	_USBInHandle& (0+255),b
 17666  006E5C  0E00               	movlw	0
 17667  006E5E  6F70               	movwf	(_USBInHandle+1)& (0+255),b
 17668                           
 17669                           ; BSR set to: 1
 17670                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 17671  006E60  0E1E               	movlw	30
 17672  006E62  6E09               	movwf	USBEnableEndpoint@options,c
 17673  006E64  0E01               	movlw	1
 17674  006E66  EC9D  F036         	call	_USBEnableEndpoint
 17675                           
 17676                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 17677  006E6A  0E00               	movlw	0
 17678  006E6C  6E01               	movwf	USBTransferOnePacket@dir,c
 17679  006E6E  0E40               	movlw	low _ReceivedDataBuffer
 17680  006E70  6E02               	movwf	USBTransferOnePacket@data,c
 17681  006E72  0E02               	movlw	high _ReceivedDataBuffer
 17682  006E74  6E03               	movwf	USBTransferOnePacket@data+1,c
 17683  006E76  0E40               	movlw	64
 17684  006E78  6E04               	movwf	USBTransferOnePacket@len,c
 17685  006E7A  0E01               	movlw	1
 17686  006E7C  EC89  F020         	call	_USBTransferOnePacket
 17687  006E80  C001  F171         	movff	?_USBTransferOnePacket,_USBOutHandle
 17688  006E84  C002  F172         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 17689  006E88  0012               	return		;funcret
 17690  006E8A                     __end_of_APP_DeviceCustomHIDInitialize:
 17691                           	opt stack 0
 17692                           tosu	equ	0xFFF
 17693                           tosh	equ	0xFFE
 17694                           tosl	equ	0xFFD
 17695                           pclath	equ	0xFFA
 17696                           tblptru	equ	0xFF8
 17697                           tblptrh	equ	0xFF7
 17698                           tblptrl	equ	0xFF6
 17699                           tablat	equ	0xFF5
 17700                           prodh	equ	0xFF4
 17701                           prodl	equ	0xFF3
 17702                           intcon	equ	0xFF2
 17703                           intcon3	equ	0xFF0
 17704                           indf0	equ	0xFEF
 17705                           postinc0	equ	0xFEE
 17706                           fsr0h	equ	0xFEA
 17707                           fsr0l	equ	0xFE9
 17708                           wreg	equ	0xFE8
 17709                           indf1	equ	0xFE7
 17710                           postdec1	equ	0xFE5
 17711                           plusw1	equ	0xFE3
 17712                           fsr1h	equ	0xFE2
 17713                           fsr1l	equ	0xFE1
 17714                           indf2	equ	0xFDF
 17715                           postinc2	equ	0xFDE
 17716                           postdec2	equ	0xFDD
 17717                           plusw2	equ	0xFDB
 17718                           fsr2h	equ	0xFDA
 17719                           fsr2l	equ	0xFD9
 17720                           status	equ	0xFD8
 17721                           
 17722 ;; *************** function _USBEnableEndpoint *****************
 17723 ;; Defined at:
 17724 ;;		line 878 in file "usb_device.c"
 17725 ;; Parameters:    Size  Location     Type
 17726 ;;  ep              1    wreg     unsigned char 
 17727 ;;  options         1    8[COMRAM] unsigned char 
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;  ep              1   11[COMRAM] unsigned char 
 17730 ;;  p               2    9[COMRAM] PTR unsigned char 
 17731 ;;		 -> UEP0(1), 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  1    wreg      void 
 17734 ;; Registers used:
 17735 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17741 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17742 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17745 ;;Total ram usage:        4 bytes
 17746 ;; Hardware stack levels used:    1
 17747 ;; Hardware stack levels required when called:    1
 17748 ;; This function calls:
 17749 ;;		_USBConfigureEndpoint
 17750 ;; This function is called by:
 17751 ;;		_APP_DeviceCustomHIDInitialize
 17752 ;;		_APP_DeviceMSDInitialize
 17753 ;; This function uses a non-reentrant model
 17754 ;;
 17755                           
 17756                           	psect	text86
 17757  006D3A                     __ptext86:
 17758                           	opt stack 0
 17759  006D3A                     _USBEnableEndpoint:
 17760                           	opt stack 26
 17761                           
 17762                           ;incstack = 0
 17763                           ;USBEnableEndpoint@ep stored from wreg
 17764  006D3A  6E0C               	movwf	USBEnableEndpoint@ep,c
 17765                           
 17766                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17767  006D3C  A409               	btfss	USBEnableEndpoint@options,2,c
 17768  006D3E  D005               	goto	l178
 17769                           
 17770                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17771  006D40  0E00               	movlw	0
 17772  006D42  6E01               	movwf	USBConfigureEndpoint@direction,c
 17773  006D44  500C               	movf	USBEnableEndpoint@ep,w,c
 17774  006D46  EC77  F02C         	call	_USBConfigureEndpoint
 17775  006D4A                     l178:
 17776                           
 17777                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17778  006D4A  A209               	btfss	USBEnableEndpoint@options,1,c
 17779  006D4C  D005               	goto	l179
 17780                           
 17781                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17782  006D4E  0E01               	movlw	1
 17783  006D50  6E01               	movwf	USBConfigureEndpoint@direction,c
 17784  006D52  500C               	movf	USBEnableEndpoint@ep,w,c
 17785  006D54  EC77  F02C         	call	_USBConfigureEndpoint
 17786  006D58                     l179:
 17787                           
 17788                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17789  006D58  500C               	movf	USBEnableEndpoint@ep,w,c
 17790  006D5A  0D01               	mullw	1
 17791  006D5C  0E26               	movlw	38
 17792  006D5E  24F3               	addwf	prodl,w,c
 17793  006D60  6E0A               	movwf	USBEnableEndpoint@p,c
 17794  006D62  0E0F               	movlw	15
 17795  006D64  20F4               	addwfc	prodh,w,c
 17796  006D66  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17797                           
 17798                           ;usb_device.c: 901: *p = options;
 17799  006D68  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17800  006D6C  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17801  006D70  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17802  006D74  0012               	return		;funcret
 17803  006D76                     __end_of_USBEnableEndpoint:
 17804                           	opt stack 0
 17805                           tosu	equ	0xFFF
 17806                           tosh	equ	0xFFE
 17807                           tosl	equ	0xFFD
 17808                           pclath	equ	0xFFA
 17809                           tblptru	equ	0xFF8
 17810                           tblptrh	equ	0xFF7
 17811                           tblptrl	equ	0xFF6
 17812                           tablat	equ	0xFF5
 17813                           prodh	equ	0xFF4
 17814                           prodl	equ	0xFF3
 17815                           intcon	equ	0xFF2
 17816                           intcon3	equ	0xFF0
 17817                           indf0	equ	0xFEF
 17818                           postinc0	equ	0xFEE
 17819                           fsr0h	equ	0xFEA
 17820                           fsr0l	equ	0xFE9
 17821                           wreg	equ	0xFE8
 17822                           indf1	equ	0xFE7
 17823                           postdec1	equ	0xFE5
 17824                           plusw1	equ	0xFE3
 17825                           fsr1h	equ	0xFE2
 17826                           fsr1l	equ	0xFE1
 17827                           indf2	equ	0xFDF
 17828                           postinc2	equ	0xFDE
 17829                           postdec2	equ	0xFDD
 17830                           plusw2	equ	0xFDB
 17831                           fsr2h	equ	0xFDA
 17832                           fsr2l	equ	0xFD9
 17833                           status	equ	0xFD8
 17834                           
 17835 ;; *************** function _USBConfigureEndpoint *****************
 17836 ;; Defined at:
 17837 ;;		line 1545 in file "usb_device.c"
 17838 ;; Parameters:    Size  Location     Type
 17839 ;;  EPNum           1    wreg     unsigned char 
 17840 ;;  direction       1    0[COMRAM] unsigned char 
 17841 ;; Auto vars:     Size  Location     Type
 17842 ;;  EPNum           1    5[COMRAM] unsigned char 
 17843 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17844 ;;		 -> BDT(48), 
 17845 ;; Return value:  Size  Location     Type
 17846 ;;                  1    wreg      void 
 17847 ;; Registers used:
 17848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17849 ;; Tracked objects:
 17850 ;;		On entry : 0/0
 17851 ;;		On exit  : 0/0
 17852 ;;		Unchanged: 0/0
 17853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17854 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17855 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17856 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17857 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17858 ;;Total ram usage:        8 bytes
 17859 ;; Hardware stack levels used:    1
 17860 ;; This function calls:
 17861 ;;		Nothing
 17862 ;; This function is called by:
 17863 ;;		_USBEnableEndpoint
 17864 ;; This function uses a non-reentrant model
 17865 ;;
 17866                           
 17867                           	psect	text87
 17868  0058EE                     __ptext87:
 17869                           	opt stack 0
 17870  0058EE                     _USBConfigureEndpoint:
 17871                           	opt stack 26
 17872                           
 17873                           ;incstack = 0
 17874                           ;USBConfigureEndpoint@EPNum stored from wreg
 17875  0058EE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17876                           
 17877                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17878  0058F0  0E00               	movlw	0
 17879  0058F2  6E07               	movwf	USBConfigureEndpoint@handle,c
 17880  0058F4  0E0D               	movlw	13
 17881  0058F6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17882                           
 17883                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17884  0058F8  5001               	movf	USBConfigureEndpoint@direction,w,c
 17885  0058FA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17886  0058FC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17887  0058FE  90D8               	bcf	status,0,c
 17888  005900  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17889  005902  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17890  005904  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17891  005906  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17892  005908  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17893  00590A  90D8               	bcf	status,0,c
 17894  00590C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17895  00590E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17896  005910  90D8               	bcf	status,0,c
 17897  005912  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17898  005914  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17899  005916  5002               	movf	??_USBConfigureEndpoint,w,c
 17900  005918  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17901  00591A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17902  00591C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17903  00591E  90D8               	bcf	status,0,c
 17904  005920  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17905  005922  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17906  005924  90D8               	bcf	status,0,c
 17907  005926  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17908  005928  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17909  00592A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17910  00592C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17911  00592E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17912  005930  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17913                           
 17914                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17915  005932  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17916  005936  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17917  00593A  9EDF               	bcf	indf2,7,c
 17918                           
 17919                           ;usb_device.c: 1559: if(direction == 0)
 17920  00593C  5001               	movf	USBConfigureEndpoint@direction,w,c
 17921  00593E  A4D8               	btfss	status,2,c
 17922  005940  D007               	goto	l214
 17923                           
 17924                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17925  005942  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17926  005944  0D02               	mullw	2
 17927  005946  0E39               	movlw	low _pBDTEntryOut
 17928  005948  24F3               	addwf	prodl,w,c
 17929  00594A  6ED9               	movwf	fsr2l,c
 17930  00594C  0E01               	movlw	high _pBDTEntryOut
 17931  00594E  D006               	goto	L15
 17932  005950                     l214:
 17933                           
 17934                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17935  005950  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17936  005952  0D02               	mullw	2
 17937  005954  0E75               	movlw	low _pBDTEntryIn
 17938  005956  24F3               	addwf	prodl,w,c
 17939  005958  6ED9               	movwf	fsr2l,c
 17940  00595A  0E00               	movlw	high _pBDTEntryIn
 17941  00595C                     L15:
 17942  00595C  20F4               	addwfc	prodh,w,c
 17943  00595E  6EDA               	movwf	fsr2h,c
 17944  005960  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17945  005964  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17946                           
 17947                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17948  005968  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17949  00596C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17950  005970  9CDF               	bcf	indf2,6,c
 17951                           
 17952                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17953  005972  EE20 F004          	lfsr	2,4
 17954  005976  5007               	movf	USBConfigureEndpoint@handle,w,c
 17955  005978  26D9               	addwf	fsr2l,f,c
 17956  00597A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17957  00597C  22DA               	addwfc	fsr2h,f,c
 17958  00597E  8CDF               	bsf	indf2,6,c
 17959  005980  0012               	return		;funcret
 17960  005982                     __end_of_USBConfigureEndpoint:
 17961                           	opt stack 0
 17962                           tosu	equ	0xFFF
 17963                           tosh	equ	0xFFE
 17964                           tosl	equ	0xFFD
 17965                           pclath	equ	0xFFA
 17966                           tblptru	equ	0xFF8
 17967                           tblptrh	equ	0xFF7
 17968                           tblptrl	equ	0xFF6
 17969                           tablat	equ	0xFF5
 17970                           prodh	equ	0xFF4
 17971                           prodl	equ	0xFF3
 17972                           intcon	equ	0xFF2
 17973                           intcon3	equ	0xFF0
 17974                           indf0	equ	0xFEF
 17975                           postinc0	equ	0xFEE
 17976                           fsr0h	equ	0xFEA
 17977                           fsr0l	equ	0xFE9
 17978                           wreg	equ	0xFE8
 17979                           indf1	equ	0xFE7
 17980                           postdec1	equ	0xFE5
 17981                           plusw1	equ	0xFE3
 17982                           fsr1h	equ	0xFE2
 17983                           fsr1l	equ	0xFE1
 17984                           indf2	equ	0xFDF
 17985                           postinc2	equ	0xFDE
 17986                           postdec2	equ	0xFDD
 17987                           plusw2	equ	0xFDB
 17988                           fsr2h	equ	0xFDA
 17989                           fsr2l	equ	0xFD9
 17990                           status	equ	0xFD8
 17991                           
 17992 ;; *************** function _USBCtrlTrfOutHandler *****************
 17993 ;; Defined at:
 17994 ;;		line 2540 in file "usb_device.c"
 17995 ;; Parameters:    Size  Location     Type
 17996 ;;		None
 17997 ;; Auto vars:     Size  Location     Type
 17998 ;;		None
 17999 ;; Return value:  Size  Location     Type
 18000 ;;                  1    wreg      void 
 18001 ;; Registers used:
 18002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18003 ;; Tracked objects:
 18004 ;;		On entry : 0/0
 18005 ;;		On exit  : 0/0
 18006 ;;		Unchanged: 0/0
 18007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18012 ;;Total ram usage:        0 bytes
 18013 ;; Hardware stack levels used:    1
 18014 ;; Hardware stack levels required when called:    2
 18015 ;; This function calls:
 18016 ;;		_USBCtrlTrfRxService
 18017 ;; This function is called by:
 18018 ;;		_USBCtrlEPService
 18019 ;; This function uses a non-reentrant model
 18020 ;;
 18021                           
 18022                           	psect	text88
 18023  00649C                     __ptext88:
 18024                           	opt stack 0
 18025  00649C                     _USBCtrlTrfOutHandler:
 18026                           	opt stack 26
 18027                           
 18028                           ;usb_device.c: 2542: if(controlTransferState == 2)
 18029                           
 18030                           ;incstack = 0
 18031  00649C  0E02               	movlw	2
 18032  00649E  0100               	movlb	0	; () banked
 18033  0064A0  19AC               	xorwf	_controlTransferState& (0+255),w,b
 18034  0064A2  A4D8               	btfss	status,2,c
 18035  0064A4  D003               	goto	l320
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 18039  0064A6  ECE1  F01C         	call	_USBCtrlTrfRxService	;wreg free
 18040                           
 18041                           ;usb_device.c: 2545: }
 18042  0064AA  0012               	return	
 18043  0064AC                     l320:
 18044                           
 18045                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 18046  0064AC  0E00               	movlw	0
 18047  0064AE  0100               	movlb	0	; () banked
 18048  0064B0  6FAC               	movwf	_controlTransferState& (0+255),b
 18049                           
 18050                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 18051  0064B2  51A8               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 18052  0064B4  A4D8               	btfss	status,2,c
 18053  0064B6  D01F               	goto	l322
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 18057  0064B8  EE20 F001          	lfsr	2,1
 18058  0064BC  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18059  0064BE  26D9               	addwf	fsr2l,f,c
 18060  0064C0  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18061  0064C2  22DA               	addwfc	fsr2h,f,c
 18062  0064C4  0E08               	movlw	8
 18063  0064C6  6EDF               	movwf	indf2,c
 18064                           
 18065                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18066  0064C8  EE20 F002          	lfsr	2,2
 18067  0064CC  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18068  0064CE  26D9               	addwf	fsr2l,f,c
 18069  0064D0  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18070  0064D2  22DA               	addwfc	fsr2h,f,c
 18071  0064D4  0E30               	movlw	48
 18072  0064D6  6EDE               	movwf	postinc2,c
 18073  0064D8  0E0D               	movlw	13
 18074  0064DA  6EDD               	movwf	postdec2,c
 18075                           
 18076                           ; BSR set to: 0
 18077                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18078  0064DC  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18079  0064E0  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18080  0064E4  0E0C               	movlw	12
 18081  0064E6  6EDF               	movwf	indf2,c
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18085  0064E8  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18086  0064EC  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18087  0064F0  0E00               	movlw	0
 18088  0064F2  8EDB               	bsf	plusw2,7,c
 18089                           
 18090                           ;usb_device.c: 2563: }
 18091  0064F4  0012               	return	
 18092  0064F6                     l322:
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 18096                           
 18097                           ; BSR set to: 0
 18098  0064F6  0E00               	movlw	0
 18099  0064F8  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18100                           
 18101                           ; BSR set to: 0
 18102  0064FA  0012               	return	
 18103  0064FC                     __end_of_USBCtrlTrfOutHandler:
 18104                           	opt stack 0
 18105                           tosu	equ	0xFFF
 18106                           tosh	equ	0xFFE
 18107                           tosl	equ	0xFFD
 18108                           pclath	equ	0xFFA
 18109                           tblptru	equ	0xFF8
 18110                           tblptrh	equ	0xFF7
 18111                           tblptrl	equ	0xFF6
 18112                           tablat	equ	0xFF5
 18113                           prodh	equ	0xFF4
 18114                           prodl	equ	0xFF3
 18115                           intcon	equ	0xFF2
 18116                           intcon3	equ	0xFF0
 18117                           indf0	equ	0xFEF
 18118                           postinc0	equ	0xFEE
 18119                           fsr0h	equ	0xFEA
 18120                           fsr0l	equ	0xFE9
 18121                           wreg	equ	0xFE8
 18122                           indf1	equ	0xFE7
 18123                           postdec1	equ	0xFE5
 18124                           plusw1	equ	0xFE3
 18125                           fsr1h	equ	0xFE2
 18126                           fsr1l	equ	0xFE1
 18127                           indf2	equ	0xFDF
 18128                           postinc2	equ	0xFDE
 18129                           postdec2	equ	0xFDD
 18130                           plusw2	equ	0xFDB
 18131                           fsr2h	equ	0xFDA
 18132                           fsr2l	equ	0xFD9
 18133                           status	equ	0xFD8
 18134                           
 18135 ;; *************** function _USBCtrlTrfRxService *****************
 18136 ;; Defined at:
 18137 ;;		line 1854 in file "usb_device.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18142 ;;  i               1    0[COMRAM] unsigned char 
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  1    wreg      void 
 18145 ;; Registers used:
 18146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18147 ;; Tracked objects:
 18148 ;;		On entry : 0/0
 18149 ;;		On exit  : 0/0
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18156 ;;Total ram usage:        2 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:    1
 18159 ;; This function calls:
 18160 ;;		_USBCtrlEPAllowStatusStage
 18161 ;; This function is called by:
 18162 ;;		_USBCtrlTrfOutHandler
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           	psect	text89
 18167  0039C2                     __ptext89:
 18168                           	opt stack 0
 18169  0039C2                     _USBCtrlTrfRxService:
 18170                           	opt stack 26
 18171                           
 18172                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18173                           
 18174                           ;incstack = 0
 18175  0039C2  0100               	movlb	0	; () banked
 18176  0039C4  EE20 F001          	lfsr	2,1
 18177  0039C8  518F               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18178  0039CA  26D9               	addwf	fsr2l,f,c
 18179  0039CC  5190               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18180  0039CE  22DA               	addwfc	fsr2h,f,c
 18181  0039D0  50DF               	movf	indf2,w,c
 18182  0039D2  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 18186  0039D4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18187  0039D6  0101               	movlb	1	; () banked
 18188  0039D8  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 18189  0039DA  0E00               	movlw	0
 18190  0039DC  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 18191  0039DE  A0D8               	btfss	status,0,c
 18192                           
 18193                           ; BSR set to: 1
 18194                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 18195  0039E0  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 18196                           
 18197                           ; BSR set to: 1
 18198                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 18199                           
 18200                           ; BSR set to: 1
 18201  0039E4  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18202  0039E6  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 18203  0039E8  0E00               	movlw	0
 18204  0039EA  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 18205                           
 18206                           ; BSR set to: 1
 18207                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 18208  0039EC  0E00               	movlw	0
 18209  0039EE  6E01               	movwf	USBCtrlTrfRxService@i,c
 18210  0039F0  D011               	goto	l248
 18211  0039F2                     
 18212                           ; BSR set to: 1
 18213                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18214                           
 18215                           ; BSR set to: 1
 18216  0039F2  5001               	movf	USBCtrlTrfRxService@i,w,c
 18217  0039F4  0D01               	mullw	1
 18218  0039F6  0E38               	movlw	56
 18219  0039F8  24F3               	addwf	prodl,w,c
 18220  0039FA  6ED9               	movwf	fsr2l,c
 18221  0039FC  0E0D               	movlw	13
 18222  0039FE  20F4               	addwfc	prodh,w,c
 18223  003A00  6EDA               	movwf	fsr2h,c
 18224  003A02  C131  FFE1         	movff	_outPipes,fsr1l
 18225  003A06  C132  FFE2         	movff	_outPipes+1,fsr1h
 18226  003A0A  CFDF FFE7          	movff	indf2,indf1
 18227                           
 18228                           ; BSR set to: 1
 18229  003A0E  4B31               	infsnz	_outPipes& (0+255),f,b
 18230  003A10  2B32               	incf	(_outPipes+1)& (0+255),f,b
 18231                           
 18232                           ; BSR set to: 1
 18233  003A12  2A01               	incf	USBCtrlTrfRxService@i,f,c
 18234  003A14                     l248:
 18235                           
 18236                           ; BSR set to: 1
 18237                           
 18238                           ; BSR set to: 1
 18239  003A14  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18240  003A16  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 18241  003A18  A0D8               	btfss	status,0,c
 18242  003A1A  D7EB               	goto	l249
 18243                           
 18244                           ; BSR set to: 1
 18245                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 18246                           
 18247                           ; BSR set to: 1
 18248  003A1C  5135               	movf	(_outPipes+4)& (0+255),w,b
 18249  003A1E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 18250  003A20  B4D8               	btfsc	status,2,c
 18251  003A22  D033               	goto	l251
 18252                           
 18253                           ; BSR set to: 1
 18254                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 18255  003A24  0100               	movlb	0	; () banked
 18256  003A26  EE20 F001          	lfsr	2,1
 18257  003A2A  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18258  003A2C  26D9               	addwf	fsr2l,f,c
 18259  003A2E  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18260  003A30  22DA               	addwfc	fsr2h,f,c
 18261  003A32  0E08               	movlw	8
 18262  003A34  6EDF               	movwf	indf2,c
 18263                           
 18264                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18265  003A36  EE20 F002          	lfsr	2,2
 18266  003A3A  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18267  003A3C  26D9               	addwf	fsr2l,f,c
 18268  003A3E  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18269  003A40  22DA               	addwfc	fsr2h,f,c
 18270  003A42  0E38               	movlw	56
 18271  003A44  6EDE               	movwf	postinc2,c
 18272  003A46  0E0D               	movlw	13
 18273  003A48  6EDD               	movwf	postdec2,c
 18274                           
 18275                           ; BSR set to: 0
 18276                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18277  003A4A  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18278  003A4E  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18279  003A52  BCDF               	btfsc	indf2,6,c
 18280  003A54  D00D               	goto	l252
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 18284  003A56  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18285  003A5A  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18286  003A5E  0E48               	movlw	72
 18287  003A60  6EDF               	movwf	indf2,c
 18288                           
 18289                           ; BSR set to: 0
 18290                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18291  003A62  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18292  003A66  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18293  003A6A  0E00               	movlw	0
 18294  003A6C  8EDB               	bsf	plusw2,7,c
 18295                           
 18296                           ;usb_device.c: 1891: }
 18297  003A6E  0012               	return	
 18298  003A70                     l252:
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 18302                           
 18303                           ; BSR set to: 0
 18304  003A70  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18305  003A74  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18306  003A78  0E08               	movlw	8
 18307  003A7A  6EDF               	movwf	indf2,c
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18311  003A7C  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18312  003A80  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18313  003A84  0E00               	movlw	0
 18314  003A86  8EDB               	bsf	plusw2,7,c
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 18318  003A88  0012               	return	
 18319  003A8A                     l251:
 18320                           
 18321                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 18322                           
 18323                           ; BSR set to: 0
 18324  003A8A  0100               	movlb	0	; () banked
 18325  003A8C  EE20 F001          	lfsr	2,1
 18326  003A90  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18327  003A92  26D9               	addwf	fsr2l,f,c
 18328  003A94  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18329  003A96  22DA               	addwfc	fsr2h,f,c
 18330  003A98  0E08               	movlw	8
 18331  003A9A  6EDF               	movwf	indf2,c
 18332                           
 18333                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18334  003A9C  EE20 F002          	lfsr	2,2
 18335  003AA0  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18336  003AA2  26D9               	addwf	fsr2l,f,c
 18337  003AA4  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18338  003AA6  22DA               	addwfc	fsr2h,f,c
 18339  003AA8  0E30               	movlw	48
 18340  003AAA  6EDE               	movwf	postinc2,c
 18341  003AAC  0E0D               	movlw	13
 18342  003AAE  6EDD               	movwf	postdec2,c
 18343                           
 18344                           ; BSR set to: 0
 18345                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18346  003AB0  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18347  003AB4  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18348  003AB8  0E04               	movlw	4
 18349  003ABA  6EDF               	movwf	indf2,c
 18350                           
 18351                           ; BSR set to: 0
 18352                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18353  003ABC  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18354  003AC0  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18355  003AC4  0E00               	movlw	0
 18356  003AC6  8EDB               	bsf	plusw2,7,c
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 18360                           
 18361                           ; BSR set to: 0
 18362  003AC8  0101               	movlb	1	; () banked
 18363  003ACA  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18364                           
 18365                           ; BSR set to: 1
 18366                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 18367  003ACC  0100               	movlb	0	; () banked
 18368  003ACE  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 18369  003AD0  A4D8               	btfss	status,2,c
 18370  003AD2  0012               	return	
 18371                           
 18372                           ; BSR set to: 0
 18373                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 18374  003AD4  EC23  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18375  003AD8  0012               	return	
 18376  003ADA                     __end_of_USBCtrlTrfRxService:
 18377                           	opt stack 0
 18378                           tosu	equ	0xFFF
 18379                           tosh	equ	0xFFE
 18380                           tosl	equ	0xFFD
 18381                           pclath	equ	0xFFA
 18382                           tblptru	equ	0xFF8
 18383                           tblptrh	equ	0xFF7
 18384                           tblptrl	equ	0xFF6
 18385                           tablat	equ	0xFF5
 18386                           prodh	equ	0xFF4
 18387                           prodl	equ	0xFF3
 18388                           intcon	equ	0xFF2
 18389                           intcon3	equ	0xFF0
 18390                           indf0	equ	0xFEF
 18391                           postinc0	equ	0xFEE
 18392                           fsr0h	equ	0xFEA
 18393                           fsr0l	equ	0xFE9
 18394                           wreg	equ	0xFE8
 18395                           indf1	equ	0xFE7
 18396                           postdec1	equ	0xFE5
 18397                           plusw1	equ	0xFE3
 18398                           fsr1h	equ	0xFE2
 18399                           fsr1l	equ	0xFE1
 18400                           indf2	equ	0xFDF
 18401                           postinc2	equ	0xFDE
 18402                           postdec2	equ	0xFDD
 18403                           plusw2	equ	0xFDB
 18404                           fsr2h	equ	0xFDA
 18405                           fsr2l	equ	0xFD9
 18406                           status	equ	0xFD8
 18407                           
 18408 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18409 ;; Defined at:
 18410 ;;		line 1418 in file "usb_device.c"
 18411 ;; Parameters:    Size  Location     Type
 18412 ;;		None
 18413 ;; Auto vars:     Size  Location     Type
 18414 ;;		None
 18415 ;; Return value:  Size  Location     Type
 18416 ;;                  1    wreg      void 
 18417 ;; Registers used:
 18418 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18419 ;; Tracked objects:
 18420 ;;		On entry : 0/0
 18421 ;;		On exit  : 0/0
 18422 ;;		Unchanged: 0/0
 18423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18428 ;;Total ram usage:        0 bytes
 18429 ;; Hardware stack levels used:    1
 18430 ;; This function calls:
 18431 ;;		Nothing
 18432 ;; This function is called by:
 18433 ;;		_USBDeviceTasks
 18434 ;;		_USBCtrlEPServiceComplete
 18435 ;;		_USBCtrlTrfRxService
 18436 ;; This function uses a non-reentrant model
 18437 ;;
 18438                           
 18439                           	psect	text90
 18440  004E46                     __ptext90:
 18441                           	opt stack 0
 18442  004E46                     _USBCtrlEPAllowStatusStage:
 18443                           	opt stack 26
 18444                           
 18445                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 18446                           
 18447                           ;incstack = 0
 18448  004E46  0100               	movlb	0	; () banked
 18449  004E48  51A5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 18450  004E4A  A4D8               	btfss	status,2,c
 18451  004E4C  0012               	return	
 18452                           
 18453                           ; BSR set to: 0
 18454                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 18455  004E4E  0E01               	movlw	1
 18456  004E50  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18457                           
 18458                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 18459  004E52  51A4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 18460  004E54  A4D8               	btfss	status,2,c
 18461  004E56  0012               	return	
 18462                           
 18463                           ; BSR set to: 0
 18464                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 18465  004E58  0E01               	movlw	1
 18466  004E5A  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;usb_device.c: 1434: if(controlTransferState == 2)
 18470  004E5C  0E02               	movlw	2
 18471  004E5E  19AC               	xorwf	_controlTransferState& (0+255),w,b
 18472  004E60  A4D8               	btfss	status,2,c
 18473  004E62  D015               	goto	l202
 18474                           
 18475                           ; BSR set to: 0
 18476                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 18477  004E64  EE20 F001          	lfsr	2,1
 18478  004E68  5175               	movf	_pBDTEntryIn& (0+255),w,b
 18479  004E6A  26D9               	addwf	fsr2l,f,c
 18480  004E6C  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18481  004E6E  22DA               	addwfc	fsr2h,f,c
 18482  004E70  0E00               	movlw	0
 18483  004E72  6EDF               	movwf	indf2,c
 18484                           
 18485                           ; BSR set to: 0
 18486                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18487  004E74  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18488  004E78  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18489  004E7C  0E48               	movlw	72
 18490  004E7E  6EDF               	movwf	indf2,c
 18491                           
 18492                           ; BSR set to: 0
 18493                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18494  004E80  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18495  004E84  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18496  004E88  0E00               	movlw	0
 18497  004E8A  8EDB               	bsf	plusw2,7,c
 18498                           
 18499                           ;usb_device.c: 1439: }
 18500  004E8C  0012               	return	
 18501  004E8E                     l202:
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 18505                           
 18506                           ; BSR set to: 0
 18507  004E8E  05AC               	decf	_controlTransferState& (0+255),w,b
 18508  004E90  A4D8               	btfss	status,2,c
 18509  004E92  0012               	return	
 18510                           
 18511                           ; BSR set to: 0
 18512                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 18513  004E94  0E00               	movlw	0
 18514  004E96  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18515                           
 18516                           ; BSR set to: 0
 18517                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 18518  004E98  EE20 F001          	lfsr	2,1
 18519  004E9C  518F               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18520  004E9E  26D9               	addwf	fsr2l,f,c
 18521  004EA0  5190               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18522  004EA2  22DA               	addwfc	fsr2h,f,c
 18523  004EA4  0E08               	movlw	8
 18524  004EA6  6EDF               	movwf	indf2,c
 18525                           
 18526                           ; BSR set to: 0
 18527                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18528  004EA8  EE20 F002          	lfsr	2,2
 18529  004EAC  518F               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18530  004EAE  26D9               	addwf	fsr2l,f,c
 18531  004EB0  5190               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18532  004EB2  22DA               	addwfc	fsr2h,f,c
 18533  004EB4  0E30               	movlw	48
 18534  004EB6  6EDE               	movwf	postinc2,c
 18535  004EB8  0E0D               	movlw	13
 18536  004EBA  6EDD               	movwf	postdec2,c
 18537                           
 18538                           ; BSR set to: 0
 18539                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18540  004EBC  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18541  004EC0  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18542  004EC4  0E04               	movlw	4
 18543  004EC6  6EDF               	movwf	indf2,c
 18544                           
 18545                           ; BSR set to: 0
 18546                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18547  004EC8  C08F  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18548  004ECC  C090  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18549  004ED0  0E00               	movlw	0
 18550  004ED2  8EDB               	bsf	plusw2,7,c
 18551                           
 18552                           ; BSR set to: 0
 18553                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 18554  004ED4  0E01               	movlw	1
 18555  004ED6  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18556                           
 18557                           ; BSR set to: 0
 18558                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 18559  004ED8  EE20 F001          	lfsr	2,1
 18560  004EDC  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18561  004EDE  26D9               	addwf	fsr2l,f,c
 18562  004EE0  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18563  004EE2  22DA               	addwfc	fsr2h,f,c
 18564  004EE4  0E08               	movlw	8
 18565  004EE6  6EDF               	movwf	indf2,c
 18566                           
 18567                           ; BSR set to: 0
 18568                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18569  004EE8  EE20 F002          	lfsr	2,2
 18570  004EEC  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18571  004EEE  26D9               	addwf	fsr2l,f,c
 18572  004EF0  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18573  004EF2  22DA               	addwfc	fsr2h,f,c
 18574  004EF4  0E30               	movlw	48
 18575  004EF6  6EDE               	movwf	postinc2,c
 18576  004EF8  0E0D               	movlw	13
 18577  004EFA  6EDD               	movwf	postdec2,c
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18581  004EFC  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18582  004F00  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18583  004F04  0E80               	movlw	128
 18584  004F06  6EDF               	movwf	indf2,c
 18585                           
 18586                           ; BSR set to: 0
 18587                           
 18588                           ; BSR set to: 0
 18589                           
 18590                           ; BSR set to: 0
 18591  004F08  0012               	return	
 18592  004F0A                     __end_of_USBCtrlEPAllowStatusStage:
 18593                           	opt stack 0
 18594                           tosu	equ	0xFFF
 18595                           tosh	equ	0xFFE
 18596                           tosl	equ	0xFFD
 18597                           pclath	equ	0xFFA
 18598                           tblptru	equ	0xFF8
 18599                           tblptrh	equ	0xFF7
 18600                           tblptrl	equ	0xFF6
 18601                           tablat	equ	0xFF5
 18602                           prodh	equ	0xFF4
 18603                           prodl	equ	0xFF3
 18604                           intcon	equ	0xFF2
 18605                           intcon3	equ	0xFF0
 18606                           indf0	equ	0xFEF
 18607                           postinc0	equ	0xFEE
 18608                           fsr0h	equ	0xFEA
 18609                           fsr0l	equ	0xFE9
 18610                           wreg	equ	0xFE8
 18611                           indf1	equ	0xFE7
 18612                           postdec1	equ	0xFE5
 18613                           plusw1	equ	0xFE3
 18614                           fsr1h	equ	0xFE2
 18615                           fsr1l	equ	0xFE1
 18616                           indf2	equ	0xFDF
 18617                           postinc2	equ	0xFDE
 18618                           postdec2	equ	0xFDD
 18619                           plusw2	equ	0xFDB
 18620                           fsr2h	equ	0xFDA
 18621                           fsr2l	equ	0xFD9
 18622                           status	equ	0xFD8
 18623                           
 18624 ;; *************** function _USBCtrlTrfInHandler *****************
 18625 ;; Defined at:
 18626 ;;		line 2594 in file "usb_device.c"
 18627 ;; Parameters:    Size  Location     Type
 18628 ;;		None
 18629 ;; Auto vars:     Size  Location     Type
 18630 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18631 ;; Return value:  Size  Location     Type
 18632 ;;                  1    wreg      void 
 18633 ;; Registers used:
 18634 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18635 ;; Tracked objects:
 18636 ;;		On entry : 0/0
 18637 ;;		On exit  : 0/0
 18638 ;;		Unchanged: 0/0
 18639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18644 ;;Total ram usage:        1 bytes
 18645 ;; Hardware stack levels used:    1
 18646 ;; Hardware stack levels required when called:    1
 18647 ;; This function calls:
 18648 ;;		_USBCtrlTrfTxService
 18649 ;; This function is called by:
 18650 ;;		_USBCtrlEPService
 18651 ;; This function uses a non-reentrant model
 18652 ;;
 18653                           
 18654                           	psect	text91
 18655  004D7E                     __ptext91:
 18656                           	opt stack 0
 18657  004D7E                     _USBCtrlTrfInHandler:
 18658                           	opt stack 27
 18659                           
 18660                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 18661                           
 18662                           ; BSR set to: 0
 18663                           ;incstack = 0
 18664  004D7E  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18665  004D82  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18666  004D86  0100               	movlb	0	; () banked
 18667  004D88  0E00               	movlw	0
 18668  004D8A  BCDF               	btfsc	indf2,6,c
 18669  004D8C  0E01               	movlw	1
 18670  004D8E  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18671                           
 18672                           ; BSR set to: 0
 18673                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18674  004D90  0E04               	movlw	4
 18675  004D92  1975               	xorwf	_pBDTEntryIn& (0+255),w,b
 18676  004D94  6F75               	movwf	_pBDTEntryIn& (0+255),b
 18677  004D96  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18678  004D98  6F76               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 18682  004D9A  0E08               	movlw	8
 18683  004D9C  185F               	xorwf	_USBDeviceState,w,c
 18684  004D9E  A4D8               	btfss	status,2,c
 18685  004DA0  D00C               	goto	l329
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 18689  004DA2  010D               	movlb	13	; () banked
 18690  004DA4  5132               	movf	50,w,b	;volatile
 18691  004DA6  0B7F               	andlw	127
 18692  004DA8  010F               	movlb	15	; () banked
 18693  004DAA  6F38               	movwf	56,b	;volatile
 18694                           
 18695                           ; BSR set to: 15
 18696                           ;usb_device.c: 2609: if(UADDR != 0u)
 18697  004DAC  5138               	movf	56,w,b	;volatile
 18698  004DAE  B4D8               	btfsc	status,2,c
 18699  004DB0  D002               	goto	l328
 18700                           
 18701                           ; BSR set to: 15
 18702                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 18703  004DB2  0E10               	movlw	16
 18704  004DB4  D001               	goto	L16
 18705  004DB6                     l328:
 18706                           
 18707                           ; BSR set to: 15
 18708                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 18709                           
 18710                           ; BSR set to: 15
 18711  004DB6  0E04               	movlw	4
 18712  004DB8                     L16:
 18713  004DB8  6E5F               	movwf	_USBDeviceState,c
 18714  004DBA                     l329:
 18715                           
 18716                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 18717                           
 18718                           ; BSR set to: 15
 18719                           
 18720                           ; BSR set to: 15
 18721  004DBA  0100               	movlb	0	; () banked
 18722  004DBC  05AC               	decf	_controlTransferState& (0+255),w,b
 18723  004DBE  A4D8               	btfss	status,2,c
 18724  004DC0  D03B               	goto	l330
 18725                           
 18726                           ; BSR set to: 0
 18727                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 18728  004DC2  EE20 F002          	lfsr	2,2
 18729  004DC6  5175               	movf	_pBDTEntryIn& (0+255),w,b
 18730  004DC8  26D9               	addwf	fsr2l,f,c
 18731  004DCA  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18732  004DCC  22DA               	addwfc	fsr2h,f,c
 18733  004DCE  0E38               	movlw	56
 18734  004DD0  6EDE               	movwf	postinc2,c
 18735  004DD2  0E0D               	movlw	13
 18736  004DD4  6EDD               	movwf	postdec2,c
 18737                           
 18738                           ; BSR set to: 0
 18739                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18740  004DD6  ECEE  F025         	call	_USBCtrlTrfTxService	;wreg free
 18741                           
 18742                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18743  004DDA  0E02               	movlw	2
 18744  004DDC  0100               	movlb	0	; () banked
 18745  004DDE  19AD               	xorwf	_shortPacketStatus& (0+255),w,b
 18746  004DE0  A4D8               	btfss	status,2,c
 18747  004DE2  D00D               	goto	l331
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18751  004DE4  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18752  004DE8  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18753  004DEC  0E04               	movlw	4
 18754  004DEE  6EDF               	movwf	indf2,c
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18758  004DF0  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18759  004DF4  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18760  004DF8  0E00               	movlw	0
 18761  004DFA  8EDB               	bsf	plusw2,7,c
 18762                           
 18763                           ;usb_device.c: 2635: }
 18764  004DFC  0012               	return	
 18765  004DFE                     l331:
 18766                           
 18767                           ; BSR set to: 0
 18768                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18769                           
 18770                           ; BSR set to: 0
 18771  004DFE  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18772  004E00  A4D8               	btfss	status,2,c
 18773  004E02  D00D               	goto	l333
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18777  004E04  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18778  004E08  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18779  004E0C  0E48               	movlw	72
 18780  004E0E  6EDF               	movwf	indf2,c
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18784  004E10  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18785  004E14  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18786  004E18  0E00               	movlw	0
 18787  004E1A  8EDB               	bsf	plusw2,7,c
 18788                           
 18789                           ;usb_device.c: 2642: }
 18790  004E1C  0012               	return	
 18791  004E1E                     l333:
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18795                           
 18796                           ; BSR set to: 0
 18797  004E1E  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18798  004E22  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18799  004E26  0E08               	movlw	8
 18800  004E28  6EDF               	movwf	indf2,c
 18801                           
 18802                           ; BSR set to: 0
 18803                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18804  004E2A  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 18805  004E2E  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18806  004E32  0E00               	movlw	0
 18807  004E34  8EDB               	bsf	plusw2,7,c
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18811                           
 18812                           ; BSR set to: 0
 18813  004E36  0012               	return	
 18814  004E38                     l330:
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18818  004E38  0101               	movlb	1	; () banked
 18819  004E3A  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18820                           
 18821                           ; BSR set to: 1
 18822                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18823                           
 18824                           ; BSR set to: 1
 18825  004E3C  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18826                           
 18827                           ; BSR set to: 1
 18828                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18829                           
 18830                           ; BSR set to: 1
 18831  004E3E  0E00               	movlw	0
 18832  004E40  0100               	movlb	0	; () banked
 18833  004E42  6FAC               	movwf	_controlTransferState& (0+255),b
 18834  004E44  0012               	return	
 18835  004E46                     __end_of_USBCtrlTrfInHandler:
 18836                           	opt stack 0
 18837                           tosu	equ	0xFFF
 18838                           tosh	equ	0xFFE
 18839                           tosl	equ	0xFFD
 18840                           pclath	equ	0xFFA
 18841                           tblptru	equ	0xFF8
 18842                           tblptrh	equ	0xFF7
 18843                           tblptrl	equ	0xFF6
 18844                           tablat	equ	0xFF5
 18845                           prodh	equ	0xFF4
 18846                           prodl	equ	0xFF3
 18847                           intcon	equ	0xFF2
 18848                           intcon3	equ	0xFF0
 18849                           indf0	equ	0xFEF
 18850                           postinc0	equ	0xFEE
 18851                           fsr0h	equ	0xFEA
 18852                           fsr0l	equ	0xFE9
 18853                           wreg	equ	0xFE8
 18854                           indf1	equ	0xFE7
 18855                           postdec1	equ	0xFE5
 18856                           plusw1	equ	0xFE3
 18857                           fsr1h	equ	0xFE2
 18858                           fsr1l	equ	0xFE1
 18859                           indf2	equ	0xFDF
 18860                           postinc2	equ	0xFDE
 18861                           postdec2	equ	0xFDD
 18862                           plusw2	equ	0xFDB
 18863                           fsr2h	equ	0xFDA
 18864                           fsr2l	equ	0xFD9
 18865                           status	equ	0xFD8
 18866                           
 18867 ;; *************** function _USBCtrlTrfTxService *****************
 18868 ;; Defined at:
 18869 ;;		line 1773 in file "usb_device.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;		None
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  1    wreg      void 
 18876 ;; Registers used:
 18877 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/0
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18887 ;;Total ram usage:        1 bytes
 18888 ;; Hardware stack levels used:    1
 18889 ;; This function calls:
 18890 ;;		Nothing
 18891 ;; This function is called by:
 18892 ;;		_USBCtrlEPAllowDataStage
 18893 ;;		_USBCtrlTrfInHandler
 18894 ;; This function uses a non-reentrant model
 18895 ;;
 18896                           
 18897                           	psect	text92
 18898  004BDC                     __ptext92:
 18899                           	opt stack 0
 18900  004BDC                     _USBCtrlTrfTxService:
 18901                           	opt stack 25
 18902                           
 18903                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18904                           
 18905                           ; BSR set to: 0
 18906                           ;incstack = 0
 18907  004BDC  0E08               	movlw	8
 18908  004BDE  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18909                           
 18910                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18911  004BE0  0100               	movlb	0	; () banked
 18912  004BE2  5174               	movf	(_inPipes+5)& (0+255),w,b
 18913  004BE4  E110               	bnz	l10685
 18914  004BE6  0E08               	movlw	8
 18915  004BE8  5D73               	subwf	(_inPipes+4)& (0+255),w,b
 18916  004BEA  B0D8               	btfsc	status,0,c
 18917  004BEC  D00C               	goto	l235
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18921  004BEE  C073  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18925  004BF2  51AD               	movf	_shortPacketStatus& (0+255),w,b
 18926  004BF4  A4D8               	btfss	status,2,c
 18927  004BF6  D002               	goto	l233
 18928                           
 18929                           ; BSR set to: 0
 18930                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18931  004BF8  0E01               	movlw	1
 18932  004BFA  D004               	goto	L17
 18933  004BFC                     l233:
 18934                           
 18935                           ; BSR set to: 0
 18936                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18937                           
 18938                           ; BSR set to: 0
 18939  004BFC  05AD               	decf	_shortPacketStatus& (0+255),w,b
 18940  004BFE  A4D8               	btfss	status,2,c
 18941  004C00  D002               	goto	l235
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18945  004C02  0E02               	movlw	2
 18946  004C04                     L17:
 18947  004C04  6FAD               	movwf	_shortPacketStatus& (0+255),b
 18948  004C06                     l235:
 18949  004C06                     l10685:
 18950                           
 18951                           ; BSR set to: 0
 18952                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18953  004C06  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18954  004C08  5F73               	subwf	(_inPipes+4)& (0+255),f,b
 18955  004C0A  0E00               	movlw	0
 18956  004C0C  5B74               	subwfb	(_inPipes+5)& (0+255),f,b
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18960  004C0E  EE20 F001          	lfsr	2,1
 18961  004C12  5175               	movf	_pBDTEntryIn& (0+255),w,b
 18962  004C14  26D9               	addwf	fsr2l,f,c
 18963  004C16  5176               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18964  004C18  22DA               	addwfc	fsr2h,f,c
 18965  004C1A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18966                           
 18967                           ; BSR set to: 0
 18968                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18969  004C1E  0E38               	movlw	56
 18970  004C20  0101               	movlb	1	; () banked
 18971  004C22  6F79               	movwf	_pDst& (0+255),b
 18972  004C24  0E0D               	movlw	13
 18973  004C26  6F7A               	movwf	(_pDst+1)& (0+255),b
 18974                           
 18975                           ; BSR set to: 1
 18976                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18977  004C28  0100               	movlb	0	; () banked
 18978  004C2A  A172               	btfss	(_inPipes+3)& (0+255),0,b
 18979  004C2C  D01D               	goto	l237
 18980  004C2E  D03C               	goto	l241
 18981  004C30                     
 18982                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18983                           
 18984                           ; BSR set to: 0
 18985  004C30  C06F  FFF6         	movff	_inPipes,tblptrl
 18986  004C34  C070  FFF7         	movff	_inPipes+1,tblptrh
 18987  004C38  6AF8               	clrf	tblptru,c
 18988  004C3A  C179  FFD9         	movff	_pDst,fsr2l
 18989  004C3E  C17A  FFDA         	movff	_pDst+1,fsr2h
 18990  004C42  0E0E               	movlw	(high __ramtop+-1)
 18991  004C44  64F7               	cpfsgt	tblptrh,c
 18992  004C46  D003               	bra	u8207
 18993  004C48  0008               	tblrd		*
 18994  004C4A  50F5               	movf	tablat,w,c
 18995  004C4C  D005               	bra	u8200
 18996  004C4E                     u8207:
 18997  004C4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 18998  004C52  CFF7 FFEA          	movff	tblptrh,fsr0h
 18999  004C56  50EF               	movf	indf0,w,c
 19000  004C58                     u8200:
 19001  004C58  6EDF               	movwf	indf2,c
 19002  004C5A  0100               	movlb	0	; () banked
 19003  004C5C  4B6F               	infsnz	_inPipes& (0+255),f,b
 19004  004C5E  2B70               	incf	(_inPipes+1)& (0+255),f,b
 19005                           
 19006                           ; BSR set to: 0
 19007  004C60  0101               	movlb	1	; () banked
 19008  004C62  4B79               	infsnz	_pDst& (0+255),f,b
 19009  004C64  2B7A               	incf	(_pDst+1)& (0+255),f,b
 19010                           
 19011                           ; BSR set to: 1
 19012                           ;usb_device.c: 1816: byteToSend--;
 19013  004C66  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19014  004C68                     l237:
 19015                           
 19016                           ; BSR set to: 1
 19017  004C68  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19018  004C6A  B4D8               	btfsc	status,2,c
 19019  004C6C  0012               	return	
 19020  004C6E  D7E0               	goto	l238
 19021  004C70                     
 19022                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 19023  004C70  C06F  FFF6         	movff	_inPipes,tblptrl
 19024  004C74  C070  FFF7         	movff	_inPipes+1,tblptrh
 19025  004C78  6AF8               	clrf	tblptru,c
 19026  004C7A  C179  FFD9         	movff	_pDst,fsr2l
 19027  004C7E  C17A  FFDA         	movff	_pDst+1,fsr2h
 19028  004C82  0E0E               	movlw	(high __ramtop+-1)
 19029  004C84  64F7               	cpfsgt	tblptrh,c
 19030  004C86  D003               	bra	u8227
 19031  004C88  0008               	tblrd		*
 19032  004C8A  50F5               	movf	tablat,w,c
 19033  004C8C  D005               	bra	u8220
 19034  004C8E                     u8227:
 19035  004C8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 19036  004C92  CFF7 FFEA          	movff	tblptrh,fsr0h
 19037  004C96  50EF               	movf	indf0,w,c
 19038  004C98                     u8220:
 19039  004C98  6EDF               	movwf	indf2,c
 19040  004C9A  0100               	movlb	0	; () banked
 19041  004C9C  4B6F               	infsnz	_inPipes& (0+255),f,b
 19042  004C9E  2B70               	incf	(_inPipes+1)& (0+255),f,b
 19043                           
 19044                           ; BSR set to: 0
 19045  004CA0  0101               	movlb	1	; () banked
 19046  004CA2  4B79               	infsnz	_pDst& (0+255),f,b
 19047  004CA4  2B7A               	incf	(_pDst+1)& (0+255),f,b
 19048                           
 19049                           ; BSR set to: 1
 19050                           ;usb_device.c: 1824: byteToSend--;
 19051  004CA6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 19052  004CA8                     l241:
 19053                           
 19054                           ; BSR set to: 1
 19055  004CA8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 19056  004CAA  B4D8               	btfsc	status,2,c
 19057  004CAC  0012               	return	
 19058  004CAE  D7E0               	goto	l242
 19059  004CB0                     __end_of_USBCtrlTrfTxService:
 19060                           	opt stack 0
 19061                           tosu	equ	0xFFF
 19062                           tosh	equ	0xFFE
 19063                           tosl	equ	0xFFD
 19064                           pclath	equ	0xFFA
 19065                           tblptru	equ	0xFF8
 19066                           tblptrh	equ	0xFF7
 19067                           tblptrl	equ	0xFF6
 19068                           tablat	equ	0xFF5
 19069                           prodh	equ	0xFF4
 19070                           prodl	equ	0xFF3
 19071                           intcon	equ	0xFF2
 19072                           intcon3	equ	0xFF0
 19073                           indf0	equ	0xFEF
 19074                           postinc0	equ	0xFEE
 19075                           fsr0h	equ	0xFEA
 19076                           fsr0l	equ	0xFE9
 19077                           wreg	equ	0xFE8
 19078                           indf1	equ	0xFE7
 19079                           postdec1	equ	0xFE5
 19080                           plusw1	equ	0xFE3
 19081                           fsr1h	equ	0xFE2
 19082                           fsr1l	equ	0xFE1
 19083                           indf2	equ	0xFDF
 19084                           postinc2	equ	0xFDE
 19085                           postdec2	equ	0xFDD
 19086                           plusw2	equ	0xFDB
 19087                           fsr2h	equ	0xFDA
 19088                           fsr2l	equ	0xFD9
 19089                           status	equ	0xFD8
 19090                           
 19091 ;; *************** function _APP_DeviceMSDTasks *****************
 19092 ;; Defined at:
 19093 ;;		line 110 in file "app_device_msd.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;		None
 19096 ;; Auto vars:     Size  Location     Type
 19097 ;;		None
 19098 ;; Return value:  Size  Location     Type
 19099 ;;                  1    wreg      void 
 19100 ;; Registers used:
 19101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19102 ;; Tracked objects:
 19103 ;;		On entry : 0/0
 19104 ;;		On exit  : 0/0
 19105 ;;		Unchanged: 0/0
 19106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19111 ;;Total ram usage:        0 bytes
 19112 ;; Hardware stack levels used:    1
 19113 ;; Hardware stack levels required when called:   11
 19114 ;; This function calls:
 19115 ;;		_MSDTasks
 19116 ;; This function is called by:
 19117 ;;		_main
 19118 ;; This function uses a non-reentrant model
 19119 ;;
 19120                           
 19121                           	psect	text93
 19122  007386                     __ptext93:
 19123                           	opt stack 0
 19124  007386                     _APP_DeviceMSDTasks:
 19125                           	opt stack 19
 19126                           
 19127                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 19128                           
 19129                           ;incstack = 0
 19130  007386  0E20               	movlw	32
 19131  007388  605F               	cpfslt	_USBDeviceState,c
 19132  00738A  D001               	goto	l978
 19133  00738C  0012               	return	
 19134  00738E                     l978:
 19135                           
 19136                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 19137  00738E  B265               	btfsc	3941,1,c	;volatile
 19138  007390  0012               	return	
 19139                           
 19140                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 19141                           
 19142                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 19143  007392  ECDF  F00C         	call	_MSDTasks	;wreg free
 19144  007396  0012               	return		;funcret
 19145  007398                     __end_of_APP_DeviceMSDTasks:
 19146                           	opt stack 0
 19147                           tosu	equ	0xFFF
 19148                           tosh	equ	0xFFE
 19149                           tosl	equ	0xFFD
 19150                           pclath	equ	0xFFA
 19151                           tblptru	equ	0xFF8
 19152                           tblptrh	equ	0xFF7
 19153                           tblptrl	equ	0xFF6
 19154                           tablat	equ	0xFF5
 19155                           prodh	equ	0xFF4
 19156                           prodl	equ	0xFF3
 19157                           intcon	equ	0xFF2
 19158                           intcon3	equ	0xFF0
 19159                           indf0	equ	0xFEF
 19160                           postinc0	equ	0xFEE
 19161                           fsr0h	equ	0xFEA
 19162                           fsr0l	equ	0xFE9
 19163                           wreg	equ	0xFE8
 19164                           indf1	equ	0xFE7
 19165                           postdec1	equ	0xFE5
 19166                           plusw1	equ	0xFE3
 19167                           fsr1h	equ	0xFE2
 19168                           fsr1l	equ	0xFE1
 19169                           indf2	equ	0xFDF
 19170                           postinc2	equ	0xFDE
 19171                           postdec2	equ	0xFDD
 19172                           plusw2	equ	0xFDB
 19173                           fsr2h	equ	0xFDA
 19174                           fsr2l	equ	0xFD9
 19175                           status	equ	0xFD8
 19176                           
 19177 ;; *************** function _MSDTasks *****************
 19178 ;; Defined at:
 19179 ;;		line 335 in file "usb_device_msd.c"
 19180 ;; Parameters:    Size  Location     Type
 19181 ;;		None
 19182 ;; Auto vars:     Size  Location     Type
 19183 ;;  i               1   81[COMRAM] unsigned char 
 19184 ;; Return value:  Size  Location     Type
 19185 ;;                  1    wreg      unsigned char 
 19186 ;; Registers used:
 19187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19188 ;; Tracked objects:
 19189 ;;		On entry : 0/0
 19190 ;;		On exit  : 0/0
 19191 ;;		Unchanged: 0/0
 19192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19194 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19197 ;;Total ram usage:        6 bytes
 19198 ;; Hardware stack levels used:    1
 19199 ;; Hardware stack levels required when called:   10
 19200 ;; This function calls:
 19201 ;;		_MSDProcessCommand
 19202 ;;		_USBStallEndpoint
 19203 ;;		_USBTransferOnePacket
 19204 ;; This function is called by:
 19205 ;;		_APP_DeviceMSDTasks
 19206 ;; This function uses a non-reentrant model
 19207 ;;
 19208                           
 19209                           	psect	text94
 19210  0019BE                     __ptext94:
 19211                           	opt stack 0
 19212  0019BE                     _MSDTasks:
 19213                           	opt stack 19
 19214                           
 19215                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 19216                           
 19217                           ;incstack = 0
 19218  0019BE  0E20               	movlw	32
 19219  0019C0  185F               	xorwf	_USBDeviceState,w,c
 19220  0019C2  A4D8               	btfss	status,2,c
 19221  0019C4  0012               	return	
 19222  0019C6  D118               	goto	l554
 19223  0019C8                     
 19224                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 19225  0019C8  0100               	movlb	0	; () banked
 19226  0019CA  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 19227  0019CC  118C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19228  0019CE  B4D8               	btfsc	status,2,c
 19229  0019D0  D006               	goto	u11270
 19230                           
 19231                           ; BSR set to: 0
 19232  0019D2  C08B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19233  0019D6  C08C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19234  0019DA  BEDF               	btfsc	indf2,7,c
 19235  0019DC  0012               	return	
 19236  0019DE                     u11270:
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 19240                           
 19241                           ; BSR set to: 0
 19242  0019DE  0E00               	movlw	0
 19243  0019E0  6E52               	movwf	MSDTasks@i,c
 19244  0019E2                     l13681:
 19245                           
 19246                           ; BSR set to: 0
 19247  0019E2  0E1E               	movlw	30
 19248  0019E4  6452               	cpfsgt	MSDTasks@i,c
 19249  0019E6  D001               	goto	l559
 19250  0019E8  D014               	goto	u11290
 19251  0019EA                     l559:
 19252                           
 19253                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 19254                           
 19255                           ; BSR set to: 0
 19256  0019EA  5052               	movf	MSDTasks@i,w,c
 19257  0019EC  0D01               	mullw	1
 19258  0019EE  0E40               	movlw	64
 19259  0019F0  24F3               	addwf	prodl,w,c
 19260  0019F2  6ED9               	movwf	fsr2l,c
 19261  0019F4  0E0D               	movlw	13
 19262  0019F6  20F4               	addwfc	prodh,w,c
 19263  0019F8  6EDA               	movwf	fsr2h,c
 19264  0019FA  5052               	movf	MSDTasks@i,w,c
 19265  0019FC  0D01               	mullw	1
 19266  0019FE  0E00               	movlw	low _gblCBW
 19267  001A00  24F3               	addwf	prodl,w,c
 19268  001A02  6EE1               	movwf	fsr1l,c
 19269  001A04  0E01               	movlw	high _gblCBW
 19270  001A06  20F4               	addwfc	prodh,w,c
 19271  001A08  6EE2               	movwf	fsr1h,c
 19272  001A0A  CFDF FFE7          	movff	indf2,indf1
 19273  001A0E  2A52               	incf	MSDTasks@i,f,c
 19274  001A10  D7E8               	goto	l13681
 19275  001A12                     u11290:
 19276                           
 19277                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 19278  001A12  0100               	movlb	0	; () banked
 19279  001A14  EE20 F001          	lfsr	2,1
 19280  001A18  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 19281  001A1A  26D9               	addwf	fsr2l,f,c
 19282  001A1C  518C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19283  001A1E  22DA               	addwfc	fsr2h,f,c
 19284  001A20  0E1F               	movlw	31
 19285  001A22  18DE               	xorwf	postinc2,w,c
 19286  001A24  A4D8               	btfss	status,2,c
 19287  001A26  D072               	goto	l561
 19288                           
 19289                           ; BSR set to: 0
 19290  001A28  0E55               	movlw	85
 19291  001A2A  0101               	movlb	1	; () banked
 19292  001A2C  1900               	xorwf	_gblCBW& (0+255),w,b
 19293  001A2E  E16E               	bnz	l561
 19294  001A30  0E53               	movlw	83
 19295  001A32  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 19296  001A34  E16B               	bnz	l561
 19297  001A36  0E42               	movlw	66
 19298  001A38  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 19299  001A3A  E168               	bnz	l561
 19300  001A3C  0E43               	movlw	67
 19301  001A3E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 19302  001A40  A4D8               	btfss	status,2,c
 19303  001A42  D064               	goto	l561
 19304                           
 19305                           ; BSR set to: 1
 19306                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 19307  001A44  0E01               	movlw	1
 19308  001A46  0100               	movlb	0	; () banked
 19309  001A48  6F98               	movwf	_MSDCBWValid& (0+255),b
 19310                           
 19311                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 19312  001A4A  0101               	movlb	1	; () banked
 19313  001A4C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19314  001A4E  A4D8               	btfss	status,2,c
 19315  001A50  D052               	goto	l562
 19316                           
 19317                           ; BSR set to: 1
 19318  001A52  0E11               	movlw	17
 19319  001A54  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 19320  001A56  D04F               	goto	l562
 19321                           
 19322                           ; BSR set to: 1
 19323  001A58  510E               	movf	(_gblCBW+14)& (0+255),w,b
 19324  001A5A  B4D8               	btfsc	status,2,c
 19325  001A5C  D04C               	goto	l562
 19326                           
 19327                           ; BSR set to: 1
 19328  001A5E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 19329  001A62  0E3F               	movlw	63
 19330  001A64  164D               	andwf	??_MSDTasks,f,c
 19331  001A66  A4D8               	btfss	status,2,c
 19332  001A68  D046               	goto	l562
 19333                           
 19334                           ; BSR set to: 1
 19335                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 19336  001A6A  0E55               	movlw	85
 19337  001A6C  010D               	movlb	13	; () banked
 19338  001A6E  6F80               	movwf	128,b	;volatile
 19339  001A70  0E53               	movlw	83
 19340  001A72  6F81               	movwf	129,b	;volatile
 19341  001A74  0E42               	movlw	66
 19342  001A76  6F82               	movwf	130,b	;volatile
 19343  001A78  0E53               	movlw	83
 19344  001A7A  6F83               	movwf	131,b	;volatile
 19345                           
 19346                           ; BSR set to: 13
 19347                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 19348  001A7C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 19349  001A80  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 19350  001A84  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 19351  001A88  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 19352                           
 19353                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 19354  001A8C  0E00               	movlw	0
 19355  001A8E  6F88               	movwf	136,b	;volatile
 19356  001A90  0E00               	movlw	0
 19357  001A92  6F89               	movwf	137,b	;volatile
 19358  001A94  0E00               	movlw	0
 19359  001A96  6F8A               	movwf	138,b	;volatile
 19360  001A98  0E00               	movlw	0
 19361  001A9A  6F8B               	movwf	139,b	;volatile
 19362                           
 19363                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 19364  001A9C  0E00               	movlw	0
 19365  001A9E  6F8C               	movwf	140,b	;volatile
 19366                           
 19367                           ; BSR set to: 13
 19368                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 19369  001AA0  0100               	movlb	0	; () banked
 19370  001AA2  699F               	setf	_MSDCommandState& (0+255),b
 19371                           
 19372                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 19373  001AA4  0E00               	movlw	0
 19374  001AA6  6F9E               	movwf	_MSDReadState& (0+255),b
 19375                           
 19376                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 19377  001AA8  0E00               	movlw	0
 19378  001AAA  6F9D               	movwf	_MSDWriteState& (0+255),b
 19379                           
 19380                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 19381  001AAC  0E00               	movlw	0
 19382  001AAE  6F9C               	movwf	_MSDRetryAttempt& (0+255),b
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 19386  001AB0  0E03               	movlw	3
 19387  001AB2  0101               	movlb	1	; () banked
 19388  001AB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 19389  001AB6  B4D8               	btfsc	status,2,c
 19390  001AB8  D008               	goto	l563
 19391                           
 19392                           ; BSR set to: 1
 19393                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 19394  001ABA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 19395  001ABC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 19396  001ABE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 19397  001AC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 19398                           
 19399                           ; BSR set to: 1
 19400                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 19401  001AC2  0E00               	movlw	0
 19402  001AC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19403                           
 19404                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 19405  001AC6  0E00               	movlw	0
 19406  001AC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19407  001ACA                     l563:
 19408                           
 19409                           ; BSR set to: 1
 19410                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 19411                           
 19412                           ; BSR set to: 1
 19413  001ACA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 19414  001ACC  D002               	goto	l564
 19415                           
 19416                           ; BSR set to: 1
 19417                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 19418  001ACE  0E01               	movlw	1
 19419  001AD0  D001               	goto	L18
 19420  001AD2                     l564:
 19421                           
 19422                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 19423                           
 19424                           ; BSR set to: 0
 19425  001AD2  0E02               	movlw	2
 19426  001AD4                     L18:
 19427  001AD4  0100               	movlb	0	; () banked
 19428  001AD6  6FA0               	movwf	_MSD_State& (0+255),b
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 19432                           
 19433                           ; BSR set to: 0
 19434  001AD8  0101               	movlb	1	; () banked
 19435  001ADA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19436  001ADC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19437  001ADE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19438  001AE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19439  001AE2  B4D8               	btfsc	status,2,c
 19440  001AE4  D002               	goto	l566
 19441                           
 19442                           ; BSR set to: 1
 19443                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 19444  001AE6  0E00               	movlw	0
 19445  001AE8  D001               	goto	L19
 19446  001AEA                     l566:
 19447                           
 19448                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 19449                           
 19450                           ; BSR set to: 0
 19451  001AEA  0E01               	movlw	1
 19452  001AEC                     L19:
 19453  001AEC  0100               	movlb	0	; () banked
 19454  001AEE  6F99               	movwf	_MSDHostNoData& (0+255),b
 19455                           
 19456                           ; BSR set to: 0
 19457                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 19458                           
 19459                           ; BSR set to: 0
 19460  001AF0  C10F  F09F         	movff	_gblCBW+15,_MSDCommandState
 19461                           
 19462                           ;usb_device_msd.c: 454: }
 19463  001AF4  0012               	return	
 19464  001AF6                     l562:
 19465                           
 19466                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 19467                           
 19468                           ; BSR set to: 0
 19469  001AF6  0E01               	movlw	1
 19470  001AF8  6E01               	movwf	USBStallEndpoint@dir,c
 19471  001AFA  0E02               	movlw	2
 19472  001AFC  EC7E  F01E         	call	_USBStallEndpoint
 19473                           
 19474                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 19475  001B00  0E00               	movlw	0
 19476  001B02  6E01               	movwf	USBStallEndpoint@dir,c
 19477  001B04  0E02               	movlw	2
 19478  001B06  EC7E  F01E         	call	_USBStallEndpoint
 19479                           
 19480                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 19481  001B0A  0012               	return	
 19482  001B0C                     l561:
 19483                           
 19484                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 19485  001B0C  0E01               	movlw	1
 19486  001B0E  6E01               	movwf	USBStallEndpoint@dir,c
 19487  001B10  0E02               	movlw	2
 19488  001B12  EC7E  F01E         	call	_USBStallEndpoint
 19489                           
 19490                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 19491  001B16  0E00               	movlw	0
 19492  001B18  6E01               	movwf	USBStallEndpoint@dir,c
 19493  001B1A  0E02               	movlw	2
 19494  001B1C  EC7E  F01E         	call	_USBStallEndpoint
 19495                           
 19496                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 19497  001B20  0E00               	movlw	0
 19498  001B22  0100               	movlb	0	; () banked
 19499  001B24  6F98               	movwf	_MSDCBWValid& (0+255),b
 19500                           
 19501                           ; BSR set to: 0
 19502                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 19503                           
 19504                           ; BSR set to: 0
 19505  001B26  0012               	return	
 19506  001B28                     
 19507                           ; BSR set to: 0
 19508                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 19509                           
 19510                           ; BSR set to: 0
 19511  001B28  EC6D  F01D         	call	_MSDProcessCommand	;wreg free
 19512  001B2C  0AFF               	xorlw	255
 19513  001B2E  A4D8               	btfss	status,2,c
 19514  001B30  0012               	return	
 19515                           
 19516                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 19517  001B32  0E03               	movlw	3
 19518  001B34  0100               	movlb	0	; () banked
 19519  001B36  6FA0               	movwf	_MSD_State& (0+255),b
 19520                           
 19521                           ; BSR set to: 0
 19522                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 19523  001B38  0012               	return	
 19524  001B3A                     
 19525                           ; BSR set to: 0
 19526                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 19527                           
 19528                           ; BSR set to: 0
 19529  001B3A  EC6D  F01D         	call	_MSDProcessCommand	;wreg free
 19530  001B3E  0AFF               	xorlw	255
 19531  001B40  A4D8               	btfss	status,2,c
 19532  001B42  0012               	return	
 19533                           
 19534                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 19535  001B44  010D               	movlb	13	; () banked
 19536  001B46  518C               	movf	140,w,b	;volatile
 19537  001B48  A4D8               	btfss	status,2,c
 19538  001B4A  D008               	goto	l575
 19539                           
 19540                           ; BSR set to: 13
 19541  001B4C  5188               	movf	136,w,b	;volatile
 19542  001B4E  1189               	iorwf	137,w,b	;volatile
 19543  001B50  118A               	iorwf	138,w,b	;volatile
 19544  001B52  118B               	iorwf	139,w,b	;volatile
 19545  001B54  B4D8               	btfsc	status,2,c
 19546  001B56  D002               	goto	l575
 19547                           
 19548                           ; BSR set to: 13
 19549                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 19550  001B58  0E02               	movlw	2
 19551  001B5A  6F8C               	movwf	140,b	;volatile
 19552  001B5C                     l575:
 19553                           
 19554                           ; BSR set to: 13
 19555                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 19556  001B5C  0E03               	movlw	3
 19557  001B5E  0100               	movlb	0	; () banked
 19558  001B60  6FA0               	movwf	_MSD_State& (0+255),b
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 19562  001B62  0012               	return	
 19563  001B64                     
 19564                           ; BSR set to: 0
 19565                           
 19566                           ; BSR set to: 0
 19567  001B64  C079  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 19568  001B68  C07A  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 19569                           
 19570                           ; BSR set to: 0
 19571                           
 19572                           ; BSR set to: 0
 19573                           
 19574                           ; BSR set to: 0
 19575  001B6C  504E               	movf	_MSDTasks$2372,w,c
 19576  001B6E  104F               	iorwf	_MSDTasks$2372+1,w,c
 19577  001B70  B4D8               	btfsc	status,2,c
 19578  001B72  D00A               	goto	l577
 19579                           
 19580                           ; BSR set to: 0
 19581  001B74  C079  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 19582  001B78  C07A  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 19583                           
 19584                           ; BSR set to: 0
 19585                           
 19586                           ; BSR set to: 0
 19587                           
 19588                           ; BSR set to: 0
 19589                           
 19590                           ; BSR set to: 0
 19591  001B7C  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 19592  001B80  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 19593  001B84  BEDF               	btfsc	indf2,7,c
 19594  001B86  0012               	return	
 19595  001B88                     l577:
 19596                           
 19597                           ; BSR set to: 0
 19598                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 19599                           
 19600                           ; BSR set to: 0
 19601  001B88  0E01               	movlw	1
 19602  001B8A  6E01               	movwf	USBTransferOnePacket@dir,c
 19603  001B8C  0E80               	movlw	128
 19604  001B8E  6E02               	movwf	USBTransferOnePacket@data,c
 19605  001B90  0E0D               	movlw	13
 19606  001B92  6E03               	movwf	USBTransferOnePacket@data+1,c
 19607  001B94  0E0D               	movlw	13
 19608  001B96  6E04               	movwf	USBTransferOnePacket@len,c
 19609  001B98  0E02               	movlw	2
 19610  001B9A  EC89  F020         	call	_USBTransferOnePacket
 19611  001B9E  C001  F089         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19612  001BA2  C002  F08A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19613                           
 19614                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 19615  001BA6  0100               	movlb	0	; () banked
 19616  001BA8  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 19617  001BAA  118C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19618  001BAC  B4D8               	btfsc	status,2,c
 19619  001BAE  D006               	goto	u11460
 19620                           
 19621                           ; BSR set to: 0
 19622  001BB0  C08B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19623  001BB4  C08C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19624  001BB8  BEDF               	btfsc	indf2,7,c
 19625  001BBA  D00F               	goto	l586
 19626  001BBC                     u11460:
 19627                           
 19628                           ; BSR set to: 0
 19629                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19630                           
 19631                           ; BSR set to: 0
 19632  001BBC  0E00               	movlw	0
 19633  001BBE  6E01               	movwf	USBTransferOnePacket@dir,c
 19634  001BC0  0E40               	movlw	64
 19635  001BC2  6E02               	movwf	USBTransferOnePacket@data,c
 19636  001BC4  0E0D               	movlw	13
 19637  001BC6  6E03               	movwf	USBTransferOnePacket@data+1,c
 19638  001BC8  0E40               	movlw	64
 19639  001BCA  6E04               	movwf	USBTransferOnePacket@len,c
 19640  001BCC  0E02               	movlw	2
 19641  001BCE  EC89  F020         	call	_USBTransferOnePacket
 19642  001BD2  C001  F08B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19643  001BD6  C002  F08C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19644  001BDA                     l586:
 19645                           
 19646                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 19647  001BDA  0E00               	movlw	0
 19648  001BDC  0100               	movlb	0	; () banked
 19649  001BDE  6FA0               	movwf	_MSD_State& (0+255),b
 19650                           
 19651                           ;usb_device_msd.c: 513: break;
 19652  001BE0  0012               	return	
 19653  001BE2                     
 19654                           ; BSR set to: 0
 19655                           ;usb_device_msd.c: 518: MSD_State=0x00;
 19656                           
 19657                           ; BSR set to: 0
 19658  001BE2  0E00               	movlw	0
 19659  001BE4  6FA0               	movwf	_MSD_State& (0+255),b
 19660                           
 19661                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 19662  001BE6  0E02               	movlw	2
 19663  001BE8  010D               	movlb	13	; () banked
 19664  001BEA  6F8C               	movwf	140,b	;volatile
 19665                           
 19666                           ; BSR set to: 13
 19667                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 19668  001BEC  0E00               	movlw	0
 19669  001BEE  6E01               	movwf	USBStallEndpoint@dir,c
 19670  001BF0  0E02               	movlw	2
 19671  001BF2  EC7E  F01E         	call	_USBStallEndpoint
 19672                           
 19673                           ;usb_device_msd.c: 521: }
 19674  001BF6  0012               	return	
 19675  001BF8                     l554:
 19676  001BF8  0100               	movlb	0	; () banked
 19677  001BFA  51A0               	movf	_MSD_State& (0+255),w,b
 19678                           
 19679                           ; Switch size 1, requested type "space"
 19680                           ; Number of cases is 4, Range of values is 0 to 3
 19681                           ; switch strategies available:
 19682                           ; Name         Instructions Cycles
 19683                           ; simple_byte           13     7 (average)
 19684                           ;	Chosen strategy is simple_byte
 19685  001BFC  0A00               	xorlw	0	; case 0
 19686  001BFE  B4D8               	btfsc	status,2,c
 19687  001C00  D6E3               	goto	l555
 19688  001C02  0A01               	xorlw	1	; case 1
 19689  001C04  B4D8               	btfsc	status,2,c
 19690  001C06  D790               	goto	l571
 19691  001C08  0A03               	xorlw	3	; case 2
 19692  001C0A  B4D8               	btfsc	status,2,c
 19693  001C0C  D796               	goto	l573
 19694  001C0E  0A01               	xorlw	1	; case 3
 19695  001C10  B4D8               	btfsc	status,2,c
 19696  001C12  D7A8               	goto	l576
 19697  001C14  D7E6               	goto	l589
 19698  001C16                     __end_of_MSDTasks:
 19699                           	opt stack 0
 19700                           tosu	equ	0xFFF
 19701                           tosh	equ	0xFFE
 19702                           tosl	equ	0xFFD
 19703                           pclath	equ	0xFFA
 19704                           tblptru	equ	0xFF8
 19705                           tblptrh	equ	0xFF7
 19706                           tblptrl	equ	0xFF6
 19707                           tablat	equ	0xFF5
 19708                           prodh	equ	0xFF4
 19709                           prodl	equ	0xFF3
 19710                           intcon	equ	0xFF2
 19711                           intcon3	equ	0xFF0
 19712                           indf0	equ	0xFEF
 19713                           postinc0	equ	0xFEE
 19714                           fsr0h	equ	0xFEA
 19715                           fsr0l	equ	0xFE9
 19716                           wreg	equ	0xFE8
 19717                           indf1	equ	0xFE7
 19718                           postdec1	equ	0xFE5
 19719                           plusw1	equ	0xFE3
 19720                           fsr1h	equ	0xFE2
 19721                           fsr1l	equ	0xFE1
 19722                           indf2	equ	0xFDF
 19723                           postinc2	equ	0xFDE
 19724                           postdec2	equ	0xFDD
 19725                           plusw2	equ	0xFDB
 19726                           fsr2h	equ	0xFDA
 19727                           fsr2l	equ	0xFD9
 19728                           status	equ	0xFD8
 19729                           
 19730 ;; *************** function _MSDProcessCommand *****************
 19731 ;; Defined at:
 19732 ;;		line 553 in file "usb_device_msd.c"
 19733 ;; Parameters:    Size  Location     Type
 19734 ;;		None
 19735 ;; Auto vars:     Size  Location     Type
 19736 ;;		None
 19737 ;; Return value:  Size  Location     Type
 19738 ;;                  1    wreg      unsigned char 
 19739 ;; Registers used:
 19740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19741 ;; Tracked objects:
 19742 ;;		On entry : 0/0
 19743 ;;		On exit  : 0/0
 19744 ;;		Unchanged: 0/0
 19745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19748 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19749 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19750 ;;Total ram usage:        5 bytes
 19751 ;; Hardware stack levels used:    1
 19752 ;; Hardware stack levels required when called:    9
 19753 ;; This function calls:
 19754 ;;		_ExternalFlash_MediaDetect
 19755 ;;		_ExternalFlash_MediaInitialize
 19756 ;;		_MSDProcessCommandMediaAbsent
 19757 ;;		_MSDProcessCommandMediaPresent
 19758 ;; This function is called by:
 19759 ;;		_MSDTasks
 19760 ;; This function uses a non-reentrant model
 19761 ;;
 19762                           
 19763                           	psect	text95
 19764  003ADA                     __ptext95:
 19765                           	opt stack 0
 19766  003ADA                     _MSDProcessCommand:
 19767                           	opt stack 19
 19768                           
 19769                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19770                           
 19771                           ;incstack = 0
 19772  003ADA  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19773  003ADE  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19774  003AE2  D801               	call	u10398
 19775  003AE4  D00A               	goto	u10399
 19776  003AE6                     u10398:
 19777  003AE6  0005               	push	
 19778  003AE8  6EFA               	movwf	pclath,c
 19779  003AEA  0101               	movlb	1	; () banked
 19780  003AEC  51EF               	movf	(_LUN+6)& (0+255),w,b
 19781  003AEE  6EFD               	movwf	tosl,c
 19782  003AF0  51F0               	movf	(_LUN+7)& (0+255),w,b
 19783  003AF2  6EFE               	movwf	tosh,c
 19784  003AF4  6AFF               	clrf	tosu,c
 19785  003AF6  50FA               	movf	pclath,w,c
 19786  003AF8  0012               	return		;indir
 19787  003AFA                     u10399:
 19788  003AFA  0900               	iorlw	0
 19789  003AFC  B4D8               	btfsc	status,2,c
 19790  003AFE  D00C               	goto	u10410
 19791  003B00  0101               	movlb	1	; () banked
 19792  003B02  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19793  003B04  0D01               	mullw	1
 19794  003B06  0E9A               	movlw	low _SoftDetach
 19795  003B08  24F3               	addwf	prodl,w,c
 19796  003B0A  6ED9               	movwf	fsr2l,c
 19797  003B0C  0E00               	movlw	high _SoftDetach
 19798  003B0E  20F4               	addwfc	prodh,w,c
 19799  003B10  6EDA               	movwf	fsr2h,c
 19800  003B12  04DE               	decf	postinc2,w,c
 19801  003B14  A4D8               	btfss	status,2,c
 19802  003B16  D019               	goto	l592
 19803  003B18                     u10410:
 19804                           
 19805                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19806                           
 19807                           ; BSR set to: 1
 19808  003B18  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19809  003B1C  0E01               	movlw	1
 19810  003B1E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19811  003B20  0E00               	movlw	0
 19812  003B22  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19813  003B24  2A48               	incf	??_MSDProcessCommand,f,c
 19814  003B26  D003               	goto	u10424
 19815  003B28                     u10425:
 19816  003B28  90D8               	bcf	status,0,c
 19817  003B2A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19818  003B2C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19819  003B2E                     u10424:
 19820  003B2E  2E48               	decfsz	??_MSDProcessCommand,f,c
 19821  003B30  D7FB               	goto	u10425
 19822  003B32  1C49               	comf	??_MSDProcessCommand+1,w,c
 19823  003B34  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19824  003B36  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19825  003B38  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19826  003B3A  504B               	movf	??_MSDProcessCommand+3,w,c
 19827  003B3C  0101               	movlb	1	; () banked
 19828  003B3E  1773               	andwf	_gblMediaPresent& (0+255),f,b
 19829  003B40  504C               	movf	??_MSDProcessCommand+4,w,c
 19830  003B42  1774               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19831                           
 19832                           ; BSR set to: 1
 19833                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19834  003B44  ECBC  F031         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19835                           
 19836                           ;usb_device_msd.c: 563: }
 19837  003B48  D04E               	goto	l599
 19838  003B4A                     l592:
 19839                           
 19840                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19841  003B4A  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19842  003B4E  0E01               	movlw	1
 19843  003B50  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19844  003B52  0E00               	movlw	0
 19845  003B54  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19846  003B56  2A48               	incf	??_MSDProcessCommand,f,c
 19847  003B58  D003               	goto	u10434
 19848  003B5A                     u10435:
 19849  003B5A  90D8               	bcf	status,0,c
 19850  003B5C  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19851  003B5E  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19852  003B60                     u10434:
 19853  003B60  2E48               	decfsz	??_MSDProcessCommand,f,c
 19854  003B62  D7FB               	goto	u10435
 19855  003B64  0101               	movlb	1	; () banked
 19856  003B66  5173               	movf	_gblMediaPresent& (0+255),w,b
 19857  003B68  1649               	andwf	??_MSDProcessCommand+1,f,c
 19858  003B6A  5174               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19859  003B6C  164A               	andwf	??_MSDProcessCommand+2,f,c
 19860  003B6E  5049               	movf	??_MSDProcessCommand+1,w,c
 19861  003B70  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19862  003B72  A4D8               	btfss	status,2,c
 19863  003B74  D036               	goto	l596
 19864                           
 19865                           ; BSR set to: 1
 19866                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19867  003B76  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19868  003B7A  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19869  003B7E  D801               	call	u10458
 19870  003B80  D009               	goto	u10459
 19871  003B82                     u10458:
 19872  003B82  0005               	push	
 19873  003B84  6EFA               	movwf	pclath,c
 19874  003B86  51E9               	movf	_LUN& (0+255),w,b
 19875  003B88  6EFD               	movwf	tosl,c
 19876  003B8A  51EA               	movf	(_LUN+1)& (0+255),w,b
 19877  003B8C  6EFE               	movwf	tosh,c
 19878  003B8E  6AFF               	clrf	tosu,c
 19879  003B90  50FA               	movf	pclath,w,c
 19880  003B92  0012               	return		;indir
 19881  003B94                     u10459:
 19882  003B94  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19883  003B96  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19884  003B98  B4D8               	btfsc	status,2,c
 19885  003B9A  D020               	goto	l597
 19886                           
 19887                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19888  003B9C  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19889  003BA0  0E01               	movlw	1
 19890  003BA2  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19891  003BA4  0E00               	movlw	0
 19892  003BA6  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19893  003BA8  2A48               	incf	??_MSDProcessCommand,f,c
 19894  003BAA  D003               	goto	u10474
 19895  003BAC                     u10475:
 19896  003BAC  90D8               	bcf	status,0,c
 19897  003BAE  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19898  003BB0  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19899  003BB2                     u10474:
 19900  003BB2  2E48               	decfsz	??_MSDProcessCommand,f,c
 19901  003BB4  D7FB               	goto	u10475
 19902  003BB6  5049               	movf	??_MSDProcessCommand+1,w,c
 19903  003BB8  0101               	movlb	1	; () banked
 19904  003BBA  1373               	iorwf	_gblMediaPresent& (0+255),f,b
 19905  003BBC  504A               	movf	??_MSDProcessCommand+2,w,c
 19906  003BBE  1374               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19907                           
 19908                           ; BSR set to: 1
 19909                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19910  003BC0  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19911  003BC2  0BF0               	andlw	-16
 19912  003BC4  0906               	iorlw	6
 19913  003BC6  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19914                           
 19915                           ; BSR set to: 1
 19916                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19917  003BC8  0E28               	movlw	40
 19918  003BCA  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19919                           
 19920                           ; BSR set to: 1
 19921                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19922  003BCC  0E00               	movlw	0
 19923  003BCE  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19924                           
 19925                           ; BSR set to: 1
 19926                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19927  003BD0  0E01               	movlw	1
 19928  003BD2  010D               	movlb	13	; () banked
 19929  003BD4  6F8C               	movwf	140,b	;volatile
 19930                           
 19931                           ; BSR set to: 13
 19932                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19933  003BD6  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19934                           
 19935                           ;usb_device_msd.c: 589: }
 19936  003BDA  D005               	goto	l599
 19937  003BDC                     l597:
 19938                           
 19939                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19940  003BDC  ECBC  F031         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19941                           
 19942                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19943  003BE0  D002               	goto	l599
 19944  003BE2                     l596:
 19945                           
 19946                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19947  003BE2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19948  003BE6                     l599:
 19949                           
 19950                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19951  003BE6  0100               	movlb	0	; () banked
 19952  003BE8  519F               	movf	_MSDCommandState& (0+255),w,b
 19953  003BEA  0012               	return	
 19954  003BEC                     __end_of_MSDProcessCommand:
 19955                           	opt stack 0
 19956                           tosu	equ	0xFFF
 19957                           tosh	equ	0xFFE
 19958                           tosl	equ	0xFFD
 19959                           pclath	equ	0xFFA
 19960                           tblptru	equ	0xFF8
 19961                           tblptrh	equ	0xFF7
 19962                           tblptrl	equ	0xFF6
 19963                           tablat	equ	0xFF5
 19964                           prodh	equ	0xFF4
 19965                           prodl	equ	0xFF3
 19966                           intcon	equ	0xFF2
 19967                           intcon3	equ	0xFF0
 19968                           indf0	equ	0xFEF
 19969                           postinc0	equ	0xFEE
 19970                           fsr0h	equ	0xFEA
 19971                           fsr0l	equ	0xFE9
 19972                           wreg	equ	0xFE8
 19973                           indf1	equ	0xFE7
 19974                           postdec1	equ	0xFE5
 19975                           plusw1	equ	0xFE3
 19976                           fsr1h	equ	0xFE2
 19977                           fsr1l	equ	0xFE1
 19978                           indf2	equ	0xFDF
 19979                           postinc2	equ	0xFDE
 19980                           postdec2	equ	0xFDD
 19981                           plusw2	equ	0xFDB
 19982                           fsr2h	equ	0xFDA
 19983                           fsr2l	equ	0xFD9
 19984                           status	equ	0xFD8
 19985                           
 19986 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19987 ;; Defined at:
 19988 ;;		line 635 in file "usb_device_msd.c"
 19989 ;; Parameters:    Size  Location     Type
 19990 ;;		None
 19991 ;; Auto vars:     Size  Location     Type
 19992 ;;		None
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  1    wreg      void 
 19995 ;; Registers used:
 19996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20006 ;;Total ram usage:        0 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:    8
 20009 ;; This function calls:
 20010 ;;		_MSDErrorHandler
 20011 ;;		_MSDProcessCommandMediaPresent
 20012 ;;		_ResetSenseData
 20013 ;; This function is called by:
 20014 ;;		_MSDProcessCommand
 20015 ;; This function uses a non-reentrant model
 20016 ;;
 20017                           
 20018                           	psect	text96
 20019  006378                     __ptext96:
 20020                           	opt stack 0
 20021  006378                     _MSDProcessCommandMediaAbsent:
 20022                           	opt stack 19
 20023                           
 20024                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;incstack = 0
 20028  006378  D01E               	goto	l603
 20029  00637A                     
 20030                           ;usb_device_msd.c: 646: ResetSenseData();
 20031  00637A  ECED  F031         	call	_ResetSenseData	;wreg free
 20032                           
 20033                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 20034  00637E  0101               	movlb	1	; () banked
 20035  006380  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20036  006382  0BF0               	andlw	-16
 20037  006384  0902               	iorlw	2
 20038  006386  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20039                           
 20040                           ; BSR set to: 1
 20041                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 20042  006388  0E3A               	movlw	58
 20043  00638A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20044                           
 20045                           ; BSR set to: 1
 20046                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 20047  00638C  0E00               	movlw	0
 20048  00638E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20049                           
 20050                           ; BSR set to: 1
 20051                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 20052  006390  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 20053                           
 20054                           ;usb_device_msd.c: 655: break;
 20055  006394  0012               	return	
 20056  006396                     
 20057                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 20058  006396  0E01               	movlw	1
 20059  006398  010D               	movlb	13	; () banked
 20060  00639A  6F8C               	movwf	140,b	;volatile
 20061                           
 20062                           ; BSR set to: 13
 20063                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 20064  00639C  0100               	movlb	0	; () banked
 20065  00639E  699F               	setf	_MSDCommandState& (0+255),b
 20066                           
 20067                           ;usb_device_msd.c: 665: break;
 20068  0063A0  0012               	return	
 20069  0063A2                     
 20070                           ; BSR set to: 0
 20071                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 20072                           
 20073                           ; BSR set to: 0
 20074  0063A2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 20075                           
 20076                           ;usb_device_msd.c: 671: break;
 20077  0063A6  0012               	return	
 20078  0063A8                     
 20079                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 20080  0063A8  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 20081                           
 20082                           ;usb_device_msd.c: 677: break;
 20083  0063AC  0012               	return	
 20084  0063AE                     
 20085                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 20086  0063AE  0E7F               	movlw	127
 20087  0063B0  EC85  F01F         	call	_MSDErrorHandler
 20088                           
 20089                           ;usb_device_msd.c: 685: }
 20090                           
 20091                           ;usb_device_msd.c: 684: break;
 20092  0063B4  0012               	return	
 20093  0063B6                     l603:
 20094  0063B6  0100               	movlb	0	; () banked
 20095  0063B8  519F               	movf	_MSDCommandState& (0+255),w,b
 20096                           
 20097                           ; Switch size 1, requested type "space"
 20098                           ; Number of cases is 5, Range of values is 0 to 253
 20099                           ; switch strategies available:
 20100                           ; Name         Instructions Cycles
 20101                           ; simple_byte           16     9 (average)
 20102                           ;	Chosen strategy is simple_byte
 20103  0063BA  0A00               	xorlw	0	; case 0
 20104  0063BC  B4D8               	btfsc	status,2,c
 20105  0063BE  D7EB               	goto	l606
 20106  0063C0  0A03               	xorlw	3	; case 3
 20107  0063C2  B4D8               	btfsc	status,2,c
 20108  0063C4  D7DA               	goto	l604
 20109  0063C6  0A11               	xorlw	17	; case 18
 20110  0063C8  B4D8               	btfsc	status,2,c
 20111  0063CA  D7EB               	goto	l608
 20112  0063CC  0A0C               	xorlw	12	; case 30
 20113  0063CE  B4D8               	btfsc	status,2,c
 20114  0063D0  D7E2               	goto	l606
 20115  0063D2  0AE3               	xorlw	227	; case 253
 20116  0063D4  B4D8               	btfsc	status,2,c
 20117  0063D6  D7E8               	goto	l609
 20118  0063D8  D7EA               	goto	l610
 20119  0063DA                     __end_of_MSDProcessCommandMediaAbsent:
 20120                           	opt stack 0
 20121                           tosu	equ	0xFFF
 20122                           tosh	equ	0xFFE
 20123                           tosl	equ	0xFFD
 20124                           pclath	equ	0xFFA
 20125                           tblptru	equ	0xFF8
 20126                           tblptrh	equ	0xFF7
 20127                           tblptrl	equ	0xFF6
 20128                           tablat	equ	0xFF5
 20129                           prodh	equ	0xFF4
 20130                           prodl	equ	0xFF3
 20131                           intcon	equ	0xFF2
 20132                           intcon3	equ	0xFF0
 20133                           indf0	equ	0xFEF
 20134                           postinc0	equ	0xFEE
 20135                           fsr0h	equ	0xFEA
 20136                           fsr0l	equ	0xFE9
 20137                           wreg	equ	0xFE8
 20138                           indf1	equ	0xFE7
 20139                           postdec1	equ	0xFE5
 20140                           plusw1	equ	0xFE3
 20141                           fsr1h	equ	0xFE2
 20142                           fsr1l	equ	0xFE1
 20143                           indf2	equ	0xFDF
 20144                           postinc2	equ	0xFDE
 20145                           postdec2	equ	0xFDD
 20146                           plusw2	equ	0xFDB
 20147                           fsr2h	equ	0xFDA
 20148                           fsr2l	equ	0xFD9
 20149                           status	equ	0xFD8
 20150                           
 20151 ;; *************** function _MSDProcessCommandMediaPresent *****************
 20152 ;; Defined at:
 20153 ;;		line 712 in file "usb_device_msd.c"
 20154 ;; Parameters:    Size  Location     Type
 20155 ;;		None
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  capacity        4   66[COMRAM] struct .
 20158 ;;  sectorSize      4   62[COMRAM] struct .
 20159 ;;  i               1   70[COMRAM] unsigned char 
 20160 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 20161 ;; Return value:  Size  Location     Type
 20162 ;;                  1    wreg      void 
 20163 ;; Registers used:
 20164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20165 ;; Tracked objects:
 20166 ;;		On entry : 0/0
 20167 ;;		On exit  : 0/0
 20168 ;;		Unchanged: 0/0
 20169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20171 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20173 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20174 ;;Total ram usage:       14 bytes
 20175 ;; Hardware stack levels used:    1
 20176 ;; Hardware stack levels required when called:    7
 20177 ;; This function calls:
 20178 ;;		_ExternalFlash_CapacityRead
 20179 ;;		_ExternalFlash_SectorSizeRead
 20180 ;;		_ExternalFlash_WriteProtectStateGet
 20181 ;;		_MSDCheckForErrorCases
 20182 ;;		_MSDComputeDeviceInAndResidue
 20183 ;;		_MSDErrorHandler
 20184 ;;		_MSDReadHandler
 20185 ;;		_MSDWriteHandler
 20186 ;;		_ResetSenseData
 20187 ;;		_USBTransferOnePacket
 20188 ;;		_memcpy
 20189 ;; This function is called by:
 20190 ;;		_MSDProcessCommand
 20191 ;;		_MSDProcessCommandMediaAbsent
 20192 ;; This function uses a non-reentrant model
 20193 ;;
 20194                           
 20195                           	psect	text97
 20196  00049C                     __ptext97:
 20197                           	opt stack 0
 20198  00049C                     _MSDProcessCommandMediaPresent:
 20199                           	opt stack 20
 20200                           
 20201                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 20202                           
 20203                           ;incstack = 0
 20204  00049C  D1B9               	goto	l614
 20205  00049E                     
 20206                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 20207  00049E  EC03  F012         	call	_MSDReadHandler	;wreg free
 20208  0004A2  0900               	iorlw	0
 20209  0004A4  A4D8               	btfss	status,2,c
 20210  0004A6  0012               	return	
 20211                           
 20212                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 20213  0004A8  0100               	movlb	0	; () banked
 20214  0004AA  699F               	setf	_MSDCommandState& (0+255),b
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 20218  0004AC  0012               	return	
 20219  0004AE                     
 20220                           ; BSR set to: 0
 20221                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 20222                           
 20223                           ; BSR set to: 0
 20224  0004AE  EC0F  F009         	call	_MSDWriteHandler	;wreg free
 20225  0004B2  0900               	iorlw	0
 20226  0004B4  A4D8               	btfss	status,2,c
 20227  0004B6  0012               	return	
 20228                           
 20229                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 20230  0004B8  0100               	movlb	0	; () banked
 20231  0004BA  699F               	setf	_MSDCommandState& (0+255),b
 20232                           
 20233                           ; BSR set to: 0
 20234                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 20235  0004BC  0012               	return	
 20236  0004BE                     
 20237                           ; BSR set to: 0
 20238                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 20239                           
 20240                           ; BSR set to: 0
 20241  0004BE  0599               	decf	_MSDHostNoData& (0+255),w,b
 20242  0004C0  A4D8               	btfss	status,2,c
 20243  0004C2  D002               	goto	l621
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 20247  0004C4  699F               	setf	_MSDCommandState& (0+255),b
 20248                           
 20249                           ;usb_device_msd.c: 751: break;
 20250  0004C6  0012               	return	
 20251  0004C8                     l621:
 20252                           
 20253                           ; BSR set to: 0
 20254                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 20255  0004C8  C112  F088         	movff	_gblCBW+18,_TransferLength+1
 20256                           
 20257                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 20258  0004CC  C113  F087         	movff	_gblCBW+19,_TransferLength
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 20262  0004D0  C087  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 20263  0004D4  C088  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 20264  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 20265  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 20266  0004DC  ECE4  F022         	call	_MSDCheckForErrorCases	;wreg free
 20267  0004E0  0900               	iorlw	0
 20268  0004E2  A4D8               	btfss	status,2,c
 20269  0004E4  0012               	return	
 20270                           
 20271                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 20272                           
 20273                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 20274  0004E6  0E00               	movlw	0
 20275  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20276  0004EA  0E24               	movlw	36
 20277  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20278  0004EE  EC29  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20279                           
 20280                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 20281  0004F2  0E00               	movlw	0
 20282  0004F4  6E01               	movwf	memcpy@d1,c
 20283  0004F6  0E06               	movlw	6
 20284  0004F8  6E02               	movwf	memcpy@d1+1,c
 20285  0004FA  0E21               	movlw	low _inq_resp
 20286  0004FC  6E03               	movwf	memcpy@s1,c
 20287  0004FE  0E8F               	movlw	high _inq_resp
 20288  000500  6E04               	movwf	memcpy@s1+1,c
 20289  000502  5003               	movf	memcpy@s1,w,c
 20290  000504  1004               	iorwf	memcpy@s1+1,w,c
 20291  000506  A4D8               	btfss	status,2,c
 20292  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 20293  00050A  6E05               	movwf	memcpy@s1+2,c
 20294  00050C  0E00               	movlw	0
 20295  00050E  6E07               	movwf	memcpy@n+1,c
 20296  000510  0E24               	movlw	36
 20297  000512  6E06               	movwf	memcpy@n,c
 20298  000514  EC25  F031         	call	_memcpy	;wreg free
 20299                           
 20300                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 20301  000518  0EFD               	movlw	253
 20302  00051A  0100               	movlb	0	; () banked
 20303  00051C  6F9F               	movwf	_MSDCommandState& (0+255),b
 20304                           
 20305                           ;usb_device_msd.c: 773: break;
 20306  00051E  0012               	return	
 20307  000520                     
 20308                           ; BSR set to: 0
 20309                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 20310                           
 20311                           ; BSR set to: 0
 20312  000520  C1F7  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 20313  000524  C1F8  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 20314  000528  D801               	call	u9528
 20315  00052A  D00A               	goto	u9529
 20316  00052C                     u9528:
 20317  00052C  0005               	push	
 20318  00052E  6EFA               	movwf	pclath,c
 20319  000530  0101               	movlb	1	; () banked
 20320  000532  51EB               	movf	(_LUN+2)& (0+255),w,b
 20321  000534  6EFD               	movwf	tosl,c
 20322  000536  51EC               	movf	(_LUN+3)& (0+255),w,b
 20323  000538  6EFE               	movwf	tosh,c
 20324  00053A  6AFF               	clrf	tosu,c
 20325  00053C  50FA               	movf	pclath,w,c
 20326  00053E  0012               	return		;indir
 20327  000540                     u9529:
 20328  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 20329  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 20330  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 20331  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 20332                           
 20333                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 20334  000550  C1F7  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 20335  000554  C1F8  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 20336  000558  D801               	call	u9538
 20337  00055A  D00A               	goto	u9539
 20338  00055C                     u9538:
 20339  00055C  0005               	push	
 20340  00055E  6EFA               	movwf	pclath,c
 20341  000560  0101               	movlb	1	; () banked
 20342  000562  51ED               	movf	(_LUN+4)& (0+255),w,b
 20343  000564  6EFD               	movwf	tosl,c
 20344  000566  51EE               	movf	(_LUN+5)& (0+255),w,b
 20345  000568  6EFE               	movwf	tosh,c
 20346  00056A  6AFF               	clrf	tosu,c
 20347  00056C  50FA               	movf	pclath,w,c
 20348  00056E  0012               	return		;indir
 20349  000570                     u9539:
 20350  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 20351  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 20352  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 20353  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 20354                           
 20355                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 20356  00057C  EE26 F000          	lfsr	2,1536
 20357  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 20358                           
 20359                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 20360  000584  EE26 F001          	lfsr	2,1537	;volatile
 20361  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 20362                           
 20363                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 20364  00058C  EE26 F002          	lfsr	2,1538	;volatile
 20365  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 20366                           
 20367                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 20368  000594  EE26 F003          	lfsr	2,1539	;volatile
 20369  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 20370                           
 20371                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 20372  00059C  EE26 F004          	lfsr	2,1540	;volatile
 20373  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 20374                           
 20375                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 20376  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 20377  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 20378                           
 20379                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 20380  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 20381  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 20382                           
 20383                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 20384  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 20385  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 20386                           
 20387                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 20388  0005BC  0E00               	movlw	0
 20389  0005BE  0100               	movlb	0	; () banked
 20390  0005C0  6F88               	movwf	(_TransferLength+1)& (0+255),b
 20391  0005C2  0E08               	movlw	8
 20392  0005C4  6F87               	movwf	_TransferLength& (0+255),b
 20393                           
 20394                           ; BSR set to: 0
 20395                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 20396  0005C6  0E00               	movlw	0
 20397  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20398  0005CA  0E08               	movlw	8
 20399  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20400  0005CE  EC29  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20401                           
 20402                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 20403  0005D2  0EFD               	movlw	253
 20404  0005D4  0100               	movlb	0	; () banked
 20405  0005D6  6F9F               	movwf	_MSDCommandState& (0+255),b
 20406                           
 20407                           ;usb_device_msd.c: 802: break;
 20408  0005D8  0012               	return	
 20409  0005DA                     
 20410                           ; BSR set to: 0
 20411                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 20412                           
 20413                           ; BSR set to: 0
 20414  0005DA  0599               	decf	_MSDHostNoData& (0+255),w,b
 20415  0005DC  A4D8               	btfss	status,2,c
 20416  0005DE  D002               	goto	l625
 20417                           
 20418                           ; BSR set to: 0
 20419                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 20420  0005E0  699F               	setf	_MSDCommandState& (0+255),b
 20421                           
 20422                           ;usb_device_msd.c: 814: break;
 20423  0005E2  0012               	return	
 20424  0005E4                     l625:
 20425                           
 20426                           ; BSR set to: 0
 20427                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 20428                           
 20429                           ; BSR set to: 0
 20430  0005E4  0E00               	movlw	0
 20431  0005E6  6F88               	movwf	(_TransferLength+1)& (0+255),b
 20432  0005E8  0E12               	movlw	18
 20433  0005EA  6F87               	movwf	_TransferLength& (0+255),b
 20434                           
 20435                           ; BSR set to: 0
 20436                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 20437  0005EC  0E00               	movlw	0
 20438  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20439  0005F0  0E12               	movlw	18
 20440  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20441  0005F4  EC29  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20442                           
 20443                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 20444  0005F8  0E00               	movlw	0
 20445  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20446  0005FC                     l12103:
 20447  0005FC  0E11               	movlw	17
 20448  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 20449  000600  D001               	goto	l626
 20450  000602  D014               	goto	u9560
 20451  000604                     l626:
 20452                           
 20453                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 20454  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20455  000606  0D01               	mullw	1
 20456  000608  0E1F               	movlw	low _gblSenseData
 20457  00060A  24F3               	addwf	prodl,w,c
 20458  00060C  6ED9               	movwf	fsr2l,c
 20459  00060E  0E01               	movlw	high _gblSenseData
 20460  000610  20F4               	addwfc	prodh,w,c
 20461  000612  6EDA               	movwf	fsr2h,c
 20462  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20463  000616  0D01               	mullw	1
 20464  000618  0E00               	movlw	0
 20465  00061A  24F3               	addwf	prodl,w,c
 20466  00061C  6EE1               	movwf	fsr1l,c
 20467  00061E  0E06               	movlw	6
 20468  000620  20F4               	addwfc	prodh,w,c
 20469  000622  6EE2               	movwf	fsr1h,c
 20470  000624  CFDF FFE7          	movff	indf2,indf1
 20471  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20472  00062A  D7E8               	goto	l12103
 20473  00062C                     u9560:
 20474                           
 20475                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 20476  00062C  0EFD               	movlw	253
 20477  00062E  0100               	movlb	0	; () banked
 20478  000630  6F9F               	movwf	_MSDCommandState& (0+255),b
 20479                           
 20480                           ;usb_device_msd.c: 827: break;
 20481  000632  0012               	return	
 20482  000634                     l628:
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 20486  000634  0E03               	movlw	3
 20487  000636  CFE8 F600          	movff	wreg,1536
 20488                           
 20489                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 20490  00063A  0E00               	movlw	0
 20491  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 20495  000640  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20496  000644  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20497  000648  D801               	call	u9578
 20498  00064A  D00A               	goto	u9579
 20499  00064C                     u9578:
 20500  00064C  0005               	push	
 20501  00064E  6EFA               	movwf	pclath,c
 20502  000650  0101               	movlb	1	; () banked
 20503  000652  51F3               	movf	(_LUN+10)& (0+255),w,b
 20504  000654  6EFD               	movwf	tosl,c
 20505  000656  51F4               	movf	(_LUN+11)& (0+255),w,b
 20506  000658  6EFE               	movwf	tosh,c
 20507  00065A  6AFF               	clrf	tosu,c
 20508  00065C  50FA               	movf	pclath,w,c
 20509  00065E  0012               	return		;indir
 20510  000660                     u9579:
 20511  000660  0900               	iorlw	0
 20512  000662  A4D8               	btfss	status,2,c
 20513  000664  D004               	goto	l630
 20514  000666  0E00               	movlw	0
 20515  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20516  00066A  0E00               	movlw	0
 20517  00066C  D003               	goto	L20
 20518  00066E                     l630:
 20519  00066E  0E00               	movlw	0
 20520  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20521  000672  0E80               	movlw	128
 20522  000674                     L20:
 20523  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 20524  000676  EE26 F002          	lfsr	2,1538	;volatile
 20525  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 20526                           
 20527                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 20528  00067E  0E00               	movlw	0
 20529  000680  CFE8 F603          	movff	wreg,1539	;volatile
 20530                           
 20531                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 20532  000684  0E00               	movlw	0
 20533  000686  0100               	movlb	0	; () banked
 20534  000688  6F88               	movwf	(_TransferLength+1)& (0+255),b
 20535  00068A  0E04               	movlw	4
 20536  00068C  6F87               	movwf	_TransferLength& (0+255),b
 20537                           
 20538                           ; BSR set to: 0
 20539                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 20540  00068E  0E00               	movlw	0
 20541  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20542  000692  0E04               	movlw	4
 20543  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20544  000696  EC29  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20545                           
 20546                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 20547  00069A  0EFD               	movlw	253
 20548  00069C  0100               	movlb	0	; () banked
 20549  00069E  6F9F               	movwf	_MSDCommandState& (0+255),b
 20550                           
 20551                           ;usb_device_msd.c: 839: break;
 20552  0006A0  0012               	return	
 20553  0006A2                     
 20554                           ; BSR set to: 0
 20555                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 20556                           
 20557                           ; BSR set to: 0
 20558  0006A2  0101               	movlb	1	; () banked
 20559  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20560  0006A6  0BF0               	andlw	-16
 20561  0006A8  0905               	iorlw	5
 20562  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20563                           
 20564                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 20565  0006AC  0E20               	movlw	32
 20566  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20567                           
 20568                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 20569  0006B0  0E00               	movlw	0
 20570  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20571                           
 20572                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 20573  0006B4  0E01               	movlw	1
 20574  0006B6  010D               	movlb	13	; () banked
 20575  0006B8  6F8C               	movwf	140,b	;volatile
 20576                           
 20577                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 20578  0006BA  0E00               	movlw	0
 20579  0006BC  6F88               	movwf	136,b	;volatile
 20580  0006BE  0E00               	movlw	0
 20581  0006C0  6F89               	movwf	137,b	;volatile
 20582  0006C2  0E00               	movlw	0
 20583  0006C4  6F8A               	movwf	138,b	;volatile
 20584  0006C6  0E00               	movlw	0
 20585  0006C8  6F8B               	movwf	139,b	;volatile
 20586                           
 20587                           ; BSR set to: 13
 20588                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 20589  0006CA  0100               	movlb	0	; () banked
 20590  0006CC  699F               	setf	_MSDCommandState& (0+255),b
 20591                           
 20592                           ;usb_device_msd.c: 848: break;
 20593  0006CE  0012               	return	
 20594  0006D0                     
 20595                           ; BSR set to: 0
 20596                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 20597                           
 20598                           ; BSR set to: 0
 20599  0006D0  0E00               	movlw	0
 20600  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 20601  0006D4  0E00               	movlw	0
 20602  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 20603  0006D8  0E00               	movlw	0
 20604  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 20605  0006DC  0E00               	movlw	0
 20606  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 20607  0006E0  ECE4  F022         	call	_MSDCheckForErrorCases	;wreg free
 20608  0006E4  0900               	iorlw	0
 20609  0006E6  A4D8               	btfss	status,2,c
 20610  0006E8  0012               	return	
 20611                           
 20612                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 20613                           
 20614                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 20615  0006EA  0101               	movlb	1	; () banked
 20616  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20617  0006EE  0B0F               	andlw	15
 20618  0006F0  0A06               	xorlw	6
 20619  0006F2  A4D8               	btfss	status,2,c
 20620  0006F4  D007               	goto	l636
 20621                           
 20622                           ; BSR set to: 1
 20623  0006F6  010D               	movlb	13	; () banked
 20624  0006F8  058C               	decf	140,w,b	;volatile
 20625  0006FA  A4D8               	btfss	status,2,c
 20626  0006FC  D003               	goto	l636
 20627                           
 20628                           ; BSR set to: 13
 20629                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 20630  0006FE  0100               	movlb	0	; () banked
 20631  000700  699F               	setf	_MSDCommandState& (0+255),b
 20632                           
 20633                           ;usb_device_msd.c: 870: }
 20634  000702  0012               	return	
 20635  000704                     l636:
 20636                           
 20637                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 20638                           
 20639                           ; BSR set to: 0
 20640  000704  ECED  F031         	call	_ResetSenseData	;wreg free
 20641                           
 20642                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 20643  000708  0E00               	movlw	0
 20644  00070A  010D               	movlb	13	; () banked
 20645  00070C  6F88               	movwf	136,b	;volatile
 20646  00070E  0E00               	movlw	0
 20647  000710  6F89               	movwf	137,b	;volatile
 20648  000712  0E00               	movlw	0
 20649  000714  6F8A               	movwf	138,b	;volatile
 20650  000716  0E00               	movlw	0
 20651  000718  6F8B               	movwf	139,b	;volatile
 20652                           
 20653                           ; BSR set to: 13
 20654                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 20655  00071A  0100               	movlb	0	; () banked
 20656  00071C  699F               	setf	_MSDCommandState& (0+255),b
 20657                           
 20658                           ; BSR set to: 0
 20659                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 20660  00071E  0012               	return	
 20661  000720                     
 20662                           ; BSR set to: 0
 20663                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 20664                           
 20665                           ; BSR set to: 0
 20666                           
 20667                           ; BSR set to: 0
 20668  000720  0E00               	movlw	0
 20669  000722  010D               	movlb	13	; () banked
 20670  000724  6F88               	movwf	136,b	;volatile
 20671  000726  0E00               	movlw	0
 20672  000728  6F89               	movwf	137,b	;volatile
 20673  00072A  0E00               	movlw	0
 20674  00072C  6F8A               	movwf	138,b	;volatile
 20675  00072E  0E00               	movlw	0
 20676  000730  6F8B               	movwf	139,b	;volatile
 20677                           
 20678                           ; BSR set to: 13
 20679                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 20680  000732  0100               	movlb	0	; () banked
 20681  000734  699F               	setf	_MSDCommandState& (0+255),b
 20682                           
 20683                           ;usb_device_msd.c: 885: break;
 20684  000736  0012               	return	
 20685  000738                     
 20686                           ; BSR set to: 0
 20687                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 20688                           
 20689                           ; BSR set to: 0
 20690  000738  5189               	movf	_USBMSDInHandle& (0+255),w,b
 20691  00073A  118A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20692  00073C  B4D8               	btfsc	status,2,c
 20693  00073E  D006               	goto	u9630
 20694                           
 20695                           ; BSR set to: 0
 20696  000740  C089  FFD9         	movff	_USBMSDInHandle,fsr2l
 20697  000744  C08A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20698  000748  BEDF               	btfsc	indf2,7,c
 20699  00074A  0012               	return	
 20700  00074C                     u9630:
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 20704                           
 20705                           ; BSR set to: 0
 20706  00074C  0101               	movlb	1	; () banked
 20707  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20708  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20709  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20710  000754  E104               	bnz	u9640
 20711  000756  0E40               	movlw	64
 20712  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 20713  00075A  A0D8               	btfss	status,0,c
 20714  00075C  D009               	goto	l644
 20715  00075E                     u9640:
 20716                           
 20717                           ; BSR set to: 1
 20718                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 20719  00075E  0E40               	movlw	64
 20720  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 20721                           
 20722                           ; BSR set to: 1
 20723                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 20724  000762  0E40               	movlw	64
 20725  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20726  000766  0E00               	movlw	0
 20727  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20728  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20729  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20730                           
 20731                           ;usb_device_msd.c: 900: }
 20732  00076E  D00A               	goto	l645
 20733  000770                     l644:
 20734                           
 20735                           ; BSR set to: 1
 20736                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20737  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20738                           
 20739                           ; BSR set to: 1
 20740                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20741  000774  0E00               	movlw	0
 20742  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20743  000778  0E00               	movlw	0
 20744  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20745  00077C  0E00               	movlw	0
 20746  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20747  000780  0E00               	movlw	0
 20748  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20749  000784                     l645:
 20750                           
 20751                           ; BSR set to: 1
 20752                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20753                           
 20754                           ; BSR set to: 1
 20755  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20756  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20757  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20758  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20759  00078C  0100               	movlb	0	; () banked
 20760  00078E  5D87               	subwf	_TransferLength& (0+255),w,b
 20761  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20762  000792  5988               	subwfb	(_TransferLength+1)& (0+255),w,b
 20763  000794  A0D8               	btfss	status,0,c
 20764  000796  D005               	goto	l646
 20765                           
 20766                           ; BSR set to: 0
 20767                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20768  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20769  00079A  5F87               	subwf	_TransferLength& (0+255),f,b
 20770  00079C  0E00               	movlw	0
 20771  00079E  5B88               	subwfb	(_TransferLength+1)& (0+255),f,b
 20772                           
 20773                           ;usb_device_msd.c: 918: }
 20774  0007A0  D01A               	goto	u9670
 20775  0007A2                     l646:
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20779                           
 20780                           ; BSR set to: 0
 20781  0007A2  0E00               	movlw	0
 20782  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20783  0007A6  D013               	goto	l648
 20784  0007A8                     
 20785                           ; BSR set to: 0
 20786                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20787                           
 20788                           ; BSR set to: 0
 20789  0007A8  5187               	movf	_TransferLength& (0+255),w,b
 20790  0007AA  1188               	iorwf	(_TransferLength+1)& (0+255),w,b
 20791  0007AC  B4D8               	btfsc	status,2,c
 20792  0007AE  D004               	goto	l650
 20793                           
 20794                           ; BSR set to: 0
 20795                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20796  0007B0  0787               	decf	_TransferLength& (0+255),f,b
 20797  0007B2  A0D8               	btfss	status,0,c
 20798  0007B4  0788               	decf	(_TransferLength+1)& (0+255),f,b
 20799                           
 20800                           ;usb_device_msd.c: 932: }
 20801  0007B6  D00A               	goto	l651
 20802  0007B8                     l650:
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20806                           
 20807                           ; BSR set to: 0
 20808  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20809  0007BA  0D01               	mullw	1
 20810  0007BC  0E00               	movlw	0
 20811  0007BE  24F3               	addwf	prodl,w,c
 20812  0007C0  6ED9               	movwf	fsr2l,c
 20813  0007C2  0E06               	movlw	6
 20814  0007C4  20F4               	addwfc	prodh,w,c
 20815  0007C6  6EDA               	movwf	fsr2h,c
 20816  0007C8  0E00               	movlw	0
 20817  0007CA  6EDF               	movwf	indf2,c
 20818  0007CC                     l651:
 20819                           
 20820                           ; BSR set to: 0
 20821                           
 20822                           ; BSR set to: 0
 20823  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20824  0007CE                     l648:
 20825                           
 20826                           ; BSR set to: 0
 20827                           
 20828                           ; BSR set to: 0
 20829  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20830  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20831  0007D2  A0D8               	btfss	status,0,c
 20832  0007D4  D7E9               	goto	l649
 20833  0007D6                     u9670:
 20834                           
 20835                           ; BSR set to: 0
 20836                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20837                           
 20838                           ; BSR set to: 0
 20839                           
 20840                           ; BSR set to: 0
 20841  0007D6  0E01               	movlw	1
 20842  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20843  0007DA  0E00               	movlw	0
 20844  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20845  0007DE  0E06               	movlw	6
 20846  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20847  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20848  0007E6  0E02               	movlw	2
 20849  0007E8  EC89  F020         	call	_USBTransferOnePacket
 20850  0007EC  C001  F089         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20851  0007F0  C002  F08A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20852                           
 20853                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20854  0007F4  0101               	movlb	1	; () banked
 20855  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20856  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20857  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20858  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20859  0007FE  A4D8               	btfss	status,2,c
 20860  000800  0012               	return	
 20861                           
 20862                           ; BSR set to: 1
 20863                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20864  000802  0100               	movlb	0	; () banked
 20865  000804  699F               	setf	_MSDCommandState& (0+255),b
 20866                           
 20867                           ; BSR set to: 0
 20868                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20869                           
 20870                           ; BSR set to: 0
 20871                           
 20872                           ;usb_device_msd.c: 949: break;
 20873  000806  0012               	return	
 20874  000808                     
 20875                           ; BSR set to: 0
 20876                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20877                           
 20878                           ; BSR set to: 0
 20879                           
 20880                           ;usb_device_msd.c: 954: default:
 20881                           
 20882                           ; BSR set to: 0
 20883  000808  0E7F               	movlw	127
 20884  00080A  EC85  F01F         	call	_MSDErrorHandler
 20885                           
 20886                           ;usb_device_msd.c: 960: }
 20887                           
 20888                           ;usb_device_msd.c: 959: break;
 20889  00080E  0012               	return	
 20890  000810                     l614:
 20891  000810  0100               	movlb	0	; () banked
 20892  000812  519F               	movf	_MSDCommandState& (0+255),w,b
 20893                           
 20894                           ; Switch size 1, requested type "space"
 20895                           ; Number of cases is 12, Range of values is 0 to 254
 20896                           ; switch strategies available:
 20897                           ; Name         Instructions Cycles
 20898                           ; simple_byte           37    19 (average)
 20899                           ;	Chosen strategy is simple_byte
 20900  000814  0A00               	xorlw	0	; case 0
 20901  000816  B4D8               	btfsc	status,2,c
 20902  000818  D75B               	goto	l634
 20903  00081A  0A03               	xorlw	3	; case 3
 20904  00081C  B4D8               	btfsc	status,2,c
 20905  00081E  D6DD               	goto	l624
 20906  000820  0A11               	xorlw	17	; case 18
 20907  000822  B4D8               	btfsc	status,2,c
 20908  000824  D64C               	goto	l620
 20909  000826  0A08               	xorlw	8	; case 26
 20910  000828  B4D8               	btfsc	status,2,c
 20911  00082A  D704               	goto	l628
 20912  00082C  0A01               	xorlw	1	; case 27
 20913  00082E  B4D8               	btfsc	status,2,c
 20914  000830  D777               	goto	l638
 20915  000832  0A05               	xorlw	5	; case 30
 20916  000834  B4D8               	btfsc	status,2,c
 20917  000836  D735               	goto	l633
 20918  000838  0A3B               	xorlw	59	; case 37
 20919  00083A  B4D8               	btfsc	status,2,c
 20920  00083C  D671               	goto	l623
 20921  00083E  0A0D               	xorlw	13	; case 40
 20922  000840  B4D8               	btfsc	status,2,c
 20923  000842  D62D               	goto	l615
 20924  000844  0A02               	xorlw	2	; case 42
 20925  000846  B4D8               	btfsc	status,2,c
 20926  000848  D632               	goto	l618
 20927  00084A  0A05               	xorlw	5	; case 47
 20928  00084C  B4D8               	btfsc	status,2,c
 20929  00084E  D768               	goto	l638
 20930  000850  0AD2               	xorlw	210	; case 253
 20931  000852  B4D8               	btfsc	status,2,c
 20932  000854  D771               	goto	l640
 20933  000856  0A03               	xorlw	3	; case 254
 20934  000858  D7D7               	goto	l654
 20935  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20936                           	opt stack 0
 20937                           tosu	equ	0xFFF
 20938                           tosh	equ	0xFFE
 20939                           tosl	equ	0xFFD
 20940                           pclath	equ	0xFFA
 20941                           tblptru	equ	0xFF8
 20942                           tblptrh	equ	0xFF7
 20943                           tblptrl	equ	0xFF6
 20944                           tablat	equ	0xFF5
 20945                           prodh	equ	0xFF4
 20946                           prodl	equ	0xFF3
 20947                           intcon	equ	0xFF2
 20948                           intcon3	equ	0xFF0
 20949                           indf0	equ	0xFEF
 20950                           postinc0	equ	0xFEE
 20951                           fsr0h	equ	0xFEA
 20952                           fsr0l	equ	0xFE9
 20953                           wreg	equ	0xFE8
 20954                           indf1	equ	0xFE7
 20955                           postdec1	equ	0xFE5
 20956                           plusw1	equ	0xFE3
 20957                           fsr1h	equ	0xFE2
 20958                           fsr1l	equ	0xFE1
 20959                           indf2	equ	0xFDF
 20960                           postinc2	equ	0xFDE
 20961                           postdec2	equ	0xFDD
 20962                           plusw2	equ	0xFDB
 20963                           fsr2h	equ	0xFDA
 20964                           fsr2l	equ	0xFD9
 20965                           status	equ	0xFD8
 20966                           
 20967 ;; *************** function _MSDWriteHandler *****************
 20968 ;; Defined at:
 20969 ;;		line 1188 in file "usb_device_msd.c"
 20970 ;; Parameters:    Size  Location     Type
 20971 ;;		None
 20972 ;; Auto vars:     Size  Location     Type
 20973 ;;		None
 20974 ;; Return value:  Size  Location     Type
 20975 ;;                  1    wreg      unsigned char 
 20976 ;; Registers used:
 20977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20978 ;; Tracked objects:
 20979 ;;		On entry : 0/0
 20980 ;;		On exit  : 0/0
 20981 ;;		Unchanged: 0/0
 20982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20985 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20986 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20987 ;;Total ram usage:        5 bytes
 20988 ;; Hardware stack levels used:    1
 20989 ;; Hardware stack levels required when called:    6
 20990 ;; This function calls:
 20991 ;;		_ExternalFlash_SectorWrite
 20992 ;;		_ExternalFlash_WriteProtectStateGet
 20993 ;;		_MSDCheckForErrorCases
 20994 ;;		_USBStallEndpoint
 20995 ;;		_USBTransferOnePacket
 20996 ;; This function is called by:
 20997 ;;		_MSDProcessCommandMediaPresent
 20998 ;; This function uses a non-reentrant model
 20999 ;;
 21000                           
 21001                           	psect	text98
 21002  00121E                     __ptext98:
 21003                           	opt stack 0
 21004  00121E                     _MSDWriteHandler:
 21005                           	opt stack 20
 21006                           
 21007                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 21008                           
 21009                           ;incstack = 0
 21010  00121E  D146               	goto	l684
 21011  001220                     l685:
 21012                           
 21013                           ; BSR set to: 0
 21014                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 21015  001220  C111  F086         	movff	_gblCBW+17,_LBA+3
 21016                           
 21017                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 21018  001224  C112  F085         	movff	_gblCBW+18,_LBA+2
 21019                           
 21020                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 21021  001228  C113  F084         	movff	_gblCBW+19,_LBA+1
 21022                           
 21023                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 21024  00122C  C114  F083         	movff	_gblCBW+20,_LBA
 21025                           
 21026                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 21027  001230  C116  F088         	movff	_gblCBW+22,_TransferLength+1
 21028                           
 21029                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 21030  001234  C117  F087         	movff	_gblCBW+23,_TransferLength
 21031                           
 21032                           ; BSR set to: 0
 21033                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21034  001238  5187               	movf	_TransferLength& (0+255),w,b
 21035  00123A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 21036  00123C  5188               	movf	(_TransferLength+1)& (0+255),w,b
 21037  00123E  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 21038  001240  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 21039  001242  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 21040  001244  0E09               	movlw	9
 21041  001246                     u8375:
 21042  001246  90D8               	bcf	status,0,c
 21043  001248  3630               	rlcf	??_MSDWriteHandler,f,c
 21044  00124A  3631               	rlcf	??_MSDWriteHandler+1,f,c
 21045  00124C  3632               	rlcf	??_MSDWriteHandler+2,f,c
 21046  00124E  3633               	rlcf	??_MSDWriteHandler+3,f,c
 21047  001250  2EE8               	decfsz	wreg,f,c
 21048  001252  D7F9               	goto	u8375
 21049  001254  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 21050  001258  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21051  00125C  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21052  001260  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21053  001264  ECE4  F022         	call	_MSDCheckForErrorCases	;wreg free
 21054  001268  0900               	iorlw	0
 21055  00126A  A4D8               	btfss	status,2,c
 21056  00126C  D131               	goto	l687
 21057                           
 21058                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 21059                           
 21060                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 21061  00126E  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 21062  001272  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 21063  001276  D801               	call	u8398
 21064  001278  D00A               	goto	u8399
 21065  00127A                     u8398:
 21066  00127A  0005               	push	
 21067  00127C  6EFA               	movwf	pclath,c
 21068  00127E  0101               	movlb	1	; () banked
 21069  001280  51F3               	movf	(_LUN+10)& (0+255),w,b
 21070  001282  6EFD               	movwf	tosl,c
 21071  001284  51F4               	movf	(_LUN+11)& (0+255),w,b
 21072  001286  6EFE               	movwf	tosh,c
 21073  001288  6AFF               	clrf	tosu,c
 21074  00128A  50FA               	movf	pclath,w,c
 21075  00128C  0012               	return		;indir
 21076  00128E                     u8399:
 21077  00128E  0900               	iorlw	0
 21078  001290  B4D8               	btfsc	status,2,c
 21079  001292  D016               	goto	l688
 21080                           
 21081                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 21082  001294  0E01               	movlw	1
 21083  001296  010D               	movlb	13	; () banked
 21084  001298  6F8C               	movwf	140,b	;volatile
 21085                           
 21086                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 21087  00129A  0101               	movlb	1	; () banked
 21088  00129C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21089  00129E  0BF0               	andlw	-16
 21090  0012A0  0907               	iorlw	7
 21091  0012A2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21092                           
 21093                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 21094  0012A4  0E27               	movlw	39
 21095  0012A6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21096                           
 21097                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 21098  0012A8  0E00               	movlw	0
 21099  0012AA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21100                           
 21101                           ; BSR set to: 1
 21102                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 21103  0012AC  0E00               	movlw	0
 21104  0012AE  6E01               	movwf	USBStallEndpoint@dir,c
 21105  0012B0  0E02               	movlw	2
 21106  0012B2  EC7E  F01E         	call	_USBStallEndpoint
 21107                           
 21108                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 21109  0012B6  0E00               	movlw	0
 21110  0012B8  0100               	movlb	0	; () banked
 21111  0012BA  6F9D               	movwf	_MSDWriteState& (0+255),b
 21112                           
 21113                           ; BSR set to: 0
 21114                           ;usb_device_msd.c: 1228: return MSDWriteState;
 21115  0012BC  519D               	movf	_MSDWriteState& (0+255),w,b
 21116                           
 21117                           ; BSR set to: 0
 21118  0012BE  0012               	return	
 21119  0012C0                     l688:
 21120                           
 21121                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 21122                           
 21123                           ; BSR set to: 0
 21124  0012C0  0E01               	movlw	1
 21125  0012C2  0100               	movlb	0	; () banked
 21126  0012C4  6FA0               	movwf	_MSD_State& (0+255),b
 21127  0012C6                     
 21128                           ; BSR set to: 0
 21129                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 21130                           
 21131                           ; BSR set to: 0
 21132  0012C6  5187               	movf	_TransferLength& (0+255),w,b
 21133  0012C8  1188               	iorwf	(_TransferLength+1)& (0+255),w,b
 21134  0012CA  A4D8               	btfss	status,2,c
 21135  0012CC  D002               	goto	l691
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 21139  0012CE  0E00               	movlw	0
 21140  0012D0  D056               	goto	L21
 21141  0012D2                     l691:
 21142                           
 21143                           ; BSR set to: 0
 21144                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 21145                           
 21146                           ; BSR set to: 0
 21147  0012D2  0E03               	movlw	3
 21148  0012D4  6F9D               	movwf	_MSDWriteState& (0+255),b
 21149                           
 21150                           ; BSR set to: 0
 21151                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 21152  0012D6  0E00               	movlw	0
 21153  0012D8  0101               	movlb	1	; () banked
 21154  0012DA  6F77               	movwf	_ptrNextData& (0+255),b
 21155  0012DC  0E06               	movlw	6
 21156  0012DE  6F78               	movwf	(_ptrNextData+1)& (0+255),b
 21157                           
 21158                           ; BSR set to: 1
 21159                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 21160  0012E0  0E00               	movlw	0
 21161  0012E2  010D               	movlb	13	; () banked
 21162  0012E4  6F88               	movwf	136,b	;volatile
 21163  0012E6  0E02               	movlw	2
 21164  0012E8  6F89               	movwf	137,b	;volatile
 21165  0012EA  0E00               	movlw	0
 21166  0012EC  6F8A               	movwf	138,b	;volatile
 21167  0012EE  0E00               	movlw	0
 21168  0012F0  6F8B               	movwf	139,b	;volatile
 21169  0012F2                     l692:
 21170                           
 21171                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 21172  0012F2  010D               	movlb	13	; () banked
 21173  0012F4  5188               	movf	136,w,b	;volatile
 21174  0012F6  1189               	iorwf	137,w,b	;volatile
 21175  0012F8  118A               	iorwf	138,w,b	;volatile
 21176  0012FA  118B               	iorwf	139,w,b	;volatile
 21177  0012FC  B4D8               	btfsc	status,2,c
 21178  0012FE  D01E               	goto	l693
 21179                           
 21180                           ; BSR set to: 13
 21181                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 21182  001300  0100               	movlb	0	; () banked
 21183  001302  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 21184  001304  118C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21185  001306  B4D8               	btfsc	status,2,c
 21186  001308  D006               	goto	l694
 21187                           
 21188                           ; BSR set to: 0
 21189  00130A  C08B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21190  00130E  C08C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21191  001312  BEDF               	btfsc	indf2,7,c
 21192  001314  D0DD               	goto	l687
 21193  001316                     l694:
 21194                           
 21195                           ; BSR set to: 0
 21196                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 21197                           
 21198                           ; BSR set to: 0
 21199  001316  0E00               	movlw	0
 21200  001318  6E01               	movwf	USBTransferOnePacket@dir,c
 21201  00131A  C177  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21202  00131E  C178  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21203  001322  0E40               	movlw	64
 21204  001324  6E04               	movwf	USBTransferOnePacket@len,c
 21205  001326  0E02               	movlw	2
 21206  001328  EC89  F020         	call	_USBTransferOnePacket
 21207  00132C  C001  F08B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 21208  001330  C002  F08C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 21209                           
 21210                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 21211  001334  0E04               	movlw	4
 21212  001336  0100               	movlb	0	; () banked
 21213  001338  6F9D               	movwf	_MSDWriteState& (0+255),b
 21214                           
 21215                           ;usb_device_msd.c: 1260: }
 21216  00133A  D023               	goto	l695
 21217  00133C                     l693:
 21218                           
 21219                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 21220                           
 21221                           ; BSR set to: 0
 21222  00133C  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 21223  001340  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 21224  001344  D801               	call	u8458
 21225  001346  D00A               	goto	u8459
 21226  001348                     u8458:
 21227  001348  0005               	push	
 21228  00134A  6EFA               	movwf	pclath,c
 21229  00134C  0101               	movlb	1	; () banked
 21230  00134E  51F3               	movf	(_LUN+10)& (0+255),w,b
 21231  001350  6EFD               	movwf	tosl,c
 21232  001352  51F4               	movf	(_LUN+11)& (0+255),w,b
 21233  001354  6EFE               	movwf	tosh,c
 21234  001356  6AFF               	clrf	tosu,c
 21235  001358  50FA               	movf	pclath,w,c
 21236  00135A  0012               	return		;indir
 21237  00135C                     u8459:
 21238  00135C  0900               	iorlw	0
 21239  00135E  B4D8               	btfsc	status,2,c
 21240  001360  D00C               	goto	l696
 21241                           
 21242                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 21243  001362  0E01               	movlw	1
 21244  001364  010D               	movlb	13	; () banked
 21245  001366  6F8C               	movwf	140,b	;volatile
 21246                           
 21247                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 21248  001368  0101               	movlb	1	; () banked
 21249  00136A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21250  00136C  0BF0               	andlw	-16
 21251  00136E  0902               	iorlw	2
 21252  001370  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21253                           
 21254                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 21255  001372  0E27               	movlw	39
 21256  001374  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21257                           
 21258                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 21259  001376  0E00               	movlw	0
 21260  001378  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21261  00137A                     l696:
 21262                           
 21263                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 21264  00137A  0E02               	movlw	2
 21265  00137C  D095               	goto	L23
 21266  00137E                     L21:
 21267  00137E  6F9D               	movwf	_MSDWriteState& (0+255),b
 21268                           
 21269                           ;usb_device_msd.c: 1280: break;
 21270  001380  D0A7               	goto	l687
 21271  001382                     l695:
 21272                           
 21273                           ; BSR set to: 0
 21274                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 21275                           
 21276                           ; BSR set to: 0
 21277                           
 21278                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 21279                           
 21280                           ; BSR set to: 0
 21281  001382  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 21282  001384  118C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21283  001386  B4D8               	btfsc	status,2,c
 21284  001388  D006               	goto	l698
 21285                           
 21286                           ; BSR set to: 0
 21287  00138A  C08B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21288  00138E  C08C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21289  001392  BEDF               	btfsc	indf2,7,c
 21290  001394  D09D               	goto	l687
 21291  001396                     l698:
 21292                           
 21293                           ; BSR set to: 0
 21294                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 21295                           
 21296                           ; BSR set to: 0
 21297  001396  EE20 F001          	lfsr	2,1
 21298  00139A  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 21299  00139C  26D9               	addwf	fsr2l,f,c
 21300  00139E  518C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 21301  0013A0  22DA               	addwfc	fsr2h,f,c
 21302  0013A2  50DF               	movf	indf2,w,c
 21303  0013A4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 21304  0013A6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 21305  0013AA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 21306  0013AC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 21307  0013AE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 21308  0013B0  5031               	movf	??_MSDWriteHandler+1,w,c
 21309  0013B2  0101               	movlb	1	; () banked
 21310  0013B4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21311  0013B6  5032               	movf	??_MSDWriteHandler+2,w,c
 21312  0013B8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21313  0013BA  5033               	movf	??_MSDWriteHandler+3,w,c
 21314  0013BC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21315  0013BE  5034               	movf	??_MSDWriteHandler+4,w,c
 21316  0013C0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21317                           
 21318                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 21319  0013C2  0100               	movlb	0	; () banked
 21320  0013C4  EE20 F001          	lfsr	2,1
 21321  0013C8  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 21322  0013CA  26D9               	addwf	fsr2l,f,c
 21323  0013CC  518C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 21324  0013CE  22DA               	addwfc	fsr2h,f,c
 21325  0013D0  50DF               	movf	indf2,w,c
 21326  0013D2  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 21327  0013D4  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 21328  0013D8  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 21329  0013DA  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 21330  0013DC  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 21331  0013DE  5031               	movf	??_MSDWriteHandler+1,w,c
 21332  0013E0  010D               	movlb	13	; () banked
 21333  0013E2  5F88               	subwf	136,f,b	;volatile
 21334  0013E4  5032               	movf	??_MSDWriteHandler+2,w,c
 21335  0013E6  5B89               	subwfb	137,f,b	;volatile
 21336  0013E8  5033               	movf	??_MSDWriteHandler+3,w,c
 21337  0013EA  5B8A               	subwfb	138,f,b	;volatile
 21338  0013EC  5034               	movf	??_MSDWriteHandler+4,w,c
 21339  0013EE  5B8B               	subwfb	139,f,b	;volatile
 21340                           
 21341                           ; BSR set to: 13
 21342                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 21343  0013F0  0E40               	movlw	64
 21344  0013F2  0101               	movlb	1	; () banked
 21345  0013F4  2777               	addwf	_ptrNextData& (0+255),f,b
 21346  0013F6  0E00               	movlw	0
 21347  0013F8  2378               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21348                           
 21349                           ; BSR set to: 1
 21350                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 21351  0013FA  0E03               	movlw	3
 21352  0013FC  D055               	goto	L23
 21353  0013FE                     
 21354                           ; BSR set to: 0
 21355                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 21356                           
 21357                           ; BSR set to: 0
 21358  0013FE  010D               	movlb	13	; () banked
 21359  001400  518C               	movf	140,w,b	;volatile
 21360  001402  A4D8               	btfss	status,2,c
 21361  001404  D03C               	goto	l703
 21362                           
 21363                           ; BSR set to: 13
 21364                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 21365  001406  C1F7  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 21366  00140A  C1F8  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 21367  00140E  C083  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 21368  001412  C084  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 21369  001416  C085  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 21370  00141A  C086  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 21371  00141E  0E00               	movlw	0
 21372  001420  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 21373  001422  0E06               	movlw	6
 21374  001424  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 21375  001426  0100               	movlb	0	; () banked
 21376  001428  5183               	movf	_LBA& (0+255),w,b
 21377  00142A  1184               	iorwf	(_LBA+1)& (0+255),w,b
 21378  00142C  1185               	iorwf	(_LBA+2)& (0+255),w,b
 21379  00142E  1186               	iorwf	(_LBA+3)& (0+255),w,b
 21380  001430  A4D8               	btfss	status,2,c
 21381  001432  D002               	goto	u8500
 21382  001434  0E01               	movlw	1
 21383  001436  D001               	goto	u8510
 21384  001438                     u8500:
 21385  001438  0E00               	movlw	0
 21386  00143A                     u8510:
 21387  00143A  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 21388  00143C  D801               	call	u8528
 21389  00143E  D00A               	goto	u8529
 21390  001440                     u8528:
 21391  001440  0005               	push	
 21392  001442  6EFA               	movwf	pclath,c
 21393  001444  0101               	movlb	1	; () banked
 21394  001446  51F5               	movf	(_LUN+12)& (0+255),w,b
 21395  001448  6EFD               	movwf	tosl,c
 21396  00144A  51F6               	movf	(_LUN+13)& (0+255),w,b
 21397  00144C  6EFE               	movwf	tosh,c
 21398  00144E  6AFF               	clrf	tosu,c
 21399  001450  50FA               	movf	pclath,w,c
 21400  001452  0012               	return		;indir
 21401  001454                     u8529:
 21402  001454  06E8               	decf	wreg,f,c
 21403  001456  B4D8               	btfsc	status,2,c
 21404  001458  D012               	goto	l703
 21405                           
 21406                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 21407  00145A  0E64               	movlw	100
 21408  00145C  0100               	movlb	0	; () banked
 21409  00145E  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 21410  001460  D002               	goto	l702
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 21414  001462  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 21415                           
 21416                           ;usb_device_msd.c: 1314: break;
 21417  001464  D035               	goto	l687
 21418  001466                     l702:
 21419                           
 21420                           ; BSR set to: 0
 21421                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 21422                           
 21423                           ; BSR set to: 0
 21424  001466  0E01               	movlw	1
 21425  001468  010D               	movlb	13	; () banked
 21426  00146A  6F8C               	movwf	140,b	;volatile
 21427                           
 21428                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 21429  00146C  0101               	movlb	1	; () banked
 21430  00146E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21431  001470  0BF0               	andlw	-16
 21432  001472  0903               	iorlw	3
 21433  001474  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21434                           
 21435                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 21436  001476  0E00               	movlw	0
 21437  001478  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21438                           
 21439                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 21440  00147A  0E00               	movlw	0
 21441  00147C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21442  00147E                     l703:
 21443                           
 21444                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 21445                           
 21446                           ; BSR set to: 1
 21447                           
 21448                           ; BSR set to: 1
 21449                           
 21450                           ; BSR set to: 1
 21451  00147E  0E01               	movlw	1
 21452  001480  0100               	movlb	0	; () banked
 21453  001482  2783               	addwf	_LBA& (0+255),f,b
 21454  001484  0E00               	movlw	0
 21455  001486  2384               	addwfc	(_LBA+1)& (0+255),f,b
 21456  001488  2385               	addwfc	(_LBA+2)& (0+255),f,b
 21457  00148A  2386               	addwfc	(_LBA+3)& (0+255),f,b
 21458                           
 21459                           ; BSR set to: 0
 21460                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 21461  00148C  0787               	decf	_TransferLength& (0+255),f,b
 21462  00148E  A0D8               	btfss	status,0,c
 21463  001490  0788               	decf	(_TransferLength+1)& (0+255),f,b
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 21467  001492  0E01               	movlw	1
 21468  001494  D774               	goto	L21
 21469  001496                     
 21470                           ; BSR set to: 0
 21471                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 21472                           
 21473                           ; BSR set to: 0
 21474  001496  0E02               	movlw	2
 21475  001498  010D               	movlb	13	; () banked
 21476  00149A  6F8C               	movwf	140,b	;volatile
 21477                           
 21478                           ; BSR set to: 13
 21479                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 21480  00149C  0E00               	movlw	0
 21481  00149E  6E01               	movwf	USBStallEndpoint@dir,c
 21482  0014A0  0E02               	movlw	2
 21483  0014A2  EC7E  F01E         	call	_USBStallEndpoint
 21484                           
 21485                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 21486  0014A6  0E00               	movlw	0
 21487  0014A8                     L23:
 21488  0014A8  0100               	movlb	0	; () banked
 21489  0014AA  D769               	goto	L21
 21490  0014AC                     l684:
 21491                           
 21492                           ; BSR set to: 0
 21493  0014AC  0100               	movlb	0	; () banked
 21494  0014AE  519D               	movf	_MSDWriteState& (0+255),w,b
 21495                           
 21496                           ; Switch size 1, requested type "space"
 21497                           ; Number of cases is 5, Range of values is 0 to 4
 21498                           ; switch strategies available:
 21499                           ; Name         Instructions Cycles
 21500                           ; simple_byte           16     9 (average)
 21501                           ;	Chosen strategy is simple_byte
 21502  0014B0  0A00               	xorlw	0	; case 0
 21503  0014B2  B4D8               	btfsc	status,2,c
 21504  0014B4  D6B5               	goto	l685
 21505  0014B6  0A01               	xorlw	1	; case 1
 21506  0014B8  B4D8               	btfsc	status,2,c
 21507  0014BA  D705               	goto	l690
 21508  0014BC  0A03               	xorlw	3	; case 2
 21509  0014BE  B4D8               	btfsc	status,2,c
 21510  0014C0  D79E               	goto	l699
 21511  0014C2  0A01               	xorlw	1	; case 3
 21512  0014C4  B4D8               	btfsc	status,2,c
 21513  0014C6  D715               	goto	l692
 21514  0014C8  0A07               	xorlw	7	; case 4
 21515  0014CA  B4D8               	btfsc	status,2,c
 21516  0014CC  D75A               	goto	l695
 21517  0014CE  D7E3               	goto	l704
 21518  0014D0                     l687:
 21519                           
 21520                           ;usb_device_msd.c: 1347: return MSDWriteState;
 21521                           
 21522                           ; BSR set to: 0
 21523  0014D0  0100               	movlb	0	; () banked
 21524  0014D2  519D               	movf	_MSDWriteState& (0+255),w,b
 21525  0014D4  0012               	return	
 21526  0014D6                     __end_of_MSDWriteHandler:
 21527                           	opt stack 0
 21528                           tosu	equ	0xFFF
 21529                           tosh	equ	0xFFE
 21530                           tosl	equ	0xFFD
 21531                           pclath	equ	0xFFA
 21532                           tblptru	equ	0xFF8
 21533                           tblptrh	equ	0xFF7
 21534                           tblptrl	equ	0xFF6
 21535                           tablat	equ	0xFF5
 21536                           prodh	equ	0xFF4
 21537                           prodl	equ	0xFF3
 21538                           intcon	equ	0xFF2
 21539                           intcon3	equ	0xFF0
 21540                           indf0	equ	0xFEF
 21541                           postinc0	equ	0xFEE
 21542                           fsr0h	equ	0xFEA
 21543                           fsr0l	equ	0xFE9
 21544                           wreg	equ	0xFE8
 21545                           indf1	equ	0xFE7
 21546                           postdec1	equ	0xFE5
 21547                           plusw1	equ	0xFE3
 21548                           fsr1h	equ	0xFE2
 21549                           fsr1l	equ	0xFE1
 21550                           indf2	equ	0xFDF
 21551                           postinc2	equ	0xFDE
 21552                           postdec2	equ	0xFDD
 21553                           plusw2	equ	0xFDB
 21554                           fsr2h	equ	0xFDA
 21555                           fsr2l	equ	0xFD9
 21556                           status	equ	0xFD8
 21557                           
 21558 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 21559 ;; Defined at:
 21560 ;;		line 34 in file "external_flash.c"
 21561 ;; Parameters:    Size  Location     Type
 21562 ;;  config          2    0[COMRAM] PTR void 
 21563 ;;		 -> NULL(0), 
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;		None
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  1    wreg      unsigned char 
 21568 ;; Registers used:
 21569 ;;		wreg
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21579 ;;Total ram usage:        2 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; This function calls:
 21582 ;;		Nothing
 21583 ;; This function is called by:
 21584 ;;		_MSDWriteHandler
 21585 ;;		_MSDProcessCommandMediaPresent
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text99
 21590  0074AE                     __ptext99:
 21591                           	opt stack 0
 21592  0074AE                     _ExternalFlash_WriteProtectStateGet:
 21593                           	opt stack 25
 21594                           
 21595                           ;external_flash.c: 37: return 0;
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;incstack = 0
 21599  0074AE  0E00               	movlw	0
 21600  0074B0  0012               	return	
 21601  0074B2                     __end_of_ExternalFlash_WriteProtectStateGet:
 21602                           	opt stack 0
 21603                           tosu	equ	0xFFF
 21604                           tosh	equ	0xFFE
 21605                           tosl	equ	0xFFD
 21606                           pclath	equ	0xFFA
 21607                           tblptru	equ	0xFF8
 21608                           tblptrh	equ	0xFF7
 21609                           tblptrl	equ	0xFF6
 21610                           tablat	equ	0xFF5
 21611                           prodh	equ	0xFF4
 21612                           prodl	equ	0xFF3
 21613                           intcon	equ	0xFF2
 21614                           intcon3	equ	0xFF0
 21615                           indf0	equ	0xFEF
 21616                           postinc0	equ	0xFEE
 21617                           fsr0h	equ	0xFEA
 21618                           fsr0l	equ	0xFE9
 21619                           wreg	equ	0xFE8
 21620                           indf1	equ	0xFE7
 21621                           postdec1	equ	0xFE5
 21622                           plusw1	equ	0xFE3
 21623                           fsr1h	equ	0xFE2
 21624                           fsr1l	equ	0xFE1
 21625                           indf2	equ	0xFDF
 21626                           postinc2	equ	0xFDE
 21627                           postdec2	equ	0xFDD
 21628                           plusw2	equ	0xFDB
 21629                           fsr2h	equ	0xFDA
 21630                           fsr2l	equ	0xFD9
 21631                           status	equ	0xFD8
 21632                           
 21633 ;; *************** function _ExternalFlash_SectorWrite *****************
 21634 ;; Defined at:
 21635 ;;		line 56 in file "external_flash.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;  config          2   36[COMRAM] PTR void 
 21638 ;;		 -> NULL(0), 
 21639 ;;  sector_addr     4   38[COMRAM] unsigned long 
 21640 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 21641 ;;		 -> msd_buffer(512), 
 21642 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 21643 ;; Auto vars:     Size  Location     Type
 21644 ;;  page            2   45[COMRAM] unsigned int 
 21645 ;; Return value:  Size  Location     Type
 21646 ;;                  1    wreg      unsigned char 
 21647 ;; Registers used:
 21648 ;;		wreg, status,2, status,0, cstack
 21649 ;; Tracked objects:
 21650 ;;		On entry : 0/0
 21651 ;;		On exit  : 0/0
 21652 ;;		Unchanged: 0/0
 21653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21654 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21657 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21658 ;;Total ram usage:       11 bytes
 21659 ;; Hardware stack levels used:    1
 21660 ;; Hardware stack levels required when called:    5
 21661 ;; This function calls:
 21662 ;;		_flash_sector_write
 21663 ;; This function is called by:
 21664 ;;		_MSDWriteHandler
 21665 ;; This function uses a non-reentrant model
 21666 ;;
 21667                           
 21668                           	psect	text100
 21669  006E8A                     __ptext100:
 21670                           	opt stack 0
 21671  006E8A                     _ExternalFlash_SectorWrite:
 21672                           	opt stack 20
 21673                           
 21674                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 21675                           
 21676                           ;incstack = 0
 21677  006E8A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 21678  006E8E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 21679                           
 21680                           ;external_flash.c: 61: if(sector_addr >= 8192)
 21681  006E92  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 21682  006E94  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 21683  006E96  E104               	bnz	u8140
 21684  006E98  0E20               	movlw	32
 21685  006E9A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 21686  006E9C  A0D8               	btfss	status,0,c
 21687  006E9E  D002               	goto	l1943
 21688  006EA0                     u8140:
 21689                           
 21690                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 21691  006EA0  0E00               	movlw	0
 21692  006EA2  0012               	return	
 21693  006EA4                     l1943:
 21694                           
 21695                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 21696  006EA4  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 21697  006EA8  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 21698  006EAC  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 21699  006EB0  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 21700  006EB4  EC24  F035         	call	_flash_sector_write	;wreg free
 21701                           
 21702                           ;external_flash.c: 69: return 1;
 21703  006EB8  0E01               	movlw	1
 21704  006EBA  0012               	return	
 21705  006EBC                     __end_of_ExternalFlash_SectorWrite:
 21706                           	opt stack 0
 21707                           tosu	equ	0xFFF
 21708                           tosh	equ	0xFFE
 21709                           tosl	equ	0xFFD
 21710                           pclath	equ	0xFFA
 21711                           tblptru	equ	0xFF8
 21712                           tblptrh	equ	0xFF7
 21713                           tblptrl	equ	0xFF6
 21714                           tablat	equ	0xFF5
 21715                           prodh	equ	0xFF4
 21716                           prodl	equ	0xFF3
 21717                           intcon	equ	0xFF2
 21718                           intcon3	equ	0xFF0
 21719                           indf0	equ	0xFEF
 21720                           postinc0	equ	0xFEE
 21721                           fsr0h	equ	0xFEA
 21722                           fsr0l	equ	0xFE9
 21723                           wreg	equ	0xFE8
 21724                           indf1	equ	0xFE7
 21725                           postdec1	equ	0xFE5
 21726                           plusw1	equ	0xFE3
 21727                           fsr1h	equ	0xFE2
 21728                           fsr1l	equ	0xFE1
 21729                           indf2	equ	0xFDF
 21730                           postinc2	equ	0xFDE
 21731                           postdec2	equ	0xFDD
 21732                           plusw2	equ	0xFDB
 21733                           fsr2h	equ	0xFDA
 21734                           fsr2l	equ	0xFD9
 21735                           status	equ	0xFD8
 21736                           
 21737 ;; *************** function _MSDReadHandler *****************
 21738 ;; Defined at:
 21739 ;;		line 1038 in file "usb_device_msd.c"
 21740 ;; Parameters:    Size  Location     Type
 21741 ;;		None
 21742 ;; Auto vars:     Size  Location     Type
 21743 ;;		None
 21744 ;; Return value:  Size  Location     Type
 21745 ;;                  1    wreg      unsigned char 
 21746 ;; Registers used:
 21747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21748 ;; Tracked objects:
 21749 ;;		On entry : 0/0
 21750 ;;		On exit  : 0/0
 21751 ;;		Unchanged: 0/0
 21752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21756 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21757 ;;Total ram usage:        4 bytes
 21758 ;; Hardware stack levels used:    1
 21759 ;; Hardware stack levels required when called:    6
 21760 ;; This function calls:
 21761 ;;		_ExternalFlash_SectorRead
 21762 ;;		_MSDCheckForErrorCases
 21763 ;;		_USBStallEndpoint
 21764 ;;		_USBTransferOnePacket
 21765 ;; This function is called by:
 21766 ;;		_MSDProcessCommandMediaPresent
 21767 ;; This function uses a non-reentrant model
 21768 ;;
 21769                           
 21770                           	psect	text101
 21771  002406                     __ptext101:
 21772                           	opt stack 0
 21773  002406                     _MSDReadHandler:
 21774                           	opt stack 20
 21775                           
 21776                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21777                           
 21778                           ;incstack = 0
 21779  002406  D0D7               	goto	l665
 21780  002408                     l666:
 21781                           
 21782                           ; BSR set to: 0
 21783                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21784  002408  C111  F086         	movff	_gblCBW+17,_LBA+3
 21785                           
 21786                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21787  00240C  C112  F085         	movff	_gblCBW+18,_LBA+2
 21788                           
 21789                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21790  002410  C113  F084         	movff	_gblCBW+19,_LBA+1
 21791                           
 21792                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21793  002414  C114  F083         	movff	_gblCBW+20,_LBA
 21794                           
 21795                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21796  002418  C116  F088         	movff	_gblCBW+22,_TransferLength+1
 21797                           
 21798                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21799  00241C  C117  F087         	movff	_gblCBW+23,_TransferLength
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21803  002420  5187               	movf	_TransferLength& (0+255),w,b
 21804  002422  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21805  002424  5188               	movf	(_TransferLength+1)& (0+255),w,b
 21806  002426  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21807  002428  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21808  00242A  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21809  00242C  0E09               	movlw	9
 21810  00242E                     u8265:
 21811  00242E  90D8               	bcf	status,0,c
 21812  002430  3636               	rlcf	??_MSDReadHandler,f,c
 21813  002432  3637               	rlcf	??_MSDReadHandler+1,f,c
 21814  002434  3638               	rlcf	??_MSDReadHandler+2,f,c
 21815  002436  3639               	rlcf	??_MSDReadHandler+3,f,c
 21816  002438  2EE8               	decfsz	wreg,f,c
 21817  00243A  D7F9               	goto	u8265
 21818  00243C  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21819  002440  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21820  002444  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21821  002448  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21822  00244C  ECE4  F022         	call	_MSDCheckForErrorCases	;wreg free
 21823  002450  0900               	iorlw	0
 21824  002452  A4D8               	btfss	status,2,c
 21825  002454  D0C2               	goto	l668
 21826                           
 21827                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21828                           
 21829                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21830  002456  0E01               	movlw	1
 21831  002458  0100               	movlb	0	; () banked
 21832  00245A  6F9E               	movwf	_MSDReadState& (0+255),b
 21833  00245C                     
 21834                           ; BSR set to: 0
 21835                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21836                           
 21837                           ; BSR set to: 0
 21838  00245C  5187               	movf	_TransferLength& (0+255),w,b
 21839  00245E  1188               	iorwf	(_TransferLength+1)& (0+255),w,b
 21840  002460  A4D8               	btfss	status,2,c
 21841  002462  D002               	goto	l670
 21842                           
 21843                           ; BSR set to: 0
 21844                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21845  002464  0E00               	movlw	0
 21846  002466  D046               	goto	L24
 21847  002468                     l670:
 21848                           
 21849                           ; BSR set to: 0
 21850                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21851                           
 21852                           ; BSR set to: 0
 21853  002468  0787               	decf	_TransferLength& (0+255),f,b
 21854  00246A  A0D8               	btfss	status,0,c
 21855  00246C  0788               	decf	(_TransferLength+1)& (0+255),f,b
 21856                           
 21857                           ; BSR set to: 0
 21858                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21859  00246E  0E02               	movlw	2
 21860  002470  6F9E               	movwf	_MSDReadState& (0+255),b
 21861  002472                     
 21862                           ; BSR set to: 0
 21863                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21864                           
 21865                           ; BSR set to: 0
 21866  002472  5189               	movf	_USBMSDInHandle& (0+255),w,b
 21867  002474  118A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21868  002476  B4D8               	btfsc	status,2,c
 21869  002478  D006               	goto	l672
 21870                           
 21871                           ; BSR set to: 0
 21872  00247A  C089  FFD9         	movff	_USBMSDInHandle,fsr2l
 21873  00247E  C08A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21874  002482  BEDF               	btfsc	indf2,7,c
 21875  002484  D0AA               	goto	l668
 21876  002486                     l672:
 21877                           
 21878                           ; BSR set to: 0
 21879                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21880                           
 21881                           ; BSR set to: 0
 21882  002486  C1F7  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21883  00248A  C1F8  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21884  00248E  C083  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21885  002492  C084  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21886  002496  C085  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21887  00249A  C086  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21888  00249E  0E00               	movlw	0
 21889  0024A0  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21890  0024A2  0E06               	movlw	6
 21891  0024A4  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21892  0024A6  D801               	call	u8318
 21893  0024A8  D00A               	goto	u8319
 21894  0024AA                     u8318:
 21895  0024AA  0005               	push	
 21896  0024AC  6EFA               	movwf	pclath,c
 21897  0024AE  0101               	movlb	1	; () banked
 21898  0024B0  51F1               	movf	(_LUN+8)& (0+255),w,b
 21899  0024B2  6EFD               	movwf	tosl,c
 21900  0024B4  51F2               	movf	(_LUN+9)& (0+255),w,b
 21901  0024B6  6EFE               	movwf	tosh,c
 21902  0024B8  6AFF               	clrf	tosu,c
 21903  0024BA  50FA               	movf	pclath,w,c
 21904  0024BC  0012               	return		;indir
 21905  0024BE                     u8319:
 21906  0024BE  06E8               	decf	wreg,f,c
 21907  0024C0  B4D8               	btfsc	status,2,c
 21908  0024C2  D01A               	goto	l675
 21909                           
 21910                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21911  0024C4  0E64               	movlw	100
 21912  0024C6  0100               	movlb	0	; () banked
 21913  0024C8  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 21914  0024CA  D002               	goto	l674
 21915                           
 21916                           ; BSR set to: 0
 21917                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21918  0024CC  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 21919                           
 21920                           ;usb_device_msd.c: 1088: break;
 21921  0024CE  D085               	goto	l668
 21922  0024D0                     l674:
 21923                           
 21924                           ; BSR set to: 0
 21925                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21926                           
 21927                           ; BSR set to: 0
 21928  0024D0  0E02               	movlw	2
 21929  0024D2  010D               	movlb	13	; () banked
 21930  0024D4  6F8C               	movwf	140,b	;volatile
 21931                           
 21932                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21933  0024D6  0101               	movlb	1	; () banked
 21934  0024D8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21935  0024DA  0BF0               	andlw	-16
 21936  0024DC  0903               	iorlw	3
 21937  0024DE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21938                           
 21939                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21940  0024E0  0E00               	movlw	0
 21941  0024E2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21942                           
 21943                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21944  0024E4  0E00               	movlw	0
 21945  0024E6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21946                           
 21947                           ; BSR set to: 1
 21948                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21949  0024E8  0E01               	movlw	1
 21950  0024EA  6E01               	movwf	USBStallEndpoint@dir,c
 21951  0024EC  0E02               	movlw	2
 21952  0024EE  EC7E  F01E         	call	_USBStallEndpoint
 21953  0024F2  D05E               	goto	l10795
 21954  0024F4                     L24:
 21955  0024F4  6F9E               	movwf	_MSDReadState& (0+255),b
 21956                           
 21957                           ;usb_device_msd.c: 1109: break;
 21958  0024F6  D071               	goto	l668
 21959  0024F8                     l675:
 21960                           
 21961                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21962                           
 21963                           ; BSR set to: 0
 21964                           
 21965                           ; BSR set to: 0
 21966  0024F8  0E01               	movlw	1
 21967  0024FA  0100               	movlb	0	; () banked
 21968  0024FC  2783               	addwf	_LBA& (0+255),f,b
 21969  0024FE  0E00               	movlw	0
 21970  002500  2384               	addwfc	(_LBA+1)& (0+255),f,b
 21971  002502  2385               	addwfc	(_LBA+2)& (0+255),f,b
 21972  002504  2386               	addwfc	(_LBA+3)& (0+255),f,b
 21973                           
 21974                           ; BSR set to: 0
 21975                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21976  002506  0E00               	movlw	0
 21977  002508  010D               	movlb	13	; () banked
 21978  00250A  6F88               	movwf	136,b	;volatile
 21979  00250C  0E02               	movlw	2
 21980  00250E  6F89               	movwf	137,b	;volatile
 21981  002510  0E00               	movlw	0
 21982  002512  6F8A               	movwf	138,b	;volatile
 21983  002514  0E00               	movlw	0
 21984  002516  6F8B               	movwf	139,b	;volatile
 21985                           
 21986                           ; BSR set to: 13
 21987                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21988  002518  0E00               	movlw	0
 21989  00251A  0101               	movlb	1	; () banked
 21990  00251C  6F77               	movwf	_ptrNextData& (0+255),b
 21991  00251E  0E06               	movlw	6
 21992  002520  6F78               	movwf	(_ptrNextData+1)& (0+255),b
 21993                           
 21994                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21995  002522  0E03               	movlw	3
 21996  002524  0100               	movlb	0	; () banked
 21997  002526  6F9E               	movwf	_MSDReadState& (0+255),b
 21998  002528                     
 21999                           ; BSR set to: 0
 22000                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 22001                           
 22002                           ; BSR set to: 0
 22003  002528  010D               	movlb	13	; () banked
 22004  00252A  5188               	movf	136,w,b	;volatile
 22005  00252C  1189               	iorwf	137,w,b	;volatile
 22006  00252E  118A               	iorwf	138,w,b	;volatile
 22007  002530  118B               	iorwf	139,w,b	;volatile
 22008  002532  A4D8               	btfss	status,2,c
 22009  002534  D002               	goto	l677
 22010                           
 22011                           ; BSR set to: 13
 22012                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 22013  002536  0E01               	movlw	1
 22014  002538  D03C               	goto	L26
 22015  00253A                     l677:
 22016                           
 22017                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 22018                           
 22019                           ; BSR set to: 0
 22020  00253A  0E04               	movlw	4
 22021  00253C  0100               	movlb	0	; () banked
 22022  00253E  6F9E               	movwf	_MSDReadState& (0+255),b
 22023  002540                     
 22024                           ; BSR set to: 0
 22025                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 22026                           
 22027                           ; BSR set to: 0
 22028  002540  5189               	movf	_USBMSDInHandle& (0+255),w,b
 22029  002542  118A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22030  002544  B4D8               	btfsc	status,2,c
 22031  002546  D006               	goto	l679
 22032                           
 22033                           ; BSR set to: 0
 22034  002548  C089  FFD9         	movff	_USBMSDInHandle,fsr2l
 22035  00254C  C08A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22036  002550  BEDF               	btfsc	indf2,7,c
 22037  002552  D043               	goto	l668
 22038  002554                     l679:
 22039                           
 22040                           ; BSR set to: 0
 22041                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 22042                           
 22043                           ; BSR set to: 0
 22044  002554  0E01               	movlw	1
 22045  002556  6E01               	movwf	USBTransferOnePacket@dir,c
 22046  002558  C177  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 22047  00255C  C178  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 22048  002560  0E40               	movlw	64
 22049  002562  6E04               	movwf	USBTransferOnePacket@len,c
 22050  002564  0E02               	movlw	2
 22051  002566  EC89  F020         	call	_USBTransferOnePacket
 22052  00256A  C001  F089         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 22053  00256E  C002  F08A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 22054                           
 22055                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 22056  002572  0E03               	movlw	3
 22057  002574  0100               	movlb	0	; () banked
 22058  002576  6F9E               	movwf	_MSDReadState& (0+255),b
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 22062  002578  0E40               	movlw	64
 22063  00257A  0101               	movlb	1	; () banked
 22064  00257C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 22065  00257E  0E00               	movlw	0
 22066  002580  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 22067  002582  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 22068  002584  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 22069                           
 22070                           ; BSR set to: 1
 22071                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 22072  002586  0E40               	movlw	64
 22073  002588  010D               	movlb	13	; () banked
 22074  00258A  5F88               	subwf	136,f,b	;volatile
 22075  00258C  0E00               	movlw	0
 22076  00258E  5B89               	subwfb	137,f,b	;volatile
 22077  002590  5B8A               	subwfb	138,f,b	;volatile
 22078  002592  5B8B               	subwfb	139,f,b	;volatile
 22079                           
 22080                           ; BSR set to: 13
 22081                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 22082  002594  0E40               	movlw	64
 22083  002596  0101               	movlb	1	; () banked
 22084  002598  2777               	addwf	_ptrNextData& (0+255),f,b
 22085  00259A  0E00               	movlw	0
 22086  00259C  2378               	addwfc	(_ptrNextData+1)& (0+255),f,b
 22087                           
 22088                           ;usb_device_msd.c: 1149: break;
 22089  00259E  D01D               	goto	l668
 22090  0025A0                     
 22091                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 22092                           
 22093                           ; BSR set to: 1
 22094  0025A0  0E02               	movlw	2
 22095  0025A2  010D               	movlb	13	; () banked
 22096  0025A4  6F8C               	movwf	140,b	;volatile
 22097                           
 22098                           ; BSR set to: 13
 22099                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 22100  0025A6  0E01               	movlw	1
 22101  0025A8  6E01               	movwf	USBStallEndpoint@dir,c
 22102  0025AA  0E02               	movlw	2
 22103  0025AC  EC7E  F01E         	call	_USBStallEndpoint
 22104  0025B0                     l10795:
 22105                           
 22106                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 22107  0025B0  0E00               	movlw	0
 22108  0025B2                     L26:
 22109  0025B2  0100               	movlb	0	; () banked
 22110  0025B4  D79F               	goto	L24
 22111  0025B6                     l665:
 22112                           
 22113                           ; BSR set to: 0
 22114  0025B6  0100               	movlb	0	; () banked
 22115  0025B8  519E               	movf	_MSDReadState& (0+255),w,b
 22116                           
 22117                           ; Switch size 1, requested type "space"
 22118                           ; Number of cases is 5, Range of values is 0 to 4
 22119                           ; switch strategies available:
 22120                           ; Name         Instructions Cycles
 22121                           ; simple_byte           16     9 (average)
 22122                           ;	Chosen strategy is simple_byte
 22123  0025BA  0A00               	xorlw	0	; case 0
 22124  0025BC  B4D8               	btfsc	status,2,c
 22125  0025BE  D724               	goto	l666
 22126  0025C0  0A01               	xorlw	1	; case 1
 22127  0025C2  B4D8               	btfsc	status,2,c
 22128  0025C4  D74B               	goto	l669
 22129  0025C6  0A03               	xorlw	3	; case 2
 22130  0025C8  B4D8               	btfsc	status,2,c
 22131  0025CA  D753               	goto	l671
 22132  0025CC  0A01               	xorlw	1	; case 3
 22133  0025CE  B4D8               	btfsc	status,2,c
 22134  0025D0  D7AB               	goto	l676
 22135  0025D2  0A07               	xorlw	7	; case 4
 22136  0025D4  B4D8               	btfsc	status,2,c
 22137  0025D6  D7B4               	goto	l678
 22138  0025D8  D7E3               	goto	l680
 22139  0025DA                     l668:
 22140                           
 22141                           ;usb_device_msd.c: 1161: return MSDReadState;
 22142                           
 22143                           ; BSR set to: 0
 22144  0025DA  0100               	movlb	0	; () banked
 22145  0025DC  519E               	movf	_MSDReadState& (0+255),w,b
 22146  0025DE  0012               	return	
 22147  0025E0                     __end_of_MSDReadHandler:
 22148                           	opt stack 0
 22149                           tosu	equ	0xFFF
 22150                           tosh	equ	0xFFE
 22151                           tosl	equ	0xFFD
 22152                           pclath	equ	0xFFA
 22153                           tblptru	equ	0xFF8
 22154                           tblptrh	equ	0xFF7
 22155                           tblptrl	equ	0xFF6
 22156                           tablat	equ	0xFF5
 22157                           prodh	equ	0xFF4
 22158                           prodl	equ	0xFF3
 22159                           intcon	equ	0xFF2
 22160                           intcon3	equ	0xFF0
 22161                           indf0	equ	0xFEF
 22162                           postinc0	equ	0xFEE
 22163                           fsr0h	equ	0xFEA
 22164                           fsr0l	equ	0xFE9
 22165                           wreg	equ	0xFE8
 22166                           indf1	equ	0xFE7
 22167                           postdec1	equ	0xFE5
 22168                           plusw1	equ	0xFE3
 22169                           fsr1h	equ	0xFE2
 22170                           fsr1l	equ	0xFE1
 22171                           indf2	equ	0xFDF
 22172                           postinc2	equ	0xFDE
 22173                           postdec2	equ	0xFDD
 22174                           plusw2	equ	0xFDB
 22175                           fsr2h	equ	0xFDA
 22176                           fsr2l	equ	0xFD9
 22177                           status	equ	0xFD8
 22178                           
 22179 ;; *************** function _MSDCheckForErrorCases *****************
 22180 ;; Defined at:
 22181 ;;		line 1434 in file "usb_device_msd.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 22186 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 22187 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  1    wreg      unsigned char 
 22190 ;; Registers used:
 22191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22198 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22200 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22201 ;;Total ram usage:        7 bytes
 22202 ;; Hardware stack levels used:    1
 22203 ;; Hardware stack levels required when called:    2
 22204 ;; This function calls:
 22205 ;;		_MSDErrorHandler
 22206 ;; This function is called by:
 22207 ;;		_MSDProcessCommandMediaPresent
 22208 ;;		_MSDReadHandler
 22209 ;;		_MSDWriteHandler
 22210 ;; This function uses a non-reentrant model
 22211 ;;
 22212                           
 22213                           	psect	text102
 22214  0045C8                     __ptext102:
 22215                           	opt stack 0
 22216  0045C8                     _MSDCheckForErrorCases:
 22217                           	opt stack 23
 22218                           
 22219                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 22220                           
 22221                           ; BSR set to: 0
 22222                           ;incstack = 0
 22223  0045C8  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22224  0045CA  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22225  0045CC  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22226  0045CE  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22227  0045D0  A4D8               	btfss	status,2,c
 22228  0045D2  D002               	goto	l710
 22229                           
 22230                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 22231  0045D4  0E01               	movlw	1
 22232  0045D6  D001               	goto	L27
 22233  0045D8                     l710:
 22234                           
 22235                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 22236  0045D8  0E00               	movlw	0
 22237  0045DA                     L27:
 22238  0045DA  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 22239                           
 22240                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 22241  0045DC  0100               	movlb	0	; () banked
 22242  0045DE  0599               	decf	_MSDHostNoData& (0+255),w,b
 22243  0045E0  A4D8               	btfss	status,2,c
 22244  0045E2  D005               	goto	l712
 22245                           
 22246                           ; BSR set to: 0
 22247  0045E4  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22248  0045E6  A4D8               	btfss	status,2,c
 22249  0045E8  D002               	goto	l712
 22250                           
 22251                           ; BSR set to: 0
 22252                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 22253  0045EA  0E00               	movlw	0
 22254                           
 22255                           ; BSR set to: 0
 22256  0045EC  0012               	return	
 22257  0045EE                     l712:
 22258                           
 22259                           ; BSR set to: 0
 22260                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 22261                           
 22262                           ; BSR set to: 0
 22263  0045EE  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22264  0045F0  0101               	movlb	1	; () banked
 22265  0045F2  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 22266  0045F4  E11A               	bnz	l10391
 22267  0045F6  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22268  0045F8  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 22269  0045FA  E117               	bnz	l10391
 22270  0045FC  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22271  0045FE  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 22272  004600  E114               	bnz	l10391
 22273  004602  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22274  004604  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 22275  004606  A4D8               	btfss	status,2,c
 22276  004608  D010               	goto	l718
 22277                           
 22278                           ; BSR set to: 1
 22279                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 22280  00460A  0100               	movlb	0	; () banked
 22281  00460C  05A0               	decf	_MSD_State& (0+255),w,b
 22282  00460E  A4D8               	btfss	status,2,c
 22283  004610  D006               	goto	l715
 22284                           
 22285                           ; BSR set to: 0
 22286                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 22287  004612  0E2A               	movlw	42
 22288  004614  199F               	xorwf	_MSDCommandState& (0+255),w,b
 22289  004616  B4D8               	btfsc	status,2,c
 22290  004618  D008               	goto	l718
 22291                           
 22292                           ; BSR set to: 0
 22293                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 22294  00461A  0E00               	movlw	0
 22295                           
 22296                           ; BSR set to: 0
 22297  00461C  0012               	return	
 22298  00461E                     l715:
 22299                           
 22300                           ; BSR set to: 0
 22301                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 22302                           
 22303                           ; BSR set to: 0
 22304  00461E  0E2A               	movlw	42
 22305  004620  199F               	xorwf	_MSDCommandState& (0+255),w,b
 22306  004622  A4D8               	btfss	status,2,c
 22307  004624  D002               	goto	l718
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 22311  004626  0E00               	movlw	0
 22312                           
 22313                           ; BSR set to: 0
 22314  004628  0012               	return	
 22315  00462A                     l718:
 22316  00462A                     l10391:
 22317                           
 22318                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 22319  00462A  0101               	movlb	1	; () banked
 22320  00462C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22321  00462E  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 22322  004630  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22323  004632  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22324  004634  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22325  004636  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22326  004638  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22327  00463A  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22328  00463C  B0D8               	btfsc	status,0,c
 22329  00463E  D002               	goto	l719
 22330                           
 22331                           ; BSR set to: 1
 22332                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 22333  004640  0E01               	movlw	1
 22334  004642  D001               	goto	L28
 22335  004644                     l719:
 22336                           
 22337                           ; BSR set to: 1
 22338                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 22339                           
 22340                           ; BSR set to: 1
 22341  004644  0E00               	movlw	0
 22342  004646                     L28:
 22343  004646  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 22344                           
 22345                           ; BSR set to: 1
 22346                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 22347                           
 22348                           ; BSR set to: 1
 22349  004648  0E02               	movlw	2
 22350  00464A  0100               	movlb	0	; () banked
 22351  00464C  19A0               	xorwf	_MSD_State& (0+255),w,b
 22352  00464E  A4D8               	btfss	status,2,c
 22353  004650  D014               	goto	l721
 22354                           
 22355                           ; BSR set to: 0
 22356                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 22357  004652  0E2A               	movlw	42
 22358  004654  199F               	xorwf	_MSDCommandState& (0+255),w,b
 22359  004656  B4D8               	btfsc	status,2,c
 22360  004658  D005               	goto	l722
 22361                           
 22362                           ; BSR set to: 0
 22363  00465A  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 22364  00465C  A4D8               	btfss	status,2,c
 22365  00465E  D002               	goto	l722
 22366  004660                     u7860:
 22367                           
 22368                           ; BSR set to: 0
 22369                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 22370  004660  0E05               	movlw	5
 22371  004662  D01D               	goto	L31
 22372  004664                     l722:
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 22376                           
 22377                           ; BSR set to: 0
 22378  004664  0599               	decf	_MSDHostNoData& (0+255),w,b
 22379  004666  B4D8               	btfsc	status,2,c
 22380  004668  D00F               	goto	u7910
 22381                           
 22382                           ; BSR set to: 0
 22383                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 22384                           
 22385                           ; BSR set to: 0
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 22389  00466A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22390  00466C  B4D8               	btfsc	status,2,c
 22391  00466E  D003               	goto	u7890
 22392                           
 22393                           ; BSR set to: 0
 22394                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 22395                           
 22396                           ; BSR set to: 0
 22397                           
 22398                           ; BSR set to: 0
 22399                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 22400  004670  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22401  004672  A4D8               	btfss	status,2,c
 22402  004674  D7F5               	goto	u7860
 22403  004676                     u7890:
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 22407  004676  0E04               	movlw	4
 22408  004678  D012               	goto	L31
 22409  00467A                     l721:
 22410                           
 22411                           ; BSR set to: 0
 22412                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 22413                           
 22414                           ; BSR set to: 0
 22415  00467A  0E2A               	movlw	42
 22416  00467C  199F               	xorwf	_MSDCommandState& (0+255),w,b
 22417  00467E  B4D8               	btfsc	status,2,c
 22418  004680  D00D               	goto	l737
 22419                           
 22420                           ; BSR set to: 0
 22421                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 22422                           
 22423                           ; BSR set to: 0
 22424                           
 22425                           ; BSR set to: 0
 22426                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 22427  004682  0599               	decf	_MSDHostNoData& (0+255),w,b
 22428  004684  A4D8               	btfss	status,2,c
 22429  004686  D002               	goto	l733
 22430  004688                     u7910:
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 22434  004688  0E01               	movlw	1
 22435  00468A  D009               	goto	L31
 22436  00468C                     l733:
 22437                           
 22438                           ; BSR set to: 0
 22439                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 22440                           
 22441                           ; BSR set to: 0
 22442  00468C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22443  00468E  B4D8               	btfsc	status,2,c
 22444  004690  D003               	goto	u7930
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 22448                           
 22449                           ; BSR set to: 0
 22450                           
 22451                           ; BSR set to: 0
 22452                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 22453  004692  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22454  004694  A4D8               	btfss	status,2,c
 22455  004696  D002               	goto	l737
 22456  004698                     u7930:
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 22460  004698  0E02               	movlw	2
 22461  00469A  D001               	goto	L31
 22462  00469C                     l737:
 22463                           
 22464                           ; BSR set to: 0
 22465                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 22466                           
 22467                           ; BSR set to: 0
 22468  00469C  0E03               	movlw	3
 22469  00469E                     L31:
 22470  00469E  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 22474                           
 22475                           ; BSR set to: 0
 22476                           
 22477                           ; BSR set to: 0
 22478                           
 22479                           ; BSR set to: 0
 22480                           
 22481                           ; BSR set to: 0
 22482                           
 22483                           ; BSR set to: 0
 22484  0046A0  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22485  0046A2  EC85  F01F         	call	_MSDErrorHandler
 22486                           
 22487                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 22488  0046A6  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22489  0046A8  0012               	return	
 22490  0046AA                     __end_of_MSDCheckForErrorCases:
 22491                           	opt stack 0
 22492                           tosu	equ	0xFFF
 22493                           tosh	equ	0xFFE
 22494                           tosl	equ	0xFFD
 22495                           pclath	equ	0xFFA
 22496                           tblptru	equ	0xFF8
 22497                           tblptrh	equ	0xFF7
 22498                           tblptrl	equ	0xFF6
 22499                           tablat	equ	0xFF5
 22500                           prodh	equ	0xFF4
 22501                           prodl	equ	0xFF3
 22502                           intcon	equ	0xFF2
 22503                           intcon3	equ	0xFF0
 22504                           indf0	equ	0xFEF
 22505                           postinc0	equ	0xFEE
 22506                           fsr0h	equ	0xFEA
 22507                           fsr0l	equ	0xFE9
 22508                           wreg	equ	0xFE8
 22509                           indf1	equ	0xFE7
 22510                           postdec1	equ	0xFE5
 22511                           plusw1	equ	0xFE3
 22512                           fsr1h	equ	0xFE2
 22513                           fsr1l	equ	0xFE1
 22514                           indf2	equ	0xFDF
 22515                           postinc2	equ	0xFDE
 22516                           postdec2	equ	0xFDD
 22517                           plusw2	equ	0xFDB
 22518                           fsr2h	equ	0xFDA
 22519                           fsr2l	equ	0xFD9
 22520                           status	equ	0xFD8
 22521                           
 22522 ;; *************** function _MSDErrorHandler *****************
 22523 ;; Defined at:
 22524 ;;		line 1577 in file "usb_device_msd.c"
 22525 ;; Parameters:    Size  Location     Type
 22526 ;;  ErrorCase       1    wreg     unsigned char 
 22527 ;; Auto vars:     Size  Location     Type
 22528 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 22529 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 22530 ;; Return value:  Size  Location     Type
 22531 ;;                  1    wreg      void 
 22532 ;; Registers used:
 22533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22534 ;; Tracked objects:
 22535 ;;		On entry : 0/0
 22536 ;;		On exit  : 0/0
 22537 ;;		Unchanged: 0/0
 22538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22543 ;;Total ram usage:        2 bytes
 22544 ;; Hardware stack levels used:    1
 22545 ;; Hardware stack levels required when called:    1
 22546 ;; This function calls:
 22547 ;;		_ResetSenseData
 22548 ;;		_USBStallEndpoint
 22549 ;; This function is called by:
 22550 ;;		_MSDProcessCommandMediaAbsent
 22551 ;;		_MSDProcessCommandMediaPresent
 22552 ;;		_MSDCheckForErrorCases
 22553 ;; This function uses a non-reentrant model
 22554 ;;
 22555                           
 22556                           	psect	text103
 22557  003F0A                     __ptext103:
 22558                           	opt stack 0
 22559  003F0A                     _MSDErrorHandler:
 22560                           	opt stack 23
 22561                           
 22562                           ;incstack = 0
 22563                           ;MSDErrorHandler@ErrorCase stored from wreg
 22564  003F0A  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 22565                           
 22566                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 22567  003F0C  0100               	movlb	0	; () banked
 22568  003F0E  5189               	movf	_USBMSDInHandle& (0+255),w,b
 22569  003F10  118A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22570  003F12  B4D8               	btfsc	status,2,c
 22571  003F14  D006               	goto	u7490
 22572                           
 22573                           ; BSR set to: 0
 22574  003F16  C089  FFD9         	movff	_USBMSDInHandle,fsr2l
 22575  003F1A  C08A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22576  003F1E  BEDF               	btfsc	indf2,7,c
 22577  003F20  0012               	return	
 22578  003F22                     u7490:
 22579                           
 22580                           ; BSR set to: 0
 22581                           
 22582                           ; BSR set to: 0
 22583  003F22  518B               	movf	_USBMSDOutHandle& (0+255),w,b
 22584  003F24  118C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22585  003F26  B4D8               	btfsc	status,2,c
 22586  003F28  D006               	goto	l741
 22587                           
 22588                           ; BSR set to: 0
 22589  003F2A  C08B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22590  003F2E  C08C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22591  003F32  BEDF               	btfsc	indf2,7,c
 22592  003F34  0012               	return	
 22593  003F36                     l741:
 22594                           
 22595                           ; BSR set to: 0
 22596                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 22597  003F36  C0A0  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 22598                           
 22599                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 22600  003F3A  699F               	setf	_MSDCommandState& (0+255),b
 22601                           
 22602                           ; BSR set to: 0
 22603                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 22604  003F3C  0E00               	movlw	0
 22605  003F3E  6F9E               	movwf	_MSDReadState& (0+255),b
 22606                           
 22607                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 22608  003F40  0E00               	movlw	0
 22609  003F42  6F9D               	movwf	_MSDWriteState& (0+255),b
 22610                           
 22611                           ; BSR set to: 0
 22612                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 22613  003F44  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 22614  003F48  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 22615  003F4C  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 22616  003F50  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 22617                           
 22618                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 22619  003F54  0E01               	movlw	1
 22620  003F56  010D               	movlb	13	; () banked
 22621  003F58  6F8C               	movwf	140,b	;volatile
 22622                           
 22623                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 22624  003F5A  0E03               	movlw	3
 22625  003F5C  0100               	movlb	0	; () banked
 22626  003F5E  6FA0               	movwf	_MSD_State& (0+255),b
 22627                           
 22628                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 22629  003F60  D043               	goto	l747
 22630  003F62                     
 22631                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 22632                           
 22633                           ; BSR set to: 0
 22634  003F62  0E02               	movlw	2
 22635  003F64  010D               	movlb	13	; () banked
 22636  003F66  6F8C               	movwf	140,b	;volatile
 22637                           
 22638                           ;usb_device_msd.c: 1607: break;
 22639  003F68  0012               	return	
 22640  003F6A                     
 22641                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 22642                           
 22643                           ; BSR set to: 13
 22644  003F6A  0E01               	movlw	1
 22645  003F6C  6E01               	movwf	USBStallEndpoint@dir,c
 22646  003F6E  0E02               	movlw	2
 22647  003F70  EC7E  F01E         	call	_USBStallEndpoint
 22648                           
 22649                           ;usb_device_msd.c: 1611: break;
 22650  003F74  0012               	return	
 22651  003F76                     
 22652                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 22653  003F76  0E02               	movlw	2
 22654  003F78  010D               	movlb	13	; () banked
 22655  003F7A  6F8C               	movwf	140,b	;volatile
 22656                           
 22657                           ; BSR set to: 13
 22658                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 22659  003F7C  0E01               	movlw	1
 22660  003F7E  6E01               	movwf	USBStallEndpoint@dir,c
 22661  003F80  0E02               	movlw	2
 22662  003F82  EC7E  F01E         	call	_USBStallEndpoint
 22663                           
 22664                           ;usb_device_msd.c: 1616: break;
 22665  003F86  0012               	return	
 22666  003F88                     
 22667                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 22668  003F88  0E00               	movlw	0
 22669  003F8A  6E01               	movwf	USBStallEndpoint@dir,c
 22670  003F8C  0E02               	movlw	2
 22671  003F8E  EC7E  F01E         	call	_USBStallEndpoint
 22672                           
 22673                           ;usb_device_msd.c: 1620: break;
 22674  003F92  0012               	return	
 22675  003F94                     
 22676                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 22677  003F94  0E02               	movlw	2
 22678  003F96  010D               	movlb	13	; () banked
 22679  003F98  6F8C               	movwf	140,b	;volatile
 22680                           
 22681                           ; BSR set to: 13
 22682                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 22683  003F9A  0E00               	movlw	0
 22684  003F9C  6E01               	movwf	USBStallEndpoint@dir,c
 22685  003F9E  0E02               	movlw	2
 22686  003FA0  EC7E  F01E         	call	_USBStallEndpoint
 22687                           
 22688                           ;usb_device_msd.c: 1625: break;
 22689  003FA4  0012               	return	
 22690  003FA6                     
 22691                           ;usb_device_msd.c: 1628: ResetSenseData();
 22692  003FA6  ECED  F031         	call	_ResetSenseData	;wreg free
 22693                           
 22694                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 22695  003FAA  0101               	movlb	1	; () banked
 22696  003FAC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22697  003FAE  0BF0               	andlw	-16
 22698  003FB0  0905               	iorlw	5
 22699  003FB2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22700                           
 22701                           ; BSR set to: 1
 22702                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 22703  003FB4  0E20               	movlw	32
 22704  003FB6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22705                           
 22706                           ; BSR set to: 1
 22707                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 22708  003FB8  0E00               	movlw	0
 22709  003FBA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22710                           
 22711                           ; BSR set to: 1
 22712                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 22713  003FBC  0E02               	movlw	2
 22714  003FBE  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 22715  003FC0  A4D8               	btfss	status,2,c
 22716  003FC2  D00C               	goto	l755
 22717                           
 22718                           ; BSR set to: 1
 22719  003FC4  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22720  003FC6  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22721  003FC8  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22722  003FCA  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22723  003FCC  B4D8               	btfsc	status,2,c
 22724  003FCE  D006               	goto	l755
 22725                           
 22726                           ; BSR set to: 1
 22727                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22728  003FD0  0E00               	movlw	0
 22729  003FD2  6E01               	movwf	USBStallEndpoint@dir,c
 22730  003FD4  0E02               	movlw	2
 22731  003FD6  EC7E  F01E         	call	_USBStallEndpoint
 22732                           
 22733                           ;usb_device_msd.c: 1636: }
 22734  003FDA  0012               	return	
 22735  003FDC                     l755:
 22736                           
 22737                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22738  003FDC  0E01               	movlw	1
 22739  003FDE  6E01               	movwf	USBStallEndpoint@dir,c
 22740  003FE0  0E02               	movlw	2
 22741  003FE2  EC7E  F01E         	call	_USBStallEndpoint
 22742                           
 22743                           ;usb_device_msd.c: 1644: }
 22744                           
 22745                           ;usb_device_msd.c: 1643: break;
 22746                           
 22747                           ;usb_device_msd.c: 1642: default:
 22748                           
 22749                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22750  003FE6  0012               	return	
 22751  003FE8                     l747:
 22752  003FE8  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22753                           
 22754                           ; Switch size 1, requested type "space"
 22755                           ; Number of cases is 6, Range of values is 1 to 127
 22756                           ; switch strategies available:
 22757                           ; Name         Instructions Cycles
 22758                           ; simple_byte           19    10 (average)
 22759                           ;	Chosen strategy is simple_byte
 22760  003FEA  0A01               	xorlw	1	; case 1
 22761  003FEC  B4D8               	btfsc	status,2,c
 22762  003FEE  D7B9               	goto	l748
 22763  003FF0  0A03               	xorlw	3	; case 2
 22764  003FF2  B4D8               	btfsc	status,2,c
 22765  003FF4  D7BA               	goto	l750
 22766  003FF6  0A01               	xorlw	1	; case 3
 22767  003FF8  B4D8               	btfsc	status,2,c
 22768  003FFA  D7BD               	goto	l751
 22769  003FFC  0A07               	xorlw	7	; case 4
 22770  003FFE  B4D8               	btfsc	status,2,c
 22771  004000  D7C3               	goto	l752
 22772  004002  0A01               	xorlw	1	; case 5
 22773  004004  B4D8               	btfsc	status,2,c
 22774  004006  D7C6               	goto	l753
 22775  004008  0A7A               	xorlw	122	; case 127
 22776  00400A  A4D8               	btfss	status,2,c
 22777  00400C  0012               	return	
 22778  00400E  D7CB               	goto	l754
 22779  004010                     __end_of_MSDErrorHandler:
 22780                           	opt stack 0
 22781                           tosu	equ	0xFFF
 22782                           tosh	equ	0xFFE
 22783                           tosl	equ	0xFFD
 22784                           pclath	equ	0xFFA
 22785                           tblptru	equ	0xFF8
 22786                           tblptrh	equ	0xFF7
 22787                           tblptrl	equ	0xFF6
 22788                           tablat	equ	0xFF5
 22789                           prodh	equ	0xFF4
 22790                           prodl	equ	0xFF3
 22791                           intcon	equ	0xFF2
 22792                           intcon3	equ	0xFF0
 22793                           indf0	equ	0xFEF
 22794                           postinc0	equ	0xFEE
 22795                           fsr0h	equ	0xFEA
 22796                           fsr0l	equ	0xFE9
 22797                           wreg	equ	0xFE8
 22798                           indf1	equ	0xFE7
 22799                           postdec1	equ	0xFE5
 22800                           plusw1	equ	0xFE3
 22801                           fsr1h	equ	0xFE2
 22802                           fsr1l	equ	0xFE1
 22803                           indf2	equ	0xFDF
 22804                           postinc2	equ	0xFDE
 22805                           postdec2	equ	0xFDD
 22806                           plusw2	equ	0xFDB
 22807                           fsr2h	equ	0xFDA
 22808                           fsr2l	equ	0xFD9
 22809                           status	equ	0xFD8
 22810                           
 22811 ;; *************** function _USBStallEndpoint *****************
 22812 ;; Defined at:
 22813 ;;		line 1073 in file "usb_device.c"
 22814 ;; Parameters:    Size  Location     Type
 22815 ;;  ep              1    wreg     unsigned char 
 22816 ;;  dir             1    0[COMRAM] unsigned char 
 22817 ;; Auto vars:     Size  Location     Type
 22818 ;;  ep              1    5[COMRAM] unsigned char 
 22819 ;;  p               2    6[COMRAM] PTR struct __BDT
 22820 ;;		 -> BDT(48), 
 22821 ;; Return value:  Size  Location     Type
 22822 ;;                  1    wreg      void 
 22823 ;; Registers used:
 22824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22825 ;; Tracked objects:
 22826 ;;		On entry : 0/0
 22827 ;;		On exit  : 0/0
 22828 ;;		Unchanged: 0/0
 22829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22831 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22833 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22834 ;;Total ram usage:        8 bytes
 22835 ;; Hardware stack levels used:    1
 22836 ;; This function calls:
 22837 ;;		Nothing
 22838 ;; This function is called by:
 22839 ;;		_MSDTasks
 22840 ;;		_MSDReadHandler
 22841 ;;		_MSDWriteHandler
 22842 ;;		_MSDErrorHandler
 22843 ;;		_MSDTransferTerminated
 22844 ;; This function uses a non-reentrant model
 22845 ;;
 22846                           
 22847                           	psect	text104
 22848  003CFC                     __ptext104:
 22849                           	opt stack 0
 22850  003CFC                     _USBStallEndpoint:
 22851                           	opt stack 27
 22852                           
 22853                           ;incstack = 0
 22854                           ;USBStallEndpoint@ep stored from wreg
 22855  003CFC  6E06               	movwf	USBStallEndpoint@ep,c
 22856                           
 22857                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22858  003CFE  5006               	movf	USBStallEndpoint@ep,w,c
 22859  003D00  A4D8               	btfss	status,2,c
 22860  003D02  D02C               	goto	l191
 22861                           
 22862                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22863  003D04  0100               	movlb	0	; () banked
 22864  003D06  EE20 F001          	lfsr	2,1
 22865  003D0A  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22866  003D0C  26D9               	addwf	fsr2l,f,c
 22867  003D0E  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22868  003D10  22DA               	addwfc	fsr2h,f,c
 22869  003D12  0E08               	movlw	8
 22870  003D14  6EDF               	movwf	indf2,c
 22871                           
 22872                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22873  003D16  EE20 F002          	lfsr	2,2
 22874  003D1A  518D               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22875  003D1C  26D9               	addwf	fsr2l,f,c
 22876  003D1E  518E               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22877  003D20  22DA               	addwfc	fsr2h,f,c
 22878  003D22  0E30               	movlw	48
 22879  003D24  6EDE               	movwf	postinc2,c
 22880  003D26  0E0D               	movlw	13
 22881  003D28  6EDD               	movwf	postdec2,c
 22882                           
 22883                           ; BSR set to: 0
 22884                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22885  003D2A  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22886  003D2E  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22887  003D32  0E0C               	movlw	12
 22888  003D34  6EDF               	movwf	indf2,c
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22892  003D36  C08D  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22893  003D3A  C08E  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22894  003D3E  0E00               	movlw	0
 22895  003D40  8EDB               	bsf	plusw2,7,c
 22896                           
 22897                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22898  003D42  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 22899  003D46  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22900  003D4A  0E04               	movlw	4
 22901  003D4C  6EDF               	movwf	indf2,c
 22902                           
 22903                           ; BSR set to: 0
 22904                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22905  003D4E  C075  FFD9         	movff	_pBDTEntryIn,fsr2l
 22906  003D52  C076  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22907  003D56  0E00               	movlw	0
 22908  003D58  8EDB               	bsf	plusw2,7,c
 22909                           
 22910                           ;usb_device.c: 1089: }
 22911  003D5A  0012               	return	
 22912  003D5C                     l191:
 22913                           
 22914                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22915                           
 22916                           ; BSR set to: 0
 22917  003D5C  5001               	movf	USBStallEndpoint@dir,w,c
 22918  003D5E  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22919  003D60  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22920  003D62  90D8               	bcf	status,0,c
 22921  003D64  3602               	rlcf	??_USBStallEndpoint,f,c
 22922  003D66  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22923  003D68  5006               	movf	USBStallEndpoint@ep,w,c
 22924  003D6A  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22925  003D6C  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22926  003D6E  90D8               	bcf	status,0,c
 22927  003D70  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22928  003D72  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22929  003D74  90D8               	bcf	status,0,c
 22930  003D76  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22931  003D78  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22932  003D7A  5002               	movf	??_USBStallEndpoint,w,c
 22933  003D7C  2604               	addwf	??_USBStallEndpoint+2,f,c
 22934  003D7E  5003               	movf	??_USBStallEndpoint+1,w,c
 22935  003D80  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22936  003D82  90D8               	bcf	status,0,c
 22937  003D84  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22938  003D86  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22939  003D88  90D8               	bcf	status,0,c
 22940  003D8A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22941  003D8C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22942  003D8E  0E00               	movlw	0
 22943  003D90  2404               	addwf	??_USBStallEndpoint+2,w,c
 22944  003D92  6E07               	movwf	USBStallEndpoint@p,c
 22945  003D94  0E0D               	movlw	13
 22946  003D96  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22947  003D98  6E08               	movwf	USBStallEndpoint@p+1,c
 22948                           
 22949                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22950  003D9A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22951  003D9E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22952  003DA2  0E00               	movlw	0
 22953  003DA4  84DB               	bsf	plusw2,2,c
 22954                           
 22955                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22956  003DA6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22957  003DAA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22958  003DAE  0E00               	movlw	0
 22959  003DB0  8EDB               	bsf	plusw2,7,c
 22960                           
 22961                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22962  003DB2  5006               	movf	USBStallEndpoint@ep,w,c
 22963  003DB4  0D04               	mullw	4
 22964  003DB6  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22965  003DBA  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22966  003DBE  5001               	movf	USBStallEndpoint@dir,w,c
 22967  003DC0  0D02               	mullw	2
 22968  003DC2  50F3               	movf	prodl,w,c
 22969  003DC4  2602               	addwf	??_USBStallEndpoint,f,c
 22970  003DC6  50F4               	movf	prodh,w,c
 22971  003DC8  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22972  003DCA  90D8               	bcf	status,0,c
 22973  003DCC  3602               	rlcf	??_USBStallEndpoint,f,c
 22974  003DCE  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22975  003DD0  90D8               	bcf	status,0,c
 22976  003DD2  3602               	rlcf	??_USBStallEndpoint,f,c
 22977  003DD4  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22978  003DD6  0E04               	movlw	4
 22979  003DD8  2602               	addwf	??_USBStallEndpoint,f,c
 22980  003DDA  0E00               	movlw	0
 22981  003DDC  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22982  003DDE  0E00               	movlw	0
 22983  003DE0  2402               	addwf	??_USBStallEndpoint,w,c
 22984  003DE2  6E07               	movwf	USBStallEndpoint@p,c
 22985  003DE4  0E0D               	movlw	13
 22986  003DE6  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22987  003DE8  6E08               	movwf	USBStallEndpoint@p+1,c
 22988                           
 22989                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22990  003DEA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22991  003DEE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22992  003DF2  0E00               	movlw	0
 22993  003DF4  84DB               	bsf	plusw2,2,c
 22994                           
 22995                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22996  003DF6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22997  003DFA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22998  003DFE  0E00               	movlw	0
 22999  003E00  8EDB               	bsf	plusw2,7,c
 23000  003E02  0012               	return	
 23001  003E04                     __end_of_USBStallEndpoint:
 23002                           	opt stack 0
 23003                           tosu	equ	0xFFF
 23004                           tosh	equ	0xFFE
 23005                           tosl	equ	0xFFD
 23006                           pclath	equ	0xFFA
 23007                           tblptru	equ	0xFF8
 23008                           tblptrh	equ	0xFF7
 23009                           tblptrl	equ	0xFF6
 23010                           tablat	equ	0xFF5
 23011                           prodh	equ	0xFF4
 23012                           prodl	equ	0xFF3
 23013                           intcon	equ	0xFF2
 23014                           intcon3	equ	0xFF0
 23015                           indf0	equ	0xFEF
 23016                           postinc0	equ	0xFEE
 23017                           fsr0h	equ	0xFEA
 23018                           fsr0l	equ	0xFE9
 23019                           wreg	equ	0xFE8
 23020                           indf1	equ	0xFE7
 23021                           postdec1	equ	0xFE5
 23022                           plusw1	equ	0xFE3
 23023                           fsr1h	equ	0xFE2
 23024                           fsr1l	equ	0xFE1
 23025                           indf2	equ	0xFDF
 23026                           postinc2	equ	0xFDE
 23027                           postdec2	equ	0xFDD
 23028                           plusw2	equ	0xFDB
 23029                           fsr2h	equ	0xFDA
 23030                           fsr2l	equ	0xFD9
 23031                           status	equ	0xFD8
 23032                           
 23033 ;; *************** function _ResetSenseData *****************
 23034 ;; Defined at:
 23035 ;;		line 1373 in file "usb_device_msd.c"
 23036 ;; Parameters:    Size  Location     Type
 23037 ;;		None
 23038 ;; Auto vars:     Size  Location     Type
 23039 ;;		None
 23040 ;; Return value:  Size  Location     Type
 23041 ;;                  1    wreg      void 
 23042 ;; Registers used:
 23043 ;;		wreg, status,2
 23044 ;; Tracked objects:
 23045 ;;		On entry : 0/0
 23046 ;;		On exit  : 0/0
 23047 ;;		Unchanged: 0/0
 23048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23053 ;;Total ram usage:        0 bytes
 23054 ;; Hardware stack levels used:    1
 23055 ;; This function calls:
 23056 ;;		Nothing
 23057 ;; This function is called by:
 23058 ;;		_USBMSDInit
 23059 ;;		_MSDProcessCommandMediaAbsent
 23060 ;;		_MSDProcessCommandMediaPresent
 23061 ;;		_MSDErrorHandler
 23062 ;; This function uses a non-reentrant model
 23063 ;;
 23064                           
 23065                           	psect	text105
 23066  0063DA                     __ptext105:
 23067                           	opt stack 0
 23068  0063DA                     _ResetSenseData:
 23069                           	opt stack 26
 23070                           
 23071                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 23072                           
 23073                           ;incstack = 0
 23074  0063DA  0101               	movlb	1	; () banked
 23075  0063DC  911F               	bcf	_gblSenseData& (0+255),0,b
 23076  0063DE  931F               	bcf	_gblSenseData& (0+255),1,b
 23077  0063E0  951F               	bcf	_gblSenseData& (0+255),2,b
 23078  0063E2  971F               	bcf	_gblSenseData& (0+255),3,b
 23079  0063E4  891F               	bsf	_gblSenseData& (0+255),4,b
 23080  0063E6  8B1F               	bsf	_gblSenseData& (0+255),5,b
 23081  0063E8  8D1F               	bsf	_gblSenseData& (0+255),6,b
 23082                           
 23083                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 23084  0063EA  9F1F               	bcf	_gblSenseData& (0+255),7,b
 23085                           
 23086                           ; BSR set to: 1
 23087                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 23088  0063EC  0E00               	movlw	0
 23089  0063EE  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 23090                           
 23091                           ; BSR set to: 1
 23092                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 23093  0063F0  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 23094  0063F2  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 23095  0063F4  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 23096  0063F6  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 23097                           
 23098                           ; BSR set to: 1
 23099                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 23100  0063F8  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 23101                           
 23102                           ; BSR set to: 1
 23103                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 23104  0063FA  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 23105                           
 23106                           ; BSR set to: 1
 23107                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 23108  0063FC  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 23109                           
 23110                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 23111  0063FE  0E00               	movlw	0
 23112  006400  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 23113                           
 23114                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 23115  006402  0E00               	movlw	0
 23116  006404  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 23117                           
 23118                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 23119  006406  0E00               	movlw	0
 23120  006408  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 23121                           
 23122                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 23123  00640A  0E00               	movlw	0
 23124  00640C  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 23125                           
 23126                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 23127  00640E  0E0A               	movlw	10
 23128  006410  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 23129                           
 23130                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 23131  006412  0E00               	movlw	0
 23132  006414  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 23133  006416  0E00               	movlw	0
 23134  006418  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 23135  00641A  0E00               	movlw	0
 23136  00641C  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 23137  00641E  0E00               	movlw	0
 23138  006420  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 23139                           
 23140                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 23141  006422  0E00               	movlw	0
 23142  006424  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23143                           
 23144                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 23145  006426  0E00               	movlw	0
 23146  006428  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23147                           
 23148                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 23149  00642A  0E00               	movlw	0
 23150  00642C  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 23151                           
 23152                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 23153  00642E  0E00               	movlw	0
 23154  006430  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 23155                           
 23156                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 23157  006432  0E00               	movlw	0
 23158  006434  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 23159                           
 23160                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 23161  006436  0E00               	movlw	0
 23162  006438  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 23163                           
 23164                           ; BSR set to: 1
 23165  00643A  0012               	return		;funcret
 23166  00643C                     __end_of_ResetSenseData:
 23167                           	opt stack 0
 23168                           tosu	equ	0xFFF
 23169                           tosh	equ	0xFFE
 23170                           tosl	equ	0xFFD
 23171                           pclath	equ	0xFFA
 23172                           tblptru	equ	0xFF8
 23173                           tblptrh	equ	0xFF7
 23174                           tblptrl	equ	0xFF6
 23175                           tablat	equ	0xFF5
 23176                           prodh	equ	0xFF4
 23177                           prodl	equ	0xFF3
 23178                           intcon	equ	0xFF2
 23179                           intcon3	equ	0xFF0
 23180                           indf0	equ	0xFEF
 23181                           postinc0	equ	0xFEE
 23182                           fsr0h	equ	0xFEA
 23183                           fsr0l	equ	0xFE9
 23184                           wreg	equ	0xFE8
 23185                           indf1	equ	0xFE7
 23186                           postdec1	equ	0xFE5
 23187                           plusw1	equ	0xFE3
 23188                           fsr1h	equ	0xFE2
 23189                           fsr1l	equ	0xFE1
 23190                           indf2	equ	0xFDF
 23191                           postinc2	equ	0xFDE
 23192                           postdec2	equ	0xFDD
 23193                           plusw2	equ	0xFDB
 23194                           fsr2h	equ	0xFDA
 23195                           fsr2l	equ	0xFD9
 23196                           status	equ	0xFD8
 23197                           
 23198 ;; *************** function _ExternalFlash_SectorRead *****************
 23199 ;; Defined at:
 23200 ;;		line 40 in file "external_flash.c"
 23201 ;; Parameters:    Size  Location     Type
 23202 ;;  config          2   43[COMRAM] PTR void 
 23203 ;;		 -> NULL(0), 
 23204 ;;  sector_addr     4   45[COMRAM] unsigned long 
 23205 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 23206 ;;		 -> msd_buffer(512), 
 23207 ;; Auto vars:     Size  Location     Type
 23208 ;;  page            2   51[COMRAM] unsigned int 
 23209 ;; Return value:  Size  Location     Type
 23210 ;;                  1    wreg      unsigned char 
 23211 ;; Registers used:
 23212 ;;		wreg, status,2, status,0, cstack
 23213 ;; Tracked objects:
 23214 ;;		On entry : 0/0
 23215 ;;		On exit  : 0/0
 23216 ;;		Unchanged: 0/0
 23217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23221 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23222 ;;Total ram usage:       10 bytes
 23223 ;; Hardware stack levels used:    1
 23224 ;; Hardware stack levels required when called:    5
 23225 ;; This function calls:
 23226 ;;		_flash_sector_read
 23227 ;; This function is called by:
 23228 ;;		_MSDReadHandler
 23229 ;; This function uses a non-reentrant model
 23230 ;;
 23231                           
 23232                           	psect	text106
 23233  006EBC                     __ptext106:
 23234                           	opt stack 0
 23235  006EBC                     _ExternalFlash_SectorRead:
 23236                           	opt stack 20
 23237                           
 23238                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 23239                           
 23240                           ; BSR set to: 1
 23241                           ;incstack = 0
 23242  006EBC  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 23243  006EC0  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 23244                           
 23245                           ;external_flash.c: 45: if(sector_addr >= 8192)
 23246  006EC4  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 23247  006EC6  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 23248  006EC8  E104               	bnz	u8130
 23249  006ECA  0E20               	movlw	32
 23250  006ECC  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 23251  006ECE  A0D8               	btfss	status,0,c
 23252  006ED0  D002               	goto	l1939
 23253  006ED2                     u8130:
 23254                           
 23255                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 23256  006ED2  0E00               	movlw	0
 23257  006ED4  0012               	return	
 23258  006ED6                     l1939:
 23259                           
 23260                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 23261  006ED6  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 23262  006EDA  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 23263  006EDE  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 23264  006EE2  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 23265  006EE6  EC77  F038         	call	_flash_sector_read	;wreg free
 23266                           
 23267                           ;external_flash.c: 53: return 1;
 23268  006EEA  0E01               	movlw	1
 23269  006EEC  0012               	return	
 23270  006EEE                     __end_of_ExternalFlash_SectorRead:
 23271                           	opt stack 0
 23272                           tosu	equ	0xFFF
 23273                           tosh	equ	0xFFE
 23274                           tosl	equ	0xFFD
 23275                           pclath	equ	0xFFA
 23276                           tblptru	equ	0xFF8
 23277                           tblptrh	equ	0xFF7
 23278                           tblptrl	equ	0xFF6
 23279                           tablat	equ	0xFF5
 23280                           prodh	equ	0xFF4
 23281                           prodl	equ	0xFF3
 23282                           intcon	equ	0xFF2
 23283                           intcon3	equ	0xFF0
 23284                           indf0	equ	0xFEF
 23285                           postinc0	equ	0xFEE
 23286                           fsr0h	equ	0xFEA
 23287                           fsr0l	equ	0xFE9
 23288                           wreg	equ	0xFE8
 23289                           indf1	equ	0xFE7
 23290                           postdec1	equ	0xFE5
 23291                           plusw1	equ	0xFE3
 23292                           fsr1h	equ	0xFE2
 23293                           fsr1l	equ	0xFE1
 23294                           indf2	equ	0xFDF
 23295                           postinc2	equ	0xFDE
 23296                           postdec2	equ	0xFDD
 23297                           plusw2	equ	0xFDB
 23298                           fsr2h	equ	0xFDA
 23299                           fsr2l	equ	0xFD9
 23300                           status	equ	0xFD8
 23301                           
 23302 ;; *************** function _flash_sector_read *****************
 23303 ;; Defined at:
 23304 ;;		line 426 in file "flash.c"
 23305 ;; Parameters:    Size  Location     Type
 23306 ;;  page            2   39[COMRAM] unsigned int 
 23307 ;;  data            2   41[COMRAM] PTR unsigned char 
 23308 ;;		 -> buffer(512), msd_buffer(512), 
 23309 ;; Auto vars:     Size  Location     Type
 23310 ;;		None
 23311 ;; Return value:  Size  Location     Type
 23312 ;;                  1    wreg      void 
 23313 ;; Registers used:
 23314 ;;		wreg, status,2, status,0, cstack
 23315 ;; Tracked objects:
 23316 ;;		On entry : 0/0
 23317 ;;		On exit  : 0/0
 23318 ;;		Unchanged: 0/0
 23319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23323 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23324 ;;Total ram usage:        4 bytes
 23325 ;; Hardware stack levels used:    1
 23326 ;; Hardware stack levels required when called:    4
 23327 ;; This function calls:
 23328 ;;		__flash_partial_read
 23329 ;; This function is called by:
 23330 ;;		_ExternalFlash_SectorRead
 23331 ;;		__find_nth_cluster
 23332 ;;		_fat_find_file
 23333 ;;		_fat_get_format_status
 23334 ;;		__get_available_cluster
 23335 ;;		__make_cluster_chain
 23336 ;; This function uses a non-reentrant model
 23337 ;;
 23338                           
 23339                           	psect	text107
 23340  0070EE                     __ptext107:
 23341                           	opt stack 0
 23342  0070EE                     _flash_sector_read:
 23343                           	opt stack 23
 23344                           
 23345                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 23346                           
 23347                           ;incstack = 0
 23348  0070EE  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 23349  0070F2  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 23350  0070F6  0E00               	movlw	0
 23351  0070F8  6E17               	movwf	__flash_partial_read@start+1,c
 23352  0070FA  0E00               	movlw	0
 23353  0070FC  6E16               	movwf	__flash_partial_read@start,c
 23354  0070FE  0E02               	movlw	2
 23355  007100  6E19               	movwf	__flash_partial_read@length+1,c
 23356  007102  0E00               	movlw	0
 23357  007104  6E18               	movwf	__flash_partial_read@length,c
 23358  007106  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 23359  00710A  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 23360  00710E  EC2C  F02F         	call	__flash_partial_read	;wreg free
 23361  007112  0012               	return		;funcret
 23362  007114                     __end_of_flash_sector_read:
 23363                           	opt stack 0
 23364                           tosu	equ	0xFFF
 23365                           tosh	equ	0xFFE
 23366                           tosl	equ	0xFFD
 23367                           pclath	equ	0xFFA
 23368                           tblptru	equ	0xFF8
 23369                           tblptrh	equ	0xFF7
 23370                           tblptrl	equ	0xFF6
 23371                           tablat	equ	0xFF5
 23372                           prodh	equ	0xFF4
 23373                           prodl	equ	0xFF3
 23374                           intcon	equ	0xFF2
 23375                           intcon3	equ	0xFF0
 23376                           indf0	equ	0xFEF
 23377                           postinc0	equ	0xFEE
 23378                           fsr0h	equ	0xFEA
 23379                           fsr0l	equ	0xFE9
 23380                           wreg	equ	0xFE8
 23381                           indf1	equ	0xFE7
 23382                           postdec1	equ	0xFE5
 23383                           plusw1	equ	0xFE3
 23384                           fsr1h	equ	0xFE2
 23385                           fsr1l	equ	0xFE1
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           plusw2	equ	0xFDB
 23390                           fsr2h	equ	0xFDA
 23391                           fsr2l	equ	0xFD9
 23392                           status	equ	0xFD8
 23393                           
 23394 ;; *************** function __flash_partial_read *****************
 23395 ;; Defined at:
 23396 ;;		line 309 in file "flash.c"
 23397 ;; Parameters:    Size  Location     Type
 23398 ;;  page            2   19[COMRAM] unsigned int 
 23399 ;;  start           2   21[COMRAM] unsigned int 
 23400 ;;  length          2   23[COMRAM] unsigned int 
 23401 ;;  data            2   25[COMRAM] PTR unsigned char 
 23402 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 23403 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 23404 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 23405 ;;		 -> msd_buffer(512), 
 23406 ;; Auto vars:     Size  Location     Type
 23407 ;;  command         4   31[COMRAM] unsigned char [4]
 23408 ;;  address         4   35[COMRAM] unsigned long 
 23409 ;; Return value:  Size  Location     Type
 23410 ;;                  1    wreg      void 
 23411 ;; Registers used:
 23412 ;;		wreg, status,2, status,0, cstack
 23413 ;; Tracked objects:
 23414 ;;		On entry : 0/0
 23415 ;;		On exit  : 0/0
 23416 ;;		Unchanged: 0/0
 23417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23418 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23419 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23421 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23422 ;;Total ram usage:       20 bytes
 23423 ;; Hardware stack levels used:    1
 23424 ;; Hardware stack levels required when called:    3
 23425 ;; This function calls:
 23426 ;;		__flash_is_busy
 23427 ;;		_spi_tx_rx
 23428 ;; This function is called by:
 23429 ;;		_flash_sector_read
 23430 ;;		_flash_partial_read
 23431 ;; This function uses a non-reentrant model
 23432 ;;
 23433                           
 23434                           	psect	text108
 23435  005E58                     __ptext108:
 23436                           	opt stack 0
 23437  005E58                     __flash_partial_read:
 23438                           	opt stack 23
 23439                           
 23440                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 23441                           
 23442                           ;incstack = 0
 23443  005E58  ECD3  F038         	call	__flash_is_busy	;wreg free
 23444  005E5C  0900               	iorlw	0
 23445  005E5E  A4D8               	btfss	status,2,c
 23446  005E60  D7FB               	goto	__flash_partial_read
 23447                           
 23448                           ;flash.c: 318: address = page;
 23449  005E62  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 23450  005E66  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 23451  005E6A  6A26               	clrf	__flash_partial_read@address+2,c
 23452  005E6C  6A27               	clrf	__flash_partial_read@address+3,c
 23453                           
 23454                           ;flash.c: 319: address <<= 9;
 23455  005E6E  0E09               	movlw	9
 23456  005E70                     u7365:
 23457  005E70  90D8               	bcf	status,0,c
 23458  005E72  3624               	rlcf	__flash_partial_read@address,f,c
 23459  005E74  3625               	rlcf	__flash_partial_read@address+1,f,c
 23460  005E76  3626               	rlcf	__flash_partial_read@address+2,f,c
 23461  005E78  3627               	rlcf	__flash_partial_read@address+3,f,c
 23462  005E7A  2EE8               	decfsz	wreg,f,c
 23463  005E7C  D7F9               	goto	u7365
 23464                           
 23465                           ;flash.c: 320: address |= start;
 23466  005E7E  5016               	movf	__flash_partial_read@start,w,c
 23467  005E80  6E1C               	movwf	??__flash_partial_read& (0+255),c
 23468  005E82  5017               	movf	__flash_partial_read@start+1,w,c
 23469  005E84  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 23470  005E86  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 23471  005E88  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 23472  005E8A  501C               	movf	??__flash_partial_read,w,c
 23473  005E8C  1224               	iorwf	__flash_partial_read@address,f,c
 23474  005E8E  501D               	movf	??__flash_partial_read+1,w,c
 23475  005E90  1225               	iorwf	__flash_partial_read@address+1,f,c
 23476  005E92  501E               	movf	??__flash_partial_read+2,w,c
 23477  005E94  1226               	iorwf	__flash_partial_read@address+2,f,c
 23478  005E96  501F               	movf	??__flash_partial_read+3,w,c
 23479  005E98  1227               	iorwf	__flash_partial_read@address+3,f,c
 23480                           
 23481                           ;flash.c: 323: command[0] = 0x03;
 23482  005E9A  0E03               	movlw	3
 23483  005E9C  6E20               	movwf	__flash_partial_read@command,c
 23484                           
 23485                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 23486  005E9E  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 23487                           
 23488                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 23489  005EA2  5025               	movf	__flash_partial_read@address+1,w,c
 23490  005EA4  6E22               	movwf	__flash_partial_read@command+2,c
 23491                           
 23492                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 23493  005EA6  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 23494                           
 23495                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 23496  005EAA  0E20               	movlw	low __flash_partial_read@command
 23497  005EAC  6E01               	movwf	spi_tx_rx@command,c
 23498  005EAE  0E00               	movlw	high __flash_partial_read@command
 23499  005EB0  6E02               	movwf	spi_tx_rx@command+1,c
 23500  005EB2  0E00               	movlw	0
 23501  005EB4  6E04               	movwf	spi_tx_rx@command_length+1,c
 23502  005EB6  0E04               	movlw	4
 23503  005EB8  6E03               	movwf	spi_tx_rx@command_length,c
 23504  005EBA  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 23505  005EBE  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 23506  005EC2  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 23507  005EC6  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 23508  005ECA  ECC1  F02C         	call	_spi_tx_rx	;wreg free
 23509  005ECE  0012               	return		;funcret
 23510  005ED0                     __end_of__flash_partial_read:
 23511                           	opt stack 0
 23512                           tosu	equ	0xFFF
 23513                           tosh	equ	0xFFE
 23514                           tosl	equ	0xFFD
 23515                           pclath	equ	0xFFA
 23516                           tblptru	equ	0xFF8
 23517                           tblptrh	equ	0xFF7
 23518                           tblptrl	equ	0xFF6
 23519                           tablat	equ	0xFF5
 23520                           prodh	equ	0xFF4
 23521                           prodl	equ	0xFF3
 23522                           intcon	equ	0xFF2
 23523                           intcon3	equ	0xFF0
 23524                           indf0	equ	0xFEF
 23525                           postinc0	equ	0xFEE
 23526                           fsr0h	equ	0xFEA
 23527                           fsr0l	equ	0xFE9
 23528                           wreg	equ	0xFE8
 23529                           indf1	equ	0xFE7
 23530                           postdec1	equ	0xFE5
 23531                           plusw1	equ	0xFE3
 23532                           fsr1h	equ	0xFE2
 23533                           fsr1l	equ	0xFE1
 23534                           indf2	equ	0xFDF
 23535                           postinc2	equ	0xFDE
 23536                           postdec2	equ	0xFDD
 23537                           plusw2	equ	0xFDB
 23538                           fsr2h	equ	0xFDA
 23539                           fsr2l	equ	0xFD9
 23540                           status	equ	0xFD8
 23541                           
 23542 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 23543 ;; Defined at:
 23544 ;;		line 993 in file "usb_device_msd.c"
 23545 ;; Parameters:    Size  Location     Type
 23546 ;;  DiExpected      2    0[COMRAM] unsigned int 
 23547 ;; Auto vars:     Size  Location     Type
 23548 ;;		None
 23549 ;; Return value:  Size  Location     Type
 23550 ;;                  1    wreg      void 
 23551 ;; Registers used:
 23552 ;;		wreg, status,2, status,0
 23553 ;; Tracked objects:
 23554 ;;		On entry : 0/0
 23555 ;;		On exit  : 0/0
 23556 ;;		Unchanged: 0/0
 23557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23562 ;;Total ram usage:        6 bytes
 23563 ;; Hardware stack levels used:    1
 23564 ;; This function calls:
 23565 ;;		Nothing
 23566 ;; This function is called by:
 23567 ;;		_MSDProcessCommandMediaPresent
 23568 ;; This function uses a non-reentrant model
 23569 ;;
 23570                           
 23571                           	psect	text109
 23572  005852                     __ptext109:
 23573                           	opt stack 0
 23574  005852                     _MSDComputeDeviceInAndResidue:
 23575                           	opt stack 26
 23576                           
 23577                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 23578                           
 23579                           ;incstack = 0
 23580  005852  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23581  005854  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23582  005856  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23583  005858  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23584  00585A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23585  00585C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23586  00585E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 23587  005860  0101               	movlb	1	; () banked
 23588  005862  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23589  005864  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 23590  005866  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 23591  005868  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 23592  00586A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 23593  00586C  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 23594  00586E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 23595  005870  B0D8               	btfsc	status,0,c
 23596  005872  D00E               	goto	l659
 23597                           
 23598                           ; BSR set to: 1
 23599                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 23600  005874  0E00               	movlw	0
 23601  005876  010D               	movlb	13	; () banked
 23602  005878  6F88               	movwf	136,b	;volatile
 23603  00587A  0E00               	movlw	0
 23604  00587C  6F89               	movwf	137,b	;volatile
 23605  00587E  0E00               	movlw	0
 23606  005880  6F8A               	movwf	138,b	;volatile
 23607  005882  0E00               	movlw	0
 23608  005884  6F8B               	movwf	139,b	;volatile
 23609                           
 23610                           ; BSR set to: 13
 23611                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 23612  005886  C108  F087         	movff	_gblCBW+8,_TransferLength
 23613  00588A  C109  F088         	movff	_gblCBW+9,_TransferLength+1
 23614                           
 23615                           ;usb_device_msd.c: 1002: }
 23616  00588E  0012               	return	
 23617  005890                     l659:
 23618                           
 23619                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 23620                           
 23621                           ; BSR set to: 13
 23622  005890  0100               	movlb	0	; () banked
 23623  005892  5187               	movf	_TransferLength& (0+255),w,b
 23624  005894  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23625  005896  5188               	movf	(_TransferLength+1)& (0+255),w,b
 23626  005898  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23627  00589A  B0D8               	btfsc	status,0,c
 23628  00589C  D004               	goto	l661
 23629                           
 23630                           ; BSR set to: 0
 23631                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 23632  00589E  C001  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 23633  0058A2  C002  F088         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 23634  0058A6                     l661:
 23635                           
 23636                           ; BSR set to: 0
 23637                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 23638                           
 23639                           ; BSR set to: 0
 23640  0058A6  5187               	movf	_TransferLength& (0+255),w,b
 23641  0058A8  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23642  0058AA  5188               	movf	(_TransferLength+1)& (0+255),w,b
 23643  0058AC  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23644  0058AE  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23645  0058B0  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23646  0058B2  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 23647  0058B4  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 23648  0058B6  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 23649  0058B8  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 23650  0058BA  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 23651  0058BC  0E00               	movlw	0
 23652  0058BE  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 23653  0058C0  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 23654  0058C2  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 23655  0058C4  0101               	movlb	1	; () banked
 23656  0058C6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23657  0058C8  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 23658  0058CA  010D               	movlb	13	; () banked
 23659  0058CC  6F88               	movwf	136,b	;volatile
 23660  0058CE  0101               	movlb	1	; () banked
 23661  0058D0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23662  0058D2  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 23663  0058D4  010D               	movlb	13	; () banked
 23664  0058D6  6F89               	movwf	137,b	;volatile
 23665  0058D8  0101               	movlb	1	; () banked
 23666  0058DA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23667  0058DC  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 23668  0058DE  010D               	movlb	13	; () banked
 23669  0058E0  6F8A               	movwf	138,b	;volatile
 23670  0058E2  0101               	movlb	1	; () banked
 23671  0058E4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23672  0058E6  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 23673  0058E8  010D               	movlb	13	; () banked
 23674  0058EA  6F8B               	movwf	139,b	;volatile
 23675  0058EC  0012               	return	
 23676  0058EE                     __end_of_MSDComputeDeviceInAndResidue:
 23677                           	opt stack 0
 23678                           tosu	equ	0xFFF
 23679                           tosh	equ	0xFFE
 23680                           tosl	equ	0xFFD
 23681                           pclath	equ	0xFFA
 23682                           tblptru	equ	0xFF8
 23683                           tblptrh	equ	0xFF7
 23684                           tblptrl	equ	0xFF6
 23685                           tablat	equ	0xFF5
 23686                           prodh	equ	0xFF4
 23687                           prodl	equ	0xFF3
 23688                           intcon	equ	0xFF2
 23689                           intcon3	equ	0xFF0
 23690                           indf0	equ	0xFEF
 23691                           postinc0	equ	0xFEE
 23692                           fsr0h	equ	0xFEA
 23693                           fsr0l	equ	0xFE9
 23694                           wreg	equ	0xFE8
 23695                           indf1	equ	0xFE7
 23696                           postdec1	equ	0xFE5
 23697                           plusw1	equ	0xFE3
 23698                           fsr1h	equ	0xFE2
 23699                           fsr1l	equ	0xFE1
 23700                           indf2	equ	0xFDF
 23701                           postinc2	equ	0xFDE
 23702                           postdec2	equ	0xFDD
 23703                           plusw2	equ	0xFDB
 23704                           fsr2h	equ	0xFDA
 23705                           fsr2l	equ	0xFD9
 23706                           status	equ	0xFD8
 23707                           
 23708 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 23709 ;; Defined at:
 23710 ;;		line 18 in file "external_flash.c"
 23711 ;; Parameters:    Size  Location     Type
 23712 ;;  config          2    0[COMRAM] PTR void 
 23713 ;;		 -> NULL(0), 
 23714 ;; Auto vars:     Size  Location     Type
 23715 ;;		None
 23716 ;; Return value:  Size  Location     Type
 23717 ;;                  2    0[COMRAM] unsigned int 
 23718 ;; Registers used:
 23719 ;;		wreg, status,2
 23720 ;; Tracked objects:
 23721 ;;		On entry : 0/0
 23722 ;;		On exit  : 0/0
 23723 ;;		Unchanged: 0/0
 23724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23729 ;;Total ram usage:        2 bytes
 23730 ;; Hardware stack levels used:    1
 23731 ;; This function calls:
 23732 ;;		Nothing
 23733 ;; This function is called by:
 23734 ;;		_MSDProcessCommandMediaPresent
 23735 ;; This function uses a non-reentrant model
 23736 ;;
 23737                           
 23738                           	psect	text110
 23739  00742C                     __ptext110:
 23740                           	opt stack 0
 23741  00742C                     _ExternalFlash_SectorSizeRead:
 23742                           	opt stack 26
 23743                           
 23744                           ;external_flash.c: 20: return 512;
 23745                           
 23746                           ; BSR set to: 13
 23747                           ;incstack = 0
 23748  00742C  0E02               	movlw	2
 23749  00742E  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23750  007430  0E00               	movlw	0
 23751  007432  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23752  007434  0012               	return	
 23753  007436                     __end_of_ExternalFlash_SectorSizeRead:
 23754                           	opt stack 0
 23755                           tosu	equ	0xFFF
 23756                           tosh	equ	0xFFE
 23757                           tosl	equ	0xFFD
 23758                           pclath	equ	0xFFA
 23759                           tblptru	equ	0xFF8
 23760                           tblptrh	equ	0xFF7
 23761                           tblptrl	equ	0xFF6
 23762                           tablat	equ	0xFF5
 23763                           prodh	equ	0xFF4
 23764                           prodl	equ	0xFF3
 23765                           intcon	equ	0xFF2
 23766                           intcon3	equ	0xFF0
 23767                           indf0	equ	0xFEF
 23768                           postinc0	equ	0xFEE
 23769                           fsr0h	equ	0xFEA
 23770                           fsr0l	equ	0xFE9
 23771                           wreg	equ	0xFE8
 23772                           indf1	equ	0xFE7
 23773                           postdec1	equ	0xFE5
 23774                           plusw1	equ	0xFE3
 23775                           fsr1h	equ	0xFE2
 23776                           fsr1l	equ	0xFE1
 23777                           indf2	equ	0xFDF
 23778                           postinc2	equ	0xFDE
 23779                           postdec2	equ	0xFDD
 23780                           plusw2	equ	0xFDB
 23781                           fsr2h	equ	0xFDA
 23782                           fsr2l	equ	0xFD9
 23783                           status	equ	0xFD8
 23784                           
 23785 ;; *************** function _ExternalFlash_CapacityRead *****************
 23786 ;; Defined at:
 23787 ;;		line 23 in file "external_flash.c"
 23788 ;; Parameters:    Size  Location     Type
 23789 ;;  config          2    0[COMRAM] PTR void 
 23790 ;;		 -> NULL(0), 
 23791 ;; Auto vars:     Size  Location     Type
 23792 ;;		None
 23793 ;; Return value:  Size  Location     Type
 23794 ;;                  4    0[COMRAM] unsigned long 
 23795 ;; Registers used:
 23796 ;;		wreg, status,2
 23797 ;; Tracked objects:
 23798 ;;		On entry : 0/0
 23799 ;;		On exit  : 0/0
 23800 ;;		Unchanged: 0/0
 23801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23806 ;;Total ram usage:        4 bytes
 23807 ;; Hardware stack levels used:    1
 23808 ;; This function calls:
 23809 ;;		Nothing
 23810 ;; This function is called by:
 23811 ;;		_MSDProcessCommandMediaPresent
 23812 ;; This function uses a non-reentrant model
 23813 ;;
 23814                           
 23815                           	psect	text111
 23816  007398                     __ptext111:
 23817                           	opt stack 0
 23818  007398                     _ExternalFlash_CapacityRead:
 23819                           	opt stack 26
 23820                           
 23821                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23822                           
 23823                           ;incstack = 0
 23824  007398  0EFF               	movlw	255
 23825  00739A  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23826  00739C  0E1F               	movlw	31
 23827  00739E  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23828  0073A0  0E00               	movlw	0
 23829  0073A2  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23830  0073A4  0E00               	movlw	0
 23831  0073A6  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23832  0073A8  0012               	return	
 23833  0073AA                     __end_of_ExternalFlash_CapacityRead:
 23834                           	opt stack 0
 23835                           tosu	equ	0xFFF
 23836                           tosh	equ	0xFFE
 23837                           tosl	equ	0xFFD
 23838                           pclath	equ	0xFFA
 23839                           tblptru	equ	0xFF8
 23840                           tblptrh	equ	0xFF7
 23841                           tblptrl	equ	0xFF6
 23842                           tablat	equ	0xFF5
 23843                           prodh	equ	0xFF4
 23844                           prodl	equ	0xFF3
 23845                           intcon	equ	0xFF2
 23846                           intcon3	equ	0xFF0
 23847                           indf0	equ	0xFEF
 23848                           postinc0	equ	0xFEE
 23849                           fsr0h	equ	0xFEA
 23850                           fsr0l	equ	0xFE9
 23851                           wreg	equ	0xFE8
 23852                           indf1	equ	0xFE7
 23853                           postdec1	equ	0xFE5
 23854                           plusw1	equ	0xFE3
 23855                           fsr1h	equ	0xFE2
 23856                           fsr1l	equ	0xFE1
 23857                           indf2	equ	0xFDF
 23858                           postinc2	equ	0xFDE
 23859                           postdec2	equ	0xFDD
 23860                           plusw2	equ	0xFDB
 23861                           fsr2h	equ	0xFDA
 23862                           fsr2l	equ	0xFD9
 23863                           status	equ	0xFD8
 23864                           
 23865 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23866 ;; Defined at:
 23867 ;;		line 10 in file "external_flash.c"
 23868 ;; Parameters:    Size  Location     Type
 23869 ;;  config          2    0[COMRAM] PTR void 
 23870 ;;		 -> NULL(0), 
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  2    0[COMRAM] PTR struct .
 23875 ;; Registers used:
 23876 ;;		wreg, status,2, status,0
 23877 ;; Tracked objects:
 23878 ;;		On entry : 0/0
 23879 ;;		On exit  : 0/0
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23886 ;;Total ram usage:        2 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; This function calls:
 23889 ;;		Nothing
 23890 ;; This function is called by:
 23891 ;;		_USBMSDInit
 23892 ;;		_MSDProcessCommand
 23893 ;; This function uses a non-reentrant model
 23894 ;;
 23895                           
 23896                           	psect	text112
 23897  0072D0                     __ptext112:
 23898                           	opt stack 0
 23899  0072D0                     _ExternalFlash_MediaInitialize:
 23900                           	opt stack 26
 23901                           
 23902                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23903                           
 23904                           ;incstack = 0
 23905  0072D0  0101               	movlb	1	; () banked
 23906  0072D2  81E3               	bsf	(_mediaInformation+1)& (0+255),0,b
 23907                           
 23908                           ; BSR set to: 1
 23909                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23910  0072D4  0E02               	movlw	2
 23911  0072D6  6FE5               	movwf	(_mediaInformation+3)& (0+255),b
 23912  0072D8  0E00               	movlw	0
 23913  0072DA  6FE4               	movwf	(_mediaInformation+2)& (0+255),b
 23914                           
 23915                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23916  0072DC  0E00               	movlw	0
 23917  0072DE  6FE2               	movwf	_mediaInformation& (0+255),b
 23918                           
 23919                           ; BSR set to: 1
 23920                           ;external_flash.c: 15: return &mediaInformation;
 23921  0072E0  0EE2               	movlw	low _mediaInformation
 23922  0072E2  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23923  0072E4  0E01               	movlw	high _mediaInformation
 23924  0072E6  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23925  0072E8  0012               	return	
 23926  0072EA                     __end_of_ExternalFlash_MediaInitialize:
 23927                           	opt stack 0
 23928                           tosu	equ	0xFFF
 23929                           tosh	equ	0xFFE
 23930                           tosl	equ	0xFFD
 23931                           pclath	equ	0xFFA
 23932                           tblptru	equ	0xFF8
 23933                           tblptrh	equ	0xFF7
 23934                           tblptrl	equ	0xFF6
 23935                           tablat	equ	0xFF5
 23936                           prodh	equ	0xFF4
 23937                           prodl	equ	0xFF3
 23938                           intcon	equ	0xFF2
 23939                           intcon3	equ	0xFF0
 23940                           indf0	equ	0xFEF
 23941                           postinc0	equ	0xFEE
 23942                           fsr0h	equ	0xFEA
 23943                           fsr0l	equ	0xFE9
 23944                           wreg	equ	0xFE8
 23945                           indf1	equ	0xFE7
 23946                           postdec1	equ	0xFE5
 23947                           plusw1	equ	0xFE3
 23948                           fsr1h	equ	0xFE2
 23949                           fsr1l	equ	0xFE1
 23950                           indf2	equ	0xFDF
 23951                           postinc2	equ	0xFDE
 23952                           postdec2	equ	0xFDD
 23953                           plusw2	equ	0xFDB
 23954                           fsr2h	equ	0xFDA
 23955                           fsr2l	equ	0xFD9
 23956                           status	equ	0xFD8
 23957                           
 23958 ;; *************** function _ExternalFlash_MediaDetect *****************
 23959 ;; Defined at:
 23960 ;;		line 29 in file "external_flash.c"
 23961 ;; Parameters:    Size  Location     Type
 23962 ;;  config          2    0[COMRAM] PTR void 
 23963 ;;		 -> NULL(0), 
 23964 ;; Auto vars:     Size  Location     Type
 23965 ;;		None
 23966 ;; Return value:  Size  Location     Type
 23967 ;;                  1    wreg      unsigned char 
 23968 ;; Registers used:
 23969 ;;		wreg
 23970 ;; Tracked objects:
 23971 ;;		On entry : 0/0
 23972 ;;		On exit  : 0/0
 23973 ;;		Unchanged: 0/0
 23974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23979 ;;Total ram usage:        2 bytes
 23980 ;; Hardware stack levels used:    1
 23981 ;; This function calls:
 23982 ;;		Nothing
 23983 ;; This function is called by:
 23984 ;;		_USBMSDInit
 23985 ;;		_MSDProcessCommand
 23986 ;; This function uses a non-reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text113
 23990  0074B2                     __ptext113:
 23991                           	opt stack 0
 23992  0074B2                     _ExternalFlash_MediaDetect:
 23993                           	opt stack 26
 23994                           
 23995                           ;external_flash.c: 31: return 1;
 23996                           
 23997                           ; BSR set to: 1
 23998                           ;incstack = 0
 23999  0074B2  0E01               	movlw	1
 24000  0074B4  0012               	return	
 24001  0074B6                     __end_of_ExternalFlash_MediaDetect:
 24002                           	opt stack 0
 24003                           tosu	equ	0xFFF
 24004                           tosh	equ	0xFFE
 24005                           tosl	equ	0xFFD
 24006                           pclath	equ	0xFFA
 24007                           tblptru	equ	0xFF8
 24008                           tblptrh	equ	0xFF7
 24009                           tblptrl	equ	0xFF6
 24010                           tablat	equ	0xFF5
 24011                           prodh	equ	0xFF4
 24012                           prodl	equ	0xFF3
 24013                           intcon	equ	0xFF2
 24014                           intcon3	equ	0xFF0
 24015                           indf0	equ	0xFEF
 24016                           postinc0	equ	0xFEE
 24017                           fsr0h	equ	0xFEA
 24018                           fsr0l	equ	0xFE9
 24019                           wreg	equ	0xFE8
 24020                           indf1	equ	0xFE7
 24021                           postdec1	equ	0xFE5
 24022                           plusw1	equ	0xFE3
 24023                           fsr1h	equ	0xFE2
 24024                           fsr1l	equ	0xFE1
 24025                           indf2	equ	0xFDF
 24026                           postinc2	equ	0xFDE
 24027                           postdec2	equ	0xFDD
 24028                           plusw2	equ	0xFDB
 24029                           fsr2h	equ	0xFDA
 24030                           fsr2l	equ	0xFD9
 24031                           status	equ	0xFD8
 24032                           
 24033 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 24034 ;; Defined at:
 24035 ;;		line 73 in file "app_device_custom_hid.c"
 24036 ;; Parameters:    Size  Location     Type
 24037 ;;		None
 24038 ;; Auto vars:     Size  Location     Type
 24039 ;;  idx             1    0        unsigned char 
 24040 ;; Return value:  Size  Location     Type
 24041 ;;                  1    wreg      void 
 24042 ;; Registers used:
 24043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24044 ;; Tracked objects:
 24045 ;;		On entry : 0/0
 24046 ;;		On exit  : 0/0
 24047 ;;		Unchanged: 0/0
 24048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24053 ;;Total ram usage:        0 bytes
 24054 ;; Hardware stack levels used:    1
 24055 ;; Hardware stack levels required when called:    9
 24056 ;; This function calls:
 24057 ;;		_USBTransferOnePacket
 24058 ;;		_api_parse
 24059 ;;		_api_prepare
 24060 ;; This function is called by:
 24061 ;;		_main
 24062 ;; This function uses a non-reentrant model
 24063 ;;
 24064                           
 24065                           	psect	text114
 24066  005676                     __ptext114:
 24067                           	opt stack 0
 24068  005676                     _APP_DeviceCustomHIDTasks:
 24069                           	opt stack 21
 24070                           
 24071                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 24072                           
 24073                           ;incstack = 0
 24074  005676  0E20               	movlw	32
 24075  005678  605F               	cpfslt	_USBDeviceState,c
 24076  00567A  D001               	goto	l936
 24077  00567C  0012               	return	
 24078  00567E                     l936:
 24079                           
 24080                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 24081  00567E  B265               	btfsc	3941,1,c	;volatile
 24082  005680  0012               	return	
 24083                           
 24084                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 24085                           
 24086                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 24087  005682  0101               	movlb	1	; () banked
 24088  005684  5171               	movf	_USBOutHandle& (0+255),w,b
 24089  005686  1172               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 24090  005688  B4D8               	btfsc	status,2,c
 24091  00568A  D006               	goto	u12450
 24092                           
 24093                           ; BSR set to: 1
 24094  00568C  C171  FFD9         	movff	_USBOutHandle,fsr2l
 24095  005690  C172  FFDA         	movff	_USBOutHandle+1,fsr2h
 24096  005694  BEDF               	btfsc	indf2,7,c
 24097  005696  0012               	return	
 24098  005698                     u12450:
 24099                           
 24100                           ; BSR set to: 1
 24101                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 24102                           
 24103                           ; BSR set to: 1
 24104  005698  516F               	movf	_USBInHandle& (0+255),w,b
 24105  00569A  1170               	iorwf	(_USBInHandle+1)& (0+255),w,b
 24106  00569C  B4D8               	btfsc	status,2,c
 24107  00569E  D006               	goto	u12470
 24108                           
 24109                           ; BSR set to: 1
 24110  0056A0  C16F  FFD9         	movff	_USBInHandle,fsr2l
 24111  0056A4  C170  FFDA         	movff	_USBInHandle+1,fsr2h
 24112  0056A8  BEDF               	btfsc	indf2,7,c
 24113  0056AA  D019               	goto	l942
 24114  0056AC                     u12470:
 24115                           
 24116                           ; BSR set to: 1
 24117                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 24118                           
 24119                           ; BSR set to: 1
 24120  0056AC  0E40               	movlw	low _ReceivedDataBuffer
 24121  0056AE  6E17               	movwf	api_prepare@inBuffer,c
 24122  0056B0  0E02               	movlw	high _ReceivedDataBuffer
 24123  0056B2  6E18               	movwf	api_prepare@inBuffer+1,c
 24124  0056B4  0E00               	movlw	low _ToSendDataBuffer
 24125  0056B6  6E19               	movwf	api_prepare@outBuffer,c
 24126  0056B8  0E02               	movlw	high _ToSendDataBuffer
 24127  0056BA  6E1A               	movwf	api_prepare@outBuffer+1,c
 24128  0056BC  EC35  F024         	call	_api_prepare	;wreg free
 24129                           
 24130                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 24131  0056C0  0E01               	movlw	1
 24132  0056C2  6E01               	movwf	USBTransferOnePacket@dir,c
 24133  0056C4  0E00               	movlw	low _ToSendDataBuffer
 24134  0056C6  6E02               	movwf	USBTransferOnePacket@data,c
 24135  0056C8  0E02               	movlw	high _ToSendDataBuffer
 24136  0056CA  6E03               	movwf	USBTransferOnePacket@data+1,c
 24137  0056CC  0E40               	movlw	64
 24138  0056CE  6E04               	movwf	USBTransferOnePacket@len,c
 24139  0056D0  0E01               	movlw	1
 24140  0056D2  EC89  F020         	call	_USBTransferOnePacket
 24141  0056D6  C001  F16F         	movff	?_USBTransferOnePacket,_USBInHandle
 24142  0056DA  C002  F170         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 24143  0056DE                     l942:
 24144                           
 24145                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 24146  0056DE  0E40               	movlw	low _ReceivedDataBuffer
 24147  0056E0  6E36               	movwf	api_parse@inBuffer,c
 24148  0056E2  0E02               	movlw	high _ReceivedDataBuffer
 24149  0056E4  6E37               	movwf	api_parse@inBuffer+1,c
 24150  0056E6  0E40               	movlw	64
 24151  0056E8  6E38               	movwf	api_parse@receivedDataLength,c
 24152  0056EA  0E00               	movlw	low _ToSendDataBuffer
 24153  0056EC  6E39               	movwf	api_parse@outBuffer,c
 24154  0056EE  0E02               	movlw	high _ToSendDataBuffer
 24155  0056F0  6E3A               	movwf	api_parse@outBuffer+1,c
 24156  0056F2  EC4F  F01C         	call	_api_parse	;wreg free
 24157                           
 24158                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 24159  0056F6  0E00               	movlw	0
 24160  0056F8  6E01               	movwf	USBTransferOnePacket@dir,c
 24161  0056FA  0E40               	movlw	low _ReceivedDataBuffer
 24162  0056FC  6E02               	movwf	USBTransferOnePacket@data,c
 24163  0056FE  0E02               	movlw	high _ReceivedDataBuffer
 24164  005700  6E03               	movwf	USBTransferOnePacket@data+1,c
 24165  005702  0E40               	movlw	64
 24166  005704  6E04               	movwf	USBTransferOnePacket@len,c
 24167  005706  0E01               	movlw	1
 24168  005708  EC89  F020         	call	_USBTransferOnePacket
 24169  00570C  C001  F171         	movff	?_USBTransferOnePacket,_USBOutHandle
 24170  005710  C002  F172         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 24171  005714  0012               	return	
 24172  005716                     __end_of_APP_DeviceCustomHIDTasks:
 24173                           	opt stack 0
 24174                           tosu	equ	0xFFF
 24175                           tosh	equ	0xFFE
 24176                           tosl	equ	0xFFD
 24177                           pclath	equ	0xFFA
 24178                           tblptru	equ	0xFF8
 24179                           tblptrh	equ	0xFF7
 24180                           tblptrl	equ	0xFF6
 24181                           tablat	equ	0xFF5
 24182                           prodh	equ	0xFF4
 24183                           prodl	equ	0xFF3
 24184                           intcon	equ	0xFF2
 24185                           intcon3	equ	0xFF0
 24186                           indf0	equ	0xFEF
 24187                           postinc0	equ	0xFEE
 24188                           fsr0h	equ	0xFEA
 24189                           fsr0l	equ	0xFE9
 24190                           wreg	equ	0xFE8
 24191                           indf1	equ	0xFE7
 24192                           postdec1	equ	0xFE5
 24193                           plusw1	equ	0xFE3
 24194                           fsr1h	equ	0xFE2
 24195                           fsr1l	equ	0xFE1
 24196                           indf2	equ	0xFDF
 24197                           postinc2	equ	0xFDE
 24198                           postdec2	equ	0xFDD
 24199                           plusw2	equ	0xFDB
 24200                           fsr2h	equ	0xFDA
 24201                           fsr2l	equ	0xFD9
 24202                           status	equ	0xFD8
 24203                           
 24204 ;; *************** function _api_prepare *****************
 24205 ;; Defined at:
 24206 ;;		line 35 in file "api.c"
 24207 ;; Parameters:    Size  Location     Type
 24208 ;;  inBuffer        2   22[COMRAM] PTR unsigned char 
 24209 ;;		 -> ReceivedDataBuffer(64), 
 24210 ;;  outBuffer       2   24[COMRAM] PTR unsigned char 
 24211 ;;		 -> ToSendDataBuffer(64), 
 24212 ;; Auto vars:     Size  Location     Type
 24213 ;;  command         1   26[COMRAM] enum E6715
 24214 ;; Return value:  Size  Location     Type
 24215 ;;                  1    wreg      void 
 24216 ;; Registers used:
 24217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24218 ;; Tracked objects:
 24219 ;;		On entry : 0/0
 24220 ;;		On exit  : 0/0
 24221 ;;		Unchanged: 0/0
 24222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24226 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24227 ;;Total ram usage:        5 bytes
 24228 ;; Hardware stack levels used:    1
 24229 ;; Hardware stack levels required when called:    5
 24230 ;; This function calls:
 24231 ;;		__fill_buffer_get_bootloader_details
 24232 ;;		__fill_buffer_get_display
 24233 ;;		__fill_buffer_get_status
 24234 ;;		_memcpy
 24235 ;; This function is called by:
 24236 ;;		_APP_DeviceCustomHIDTasks
 24237 ;; This function uses a non-reentrant model
 24238 ;;
 24239                           
 24240                           	psect	text115
 24241  00486A                     __ptext115:
 24242                           	opt stack 0
 24243  00486A                     _api_prepare:
 24244                           	opt stack 24
 24245                           
 24246                           ;api.c: 37: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 24247                           
 24248                           ;incstack = 0
 24249  00486A  C017  FFD9         	movff	api_prepare@inBuffer,fsr2l
 24250  00486E  C018  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 24251  004872  50DF               	movf	indf2,w,c
 24252  004874  6E1B               	movwf	api_prepare@command,c
 24253                           
 24254                           ;api.c: 39: if(command>0x7F)
 24255  004876  0E7F               	movlw	127
 24256  004878  641B               	cpfsgt	api_prepare@command,c
 24257  00487A  D052               	goto	l2707
 24258                           
 24259                           ;api.c: 46: outBuffer[0] = 0x99;
 24260                           
 24261                           ;api.c: 42: {;api.c: 45: default:
 24262                           
 24263                           ;api.c: 40: {;api.c: 41: switch(command)
 24264  00487C  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 24265  004880  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 24266  004884  0E99               	movlw	153
 24267  004886  6EDF               	movwf	indf2,c
 24268                           
 24269                           ;api.c: 47: outBuffer[1] = 0x99;
 24270  004888  EE20 F001          	lfsr	2,1
 24271  00488C  5019               	movf	api_prepare@outBuffer,w,c
 24272  00488E  26D9               	addwf	fsr2l,f,c
 24273  004890  501A               	movf	api_prepare@outBuffer+1,w,c
 24274  004892  22DA               	addwfc	fsr2h,f,c
 24275  004894  0E99               	movlw	153
 24276  004896  6EDF               	movwf	indf2,c
 24277                           
 24278                           ;api.c: 48: }
 24279  004898  0012               	return	
 24280  00489A                     
 24281                           ;api.c: 61: _fill_buffer_get_status(outBuffer);
 24282  00489A  C019  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 24283  00489E  C01A  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 24284  0048A2  EC08  F020         	call	__fill_buffer_get_status	;wreg free
 24285                           
 24286                           ;api.c: 62: break;
 24287  0048A6  0012               	return	
 24288  0048A8                     
 24289                           ;api.c: 66: _fill_buffer_get_display(outBuffer, 0);
 24290  0048A8  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 24291  0048AC  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 24292  0048B0  0E00               	movlw	0
 24293  0048B2  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 24294  0048B4  EC42  F028         	call	__fill_buffer_get_display	;wreg free
 24295                           
 24296                           ;api.c: 67: break;
 24297  0048B8  0012               	return	
 24298  0048BA                     
 24299                           ;api.c: 71: _fill_buffer_get_display(outBuffer, 1);
 24300  0048BA  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 24301  0048BE  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 24302  0048C2  0E01               	movlw	1
 24303  0048C4  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 24304  0048C6  EC42  F028         	call	__fill_buffer_get_display	;wreg free
 24305                           
 24306                           ;api.c: 72: break;
 24307  0048CA  0012               	return	
 24308  0048CC                     
 24309                           ;api.c: 76: _fill_buffer_get_bootloader_details(outBuffer);
 24310  0048CC  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 24311  0048D0  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 24312  0048D4  EC1E  F010         	call	__fill_buffer_get_bootloader_details	;wreg free
 24313                           
 24314                           ;api.c: 77: break;
 24315  0048D8  0012               	return	
 24316  0048DA                     
 24317                           ;api.c: 81: memcpy(outBuffer, inBuffer, 64);
 24318  0048DA  C019  F001         	movff	api_prepare@outBuffer,memcpy@d1
 24319  0048DE  C01A  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 24320  0048E2  C017  F003         	movff	api_prepare@inBuffer,memcpy@s1
 24321  0048E6  C018  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 24322  0048EA  5003               	movf	memcpy@s1,w,c
 24323  0048EC  1004               	iorwf	memcpy@s1+1,w,c
 24324  0048EE  A4D8               	btfss	status,2,c
 24325  0048F0  0E20               	movlw	32
 24326  0048F2  6E05               	movwf	memcpy@s1+2,c
 24327  0048F4  0E00               	movlw	0
 24328  0048F6  6E07               	movwf	memcpy@n+1,c
 24329  0048F8  0E40               	movlw	64
 24330  0048FA  6E06               	movwf	memcpy@n,c
 24331  0048FC  EC25  F031         	call	_memcpy	;wreg free
 24332                           
 24333                           ;api.c: 82: break;
 24334  004900  0012               	return	
 24335  004902                     
 24336                           ;api.c: 85: outBuffer[0] = 0x99;
 24337  004902  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 24338  004906  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 24339  00490A  0E99               	movlw	153
 24340  00490C  6EDF               	movwf	indf2,c
 24341                           
 24342                           ;api.c: 86: outBuffer[1] = 0x99;
 24343  00490E  EE20 F001          	lfsr	2,1
 24344  004912  5019               	movf	api_prepare@outBuffer,w,c
 24345  004914  26D9               	addwf	fsr2l,f,c
 24346  004916  501A               	movf	api_prepare@outBuffer+1,w,c
 24347  004918  22DA               	addwfc	fsr2h,f,c
 24348  00491A  0E99               	movlw	153
 24349  00491C  6EDF               	movwf	indf2,c
 24350                           
 24351                           ;api.c: 87: }
 24352  00491E  0012               	return	
 24353  004920                     l2707:
 24354  004920  501B               	movf	api_prepare@command,w,c
 24355                           
 24356                           ; Switch size 1, requested type "space"
 24357                           ; Number of cases is 6, Range of values is 0 to 32
 24358                           ; switch strategies available:
 24359                           ; Name         Instructions Cycles
 24360                           ; simple_byte           19    10 (average)
 24361                           ;	Chosen strategy is simple_byte
 24362  004922  0A00               	xorlw	0	; case 0
 24363  004924  B4D8               	btfsc	status,2,c
 24364  004926  0012               	return	
 24365  004928  0A10               	xorlw	16	; case 16
 24366  00492A  B4D8               	btfsc	status,2,c
 24367  00492C  D7B6               	goto	l2710
 24368  00492E  0A01               	xorlw	1	; case 17
 24369  004930  B4D8               	btfsc	status,2,c
 24370  004932  D7BA               	goto	l2711
 24371  004934  0A03               	xorlw	3	; case 18
 24372  004936  B4D8               	btfsc	status,2,c
 24373  004938  D7C0               	goto	l2712
 24374  00493A  0A01               	xorlw	1	; case 19
 24375  00493C  B4D8               	btfsc	status,2,c
 24376  00493E  D7C6               	goto	l2713
 24377  004940  0A33               	xorlw	51	; case 32
 24378  004942  B4D8               	btfsc	status,2,c
 24379  004944  D7CA               	goto	l2714
 24380  004946  D7DD               	goto	l2715
 24381  004948                     __end_of_api_prepare:
 24382                           	opt stack 0
 24383                           tosu	equ	0xFFF
 24384                           tosh	equ	0xFFE
 24385                           tosl	equ	0xFFD
 24386                           pclath	equ	0xFFA
 24387                           tblptru	equ	0xFF8
 24388                           tblptrh	equ	0xFF7
 24389                           tblptrl	equ	0xFF6
 24390                           tablat	equ	0xFF5
 24391                           prodh	equ	0xFF4
 24392                           prodl	equ	0xFF3
 24393                           intcon	equ	0xFF2
 24394                           intcon3	equ	0xFF0
 24395                           indf0	equ	0xFEF
 24396                           postinc0	equ	0xFEE
 24397                           fsr0h	equ	0xFEA
 24398                           fsr0l	equ	0xFE9
 24399                           wreg	equ	0xFE8
 24400                           indf1	equ	0xFE7
 24401                           postdec1	equ	0xFE5
 24402                           plusw1	equ	0xFE3
 24403                           fsr1h	equ	0xFE2
 24404                           fsr1l	equ	0xFE1
 24405                           indf2	equ	0xFDF
 24406                           postinc2	equ	0xFDE
 24407                           postdec2	equ	0xFDD
 24408                           plusw2	equ	0xFDB
 24409                           fsr2h	equ	0xFDA
 24410                           fsr2l	equ	0xFD9
 24411                           status	equ	0xFD8
 24412                           
 24413 ;; *************** function _memcpy *****************
 24414 ;; Defined at:
 24415 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 24416 ;; Parameters:    Size  Location     Type
 24417 ;;  d1              2    0[COMRAM] PTR void 
 24418 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 24419 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 24420 ;;  s1              3    2[COMRAM] PTR const void 
 24421 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 24422 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 24423 ;;  n               2    5[COMRAM] unsigned int 
 24424 ;; Auto vars:     Size  Location     Type
 24425 ;;  s               3    7[COMRAM] PTR const unsigned char 
 24426 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 24427 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 24428 ;;  d               2   10[COMRAM] PTR unsigned char 
 24429 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 24430 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 24431 ;;  tmp             1   12[COMRAM] unsigned char 
 24432 ;; Return value:  Size  Location     Type
 24433 ;;                  2    0[COMRAM] PTR void 
 24434 ;; Registers used:
 24435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24436 ;; Tracked objects:
 24437 ;;		On entry : 0/0
 24438 ;;		On exit  : 0/0
 24439 ;;		Unchanged: 0/0
 24440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24441 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24442 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24444 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24445 ;;Total ram usage:       13 bytes
 24446 ;; Hardware stack levels used:    1
 24447 ;; This function calls:
 24448 ;;		Nothing
 24449 ;; This function is called by:
 24450 ;;		_USBCtrlEPService
 24451 ;;		_MSDProcessCommandMediaPresent
 24452 ;;		__flash_set_page_size
 24453 ;;		_internalFlash_read
 24454 ;;		_api_prepare
 24455 ;;		_fat_create_file
 24456 ;; This function uses a non-reentrant model
 24457 ;;
 24458                           
 24459                           	psect	text116
 24460  00624A                     __ptext116:
 24461                           	opt stack 0
 24462  00624A                     _memcpy:
 24463                           	opt stack 27
 24464                           
 24465                           ;incstack = 0
 24466  00624A  C003  F008         	movff	memcpy@s1,memcpy@s
 24467  00624E  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 24468  006252  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 24469  006256  C001  F00B         	movff	memcpy@d1,memcpy@d
 24470  00625A  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 24471  00625E  D01F               	goto	l3549
 24472  006260                     l10717:
 24473  006260  C008  FFF6         	movff	memcpy@s,tblptrl
 24474  006264  C009  FFF7         	movff	memcpy@s+1,tblptrh
 24475  006268  C00A  FFF8         	movff	memcpy@s+2,tblptru
 24476  00626C  BAF8               	btfsc	tblptru,5,c
 24477  00626E  D003               	bra	u8247
 24478  006270  0008               	tblrd		*
 24479  006272  50F5               	movf	tablat,w,c
 24480  006274  D005               	bra	u8240
 24481  006276                     u8247:
 24482  006276  CFF6 FFE9          	movff	tblptrl,fsr0l
 24483  00627A  CFF7 FFEA          	movff	tblptrh,fsr0h
 24484  00627E  50EF               	movf	indf0,w,c
 24485  006280                     u8240:
 24486  006280  6E0D               	movwf	memcpy@tmp,c
 24487  006282  0E01               	movlw	1
 24488  006284  2608               	addwf	memcpy@s,f,c
 24489  006286  0E00               	movlw	0
 24490  006288  2209               	addwfc	memcpy@s+1,f,c
 24491  00628A  0E00               	movlw	0
 24492  00628C  220A               	addwfc	memcpy@s+2,f,c
 24493  00628E  C00B  FFD9         	movff	memcpy@d,fsr2l
 24494  006292  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 24495  006296  C00D  FFDF         	movff	memcpy@tmp,indf2
 24496  00629A  4A0B               	infsnz	memcpy@d,f,c
 24497  00629C  2A0C               	incf	memcpy@d+1,f,c
 24498  00629E                     l3549:
 24499  00629E  0606               	decf	memcpy@n,f,c
 24500  0062A0  A0D8               	btfss	status,0,c
 24501  0062A2  0607               	decf	memcpy@n+1,f,c
 24502  0062A4  2806               	incf	memcpy@n,w,c
 24503  0062A6  E1DC               	bnz	l10717
 24504  0062A8  2807               	incf	memcpy@n+1,w,c
 24505  0062AA  B4D8               	btfsc	status,2,c
 24506  0062AC  0012               	return	
 24507  0062AE  D7D8               	goto	l3550
 24508  0062B0                     __end_of_memcpy:
 24509                           	opt stack 0
 24510                           tosu	equ	0xFFF
 24511                           tosh	equ	0xFFE
 24512                           tosl	equ	0xFFD
 24513                           pclath	equ	0xFFA
 24514                           tblptru	equ	0xFF8
 24515                           tblptrh	equ	0xFF7
 24516                           tblptrl	equ	0xFF6
 24517                           tablat	equ	0xFF5
 24518                           prodh	equ	0xFF4
 24519                           prodl	equ	0xFF3
 24520                           intcon	equ	0xFF2
 24521                           intcon3	equ	0xFF0
 24522                           indf0	equ	0xFEF
 24523                           postinc0	equ	0xFEE
 24524                           fsr0h	equ	0xFEA
 24525                           fsr0l	equ	0xFE9
 24526                           wreg	equ	0xFE8
 24527                           indf1	equ	0xFE7
 24528                           postdec1	equ	0xFE5
 24529                           plusw1	equ	0xFE3
 24530                           fsr1h	equ	0xFE2
 24531                           fsr1l	equ	0xFE1
 24532                           indf2	equ	0xFDF
 24533                           postinc2	equ	0xFDE
 24534                           postdec2	equ	0xFDD
 24535                           plusw2	equ	0xFDB
 24536                           fsr2h	equ	0xFDA
 24537                           fsr2l	equ	0xFD9
 24538                           status	equ	0xFD8
 24539                           
 24540 ;; *************** function __fill_buffer_get_status *****************
 24541 ;; Defined at:
 24542 ;;		line 168 in file "api.c"
 24543 ;; Parameters:    Size  Location     Type
 24544 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24545 ;;		 -> ToSendDataBuffer(64), 
 24546 ;; Auto vars:     Size  Location     Type
 24547 ;;		None
 24548 ;; Return value:  Size  Location     Type
 24549 ;;                  1    wreg      void 
 24550 ;; Registers used:
 24551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24552 ;; Tracked objects:
 24553 ;;		On entry : 0/0
 24554 ;;		On exit  : 0/0
 24555 ;;		Unchanged: 0/0
 24556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24561 ;;Total ram usage:        2 bytes
 24562 ;; Hardware stack levels used:    1
 24563 ;; Hardware stack levels required when called:    4
 24564 ;; This function calls:
 24565 ;;		_flash_is_busy
 24566 ;;		_ui_get_status
 24567 ;; This function is called by:
 24568 ;;		_api_prepare
 24569 ;; This function uses a non-reentrant model
 24570 ;;
 24571                           
 24572                           	psect	text117
 24573  004010                     __ptext117:
 24574                           	opt stack 0
 24575  004010                     __fill_buffer_get_status:
 24576                           	opt stack 24
 24577                           
 24578                           ;api.c: 171: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24579                           
 24580                           ;incstack = 0
 24581  004010  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24582  004014  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24583  004018  0E10               	movlw	16
 24584  00401A  6EDF               	movwf	indf2,c
 24585                           
 24586                           ;api.c: 174: outBuffer[1] = 0x4B16 >> 8;
 24587  00401C  EE20 F001          	lfsr	2,1
 24588  004020  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24589  004022  26D9               	addwf	fsr2l,f,c
 24590  004024  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24591  004026  22DA               	addwfc	fsr2h,f,c
 24592  004028  0E4B               	movlw	75
 24593  00402A  6EDF               	movwf	indf2,c
 24594                           
 24595                           ;api.c: 175: outBuffer[2] = (uint8_t) 0x4B16;
 24596  00402C  EE20 F002          	lfsr	2,2
 24597  004030  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24598  004032  26D9               	addwf	fsr2l,f,c
 24599  004034  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24600  004036  22DA               	addwfc	fsr2h,f,c
 24601  004038  0E16               	movlw	22
 24602  00403A  6EDF               	movwf	indf2,c
 24603                           
 24604                           ;api.c: 178: outBuffer[3] = (uint8_t) flash_is_busy();
 24605  00403C  EE20 F003          	lfsr	2,3
 24606  004040  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24607  004042  26D9               	addwf	fsr2l,f,c
 24608  004044  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24609  004046  22DA               	addwfc	fsr2h,f,c
 24610  004048  EC1B  F03A         	call	_flash_is_busy	;wreg free
 24611  00404C  6EDF               	movwf	indf2,c
 24612                           
 24613                           ;api.c: 181: outBuffer[4] = 0x00;
 24614  00404E  EE20 F004          	lfsr	2,4
 24615  004052  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24616  004054  26D9               	addwf	fsr2l,f,c
 24617  004056  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24618  004058  22DA               	addwfc	fsr2h,f,c
 24619  00405A  0E00               	movlw	0
 24620  00405C  6EDF               	movwf	indf2,c
 24621                           
 24622                           ;api.c: 182: outBuffer[5] = 0x05;
 24623  00405E  EE20 F005          	lfsr	2,5
 24624  004062  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24625  004064  26D9               	addwf	fsr2l,f,c
 24626  004066  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24627  004068  22DA               	addwfc	fsr2h,f,c
 24628  00406A  0E05               	movlw	5
 24629  00406C  6EDF               	movwf	indf2,c
 24630                           
 24631                           ;api.c: 183: outBuffer[6] = 0x01;
 24632  00406E  EE20 F006          	lfsr	2,6
 24633  004072  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24634  004074  26D9               	addwf	fsr2l,f,c
 24635  004076  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24636  004078  22DA               	addwfc	fsr2h,f,c
 24637  00407A  0E01               	movlw	1
 24638  00407C  6EDF               	movwf	indf2,c
 24639                           
 24640                           ;api.c: 186: outBuffer[7] = ui_get_status();
 24641  00407E  EE20 F007          	lfsr	2,7
 24642  004082  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24643  004084  26D9               	addwf	fsr2l,f,c
 24644  004086  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24645  004088  22DA               	addwfc	fsr2h,f,c
 24646  00408A  EC51  F03A         	call	_ui_get_status	;wreg free
 24647  00408E  6EDF               	movwf	indf2,c
 24648                           
 24649                           ;api.c: 189: outBuffer[8] = os.encoder1Count;
 24650  004090  EE20 F008          	lfsr	2,8
 24651  004094  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24652  004096  26D9               	addwf	fsr2l,f,c
 24653  004098  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24654  00409A  22DA               	addwfc	fsr2h,f,c
 24655  00409C  C060  FFDF         	movff	_os,indf2
 24656                           
 24657                           ;api.c: 190: outBuffer[9] = os.button1;
 24658  0040A0  EE20 F009          	lfsr	2,9
 24659  0040A4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24660  0040A6  26D9               	addwf	fsr2l,f,c
 24661  0040A8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24662  0040AA  22DA               	addwfc	fsr2h,f,c
 24663  0040AC  C061  FFDF         	movff	_os+1,indf2
 24664                           
 24665                           ;api.c: 191: outBuffer[10] = os.encoder2Count;
 24666  0040B0  EE20 F00A          	lfsr	2,10
 24667  0040B4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24668  0040B6  26D9               	addwf	fsr2l,f,c
 24669  0040B8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24670  0040BA  22DA               	addwfc	fsr2h,f,c
 24671  0040BC  C062  FFDF         	movff	_os+2,indf2
 24672                           
 24673                           ;api.c: 192: outBuffer[11] = os.button2;
 24674  0040C0  EE20 F00B          	lfsr	2,11
 24675  0040C4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24676  0040C6  26D9               	addwf	fsr2l,f,c
 24677  0040C8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24678  0040CA  22DA               	addwfc	fsr2h,f,c
 24679  0040CC  C063  FFDF         	movff	_os+3,indf2
 24680                           
 24681                           ;api.c: 193: outBuffer[12] = os.timeSlot;
 24682  0040D0  EE20 F00C          	lfsr	2,12
 24683  0040D4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24684  0040D6  26D9               	addwf	fsr2l,f,c
 24685  0040D8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24686  0040DA  22DA               	addwfc	fsr2h,f,c
 24687  0040DC  C064  FFDF         	movff	_os+4,indf2
 24688                           
 24689                           ;api.c: 194: outBuffer[13] = os.done;
 24690  0040E0  EE20 F00D          	lfsr	2,13
 24691  0040E4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24692  0040E6  26D9               	addwf	fsr2l,f,c
 24693  0040E8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24694  0040EA  22DA               	addwfc	fsr2h,f,c
 24695  0040EC  C065  FFDF         	movff	_os+5,indf2
 24696                           
 24697                           ;api.c: 195: outBuffer[14] = os.bootloader_mode;
 24698  0040F0  EE20 F00E          	lfsr	2,14
 24699  0040F4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24700  0040F6  26D9               	addwf	fsr2l,f,c
 24701  0040F8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24702  0040FA  22DA               	addwfc	fsr2h,f,c
 24703  0040FC  C066  FFDF         	movff	_os+6,indf2
 24704                           
 24705                           ;api.c: 196: outBuffer[15] = os.display_mode;
 24706  004100  EE20 F00F          	lfsr	2,15
 24707  004104  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24708  004106  26D9               	addwf	fsr2l,f,c
 24709  004108  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24710  00410A  22DA               	addwfc	fsr2h,f,c
 24711  00410C  C067  FFDF         	movff	_os+7,indf2
 24712  004110  0012               	return		;funcret
 24713  004112                     __end_of__fill_buffer_get_status:
 24714                           	opt stack 0
 24715                           tosu	equ	0xFFF
 24716                           tosh	equ	0xFFE
 24717                           tosl	equ	0xFFD
 24718                           pclath	equ	0xFFA
 24719                           tblptru	equ	0xFF8
 24720                           tblptrh	equ	0xFF7
 24721                           tblptrl	equ	0xFF6
 24722                           tablat	equ	0xFF5
 24723                           prodh	equ	0xFF4
 24724                           prodl	equ	0xFF3
 24725                           intcon	equ	0xFF2
 24726                           intcon3	equ	0xFF0
 24727                           indf0	equ	0xFEF
 24728                           postinc0	equ	0xFEE
 24729                           fsr0h	equ	0xFEA
 24730                           fsr0l	equ	0xFE9
 24731                           wreg	equ	0xFE8
 24732                           indf1	equ	0xFE7
 24733                           postdec1	equ	0xFE5
 24734                           plusw1	equ	0xFE3
 24735                           fsr1h	equ	0xFE2
 24736                           fsr1l	equ	0xFE1
 24737                           indf2	equ	0xFDF
 24738                           postinc2	equ	0xFDE
 24739                           postdec2	equ	0xFDD
 24740                           plusw2	equ	0xFDB
 24741                           fsr2h	equ	0xFDA
 24742                           fsr2l	equ	0xFD9
 24743                           status	equ	0xFD8
 24744                           
 24745 ;; *************** function _flash_is_busy *****************
 24746 ;; Defined at:
 24747 ;;		line 373 in file "flash.c"
 24748 ;; Parameters:    Size  Location     Type
 24749 ;;		None
 24750 ;; Auto vars:     Size  Location     Type
 24751 ;;  result          1   19[COMRAM] unsigned char 
 24752 ;; Return value:  Size  Location     Type
 24753 ;;                  1    wreg      unsigned char 
 24754 ;; Registers used:
 24755 ;;		wreg, status,2, status,0, cstack
 24756 ;; Tracked objects:
 24757 ;;		On entry : 0/0
 24758 ;;		On exit  : 0/0
 24759 ;;		Unchanged: 0/0
 24760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24765 ;;Total ram usage:        1 bytes
 24766 ;; Hardware stack levels used:    1
 24767 ;; Hardware stack levels required when called:    3
 24768 ;; This function calls:
 24769 ;;		__flash_is_busy
 24770 ;; This function is called by:
 24771 ;;		__fill_buffer_get_status
 24772 ;; This function uses a non-reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text118
 24776  007436                     __ptext118:
 24777                           	opt stack 0
 24778  007436                     _flash_is_busy:
 24779                           	opt stack 24
 24780                           
 24781                           ;flash.c: 375: uint8_t result;;flash.c: 378: result = _flash_is_busy();
 24782                           
 24783                           ;incstack = 0
 24784  007436  ECD3  F038         	call	__flash_is_busy	;wreg free
 24785  00743A  6E14               	movwf	flash_is_busy@result,c
 24786                           
 24787                           ;flash.c: 381: return result;
 24788  00743C  5014               	movf	flash_is_busy@result,w,c
 24789  00743E  0012               	return	
 24790  007440                     __end_of_flash_is_busy:
 24791                           	opt stack 0
 24792                           tosu	equ	0xFFF
 24793                           tosh	equ	0xFFE
 24794                           tosl	equ	0xFFD
 24795                           pclath	equ	0xFFA
 24796                           tblptru	equ	0xFF8
 24797                           tblptrh	equ	0xFF7
 24798                           tblptrl	equ	0xFF6
 24799                           tablat	equ	0xFF5
 24800                           prodh	equ	0xFF4
 24801                           prodl	equ	0xFF3
 24802                           intcon	equ	0xFF2
 24803                           intcon3	equ	0xFF0
 24804                           indf0	equ	0xFEF
 24805                           postinc0	equ	0xFEE
 24806                           fsr0h	equ	0xFEA
 24807                           fsr0l	equ	0xFE9
 24808                           wreg	equ	0xFE8
 24809                           indf1	equ	0xFE7
 24810                           postdec1	equ	0xFE5
 24811                           plusw1	equ	0xFE3
 24812                           fsr1h	equ	0xFE2
 24813                           fsr1l	equ	0xFE1
 24814                           indf2	equ	0xFDF
 24815                           postinc2	equ	0xFDE
 24816                           postdec2	equ	0xFDD
 24817                           plusw2	equ	0xFDB
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function __fill_buffer_get_display *****************
 24823 ;; Defined at:
 24824 ;;		line 200 in file "api.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24827 ;;		 -> ToSendDataBuffer(64), 
 24828 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24829 ;; Auto vars:     Size  Location     Type
 24830 ;;  position        1   15[COMRAM] unsigned char 
 24831 ;;  start_line      1   14[COMRAM] unsigned char 
 24832 ;;  line            1   13[COMRAM] unsigned char 
 24833 ;;  cntr            1   12[COMRAM] unsigned char 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  1    wreg      void 
 24836 ;; Registers used:
 24837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24838 ;; Tracked objects:
 24839 ;;		On entry : 0/0
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24843 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24844 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24845 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24846 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24847 ;;Total ram usage:       12 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:    1
 24850 ;; This function calls:
 24851 ;;		_display_get_character
 24852 ;; This function is called by:
 24853 ;;		_api_prepare
 24854 ;; This function uses a non-reentrant model
 24855 ;;
 24856                           
 24857                           	psect	text119
 24858  005084                     __ptext119:
 24859                           	opt stack 0
 24860  005084                     __fill_buffer_get_display:
 24861                           	opt stack 27
 24862                           
 24863                           ;api.c: 202: uint8_t cntr;;api.c: 203: uint8_t line;;api.c: 204: uint8_t start_line;;api
      +                          .c: 205: uint8_t position;;api.c: 208: if(secondHalf)
 24864                           
 24865                           ;incstack = 0
 24866  005084  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24867  005086  B4D8               	btfsc	status,2,c
 24868  005088  D006               	goto	l2738
 24869                           
 24870                           ;api.c: 209: {;api.c: 210: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24871  00508A  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24872  00508E  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24873  005092  0E12               	movlw	18
 24874  005094  D005               	goto	L32
 24875  005096                     l2738:
 24876                           
 24877                           ;api.c: 212: else;api.c: 213: {;api.c: 214: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24878  005096  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24879  00509A  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24880  00509E  0E11               	movlw	17
 24881  0050A0                     L32:
 24882  0050A0  6EDF               	movwf	indf2,c
 24883                           
 24884                           ;api.c: 215: };api.c: 218: outBuffer[1] = 0x4B16 >> 8;
 24885  0050A2  EE20 F001          	lfsr	2,1
 24886  0050A6  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24887  0050A8  26D9               	addwf	fsr2l,f,c
 24888  0050AA  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24889  0050AC  22DA               	addwfc	fsr2h,f,c
 24890  0050AE  0E4B               	movlw	75
 24891  0050B0  6EDF               	movwf	indf2,c
 24892                           
 24893                           ;api.c: 219: outBuffer[2] = (uint8_t) 0x4B16;
 24894  0050B2  EE20 F002          	lfsr	2,2
 24895  0050B6  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24896  0050B8  26D9               	addwf	fsr2l,f,c
 24897  0050BA  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24898  0050BC  22DA               	addwfc	fsr2h,f,c
 24899  0050BE  0E16               	movlw	22
 24900  0050C0  6EDF               	movwf	indf2,c
 24901                           
 24902                           ;api.c: 222: cntr = 3;
 24903  0050C2  0E03               	movlw	3
 24904  0050C4  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24905                           
 24906                           ;api.c: 223: if(secondHalf)
 24907  0050C6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24908  0050C8  B4D8               	btfsc	status,2,c
 24909  0050CA  D002               	goto	l2740
 24910                           
 24911                           ;api.c: 224: {;api.c: 225: start_line = 2;
 24912  0050CC  0E02               	movlw	2
 24913  0050CE  D001               	goto	L33
 24914  0050D0                     l2740:
 24915                           
 24916                           ;api.c: 227: else;api.c: 228: {;api.c: 229: start_line = 0;
 24917  0050D0  0E00               	movlw	0
 24918  0050D2                     L33:
 24919  0050D2  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24920                           
 24921                           ;api.c: 230: };api.c: 231: for(line=start_line; line<start_line+2; ++line)
 24922  0050D4  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24923  0050D8  D01A               	goto	l2742
 24924  0050DA                     
 24925                           ;api.c: 232: {;api.c: 233: for(position=0; position<20; ++position)
 24926  0050DA  0E00               	movlw	0
 24927  0050DC  6E10               	movwf	__fill_buffer_get_display@position,c
 24928  0050DE                     l13405:
 24929  0050DE  0E13               	movlw	19
 24930  0050E0  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24931  0050E2  D001               	goto	l2744
 24932  0050E4  D013               	goto	u11070
 24933  0050E6                     l2744:
 24934                           
 24935                           ;api.c: 234: {;api.c: 235: outBuffer[cntr] = display_get_character(line, position);
 24936  0050E6  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24937  0050EA  500E               	movf	__fill_buffer_get_display@line,w,c
 24938  0050EC  EC01  F038         	call	_display_get_character
 24939  0050F0  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24940  0050F2  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24941  0050F4  0D01               	mullw	1
 24942  0050F6  50F3               	movf	prodl,w,c
 24943  0050F8  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24944  0050FA  6ED9               	movwf	fsr2l,c
 24945  0050FC  50F4               	movf	prodh,w,c
 24946  0050FE  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24947  005100  6EDA               	movwf	fsr2h,c
 24948  005102  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24949                           
 24950                           ;api.c: 236: ++cntr;
 24951  005106  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24952  005108  2A10               	incf	__fill_buffer_get_display@position,f,c
 24953  00510A  D7E9               	goto	l13405
 24954  00510C                     u11070:
 24955  00510C  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24956  00510E                     l2742:
 24957  00510E  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24958  005110  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24959  005112  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24960  005114  0E02               	movlw	2
 24961  005116  2608               	addwf	??__fill_buffer_get_display,f,c
 24962  005118  0E00               	movlw	0
 24963  00511A  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24964  00511C  500E               	movf	__fill_buffer_get_display@line,w,c
 24965  00511E  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24966  005120  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24967  005122  5008               	movf	??__fill_buffer_get_display,w,c
 24968  005124  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24969  005126  500B               	movf	??__fill_buffer_get_display+3,w,c
 24970  005128  0A80               	xorlw	128
 24971  00512A  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24972  00512C  5009               	movf	??__fill_buffer_get_display+1,w,c
 24973  00512E  0A80               	xorlw	128
 24974  005130  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24975  005132  B0D8               	btfsc	status,0,c
 24976  005134  0012               	return	
 24977  005136  D7D1               	goto	l2743
 24978  005138                     __end_of__fill_buffer_get_display:
 24979                           	opt stack 0
 24980                           tosu	equ	0xFFF
 24981                           tosh	equ	0xFFE
 24982                           tosl	equ	0xFFD
 24983                           pclath	equ	0xFFA
 24984                           tblptru	equ	0xFF8
 24985                           tblptrh	equ	0xFF7
 24986                           tblptrl	equ	0xFF6
 24987                           tablat	equ	0xFF5
 24988                           prodh	equ	0xFF4
 24989                           prodl	equ	0xFF3
 24990                           intcon	equ	0xFF2
 24991                           intcon3	equ	0xFF0
 24992                           indf0	equ	0xFEF
 24993                           postinc0	equ	0xFEE
 24994                           fsr0h	equ	0xFEA
 24995                           fsr0l	equ	0xFE9
 24996                           wreg	equ	0xFE8
 24997                           indf1	equ	0xFE7
 24998                           postdec1	equ	0xFE5
 24999                           plusw1	equ	0xFE3
 25000                           fsr1h	equ	0xFE2
 25001                           fsr1l	equ	0xFE1
 25002                           indf2	equ	0xFDF
 25003                           postinc2	equ	0xFDE
 25004                           postdec2	equ	0xFDD
 25005                           plusw2	equ	0xFDB
 25006                           fsr2h	equ	0xFDA
 25007                           fsr2l	equ	0xFD9
 25008                           status	equ	0xFD8
 25009                           
 25010 ;; *************** function _display_get_character *****************
 25011 ;; Defined at:
 25012 ;;		line 181 in file "display.c"
 25013 ;; Parameters:    Size  Location     Type
 25014 ;;  line            1    wreg     unsigned char 
 25015 ;;  position        1    0[COMRAM] unsigned char 
 25016 ;; Auto vars:     Size  Location     Type
 25017 ;;  line            1    3[COMRAM] unsigned char 
 25018 ;; Return value:  Size  Location     Type
 25019 ;;                  1    wreg      unsigned char 
 25020 ;; Registers used:
 25021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25022 ;; Tracked objects:
 25023 ;;		On entry : 0/0
 25024 ;;		On exit  : 0/0
 25025 ;;		Unchanged: 0/0
 25026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25027 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25031 ;;Total ram usage:        4 bytes
 25032 ;; Hardware stack levels used:    1
 25033 ;; This function calls:
 25034 ;;		Nothing
 25035 ;; This function is called by:
 25036 ;;		__fill_buffer_get_display
 25037 ;; This function uses a non-reentrant model
 25038 ;;
 25039                           
 25040                           	psect	text120
 25041  007002                     __ptext120:
 25042                           	opt stack 0
 25043  007002                     _display_get_character:
 25044                           	opt stack 27
 25045                           
 25046                           ;incstack = 0
 25047                           ;display_get_character@line stored from wreg
 25048  007002  6E04               	movwf	display_get_character@line,c
 25049                           
 25050                           ;display.c: 183: return display_content[line][position];
 25051  007004  5004               	movf	display_get_character@line,w,c
 25052  007006  0D14               	mullw	20
 25053  007008  0E7B               	movlw	low _display_content
 25054  00700A  6E02               	movwf	??_display_get_character& (0+255),c
 25055  00700C  0E01               	movlw	high _display_content
 25056  00700E  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25057  007010  50F3               	movf	prodl,w,c
 25058  007012  2602               	addwf	??_display_get_character,f,c
 25059  007014  50F4               	movf	prodh,w,c
 25060  007016  2203               	addwfc	??_display_get_character+1,f,c
 25061  007018  5001               	movf	display_get_character@position,w,c
 25062  00701A  0D01               	mullw	1
 25063  00701C  50F3               	movf	prodl,w,c
 25064  00701E  2402               	addwf	??_display_get_character,w,c
 25065  007020  6ED9               	movwf	fsr2l,c
 25066  007022  50F4               	movf	prodh,w,c
 25067  007024  2003               	addwfc	??_display_get_character+1,w,c
 25068  007026  6EDA               	movwf	fsr2h,c
 25069  007028  50DF               	movf	indf2,w,c
 25070  00702A  0012               	return	
 25071  00702C                     __end_of_display_get_character:
 25072                           	opt stack 0
 25073                           tosu	equ	0xFFF
 25074                           tosh	equ	0xFFE
 25075                           tosl	equ	0xFFD
 25076                           pclath	equ	0xFFA
 25077                           tblptru	equ	0xFF8
 25078                           tblptrh	equ	0xFF7
 25079                           tblptrl	equ	0xFF6
 25080                           tablat	equ	0xFF5
 25081                           prodh	equ	0xFF4
 25082                           prodl	equ	0xFF3
 25083                           intcon	equ	0xFF2
 25084                           intcon3	equ	0xFF0
 25085                           indf0	equ	0xFEF
 25086                           postinc0	equ	0xFEE
 25087                           fsr0h	equ	0xFEA
 25088                           fsr0l	equ	0xFE9
 25089                           wreg	equ	0xFE8
 25090                           indf1	equ	0xFE7
 25091                           postdec1	equ	0xFE5
 25092                           plusw1	equ	0xFE3
 25093                           fsr1h	equ	0xFE2
 25094                           fsr1l	equ	0xFE1
 25095                           indf2	equ	0xFDF
 25096                           postinc2	equ	0xFDE
 25097                           postdec2	equ	0xFDD
 25098                           plusw2	equ	0xFDB
 25099                           fsr2h	equ	0xFDA
 25100                           fsr2l	equ	0xFD9
 25101                           status	equ	0xFD8
 25102                           
 25103 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25104 ;; Defined at:
 25105 ;;		line 241 in file "api.c"
 25106 ;; Parameters:    Size  Location     Type
 25107 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25108 ;;		 -> ToSendDataBuffer(64), 
 25109 ;; Auto vars:     Size  Location     Type
 25110 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25111 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25112 ;;  cntr            1   10[COMRAM] unsigned char 
 25113 ;;  data_length     1    9[COMRAM] unsigned char 
 25114 ;; Return value:  Size  Location     Type
 25115 ;;                  1    wreg      void 
 25116 ;; Registers used:
 25117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25118 ;; Tracked objects:
 25119 ;;		On entry : 0/0
 25120 ;;		On exit  : 0/0
 25121 ;;		Unchanged: 0/0
 25122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25124 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25125 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25126 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25127 ;;Total ram usage:       13 bytes
 25128 ;; Hardware stack levels used:    1
 25129 ;; Hardware stack levels required when called:    1
 25130 ;; This function calls:
 25131 ;;		_bootloader_get_entries
 25132 ;;		_bootloader_get_error
 25133 ;;		_bootloader_get_file_size
 25134 ;;		_bootloader_get_flashPagesWritten
 25135 ;;		_bootloader_get_rec_address
 25136 ;;		_bootloader_get_rec_checksum
 25137 ;;		_bootloader_get_rec_checksumCheck
 25138 ;;		_bootloader_get_rec_data
 25139 ;;		_bootloader_get_rec_dataLength
 25140 ;;		_bootloader_get_rec_recordType
 25141 ;;		_bootloader_get_total_entries
 25142 ;; This function is called by:
 25143 ;;		_api_prepare
 25144 ;; This function uses a non-reentrant model
 25145 ;;
 25146                           
 25147                           	psect	text121
 25148  00203C                     __ptext121:
 25149                           	opt stack 0
 25150  00203C                     __fill_buffer_get_bootloader_details:
 25151                           	opt stack 27
 25152                           
 25153                           ;api.c: 243: uint8_t cntr;;api.c: 244: uint8_t data_length;;api.c: 245: uint16_t buffer_
      +                          small;;api.c: 246: uint32_t buffer_large;;api.c: 249: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25154                           
 25155                           ;incstack = 0
 25156  00203C  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25157  002040  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25158  002044  0E13               	movlw	19
 25159  002046  6EDF               	movwf	indf2,c
 25160                           
 25161                           ;api.c: 252: outBuffer[1] = ((unsigned char)(((0x4B16)>>8)&0xFF));
 25162  002048  EE20 F001          	lfsr	2,1
 25163  00204C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25164  00204E  26D9               	addwf	fsr2l,f,c
 25165  002050  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25166  002052  22DA               	addwfc	fsr2h,f,c
 25167  002054  0E4B               	movlw	75
 25168  002056  6EDF               	movwf	indf2,c
 25169                           
 25170                           ;api.c: 253: outBuffer[2] = ((unsigned char)((0x4B16)&0xFF));
 25171  002058  EE20 F002          	lfsr	2,2
 25172  00205C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25173  00205E  26D9               	addwf	fsr2l,f,c
 25174  002060  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25175  002062  22DA               	addwfc	fsr2h,f,c
 25176  002064  0E16               	movlw	22
 25177  002066  6EDF               	movwf	indf2,c
 25178                           
 25179                           ;api.c: 256: buffer_large = bootloader_get_file_size();
 25180  002068  ECD5  F039         	call	_bootloader_get_file_size	;wreg free
 25181  00206C  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25182  002070  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25183  002074  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25184  002078  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25185                           
 25186                           ;api.c: 257: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25187  00207C  EE20 F003          	lfsr	2,3
 25188  002080  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25189  002082  26D9               	addwf	fsr2l,f,c
 25190  002084  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25191  002086  22DA               	addwfc	fsr2h,f,c
 25192  002088  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25193  00208A  6EDF               	movwf	indf2,c
 25194                           
 25195                           ;api.c: 258: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25196  00208C  EE20 F004          	lfsr	2,4
 25197  002090  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25198  002092  26D9               	addwf	fsr2l,f,c
 25199  002094  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25200  002096  22DA               	addwfc	fsr2h,f,c
 25201  002098  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25202                           
 25203                           ;api.c: 259: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25204  00209C  EE20 F005          	lfsr	2,5
 25205  0020A0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25206  0020A2  26D9               	addwf	fsr2l,f,c
 25207  0020A4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25208  0020A6  22DA               	addwfc	fsr2h,f,c
 25209  0020A8  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25210  0020AA  6EDF               	movwf	indf2,c
 25211                           
 25212                           ;api.c: 260: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25213  0020AC  EE20 F006          	lfsr	2,6
 25214  0020B0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25215  0020B2  26D9               	addwf	fsr2l,f,c
 25216  0020B4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25217  0020B6  22DA               	addwfc	fsr2h,f,c
 25218  0020B8  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25219                           
 25220                           ;api.c: 262: buffer_small = bootloader_get_entries();
 25221  0020BC  EC2A  F03A         	call	_bootloader_get_entries	;wreg free
 25222  0020C0  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25223  0020C4  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25224                           
 25225                           ;api.c: 263: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25226  0020C8  EE20 F007          	lfsr	2,7
 25227  0020CC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25228  0020CE  26D9               	addwf	fsr2l,f,c
 25229  0020D0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25230  0020D2  22DA               	addwfc	fsr2h,f,c
 25231  0020D4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25232  0020D6  6EDF               	movwf	indf2,c
 25233                           
 25234                           ;api.c: 264: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25235  0020D8  EE20 F008          	lfsr	2,8
 25236  0020DC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25237  0020DE  26D9               	addwf	fsr2l,f,c
 25238  0020E0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25239  0020E2  22DA               	addwfc	fsr2h,f,c
 25240  0020E4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25241                           
 25242                           ;api.c: 266: buffer_small = bootloader_get_total_entries();
 25243  0020E8  EC34  F03A         	call	_bootloader_get_total_entries	;wreg free
 25244  0020EC  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25245  0020F0  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25246                           
 25247                           ;api.c: 267: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25248  0020F4  EE20 F009          	lfsr	2,9
 25249  0020F8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25250  0020FA  26D9               	addwf	fsr2l,f,c
 25251  0020FC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25252  0020FE  22DA               	addwfc	fsr2h,f,c
 25253  002100  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25254  002102  6EDF               	movwf	indf2,c
 25255                           
 25256                           ;api.c: 268: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25257  002104  EE20 F00A          	lfsr	2,10
 25258  002108  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25259  00210A  26D9               	addwf	fsr2l,f,c
 25260  00210C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25261  00210E  22DA               	addwfc	fsr2h,f,c
 25262  002110  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25263                           
 25264                           ;api.c: 270: outBuffer[11] = (uint8_t) bootloader_get_error();
 25265  002114  EE20 F00B          	lfsr	2,11
 25266  002118  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25267  00211A  26D9               	addwf	fsr2l,f,c
 25268  00211C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25269  00211E  22DA               	addwfc	fsr2h,f,c
 25270  002120  EC54  F03A         	call	_bootloader_get_error	;wreg free
 25271  002124  6EDF               	movwf	indf2,c
 25272                           
 25273                           ;api.c: 272: buffer_small = bootloader_get_flashPagesWritten();
 25274  002126  EC2F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 25275  00212A  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25276  00212E  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25277                           
 25278                           ;api.c: 273: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25279  002132  EE20 F00C          	lfsr	2,12
 25280  002136  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25281  002138  26D9               	addwf	fsr2l,f,c
 25282  00213A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25283  00213C  22DA               	addwfc	fsr2h,f,c
 25284  00213E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25285  002140  6EDF               	movwf	indf2,c
 25286                           
 25287                           ;api.c: 274: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25288  002142  EE20 F00D          	lfsr	2,13
 25289  002146  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25290  002148  26D9               	addwf	fsr2l,f,c
 25291  00214A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25292  00214C  22DA               	addwfc	fsr2h,f,c
 25293  00214E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25294                           
 25295                           ;api.c: 277: buffer_small = bootloader_get_rec_dataLength();
 25296  002152  EC20  F03A         	call	_bootloader_get_rec_dataLength	;wreg free
 25297  002156  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25298  00215A  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25299                           
 25300                           ;api.c: 278: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25301  00215E  EE20 F00E          	lfsr	2,14
 25302  002162  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25303  002164  26D9               	addwf	fsr2l,f,c
 25304  002166  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25305  002168  22DA               	addwfc	fsr2h,f,c
 25306  00216A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25307  00216C  6EDF               	movwf	indf2,c
 25308                           
 25309                           ;api.c: 279: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25310  00216E  EE20 F00F          	lfsr	2,15
 25311  002172  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25312  002174  26D9               	addwf	fsr2l,f,c
 25313  002176  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25314  002178  22DA               	addwfc	fsr2h,f,c
 25315  00217A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25316                           
 25317                           ;api.c: 281: buffer_small = bootloader_get_rec_address();
 25318  00217E  EC25  F03A         	call	_bootloader_get_rec_address	;wreg free
 25319  002182  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25320  002186  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25321                           
 25322                           ;api.c: 282: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25323  00218A  EE20 F010          	lfsr	2,16
 25324  00218E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25325  002190  26D9               	addwf	fsr2l,f,c
 25326  002192  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25327  002194  22DA               	addwfc	fsr2h,f,c
 25328  002196  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25329  002198  6EDF               	movwf	indf2,c
 25330                           
 25331                           ;api.c: 283: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25332  00219A  EE20 F011          	lfsr	2,17
 25333  00219E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25334  0021A0  26D9               	addwf	fsr2l,f,c
 25335  0021A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25336  0021A4  22DA               	addwfc	fsr2h,f,c
 25337  0021A6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25338                           
 25339                           ;api.c: 285: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25340  0021AA  EE20 F012          	lfsr	2,18
 25341  0021AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25342  0021B0  26D9               	addwf	fsr2l,f,c
 25343  0021B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25344  0021B4  22DA               	addwfc	fsr2h,f,c
 25345  0021B6  EC48  F03A         	call	_bootloader_get_rec_recordType	;wreg free
 25346  0021BA  6EDF               	movwf	indf2,c
 25347                           
 25348                           ;api.c: 286: outBuffer[19] = bootloader_get_rec_checksum();
 25349  0021BC  EE20 F013          	lfsr	2,19
 25350  0021C0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25351  0021C2  26D9               	addwf	fsr2l,f,c
 25352  0021C4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25353  0021C6  22DA               	addwfc	fsr2h,f,c
 25354  0021C8  EC4E  F03A         	call	_bootloader_get_rec_checksum	;wreg free
 25355  0021CC  6EDF               	movwf	indf2,c
 25356                           
 25357                           ;api.c: 287: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25358  0021CE  EE20 F014          	lfsr	2,20
 25359  0021D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25360  0021D4  26D9               	addwf	fsr2l,f,c
 25361  0021D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25362  0021D8  22DA               	addwfc	fsr2h,f,c
 25363  0021DA  EC4B  F03A         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25364  0021DE  6EDF               	movwf	indf2,c
 25365                           
 25366                           ;api.c: 289: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25367  0021E0  EC20  F03A         	call	_bootloader_get_rec_dataLength	;wreg free
 25368  0021E4  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25369  0021E6  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25370                           
 25371                           ;api.c: 290: if(data_length>43)
 25372  0021E8  0E2B               	movlw	43
 25373  0021EA  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25374  0021EC  D002               	goto	l2750
 25375                           
 25376                           ;api.c: 291: {;api.c: 293: data_length = 43;
 25377  0021EE  0E2B               	movlw	43
 25378  0021F0  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25379  0021F2                     l2750:
 25380                           
 25381                           ;api.c: 294: };api.c: 295: for(cntr=0; cntr<data_length; ++cntr)
 25382  0021F2  0E00               	movlw	0
 25383  0021F4  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25384  0021F6  D014               	goto	l2751
 25385  0021F8                     
 25386                           ;api.c: 296: {;api.c: 297: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25387  0021F8  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25388  0021FA  ECA5  F039         	call	_bootloader_get_rec_data
 25389  0021FE  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25390  002200  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25391  002202  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25392  002204  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25393  002206  0E15               	movlw	21
 25394  002208  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25395  00220A  0E00               	movlw	0
 25396  00220C  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25397  00220E  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25398  002210  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25399  002212  6ED9               	movwf	fsr2l,c
 25400  002214  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25401  002216  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25402  002218  6EDA               	movwf	fsr2h,c
 25403  00221A  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25404  00221E  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25405  002220                     l2751:
 25406  002220  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25407  002222  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25408  002224  B0D8               	btfsc	status,0,c
 25409  002226  0012               	return	
 25410  002228  D7E7               	goto	l2752
 25411  00222A                     __end_of__fill_buffer_get_bootloader_details:
 25412                           	opt stack 0
 25413                           tosu	equ	0xFFF
 25414                           tosh	equ	0xFFE
 25415                           tosl	equ	0xFFD
 25416                           pclath	equ	0xFFA
 25417                           tblptru	equ	0xFF8
 25418                           tblptrh	equ	0xFF7
 25419                           tblptrl	equ	0xFF6
 25420                           tablat	equ	0xFF5
 25421                           prodh	equ	0xFF4
 25422                           prodl	equ	0xFF3
 25423                           intcon	equ	0xFF2
 25424                           intcon3	equ	0xFF0
 25425                           indf0	equ	0xFEF
 25426                           postinc0	equ	0xFEE
 25427                           fsr0h	equ	0xFEA
 25428                           fsr0l	equ	0xFE9
 25429                           wreg	equ	0xFE8
 25430                           indf1	equ	0xFE7
 25431                           postdec1	equ	0xFE5
 25432                           plusw1	equ	0xFE3
 25433                           fsr1h	equ	0xFE2
 25434                           fsr1l	equ	0xFE1
 25435                           indf2	equ	0xFDF
 25436                           postinc2	equ	0xFDE
 25437                           postdec2	equ	0xFDD
 25438                           plusw2	equ	0xFDB
 25439                           fsr2h	equ	0xFDA
 25440                           fsr2l	equ	0xFD9
 25441                           status	equ	0xFD8
 25442                           
 25443 ;; *************** function _bootloader_get_rec_recordType *****************
 25444 ;; Defined at:
 25445 ;;		line 494 in file "bootloader.c"
 25446 ;; Parameters:    Size  Location     Type
 25447 ;;		None
 25448 ;; Auto vars:     Size  Location     Type
 25449 ;;		None
 25450 ;; Return value:  Size  Location     Type
 25451 ;;                  1    wreg      enum E6765
 25452 ;; Registers used:
 25453 ;;		wreg, status,2
 25454 ;; Tracked objects:
 25455 ;;		On entry : 0/0
 25456 ;;		On exit  : 0/0
 25457 ;;		Unchanged: 0/0
 25458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25463 ;;Total ram usage:        0 bytes
 25464 ;; Hardware stack levels used:    1
 25465 ;; This function calls:
 25466 ;;		Nothing
 25467 ;; This function is called by:
 25468 ;;		__fill_buffer_get_bootloader_details
 25469 ;; This function uses a non-reentrant model
 25470 ;;
 25471                           
 25472                           	psect	text122
 25473  007490                     __ptext122:
 25474                           	opt stack 0
 25475  007490                     _bootloader_get_rec_recordType:
 25476                           	opt stack 27
 25477                           
 25478                           ;bootloader.c: 496: return hex_file_entry.recordType;
 25479                           
 25480                           ;incstack = 0
 25481  007490  0101               	movlb	1	; () banked
 25482  007492  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
 25483  007494  0012               	return	
 25484  007496                     __end_of_bootloader_get_rec_recordType:
 25485                           	opt stack 0
 25486                           tosu	equ	0xFFF
 25487                           tosh	equ	0xFFE
 25488                           tosl	equ	0xFFD
 25489                           pclath	equ	0xFFA
 25490                           tblptru	equ	0xFF8
 25491                           tblptrh	equ	0xFF7
 25492                           tblptrl	equ	0xFF6
 25493                           tablat	equ	0xFF5
 25494                           prodh	equ	0xFF4
 25495                           prodl	equ	0xFF3
 25496                           intcon	equ	0xFF2
 25497                           intcon3	equ	0xFF0
 25498                           indf0	equ	0xFEF
 25499                           postinc0	equ	0xFEE
 25500                           fsr0h	equ	0xFEA
 25501                           fsr0l	equ	0xFE9
 25502                           wreg	equ	0xFE8
 25503                           indf1	equ	0xFE7
 25504                           postdec1	equ	0xFE5
 25505                           plusw1	equ	0xFE3
 25506                           fsr1h	equ	0xFE2
 25507                           fsr1l	equ	0xFE1
 25508                           indf2	equ	0xFDF
 25509                           postinc2	equ	0xFDE
 25510                           postdec2	equ	0xFDD
 25511                           plusw2	equ	0xFDB
 25512                           fsr2h	equ	0xFDA
 25513                           fsr2l	equ	0xFD9
 25514                           status	equ	0xFD8
 25515                           
 25516 ;; *************** function _bootloader_get_rec_dataLength *****************
 25517 ;; Defined at:
 25518 ;;		line 483 in file "bootloader.c"
 25519 ;; Parameters:    Size  Location     Type
 25520 ;;		None
 25521 ;; Auto vars:     Size  Location     Type
 25522 ;;		None
 25523 ;; Return value:  Size  Location     Type
 25524 ;;                  2    0[COMRAM] unsigned int 
 25525 ;; Registers used:
 25526 ;;		None
 25527 ;; Tracked objects:
 25528 ;;		On entry : 0/0
 25529 ;;		On exit  : 0/0
 25530 ;;		Unchanged: 0/0
 25531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25536 ;;Total ram usage:        2 bytes
 25537 ;; Hardware stack levels used:    1
 25538 ;; This function calls:
 25539 ;;		Nothing
 25540 ;; This function is called by:
 25541 ;;		__fill_buffer_get_bootloader_details
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545                           	psect	text123
 25546  007440                     __ptext123:
 25547                           	opt stack 0
 25548  007440                     _bootloader_get_rec_dataLength:
 25549                           	opt stack 27
 25550                           
 25551                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 25552                           
 25553                           ; BSR set to: 1
 25554                           ;incstack = 0
 25555  007440  C1CB  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25556  007444  C1CC  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25557  007448  0012               	return		;funcret
 25558  00744A                     __end_of_bootloader_get_rec_dataLength:
 25559                           	opt stack 0
 25560                           tosu	equ	0xFFF
 25561                           tosh	equ	0xFFE
 25562                           tosl	equ	0xFFD
 25563                           pclath	equ	0xFFA
 25564                           tblptru	equ	0xFF8
 25565                           tblptrh	equ	0xFF7
 25566                           tblptrl	equ	0xFF6
 25567                           tablat	equ	0xFF5
 25568                           prodh	equ	0xFF4
 25569                           prodl	equ	0xFF3
 25570                           intcon	equ	0xFF2
 25571                           intcon3	equ	0xFF0
 25572                           indf0	equ	0xFEF
 25573                           postinc0	equ	0xFEE
 25574                           fsr0h	equ	0xFEA
 25575                           fsr0l	equ	0xFE9
 25576                           wreg	equ	0xFE8
 25577                           indf1	equ	0xFE7
 25578                           postdec1	equ	0xFE5
 25579                           plusw1	equ	0xFE3
 25580                           fsr1h	equ	0xFE2
 25581                           fsr1l	equ	0xFE1
 25582                           indf2	equ	0xFDF
 25583                           postinc2	equ	0xFDE
 25584                           postdec2	equ	0xFDD
 25585                           plusw2	equ	0xFDB
 25586                           fsr2h	equ	0xFDA
 25587                           fsr2l	equ	0xFD9
 25588                           status	equ	0xFD8
 25589                           
 25590 ;; *************** function _bootloader_get_rec_data *****************
 25591 ;; Defined at:
 25592 ;;		line 499 in file "bootloader.c"
 25593 ;; Parameters:    Size  Location     Type
 25594 ;;  index           1    wreg     unsigned char 
 25595 ;; Auto vars:     Size  Location     Type
 25596 ;;  index           1    0[COMRAM] unsigned char 
 25597 ;; Return value:  Size  Location     Type
 25598 ;;                  1    wreg      unsigned char 
 25599 ;; Registers used:
 25600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25601 ;; Tracked objects:
 25602 ;;		On entry : 0/0
 25603 ;;		On exit  : 0/0
 25604 ;;		Unchanged: 0/0
 25605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25610 ;;Total ram usage:        1 bytes
 25611 ;; Hardware stack levels used:    1
 25612 ;; This function calls:
 25613 ;;		Nothing
 25614 ;; This function is called by:
 25615 ;;		__fill_buffer_get_bootloader_details
 25616 ;; This function uses a non-reentrant model
 25617 ;;
 25618                           
 25619                           	psect	text124
 25620  00734A                     __ptext124:
 25621                           	opt stack 0
 25622  00734A                     _bootloader_get_rec_data:
 25623                           	opt stack 27
 25624                           
 25625                           ;incstack = 0
 25626                           ;bootloader_get_rec_data@index stored from wreg
 25627  00734A  6E01               	movwf	bootloader_get_rec_data@index,c
 25628                           
 25629                           ;bootloader.c: 501: return hex_file_entry.data[index];
 25630  00734C  5001               	movf	bootloader_get_rec_data@index,w,c
 25631  00734E  0D01               	mullw	1
 25632  007350  0ED0               	movlw	low (_hex_file_entry+5)
 25633  007352  24F3               	addwf	prodl,w,c
 25634  007354  6ED9               	movwf	fsr2l,c
 25635  007356  0E01               	movlw	high (_hex_file_entry+5)
 25636  007358  20F4               	addwfc	prodh,w,c
 25637  00735A  6EDA               	movwf	fsr2h,c
 25638  00735C  50DF               	movf	indf2,w,c
 25639  00735E  0012               	return	
 25640  007360                     __end_of_bootloader_get_rec_data:
 25641                           	opt stack 0
 25642                           tosu	equ	0xFFF
 25643                           tosh	equ	0xFFE
 25644                           tosl	equ	0xFFD
 25645                           pclath	equ	0xFFA
 25646                           tblptru	equ	0xFF8
 25647                           tblptrh	equ	0xFF7
 25648                           tblptrl	equ	0xFF6
 25649                           tablat	equ	0xFF5
 25650                           prodh	equ	0xFF4
 25651                           prodl	equ	0xFF3
 25652                           intcon	equ	0xFF2
 25653                           intcon3	equ	0xFF0
 25654                           indf0	equ	0xFEF
 25655                           postinc0	equ	0xFEE
 25656                           fsr0h	equ	0xFEA
 25657                           fsr0l	equ	0xFE9
 25658                           wreg	equ	0xFE8
 25659                           indf1	equ	0xFE7
 25660                           postdec1	equ	0xFE5
 25661                           plusw1	equ	0xFE3
 25662                           fsr1h	equ	0xFE2
 25663                           fsr1l	equ	0xFE1
 25664                           indf2	equ	0xFDF
 25665                           postinc2	equ	0xFDE
 25666                           postdec2	equ	0xFDD
 25667                           plusw2	equ	0xFDB
 25668                           fsr2h	equ	0xFDA
 25669                           fsr2l	equ	0xFD9
 25670                           status	equ	0xFD8
 25671                           
 25672 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25673 ;; Defined at:
 25674 ;;		line 509 in file "bootloader.c"
 25675 ;; Parameters:    Size  Location     Type
 25676 ;;		None
 25677 ;; Auto vars:     Size  Location     Type
 25678 ;;		None
 25679 ;; Return value:  Size  Location     Type
 25680 ;;                  1    wreg      unsigned char 
 25681 ;; Registers used:
 25682 ;;		wreg, status,2
 25683 ;; Tracked objects:
 25684 ;;		On entry : 0/0
 25685 ;;		On exit  : 0/0
 25686 ;;		Unchanged: 0/0
 25687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25692 ;;Total ram usage:        0 bytes
 25693 ;; Hardware stack levels used:    1
 25694 ;; This function calls:
 25695 ;;		Nothing
 25696 ;; This function is called by:
 25697 ;;		__fill_buffer_get_bootloader_details
 25698 ;; This function uses a non-reentrant model
 25699 ;;
 25700                           
 25701                           	psect	text125
 25702  007496                     __ptext125:
 25703                           	opt stack 0
 25704  007496                     _bootloader_get_rec_checksumCheck:
 25705                           	opt stack 27
 25706                           
 25707                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 25708                           
 25709                           ;incstack = 0
 25710  007496  0101               	movlb	1	; () banked
 25711  007498  51E1               	movf	(_hex_file_entry+22)& (0+255),w,b
 25712  00749A  0012               	return	
 25713  00749C                     __end_of_bootloader_get_rec_checksumCheck:
 25714                           	opt stack 0
 25715                           tosu	equ	0xFFF
 25716                           tosh	equ	0xFFE
 25717                           tosl	equ	0xFFD
 25718                           pclath	equ	0xFFA
 25719                           tblptru	equ	0xFF8
 25720                           tblptrh	equ	0xFF7
 25721                           tblptrl	equ	0xFF6
 25722                           tablat	equ	0xFF5
 25723                           prodh	equ	0xFF4
 25724                           prodl	equ	0xFF3
 25725                           intcon	equ	0xFF2
 25726                           intcon3	equ	0xFF0
 25727                           indf0	equ	0xFEF
 25728                           postinc0	equ	0xFEE
 25729                           fsr0h	equ	0xFEA
 25730                           fsr0l	equ	0xFE9
 25731                           wreg	equ	0xFE8
 25732                           indf1	equ	0xFE7
 25733                           postdec1	equ	0xFE5
 25734                           plusw1	equ	0xFE3
 25735                           fsr1h	equ	0xFE2
 25736                           fsr1l	equ	0xFE1
 25737                           indf2	equ	0xFDF
 25738                           postinc2	equ	0xFDE
 25739                           postdec2	equ	0xFDD
 25740                           plusw2	equ	0xFDB
 25741                           fsr2h	equ	0xFDA
 25742                           fsr2l	equ	0xFD9
 25743                           status	equ	0xFD8
 25744                           
 25745 ;; *************** function _bootloader_get_rec_checksum *****************
 25746 ;; Defined at:
 25747 ;;		line 504 in file "bootloader.c"
 25748 ;; Parameters:    Size  Location     Type
 25749 ;;		None
 25750 ;; Auto vars:     Size  Location     Type
 25751 ;;		None
 25752 ;; Return value:  Size  Location     Type
 25753 ;;                  1    wreg      unsigned char 
 25754 ;; Registers used:
 25755 ;;		wreg, status,2
 25756 ;; Tracked objects:
 25757 ;;		On entry : 0/0
 25758 ;;		On exit  : 0/0
 25759 ;;		Unchanged: 0/0
 25760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25765 ;;Total ram usage:        0 bytes
 25766 ;; Hardware stack levels used:    1
 25767 ;; This function calls:
 25768 ;;		Nothing
 25769 ;; This function is called by:
 25770 ;;		__fill_buffer_get_bootloader_details
 25771 ;; This function uses a non-reentrant model
 25772 ;;
 25773                           
 25774                           	psect	text126
 25775  00749C                     __ptext126:
 25776                           	opt stack 0
 25777  00749C                     _bootloader_get_rec_checksum:
 25778                           	opt stack 27
 25779                           
 25780                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25781                           
 25782                           ; BSR set to: 1
 25783                           ;incstack = 0
 25784  00749C  0101               	movlb	1	; () banked
 25785  00749E  51E0               	movf	(_hex_file_entry+21)& (0+255),w,b
 25786  0074A0  0012               	return	
 25787  0074A2                     __end_of_bootloader_get_rec_checksum:
 25788                           	opt stack 0
 25789                           tosu	equ	0xFFF
 25790                           tosh	equ	0xFFE
 25791                           tosl	equ	0xFFD
 25792                           pclath	equ	0xFFA
 25793                           tblptru	equ	0xFF8
 25794                           tblptrh	equ	0xFF7
 25795                           tblptrl	equ	0xFF6
 25796                           tablat	equ	0xFF5
 25797                           prodh	equ	0xFF4
 25798                           prodl	equ	0xFF3
 25799                           intcon	equ	0xFF2
 25800                           intcon3	equ	0xFF0
 25801                           indf0	equ	0xFEF
 25802                           postinc0	equ	0xFEE
 25803                           fsr0h	equ	0xFEA
 25804                           fsr0l	equ	0xFE9
 25805                           wreg	equ	0xFE8
 25806                           indf1	equ	0xFE7
 25807                           postdec1	equ	0xFE5
 25808                           plusw1	equ	0xFE3
 25809                           fsr1h	equ	0xFE2
 25810                           fsr1l	equ	0xFE1
 25811                           indf2	equ	0xFDF
 25812                           postinc2	equ	0xFDE
 25813                           postdec2	equ	0xFDD
 25814                           plusw2	equ	0xFDB
 25815                           fsr2h	equ	0xFDA
 25816                           fsr2l	equ	0xFD9
 25817                           status	equ	0xFD8
 25818                           
 25819 ;; *************** function _api_parse *****************
 25820 ;; Defined at:
 25821 ;;		line 91 in file "api.c"
 25822 ;; Parameters:    Size  Location     Type
 25823 ;;  inBuffer        2   53[COMRAM] PTR unsigned char 
 25824 ;;		 -> ReceivedDataBuffer(64), 
 25825 ;;  receivedData    1   55[COMRAM] unsigned char 
 25826 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25827 ;;		 -> ToSendDataBuffer(64), 
 25828 ;; Auto vars:     Size  Location     Type
 25829 ;;  out_idx_ptr     2   60[COMRAM] PTR unsigned char 
 25830 ;;		 -> api_parse@out_idx(1), 
 25831 ;;  in_idx          1   63[COMRAM] unsigned char 
 25832 ;;  out_idx         1   62[COMRAM] unsigned char 
 25833 ;; Return value:  Size  Location     Type
 25834 ;;                  1    wreg      void 
 25835 ;; Registers used:
 25836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25837 ;; Tracked objects:
 25838 ;;		On entry : 0/0
 25839 ;;		On exit  : 0/0
 25840 ;;		Unchanged: 0/0
 25841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25842 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25843 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25845 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25846 ;;Total ram usage:       11 bytes
 25847 ;; Hardware stack levels used:    1
 25848 ;; Hardware stack levels required when called:    8
 25849 ;; This function calls:
 25850 ;;		__parse_command_long
 25851 ;;		__parse_command_short
 25852 ;; This function is called by:
 25853 ;;		_APP_DeviceCustomHIDTasks
 25854 ;; This function uses a non-reentrant model
 25855 ;;
 25856                           
 25857                           	psect	text127
 25858  00389E                     __ptext127:
 25859                           	opt stack 0
 25860  00389E                     _api_parse:
 25861                           	opt stack 21
 25862                           
 25863                           ;api.c: 95: uint8_t in_idx;;api.c: 96: uint8_t out_idx;;api.c: 97: uint8_t *out_idx_ptr;
      +                          ;api.c: 99: out_idx = 0;
 25864                           
 25865                           ; BSR set to: 1
 25866                           ;incstack = 0
 25867  00389E  0E00               	movlw	0
 25868  0038A0  6E3F               	movwf	api_parse@out_idx,c
 25869                           
 25870                           ;api.c: 100: out_idx_ptr = &out_idx;
 25871  0038A2  0E3F               	movlw	low api_parse@out_idx
 25872  0038A4  6E3D               	movwf	api_parse@out_idx_ptr,c
 25873  0038A6  0E00               	movlw	high api_parse@out_idx
 25874  0038A8  6E3E               	movwf	api_parse@out_idx_ptr+1,c
 25875                           
 25876                           ;api.c: 102: if(inBuffer[0]>0x7F)
 25877  0038AA  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25878  0038AE  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25879  0038B2  0E7F               	movlw	127
 25880  0038B4  64DF               	cpfsgt	indf2,c
 25881  0038B6  D001               	goto	l2719
 25882  0038B8  0012               	return	
 25883  0038BA                     l2719:
 25884                           
 25885                           ;api.c: 107: };api.c: 109: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25886  0038BA  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25887  0038BE  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25888  0038C2  0E20               	movlw	32
 25889  0038C4  18DE               	xorwf	postinc2,w,c
 25890  0038C6  B4D8               	btfsc	status,2,c
 25891  0038C8  0012               	return	
 25892                           
 25893                           ;api.c: 114: };api.c: 116: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 25894                           
 25895                           ;api.c: 110: {;api.c: 113: return;
 25896  0038CA  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25897  0038CE  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25898  0038D2  50DF               	movf	indf2,w,c
 25899  0038D4  A4D8               	btfss	status,2,c
 25900  0038D6  D018               	goto	l2722
 25901                           
 25902                           ;api.c: 117: {;api.c: 119: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 25903  0038D8  C039  FFD9         	movff	api_parse@outBuffer,fsr2l
 25904  0038DC  C03A  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 25905  0038E0  0E00               	movlw	0
 25906  0038E2  6EDF               	movwf	indf2,c
 25907                           
 25908                           ;api.c: 122: outBuffer[1] = 0x4B16 >> 8;
 25909  0038E4  EE20 F001          	lfsr	2,1
 25910  0038E8  5039               	movf	api_parse@outBuffer,w,c
 25911  0038EA  26D9               	addwf	fsr2l,f,c
 25912  0038EC  503A               	movf	api_parse@outBuffer+1,w,c
 25913  0038EE  22DA               	addwfc	fsr2h,f,c
 25914  0038F0  0E4B               	movlw	75
 25915  0038F2  6EDF               	movwf	indf2,c
 25916                           
 25917                           ;api.c: 123: outBuffer[2] = (uint8_t) 0x4B16;
 25918  0038F4  EE20 F002          	lfsr	2,2
 25919  0038F8  5039               	movf	api_parse@outBuffer,w,c
 25920  0038FA  26D9               	addwf	fsr2l,f,c
 25921  0038FC  503A               	movf	api_parse@outBuffer+1,w,c
 25922  0038FE  22DA               	addwfc	fsr2h,f,c
 25923  003900  0E16               	movlw	22
 25924  003902  6EDF               	movwf	indf2,c
 25925                           
 25926                           ;api.c: 126: out_idx = 3;
 25927  003904  0E03               	movlw	3
 25928  003906  6E3F               	movwf	api_parse@out_idx,c
 25929  003908                     l2722:
 25930                           
 25931                           ;api.c: 127: };api.c: 129: in_idx = 1;
 25932  003908  0E01               	movlw	1
 25933  00390A  6E40               	movwf	api_parse@in_idx,c
 25934                           
 25935                           ;api.c: 130: while(in_idx<receivedDataLength)
 25936  00390C  D055               	goto	l2728
 25937  00390E                     
 25938                           ;api.c: 131: {;api.c: 133: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 25939  00390E  5040               	movf	api_parse@in_idx,w,c
 25940  003910  0D01               	mullw	1
 25941  003912  50F3               	movf	prodl,w,c
 25942  003914  2436               	addwf	api_parse@inBuffer,w,c
 25943  003916  6ED9               	movwf	fsr2l,c
 25944  003918  50F4               	movf	prodh,w,c
 25945  00391A  2037               	addwfc	api_parse@inBuffer+1,w,c
 25946  00391C  6EDA               	movwf	fsr2h,c
 25947  00391E  0E99               	movlw	153
 25948  003920  18DE               	xorwf	postinc2,w,c
 25949  003922  B4D8               	btfsc	status,2,c
 25950  003924  0012               	return	
 25951  003926  D02D               	goto	l2726
 25952  003928                     
 25953                           ;api.c: 141: _parse_command_short(inBuffer[in_idx]);
 25954  003928  5040               	movf	api_parse@in_idx,w,c
 25955  00392A  0D01               	mullw	1
 25956  00392C  50F3               	movf	prodl,w,c
 25957  00392E  2436               	addwf	api_parse@inBuffer,w,c
 25958  003930  6ED9               	movwf	fsr2l,c
 25959  003932  50F4               	movf	prodh,w,c
 25960  003934  2037               	addwfc	api_parse@inBuffer+1,w,c
 25961  003936  6EDA               	movwf	fsr2h,c
 25962  003938  50DF               	movf	indf2,w,c
 25963  00393A  EC54  F02D         	call	__parse_command_short
 25964  00393E  D00B               	goto	l13847
 25965  003940                     
 25966                           ;api.c: 146: _parse_command_short(inBuffer[in_idx]);
 25967  003940  5040               	movf	api_parse@in_idx,w,c
 25968  003942  0D01               	mullw	1
 25969  003944  50F3               	movf	prodl,w,c
 25970  003946  2436               	addwf	api_parse@inBuffer,w,c
 25971  003948  6ED9               	movwf	fsr2l,c
 25972  00394A  50F4               	movf	prodh,w,c
 25973  00394C  2037               	addwfc	api_parse@inBuffer+1,w,c
 25974  00394E  6EDA               	movwf	fsr2h,c
 25975  003950  50DF               	movf	indf2,w,c
 25976  003952  EC54  F02D         	call	__parse_command_short
 25977  003956                     l13847:
 25978                           
 25979                           ;api.c: 147: ++in_idx;
 25980  003956  2A40               	incf	api_parse@in_idx,f,c
 25981                           
 25982                           ;api.c: 148: break;
 25983  003958  D02F               	goto	l2728
 25984  00395A                     
 25985                           ;api.c: 151: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 25986  00395A  5040               	movf	api_parse@in_idx,w,c
 25987  00395C  0D01               	mullw	1
 25988  00395E  50F3               	movf	prodl,w,c
 25989  003960  2436               	addwf	api_parse@inBuffer,w,c
 25990  003962  6E2F               	movwf	__parse_command_long@data,c
 25991  003964  50F4               	movf	prodh,w,c
 25992  003966  2037               	addwfc	api_parse@inBuffer+1,w,c
 25993  003968  6E30               	movwf	__parse_command_long@data+1,c
 25994  00396A  C039  F031         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 25995  00396E  C03A  F032         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 25996  003972  C03D  F033         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 25997  003976  C03E  F034         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 25998  00397A  ECBB  F036         	call	__parse_command_long	;wreg free
 25999  00397E  2640               	addwf	api_parse@in_idx,f,c
 26000                           
 26001                           ;api.c: 152: break;
 26002  003980  D01B               	goto	l2728
 26003  003982                     l2726:
 26004  003982  5040               	movf	api_parse@in_idx,w,c
 26005  003984  0D01               	mullw	1
 26006  003986  50F3               	movf	prodl,w,c
 26007  003988  2436               	addwf	api_parse@inBuffer,w,c
 26008  00398A  6ED9               	movwf	fsr2l,c
 26009  00398C  50F4               	movf	prodh,w,c
 26010  00398E  2037               	addwfc	api_parse@inBuffer+1,w,c
 26011  003990  6EDA               	movwf	fsr2h,c
 26012  003992  50DF               	movf	indf2,w,c
 26013  003994  0BF0               	andlw	240
 26014  003996  6E3B               	movwf	??_api_parse& (0+255),c
 26015  003998  6A3C               	clrf	(??_api_parse+1)& (0+255),c
 26016                           
 26017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26018                           ; Switch size 1, requested type "space"
 26019                           ; Number of cases is 1, Range of values is 0 to 0
 26020                           ; switch strategies available:
 26021                           ; Name         Instructions Cycles
 26022                           ; simple_byte            4     3 (average)
 26023                           ;	Chosen strategy is simple_byte
 26024  00399A  503C               	movf	??_api_parse+1,w,c
 26025  00399C  0A00               	xorlw	0	; case 0
 26026  00399E  A4D8               	btfss	status,2,c
 26027  0039A0  0012               	return	
 26028                           
 26029                           ; Switch size 1, requested type "space"
 26030                           ; Number of cases is 3, Range of values is 32 to 80
 26031                           ; switch strategies available:
 26032                           ; Name         Instructions Cycles
 26033                           ; simple_byte           10     6 (average)
 26034                           ;	Chosen strategy is simple_byte
 26035  0039A2  503B               	movf	??_api_parse,w,c
 26036  0039A4  0A20               	xorlw	32	; case 32
 26037  0039A6  B4D8               	btfsc	status,2,c
 26038  0039A8  D7BF               	goto	l2727
 26039  0039AA  0A10               	xorlw	16	; case 48
 26040  0039AC  B4D8               	btfsc	status,2,c
 26041  0039AE  D7C8               	goto	l2729
 26042  0039B0  0A60               	xorlw	96	; case 80
 26043  0039B2  A4D8               	btfss	status,2,c
 26044  0039B4  0012               	return	
 26045  0039B6  D7D1               	goto	l2730
 26046  0039B8                     l2728:
 26047  0039B8  5038               	movf	api_parse@receivedDataLength,w,c
 26048  0039BA  5C40               	subwf	api_parse@in_idx,w,c
 26049  0039BC  B0D8               	btfsc	status,0,c
 26050  0039BE  0012               	return	
 26051  0039C0  D7A6               	goto	l2724
 26052  0039C2                     __end_of_api_parse:
 26053                           	opt stack 0
 26054                           tosu	equ	0xFFF
 26055                           tosh	equ	0xFFE
 26056                           tosl	equ	0xFFD
 26057                           pclath	equ	0xFFA
 26058                           tblptru	equ	0xFF8
 26059                           tblptrh	equ	0xFF7
 26060                           tblptrl	equ	0xFF6
 26061                           tablat	equ	0xFF5
 26062                           prodh	equ	0xFF4
 26063                           prodl	equ	0xFF3
 26064                           intcon	equ	0xFF2
 26065                           intcon3	equ	0xFF0
 26066                           indf0	equ	0xFEF
 26067                           postinc0	equ	0xFEE
 26068                           fsr0h	equ	0xFEA
 26069                           fsr0l	equ	0xFE9
 26070                           wreg	equ	0xFE8
 26071                           indf1	equ	0xFE7
 26072                           postdec1	equ	0xFE5
 26073                           plusw1	equ	0xFE3
 26074                           fsr1h	equ	0xFE2
 26075                           fsr1l	equ	0xFE1
 26076                           indf2	equ	0xFDF
 26077                           postinc2	equ	0xFDE
 26078                           postdec2	equ	0xFDD
 26079                           plusw2	equ	0xFDB
 26080                           fsr2h	equ	0xFDA
 26081                           fsr2l	equ	0xFD9
 26082                           status	equ	0xFD8
 26083                           
 26084 ;; *************** function __parse_command_short *****************
 26085 ;; Defined at:
 26086 ;;		line 301 in file "api.c"
 26087 ;; Parameters:    Size  Location     Type
 26088 ;;  cmd             1    wreg     unsigned char 
 26089 ;; Auto vars:     Size  Location     Type
 26090 ;;  cmd             1   35[COMRAM] unsigned char 
 26091 ;; Return value:  Size  Location     Type
 26092 ;;                  1    wreg      void 
 26093 ;; Registers used:
 26094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26095 ;; Tracked objects:
 26096 ;;		On entry : 0/0
 26097 ;;		On exit  : 0/0
 26098 ;;		Unchanged: 0/0
 26099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26104 ;;Total ram usage:        1 bytes
 26105 ;; Hardware stack levels used:    1
 26106 ;; Hardware stack levels required when called:    7
 26107 ;; This function calls:
 26108 ;;		_i2c_eeprom_writeByte
 26109 ;;		_reboot
 26110 ;;		_system_delay_ms
 26111 ;; This function is called by:
 26112 ;;		_api_parse
 26113 ;; This function uses a non-reentrant model
 26114 ;;
 26115                           
 26116                           	psect	text128
 26117  005AA8                     __ptext128:
 26118                           	opt stack 0
 26119  005AA8                     __parse_command_short:
 26120                           	opt stack 21
 26121                           
 26122                           ;incstack = 0
 26123                           ;__parse_command_short@cmd stored from wreg
 26124  005AA8  6E24               	movwf	__parse_command_short@cmd,c
 26125                           
 26126                           ;api.c: 303: switch(cmd)
 26127  005AAA  D033               	goto	l2757
 26128  005AAC                     
 26129                           ;api.c: 306: i2c_eeprom_writeByte(0x100, 0x00);
 26130  005AAC  0E01               	movlw	1
 26131  005AAE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26132  005AB0  0E00               	movlw	0
 26133  005AB2  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26134  005AB4  0E00               	movlw	0
 26135  005AB6  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26136  005AB8  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26137                           
 26138                           ;api.c: 307: system_delay_ms(10);
 26139  005ABC  0E0A               	movlw	10
 26140  005ABE  ECB0  F038         	call	_system_delay_ms
 26141                           
 26142                           ;api.c: 308: reboot();
 26143  005AC2  EC75  F039         	call	_reboot	;wreg free
 26144                           
 26145                           ;api.c: 309: break;
 26146  005AC6  0012               	return	
 26147  005AC8                     
 26148                           ;api.c: 312: i2c_eeprom_writeByte(0x100, 0x94);
 26149  005AC8  0E01               	movlw	1
 26150  005ACA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26151  005ACC  0E00               	movlw	0
 26152  005ACE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26153  005AD0  0E94               	movlw	148
 26154  005AD2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26155  005AD4  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26156                           
 26157                           ;api.c: 313: system_delay_ms(10);
 26158  005AD8  0E0A               	movlw	10
 26159  005ADA  ECB0  F038         	call	_system_delay_ms
 26160                           
 26161                           ;api.c: 314: reboot();
 26162  005ADE  EC75  F039         	call	_reboot	;wreg free
 26163                           
 26164                           ;api.c: 315: break;
 26165  005AE2  0012               	return	
 26166  005AE4                     
 26167                           ;api.c: 318: i2c_eeprom_writeByte(0x100, 0x78);
 26168  005AE4  0E01               	movlw	1
 26169  005AE6  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26170  005AE8  0E00               	movlw	0
 26171  005AEA  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26172  005AEC  0E78               	movlw	120
 26173  005AEE  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26174  005AF0  ECFA  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26175                           
 26176                           ;api.c: 319: system_delay_ms(10);
 26177  005AF4  0E0A               	movlw	10
 26178  005AF6  ECB0  F038         	call	_system_delay_ms
 26179                           
 26180                           ;api.c: 320: reboot();
 26181  005AFA  EC75  F039         	call	_reboot	;wreg free
 26182                           
 26183                           ;api.c: 321: break;
 26184  005AFE  0012               	return	
 26185  005B00                     
 26186                           ;api.c: 324: --os.encoder1Count;
 26187  005B00  0100               	movlb	0	; () banked
 26188  005B02  0760               	decf	_os& (0+255),f,b
 26189                           
 26190                           ;api.c: 325: break;
 26191  005B04  0012               	return	
 26192  005B06                     
 26193                           ;api.c: 328: ++os.encoder1Count;
 26194                           
 26195                           ; BSR set to: 0
 26196  005B06  0100               	movlb	0	; () banked
 26197  005B08  2B60               	incf	_os& (0+255),f,b
 26198                           
 26199                           ;api.c: 329: break;
 26200  005B0A  0012               	return	
 26201  005B0C                     
 26202                           ;api.c: 332: ++os.button1;
 26203                           
 26204                           ; BSR set to: 0
 26205  005B0C  0100               	movlb	0	; () banked
 26206  005B0E  2B61               	incf	(_os+1)& (0+255),f,b
 26207                           
 26208                           ; BSR set to: 0
 26209                           ;api.c: 334: }
 26210                           
 26211                           ;api.c: 333: break;
 26212  005B10  0012               	return	
 26213  005B12                     l2757:
 26214                           
 26215                           ; BSR set to: 0
 26216  005B12  5024               	movf	__parse_command_short@cmd,w,c
 26217                           
 26218                           ; Switch size 1, requested type "space"
 26219                           ; Number of cases is 6, Range of values is 32 to 62
 26220                           ; switch strategies available:
 26221                           ; Name         Instructions Cycles
 26222                           ; simple_byte           19    10 (average)
 26223                           ;	Chosen strategy is simple_byte
 26224  005B14  0A20               	xorlw	32	; case 32
 26225  005B16  B4D8               	btfsc	status,2,c
 26226  005B18  D7C9               	goto	l2758
 26227  005B1A  0A01               	xorlw	1	; case 33
 26228  005B1C  B4D8               	btfsc	status,2,c
 26229  005B1E  D7D4               	goto	l2760
 26230  005B20  0A03               	xorlw	3	; case 34
 26231  005B22  B4D8               	btfsc	status,2,c
 26232  005B24  D7DF               	goto	l2761
 26233  005B26  0A1E               	xorlw	30	; case 60
 26234  005B28  B4D8               	btfsc	status,2,c
 26235  005B2A  D7EA               	goto	l2762
 26236  005B2C  0A01               	xorlw	1	; case 61
 26237  005B2E  B4D8               	btfsc	status,2,c
 26238  005B30  D7EA               	goto	l2763
 26239  005B32  0A03               	xorlw	3	; case 62
 26240  005B34  A4D8               	btfss	status,2,c
 26241  005B36  0012               	return	
 26242  005B38  D7E9               	goto	l2764
 26243  005B3A                     __end_of__parse_command_short:
 26244                           	opt stack 0
 26245                           tosu	equ	0xFFF
 26246                           tosh	equ	0xFFE
 26247                           tosl	equ	0xFFD
 26248                           pclath	equ	0xFFA
 26249                           tblptru	equ	0xFF8
 26250                           tblptrh	equ	0xFF7
 26251                           tblptrl	equ	0xFF6
 26252                           tablat	equ	0xFF5
 26253                           prodh	equ	0xFF4
 26254                           prodl	equ	0xFF3
 26255                           intcon	equ	0xFF2
 26256                           intcon3	equ	0xFF0
 26257                           indf0	equ	0xFEF
 26258                           postinc0	equ	0xFEE
 26259                           fsr0h	equ	0xFEA
 26260                           fsr0l	equ	0xFE9
 26261                           wreg	equ	0xFE8
 26262                           indf1	equ	0xFE7
 26263                           postdec1	equ	0xFE5
 26264                           plusw1	equ	0xFE3
 26265                           fsr1h	equ	0xFE2
 26266                           fsr1l	equ	0xFE1
 26267                           indf2	equ	0xFDF
 26268                           postinc2	equ	0xFDE
 26269                           postdec2	equ	0xFDD
 26270                           plusw2	equ	0xFDB
 26271                           fsr2h	equ	0xFDA
 26272                           fsr2l	equ	0xFD9
 26273                           status	equ	0xFD8
 26274                           
 26275 ;; *************** function _system_delay_ms *****************
 26276 ;; Defined at:
 26277 ;;		line 192 in file "os.c"
 26278 ;; Parameters:    Size  Location     Type
 26279 ;;  ms              1    wreg     unsigned char 
 26280 ;; Auto vars:     Size  Location     Type
 26281 ;;  ms              1    1[COMRAM] unsigned char 
 26282 ;;  cntr            1    2[COMRAM] unsigned char 
 26283 ;; Return value:  Size  Location     Type
 26284 ;;                  1    wreg      void 
 26285 ;; Registers used:
 26286 ;;		wreg, status,2, status,0, cstack
 26287 ;; Tracked objects:
 26288 ;;		On entry : 0/0
 26289 ;;		On exit  : 0/0
 26290 ;;		Unchanged: 0/0
 26291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26296 ;;Total ram usage:        3 bytes
 26297 ;; Hardware stack levels used:    1
 26298 ;; This function calls:
 26299 ;;		Nothing
 26300 ;; This function is called by:
 26301 ;;		_system_minimal_init
 26302 ;;		__ui_encoder
 26303 ;;		__parse_command_short
 26304 ;; This function uses a non-reentrant model
 26305 ;;
 26306                           
 26307                           	psect	text129
 26308  007160                     __ptext129:
 26309                           	opt stack 0
 26310  007160                     _system_delay_ms:
 26311                           	opt stack 28
 26312                           
 26313                           ;incstack = 0
 26314                           ;system_delay_ms@ms stored from wreg
 26315  007160  6E02               	movwf	system_delay_ms@ms,c
 26316                           
 26317                           ;os.c: 194: uint8_t cntr;;os.c: 195: for(cntr=0; cntr<ms; ++cntr)
 26318  007162  0E00               	movlw	0
 26319  007164  6E03               	movwf	system_delay_ms@cntr,c
 26320  007166  D009               	goto	l1067
 26321  007168                     
 26322                           ;os.c: 196: {;os.c: 197: _delay((unsigned long)((6)*(8000000/4000.0)));
 26323  007168  0E10               	movlw	16
 26324  00716A  6E01               	movwf	??_system_delay_ms& (0+255),c
 26325  00716C  0E94               	movlw	148
 26326  00716E                     u13867:
 26327  00716E  2EE8               	decfsz	wreg,f,c
 26328  007170  D7FE               	bra	u13867
 26329  007172  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26330  007174  D7FC               	bra	u13867
 26331  007176  D000               	nop2	
 26332  007178  2A03               	incf	system_delay_ms@cntr,f,c
 26333  00717A                     l1067:
 26334  00717A  5002               	movf	system_delay_ms@ms,w,c
 26335  00717C  5C03               	subwf	system_delay_ms@cntr,w,c
 26336  00717E  B0D8               	btfsc	status,0,c
 26337  007180  0012               	return	
 26338  007182  D7F2               	goto	l1068
 26339  007184                     __end_of_system_delay_ms:
 26340                           	opt stack 0
 26341                           tosu	equ	0xFFF
 26342                           tosh	equ	0xFFE
 26343                           tosl	equ	0xFFD
 26344                           pclath	equ	0xFFA
 26345                           tblptru	equ	0xFF8
 26346                           tblptrh	equ	0xFF7
 26347                           tblptrl	equ	0xFF6
 26348                           tablat	equ	0xFF5
 26349                           prodh	equ	0xFF4
 26350                           prodl	equ	0xFF3
 26351                           intcon	equ	0xFF2
 26352                           intcon3	equ	0xFF0
 26353                           indf0	equ	0xFEF
 26354                           postinc0	equ	0xFEE
 26355                           fsr0h	equ	0xFEA
 26356                           fsr0l	equ	0xFE9
 26357                           wreg	equ	0xFE8
 26358                           indf1	equ	0xFE7
 26359                           postdec1	equ	0xFE5
 26360                           plusw1	equ	0xFE3
 26361                           fsr1h	equ	0xFE2
 26362                           fsr1l	equ	0xFE1
 26363                           indf2	equ	0xFDF
 26364                           postinc2	equ	0xFDE
 26365                           postdec2	equ	0xFDD
 26366                           plusw2	equ	0xFDB
 26367                           fsr2h	equ	0xFDA
 26368                           fsr2l	equ	0xFD9
 26369                           status	equ	0xFD8
 26370                           
 26371 ;; *************** function _reboot *****************
 26372 ;; Defined at:
 26373 ;;		line 384 in file "os.c"
 26374 ;; Parameters:    Size  Location     Type
 26375 ;;		None
 26376 ;; Auto vars:     Size  Location     Type
 26377 ;;		None
 26378 ;; Return value:  Size  Location     Type
 26379 ;;                  1    wreg      void 
 26380 ;; Registers used:
 26381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26382 ;; Tracked objects:
 26383 ;;		On entry : 0/0
 26384 ;;		On exit  : 0/0
 26385 ;;		Unchanged: 0/0
 26386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26391 ;;Total ram usage:        0 bytes
 26392 ;; Hardware stack levels used:    1
 26393 ;; Hardware stack levels required when called:    6
 26394 ;; This function calls:
 26395 ;;		_display_prepare
 26396 ;;		_display_update
 26397 ;;		_ui_get_status
 26398 ;; This function is called by:
 26399 ;;		__ui_encoder
 26400 ;;		__parse_command_short
 26401 ;; This function uses a non-reentrant model
 26402 ;;
 26403                           
 26404                           	psect	text130
 26405  0072EA                     __ptext130:
 26406                           	opt stack 0
 26407  0072EA                     _reboot:
 26408                           	opt stack 22
 26409                           
 26410                           ;os.c: 387: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26411                           
 26412                           ;incstack = 0
 26413  0072EA  0E80               	movlw	128
 26414  0072EC  0100               	movlb	0	; () banked
 26415  0072EE  6F67               	movwf	(_os+7)& (0+255),b
 26416                           
 26417                           ; BSR set to: 0
 26418                           ;os.c: 388: display_prepare(os.display_mode);
 26419  0072F0  5167               	movf	(_os+7)& (0+255),w,b
 26420  0072F2  ECA4  F024         	call	_display_prepare
 26421                           
 26422                           ;os.c: 389: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26423  0072F6  EC51  F03A         	call	_ui_get_status	;wreg free
 26424  0072FA  0A05               	xorlw	5
 26425  0072FC  B4D8               	btfsc	status,2,c
 26426                           
 26427                           ;os.c: 390: {;os.c: 391: display_update();
 26428  0072FE  ECBC  F030         	call	_display_update	;wreg free
 26429  007302                     
 26430                           ;os.c: 392: };os.c: 395: while(1);
 26431  007302  D7FF               	goto	l1094
 26432  007304                     __end_of_reboot:
 26433                           	opt stack 0
 26434                           tosu	equ	0xFFF
 26435                           tosh	equ	0xFFE
 26436                           tosl	equ	0xFFD
 26437                           pclath	equ	0xFFA
 26438                           tblptru	equ	0xFF8
 26439                           tblptrh	equ	0xFF7
 26440                           tblptrl	equ	0xFF6
 26441                           tablat	equ	0xFF5
 26442                           prodh	equ	0xFF4
 26443                           prodl	equ	0xFF3
 26444                           intcon	equ	0xFF2
 26445                           intcon3	equ	0xFF0
 26446                           indf0	equ	0xFEF
 26447                           postinc0	equ	0xFEE
 26448                           fsr0h	equ	0xFEA
 26449                           fsr0l	equ	0xFE9
 26450                           wreg	equ	0xFE8
 26451                           indf1	equ	0xFE7
 26452                           postdec1	equ	0xFE5
 26453                           plusw1	equ	0xFE3
 26454                           fsr1h	equ	0xFE2
 26455                           fsr1l	equ	0xFE1
 26456                           indf2	equ	0xFDF
 26457                           postinc2	equ	0xFDE
 26458                           postdec2	equ	0xFDD
 26459                           plusw2	equ	0xFDB
 26460                           fsr2h	equ	0xFDA
 26461                           fsr2l	equ	0xFD9
 26462                           status	equ	0xFD8
 26463                           
 26464 ;; *************** function _ui_get_status *****************
 26465 ;; Defined at:
 26466 ;;		line 115 in file "ui.c"
 26467 ;; Parameters:    Size  Location     Type
 26468 ;;		None
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;		None
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  1    wreg      enum E7923
 26473 ;; Registers used:
 26474 ;;		wreg, status,2
 26475 ;; Tracked objects:
 26476 ;;		On entry : 0/0
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26484 ;;Total ram usage:        0 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; This function calls:
 26487 ;;		Nothing
 26488 ;; This function is called by:
 26489 ;;		_main
 26490 ;;		_reboot
 26491 ;;		__fill_buffer_get_status
 26492 ;; This function uses a non-reentrant model
 26493 ;;
 26494                           
 26495                           	psect	text131
 26496  0074A2                     __ptext131:
 26497                           	opt stack 0
 26498  0074A2                     _ui_get_status:
 26499                           	opt stack 27
 26500                           
 26501                           ;ui.c: 117: return userInterfaceStatus;
 26502                           
 26503                           ;incstack = 0
 26504  0074A2  0100               	movlb	0	; () banked
 26505  0074A4  5195               	movf	_userInterfaceStatus& (0+255),w,b
 26506  0074A6  0012               	return	
 26507  0074A8                     __end_of_ui_get_status:
 26508                           	opt stack 0
 26509                           tosu	equ	0xFFF
 26510                           tosh	equ	0xFFE
 26511                           tosl	equ	0xFFD
 26512                           pclath	equ	0xFFA
 26513                           tblptru	equ	0xFF8
 26514                           tblptrh	equ	0xFF7
 26515                           tblptrl	equ	0xFF6
 26516                           tablat	equ	0xFF5
 26517                           prodh	equ	0xFF4
 26518                           prodl	equ	0xFF3
 26519                           intcon	equ	0xFF2
 26520                           intcon3	equ	0xFF0
 26521                           indf0	equ	0xFEF
 26522                           postinc0	equ	0xFEE
 26523                           fsr0h	equ	0xFEA
 26524                           fsr0l	equ	0xFE9
 26525                           wreg	equ	0xFE8
 26526                           indf1	equ	0xFE7
 26527                           postdec1	equ	0xFE5
 26528                           plusw1	equ	0xFE3
 26529                           fsr1h	equ	0xFE2
 26530                           fsr1l	equ	0xFE1
 26531                           indf2	equ	0xFDF
 26532                           postinc2	equ	0xFDE
 26533                           postdec2	equ	0xFDD
 26534                           plusw2	equ	0xFDB
 26535                           fsr2h	equ	0xFDA
 26536                           fsr2l	equ	0xFD9
 26537                           status	equ	0xFD8
 26538                           
 26539 ;; *************** function _display_update *****************
 26540 ;; Defined at:
 26541 ;;		line 686 in file "display.c"
 26542 ;; Parameters:    Size  Location     Type
 26543 ;;		None
 26544 ;; Auto vars:     Size  Location     Type
 26545 ;;		None
 26546 ;; Return value:  Size  Location     Type
 26547 ;;                  1    wreg      void 
 26548 ;; Registers used:
 26549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26550 ;; Tracked objects:
 26551 ;;		On entry : 0/0
 26552 ;;		On exit  : 0/0
 26553 ;;		Unchanged: 0/0
 26554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26559 ;;Total ram usage:        0 bytes
 26560 ;; Hardware stack levels used:    1
 26561 ;; Hardware stack levels required when called:    4
 26562 ;; This function calls:
 26563 ;;		_i2c_display_cursor
 26564 ;;		_i2c_display_write_fixed
 26565 ;; This function is called by:
 26566 ;;		_main
 26567 ;;		_reboot
 26568 ;; This function uses a non-reentrant model
 26569 ;;
 26570                           
 26571                           	psect	text132
 26572  006178                     __ptext132:
 26573                           	opt stack 0
 26574  006178                     _display_update:
 26575                           	opt stack 23
 26576                           
 26577                           ;display.c: 688: i2c_display_cursor(0, 0);
 26578                           
 26579                           ; BSR set to: 0
 26580                           ;incstack = 0
 26581  006178  0E00               	movlw	0
 26582  00617A  6E0E               	movwf	i2c_display_cursor@position,c
 26583  00617C  0E00               	movlw	0
 26584  00617E  EC14  F039         	call	_i2c_display_cursor
 26585                           
 26586                           ;display.c: 689: i2c_display_write_fixed(&display_content[0][0], 20);
 26587  006182  0E7B               	movlw	low _display_content
 26588  006184  6E06               	movwf	i2c_display_write_fixed@data,c
 26589  006186  0E01               	movlw	high _display_content
 26590  006188  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26591  00618A  0E14               	movlw	20
 26592  00618C  6E08               	movwf	i2c_display_write_fixed@length,c
 26593  00618E  ECAE  F034         	call	_i2c_display_write_fixed	;wreg free
 26594                           
 26595                           ;display.c: 690: i2c_display_cursor(1, 0);
 26596  006192  0E00               	movlw	0
 26597  006194  6E0E               	movwf	i2c_display_cursor@position,c
 26598  006196  0E01               	movlw	1
 26599  006198  EC14  F039         	call	_i2c_display_cursor
 26600                           
 26601                           ;display.c: 691: i2c_display_write_fixed(&display_content[1][0], 20);
 26602  00619C  0E8F               	movlw	low (_display_content+20)
 26603  00619E  6E06               	movwf	i2c_display_write_fixed@data,c
 26604  0061A0  0E01               	movlw	high (_display_content+20)
 26605  0061A2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26606  0061A4  0E14               	movlw	20
 26607  0061A6  6E08               	movwf	i2c_display_write_fixed@length,c
 26608  0061A8  ECAE  F034         	call	_i2c_display_write_fixed	;wreg free
 26609                           
 26610                           ;display.c: 692: i2c_display_cursor(2, 0);
 26611  0061AC  0E00               	movlw	0
 26612  0061AE  6E0E               	movwf	i2c_display_cursor@position,c
 26613  0061B0  0E02               	movlw	2
 26614  0061B2  EC14  F039         	call	_i2c_display_cursor
 26615                           
 26616                           ;display.c: 693: i2c_display_write_fixed(&display_content[2][0], 20);
 26617  0061B6  0EA3               	movlw	low (_display_content+40)
 26618  0061B8  6E06               	movwf	i2c_display_write_fixed@data,c
 26619  0061BA  0E01               	movlw	high (_display_content+40)
 26620  0061BC  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26621  0061BE  0E14               	movlw	20
 26622  0061C0  6E08               	movwf	i2c_display_write_fixed@length,c
 26623  0061C2  ECAE  F034         	call	_i2c_display_write_fixed	;wreg free
 26624                           
 26625                           ;display.c: 694: i2c_display_cursor(3, 0);
 26626  0061C6  0E00               	movlw	0
 26627  0061C8  6E0E               	movwf	i2c_display_cursor@position,c
 26628  0061CA  0E03               	movlw	3
 26629  0061CC  EC14  F039         	call	_i2c_display_cursor
 26630                           
 26631                           ;display.c: 695: i2c_display_write_fixed(&display_content[3][0], 20);
 26632  0061D0  0EB7               	movlw	low (_display_content+60)
 26633  0061D2  6E06               	movwf	i2c_display_write_fixed@data,c
 26634  0061D4  0E01               	movlw	high (_display_content+60)
 26635  0061D6  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26636  0061D8  0E14               	movlw	20
 26637  0061DA  6E08               	movwf	i2c_display_write_fixed@length,c
 26638  0061DC  ECAE  F034         	call	_i2c_display_write_fixed	;wreg free
 26639  0061E0  0012               	return		;funcret
 26640  0061E2                     __end_of_display_update:
 26641                           	opt stack 0
 26642                           tosu	equ	0xFFF
 26643                           tosh	equ	0xFFE
 26644                           tosl	equ	0xFFD
 26645                           pclath	equ	0xFFA
 26646                           tblptru	equ	0xFF8
 26647                           tblptrh	equ	0xFF7
 26648                           tblptrl	equ	0xFF6
 26649                           tablat	equ	0xFF5
 26650                           prodh	equ	0xFF4
 26651                           prodl	equ	0xFF3
 26652                           intcon	equ	0xFF2
 26653                           intcon3	equ	0xFF0
 26654                           indf0	equ	0xFEF
 26655                           postinc0	equ	0xFEE
 26656                           fsr0h	equ	0xFEA
 26657                           fsr0l	equ	0xFE9
 26658                           wreg	equ	0xFE8
 26659                           indf1	equ	0xFE7
 26660                           postdec1	equ	0xFE5
 26661                           plusw1	equ	0xFE3
 26662                           fsr1h	equ	0xFE2
 26663                           fsr1l	equ	0xFE1
 26664                           indf2	equ	0xFDF
 26665                           postinc2	equ	0xFDE
 26666                           postdec2	equ	0xFDD
 26667                           plusw2	equ	0xFDB
 26668                           fsr2h	equ	0xFDA
 26669                           fsr2l	equ	0xFD9
 26670                           status	equ	0xFD8
 26671                           
 26672 ;; *************** function _i2c_display_write_fixed *****************
 26673 ;; Defined at:
 26674 ;;		line 396 in file "i2c.c"
 26675 ;; Parameters:    Size  Location     Type
 26676 ;;  data            2    5[COMRAM] PTR unsigned char 
 26677 ;;		 -> display_content(80), 
 26678 ;;  length          1    7[COMRAM] unsigned char 
 26679 ;; Auto vars:     Size  Location     Type
 26680 ;;  pos             1    8[COMRAM] unsigned char 
 26681 ;; Return value:  Size  Location     Type
 26682 ;;                  1    wreg      void 
 26683 ;; Registers used:
 26684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26685 ;; Tracked objects:
 26686 ;;		On entry : 0/0
 26687 ;;		On exit  : 0/0
 26688 ;;		Unchanged: 0/0
 26689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26694 ;;Total ram usage:        4 bytes
 26695 ;; Hardware stack levels used:    1
 26696 ;; Hardware stack levels required when called:    1
 26697 ;; This function calls:
 26698 ;;		__i2c_send
 26699 ;;		__i2c_start
 26700 ;;		__i2c_stop
 26701 ;;		__i2c_wait_idle
 26702 ;; This function is called by:
 26703 ;;		_display_update
 26704 ;; This function uses a non-reentrant model
 26705 ;;
 26706                           
 26707                           	psect	text133
 26708  00695C                     __ptext133:
 26709                           	opt stack 0
 26710  00695C                     _i2c_display_write_fixed:
 26711                           	opt stack 25
 26712                           
 26713                           ;i2c.c: 398: uint8_t pos;;i2c.c: 403: _i2c_wait_idle();
 26714                           
 26715                           ;incstack = 0
 26716  00695C  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 26717                           
 26718                           ;i2c.c: 404: _i2c_start();
 26719  006960  EC3D  F03A         	call	__i2c_start	;wreg free
 26720                           
 26721                           ;i2c.c: 405: _i2c_wait_idle();
 26722  006964  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 26723                           
 26724                           ;i2c.c: 406: _i2c_send(0b01111000);
 26725  006968  0E78               	movlw	120
 26726  00696A  EC41  F03A         	call	__i2c_send
 26727                           
 26728                           ;i2c.c: 407: _i2c_wait_idle();
 26729  00696E  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 26730                           
 26731                           ;i2c.c: 408: _i2c_send(0b01000000);
 26732  006972  0E40               	movlw	64
 26733  006974  EC41  F03A         	call	__i2c_send
 26734                           
 26735                           ;i2c.c: 409: _i2c_wait_idle();
 26736  006978  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 26737                           
 26738                           ;i2c.c: 412: for(pos=0; pos<length; ++pos)
 26739  00697C  0E00               	movlw	0
 26740  00697E  6E09               	movwf	i2c_display_write_fixed@pos,c
 26741  006980  D00E               	goto	l1234
 26742  006982                     
 26743                           ;i2c.c: 413: {;i2c.c: 414: _i2c_send(data[pos]);
 26744  006982  5009               	movf	i2c_display_write_fixed@pos,w,c
 26745  006984  0D01               	mullw	1
 26746  006986  50F3               	movf	prodl,w,c
 26747  006988  2406               	addwf	i2c_display_write_fixed@data,w,c
 26748  00698A  6ED9               	movwf	fsr2l,c
 26749  00698C  50F4               	movf	prodh,w,c
 26750  00698E  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26751  006990  6EDA               	movwf	fsr2h,c
 26752  006992  50DF               	movf	indf2,w,c
 26753  006994  EC41  F03A         	call	__i2c_send
 26754                           
 26755                           ;i2c.c: 415: _i2c_wait_idle();
 26756  006998  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 26757  00699C  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26758  00699E                     l1234:
 26759  00699E  5008               	movf	i2c_display_write_fixed@length,w,c
 26760  0069A0  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26761  0069A2  A0D8               	btfss	status,0,c
 26762  0069A4  D7EE               	goto	l1235
 26763                           
 26764                           ;i2c.c: 416: };i2c.c: 418: _i2c_stop();
 26765  0069A6  EC39  F03A         	call	__i2c_stop	;wreg free
 26766  0069AA  0012               	return		;funcret
 26767  0069AC                     __end_of_i2c_display_write_fixed:
 26768                           	opt stack 0
 26769                           tosu	equ	0xFFF
 26770                           tosh	equ	0xFFE
 26771                           tosl	equ	0xFFD
 26772                           pclath	equ	0xFFA
 26773                           tblptru	equ	0xFF8
 26774                           tblptrh	equ	0xFF7
 26775                           tblptrl	equ	0xFF6
 26776                           tablat	equ	0xFF5
 26777                           prodh	equ	0xFF4
 26778                           prodl	equ	0xFF3
 26779                           intcon	equ	0xFF2
 26780                           intcon3	equ	0xFF0
 26781                           indf0	equ	0xFEF
 26782                           postinc0	equ	0xFEE
 26783                           fsr0h	equ	0xFEA
 26784                           fsr0l	equ	0xFE9
 26785                           wreg	equ	0xFE8
 26786                           indf1	equ	0xFE7
 26787                           postdec1	equ	0xFE5
 26788                           plusw1	equ	0xFE3
 26789                           fsr1h	equ	0xFE2
 26790                           fsr1l	equ	0xFE1
 26791                           indf2	equ	0xFDF
 26792                           postinc2	equ	0xFDE
 26793                           postdec2	equ	0xFDD
 26794                           plusw2	equ	0xFDB
 26795                           fsr2h	equ	0xFDA
 26796                           fsr2l	equ	0xFD9
 26797                           status	equ	0xFD8
 26798                           
 26799 ;; *************** function _i2c_display_cursor *****************
 26800 ;; Defined at:
 26801 ;;		line 356 in file "i2c.c"
 26802 ;; Parameters:    Size  Location     Type
 26803 ;;  line            1    wreg     unsigned char 
 26804 ;;  position        1   13[COMRAM] unsigned char 
 26805 ;; Auto vars:     Size  Location     Type
 26806 ;;  line            1   14[COMRAM] unsigned char 
 26807 ;;  address         1   15[COMRAM] unsigned char 
 26808 ;; Return value:  Size  Location     Type
 26809 ;;                  1    wreg      void 
 26810 ;; Registers used:
 26811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26812 ;; Tracked objects:
 26813 ;;		On entry : 0/0
 26814 ;;		On exit  : 0/0
 26815 ;;		Unchanged: 0/0
 26816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26817 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26820 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26821 ;;Total ram usage:        3 bytes
 26822 ;; Hardware stack levels used:    1
 26823 ;; Hardware stack levels required when called:    3
 26824 ;; This function calls:
 26825 ;;		__ic2_display_set_ddram_address
 26826 ;; This function is called by:
 26827 ;;		_display_update
 26828 ;; This function uses a non-reentrant model
 26829 ;;
 26830                           
 26831                           	psect	text134
 26832  007228                     __ptext134:
 26833                           	opt stack 0
 26834  007228                     _i2c_display_cursor:
 26835                           	opt stack 23
 26836                           
 26837                           ;incstack = 0
 26838                           ;i2c_display_cursor@line stored from wreg
 26839  007228  6E0F               	movwf	i2c_display_cursor@line,c
 26840                           
 26841                           ;i2c.c: 358: uint8_t address;;i2c.c: 361: line &= 0b11;
 26842  00722A  0E03               	movlw	3
 26843  00722C  160F               	andwf	i2c_display_cursor@line,f,c
 26844                           
 26845                           ;i2c.c: 362: address = line<<5;
 26846  00722E  380F               	swapf	i2c_display_cursor@line,w,c
 26847  007230  46E8               	rlncf	wreg,f,c
 26848  007232  0BE0               	andlw	224
 26849  007234  6E10               	movwf	i2c_display_cursor@address,c
 26850                           
 26851                           ;i2c.c: 363: position &= 0b11111;
 26852  007236  0E1F               	movlw	31
 26853  007238  160E               	andwf	i2c_display_cursor@position,f,c
 26854                           
 26855                           ;i2c.c: 364: address |= position;
 26856  00723A  500E               	movf	i2c_display_cursor@position,w,c
 26857  00723C  1210               	iorwf	i2c_display_cursor@address,f,c
 26858                           
 26859                           ;i2c.c: 370: _ic2_display_set_ddram_address(address);
 26860  00723E  5010               	movf	i2c_display_cursor@address,w,c
 26861  007240  EC04  F039         	call	__ic2_display_set_ddram_address
 26862  007244  0012               	return		;funcret
 26863  007246                     __end_of_i2c_display_cursor:
 26864                           	opt stack 0
 26865                           tosu	equ	0xFFF
 26866                           tosh	equ	0xFFE
 26867                           tosl	equ	0xFFD
 26868                           pclath	equ	0xFFA
 26869                           tblptru	equ	0xFF8
 26870                           tblptrh	equ	0xFF7
 26871                           tblptrl	equ	0xFF6
 26872                           tablat	equ	0xFF5
 26873                           prodh	equ	0xFF4
 26874                           prodl	equ	0xFF3
 26875                           intcon	equ	0xFF2
 26876                           intcon3	equ	0xFF0
 26877                           indf0	equ	0xFEF
 26878                           postinc0	equ	0xFEE
 26879                           fsr0h	equ	0xFEA
 26880                           fsr0l	equ	0xFE9
 26881                           wreg	equ	0xFE8
 26882                           indf1	equ	0xFE7
 26883                           postdec1	equ	0xFE5
 26884                           plusw1	equ	0xFE3
 26885                           fsr1h	equ	0xFE2
 26886                           fsr1l	equ	0xFE1
 26887                           indf2	equ	0xFDF
 26888                           postinc2	equ	0xFDE
 26889                           postdec2	equ	0xFDD
 26890                           plusw2	equ	0xFDB
 26891                           fsr2h	equ	0xFDA
 26892                           fsr2l	equ	0xFD9
 26893                           status	equ	0xFD8
 26894                           
 26895 ;; *************** function __ic2_display_set_ddram_address *****************
 26896 ;; Defined at:
 26897 ;;		line 327 in file "i2c.c"
 26898 ;; Parameters:    Size  Location     Type
 26899 ;;  address         1    wreg     unsigned char 
 26900 ;; Auto vars:     Size  Location     Type
 26901 ;;  address         1   10[COMRAM] unsigned char 
 26902 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26903 ;; Return value:  Size  Location     Type
 26904 ;;                  1    wreg      void 
 26905 ;; Registers used:
 26906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26907 ;; Tracked objects:
 26908 ;;		On entry : 0/0
 26909 ;;		On exit  : 0/0
 26910 ;;		Unchanged: 0/0
 26911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26913 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26916 ;;Total ram usage:        3 bytes
 26917 ;; Hardware stack levels used:    1
 26918 ;; Hardware stack levels required when called:    2
 26919 ;; This function calls:
 26920 ;;		__i2c_write
 26921 ;; This function is called by:
 26922 ;;		_i2c_display_cursor
 26923 ;; This function uses a non-reentrant model
 26924 ;;
 26925                           
 26926                           	psect	text135
 26927  007208                     __ptext135:
 26928                           	opt stack 0
 26929  007208                     __ic2_display_set_ddram_address:
 26930                           	opt stack 23
 26931                           
 26932                           ;incstack = 0
 26933                           ;__ic2_display_set_ddram_address@address stored from wreg
 26934  007208  6E0B               	movwf	__ic2_display_set_ddram_address@address,c
 26935                           
 26936                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0b00000000;
 26937  00720A  0E00               	movlw	0
 26938  00720C  6E0C               	movwf	__ic2_display_set_ddram_address@data_array,c
 26939                           
 26940                           ;i2c.c: 331: data_array[1] = 0b10000000 | address;
 26941  00720E  500B               	movf	__ic2_display_set_ddram_address@address,w,c
 26942  007210  0980               	iorlw	128
 26943  007212  6E0D               	movwf	__ic2_display_set_ddram_address@data_array+1,c
 26944                           
 26945                           ;i2c.c: 337: _i2c_write(0b01111000, &data_array[0], 2);
 26946  007214  0E0C               	movlw	low __ic2_display_set_ddram_address@data_array
 26947  007216  6E06               	movwf	__i2c_write@data,c
 26948  007218  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 26949  00721A  6E07               	movwf	__i2c_write@data+1,c
 26950  00721C  0E02               	movlw	2
 26951  00721E  6E08               	movwf	__i2c_write@length,c
 26952  007220  0E78               	movlw	120
 26953  007222  EC91  F035         	call	__i2c_write
 26954  007226  0012               	return		;funcret
 26955  007228                     __end_of__ic2_display_set_ddram_address:
 26956                           	opt stack 0
 26957                           tosu	equ	0xFFF
 26958                           tosh	equ	0xFFE
 26959                           tosl	equ	0xFFD
 26960                           pclath	equ	0xFFA
 26961                           tblptru	equ	0xFF8
 26962                           tblptrh	equ	0xFF7
 26963                           tblptrl	equ	0xFF6
 26964                           tablat	equ	0xFF5
 26965                           prodh	equ	0xFF4
 26966                           prodl	equ	0xFF3
 26967                           intcon	equ	0xFF2
 26968                           intcon3	equ	0xFF0
 26969                           indf0	equ	0xFEF
 26970                           postinc0	equ	0xFEE
 26971                           fsr0h	equ	0xFEA
 26972                           fsr0l	equ	0xFE9
 26973                           wreg	equ	0xFE8
 26974                           indf1	equ	0xFE7
 26975                           postdec1	equ	0xFE5
 26976                           plusw1	equ	0xFE3
 26977                           fsr1h	equ	0xFE2
 26978                           fsr1l	equ	0xFE1
 26979                           indf2	equ	0xFDF
 26980                           postinc2	equ	0xFDE
 26981                           postdec2	equ	0xFDD
 26982                           plusw2	equ	0xFDB
 26983                           fsr2h	equ	0xFDA
 26984                           fsr2l	equ	0xFD9
 26985                           status	equ	0xFD8
 26986                           
 26987 ;; *************** function _display_prepare *****************
 26988 ;; Defined at:
 26989 ;;		line 377 in file "display.c"
 26990 ;; Parameters:    Size  Location     Type
 26991 ;;  mode            1    wreg     unsigned char 
 26992 ;; Auto vars:     Size  Location     Type
 26993 ;;  mode            1   34[COMRAM] unsigned char 
 26994 ;; Return value:  Size  Location     Type
 26995 ;;                  1    wreg      void 
 26996 ;; Registers used:
 26997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26998 ;; Tracked objects:
 26999 ;;		On entry : 0/0
 27000 ;;		On exit  : 0/0
 27001 ;;		Unchanged: 0/0
 27002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27006 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27007 ;;Total ram usage:        3 bytes
 27008 ;; Hardware stack levels used:    1
 27009 ;; Hardware stack levels required when called:    5
 27010 ;; This function calls:
 27011 ;;		__display_checked
 27012 ;;		__display_clear
 27013 ;;		__display_done
 27014 ;;		__display_failed
 27015 ;;		__display_found
 27016 ;;		__display_programming
 27017 ;;		__display_rebooting
 27018 ;;		__display_search
 27019 ;;		__display_start
 27020 ;;		__display_suspended
 27021 ;;		__display_verify
 27022 ;; This function is called by:
 27023 ;;		_main
 27024 ;;		_reboot
 27025 ;; This function uses a non-reentrant model
 27026 ;;
 27027                           
 27028                           	psect	text136
 27029  004948                     __ptext136:
 27030                           	opt stack 0
 27031  004948                     _display_prepare:
 27032                           	opt stack 22
 27033                           
 27034                           ;incstack = 0
 27035                           ;display_prepare@mode stored from wreg
 27036  004948  6E23               	movwf	display_prepare@mode,c
 27037                           
 27038                           ;display.c: 379: _display_clear();
 27039  00494A  EC6D  F035         	call	__display_clear	;wreg free
 27040                           
 27041                           ;display.c: 381: switch(mode&0xF0)
 27042  00494E  D01E               	goto	l1575
 27043  004950                     
 27044                           ;display.c: 384: _display_start();
 27045  004950  ECF0  F012         	call	__display_start	;wreg free
 27046                           
 27047                           ;display.c: 385: break;
 27048  004954  D04D               	goto	l1587
 27049  004956                     
 27050                           ;display.c: 388: _display_search();
 27051  004956  ECCE  F019         	call	__display_search	;wreg free
 27052                           
 27053                           ;display.c: 389: break;
 27054  00495A  D04A               	goto	l1587
 27055  00495C                     
 27056                           ;display.c: 392: _display_found();
 27057  00495C  EC15  F011         	call	__display_found	;wreg free
 27058                           
 27059                           ;display.c: 393: break;
 27060  004960  D047               	goto	l1587
 27061  004962                     
 27062                           ;display.c: 396: _display_verify();
 27063  004962  ECBB  F01B         	call	__display_verify	;wreg free
 27064                           
 27065                           ;display.c: 397: break;
 27066  004966  D044               	goto	l1587
 27067  004968                     
 27068                           ;display.c: 400: _display_checked();
 27069  004968  EC49  F016         	call	__display_checked	;wreg free
 27070                           
 27071                           ;display.c: 401: break;
 27072  00496C  D041               	goto	l1587
 27073  00496E                     
 27074                           ;display.c: 404: _display_failed();
 27075  00496E  EC96  F007         	call	__display_failed	;wreg free
 27076                           
 27077                           ;display.c: 405: break;
 27078  004972  D03E               	goto	l1587
 27079  004974                     
 27080                           ;display.c: 408: _display_programming();
 27081  004974  ECDC  F013         	call	__display_programming	;wreg free
 27082                           
 27083                           ;display.c: 409: break;
 27084  004978  D03B               	goto	l1587
 27085  00497A                     
 27086                           ;display.c: 412: _display_done();
 27087  00497A  ECC0  F017         	call	__display_done	;wreg free
 27088                           
 27089                           ;display.c: 413: break;
 27090  00497E  D038               	goto	l1587
 27091  004980                     
 27092                           ;display.c: 416: _display_rebooting();
 27093  004980  EC86  F033         	call	__display_rebooting	;wreg free
 27094                           
 27095                           ;display.c: 417: break;
 27096  004984  D035               	goto	l1587
 27097  004986                     
 27098                           ;display.c: 420: _display_suspended();
 27099  004986  EC25  F019         	call	__display_suspended	;wreg free
 27100                           
 27101                           ;display.c: 422: }
 27102                           
 27103                           ;display.c: 421: break;
 27104  00498A  D032               	goto	l1587
 27105  00498C                     l1575:
 27106  00498C  5023               	movf	display_prepare@mode,w,c
 27107  00498E  0BF0               	andlw	240
 27108  004990  6E21               	movwf	??_display_prepare& (0+255),c
 27109  004992  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27110                           
 27111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27112                           ; Switch size 1, requested type "space"
 27113                           ; Number of cases is 1, Range of values is 0 to 0
 27114                           ; switch strategies available:
 27115                           ; Name         Instructions Cycles
 27116                           ; simple_byte            4     3 (average)
 27117                           ;	Chosen strategy is simple_byte
 27118  004994  5022               	movf	??_display_prepare+1,w,c
 27119  004996  0A00               	xorlw	0	; case 0
 27120  004998  A4D8               	btfss	status,2,c
 27121  00499A  D02A               	goto	l1587
 27122                           
 27123                           ; Switch size 1, requested type "space"
 27124                           ; Number of cases is 10, Range of values is 0 to 144
 27125                           ; switch strategies available:
 27126                           ; Name         Instructions Cycles
 27127                           ; simple_byte           31    16 (average)
 27128                           ;	Chosen strategy is simple_byte
 27129  00499C  5021               	movf	??_display_prepare,w,c
 27130  00499E  0A00               	xorlw	0	; case 0
 27131  0049A0  B4D8               	btfsc	status,2,c
 27132  0049A2  D7D6               	goto	l1576
 27133  0049A4  0A10               	xorlw	16	; case 16
 27134  0049A6  B4D8               	btfsc	status,2,c
 27135  0049A8  D7D6               	goto	l1578
 27136  0049AA  0A30               	xorlw	48	; case 32
 27137  0049AC  B4D8               	btfsc	status,2,c
 27138  0049AE  D7D6               	goto	l1579
 27139  0049B0  0A10               	xorlw	16	; case 48
 27140  0049B2  B4D8               	btfsc	status,2,c
 27141  0049B4  D7D6               	goto	l1580
 27142  0049B6  0A70               	xorlw	112	; case 64
 27143  0049B8  B4D8               	btfsc	status,2,c
 27144  0049BA  D7D6               	goto	l1581
 27145  0049BC  0A10               	xorlw	16	; case 80
 27146  0049BE  B4D8               	btfsc	status,2,c
 27147  0049C0  D7D6               	goto	l1582
 27148  0049C2  0A30               	xorlw	48	; case 96
 27149  0049C4  B4D8               	btfsc	status,2,c
 27150  0049C6  D7D6               	goto	l1583
 27151  0049C8  0A10               	xorlw	16	; case 112
 27152  0049CA  B4D8               	btfsc	status,2,c
 27153  0049CC  D7D6               	goto	l1584
 27154  0049CE  0AF0               	xorlw	240	; case 128
 27155  0049D0  B4D8               	btfsc	status,2,c
 27156  0049D2  D7D6               	goto	l1585
 27157  0049D4  0A10               	xorlw	16	; case 144
 27158  0049D6  B4D8               	btfsc	status,2,c
 27159  0049D8  D7D6               	goto	l1586
 27160                           
 27161                           ;display.c: 425: switch((os.timeSlot>>5)&0b11)
 27162  0049DA  D00A               	goto	l1587
 27163  0049DC                     
 27164                           ;display.c: 429: display_content[0][17] = '.';
 27165  0049DC  0E2E               	movlw	46
 27166  0049DE  0101               	movlb	1	; () banked
 27167  0049E0  6F8C               	movwf	(_display_content+17)& (0+255),b
 27168  0049E2                     l1589:
 27169                           
 27170                           ;display.c: 437: display_content[0][16] = '.';
 27171  0049E2  0E2E               	movlw	46
 27172  0049E4  0101               	movlb	1	; () banked
 27173  0049E6  6F8B               	movwf	(_display_content+16)& (0+255),b
 27174  0049E8                     l1590:
 27175                           
 27176                           ;display.c: 445: display_content[0][15] = '.';
 27177  0049E8  0E2E               	movlw	46
 27178  0049EA  0101               	movlb	1	; () banked
 27179  0049EC  6F8A               	movwf	(_display_content+15)& (0+255),b
 27180                           
 27181                           ;display.c: 451: }
 27182  0049EE  D015               	goto	l1591
 27183  0049F0                     l1587:
 27184                           
 27185                           ; BSR set to: 1
 27186  0049F0  0100               	movlb	0	; () banked
 27187  0049F2  3964               	swapf	(_os+4)& (0+255),w,b
 27188  0049F4  42E8               	rrncf	wreg,f,c
 27189  0049F6  0B07               	andlw	7
 27190  0049F8  0B03               	andlw	3
 27191  0049FA  6E21               	movwf	??_display_prepare& (0+255),c
 27192  0049FC  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27193                           
 27194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27195                           ; Switch size 1, requested type "space"
 27196                           ; Number of cases is 1, Range of values is 0 to 0
 27197                           ; switch strategies available:
 27198                           ; Name         Instructions Cycles
 27199                           ; simple_byte            4     3 (average)
 27200                           ;	Chosen strategy is simple_byte
 27201  0049FE  5022               	movf	??_display_prepare+1,w,c
 27202  004A00  0A00               	xorlw	0	; case 0
 27203  004A02  A4D8               	btfss	status,2,c
 27204  004A04  D00A               	goto	l1591
 27205                           
 27206                           ; BSR set to: 0
 27207                           ; Switch size 1, requested type "space"
 27208                           ; Number of cases is 3, Range of values is 1 to 3
 27209                           ; switch strategies available:
 27210                           ; Name         Instructions Cycles
 27211                           ; simple_byte           10     6 (average)
 27212                           ;	Chosen strategy is simple_byte
 27213  004A06  5021               	movf	??_display_prepare,w,c
 27214  004A08  0A01               	xorlw	1	; case 1
 27215  004A0A  B4D8               	btfsc	status,2,c
 27216  004A0C  D7ED               	goto	l1590
 27217  004A0E  0A03               	xorlw	3	; case 2
 27218  004A10  B4D8               	btfsc	status,2,c
 27219  004A12  D7E7               	goto	l1589
 27220  004A14  0A01               	xorlw	1	; case 3
 27221  004A16  B4D8               	btfsc	status,2,c
 27222  004A18  D7E1               	goto	l1588
 27223  004A1A                     l1591:
 27224                           
 27225                           ;display.c: 455: if(INTCONbits.GIE)
 27226  004A1A  AEF2               	btfss	intcon,7,c	;volatile
 27227  004A1C  0012               	return	
 27228                           
 27229                           ;display.c: 456: {;display.c: 457: display_content[0][18] = 'I';
 27230  004A1E  0E49               	movlw	73
 27231  004A20  0101               	movlb	1	; () banked
 27232  004A22  6F8D               	movwf	(_display_content+18)& (0+255),b
 27233  004A24  0012               	return	
 27234  004A26                     __end_of_display_prepare:
 27235                           	opt stack 0
 27236                           tosu	equ	0xFFF
 27237                           tosh	equ	0xFFE
 27238                           tosl	equ	0xFFD
 27239                           pclath	equ	0xFFA
 27240                           tblptru	equ	0xFF8
 27241                           tblptrh	equ	0xFF7
 27242                           tblptrl	equ	0xFF6
 27243                           tablat	equ	0xFF5
 27244                           prodh	equ	0xFF4
 27245                           prodl	equ	0xFF3
 27246                           intcon	equ	0xFF2
 27247                           intcon3	equ	0xFF0
 27248                           indf0	equ	0xFEF
 27249                           postinc0	equ	0xFEE
 27250                           fsr0h	equ	0xFEA
 27251                           fsr0l	equ	0xFE9
 27252                           wreg	equ	0xFE8
 27253                           indf1	equ	0xFE7
 27254                           postdec1	equ	0xFE5
 27255                           plusw1	equ	0xFE3
 27256                           fsr1h	equ	0xFE2
 27257                           fsr1l	equ	0xFE1
 27258                           indf2	equ	0xFDF
 27259                           postinc2	equ	0xFDE
 27260                           postdec2	equ	0xFDD
 27261                           plusw2	equ	0xFDB
 27262                           fsr2h	equ	0xFDA
 27263                           fsr2l	equ	0xFD9
 27264                           status	equ	0xFD8
 27265                           
 27266 ;; *************** function __display_verify *****************
 27267 ;; Defined at:
 27268 ;;		line 526 in file "display.c"
 27269 ;; Parameters:    Size  Location     Type
 27270 ;;		None
 27271 ;; Auto vars:     Size  Location     Type
 27272 ;;  cntr            1   30[COMRAM] unsigned char 
 27273 ;;  start           1    0        unsigned char 
 27274 ;; Return value:  Size  Location     Type
 27275 ;;                  1    wreg      void 
 27276 ;; Registers used:
 27277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27278 ;; Tracked objects:
 27279 ;;		On entry : 0/0
 27280 ;;		On exit  : 0/0
 27281 ;;		Unchanged: 0/0
 27282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27287 ;;Total ram usage:        3 bytes
 27288 ;; Hardware stack levels used:    1
 27289 ;; Hardware stack levels required when called:    4
 27290 ;; This function calls:
 27291 ;;		__display_itoa_u16
 27292 ;;		_bootloader_get_entries
 27293 ;; This function is called by:
 27294 ;;		_display_prepare
 27295 ;; This function uses a non-reentrant model
 27296 ;;
 27297                           
 27298                           	psect	text137
 27299  003776                     __ptext137:
 27300                           	opt stack 0
 27301  003776                     __display_verify:
 27302                           	opt stack 22
 27303                           
 27304                           ;display.c: 528: uint8_t cntr;;display.c: 529: uint8_t start;;display.c: 530: cntr = 0;
 27305                           
 27306                           ;incstack = 0
 27307  003776  0E00               	movlw	0
 27308  003778  6E1F               	movwf	__display_verify@cntr,c
 27309                           
 27310                           ;display.c: 531: while(verify_line1[cntr])
 27311  00377A  D017               	goto	l1644
 27312  00377C                     
 27313                           ;display.c: 532: display_content[0][cntr] = verify_line1[cntr++];
 27314  00377C  501F               	movf	__display_verify@cntr,w,c
 27315  00377E  0D01               	mullw	1
 27316  003780  0E90               	movlw	low _verify_line1
 27317  003782  24F3               	addwf	prodl,w,c
 27318  003784  6EF6               	movwf	tblptrl,c
 27319  003786  0E8D               	movlw	high _verify_line1
 27320  003788  20F4               	addwfc	prodh,w,c
 27321  00378A  6EF7               	movwf	tblptrh,c
 27322  00378C                     	if	1	;There are 3 active tblptr bytes
 27323  00378C  6AF8               	clrf	tblptru,c
 27324  00378E  0E00               	movlw	low (__mediumconst shr (0+16))
 27325  003790  22F8               	addwfc	tblptru,f,c
 27326  003792                     	endif
 27327  003792  501F               	movf	__display_verify@cntr,w,c
 27328  003794  0D01               	mullw	1
 27329  003796  0E7B               	movlw	low _display_content
 27330  003798  24F3               	addwf	prodl,w,c
 27331  00379A  6ED9               	movwf	fsr2l,c
 27332  00379C  0E01               	movlw	high _display_content
 27333  00379E  20F4               	addwfc	prodh,w,c
 27334  0037A0  6EDA               	movwf	fsr2h,c
 27335  0037A2  0008               	tblrd		*
 27336  0037A4  CFF5 FFDF          	movff	tablat,indf2
 27337  0037A8  2A1F               	incf	__display_verify@cntr,f,c
 27338  0037AA                     l1644:
 27339  0037AA  501F               	movf	__display_verify@cntr,w,c
 27340  0037AC  0D01               	mullw	1
 27341  0037AE  0E90               	movlw	low _verify_line1
 27342  0037B0  24F3               	addwf	prodl,w,c
 27343  0037B2  6EF6               	movwf	tblptrl,c
 27344  0037B4  0E8D               	movlw	high _verify_line1
 27345  0037B6  20F4               	addwfc	prodh,w,c
 27346  0037B8  6EF7               	movwf	tblptrh,c
 27347  0037BA                     	if	1	;There are 3 active tblptr bytes
 27348  0037BA  6AF8               	clrf	tblptru,c
 27349  0037BC  0E00               	movlw	low (__mediumconst shr (0+16))
 27350  0037BE  22F8               	addwfc	tblptru,f,c
 27351  0037C0                     	endif
 27352  0037C0  0008               	tblrd		*
 27353  0037C2  50F5               	movf	tablat,w,c
 27354  0037C4  0900               	iorlw	0
 27355  0037C6  A4D8               	btfss	status,2,c
 27356  0037C8  D7D9               	goto	l1645
 27357                           
 27358                           ;display.c: 533: cntr = 0;
 27359  0037CA  0E00               	movlw	0
 27360  0037CC  6E1F               	movwf	__display_verify@cntr,c
 27361                           
 27362                           ;display.c: 534: while(verify_line2[cntr])
 27363  0037CE  D017               	goto	l1647
 27364  0037D0                     
 27365                           ;display.c: 535: display_content[1][cntr] = verify_line2[cntr++];
 27366  0037D0  501F               	movf	__display_verify@cntr,w,c
 27367  0037D2  0D01               	mullw	1
 27368  0037D4  0E18               	movlw	low _verify_line2
 27369  0037D6  24F3               	addwf	prodl,w,c
 27370  0037D8  6EF6               	movwf	tblptrl,c
 27371  0037DA  0E8E               	movlw	high _verify_line2
 27372  0037DC  20F4               	addwfc	prodh,w,c
 27373  0037DE  6EF7               	movwf	tblptrh,c
 27374  0037E0                     	if	1	;There are 3 active tblptr bytes
 27375  0037E0  6AF8               	clrf	tblptru,c
 27376  0037E2  0E00               	movlw	low (__mediumconst shr (0+16))
 27377  0037E4  22F8               	addwfc	tblptru,f,c
 27378  0037E6                     	endif
 27379  0037E6  501F               	movf	__display_verify@cntr,w,c
 27380  0037E8  0D01               	mullw	1
 27381  0037EA  0E8F               	movlw	low (_display_content+20)
 27382  0037EC  24F3               	addwf	prodl,w,c
 27383  0037EE  6ED9               	movwf	fsr2l,c
 27384  0037F0  0E01               	movlw	high (_display_content+20)
 27385  0037F2  20F4               	addwfc	prodh,w,c
 27386  0037F4  6EDA               	movwf	fsr2h,c
 27387  0037F6  0008               	tblrd		*
 27388  0037F8  CFF5 FFDF          	movff	tablat,indf2
 27389  0037FC  2A1F               	incf	__display_verify@cntr,f,c
 27390  0037FE                     l1647:
 27391  0037FE  501F               	movf	__display_verify@cntr,w,c
 27392  003800  0D01               	mullw	1
 27393  003802  0E18               	movlw	low _verify_line2
 27394  003804  24F3               	addwf	prodl,w,c
 27395  003806  6EF6               	movwf	tblptrl,c
 27396  003808  0E8E               	movlw	high _verify_line2
 27397  00380A  20F4               	addwfc	prodh,w,c
 27398  00380C  6EF7               	movwf	tblptrh,c
 27399  00380E                     	if	1	;There are 3 active tblptr bytes
 27400  00380E  6AF8               	clrf	tblptru,c
 27401  003810  0E00               	movlw	low (__mediumconst shr (0+16))
 27402  003812  22F8               	addwfc	tblptru,f,c
 27403  003814                     	endif
 27404  003814  0008               	tblrd		*
 27405  003816  50F5               	movf	tablat,w,c
 27406  003818  0900               	iorlw	0
 27407  00381A  A4D8               	btfss	status,2,c
 27408  00381C  D7D9               	goto	l1648
 27409                           
 27410                           ;display.c: 536: cntr = 0;
 27411  00381E  0E00               	movlw	0
 27412  003820  6E1F               	movwf	__display_verify@cntr,c
 27413                           
 27414                           ;display.c: 537: while(verify_line3[cntr])
 27415  003822  D017               	goto	l1650
 27416  003824                     
 27417                           ;display.c: 538: display_content[2][cntr] = verify_line3[cntr++];
 27418  003824  501F               	movf	__display_verify@cntr,w,c
 27419  003826  0D01               	mullw	1
 27420  003828  0E60               	movlw	low _verify_line3
 27421  00382A  24F3               	addwf	prodl,w,c
 27422  00382C  6EF6               	movwf	tblptrl,c
 27423  00382E  0E8E               	movlw	high _verify_line3
 27424  003830  20F4               	addwfc	prodh,w,c
 27425  003832  6EF7               	movwf	tblptrh,c
 27426  003834                     	if	1	;There are 3 active tblptr bytes
 27427  003834  6AF8               	clrf	tblptru,c
 27428  003836  0E00               	movlw	low (__mediumconst shr (0+16))
 27429  003838  22F8               	addwfc	tblptru,f,c
 27430  00383A                     	endif
 27431  00383A  501F               	movf	__display_verify@cntr,w,c
 27432  00383C  0D01               	mullw	1
 27433  00383E  0EA3               	movlw	low (_display_content+40)
 27434  003840  24F3               	addwf	prodl,w,c
 27435  003842  6ED9               	movwf	fsr2l,c
 27436  003844  0E01               	movlw	high (_display_content+40)
 27437  003846  20F4               	addwfc	prodh,w,c
 27438  003848  6EDA               	movwf	fsr2h,c
 27439  00384A  0008               	tblrd		*
 27440  00384C  CFF5 FFDF          	movff	tablat,indf2
 27441  003850  2A1F               	incf	__display_verify@cntr,f,c
 27442  003852                     l1650:
 27443  003852  501F               	movf	__display_verify@cntr,w,c
 27444  003854  0D01               	mullw	1
 27445  003856  0E60               	movlw	low _verify_line3
 27446  003858  24F3               	addwf	prodl,w,c
 27447  00385A  6EF6               	movwf	tblptrl,c
 27448  00385C  0E8E               	movlw	high _verify_line3
 27449  00385E  20F4               	addwfc	prodh,w,c
 27450  003860  6EF7               	movwf	tblptrh,c
 27451  003862                     	if	1	;There are 3 active tblptr bytes
 27452  003862  6AF8               	clrf	tblptru,c
 27453  003864  0E00               	movlw	low (__mediumconst shr (0+16))
 27454  003866  22F8               	addwfc	tblptru,f,c
 27455  003868                     	endif
 27456  003868  0008               	tblrd		*
 27457  00386A  50F5               	movf	tablat,w,c
 27458  00386C  0900               	iorlw	0
 27459  00386E  A4D8               	btfss	status,2,c
 27460  003870  D7D9               	goto	l1651
 27461                           
 27462                           ;display.c: 539: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27463  003872  EC2A  F03A         	call	_bootloader_get_entries	;wreg free
 27464  003876  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27465  00387A  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27466  00387E  501F               	movf	__display_verify@cntr,w,c
 27467  003880  6E1D               	movwf	??__display_verify& (0+255),c
 27468  003882  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 27469  003884  0E01               	movlw	1
 27470  003886  261D               	addwf	??__display_verify,f,c
 27471  003888  0E00               	movlw	0
 27472  00388A  221E               	addwfc	??__display_verify+1,f,c
 27473  00388C  0EA3               	movlw	low (_display_content+40)
 27474  00388E  241D               	addwf	??__display_verify,w,c
 27475  003890  6E1B               	movwf	__display_itoa_u16@text,c
 27476  003892  0E01               	movlw	high (_display_content+40)
 27477  003894  201E               	addwfc	??__display_verify+1,w,c
 27478  003896  6E1C               	movwf	__display_itoa_u16@text+1,c
 27479  003898  EC9C  F028         	call	__display_itoa_u16	;wreg free
 27480  00389C  0012               	return		;funcret
 27481  00389E                     __end_of__display_verify:
 27482                           	opt stack 0
 27483                           tosu	equ	0xFFF
 27484                           tosh	equ	0xFFE
 27485                           tosl	equ	0xFFD
 27486                           pclath	equ	0xFFA
 27487                           tblptru	equ	0xFF8
 27488                           tblptrh	equ	0xFF7
 27489                           tblptrl	equ	0xFF6
 27490                           tablat	equ	0xFF5
 27491                           prodh	equ	0xFF4
 27492                           prodl	equ	0xFF3
 27493                           intcon	equ	0xFF2
 27494                           intcon3	equ	0xFF0
 27495                           indf0	equ	0xFEF
 27496                           postinc0	equ	0xFEE
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postdec1	equ	0xFE5
 27502                           plusw1	equ	0xFE3
 27503                           fsr1h	equ	0xFE2
 27504                           fsr1l	equ	0xFE1
 27505                           indf2	equ	0xFDF
 27506                           postinc2	equ	0xFDE
 27507                           postdec2	equ	0xFDD
 27508                           plusw2	equ	0xFDB
 27509                           fsr2h	equ	0xFDA
 27510                           fsr2l	equ	0xFD9
 27511                           status	equ	0xFD8
 27512                           
 27513 ;; *************** function __display_suspended *****************
 27514 ;; Defined at:
 27515 ;;		line 664 in file "display.c"
 27516 ;; Parameters:    Size  Location     Type
 27517 ;;		None
 27518 ;; Auto vars:     Size  Location     Type
 27519 ;;  cntr            1    0[COMRAM] unsigned char 
 27520 ;; Return value:  Size  Location     Type
 27521 ;;                  1    wreg      void 
 27522 ;; Registers used:
 27523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27524 ;; Tracked objects:
 27525 ;;		On entry : 0/0
 27526 ;;		On exit  : 0/0
 27527 ;;		Unchanged: 0/0
 27528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27533 ;;Total ram usage:        1 bytes
 27534 ;; Hardware stack levels used:    1
 27535 ;; This function calls:
 27536 ;;		Nothing
 27537 ;; This function is called by:
 27538 ;;		_display_prepare
 27539 ;; This function uses a non-reentrant model
 27540 ;;
 27541                           
 27542                           	psect	text138
 27543  00324A                     __ptext138:
 27544                           	opt stack 0
 27545  00324A                     __display_suspended:
 27546                           	opt stack 26
 27547                           
 27548                           ;display.c: 666: uint8_t cntr;;display.c: 669: cntr = 0;
 27549                           
 27550                           ;incstack = 0
 27551  00324A  0E00               	movlw	0
 27552  00324C  6E01               	movwf	__display_suspended@cntr,c
 27553                           
 27554                           ;display.c: 670: while(suspended_line1[cntr])
 27555  00324E  D017               	goto	l1741
 27556  003250                     
 27557                           ;display.c: 671: display_content[0][cntr] = suspended_line1[cntr++];
 27558  003250  5001               	movf	__display_suspended@cntr,w,c
 27559  003252  0D01               	mullw	1
 27560  003254  0E10               	movlw	low _suspended_line1
 27561  003256  24F3               	addwf	prodl,w,c
 27562  003258  6EF6               	movwf	tblptrl,c
 27563  00325A  0E8D               	movlw	high _suspended_line1
 27564  00325C  20F4               	addwfc	prodh,w,c
 27565  00325E  6EF7               	movwf	tblptrh,c
 27566  003260                     	if	1	;There are 3 active tblptr bytes
 27567  003260  6AF8               	clrf	tblptru,c
 27568  003262  0E00               	movlw	low (__mediumconst shr (0+16))
 27569  003264  22F8               	addwfc	tblptru,f,c
 27570  003266                     	endif
 27571  003266  5001               	movf	__display_suspended@cntr,w,c
 27572  003268  0D01               	mullw	1
 27573  00326A  0E7B               	movlw	low _display_content
 27574  00326C  24F3               	addwf	prodl,w,c
 27575  00326E  6ED9               	movwf	fsr2l,c
 27576  003270  0E01               	movlw	high _display_content
 27577  003272  20F4               	addwfc	prodh,w,c
 27578  003274  6EDA               	movwf	fsr2h,c
 27579  003276  0008               	tblrd		*
 27580  003278  CFF5 FFDF          	movff	tablat,indf2
 27581  00327C  2A01               	incf	__display_suspended@cntr,f,c
 27582  00327E                     l1741:
 27583  00327E  5001               	movf	__display_suspended@cntr,w,c
 27584  003280  0D01               	mullw	1
 27585  003282  0E10               	movlw	low _suspended_line1
 27586  003284  24F3               	addwf	prodl,w,c
 27587  003286  6EF6               	movwf	tblptrl,c
 27588  003288  0E8D               	movlw	high _suspended_line1
 27589  00328A  20F4               	addwfc	prodh,w,c
 27590  00328C  6EF7               	movwf	tblptrh,c
 27591  00328E                     	if	1	;There are 3 active tblptr bytes
 27592  00328E  6AF8               	clrf	tblptru,c
 27593  003290  0E00               	movlw	low (__mediumconst shr (0+16))
 27594  003292  22F8               	addwfc	tblptru,f,c
 27595  003294                     	endif
 27596  003294  0008               	tblrd		*
 27597  003296  50F5               	movf	tablat,w,c
 27598  003298  0900               	iorlw	0
 27599  00329A  A4D8               	btfss	status,2,c
 27600  00329C  D7D9               	goto	l1742
 27601                           
 27602                           ;display.c: 673: cntr = 0;
 27603  00329E  0E00               	movlw	0
 27604  0032A0  6E01               	movwf	__display_suspended@cntr,c
 27605                           
 27606                           ;display.c: 674: while(suspended_line2[cntr])
 27607  0032A2  D017               	goto	l1744
 27608  0032A4                     
 27609                           ;display.c: 675: display_content[1][cntr] = suspended_line2[cntr++];
 27610  0032A4  5001               	movf	__display_suspended@cntr,w,c
 27611  0032A6  0D01               	mullw	1
 27612  0032A8  0E25               	movlw	low _suspended_line2
 27613  0032AA  24F3               	addwf	prodl,w,c
 27614  0032AC  6EF6               	movwf	tblptrl,c
 27615  0032AE  0E8E               	movlw	high _suspended_line2
 27616  0032B0  20F4               	addwfc	prodh,w,c
 27617  0032B2  6EF7               	movwf	tblptrh,c
 27618  0032B4                     	if	1	;There are 3 active tblptr bytes
 27619  0032B4  6AF8               	clrf	tblptru,c
 27620  0032B6  0E00               	movlw	low (__mediumconst shr (0+16))
 27621  0032B8  22F8               	addwfc	tblptru,f,c
 27622  0032BA                     	endif
 27623  0032BA  5001               	movf	__display_suspended@cntr,w,c
 27624  0032BC  0D01               	mullw	1
 27625  0032BE  0E8F               	movlw	low (_display_content+20)
 27626  0032C0  24F3               	addwf	prodl,w,c
 27627  0032C2  6ED9               	movwf	fsr2l,c
 27628  0032C4  0E01               	movlw	high (_display_content+20)
 27629  0032C6  20F4               	addwfc	prodh,w,c
 27630  0032C8  6EDA               	movwf	fsr2h,c
 27631  0032CA  0008               	tblrd		*
 27632  0032CC  CFF5 FFDF          	movff	tablat,indf2
 27633  0032D0  2A01               	incf	__display_suspended@cntr,f,c
 27634  0032D2                     l1744:
 27635  0032D2  5001               	movf	__display_suspended@cntr,w,c
 27636  0032D4  0D01               	mullw	1
 27637  0032D6  0E25               	movlw	low _suspended_line2
 27638  0032D8  24F3               	addwf	prodl,w,c
 27639  0032DA  6EF6               	movwf	tblptrl,c
 27640  0032DC  0E8E               	movlw	high _suspended_line2
 27641  0032DE  20F4               	addwfc	prodh,w,c
 27642  0032E0  6EF7               	movwf	tblptrh,c
 27643  0032E2                     	if	1	;There are 3 active tblptr bytes
 27644  0032E2  6AF8               	clrf	tblptru,c
 27645  0032E4  0E00               	movlw	low (__mediumconst shr (0+16))
 27646  0032E6  22F8               	addwfc	tblptru,f,c
 27647  0032E8                     	endif
 27648  0032E8  0008               	tblrd		*
 27649  0032EA  50F5               	movf	tablat,w,c
 27650  0032EC  0900               	iorlw	0
 27651  0032EE  A4D8               	btfss	status,2,c
 27652  0032F0  D7D9               	goto	l1745
 27653                           
 27654                           ;display.c: 677: cntr = 0;
 27655  0032F2  0E00               	movlw	0
 27656  0032F4  6E01               	movwf	__display_suspended@cntr,c
 27657                           
 27658                           ;display.c: 678: while(suspended_line3[cntr])
 27659  0032F6  D017               	goto	l1747
 27660  0032F8                     
 27661                           ;display.c: 679: display_content[2][cntr] = suspended_line3[cntr++];
 27662  0032F8  5001               	movf	__display_suspended@cntr,w,c
 27663  0032FA  0D01               	mullw	1
 27664  0032FC  0E7D               	movlw	low _suspended_line3
 27665  0032FE  24F3               	addwf	prodl,w,c
 27666  003300  6EF6               	movwf	tblptrl,c
 27667  003302  0E8E               	movlw	high _suspended_line3
 27668  003304  20F4               	addwfc	prodh,w,c
 27669  003306  6EF7               	movwf	tblptrh,c
 27670  003308                     	if	1	;There are 3 active tblptr bytes
 27671  003308  6AF8               	clrf	tblptru,c
 27672  00330A  0E00               	movlw	low (__mediumconst shr (0+16))
 27673  00330C  22F8               	addwfc	tblptru,f,c
 27674  00330E                     	endif
 27675  00330E  5001               	movf	__display_suspended@cntr,w,c
 27676  003310  0D01               	mullw	1
 27677  003312  0EA3               	movlw	low (_display_content+40)
 27678  003314  24F3               	addwf	prodl,w,c
 27679  003316  6ED9               	movwf	fsr2l,c
 27680  003318  0E01               	movlw	high (_display_content+40)
 27681  00331A  20F4               	addwfc	prodh,w,c
 27682  00331C  6EDA               	movwf	fsr2h,c
 27683  00331E  0008               	tblrd		*
 27684  003320  CFF5 FFDF          	movff	tablat,indf2
 27685  003324  2A01               	incf	__display_suspended@cntr,f,c
 27686  003326                     l1747:
 27687  003326  5001               	movf	__display_suspended@cntr,w,c
 27688  003328  0D01               	mullw	1
 27689  00332A  0E7D               	movlw	low _suspended_line3
 27690  00332C  24F3               	addwf	prodl,w,c
 27691  00332E  6EF6               	movwf	tblptrl,c
 27692  003330  0E8E               	movlw	high _suspended_line3
 27693  003332  20F4               	addwfc	prodh,w,c
 27694  003334  6EF7               	movwf	tblptrh,c
 27695  003336                     	if	1	;There are 3 active tblptr bytes
 27696  003336  6AF8               	clrf	tblptru,c
 27697  003338  0E00               	movlw	low (__mediumconst shr (0+16))
 27698  00333A  22F8               	addwfc	tblptru,f,c
 27699  00333C                     	endif
 27700  00333C  0008               	tblrd		*
 27701  00333E  50F5               	movf	tablat,w,c
 27702  003340  0900               	iorlw	0
 27703  003342  A4D8               	btfss	status,2,c
 27704  003344  D7D9               	goto	l1748
 27705                           
 27706                           ;display.c: 681: cntr = 0;
 27707  003346  0E00               	movlw	0
 27708  003348  6E01               	movwf	__display_suspended@cntr,c
 27709                           
 27710                           ;display.c: 682: while(suspended_line4[cntr])
 27711  00334A  D017               	goto	l1750
 27712  00334C                     
 27713                           ;display.c: 683: display_content[3][cntr] = suspended_line4[cntr++];
 27714  00334C  5001               	movf	__display_suspended@cntr,w,c
 27715  00334E  0D01               	mullw	1
 27716  003350  0E00               	movlw	low _suspended_line4
 27717  003352  24F3               	addwf	prodl,w,c
 27718  003354  6EF6               	movwf	tblptrl,c
 27719  003356  0E8D               	movlw	high _suspended_line4
 27720  003358  20F4               	addwfc	prodh,w,c
 27721  00335A  6EF7               	movwf	tblptrh,c
 27722  00335C                     	if	1	;There are 3 active tblptr bytes
 27723  00335C  6AF8               	clrf	tblptru,c
 27724  00335E  0E00               	movlw	low (__mediumconst shr (0+16))
 27725  003360  22F8               	addwfc	tblptru,f,c
 27726  003362                     	endif
 27727  003362  5001               	movf	__display_suspended@cntr,w,c
 27728  003364  0D01               	mullw	1
 27729  003366  0EB7               	movlw	low (_display_content+60)
 27730  003368  24F3               	addwf	prodl,w,c
 27731  00336A  6ED9               	movwf	fsr2l,c
 27732  00336C  0E01               	movlw	high (_display_content+60)
 27733  00336E  20F4               	addwfc	prodh,w,c
 27734  003370  6EDA               	movwf	fsr2h,c
 27735  003372  0008               	tblrd		*
 27736  003374  CFF5 FFDF          	movff	tablat,indf2
 27737  003378  2A01               	incf	__display_suspended@cntr,f,c
 27738  00337A                     l1750:
 27739  00337A  5001               	movf	__display_suspended@cntr,w,c
 27740  00337C  0D01               	mullw	1
 27741  00337E  0E00               	movlw	low _suspended_line4
 27742  003380  24F3               	addwf	prodl,w,c
 27743  003382  6EF6               	movwf	tblptrl,c
 27744  003384  0E8D               	movlw	high _suspended_line4
 27745  003386  20F4               	addwfc	prodh,w,c
 27746  003388  6EF7               	movwf	tblptrh,c
 27747  00338A                     	if	1	;There are 3 active tblptr bytes
 27748  00338A  6AF8               	clrf	tblptru,c
 27749  00338C  0E00               	movlw	low (__mediumconst shr (0+16))
 27750  00338E  22F8               	addwfc	tblptru,f,c
 27751  003390                     	endif
 27752  003390  0008               	tblrd		*
 27753  003392  50F5               	movf	tablat,w,c
 27754  003394  0900               	iorlw	0
 27755  003396  B4D8               	btfsc	status,2,c
 27756  003398  0012               	return	
 27757  00339A  D7D8               	goto	l1751
 27758  00339C                     __end_of__display_suspended:
 27759                           	opt stack 0
 27760                           tosu	equ	0xFFF
 27761                           tosh	equ	0xFFE
 27762                           tosl	equ	0xFFD
 27763                           pclath	equ	0xFFA
 27764                           tblptru	equ	0xFF8
 27765                           tblptrh	equ	0xFF7
 27766                           tblptrl	equ	0xFF6
 27767                           tablat	equ	0xFF5
 27768                           prodh	equ	0xFF4
 27769                           prodl	equ	0xFF3
 27770                           intcon	equ	0xFF2
 27771                           intcon3	equ	0xFF0
 27772                           indf0	equ	0xFEF
 27773                           postinc0	equ	0xFEE
 27774                           fsr0h	equ	0xFEA
 27775                           fsr0l	equ	0xFE9
 27776                           wreg	equ	0xFE8
 27777                           indf1	equ	0xFE7
 27778                           postdec1	equ	0xFE5
 27779                           plusw1	equ	0xFE3
 27780                           fsr1h	equ	0xFE2
 27781                           fsr1l	equ	0xFE1
 27782                           indf2	equ	0xFDF
 27783                           postinc2	equ	0xFDE
 27784                           postdec2	equ	0xFDD
 27785                           plusw2	equ	0xFDB
 27786                           fsr2h	equ	0xFDA
 27787                           fsr2l	equ	0xFD9
 27788                           status	equ	0xFD8
 27789                           
 27790 ;; *************** function __display_start *****************
 27791 ;; Defined at:
 27792 ;;		line 461 in file "display.c"
 27793 ;; Parameters:    Size  Location     Type
 27794 ;;		None
 27795 ;; Auto vars:     Size  Location     Type
 27796 ;;  cntr            1   28[COMRAM] unsigned char 
 27797 ;; Return value:  Size  Location     Type
 27798 ;;                  1    wreg      void 
 27799 ;; Registers used:
 27800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27801 ;; Tracked objects:
 27802 ;;		On entry : 0/0
 27803 ;;		On exit  : 0/0
 27804 ;;		Unchanged: 0/0
 27805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27810 ;;Total ram usage:        1 bytes
 27811 ;; Hardware stack levels used:    1
 27812 ;; Hardware stack levels required when called:    4
 27813 ;; This function calls:
 27814 ;;		__display_itoa_u16
 27815 ;; This function is called by:
 27816 ;;		_display_prepare
 27817 ;; This function uses a non-reentrant model
 27818 ;;
 27819                           
 27820                           	psect	text139
 27821  0025E0                     __ptext139:
 27822                           	opt stack 0
 27823  0025E0                     __display_start:
 27824                           	opt stack 22
 27825                           
 27826                           ;display.c: 463: uint8_t cntr;;display.c: 464: cntr = 0;
 27827                           
 27828                           ;incstack = 0
 27829  0025E0  0E00               	movlw	0
 27830  0025E2  6E1D               	movwf	__display_start@cntr,c
 27831                           
 27832                           ;display.c: 465: while(start_line1[cntr])
 27833  0025E4  D017               	goto	l1596
 27834  0025E6                     
 27835                           ;display.c: 466: display_content[0][cntr] = start_line1[cntr++];
 27836  0025E6  501D               	movf	__display_start@cntr,w,c
 27837  0025E8  0D01               	mullw	1
 27838  0025EA  0EC0               	movlw	low _start_line1
 27839  0025EC  24F3               	addwf	prodl,w,c
 27840  0025EE  6EF6               	movwf	tblptrl,c
 27841  0025F0  0E8D               	movlw	high _start_line1
 27842  0025F2  20F4               	addwfc	prodh,w,c
 27843  0025F4  6EF7               	movwf	tblptrh,c
 27844  0025F6                     	if	1	;There are 3 active tblptr bytes
 27845  0025F6  6AF8               	clrf	tblptru,c
 27846  0025F8  0E00               	movlw	low (__mediumconst shr (0+16))
 27847  0025FA  22F8               	addwfc	tblptru,f,c
 27848  0025FC                     	endif
 27849  0025FC  501D               	movf	__display_start@cntr,w,c
 27850  0025FE  0D01               	mullw	1
 27851  002600  0E7B               	movlw	low _display_content
 27852  002602  24F3               	addwf	prodl,w,c
 27853  002604  6ED9               	movwf	fsr2l,c
 27854  002606  0E01               	movlw	high _display_content
 27855  002608  20F4               	addwfc	prodh,w,c
 27856  00260A  6EDA               	movwf	fsr2h,c
 27857  00260C  0008               	tblrd		*
 27858  00260E  CFF5 FFDF          	movff	tablat,indf2
 27859  002612  2A1D               	incf	__display_start@cntr,f,c
 27860  002614                     l1596:
 27861  002614  501D               	movf	__display_start@cntr,w,c
 27862  002616  0D01               	mullw	1
 27863  002618  0EC0               	movlw	low _start_line1
 27864  00261A  24F3               	addwf	prodl,w,c
 27865  00261C  6EF6               	movwf	tblptrl,c
 27866  00261E  0E8D               	movlw	high _start_line1
 27867  002620  20F4               	addwfc	prodh,w,c
 27868  002622  6EF7               	movwf	tblptrh,c
 27869  002624                     	if	1	;There are 3 active tblptr bytes
 27870  002624  6AF8               	clrf	tblptru,c
 27871  002626  0E00               	movlw	low (__mediumconst shr (0+16))
 27872  002628  22F8               	addwfc	tblptru,f,c
 27873  00262A                     	endif
 27874  00262A  0008               	tblrd		*
 27875  00262C  50F5               	movf	tablat,w,c
 27876  00262E  0900               	iorlw	0
 27877  002630  A4D8               	btfss	status,2,c
 27878  002632  D7D9               	goto	l1597
 27879                           
 27880                           ;display.c: 467: cntr = 0;
 27881  002634  0E00               	movlw	0
 27882  002636  6E1D               	movwf	__display_start@cntr,c
 27883                           
 27884                           ;display.c: 468: while(start_line2[cntr])
 27885  002638  D017               	goto	l1599
 27886  00263A                     
 27887                           ;display.c: 469: display_content[1][cntr] = start_line2[cntr++];
 27888  00263A  501D               	movf	__display_start@cntr,w,c
 27889  00263C  0D01               	mullw	1
 27890  00263E  0E38               	movlw	low _start_line2
 27891  002640  24F3               	addwf	prodl,w,c
 27892  002642  6EF6               	movwf	tblptrl,c
 27893  002644  0E8E               	movlw	high _start_line2
 27894  002646  20F4               	addwfc	prodh,w,c
 27895  002648  6EF7               	movwf	tblptrh,c
 27896  00264A                     	if	1	;There are 3 active tblptr bytes
 27897  00264A  6AF8               	clrf	tblptru,c
 27898  00264C  0E00               	movlw	low (__mediumconst shr (0+16))
 27899  00264E  22F8               	addwfc	tblptru,f,c
 27900  002650                     	endif
 27901  002650  501D               	movf	__display_start@cntr,w,c
 27902  002652  0D01               	mullw	1
 27903  002654  0E8F               	movlw	low (_display_content+20)
 27904  002656  24F3               	addwf	prodl,w,c
 27905  002658  6ED9               	movwf	fsr2l,c
 27906  00265A  0E01               	movlw	high (_display_content+20)
 27907  00265C  20F4               	addwfc	prodh,w,c
 27908  00265E  6EDA               	movwf	fsr2h,c
 27909  002660  0008               	tblrd		*
 27910  002662  CFF5 FFDF          	movff	tablat,indf2
 27911  002666  2A1D               	incf	__display_start@cntr,f,c
 27912  002668                     l1599:
 27913  002668  501D               	movf	__display_start@cntr,w,c
 27914  00266A  0D01               	mullw	1
 27915  00266C  0E38               	movlw	low _start_line2
 27916  00266E  24F3               	addwf	prodl,w,c
 27917  002670  6EF6               	movwf	tblptrl,c
 27918  002672  0E8E               	movlw	high _start_line2
 27919  002674  20F4               	addwfc	prodh,w,c
 27920  002676  6EF7               	movwf	tblptrh,c
 27921  002678                     	if	1	;There are 3 active tblptr bytes
 27922  002678  6AF8               	clrf	tblptru,c
 27923  00267A  0E00               	movlw	low (__mediumconst shr (0+16))
 27924  00267C  22F8               	addwfc	tblptru,f,c
 27925  00267E                     	endif
 27926  00267E  0008               	tblrd		*
 27927  002680  50F5               	movf	tablat,w,c
 27928  002682  0900               	iorlw	0
 27929  002684  A4D8               	btfss	status,2,c
 27930  002686  D7D9               	goto	l1600
 27931                           
 27932                           ;display.c: 470: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27933  002688  0E00               	movlw	0
 27934  00268A  6E1A               	movwf	__display_itoa_u16@value+1,c
 27935  00268C  0E00               	movlw	0
 27936  00268E  6E19               	movwf	__display_itoa_u16@value,c
 27937  002690  501D               	movf	__display_start@cntr,w,c
 27938  002692  0D01               	mullw	1
 27939  002694  0E8F               	movlw	low (_display_content+20)
 27940  002696  24F3               	addwf	prodl,w,c
 27941  002698  6E1B               	movwf	__display_itoa_u16@text,c
 27942  00269A  0E01               	movlw	high (_display_content+20)
 27943  00269C  20F4               	addwfc	prodh,w,c
 27944  00269E  6E1C               	movwf	__display_itoa_u16@text+1,c
 27945  0026A0  EC9C  F028         	call	__display_itoa_u16	;wreg free
 27946  0026A4  261D               	addwf	__display_start@cntr,f,c
 27947                           
 27948                           ;display.c: 471: display_content[1][cntr++] = '.';
 27949  0026A6  501D               	movf	__display_start@cntr,w,c
 27950  0026A8  0D01               	mullw	1
 27951  0026AA  0E8F               	movlw	low (_display_content+20)
 27952  0026AC  24F3               	addwf	prodl,w,c
 27953  0026AE  6ED9               	movwf	fsr2l,c
 27954  0026B0  0E01               	movlw	high (_display_content+20)
 27955  0026B2  20F4               	addwfc	prodh,w,c
 27956  0026B4  6EDA               	movwf	fsr2h,c
 27957  0026B6  0E2E               	movlw	46
 27958  0026B8  6EDF               	movwf	indf2,c
 27959  0026BA  2A1D               	incf	__display_start@cntr,f,c
 27960                           
 27961                           ;display.c: 472: cntr += _display_itoa_u16(0x05, &display_content[1][cntr]);
 27962  0026BC  0E00               	movlw	0
 27963  0026BE  6E1A               	movwf	__display_itoa_u16@value+1,c
 27964  0026C0  0E05               	movlw	5
 27965  0026C2  6E19               	movwf	__display_itoa_u16@value,c
 27966  0026C4  501D               	movf	__display_start@cntr,w,c
 27967  0026C6  0D01               	mullw	1
 27968  0026C8  0E8F               	movlw	low (_display_content+20)
 27969  0026CA  24F3               	addwf	prodl,w,c
 27970  0026CC  6E1B               	movwf	__display_itoa_u16@text,c
 27971  0026CE  0E01               	movlw	high (_display_content+20)
 27972  0026D0  20F4               	addwfc	prodh,w,c
 27973  0026D2  6E1C               	movwf	__display_itoa_u16@text+1,c
 27974  0026D4  EC9C  F028         	call	__display_itoa_u16	;wreg free
 27975  0026D8  261D               	addwf	__display_start@cntr,f,c
 27976                           
 27977                           ;display.c: 473: display_content[1][cntr++] = '.';
 27978  0026DA  501D               	movf	__display_start@cntr,w,c
 27979  0026DC  0D01               	mullw	1
 27980  0026DE  0E8F               	movlw	low (_display_content+20)
 27981  0026E0  24F3               	addwf	prodl,w,c
 27982  0026E2  6ED9               	movwf	fsr2l,c
 27983  0026E4  0E01               	movlw	high (_display_content+20)
 27984  0026E6  20F4               	addwfc	prodh,w,c
 27985  0026E8  6EDA               	movwf	fsr2h,c
 27986  0026EA  0E2E               	movlw	46
 27987  0026EC  6EDF               	movwf	indf2,c
 27988  0026EE  2A1D               	incf	__display_start@cntr,f,c
 27989                           
 27990                           ;display.c: 474: cntr += _display_itoa_u16(0x01, &display_content[1][cntr]);
 27991  0026F0  0E00               	movlw	0
 27992  0026F2  6E1A               	movwf	__display_itoa_u16@value+1,c
 27993  0026F4  0E01               	movlw	1
 27994  0026F6  6E19               	movwf	__display_itoa_u16@value,c
 27995  0026F8  501D               	movf	__display_start@cntr,w,c
 27996  0026FA  0D01               	mullw	1
 27997  0026FC  0E8F               	movlw	low (_display_content+20)
 27998  0026FE  24F3               	addwf	prodl,w,c
 27999  002700  6E1B               	movwf	__display_itoa_u16@text,c
 28000  002702  0E01               	movlw	high (_display_content+20)
 28001  002704  20F4               	addwfc	prodh,w,c
 28002  002706  6E1C               	movwf	__display_itoa_u16@text+1,c
 28003  002708  EC9C  F028         	call	__display_itoa_u16	;wreg free
 28004  00270C  261D               	addwf	__display_start@cntr,f,c
 28005                           
 28006                           ;display.c: 475: cntr = 0;
 28007  00270E  0E00               	movlw	0
 28008  002710  6E1D               	movwf	__display_start@cntr,c
 28009                           
 28010                           ;display.c: 476: while(start_line3[cntr])
 28011  002712  D017               	goto	l1602
 28012  002714                     
 28013                           ;display.c: 477: display_content[2][cntr] = start_line3[cntr++];
 28014  002714  501D               	movf	__display_start@cntr,w,c
 28015  002716  0D01               	mullw	1
 28016  002718  0E7E               	movlw	low _start_line3
 28017  00271A  24F3               	addwf	prodl,w,c
 28018  00271C  6EF6               	movwf	tblptrl,c
 28019  00271E  0E8E               	movlw	high _start_line3
 28020  002720  20F4               	addwfc	prodh,w,c
 28021  002722  6EF7               	movwf	tblptrh,c
 28022  002724                     	if	1	;There are 3 active tblptr bytes
 28023  002724  6AF8               	clrf	tblptru,c
 28024  002726  0E00               	movlw	low (__mediumconst shr (0+16))
 28025  002728  22F8               	addwfc	tblptru,f,c
 28026  00272A                     	endif
 28027  00272A  501D               	movf	__display_start@cntr,w,c
 28028  00272C  0D01               	mullw	1
 28029  00272E  0EA3               	movlw	low (_display_content+40)
 28030  002730  24F3               	addwf	prodl,w,c
 28031  002732  6ED9               	movwf	fsr2l,c
 28032  002734  0E01               	movlw	high (_display_content+40)
 28033  002736  20F4               	addwfc	prodh,w,c
 28034  002738  6EDA               	movwf	fsr2h,c
 28035  00273A  0008               	tblrd		*
 28036  00273C  CFF5 FFDF          	movff	tablat,indf2
 28037  002740  2A1D               	incf	__display_start@cntr,f,c
 28038  002742                     l1602:
 28039  002742  501D               	movf	__display_start@cntr,w,c
 28040  002744  0D01               	mullw	1
 28041  002746  0E7E               	movlw	low _start_line3
 28042  002748  24F3               	addwf	prodl,w,c
 28043  00274A  6EF6               	movwf	tblptrl,c
 28044  00274C  0E8E               	movlw	high _start_line3
 28045  00274E  20F4               	addwfc	prodh,w,c
 28046  002750  6EF7               	movwf	tblptrh,c
 28047  002752                     	if	1	;There are 3 active tblptr bytes
 28048  002752  6AF8               	clrf	tblptru,c
 28049  002754  0E00               	movlw	low (__mediumconst shr (0+16))
 28050  002756  22F8               	addwfc	tblptru,f,c
 28051  002758                     	endif
 28052  002758  0008               	tblrd		*
 28053  00275A  50F5               	movf	tablat,w,c
 28054  00275C  0900               	iorlw	0
 28055  00275E  A4D8               	btfss	status,2,c
 28056  002760  D7D9               	goto	l1603
 28057                           
 28058                           ;display.c: 478: cntr = 0;
 28059  002762  0E00               	movlw	0
 28060  002764  6E1D               	movwf	__display_start@cntr,c
 28061                           
 28062                           ;display.c: 479: while(start_line4[cntr])
 28063  002766  D017               	goto	l1605
 28064  002768                     
 28065                           ;display.c: 480: display_content[3][cntr] = start_line4[cntr++];
 28066  002768  501D               	movf	__display_start@cntr,w,c
 28067  00276A  0D01               	mullw	1
 28068  00276C  0EEE               	movlw	low _start_line4
 28069  00276E  24F3               	addwf	prodl,w,c
 28070  002770  6EF6               	movwf	tblptrl,c
 28071  002772  0E8D               	movlw	high _start_line4
 28072  002774  20F4               	addwfc	prodh,w,c
 28073  002776  6EF7               	movwf	tblptrh,c
 28074  002778                     	if	1	;There are 3 active tblptr bytes
 28075  002778  6AF8               	clrf	tblptru,c
 28076  00277A  0E00               	movlw	low (__mediumconst shr (0+16))
 28077  00277C  22F8               	addwfc	tblptru,f,c
 28078  00277E                     	endif
 28079  00277E  501D               	movf	__display_start@cntr,w,c
 28080  002780  0D01               	mullw	1
 28081  002782  0EB7               	movlw	low (_display_content+60)
 28082  002784  24F3               	addwf	prodl,w,c
 28083  002786  6ED9               	movwf	fsr2l,c
 28084  002788  0E01               	movlw	high (_display_content+60)
 28085  00278A  20F4               	addwfc	prodh,w,c
 28086  00278C  6EDA               	movwf	fsr2h,c
 28087  00278E  0008               	tblrd		*
 28088  002790  CFF5 FFDF          	movff	tablat,indf2
 28089  002794  2A1D               	incf	__display_start@cntr,f,c
 28090  002796                     l1605:
 28091  002796  501D               	movf	__display_start@cntr,w,c
 28092  002798  0D01               	mullw	1
 28093  00279A  0EEE               	movlw	low _start_line4
 28094  00279C  24F3               	addwf	prodl,w,c
 28095  00279E  6EF6               	movwf	tblptrl,c
 28096  0027A0  0E8D               	movlw	high _start_line4
 28097  0027A2  20F4               	addwfc	prodh,w,c
 28098  0027A4  6EF7               	movwf	tblptrh,c
 28099  0027A6                     	if	1	;There are 3 active tblptr bytes
 28100  0027A6  6AF8               	clrf	tblptru,c
 28101  0027A8  0E00               	movlw	low (__mediumconst shr (0+16))
 28102  0027AA  22F8               	addwfc	tblptru,f,c
 28103  0027AC                     	endif
 28104  0027AC  0008               	tblrd		*
 28105  0027AE  50F5               	movf	tablat,w,c
 28106  0027B0  0900               	iorlw	0
 28107  0027B2  B4D8               	btfsc	status,2,c
 28108  0027B4  0012               	return	
 28109  0027B6  D7D8               	goto	l1606
 28110  0027B8                     __end_of__display_start:
 28111                           	opt stack 0
 28112                           tosu	equ	0xFFF
 28113                           tosh	equ	0xFFE
 28114                           tosl	equ	0xFFD
 28115                           pclath	equ	0xFFA
 28116                           tblptru	equ	0xFF8
 28117                           tblptrh	equ	0xFF7
 28118                           tblptrl	equ	0xFF6
 28119                           tablat	equ	0xFF5
 28120                           prodh	equ	0xFF4
 28121                           prodl	equ	0xFF3
 28122                           intcon	equ	0xFF2
 28123                           intcon3	equ	0xFF0
 28124                           indf0	equ	0xFEF
 28125                           postinc0	equ	0xFEE
 28126                           fsr0h	equ	0xFEA
 28127                           fsr0l	equ	0xFE9
 28128                           wreg	equ	0xFE8
 28129                           indf1	equ	0xFE7
 28130                           postdec1	equ	0xFE5
 28131                           plusw1	equ	0xFE3
 28132                           fsr1h	equ	0xFE2
 28133                           fsr1l	equ	0xFE1
 28134                           indf2	equ	0xFDF
 28135                           postinc2	equ	0xFDE
 28136                           postdec2	equ	0xFDD
 28137                           plusw2	equ	0xFDB
 28138                           fsr2h	equ	0xFDA
 28139                           fsr2l	equ	0xFD9
 28140                           status	equ	0xFD8
 28141                           
 28142 ;; *************** function __display_search *****************
 28143 ;; Defined at:
 28144 ;;		line 483 in file "display.c"
 28145 ;; Parameters:    Size  Location     Type
 28146 ;;		None
 28147 ;; Auto vars:     Size  Location     Type
 28148 ;;  cntr            1    0[COMRAM] unsigned char 
 28149 ;; Return value:  Size  Location     Type
 28150 ;;                  1    wreg      void 
 28151 ;; Registers used:
 28152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28153 ;; Tracked objects:
 28154 ;;		On entry : 0/0
 28155 ;;		On exit  : 0/0
 28156 ;;		Unchanged: 0/0
 28157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28161 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28162 ;;Total ram usage:        1 bytes
 28163 ;; Hardware stack levels used:    1
 28164 ;; This function calls:
 28165 ;;		Nothing
 28166 ;; This function is called by:
 28167 ;;		_display_prepare
 28168 ;; This function uses a non-reentrant model
 28169 ;;
 28170                           
 28171                           	psect	text140
 28172  00339C                     __ptext140:
 28173                           	opt stack 0
 28174  00339C                     __display_search:
 28175                           	opt stack 26
 28176                           
 28177                           ;display.c: 485: uint8_t cntr;;display.c: 486: cntr = 0;
 28178                           
 28179                           ;incstack = 0
 28180  00339C  0E00               	movlw	0
 28181  00339E  6E01               	movwf	__display_search@cntr,c
 28182                           
 28183                           ;display.c: 487: while(search_line1[cntr])
 28184  0033A0  D017               	goto	l1611
 28185  0033A2                     
 28186                           ;display.c: 488: display_content[0][cntr] = search_line1[cntr++];
 28187  0033A2  5001               	movf	__display_search@cntr,w,c
 28188  0033A4  0D01               	mullw	1
 28189  0033A6  0EB0               	movlw	low _search_line1
 28190  0033A8  24F3               	addwf	prodl,w,c
 28191  0033AA  6EF6               	movwf	tblptrl,c
 28192  0033AC  0E8D               	movlw	high _search_line1
 28193  0033AE  20F4               	addwfc	prodh,w,c
 28194  0033B0  6EF7               	movwf	tblptrh,c
 28195  0033B2                     	if	1	;There are 3 active tblptr bytes
 28196  0033B2  6AF8               	clrf	tblptru,c
 28197  0033B4  0E00               	movlw	low (__mediumconst shr (0+16))
 28198  0033B6  22F8               	addwfc	tblptru,f,c
 28199  0033B8                     	endif
 28200  0033B8  5001               	movf	__display_search@cntr,w,c
 28201  0033BA  0D01               	mullw	1
 28202  0033BC  0E7B               	movlw	low _display_content
 28203  0033BE  24F3               	addwf	prodl,w,c
 28204  0033C0  6ED9               	movwf	fsr2l,c
 28205  0033C2  0E01               	movlw	high _display_content
 28206  0033C4  20F4               	addwfc	prodh,w,c
 28207  0033C6  6EDA               	movwf	fsr2h,c
 28208  0033C8  0008               	tblrd		*
 28209  0033CA  CFF5 FFDF          	movff	tablat,indf2
 28210  0033CE  2A01               	incf	__display_search@cntr,f,c
 28211  0033D0                     l1611:
 28212  0033D0  5001               	movf	__display_search@cntr,w,c
 28213  0033D2  0D01               	mullw	1
 28214  0033D4  0EB0               	movlw	low _search_line1
 28215  0033D6  24F3               	addwf	prodl,w,c
 28216  0033D8  6EF6               	movwf	tblptrl,c
 28217  0033DA  0E8D               	movlw	high _search_line1
 28218  0033DC  20F4               	addwfc	prodh,w,c
 28219  0033DE  6EF7               	movwf	tblptrh,c
 28220  0033E0                     	if	1	;There are 3 active tblptr bytes
 28221  0033E0  6AF8               	clrf	tblptru,c
 28222  0033E2  0E00               	movlw	low (__mediumconst shr (0+16))
 28223  0033E4  22F8               	addwfc	tblptru,f,c
 28224  0033E6                     	endif
 28225  0033E6  0008               	tblrd		*
 28226  0033E8  50F5               	movf	tablat,w,c
 28227  0033EA  0900               	iorlw	0
 28228  0033EC  A4D8               	btfss	status,2,c
 28229  0033EE  D7D9               	goto	l1612
 28230                           
 28231                           ;display.c: 489: cntr = 0;
 28232  0033F0  0E00               	movlw	0
 28233  0033F2  6E01               	movwf	__display_search@cntr,c
 28234                           
 28235                           ;display.c: 490: while(search_line2[cntr])
 28236  0033F4  D017               	goto	l1614
 28237  0033F6                     
 28238                           ;display.c: 491: display_content[1][cntr] = search_line2[cntr++];
 28239  0033F6  5001               	movf	__display_search@cntr,w,c
 28240  0033F8  0D01               	mullw	1
 28241  0033FA  0EEF               	movlw	low _search_line2
 28242  0033FC  24F3               	addwf	prodl,w,c
 28243  0033FE  6EF6               	movwf	tblptrl,c
 28244  003400  0E8C               	movlw	high _search_line2
 28245  003402  20F4               	addwfc	prodh,w,c
 28246  003404  6EF7               	movwf	tblptrh,c
 28247  003406                     	if	1	;There are 3 active tblptr bytes
 28248  003406  6AF8               	clrf	tblptru,c
 28249  003408  0E00               	movlw	low (__mediumconst shr (0+16))
 28250  00340A  22F8               	addwfc	tblptru,f,c
 28251  00340C                     	endif
 28252  00340C  5001               	movf	__display_search@cntr,w,c
 28253  00340E  0D01               	mullw	1
 28254  003410  0E8F               	movlw	low (_display_content+20)
 28255  003412  24F3               	addwf	prodl,w,c
 28256  003414  6ED9               	movwf	fsr2l,c
 28257  003416  0E01               	movlw	high (_display_content+20)
 28258  003418  20F4               	addwfc	prodh,w,c
 28259  00341A  6EDA               	movwf	fsr2h,c
 28260  00341C  0008               	tblrd		*
 28261  00341E  CFF5 FFDF          	movff	tablat,indf2
 28262  003422  2A01               	incf	__display_search@cntr,f,c
 28263  003424                     l1614:
 28264  003424  5001               	movf	__display_search@cntr,w,c
 28265  003426  0D01               	mullw	1
 28266  003428  0EEF               	movlw	low _search_line2
 28267  00342A  24F3               	addwf	prodl,w,c
 28268  00342C  6EF6               	movwf	tblptrl,c
 28269  00342E  0E8C               	movlw	high _search_line2
 28270  003430  20F4               	addwfc	prodh,w,c
 28271  003432  6EF7               	movwf	tblptrh,c
 28272  003434                     	if	1	;There are 3 active tblptr bytes
 28273  003434  6AF8               	clrf	tblptru,c
 28274  003436  0E00               	movlw	low (__mediumconst shr (0+16))
 28275  003438  22F8               	addwfc	tblptru,f,c
 28276  00343A                     	endif
 28277  00343A  0008               	tblrd		*
 28278  00343C  50F5               	movf	tablat,w,c
 28279  00343E  0900               	iorlw	0
 28280  003440  A4D8               	btfss	status,2,c
 28281  003442  D7D9               	goto	l1615
 28282                           
 28283                           ;display.c: 492: cntr = 0;
 28284  003444  0E00               	movlw	0
 28285  003446  6E01               	movwf	__display_search@cntr,c
 28286                           
 28287                           ;display.c: 493: while(search_line3[cntr])
 28288  003448  D017               	goto	l1617
 28289  00344A                     
 28290                           ;display.c: 494: display_content[2][cntr] = search_line3[cntr++];
 28291  00344A  5001               	movf	__display_search@cntr,w,c
 28292  00344C  0D01               	mullw	1
 28293  00344E  0E6E               	movlw	low _search_line3
 28294  003450  24F3               	addwf	prodl,w,c
 28295  003452  6EF6               	movwf	tblptrl,c
 28296  003454  0E8C               	movlw	high _search_line3
 28297  003456  20F4               	addwfc	prodh,w,c
 28298  003458  6EF7               	movwf	tblptrh,c
 28299  00345A                     	if	1	;There are 3 active tblptr bytes
 28300  00345A  6AF8               	clrf	tblptru,c
 28301  00345C  0E00               	movlw	low (__mediumconst shr (0+16))
 28302  00345E  22F8               	addwfc	tblptru,f,c
 28303  003460                     	endif
 28304  003460  5001               	movf	__display_search@cntr,w,c
 28305  003462  0D01               	mullw	1
 28306  003464  0EA3               	movlw	low (_display_content+40)
 28307  003466  24F3               	addwf	prodl,w,c
 28308  003468  6ED9               	movwf	fsr2l,c
 28309  00346A  0E01               	movlw	high (_display_content+40)
 28310  00346C  20F4               	addwfc	prodh,w,c
 28311  00346E  6EDA               	movwf	fsr2h,c
 28312  003470  0008               	tblrd		*
 28313  003472  CFF5 FFDF          	movff	tablat,indf2
 28314  003476  2A01               	incf	__display_search@cntr,f,c
 28315  003478                     l1617:
 28316  003478  5001               	movf	__display_search@cntr,w,c
 28317  00347A  0D01               	mullw	1
 28318  00347C  0E6E               	movlw	low _search_line3
 28319  00347E  24F3               	addwf	prodl,w,c
 28320  003480  6EF6               	movwf	tblptrl,c
 28321  003482  0E8C               	movlw	high _search_line3
 28322  003484  20F4               	addwfc	prodh,w,c
 28323  003486  6EF7               	movwf	tblptrh,c
 28324  003488                     	if	1	;There are 3 active tblptr bytes
 28325  003488  6AF8               	clrf	tblptru,c
 28326  00348A  0E00               	movlw	low (__mediumconst shr (0+16))
 28327  00348C  22F8               	addwfc	tblptru,f,c
 28328  00348E                     	endif
 28329  00348E  0008               	tblrd		*
 28330  003490  50F5               	movf	tablat,w,c
 28331  003492  0900               	iorlw	0
 28332  003494  A4D8               	btfss	status,2,c
 28333  003496  D7D9               	goto	l1618
 28334                           
 28335                           ;display.c: 495: cntr = 0;
 28336  003498  0E00               	movlw	0
 28337  00349A  6E01               	movwf	__display_search@cntr,c
 28338                           
 28339                           ;display.c: 496: while(search_line4[cntr])
 28340  00349C  D017               	goto	l1620
 28341  00349E                     
 28342                           ;display.c: 497: display_content[3][cntr] = search_line4[cntr++];
 28343  00349E  5001               	movf	__display_search@cntr,w,c
 28344  0034A0  0D01               	mullw	1
 28345  0034A2  0E2F               	movlw	low _search_line4
 28346  0034A4  24F3               	addwf	prodl,w,c
 28347  0034A6  6EF6               	movwf	tblptrl,c
 28348  0034A8  0E8E               	movlw	high _search_line4
 28349  0034AA  20F4               	addwfc	prodh,w,c
 28350  0034AC  6EF7               	movwf	tblptrh,c
 28351  0034AE                     	if	1	;There are 3 active tblptr bytes
 28352  0034AE  6AF8               	clrf	tblptru,c
 28353  0034B0  0E00               	movlw	low (__mediumconst shr (0+16))
 28354  0034B2  22F8               	addwfc	tblptru,f,c
 28355  0034B4                     	endif
 28356  0034B4  5001               	movf	__display_search@cntr,w,c
 28357  0034B6  0D01               	mullw	1
 28358  0034B8  0EB7               	movlw	low (_display_content+60)
 28359  0034BA  24F3               	addwf	prodl,w,c
 28360  0034BC  6ED9               	movwf	fsr2l,c
 28361  0034BE  0E01               	movlw	high (_display_content+60)
 28362  0034C0  20F4               	addwfc	prodh,w,c
 28363  0034C2  6EDA               	movwf	fsr2h,c
 28364  0034C4  0008               	tblrd		*
 28365  0034C6  CFF5 FFDF          	movff	tablat,indf2
 28366  0034CA  2A01               	incf	__display_search@cntr,f,c
 28367  0034CC                     l1620:
 28368  0034CC  5001               	movf	__display_search@cntr,w,c
 28369  0034CE  0D01               	mullw	1
 28370  0034D0  0E2F               	movlw	low _search_line4
 28371  0034D2  24F3               	addwf	prodl,w,c
 28372  0034D4  6EF6               	movwf	tblptrl,c
 28373  0034D6  0E8E               	movlw	high _search_line4
 28374  0034D8  20F4               	addwfc	prodh,w,c
 28375  0034DA  6EF7               	movwf	tblptrh,c
 28376  0034DC                     	if	1	;There are 3 active tblptr bytes
 28377  0034DC  6AF8               	clrf	tblptru,c
 28378  0034DE  0E00               	movlw	low (__mediumconst shr (0+16))
 28379  0034E0  22F8               	addwfc	tblptru,f,c
 28380  0034E2                     	endif
 28381  0034E2  0008               	tblrd		*
 28382  0034E4  50F5               	movf	tablat,w,c
 28383  0034E6  0900               	iorlw	0
 28384  0034E8  B4D8               	btfsc	status,2,c
 28385  0034EA  0012               	return	
 28386  0034EC  D7D8               	goto	l1621
 28387  0034EE                     __end_of__display_search:
 28388                           	opt stack 0
 28389                           tosu	equ	0xFFF
 28390                           tosh	equ	0xFFE
 28391                           tosl	equ	0xFFD
 28392                           pclath	equ	0xFFA
 28393                           tblptru	equ	0xFF8
 28394                           tblptrh	equ	0xFF7
 28395                           tblptrl	equ	0xFF6
 28396                           tablat	equ	0xFF5
 28397                           prodh	equ	0xFF4
 28398                           prodl	equ	0xFF3
 28399                           intcon	equ	0xFF2
 28400                           intcon3	equ	0xFF0
 28401                           indf0	equ	0xFEF
 28402                           postinc0	equ	0xFEE
 28403                           fsr0h	equ	0xFEA
 28404                           fsr0l	equ	0xFE9
 28405                           wreg	equ	0xFE8
 28406                           indf1	equ	0xFE7
 28407                           postdec1	equ	0xFE5
 28408                           plusw1	equ	0xFE3
 28409                           fsr1h	equ	0xFE2
 28410                           fsr1l	equ	0xFE1
 28411                           indf2	equ	0xFDF
 28412                           postinc2	equ	0xFDE
 28413                           postdec2	equ	0xFDD
 28414                           plusw2	equ	0xFDB
 28415                           fsr2h	equ	0xFDA
 28416                           fsr2l	equ	0xFD9
 28417                           status	equ	0xFD8
 28418                           
 28419 ;; *************** function __display_rebooting *****************
 28420 ;; Defined at:
 28421 ;;		line 656 in file "display.c"
 28422 ;; Parameters:    Size  Location     Type
 28423 ;;		None
 28424 ;; Auto vars:     Size  Location     Type
 28425 ;;  cntr            1    0[COMRAM] unsigned char 
 28426 ;; Return value:  Size  Location     Type
 28427 ;;                  1    wreg      void 
 28428 ;; Registers used:
 28429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28430 ;; Tracked objects:
 28431 ;;		On entry : 0/0
 28432 ;;		On exit  : 0/0
 28433 ;;		Unchanged: 0/0
 28434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28438 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28439 ;;Total ram usage:        1 bytes
 28440 ;; Hardware stack levels used:    1
 28441 ;; This function calls:
 28442 ;;		Nothing
 28443 ;; This function is called by:
 28444 ;;		_display_prepare
 28445 ;; This function uses a non-reentrant model
 28446 ;;
 28447                           
 28448                           	psect	text141
 28449  00670C                     __ptext141:
 28450                           	opt stack 0
 28451  00670C                     __display_rebooting:
 28452                           	opt stack 26
 28453                           
 28454                           ;display.c: 658: uint8_t cntr;;display.c: 659: cntr = 0;
 28455                           
 28456                           ;incstack = 0
 28457  00670C  0E00               	movlw	0
 28458  00670E  6E01               	movwf	__display_rebooting@cntr,c
 28459                           
 28460                           ;display.c: 660: while(reboot_line1[cntr])
 28461  006710  D017               	goto	l1735
 28462  006712                     
 28463                           ;display.c: 661: display_content[0][cntr] = reboot_line1[cntr++];
 28464  006712  5001               	movf	__display_rebooting@cntr,w,c
 28465  006714  0D01               	mullw	1
 28466  006716  0E0B               	movlw	low _reboot_line1
 28467  006718  24F3               	addwf	prodl,w,c
 28468  00671A  6EF6               	movwf	tblptrl,c
 28469  00671C  0E8E               	movlw	high _reboot_line1
 28470  00671E  20F4               	addwfc	prodh,w,c
 28471  006720  6EF7               	movwf	tblptrh,c
 28472  006722                     	if	1	;There are 3 active tblptr bytes
 28473  006722  6AF8               	clrf	tblptru,c
 28474  006724  0E00               	movlw	low (__mediumconst shr (0+16))
 28475  006726  22F8               	addwfc	tblptru,f,c
 28476  006728                     	endif
 28477  006728  5001               	movf	__display_rebooting@cntr,w,c
 28478  00672A  0D01               	mullw	1
 28479  00672C  0E7B               	movlw	low _display_content
 28480  00672E  24F3               	addwf	prodl,w,c
 28481  006730  6ED9               	movwf	fsr2l,c
 28482  006732  0E01               	movlw	high _display_content
 28483  006734  20F4               	addwfc	prodh,w,c
 28484  006736  6EDA               	movwf	fsr2h,c
 28485  006738  0008               	tblrd		*
 28486  00673A  CFF5 FFDF          	movff	tablat,indf2
 28487  00673E  2A01               	incf	__display_rebooting@cntr,f,c
 28488  006740                     l1735:
 28489  006740  5001               	movf	__display_rebooting@cntr,w,c
 28490  006742  0D01               	mullw	1
 28491  006744  0E0B               	movlw	low _reboot_line1
 28492  006746  24F3               	addwf	prodl,w,c
 28493  006748  6EF6               	movwf	tblptrl,c
 28494  00674A  0E8E               	movlw	high _reboot_line1
 28495  00674C  20F4               	addwfc	prodh,w,c
 28496  00674E  6EF7               	movwf	tblptrh,c
 28497  006750                     	if	1	;There are 3 active tblptr bytes
 28498  006750  6AF8               	clrf	tblptru,c
 28499  006752  0E00               	movlw	low (__mediumconst shr (0+16))
 28500  006754  22F8               	addwfc	tblptru,f,c
 28501  006756                     	endif
 28502  006756  0008               	tblrd		*
 28503  006758  50F5               	movf	tablat,w,c
 28504  00675A  0900               	iorlw	0
 28505  00675C  B4D8               	btfsc	status,2,c
 28506  00675E  0012               	return	
 28507  006760  D7D8               	goto	l1736
 28508  006762                     __end_of__display_rebooting:
 28509                           	opt stack 0
 28510                           tosu	equ	0xFFF
 28511                           tosh	equ	0xFFE
 28512                           tosl	equ	0xFFD
 28513                           pclath	equ	0xFFA
 28514                           tblptru	equ	0xFF8
 28515                           tblptrh	equ	0xFF7
 28516                           tblptrl	equ	0xFF6
 28517                           tablat	equ	0xFF5
 28518                           prodh	equ	0xFF4
 28519                           prodl	equ	0xFF3
 28520                           intcon	equ	0xFF2
 28521                           intcon3	equ	0xFF0
 28522                           indf0	equ	0xFEF
 28523                           postinc0	equ	0xFEE
 28524                           fsr0h	equ	0xFEA
 28525                           fsr0l	equ	0xFE9
 28526                           wreg	equ	0xFE8
 28527                           indf1	equ	0xFE7
 28528                           postdec1	equ	0xFE5
 28529                           plusw1	equ	0xFE3
 28530                           fsr1h	equ	0xFE2
 28531                           fsr1l	equ	0xFE1
 28532                           indf2	equ	0xFDF
 28533                           postinc2	equ	0xFDE
 28534                           postdec2	equ	0xFDD
 28535                           plusw2	equ	0xFDB
 28536                           fsr2h	equ	0xFDA
 28537                           fsr2l	equ	0xFD9
 28538                           status	equ	0xFD8
 28539                           
 28540 ;; *************** function __display_programming *****************
 28541 ;; Defined at:
 28542 ;;		line 614 in file "display.c"
 28543 ;; Parameters:    Size  Location     Type
 28544 ;;		None
 28545 ;; Auto vars:     Size  Location     Type
 28546 ;;  cntr            1   28[COMRAM] unsigned char 
 28547 ;; Return value:  Size  Location     Type
 28548 ;;                  1    wreg      void 
 28549 ;; Registers used:
 28550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28551 ;; Tracked objects:
 28552 ;;		On entry : 0/0
 28553 ;;		On exit  : 0/0
 28554 ;;		Unchanged: 0/0
 28555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28560 ;;Total ram usage:        1 bytes
 28561 ;; Hardware stack levels used:    1
 28562 ;; Hardware stack levels required when called:    4
 28563 ;; This function calls:
 28564 ;;		__display_itoa_u16
 28565 ;;		_bootloader_get_entries
 28566 ;;		_bootloader_get_flashPagesWritten
 28567 ;;		_bootloader_get_total_entries
 28568 ;; This function is called by:
 28569 ;;		_display_prepare
 28570 ;; This function uses a non-reentrant model
 28571 ;;
 28572                           
 28573                           	psect	text142
 28574  0027B8                     __ptext142:
 28575                           	opt stack 0
 28576  0027B8                     __display_programming:
 28577                           	opt stack 22
 28578                           
 28579                           ;display.c: 616: uint8_t cntr;;display.c: 617: cntr = 0;
 28580                           
 28581                           ;incstack = 0
 28582  0027B8  0E00               	movlw	0
 28583  0027BA  6E1D               	movwf	__display_programming@cntr,c
 28584                           
 28585                           ;display.c: 618: while(programming_line1[cntr])
 28586  0027BC  D017               	goto	l1705
 28587  0027BE                     
 28588                           ;display.c: 619: display_content[0][cntr] = programming_line1[cntr++];
 28589  0027BE  501D               	movf	__display_programming@cntr,w,c
 28590  0027C0  0D01               	mullw	1
 28591  0027C2  0E60               	movlw	low _programming_line1
 28592  0027C4  24F3               	addwf	prodl,w,c
 28593  0027C6  6EF6               	movwf	tblptrl,c
 28594  0027C8  0E8D               	movlw	high _programming_line1
 28595  0027CA  20F4               	addwfc	prodh,w,c
 28596  0027CC  6EF7               	movwf	tblptrh,c
 28597  0027CE                     	if	1	;There are 3 active tblptr bytes
 28598  0027CE  6AF8               	clrf	tblptru,c
 28599  0027D0  0E00               	movlw	low (__mediumconst shr (0+16))
 28600  0027D2  22F8               	addwfc	tblptru,f,c
 28601  0027D4                     	endif
 28602  0027D4  501D               	movf	__display_programming@cntr,w,c
 28603  0027D6  0D01               	mullw	1
 28604  0027D8  0E7B               	movlw	low _display_content
 28605  0027DA  24F3               	addwf	prodl,w,c
 28606  0027DC  6ED9               	movwf	fsr2l,c
 28607  0027DE  0E01               	movlw	high _display_content
 28608  0027E0  20F4               	addwfc	prodh,w,c
 28609  0027E2  6EDA               	movwf	fsr2h,c
 28610  0027E4  0008               	tblrd		*
 28611  0027E6  CFF5 FFDF          	movff	tablat,indf2
 28612  0027EA  2A1D               	incf	__display_programming@cntr,f,c
 28613  0027EC                     l1705:
 28614  0027EC  501D               	movf	__display_programming@cntr,w,c
 28615  0027EE  0D01               	mullw	1
 28616  0027F0  0E60               	movlw	low _programming_line1
 28617  0027F2  24F3               	addwf	prodl,w,c
 28618  0027F4  6EF6               	movwf	tblptrl,c
 28619  0027F6  0E8D               	movlw	high _programming_line1
 28620  0027F8  20F4               	addwfc	prodh,w,c
 28621  0027FA  6EF7               	movwf	tblptrh,c
 28622  0027FC                     	if	1	;There are 3 active tblptr bytes
 28623  0027FC  6AF8               	clrf	tblptru,c
 28624  0027FE  0E00               	movlw	low (__mediumconst shr (0+16))
 28625  002800  22F8               	addwfc	tblptru,f,c
 28626  002802                     	endif
 28627  002802  0008               	tblrd		*
 28628  002804  50F5               	movf	tablat,w,c
 28629  002806  0900               	iorlw	0
 28630  002808  A4D8               	btfss	status,2,c
 28631  00280A  D7D9               	goto	l1706
 28632                           
 28633                           ;display.c: 621: cntr = 0;
 28634  00280C  0E00               	movlw	0
 28635  00280E  6E1D               	movwf	__display_programming@cntr,c
 28636                           
 28637                           ;display.c: 622: while(programming_line2[cntr])
 28638  002810  D017               	goto	l1708
 28639  002812                     
 28640                           ;display.c: 623: display_content[1][cntr] = programming_line2[cntr++];
 28641  002812  501D               	movf	__display_programming@cntr,w,c
 28642  002814  0D01               	mullw	1
 28643  002816  0EA8               	movlw	low _programming_line2
 28644  002818  24F3               	addwf	prodl,w,c
 28645  00281A  6EF6               	movwf	tblptrl,c
 28646  00281C  0E8C               	movlw	high _programming_line2
 28647  00281E  20F4               	addwfc	prodh,w,c
 28648  002820  6EF7               	movwf	tblptrh,c
 28649  002822                     	if	1	;There are 3 active tblptr bytes
 28650  002822  6AF8               	clrf	tblptru,c
 28651  002824  0E00               	movlw	low (__mediumconst shr (0+16))
 28652  002826  22F8               	addwfc	tblptru,f,c
 28653  002828                     	endif
 28654  002828  501D               	movf	__display_programming@cntr,w,c
 28655  00282A  0D01               	mullw	1
 28656  00282C  0E8F               	movlw	low (_display_content+20)
 28657  00282E  24F3               	addwf	prodl,w,c
 28658  002830  6ED9               	movwf	fsr2l,c
 28659  002832  0E01               	movlw	high (_display_content+20)
 28660  002834  20F4               	addwfc	prodh,w,c
 28661  002836  6EDA               	movwf	fsr2h,c
 28662  002838  0008               	tblrd		*
 28663  00283A  CFF5 FFDF          	movff	tablat,indf2
 28664  00283E  2A1D               	incf	__display_programming@cntr,f,c
 28665  002840                     l1708:
 28666  002840  501D               	movf	__display_programming@cntr,w,c
 28667  002842  0D01               	mullw	1
 28668  002844  0EA8               	movlw	low _programming_line2
 28669  002846  24F3               	addwf	prodl,w,c
 28670  002848  6EF6               	movwf	tblptrl,c
 28671  00284A  0E8C               	movlw	high _programming_line2
 28672  00284C  20F4               	addwfc	prodh,w,c
 28673  00284E  6EF7               	movwf	tblptrh,c
 28674  002850                     	if	1	;There are 3 active tblptr bytes
 28675  002850  6AF8               	clrf	tblptru,c
 28676  002852  0E00               	movlw	low (__mediumconst shr (0+16))
 28677  002854  22F8               	addwfc	tblptru,f,c
 28678  002856                     	endif
 28679  002856  0008               	tblrd		*
 28680  002858  50F5               	movf	tablat,w,c
 28681  00285A  0900               	iorlw	0
 28682  00285C  A4D8               	btfss	status,2,c
 28683  00285E  D7D9               	goto	l1709
 28684                           
 28685                           ;display.c: 625: cntr = 0;
 28686  002860  0E00               	movlw	0
 28687  002862  6E1D               	movwf	__display_programming@cntr,c
 28688                           
 28689                           ;display.c: 626: while(programming_line3[cntr])
 28690  002864  D017               	goto	l1711
 28691  002866                     
 28692                           ;display.c: 627: display_content[2][cntr] = programming_line3[cntr++];
 28693  002866  501D               	movf	__display_programming@cntr,w,c
 28694  002868  0D01               	mullw	1
 28695  00286A  0E59               	movlw	low _programming_line3
 28696  00286C  24F3               	addwf	prodl,w,c
 28697  00286E  6EF6               	movwf	tblptrl,c
 28698  002870  0E8E               	movlw	high _programming_line3
 28699  002872  20F4               	addwfc	prodh,w,c
 28700  002874  6EF7               	movwf	tblptrh,c
 28701  002876                     	if	1	;There are 3 active tblptr bytes
 28702  002876  6AF8               	clrf	tblptru,c
 28703  002878  0E00               	movlw	low (__mediumconst shr (0+16))
 28704  00287A  22F8               	addwfc	tblptru,f,c
 28705  00287C                     	endif
 28706  00287C  501D               	movf	__display_programming@cntr,w,c
 28707  00287E  0D01               	mullw	1
 28708  002880  0EA3               	movlw	low (_display_content+40)
 28709  002882  24F3               	addwf	prodl,w,c
 28710  002884  6ED9               	movwf	fsr2l,c
 28711  002886  0E01               	movlw	high (_display_content+40)
 28712  002888  20F4               	addwfc	prodh,w,c
 28713  00288A  6EDA               	movwf	fsr2h,c
 28714  00288C  0008               	tblrd		*
 28715  00288E  CFF5 FFDF          	movff	tablat,indf2
 28716  002892  2A1D               	incf	__display_programming@cntr,f,c
 28717  002894                     l1711:
 28718  002894  501D               	movf	__display_programming@cntr,w,c
 28719  002896  0D01               	mullw	1
 28720  002898  0E59               	movlw	low _programming_line3
 28721  00289A  24F3               	addwf	prodl,w,c
 28722  00289C  6EF6               	movwf	tblptrl,c
 28723  00289E  0E8E               	movlw	high _programming_line3
 28724  0028A0  20F4               	addwfc	prodh,w,c
 28725  0028A2  6EF7               	movwf	tblptrh,c
 28726  0028A4                     	if	1	;There are 3 active tblptr bytes
 28727  0028A4  6AF8               	clrf	tblptru,c
 28728  0028A6  0E00               	movlw	low (__mediumconst shr (0+16))
 28729  0028A8  22F8               	addwfc	tblptru,f,c
 28730  0028AA                     	endif
 28731  0028AA  0008               	tblrd		*
 28732  0028AC  50F5               	movf	tablat,w,c
 28733  0028AE  0900               	iorlw	0
 28734  0028B0  A4D8               	btfss	status,2,c
 28735  0028B2  D7D9               	goto	l1712
 28736                           
 28737                           ;display.c: 628: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28738  0028B4  EC2A  F03A         	call	_bootloader_get_entries	;wreg free
 28739  0028B8  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28740  0028BC  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28741  0028C0  501D               	movf	__display_programming@cntr,w,c
 28742  0028C2  0D01               	mullw	1
 28743  0028C4  0EA3               	movlw	low (_display_content+40)
 28744  0028C6  24F3               	addwf	prodl,w,c
 28745  0028C8  6E1B               	movwf	__display_itoa_u16@text,c
 28746  0028CA  0E01               	movlw	high (_display_content+40)
 28747  0028CC  20F4               	addwfc	prodh,w,c
 28748  0028CE  6E1C               	movwf	__display_itoa_u16@text+1,c
 28749  0028D0  EC9C  F028         	call	__display_itoa_u16	;wreg free
 28750  0028D4  261D               	addwf	__display_programming@cntr,f,c
 28751                           
 28752                           ;display.c: 629: display_content[2][cntr++] = '/';
 28753  0028D6  501D               	movf	__display_programming@cntr,w,c
 28754  0028D8  0D01               	mullw	1
 28755  0028DA  0EA3               	movlw	low (_display_content+40)
 28756  0028DC  24F3               	addwf	prodl,w,c
 28757  0028DE  6ED9               	movwf	fsr2l,c
 28758  0028E0  0E01               	movlw	high (_display_content+40)
 28759  0028E2  20F4               	addwfc	prodh,w,c
 28760  0028E4  6EDA               	movwf	fsr2h,c
 28761  0028E6  0E2F               	movlw	47
 28762  0028E8  6EDF               	movwf	indf2,c
 28763  0028EA  2A1D               	incf	__display_programming@cntr,f,c
 28764                           
 28765                           ;display.c: 630: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28766  0028EC  EC34  F03A         	call	_bootloader_get_total_entries	;wreg free
 28767  0028F0  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28768  0028F4  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28769  0028F8  501D               	movf	__display_programming@cntr,w,c
 28770  0028FA  0D01               	mullw	1
 28771  0028FC  0EA3               	movlw	low (_display_content+40)
 28772  0028FE  24F3               	addwf	prodl,w,c
 28773  002900  6E1B               	movwf	__display_itoa_u16@text,c
 28774  002902  0E01               	movlw	high (_display_content+40)
 28775  002904  20F4               	addwfc	prodh,w,c
 28776  002906  6E1C               	movwf	__display_itoa_u16@text+1,c
 28777  002908  EC9C  F028         	call	__display_itoa_u16	;wreg free
 28778                           
 28779                           ;display.c: 632: cntr = 0;
 28780  00290C  0E00               	movlw	0
 28781  00290E  6E1D               	movwf	__display_programming@cntr,c
 28782                           
 28783                           ;display.c: 633: while(programming_line4[cntr])
 28784  002910  D017               	goto	l1714
 28785  002912                     
 28786                           ;display.c: 634: display_content[3][cntr] = programming_line4[cntr++];
 28787  002912  501D               	movf	__display_programming@cntr,w,c
 28788  002914  0D01               	mullw	1
 28789  002916  0E50               	movlw	low _programming_line4
 28790  002918  24F3               	addwf	prodl,w,c
 28791  00291A  6EF6               	movwf	tblptrl,c
 28792  00291C  0E8D               	movlw	high _programming_line4
 28793  00291E  20F4               	addwfc	prodh,w,c
 28794  002920  6EF7               	movwf	tblptrh,c
 28795  002922                     	if	1	;There are 3 active tblptr bytes
 28796  002922  6AF8               	clrf	tblptru,c
 28797  002924  0E00               	movlw	low (__mediumconst shr (0+16))
 28798  002926  22F8               	addwfc	tblptru,f,c
 28799  002928                     	endif
 28800  002928  501D               	movf	__display_programming@cntr,w,c
 28801  00292A  0D01               	mullw	1
 28802  00292C  0EB7               	movlw	low (_display_content+60)
 28803  00292E  24F3               	addwf	prodl,w,c
 28804  002930  6ED9               	movwf	fsr2l,c
 28805  002932  0E01               	movlw	high (_display_content+60)
 28806  002934  20F4               	addwfc	prodh,w,c
 28807  002936  6EDA               	movwf	fsr2h,c
 28808  002938  0008               	tblrd		*
 28809  00293A  CFF5 FFDF          	movff	tablat,indf2
 28810  00293E  2A1D               	incf	__display_programming@cntr,f,c
 28811  002940                     l1714:
 28812  002940  501D               	movf	__display_programming@cntr,w,c
 28813  002942  0D01               	mullw	1
 28814  002944  0E50               	movlw	low _programming_line4
 28815  002946  24F3               	addwf	prodl,w,c
 28816  002948  6EF6               	movwf	tblptrl,c
 28817  00294A  0E8D               	movlw	high _programming_line4
 28818  00294C  20F4               	addwfc	prodh,w,c
 28819  00294E  6EF7               	movwf	tblptrh,c
 28820  002950                     	if	1	;There are 3 active tblptr bytes
 28821  002950  6AF8               	clrf	tblptru,c
 28822  002952  0E00               	movlw	low (__mediumconst shr (0+16))
 28823  002954  22F8               	addwfc	tblptru,f,c
 28824  002956                     	endif
 28825  002956  0008               	tblrd		*
 28826  002958  50F5               	movf	tablat,w,c
 28827  00295A  0900               	iorlw	0
 28828  00295C  A4D8               	btfss	status,2,c
 28829  00295E  D7D9               	goto	l1715
 28830                           
 28831                           ;display.c: 635: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28832  002960  EC2F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 28833  002964  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28834  002968  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28835  00296C  501D               	movf	__display_programming@cntr,w,c
 28836  00296E  0D01               	mullw	1
 28837  002970  0EB7               	movlw	low (_display_content+60)
 28838  002972  24F3               	addwf	prodl,w,c
 28839  002974  6E1B               	movwf	__display_itoa_u16@text,c
 28840  002976  0E01               	movlw	high (_display_content+60)
 28841  002978  20F4               	addwfc	prodh,w,c
 28842  00297A  6E1C               	movwf	__display_itoa_u16@text+1,c
 28843  00297C  EC9C  F028         	call	__display_itoa_u16	;wreg free
 28844  002980  0012               	return		;funcret
 28845  002982                     __end_of__display_programming:
 28846                           	opt stack 0
 28847                           tosu	equ	0xFFF
 28848                           tosh	equ	0xFFE
 28849                           tosl	equ	0xFFD
 28850                           pclath	equ	0xFFA
 28851                           tblptru	equ	0xFF8
 28852                           tblptrh	equ	0xFF7
 28853                           tblptrl	equ	0xFF6
 28854                           tablat	equ	0xFF5
 28855                           prodh	equ	0xFF4
 28856                           prodl	equ	0xFF3
 28857                           intcon	equ	0xFF2
 28858                           intcon3	equ	0xFF0
 28859                           indf0	equ	0xFEF
 28860                           postinc0	equ	0xFEE
 28861                           fsr0h	equ	0xFEA
 28862                           fsr0l	equ	0xFE9
 28863                           wreg	equ	0xFE8
 28864                           indf1	equ	0xFE7
 28865                           postdec1	equ	0xFE5
 28866                           plusw1	equ	0xFE3
 28867                           fsr1h	equ	0xFE2
 28868                           fsr1l	equ	0xFE1
 28869                           indf2	equ	0xFDF
 28870                           postinc2	equ	0xFDE
 28871                           postdec2	equ	0xFDD
 28872                           plusw2	equ	0xFDB
 28873                           fsr2h	equ	0xFDA
 28874                           fsr2l	equ	0xFD9
 28875                           status	equ	0xFD8
 28876                           
 28877 ;; *************** function __display_found *****************
 28878 ;; Defined at:
 28879 ;;		line 500 in file "display.c"
 28880 ;; Parameters:    Size  Location     Type
 28881 ;;		None
 28882 ;; Auto vars:     Size  Location     Type
 28883 ;;  cntr            1   24[COMRAM] unsigned char 
 28884 ;;  start           1   23[COMRAM] unsigned char 
 28885 ;; Return value:  Size  Location     Type
 28886 ;;                  1    wreg      void 
 28887 ;; Registers used:
 28888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28889 ;; Tracked objects:
 28890 ;;		On entry : 0/0
 28891 ;;		On exit  : 0/0
 28892 ;;		Unchanged: 0/0
 28893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28897 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28898 ;;Total ram usage:        4 bytes
 28899 ;; Hardware stack levels used:    1
 28900 ;; Hardware stack levels required when called:    2
 28901 ;; This function calls:
 28902 ;;		__display_itoa_u32
 28903 ;;		_bootloader_get_file_size
 28904 ;; This function is called by:
 28905 ;;		_display_prepare
 28906 ;; This function uses a non-reentrant model
 28907 ;;
 28908                           
 28909                           	psect	text143
 28910  00222A                     __ptext143:
 28911                           	opt stack 0
 28912  00222A                     __display_found:
 28913                           	opt stack 24
 28914                           
 28915                           ;display.c: 502: uint8_t cntr;;display.c: 503: uint8_t start;;display.c: 505: cntr = 0;
 28916                           
 28917                           ;incstack = 0
 28918  00222A  0E00               	movlw	0
 28919  00222C  6E19               	movwf	__display_found@cntr,c
 28920                           
 28921                           ;display.c: 506: while(found_line1[cntr])
 28922  00222E  D017               	goto	l1626
 28923  002230                     
 28924                           ;display.c: 507: display_content[0][cntr] = found_line1[cntr++];
 28925  002230  5019               	movf	__display_found@cntr,w,c
 28926  002232  0D01               	mullw	1
 28927  002234  0EA0               	movlw	low _found_line1
 28928  002236  24F3               	addwf	prodl,w,c
 28929  002238  6EF6               	movwf	tblptrl,c
 28930  00223A  0E8D               	movlw	high _found_line1
 28931  00223C  20F4               	addwfc	prodh,w,c
 28932  00223E  6EF7               	movwf	tblptrh,c
 28933  002240                     	if	1	;There are 3 active tblptr bytes
 28934  002240  6AF8               	clrf	tblptru,c
 28935  002242  0E00               	movlw	low (__mediumconst shr (0+16))
 28936  002244  22F8               	addwfc	tblptru,f,c
 28937  002246                     	endif
 28938  002246  5019               	movf	__display_found@cntr,w,c
 28939  002248  0D01               	mullw	1
 28940  00224A  0E7B               	movlw	low _display_content
 28941  00224C  24F3               	addwf	prodl,w,c
 28942  00224E  6ED9               	movwf	fsr2l,c
 28943  002250  0E01               	movlw	high _display_content
 28944  002252  20F4               	addwfc	prodh,w,c
 28945  002254  6EDA               	movwf	fsr2h,c
 28946  002256  0008               	tblrd		*
 28947  002258  CFF5 FFDF          	movff	tablat,indf2
 28948  00225C  2A19               	incf	__display_found@cntr,f,c
 28949  00225E                     l1626:
 28950  00225E  5019               	movf	__display_found@cntr,w,c
 28951  002260  0D01               	mullw	1
 28952  002262  0EA0               	movlw	low _found_line1
 28953  002264  24F3               	addwf	prodl,w,c
 28954  002266  6EF6               	movwf	tblptrl,c
 28955  002268  0E8D               	movlw	high _found_line1
 28956  00226A  20F4               	addwfc	prodh,w,c
 28957  00226C  6EF7               	movwf	tblptrh,c
 28958  00226E                     	if	1	;There are 3 active tblptr bytes
 28959  00226E  6AF8               	clrf	tblptru,c
 28960  002270  0E00               	movlw	low (__mediumconst shr (0+16))
 28961  002272  22F8               	addwfc	tblptru,f,c
 28962  002274                     	endif
 28963  002274  0008               	tblrd		*
 28964  002276  50F5               	movf	tablat,w,c
 28965  002278  0900               	iorlw	0
 28966  00227A  A4D8               	btfss	status,2,c
 28967  00227C  D7D9               	goto	l1627
 28968                           
 28969                           ;display.c: 509: cntr = 0;
 28970  00227E  0E00               	movlw	0
 28971  002280  6E19               	movwf	__display_found@cntr,c
 28972                           
 28973                           ;display.c: 510: while(found_line2[cntr])
 28974  002282  D017               	goto	l1629
 28975  002284                     
 28976                           ;display.c: 511: display_content[1][cntr] = found_line2[cntr++];
 28977  002284  5019               	movf	__display_found@cntr,w,c
 28978  002286  0D01               	mullw	1
 28979  002288  0E95               	movlw	low _found_line2
 28980  00228A  24F3               	addwf	prodl,w,c
 28981  00228C  6EF6               	movwf	tblptrl,c
 28982  00228E  0E8C               	movlw	high _found_line2
 28983  002290  20F4               	addwfc	prodh,w,c
 28984  002292  6EF7               	movwf	tblptrh,c
 28985  002294                     	if	1	;There are 3 active tblptr bytes
 28986  002294  6AF8               	clrf	tblptru,c
 28987  002296  0E00               	movlw	low (__mediumconst shr (0+16))
 28988  002298  22F8               	addwfc	tblptru,f,c
 28989  00229A                     	endif
 28990  00229A  5019               	movf	__display_found@cntr,w,c
 28991  00229C  0D01               	mullw	1
 28992  00229E  0E8F               	movlw	low (_display_content+20)
 28993  0022A0  24F3               	addwf	prodl,w,c
 28994  0022A2  6ED9               	movwf	fsr2l,c
 28995  0022A4  0E01               	movlw	high (_display_content+20)
 28996  0022A6  20F4               	addwfc	prodh,w,c
 28997  0022A8  6EDA               	movwf	fsr2h,c
 28998  0022AA  0008               	tblrd		*
 28999  0022AC  CFF5 FFDF          	movff	tablat,indf2
 29000  0022B0  2A19               	incf	__display_found@cntr,f,c
 29001  0022B2                     l1629:
 29002  0022B2  5019               	movf	__display_found@cntr,w,c
 29003  0022B4  0D01               	mullw	1
 29004  0022B6  0E95               	movlw	low _found_line2
 29005  0022B8  24F3               	addwf	prodl,w,c
 29006  0022BA  6EF6               	movwf	tblptrl,c
 29007  0022BC  0E8C               	movlw	high _found_line2
 29008  0022BE  20F4               	addwfc	prodh,w,c
 29009  0022C0  6EF7               	movwf	tblptrh,c
 29010  0022C2                     	if	1	;There are 3 active tblptr bytes
 29011  0022C2  6AF8               	clrf	tblptru,c
 29012  0022C4  0E00               	movlw	low (__mediumconst shr (0+16))
 29013  0022C6  22F8               	addwfc	tblptru,f,c
 29014  0022C8                     	endif
 29015  0022C8  0008               	tblrd		*
 29016  0022CA  50F5               	movf	tablat,w,c
 29017  0022CC  0900               	iorlw	0
 29018  0022CE  A4D8               	btfss	status,2,c
 29019  0022D0  D7D9               	goto	l1630
 29020                           
 29021                           ;display.c: 513: cntr = 0;
 29022  0022D2  0E00               	movlw	0
 29023  0022D4  6E19               	movwf	__display_found@cntr,c
 29024                           
 29025                           ;display.c: 514: while(found_line3[cntr])
 29026  0022D6  D017               	goto	l1632
 29027  0022D8                     
 29028                           ;display.c: 515: display_content[2][cntr] = found_line3[cntr++];
 29029  0022D8  5019               	movf	__display_found@cntr,w,c
 29030  0022DA  0D01               	mullw	1
 29031  0022DC  0E6E               	movlw	low _found_line3
 29032  0022DE  24F3               	addwf	prodl,w,c
 29033  0022E0  6EF6               	movwf	tblptrl,c
 29034  0022E2  0E8E               	movlw	high _found_line3
 29035  0022E4  20F4               	addwfc	prodh,w,c
 29036  0022E6  6EF7               	movwf	tblptrh,c
 29037  0022E8                     	if	1	;There are 3 active tblptr bytes
 29038  0022E8  6AF8               	clrf	tblptru,c
 29039  0022EA  0E00               	movlw	low (__mediumconst shr (0+16))
 29040  0022EC  22F8               	addwfc	tblptru,f,c
 29041  0022EE                     	endif
 29042  0022EE  5019               	movf	__display_found@cntr,w,c
 29043  0022F0  0D01               	mullw	1
 29044  0022F2  0EA3               	movlw	low (_display_content+40)
 29045  0022F4  24F3               	addwf	prodl,w,c
 29046  0022F6  6ED9               	movwf	fsr2l,c
 29047  0022F8  0E01               	movlw	high (_display_content+40)
 29048  0022FA  20F4               	addwfc	prodh,w,c
 29049  0022FC  6EDA               	movwf	fsr2h,c
 29050  0022FE  0008               	tblrd		*
 29051  002300  CFF5 FFDF          	movff	tablat,indf2
 29052  002304  2A19               	incf	__display_found@cntr,f,c
 29053  002306                     l1632:
 29054  002306  5019               	movf	__display_found@cntr,w,c
 29055  002308  0D01               	mullw	1
 29056  00230A  0E6E               	movlw	low _found_line3
 29057  00230C  24F3               	addwf	prodl,w,c
 29058  00230E  6EF6               	movwf	tblptrl,c
 29059  002310  0E8E               	movlw	high _found_line3
 29060  002312  20F4               	addwfc	prodh,w,c
 29061  002314  6EF7               	movwf	tblptrh,c
 29062  002316                     	if	1	;There are 3 active tblptr bytes
 29063  002316  6AF8               	clrf	tblptru,c
 29064  002318  0E00               	movlw	low (__mediumconst shr (0+16))
 29065  00231A  22F8               	addwfc	tblptru,f,c
 29066  00231C                     	endif
 29067  00231C  0008               	tblrd		*
 29068  00231E  50F5               	movf	tablat,w,c
 29069  002320  0900               	iorlw	0
 29070  002322  A4D8               	btfss	status,2,c
 29071  002324  D7D9               	goto	l1633
 29072                           
 29073                           ;display.c: 516: start = _display_itoa_u32(bootloader_get_file_size(), &display_content[
      +                          2][cntr]) + 6;
 29074  002326  ECD5  F039         	call	_bootloader_get_file_size	;wreg free
 29075  00232A  C001  F00E         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29076  00232E  C002  F00F         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29077  002332  C003  F010         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29078  002336  C004  F011         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29079  00233A  5019               	movf	__display_found@cntr,w,c
 29080  00233C  0D01               	mullw	1
 29081  00233E  0EA3               	movlw	low (_display_content+40)
 29082  002340  24F3               	addwf	prodl,w,c
 29083  002342  6E12               	movwf	__display_itoa_u32@text,c
 29084  002344  0E01               	movlw	high (_display_content+40)
 29085  002346  20F4               	addwfc	prodh,w,c
 29086  002348  6E13               	movwf	__display_itoa_u32@text+1,c
 29087  00234A  EC79  F018         	call	__display_itoa_u32	;wreg free
 29088  00234E  0F06               	addlw	6
 29089  002350  6E18               	movwf	__display_found@start,c
 29090                           
 29091                           ;display.c: 517: cntr = 0;
 29092  002352  0E00               	movlw	0
 29093  002354  6E19               	movwf	__display_found@cntr,c
 29094                           
 29095                           ;display.c: 518: while(found_line3b[cntr])
 29096  002356  D01C               	goto	l1635
 29097  002358                     
 29098                           ;display.c: 519: display_content[2][start+cntr] = found_line3b[cntr++];
 29099  002358  5019               	movf	__display_found@cntr,w,c
 29100  00235A  0D01               	mullw	1
 29101  00235C  0E67               	movlw	low _found_line3b
 29102  00235E  24F3               	addwf	prodl,w,c
 29103  002360  6EF6               	movwf	tblptrl,c
 29104  002362  0E8E               	movlw	high _found_line3b
 29105  002364  20F4               	addwfc	prodh,w,c
 29106  002366  6EF7               	movwf	tblptrh,c
 29107  002368                     	if	1	;There are 3 active tblptr bytes
 29108  002368  6AF8               	clrf	tblptru,c
 29109  00236A  0E00               	movlw	low (__mediumconst shr (0+16))
 29110  00236C  22F8               	addwfc	tblptru,f,c
 29111  00236E                     	endif
 29112  00236E  5019               	movf	__display_found@cntr,w,c
 29113  002370  C018  F016         	movff	__display_found@start,??__display_found
 29114  002374  6A17               	clrf	(??__display_found+1)& (0+255),c
 29115  002376  2616               	addwf	??__display_found,f,c
 29116  002378  0E00               	movlw	0
 29117  00237A  2217               	addwfc	??__display_found+1,f,c
 29118  00237C  0EA3               	movlw	low (_display_content+40)
 29119  00237E  2416               	addwf	??__display_found,w,c
 29120  002380  6ED9               	movwf	fsr2l,c
 29121  002382  0E01               	movlw	high (_display_content+40)
 29122  002384  2017               	addwfc	??__display_found+1,w,c
 29123  002386  6EDA               	movwf	fsr2h,c
 29124  002388  0008               	tblrd		*
 29125  00238A  CFF5 FFDF          	movff	tablat,indf2
 29126  00238E  2A19               	incf	__display_found@cntr,f,c
 29127  002390                     l1635:
 29128  002390  5019               	movf	__display_found@cntr,w,c
 29129  002392  0D01               	mullw	1
 29130  002394  0E67               	movlw	low _found_line3b
 29131  002396  24F3               	addwf	prodl,w,c
 29132  002398  6EF6               	movwf	tblptrl,c
 29133  00239A  0E8E               	movlw	high _found_line3b
 29134  00239C  20F4               	addwfc	prodh,w,c
 29135  00239E  6EF7               	movwf	tblptrh,c
 29136  0023A0                     	if	1	;There are 3 active tblptr bytes
 29137  0023A0  6AF8               	clrf	tblptru,c
 29138  0023A2  0E00               	movlw	low (__mediumconst shr (0+16))
 29139  0023A4  22F8               	addwfc	tblptru,f,c
 29140  0023A6                     	endif
 29141  0023A6  0008               	tblrd		*
 29142  0023A8  50F5               	movf	tablat,w,c
 29143  0023AA  0900               	iorlw	0
 29144  0023AC  A4D8               	btfss	status,2,c
 29145  0023AE  D7D4               	goto	l1636
 29146                           
 29147                           ;display.c: 521: cntr = 0;
 29148  0023B0  0E00               	movlw	0
 29149  0023B2  6E19               	movwf	__display_found@cntr,c
 29150                           
 29151                           ;display.c: 522: while(found_line4[cntr])
 29152  0023B4  D017               	goto	l1638
 29153  0023B6                     
 29154                           ;display.c: 523: display_content[3][cntr] = found_line4[cntr++];
 29155  0023B6  5019               	movf	__display_found@cntr,w,c
 29156  0023B8  0D01               	mullw	1
 29157  0023BA  0ECC               	movlw	low _found_line4
 29158  0023BC  24F3               	addwf	prodl,w,c
 29159  0023BE  6EF6               	movwf	tblptrl,c
 29160  0023C0  0E8C               	movlw	high _found_line4
 29161  0023C2  20F4               	addwfc	prodh,w,c
 29162  0023C4  6EF7               	movwf	tblptrh,c
 29163  0023C6                     	if	1	;There are 3 active tblptr bytes
 29164  0023C6  6AF8               	clrf	tblptru,c
 29165  0023C8  0E00               	movlw	low (__mediumconst shr (0+16))
 29166  0023CA  22F8               	addwfc	tblptru,f,c
 29167  0023CC                     	endif
 29168  0023CC  5019               	movf	__display_found@cntr,w,c
 29169  0023CE  0D01               	mullw	1
 29170  0023D0  0EB7               	movlw	low (_display_content+60)
 29171  0023D2  24F3               	addwf	prodl,w,c
 29172  0023D4  6ED9               	movwf	fsr2l,c
 29173  0023D6  0E01               	movlw	high (_display_content+60)
 29174  0023D8  20F4               	addwfc	prodh,w,c
 29175  0023DA  6EDA               	movwf	fsr2h,c
 29176  0023DC  0008               	tblrd		*
 29177  0023DE  CFF5 FFDF          	movff	tablat,indf2
 29178  0023E2  2A19               	incf	__display_found@cntr,f,c
 29179  0023E4                     l1638:
 29180  0023E4  5019               	movf	__display_found@cntr,w,c
 29181  0023E6  0D01               	mullw	1
 29182  0023E8  0ECC               	movlw	low _found_line4
 29183  0023EA  24F3               	addwf	prodl,w,c
 29184  0023EC  6EF6               	movwf	tblptrl,c
 29185  0023EE  0E8C               	movlw	high _found_line4
 29186  0023F0  20F4               	addwfc	prodh,w,c
 29187  0023F2  6EF7               	movwf	tblptrh,c
 29188  0023F4                     	if	1	;There are 3 active tblptr bytes
 29189  0023F4  6AF8               	clrf	tblptru,c
 29190  0023F6  0E00               	movlw	low (__mediumconst shr (0+16))
 29191  0023F8  22F8               	addwfc	tblptru,f,c
 29192  0023FA                     	endif
 29193  0023FA  0008               	tblrd		*
 29194  0023FC  50F5               	movf	tablat,w,c
 29195  0023FE  0900               	iorlw	0
 29196  002400  B4D8               	btfsc	status,2,c
 29197  002402  0012               	return	
 29198  002404  D7D8               	goto	l1639
 29199  002406                     __end_of__display_found:
 29200                           	opt stack 0
 29201                           tosu	equ	0xFFF
 29202                           tosh	equ	0xFFE
 29203                           tosl	equ	0xFFD
 29204                           pclath	equ	0xFFA
 29205                           tblptru	equ	0xFF8
 29206                           tblptrh	equ	0xFF7
 29207                           tblptrl	equ	0xFF6
 29208                           tablat	equ	0xFF5
 29209                           prodh	equ	0xFF4
 29210                           prodl	equ	0xFF3
 29211                           intcon	equ	0xFF2
 29212                           intcon3	equ	0xFF0
 29213                           indf0	equ	0xFEF
 29214                           postinc0	equ	0xFEE
 29215                           fsr0h	equ	0xFEA
 29216                           fsr0l	equ	0xFE9
 29217                           wreg	equ	0xFE8
 29218                           indf1	equ	0xFE7
 29219                           postdec1	equ	0xFE5
 29220                           plusw1	equ	0xFE3
 29221                           fsr1h	equ	0xFE2
 29222                           fsr1l	equ	0xFE1
 29223                           indf2	equ	0xFDF
 29224                           postinc2	equ	0xFDE
 29225                           postdec2	equ	0xFDD
 29226                           plusw2	equ	0xFDB
 29227                           fsr2h	equ	0xFDA
 29228                           fsr2l	equ	0xFD9
 29229                           status	equ	0xFD8
 29230                           
 29231 ;; *************** function _bootloader_get_file_size *****************
 29232 ;; Defined at:
 29233 ;;		line 463 in file "bootloader.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;		None
 29236 ;; Auto vars:     Size  Location     Type
 29237 ;;		None
 29238 ;; Return value:  Size  Location     Type
 29239 ;;                  4    0[COMRAM] unsigned long 
 29240 ;; Registers used:
 29241 ;;		None
 29242 ;; Tracked objects:
 29243 ;;		On entry : 0/0
 29244 ;;		On exit  : 0/0
 29245 ;;		Unchanged: 0/0
 29246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29251 ;;Total ram usage:        4 bytes
 29252 ;; Hardware stack levels used:    1
 29253 ;; This function calls:
 29254 ;;		Nothing
 29255 ;; This function is called by:
 29256 ;;		__display_found
 29257 ;;		__fill_buffer_get_bootloader_details
 29258 ;; This function uses a non-reentrant model
 29259 ;;
 29260                           
 29261                           	psect	text144
 29262  0073AA                     __ptext144:
 29263                           	opt stack 0
 29264  0073AA                     _bootloader_get_file_size:
 29265                           	opt stack 25
 29266                           
 29267                           ;bootloader.c: 465: return hex_file_size;
 29268                           
 29269                           ;incstack = 0
 29270  0073AA  C07B  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29271  0073AE  C07C  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29272  0073B2  C07D  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29273  0073B6  C07E  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29274  0073BA  0012               	return		;funcret
 29275  0073BC                     __end_of_bootloader_get_file_size:
 29276                           	opt stack 0
 29277                           tosu	equ	0xFFF
 29278                           tosh	equ	0xFFE
 29279                           tosl	equ	0xFFD
 29280                           pclath	equ	0xFFA
 29281                           tblptru	equ	0xFF8
 29282                           tblptrh	equ	0xFF7
 29283                           tblptrl	equ	0xFF6
 29284                           tablat	equ	0xFF5
 29285                           prodh	equ	0xFF4
 29286                           prodl	equ	0xFF3
 29287                           intcon	equ	0xFF2
 29288                           intcon3	equ	0xFF0
 29289                           indf0	equ	0xFEF
 29290                           postinc0	equ	0xFEE
 29291                           fsr0h	equ	0xFEA
 29292                           fsr0l	equ	0xFE9
 29293                           wreg	equ	0xFE8
 29294                           indf1	equ	0xFE7
 29295                           postdec1	equ	0xFE5
 29296                           plusw1	equ	0xFE3
 29297                           fsr1h	equ	0xFE2
 29298                           fsr1l	equ	0xFE1
 29299                           indf2	equ	0xFDF
 29300                           postinc2	equ	0xFDE
 29301                           postdec2	equ	0xFDD
 29302                           plusw2	equ	0xFDB
 29303                           fsr2h	equ	0xFDA
 29304                           fsr2l	equ	0xFD9
 29305                           status	equ	0xFD8
 29306                           
 29307 ;; *************** function __display_failed *****************
 29308 ;; Defined at:
 29309 ;;		line 564 in file "display.c"
 29310 ;; Parameters:    Size  Location     Type
 29311 ;;		None
 29312 ;; Auto vars:     Size  Location     Type
 29313 ;;  cntr            1   28[COMRAM] unsigned char 
 29314 ;;  start           1    0        unsigned char 
 29315 ;; Return value:  Size  Location     Type
 29316 ;;                  1    wreg      void 
 29317 ;; Registers used:
 29318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29319 ;; Tracked objects:
 29320 ;;		On entry : 0/0
 29321 ;;		On exit  : 0/0
 29322 ;;		Unchanged: 0/0
 29323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29327 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29328 ;;Total ram usage:        1 bytes
 29329 ;; Hardware stack levels used:    1
 29330 ;; Hardware stack levels required when called:    4
 29331 ;; This function calls:
 29332 ;;		__display_itoa_u16
 29333 ;;		__display_itoa_u32
 29334 ;;		_bootloader_get_entries
 29335 ;;		_bootloader_get_error
 29336 ;;		_bootloader_get_rec_address
 29337 ;; This function is called by:
 29338 ;;		_display_prepare
 29339 ;; This function uses a non-reentrant model
 29340 ;;
 29341                           
 29342                           	psect	text145
 29343  000F2C                     __ptext145:
 29344                           	opt stack 0
 29345  000F2C                     __display_failed:
 29346                           	opt stack 22
 29347                           
 29348                           ;display.c: 566: uint8_t cntr;;display.c: 567: uint8_t start;;display.c: 568: cntr = 0;
 29349                           
 29350                           ;incstack = 0
 29351  000F2C  0E00               	movlw	0
 29352  000F2E  6E1D               	movwf	__display_failed@cntr,c
 29353                           
 29354                           ;display.c: 569: while(failed_line1[cntr])
 29355  000F30  D017               	goto	l1671
 29356  000F32                     
 29357                           ;display.c: 570: display_content[0][cntr] = failed_line1[cntr++];
 29358  000F32  501D               	movf	__display_failed@cntr,w,c
 29359  000F34  0D01               	mullw	1
 29360  000F36  0E70               	movlw	low _failed_line1
 29361  000F38  24F3               	addwf	prodl,w,c
 29362  000F3A  6EF6               	movwf	tblptrl,c
 29363  000F3C  0E8D               	movlw	high _failed_line1
 29364  000F3E  20F4               	addwfc	prodh,w,c
 29365  000F40  6EF7               	movwf	tblptrh,c
 29366  000F42                     	if	1	;There are 3 active tblptr bytes
 29367  000F42  6AF8               	clrf	tblptru,c
 29368  000F44  0E00               	movlw	low (__mediumconst shr (0+16))
 29369  000F46  22F8               	addwfc	tblptru,f,c
 29370  000F48                     	endif
 29371  000F48  501D               	movf	__display_failed@cntr,w,c
 29372  000F4A  0D01               	mullw	1
 29373  000F4C  0E7B               	movlw	low _display_content
 29374  000F4E  24F3               	addwf	prodl,w,c
 29375  000F50  6ED9               	movwf	fsr2l,c
 29376  000F52  0E01               	movlw	high _display_content
 29377  000F54  20F4               	addwfc	prodh,w,c
 29378  000F56  6EDA               	movwf	fsr2h,c
 29379  000F58  0008               	tblrd		*
 29380  000F5A  CFF5 FFDF          	movff	tablat,indf2
 29381  000F5E  2A1D               	incf	__display_failed@cntr,f,c
 29382  000F60                     l1671:
 29383  000F60  501D               	movf	__display_failed@cntr,w,c
 29384  000F62  0D01               	mullw	1
 29385  000F64  0E70               	movlw	low _failed_line1
 29386  000F66  24F3               	addwf	prodl,w,c
 29387  000F68  6EF6               	movwf	tblptrl,c
 29388  000F6A  0E8D               	movlw	high _failed_line1
 29389  000F6C  20F4               	addwfc	prodh,w,c
 29390  000F6E  6EF7               	movwf	tblptrh,c
 29391  000F70                     	if	1	;There are 3 active tblptr bytes
 29392  000F70  6AF8               	clrf	tblptru,c
 29393  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 29394  000F74  22F8               	addwfc	tblptru,f,c
 29395  000F76                     	endif
 29396  000F76  0008               	tblrd		*
 29397  000F78  50F5               	movf	tablat,w,c
 29398  000F7A  0900               	iorlw	0
 29399  000F7C  A4D8               	btfss	status,2,c
 29400  000F7E  D7D9               	goto	l1672
 29401                           
 29402                           ;display.c: 571: cntr = 0;
 29403  000F80  0E00               	movlw	0
 29404  000F82  6E1D               	movwf	__display_failed@cntr,c
 29405                           
 29406                           ;display.c: 572: while(failed_line2[cntr])
 29407  000F84  D017               	goto	l1674
 29408  000F86                     
 29409                           ;display.c: 573: display_content[1][cntr] = failed_line2[cntr++];
 29410  000F86  501D               	movf	__display_failed@cntr,w,c
 29411  000F88  0D01               	mullw	1
 29412  000F8A  0EBA               	movlw	low _failed_line2
 29413  000F8C  24F3               	addwf	prodl,w,c
 29414  000F8E  6EF6               	movwf	tblptrl,c
 29415  000F90  0E8C               	movlw	high _failed_line2
 29416  000F92  20F4               	addwfc	prodh,w,c
 29417  000F94  6EF7               	movwf	tblptrh,c
 29418  000F96                     	if	1	;There are 3 active tblptr bytes
 29419  000F96  6AF8               	clrf	tblptru,c
 29420  000F98  0E00               	movlw	low (__mediumconst shr (0+16))
 29421  000F9A  22F8               	addwfc	tblptru,f,c
 29422  000F9C                     	endif
 29423  000F9C  501D               	movf	__display_failed@cntr,w,c
 29424  000F9E  0D01               	mullw	1
 29425  000FA0  0E8F               	movlw	low (_display_content+20)
 29426  000FA2  24F3               	addwf	prodl,w,c
 29427  000FA4  6ED9               	movwf	fsr2l,c
 29428  000FA6  0E01               	movlw	high (_display_content+20)
 29429  000FA8  20F4               	addwfc	prodh,w,c
 29430  000FAA  6EDA               	movwf	fsr2h,c
 29431  000FAC  0008               	tblrd		*
 29432  000FAE  CFF5 FFDF          	movff	tablat,indf2
 29433  000FB2  2A1D               	incf	__display_failed@cntr,f,c
 29434  000FB4                     l1674:
 29435  000FB4  501D               	movf	__display_failed@cntr,w,c
 29436  000FB6  0D01               	mullw	1
 29437  000FB8  0EBA               	movlw	low _failed_line2
 29438  000FBA  24F3               	addwf	prodl,w,c
 29439  000FBC  6EF6               	movwf	tblptrl,c
 29440  000FBE  0E8C               	movlw	high _failed_line2
 29441  000FC0  20F4               	addwfc	prodh,w,c
 29442  000FC2  6EF7               	movwf	tblptrh,c
 29443  000FC4                     	if	1	;There are 3 active tblptr bytes
 29444  000FC4  6AF8               	clrf	tblptru,c
 29445  000FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 29446  000FC8  22F8               	addwfc	tblptru,f,c
 29447  000FCA                     	endif
 29448  000FCA  0008               	tblrd		*
 29449  000FCC  50F5               	movf	tablat,w,c
 29450  000FCE  0900               	iorlw	0
 29451  000FD0  A4D8               	btfss	status,2,c
 29452  000FD2  D7D9               	goto	l1675
 29453                           
 29454                           ;display.c: 575: cntr = 0;
 29455  000FD4  0E00               	movlw	0
 29456  000FD6  6E1D               	movwf	__display_failed@cntr,c
 29457                           
 29458                           ;display.c: 576: switch(bootloader_get_error())
 29459  000FD8  D0D6               	goto	l1677
 29460  000FDA                     
 29461                           ;display.c: 580: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29462  000FDA  501D               	movf	__display_failed@cntr,w,c
 29463  000FDC  0D01               	mullw	1
 29464  000FDE  0E82               	movlw	low _failed_line3_startCode
 29465  000FE0  24F3               	addwf	prodl,w,c
 29466  000FE2  6EF6               	movwf	tblptrl,c
 29467  000FE4  0E8C               	movlw	high _failed_line3_startCode
 29468  000FE6  20F4               	addwfc	prodh,w,c
 29469  000FE8  6EF7               	movwf	tblptrh,c
 29470  000FEA                     	if	1	;There are 3 active tblptr bytes
 29471  000FEA  6AF8               	clrf	tblptru,c
 29472  000FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 29473  000FEE  22F8               	addwfc	tblptru,f,c
 29474  000FF0                     	endif
 29475  000FF0  501D               	movf	__display_failed@cntr,w,c
 29476  000FF2  0D01               	mullw	1
 29477  000FF4  0EA3               	movlw	low (_display_content+40)
 29478  000FF6  24F3               	addwf	prodl,w,c
 29479  000FF8  6ED9               	movwf	fsr2l,c
 29480  000FFA  0E01               	movlw	high (_display_content+40)
 29481  000FFC  20F4               	addwfc	prodh,w,c
 29482  000FFE  6EDA               	movwf	fsr2h,c
 29483  001000  0008               	tblrd		*
 29484  001002  CFF5 FFDF          	movff	tablat,indf2
 29485  001006  2A1D               	incf	__display_failed@cntr,f,c
 29486  001008  501D               	movf	__display_failed@cntr,w,c
 29487  00100A  0D01               	mullw	1
 29488  00100C  0E82               	movlw	low _failed_line3_startCode
 29489  00100E  24F3               	addwf	prodl,w,c
 29490  001010  6EF6               	movwf	tblptrl,c
 29491  001012  0E8C               	movlw	high _failed_line3_startCode
 29492  001014  20F4               	addwfc	prodh,w,c
 29493  001016  6EF7               	movwf	tblptrh,c
 29494  001018                     	if	1	;There are 3 active tblptr bytes
 29495  001018  6AF8               	clrf	tblptru,c
 29496  00101A  0E00               	movlw	low (__mediumconst shr (0+16))
 29497  00101C  22F8               	addwfc	tblptru,f,c
 29498  00101E                     	endif
 29499  00101E  0008               	tblrd		*
 29500  001020  50F5               	movf	tablat,w,c
 29501  001022  0900               	iorlw	0
 29502  001024  B4D8               	btfsc	status,2,c
 29503  001026  D0C0               	goto	l1682
 29504  001028  D7D8               	goto	l1680
 29505  00102A                     
 29506                           ;display.c: 585: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29507  00102A  501D               	movf	__display_failed@cntr,w,c
 29508  00102C  0D01               	mullw	1
 29509  00102E  0ED0               	movlw	low _failed_line3_checksum
 29510  001030  24F3               	addwf	prodl,w,c
 29511  001032  6EF6               	movwf	tblptrl,c
 29512  001034  0E8D               	movlw	high _failed_line3_checksum
 29513  001036  20F4               	addwfc	prodh,w,c
 29514  001038  6EF7               	movwf	tblptrh,c
 29515  00103A                     	if	1	;There are 3 active tblptr bytes
 29516  00103A  6AF8               	clrf	tblptru,c
 29517  00103C  0E00               	movlw	low (__mediumconst shr (0+16))
 29518  00103E  22F8               	addwfc	tblptru,f,c
 29519  001040                     	endif
 29520  001040  501D               	movf	__display_failed@cntr,w,c
 29521  001042  0D01               	mullw	1
 29522  001044  0EA3               	movlw	low (_display_content+40)
 29523  001046  24F3               	addwf	prodl,w,c
 29524  001048  6ED9               	movwf	fsr2l,c
 29525  00104A  0E01               	movlw	high (_display_content+40)
 29526  00104C  20F4               	addwfc	prodh,w,c
 29527  00104E  6EDA               	movwf	fsr2h,c
 29528  001050  0008               	tblrd		*
 29529  001052  CFF5 FFDF          	movff	tablat,indf2
 29530  001056  2A1D               	incf	__display_failed@cntr,f,c
 29531  001058  501D               	movf	__display_failed@cntr,w,c
 29532  00105A  0D01               	mullw	1
 29533  00105C  0ED0               	movlw	low _failed_line3_checksum
 29534  00105E  24F3               	addwf	prodl,w,c
 29535  001060  6EF6               	movwf	tblptrl,c
 29536  001062  0E8D               	movlw	high _failed_line3_checksum
 29537  001064  20F4               	addwfc	prodh,w,c
 29538  001066  6EF7               	movwf	tblptrh,c
 29539  001068                     	if	1	;There are 3 active tblptr bytes
 29540  001068  6AF8               	clrf	tblptru,c
 29541  00106A  0E00               	movlw	low (__mediumconst shr (0+16))
 29542  00106C  22F8               	addwfc	tblptru,f,c
 29543  00106E                     	endif
 29544  00106E  0008               	tblrd		*
 29545  001070  50F5               	movf	tablat,w,c
 29546  001072  0900               	iorlw	0
 29547  001074  B4D8               	btfsc	status,2,c
 29548  001076  D098               	goto	l1682
 29549  001078  D7D8               	goto	l1685
 29550  00107A                     
 29551                           ;display.c: 592: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29552  00107A  501D               	movf	__display_failed@cntr,w,c
 29553  00107C  0D01               	mullw	1
 29554  00107E  0EDF               	movlw	low _failed_line3_noNextRecord
 29555  001080  24F3               	addwf	prodl,w,c
 29556  001082  6EF6               	movwf	tblptrl,c
 29557  001084  0E8D               	movlw	high _failed_line3_noNextRecord
 29558  001086  20F4               	addwfc	prodh,w,c
 29559  001088  6EF7               	movwf	tblptrh,c
 29560  00108A                     	if	1	;There are 3 active tblptr bytes
 29561  00108A  6AF8               	clrf	tblptru,c
 29562  00108C  0E00               	movlw	low (__mediumconst shr (0+16))
 29563  00108E  22F8               	addwfc	tblptru,f,c
 29564  001090                     	endif
 29565  001090  501D               	movf	__display_failed@cntr,w,c
 29566  001092  0D01               	mullw	1
 29567  001094  0EA3               	movlw	low (_display_content+40)
 29568  001096  24F3               	addwf	prodl,w,c
 29569  001098  6ED9               	movwf	fsr2l,c
 29570  00109A  0E01               	movlw	high (_display_content+40)
 29571  00109C  20F4               	addwfc	prodh,w,c
 29572  00109E  6EDA               	movwf	fsr2h,c
 29573  0010A0  0008               	tblrd		*
 29574  0010A2  CFF5 FFDF          	movff	tablat,indf2
 29575  0010A6  2A1D               	incf	__display_failed@cntr,f,c
 29576  0010A8  501D               	movf	__display_failed@cntr,w,c
 29577  0010AA  0D01               	mullw	1
 29578  0010AC  0EDF               	movlw	low _failed_line3_noNextRecord
 29579  0010AE  24F3               	addwf	prodl,w,c
 29580  0010B0  6EF6               	movwf	tblptrl,c
 29581  0010B2  0E8D               	movlw	high _failed_line3_noNextRecord
 29582  0010B4  20F4               	addwfc	prodh,w,c
 29583  0010B6  6EF7               	movwf	tblptrh,c
 29584  0010B8                     	if	1	;There are 3 active tblptr bytes
 29585  0010B8  6AF8               	clrf	tblptru,c
 29586  0010BA  0E00               	movlw	low (__mediumconst shr (0+16))
 29587  0010BC  22F8               	addwfc	tblptru,f,c
 29588  0010BE                     	endif
 29589  0010BE  0008               	tblrd		*
 29590  0010C0  50F5               	movf	tablat,w,c
 29591  0010C2  0900               	iorlw	0
 29592  0010C4  B4D8               	btfsc	status,2,c
 29593  0010C6  D070               	goto	l1682
 29594  0010C8  D7D8               	goto	l1689
 29595  0010CA                     
 29596                           ;display.c: 597: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29597  0010CA  501D               	movf	__display_failed@cntr,w,c
 29598  0010CC  0D01               	mullw	1
 29599  0010CE  0EFD               	movlw	low _failed_line3_dataTooLong
 29600  0010D0  24F3               	addwf	prodl,w,c
 29601  0010D2  6EF6               	movwf	tblptrl,c
 29602  0010D4  0E8D               	movlw	high _failed_line3_dataTooLong
 29603  0010D6  20F4               	addwfc	prodh,w,c
 29604  0010D8  6EF7               	movwf	tblptrh,c
 29605  0010DA                     	if	1	;There are 3 active tblptr bytes
 29606  0010DA  6AF8               	clrf	tblptru,c
 29607  0010DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29608  0010DE  22F8               	addwfc	tblptru,f,c
 29609  0010E0                     	endif
 29610  0010E0  501D               	movf	__display_failed@cntr,w,c
 29611  0010E2  0D01               	mullw	1
 29612  0010E4  0EA3               	movlw	low (_display_content+40)
 29613  0010E6  24F3               	addwf	prodl,w,c
 29614  0010E8  6ED9               	movwf	fsr2l,c
 29615  0010EA  0E01               	movlw	high (_display_content+40)
 29616  0010EC  20F4               	addwfc	prodh,w,c
 29617  0010EE  6EDA               	movwf	fsr2h,c
 29618  0010F0  0008               	tblrd		*
 29619  0010F2  CFF5 FFDF          	movff	tablat,indf2
 29620  0010F6  2A1D               	incf	__display_failed@cntr,f,c
 29621  0010F8  501D               	movf	__display_failed@cntr,w,c
 29622  0010FA  0D01               	mullw	1
 29623  0010FC  0EFD               	movlw	low _failed_line3_dataTooLong
 29624  0010FE  24F3               	addwf	prodl,w,c
 29625  001100  6EF6               	movwf	tblptrl,c
 29626  001102  0E8D               	movlw	high _failed_line3_dataTooLong
 29627  001104  20F4               	addwfc	prodh,w,c
 29628  001106  6EF7               	movwf	tblptrh,c
 29629  001108                     	if	1	;There are 3 active tblptr bytes
 29630  001108  6AF8               	clrf	tblptru,c
 29631  00110A  0E00               	movlw	low (__mediumconst shr (0+16))
 29632  00110C  22F8               	addwfc	tblptru,f,c
 29633  00110E                     	endif
 29634  00110E  0008               	tblrd		*
 29635  001110  50F5               	movf	tablat,w,c
 29636  001112  0900               	iorlw	0
 29637  001114  B4D8               	btfsc	status,2,c
 29638  001116  D048               	goto	l1682
 29639  001118  D7D8               	goto	l1693
 29640  00111A                     
 29641                           ;display.c: 602: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 29642  00111A  501D               	movf	__display_failed@cntr,w,c
 29643  00111C  0D01               	mullw	1
 29644  00111E  0E5A               	movlw	low _failed_line3_addressRange
 29645  001120  24F3               	addwf	prodl,w,c
 29646  001122  6EF6               	movwf	tblptrl,c
 29647  001124  0E8C               	movlw	high _failed_line3_addressRange
 29648  001126  20F4               	addwfc	prodh,w,c
 29649  001128  6EF7               	movwf	tblptrh,c
 29650  00112A                     	if	1	;There are 3 active tblptr bytes
 29651  00112A  6AF8               	clrf	tblptru,c
 29652  00112C  0E00               	movlw	low (__mediumconst shr (0+16))
 29653  00112E  22F8               	addwfc	tblptru,f,c
 29654  001130                     	endif
 29655  001130  501D               	movf	__display_failed@cntr,w,c
 29656  001132  0D01               	mullw	1
 29657  001134  0EA3               	movlw	low (_display_content+40)
 29658  001136  24F3               	addwf	prodl,w,c
 29659  001138  6ED9               	movwf	fsr2l,c
 29660  00113A  0E01               	movlw	high (_display_content+40)
 29661  00113C  20F4               	addwfc	prodh,w,c
 29662  00113E  6EDA               	movwf	fsr2h,c
 29663  001140  0008               	tblrd		*
 29664  001142  CFF5 FFDF          	movff	tablat,indf2
 29665  001146  2A1D               	incf	__display_failed@cntr,f,c
 29666  001148  501D               	movf	__display_failed@cntr,w,c
 29667  00114A  0D01               	mullw	1
 29668  00114C  0E5A               	movlw	low _failed_line3_addressRange
 29669  00114E  24F3               	addwf	prodl,w,c
 29670  001150  6EF6               	movwf	tblptrl,c
 29671  001152  0E8C               	movlw	high _failed_line3_addressRange
 29672  001154  20F4               	addwfc	prodh,w,c
 29673  001156  6EF7               	movwf	tblptrh,c
 29674  001158                     	if	1	;There are 3 active tblptr bytes
 29675  001158  6AF8               	clrf	tblptru,c
 29676  00115A  0E00               	movlw	low (__mediumconst shr (0+16))
 29677  00115C  22F8               	addwfc	tblptru,f,c
 29678  00115E                     	endif
 29679  00115E  0008               	tblrd		*
 29680  001160  50F5               	movf	tablat,w,c
 29681  001162  0900               	iorlw	0
 29682  001164  A4D8               	btfss	status,2,c
 29683  001166  D7D9               	goto	l1697
 29684                           
 29685                           ;display.c: 603: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29686  001168  EC25  F03A         	call	_bootloader_get_rec_address	;wreg free
 29687  00116C  C001  F00E         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29688  001170  C002  F00F         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29689  001174  6A10               	clrf	__display_itoa_u32@value+2,c
 29690  001176  6A11               	clrf	__display_itoa_u32@value+3,c
 29691  001178  0EC5               	movlw	low (_display_content+74)
 29692  00117A  6E12               	movwf	__display_itoa_u32@text,c
 29693  00117C  0E01               	movlw	high (_display_content+74)
 29694  00117E  6E13               	movwf	__display_itoa_u32@text+1,c
 29695  001180  EC79  F018         	call	__display_itoa_u32	;wreg free
 29696                           
 29697                           ;display.c: 606: }
 29698                           
 29699                           ;display.c: 604: break;
 29700  001184  D011               	goto	l1682
 29701  001186                     l1677:
 29702  001186  EC54  F03A         	call	_bootloader_get_error	;wreg free
 29703                           
 29704                           ; Switch size 1, requested type "space"
 29705                           ; Number of cases is 5, Range of values is 11 to 15
 29706                           ; switch strategies available:
 29707                           ; Name         Instructions Cycles
 29708                           ; simple_byte           16     9 (average)
 29709                           ;	Chosen strategy is simple_byte
 29710  00118A  0A0B               	xorlw	11	; case 11
 29711  00118C  B4D8               	btfsc	status,2,c
 29712  00118E  D7DC               	goto	l1696
 29713  001190  0A07               	xorlw	7	; case 12
 29714  001192  B4D8               	btfsc	status,2,c
 29715  001194  D7B1               	goto	l1692
 29716  001196  0A01               	xorlw	1	; case 13
 29717  001198  B4D8               	btfsc	status,2,c
 29718  00119A  D786               	goto	l1688
 29719  00119C  0A03               	xorlw	3	; case 14
 29720  00119E  B4D8               	btfsc	status,2,c
 29721  0011A0  D75B               	goto	l1684
 29722  0011A2  0A01               	xorlw	1	; case 15
 29723  0011A4  B4D8               	btfsc	status,2,c
 29724  0011A6  D730               	goto	l1679
 29725  0011A8                     l1682:
 29726                           
 29727                           ;display.c: 608: cntr = 0;
 29728  0011A8  0E00               	movlw	0
 29729  0011AA  6E1D               	movwf	__display_failed@cntr,c
 29730                           
 29731                           ;display.c: 609: while(failed_line4[cntr])
 29732  0011AC  D017               	goto	l1699
 29733  0011AE                     
 29734                           ;display.c: 610: display_content[3][cntr] = failed_line4[cntr++];
 29735  0011AE  501D               	movf	__display_failed@cntr,w,c
 29736  0011B0  0D01               	mullw	1
 29737  0011B2  0E41               	movlw	low _failed_line4
 29738  0011B4  24F3               	addwf	prodl,w,c
 29739  0011B6  6EF6               	movwf	tblptrl,c
 29740  0011B8  0E8E               	movlw	high _failed_line4
 29741  0011BA  20F4               	addwfc	prodh,w,c
 29742  0011BC  6EF7               	movwf	tblptrh,c
 29743  0011BE                     	if	1	;There are 3 active tblptr bytes
 29744  0011BE  6AF8               	clrf	tblptru,c
 29745  0011C0  0E00               	movlw	low (__mediumconst shr (0+16))
 29746  0011C2  22F8               	addwfc	tblptru,f,c
 29747  0011C4                     	endif
 29748  0011C4  501D               	movf	__display_failed@cntr,w,c
 29749  0011C6  0D01               	mullw	1
 29750  0011C8  0EB7               	movlw	low (_display_content+60)
 29751  0011CA  24F3               	addwf	prodl,w,c
 29752  0011CC  6ED9               	movwf	fsr2l,c
 29753  0011CE  0E01               	movlw	high (_display_content+60)
 29754  0011D0  20F4               	addwfc	prodh,w,c
 29755  0011D2  6EDA               	movwf	fsr2h,c
 29756  0011D4  0008               	tblrd		*
 29757  0011D6  CFF5 FFDF          	movff	tablat,indf2
 29758  0011DA  2A1D               	incf	__display_failed@cntr,f,c
 29759  0011DC                     l1699:
 29760  0011DC  501D               	movf	__display_failed@cntr,w,c
 29761  0011DE  0D01               	mullw	1
 29762  0011E0  0E41               	movlw	low _failed_line4
 29763  0011E2  24F3               	addwf	prodl,w,c
 29764  0011E4  6EF6               	movwf	tblptrl,c
 29765  0011E6  0E8E               	movlw	high _failed_line4
 29766  0011E8  20F4               	addwfc	prodh,w,c
 29767  0011EA  6EF7               	movwf	tblptrh,c
 29768  0011EC                     	if	1	;There are 3 active tblptr bytes
 29769  0011EC  6AF8               	clrf	tblptru,c
 29770  0011EE  0E00               	movlw	low (__mediumconst shr (0+16))
 29771  0011F0  22F8               	addwfc	tblptru,f,c
 29772  0011F2                     	endif
 29773  0011F2  0008               	tblrd		*
 29774  0011F4  50F5               	movf	tablat,w,c
 29775  0011F6  0900               	iorlw	0
 29776  0011F8  A4D8               	btfss	status,2,c
 29777  0011FA  D7D9               	goto	l1700
 29778                           
 29779                           ;display.c: 611: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29780  0011FC  EC2A  F03A         	call	_bootloader_get_entries	;wreg free
 29781  001200  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29782  001204  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29783  001208  501D               	movf	__display_failed@cntr,w,c
 29784  00120A  0D01               	mullw	1
 29785  00120C  0EB7               	movlw	low (_display_content+60)
 29786  00120E  24F3               	addwf	prodl,w,c
 29787  001210  6E1B               	movwf	__display_itoa_u16@text,c
 29788  001212  0E01               	movlw	high (_display_content+60)
 29789  001214  20F4               	addwfc	prodh,w,c
 29790  001216  6E1C               	movwf	__display_itoa_u16@text+1,c
 29791  001218  EC9C  F028         	call	__display_itoa_u16	;wreg free
 29792  00121C  0012               	return		;funcret
 29793  00121E                     __end_of__display_failed:
 29794                           	opt stack 0
 29795                           tosu	equ	0xFFF
 29796                           tosh	equ	0xFFE
 29797                           tosl	equ	0xFFD
 29798                           pclath	equ	0xFFA
 29799                           tblptru	equ	0xFF8
 29800                           tblptrh	equ	0xFF7
 29801                           tblptrl	equ	0xFF6
 29802                           tablat	equ	0xFF5
 29803                           prodh	equ	0xFF4
 29804                           prodl	equ	0xFF3
 29805                           intcon	equ	0xFF2
 29806                           intcon3	equ	0xFF0
 29807                           indf0	equ	0xFEF
 29808                           postinc0	equ	0xFEE
 29809                           fsr0h	equ	0xFEA
 29810                           fsr0l	equ	0xFE9
 29811                           wreg	equ	0xFE8
 29812                           indf1	equ	0xFE7
 29813                           postdec1	equ	0xFE5
 29814                           plusw1	equ	0xFE3
 29815                           fsr1h	equ	0xFE2
 29816                           fsr1l	equ	0xFE1
 29817                           indf2	equ	0xFDF
 29818                           postinc2	equ	0xFDE
 29819                           postdec2	equ	0xFDD
 29820                           plusw2	equ	0xFDB
 29821                           fsr2h	equ	0xFDA
 29822                           fsr2l	equ	0xFD9
 29823                           status	equ	0xFD8
 29824                           
 29825 ;; *************** function _bootloader_get_rec_address *****************
 29826 ;; Defined at:
 29827 ;;		line 488 in file "bootloader.c"
 29828 ;; Parameters:    Size  Location     Type
 29829 ;;		None
 29830 ;; Auto vars:     Size  Location     Type
 29831 ;;		None
 29832 ;; Return value:  Size  Location     Type
 29833 ;;                  2    0[COMRAM] unsigned int 
 29834 ;; Registers used:
 29835 ;;		None
 29836 ;; Tracked objects:
 29837 ;;		On entry : 0/0
 29838 ;;		On exit  : 0/0
 29839 ;;		Unchanged: 0/0
 29840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29845 ;;Total ram usage:        2 bytes
 29846 ;; Hardware stack levels used:    1
 29847 ;; This function calls:
 29848 ;;		Nothing
 29849 ;; This function is called by:
 29850 ;;		__display_failed
 29851 ;;		__fill_buffer_get_bootloader_details
 29852 ;; This function uses a non-reentrant model
 29853 ;;
 29854                           
 29855                           	psect	text146
 29856  00744A                     __ptext146:
 29857                           	opt stack 0
 29858  00744A                     _bootloader_get_rec_address:
 29859                           	opt stack 25
 29860                           
 29861                           ;bootloader.c: 491: return hex_file_entry.address;
 29862                           
 29863                           ;incstack = 0
 29864  00744A  C1CD  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29865  00744E  C1CE  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29866  007452  0012               	return		;funcret
 29867  007454                     __end_of_bootloader_get_rec_address:
 29868                           	opt stack 0
 29869                           tosu	equ	0xFFF
 29870                           tosh	equ	0xFFE
 29871                           tosl	equ	0xFFD
 29872                           pclath	equ	0xFFA
 29873                           tblptru	equ	0xFF8
 29874                           tblptrh	equ	0xFF7
 29875                           tblptrl	equ	0xFF6
 29876                           tablat	equ	0xFF5
 29877                           prodh	equ	0xFF4
 29878                           prodl	equ	0xFF3
 29879                           intcon	equ	0xFF2
 29880                           intcon3	equ	0xFF0
 29881                           indf0	equ	0xFEF
 29882                           postinc0	equ	0xFEE
 29883                           fsr0h	equ	0xFEA
 29884                           fsr0l	equ	0xFE9
 29885                           wreg	equ	0xFE8
 29886                           indf1	equ	0xFE7
 29887                           postdec1	equ	0xFE5
 29888                           plusw1	equ	0xFE3
 29889                           fsr1h	equ	0xFE2
 29890                           fsr1l	equ	0xFE1
 29891                           indf2	equ	0xFDF
 29892                           postinc2	equ	0xFDE
 29893                           postdec2	equ	0xFDD
 29894                           plusw2	equ	0xFDB
 29895                           fsr2h	equ	0xFDA
 29896                           fsr2l	equ	0xFD9
 29897                           status	equ	0xFD8
 29898                           
 29899 ;; *************** function _bootloader_get_error *****************
 29900 ;; Defined at:
 29901 ;;		line 478 in file "bootloader.c"
 29902 ;; Parameters:    Size  Location     Type
 29903 ;;		None
 29904 ;; Auto vars:     Size  Location     Type
 29905 ;;		None
 29906 ;; Return value:  Size  Location     Type
 29907 ;;                  1    wreg      enum E7009
 29908 ;; Registers used:
 29909 ;;		wreg, status,2
 29910 ;; Tracked objects:
 29911 ;;		On entry : 0/0
 29912 ;;		On exit  : 0/0
 29913 ;;		Unchanged: 0/0
 29914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29919 ;;Total ram usage:        0 bytes
 29920 ;; Hardware stack levels used:    1
 29921 ;; This function calls:
 29922 ;;		Nothing
 29923 ;; This function is called by:
 29924 ;;		__display_failed
 29925 ;;		__fill_buffer_get_bootloader_details
 29926 ;; This function uses a non-reentrant model
 29927 ;;
 29928                           
 29929                           	psect	text147
 29930  0074A8                     __ptext147:
 29931                           	opt stack 0
 29932  0074A8                     _bootloader_get_error:
 29933                           	opt stack 25
 29934                           
 29935                           ;bootloader.c: 480: return last_error;
 29936                           
 29937                           ;incstack = 0
 29938  0074A8  0100               	movlb	0	; () banked
 29939  0074AA  5193               	movf	_last_error& (0+255),w,b
 29940  0074AC  0012               	return	
 29941  0074AE                     __end_of_bootloader_get_error:
 29942                           	opt stack 0
 29943                           tosu	equ	0xFFF
 29944                           tosh	equ	0xFFE
 29945                           tosl	equ	0xFFD
 29946                           pclath	equ	0xFFA
 29947                           tblptru	equ	0xFF8
 29948                           tblptrh	equ	0xFF7
 29949                           tblptrl	equ	0xFF6
 29950                           tablat	equ	0xFF5
 29951                           prodh	equ	0xFF4
 29952                           prodl	equ	0xFF3
 29953                           intcon	equ	0xFF2
 29954                           intcon3	equ	0xFF0
 29955                           indf0	equ	0xFEF
 29956                           postinc0	equ	0xFEE
 29957                           fsr0h	equ	0xFEA
 29958                           fsr0l	equ	0xFE9
 29959                           wreg	equ	0xFE8
 29960                           indf1	equ	0xFE7
 29961                           postdec1	equ	0xFE5
 29962                           plusw1	equ	0xFE3
 29963                           fsr1h	equ	0xFE2
 29964                           fsr1l	equ	0xFE1
 29965                           indf2	equ	0xFDF
 29966                           postinc2	equ	0xFDE
 29967                           postdec2	equ	0xFDD
 29968                           plusw2	equ	0xFDB
 29969                           fsr2h	equ	0xFDA
 29970                           fsr2l	equ	0xFD9
 29971                           status	equ	0xFD8
 29972                           
 29973 ;; *************** function _bootloader_get_entries *****************
 29974 ;; Defined at:
 29975 ;;		line 468 in file "bootloader.c"
 29976 ;; Parameters:    Size  Location     Type
 29977 ;;		None
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;		None
 29980 ;; Return value:  Size  Location     Type
 29981 ;;                  2    0[COMRAM] unsigned int 
 29982 ;; Registers used:
 29983 ;;		None
 29984 ;; Tracked objects:
 29985 ;;		On entry : 0/0
 29986 ;;		On exit  : 0/0
 29987 ;;		Unchanged: 0/0
 29988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29993 ;;Total ram usage:        2 bytes
 29994 ;; Hardware stack levels used:    1
 29995 ;; This function calls:
 29996 ;;		Nothing
 29997 ;; This function is called by:
 29998 ;;		__display_verify
 29999 ;;		__display_failed
 30000 ;;		__display_programming
 30001 ;;		__fill_buffer_get_bootloader_details
 30002 ;; This function uses a non-reentrant model
 30003 ;;
 30004                           
 30005                           	psect	text148
 30006  007454                     __ptext148:
 30007                           	opt stack 0
 30008  007454                     _bootloader_get_entries:
 30009                           	opt stack 25
 30010                           
 30011                           ;bootloader.c: 470: return hex_file_entries;
 30012                           
 30013                           ; BSR set to: 0
 30014                           ;incstack = 0
 30015  007454  C169  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30016  007458  C16A  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30017  00745C  0012               	return		;funcret
 30018  00745E                     __end_of_bootloader_get_entries:
 30019                           	opt stack 0
 30020                           tosu	equ	0xFFF
 30021                           tosh	equ	0xFFE
 30022                           tosl	equ	0xFFD
 30023                           pclath	equ	0xFFA
 30024                           tblptru	equ	0xFF8
 30025                           tblptrh	equ	0xFF7
 30026                           tblptrl	equ	0xFF6
 30027                           tablat	equ	0xFF5
 30028                           prodh	equ	0xFF4
 30029                           prodl	equ	0xFF3
 30030                           intcon	equ	0xFF2
 30031                           intcon3	equ	0xFF0
 30032                           indf0	equ	0xFEF
 30033                           postinc0	equ	0xFEE
 30034                           fsr0h	equ	0xFEA
 30035                           fsr0l	equ	0xFE9
 30036                           wreg	equ	0xFE8
 30037                           indf1	equ	0xFE7
 30038                           postdec1	equ	0xFE5
 30039                           plusw1	equ	0xFE3
 30040                           fsr1h	equ	0xFE2
 30041                           fsr1l	equ	0xFE1
 30042                           indf2	equ	0xFDF
 30043                           postinc2	equ	0xFDE
 30044                           postdec2	equ	0xFDD
 30045                           plusw2	equ	0xFDB
 30046                           fsr2h	equ	0xFDA
 30047                           fsr2l	equ	0xFD9
 30048                           status	equ	0xFD8
 30049                           
 30050 ;; *************** function __display_itoa_u32 *****************
 30051 ;; Defined at:
 30052 ;;		line 283 in file "display.c"
 30053 ;; Parameters:    Size  Location     Type
 30054 ;;  value           4   13[COMRAM] unsigned long 
 30055 ;;  text            2   17[COMRAM] PTR unsigned char 
 30056 ;;		 -> display_content(80), 
 30057 ;; Auto vars:     Size  Location     Type
 30058 ;;  number_of_di    1   20[COMRAM] unsigned char 
 30059 ;;  cntr            1   19[COMRAM] char 
 30060 ;; Return value:  Size  Location     Type
 30061 ;;                  1    wreg      unsigned char 
 30062 ;; Registers used:
 30063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30064 ;; Tracked objects:
 30065 ;;		On entry : 0/0
 30066 ;;		On exit  : 0/0
 30067 ;;		Unchanged: 0/0
 30068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30069 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30072 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30073 ;;Total ram usage:        8 bytes
 30074 ;; Hardware stack levels used:    1
 30075 ;; Hardware stack levels required when called:    1
 30076 ;; This function calls:
 30077 ;;		___lldiv
 30078 ;;		___llmod
 30079 ;;		___wmul
 30080 ;; This function is called by:
 30081 ;;		__display_found
 30082 ;;		__display_failed
 30083 ;; This function uses a non-reentrant model
 30084 ;;
 30085                           
 30086                           	psect	text149
 30087  0030F2                     __ptext149:
 30088                           	opt stack 0
 30089  0030F2                     __display_itoa_u32:
 30090                           	opt stack 24
 30091                           
 30092                           ;display.c: 285: uint8_t number_of_digits;;display.c: 286: int8_t cntr;;display.c: 289: 
      +                          if(value<10) {number_of_digits = 1;}
 30093                           
 30094                           ;incstack = 0
 30095  0030F2  5011               	movf	__display_itoa_u32@value+3,w,c
 30096  0030F4  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30097  0030F6  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30098  0030F8  E106               	bnz	l10537
 30099  0030FA  0E0A               	movlw	10
 30100  0030FC  5C0E               	subwf	__display_itoa_u32@value,w,c
 30101  0030FE  B0D8               	btfsc	status,0,c
 30102  003100  D002               	goto	l1530
 30103  003102  0E01               	movlw	1
 30104  003104  D059               	goto	L42
 30105  003106                     l1530:
 30106  003106                     l10537:
 30107                           
 30108                           ;display.c: 290: else if(value<100) {number_of_digits = 2;}
 30109  003106  5011               	movf	__display_itoa_u32@value+3,w,c
 30110  003108  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30111  00310A  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30112  00310C  E106               	bnz	l10541
 30113  00310E  0E64               	movlw	100
 30114  003110  5C0E               	subwf	__display_itoa_u32@value,w,c
 30115  003112  B0D8               	btfsc	status,0,c
 30116  003114  D002               	goto	l1532
 30117  003116  0E02               	movlw	2
 30118  003118  D04F               	goto	L42
 30119  00311A                     l1532:
 30120  00311A                     l10541:
 30121                           
 30122                           ;display.c: 291: else if(value<1000) {number_of_digits = 3;}
 30123  00311A  5011               	movf	__display_itoa_u32@value+3,w,c
 30124  00311C  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30125  00311E  E108               	bnz	l10545
 30126  003120  0EE8               	movlw	232
 30127  003122  5C0E               	subwf	__display_itoa_u32@value,w,c
 30128  003124  0E03               	movlw	3
 30129  003126  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30130  003128  B0D8               	btfsc	status,0,c
 30131  00312A  D002               	goto	l1534
 30132  00312C  0E03               	movlw	3
 30133  00312E  D044               	goto	L42
 30134  003130                     l1534:
 30135  003130                     l10545:
 30136                           
 30137                           ;display.c: 292: else if(value<10000) {number_of_digits = 4;}
 30138  003130  5011               	movf	__display_itoa_u32@value+3,w,c
 30139  003132  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30140  003134  E108               	bnz	l10549
 30141  003136  0E10               	movlw	16
 30142  003138  5C0E               	subwf	__display_itoa_u32@value,w,c
 30143  00313A  0E27               	movlw	39
 30144  00313C  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30145  00313E  B0D8               	btfsc	status,0,c
 30146  003140  D002               	goto	l1536
 30147  003142  0E04               	movlw	4
 30148  003144  D039               	goto	L42
 30149  003146                     l1536:
 30150  003146                     l10549:
 30151                           
 30152                           ;display.c: 293: else if(value<100000) {number_of_digits = 5;}
 30153  003146  5011               	movf	__display_itoa_u32@value+3,w,c
 30154  003148  E10A               	bnz	l10553
 30155  00314A  0EA0               	movlw	160
 30156  00314C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30157  00314E  0E86               	movlw	134
 30158  003150  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30159  003152  0E01               	movlw	1
 30160  003154  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30161  003156  B0D8               	btfsc	status,0,c
 30162  003158  D002               	goto	l1538
 30163  00315A  0E05               	movlw	5
 30164  00315C  D02D               	goto	L42
 30165  00315E                     l1538:
 30166  00315E                     l10553:
 30167                           
 30168                           ;display.c: 294: else if(value<1000000) {number_of_digits = 6;}
 30169  00315E  5011               	movf	__display_itoa_u32@value+3,w,c
 30170  003160  E10A               	bnz	l10557
 30171  003162  0E40               	movlw	64
 30172  003164  5C0E               	subwf	__display_itoa_u32@value,w,c
 30173  003166  0E42               	movlw	66
 30174  003168  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30175  00316A  0E0F               	movlw	15
 30176  00316C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30177  00316E  B0D8               	btfsc	status,0,c
 30178  003170  D002               	goto	l1540
 30179  003172  0E06               	movlw	6
 30180  003174  D021               	goto	L42
 30181  003176                     l1540:
 30182  003176                     l10557:
 30183                           
 30184                           ;display.c: 295: else if(value<10000000) {number_of_digits = 7;}
 30185  003176  5011               	movf	__display_itoa_u32@value+3,w,c
 30186  003178  E10A               	bnz	l10561
 30187  00317A  0E80               	movlw	128
 30188  00317C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30189  00317E  0E96               	movlw	150
 30190  003180  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30191  003182  0E98               	movlw	152
 30192  003184  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30193  003186  B0D8               	btfsc	status,0,c
 30194  003188  D002               	goto	l1542
 30195  00318A  0E07               	movlw	7
 30196  00318C  D015               	goto	L42
 30197  00318E                     l1542:
 30198  00318E                     l10561:
 30199                           
 30200                           ;display.c: 296: else if(value<100000000) {number_of_digits = 8;}
 30201  00318E  0EE1               	movlw	225
 30202  003190  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30203  003192  0EF5               	movlw	245
 30204  003194  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30205  003196  0E05               	movlw	5
 30206  003198  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30207  00319A  B0D8               	btfsc	status,0,c
 30208  00319C  D002               	goto	l1544
 30209  00319E  0E08               	movlw	8
 30210  0031A0  D00B               	goto	L42
 30211  0031A2                     l1544:
 30212                           
 30213                           ;display.c: 297: else if(value<1000000000) {number_of_digits = 9;}
 30214  0031A2  0ECA               	movlw	202
 30215  0031A4  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30216  0031A6  0E9A               	movlw	154
 30217  0031A8  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30218  0031AA  0E3B               	movlw	59
 30219  0031AC  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30220  0031AE  B0D8               	btfsc	status,0,c
 30221  0031B0  D002               	goto	l1546
 30222  0031B2  0E09               	movlw	9
 30223  0031B4  D001               	goto	L42
 30224  0031B6                     l1546:
 30225                           
 30226                           ;display.c: 298: else {number_of_digits = 10;}
 30227  0031B6  0E0A               	movlw	10
 30228  0031B8                     L42:
 30229  0031B8  6E15               	movwf	__display_itoa_u32@number_of_digits,c
 30230                           
 30231                           ;display.c: 300: for(cntr=number_of_digits-1; cntr>=0; --cntr)
 30232  0031BA  0415               	decf	__display_itoa_u32@number_of_digits,w,c
 30233  0031BC  6E14               	movwf	__display_itoa_u32@cntr,c
 30234  0031BE                     l10573:
 30235  0031BE  BE14               	btfsc	__display_itoa_u32@cntr,7,c
 30236  0031C0  D042               	goto	u8120
 30237                           
 30238                           ;display.c: 301: {;display.c: 302: text[cntr] = (value%10) + 0x30;
 30239  0031C2  5014               	movf	__display_itoa_u32@cntr,w,c
 30240  0031C4  6E01               	movwf	___wmul@multiplier,c
 30241  0031C6  6A02               	clrf	___wmul@multiplier+1,c
 30242  0031C8  BE01               	btfsc	___wmul@multiplier,7,c
 30243  0031CA  0602               	decf	___wmul@multiplier+1,f,c
 30244  0031CC  0E00               	movlw	0
 30245  0031CE  6E04               	movwf	___wmul@multiplicand+1,c
 30246  0031D0  0E01               	movlw	1
 30247  0031D2  6E03               	movwf	___wmul@multiplicand,c
 30248  0031D4  EC8A  F038         	call	___wmul	;wreg free
 30249  0031D8  5001               	movf	?___wmul,w,c
 30250  0031DA  2412               	addwf	__display_itoa_u32@text,w,c
 30251  0031DC  6ED9               	movwf	fsr2l,c
 30252  0031DE  5002               	movf	?___wmul+1,w,c
 30253  0031E0  2013               	addwfc	__display_itoa_u32@text+1,w,c
 30254  0031E2  6EDA               	movwf	fsr2h,c
 30255  0031E4  C00E  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30256  0031E8  C00F  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30257  0031EC  C010  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30258  0031F0  C011  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30259  0031F4  0E0A               	movlw	10
 30260  0031F6  6E05               	movwf	___llmod@divisor,c
 30261  0031F8  0E00               	movlw	0
 30262  0031FA  6E06               	movwf	___llmod@divisor+1,c
 30263  0031FC  0E00               	movlw	0
 30264  0031FE  6E07               	movwf	___llmod@divisor+2,c
 30265  003200  0E00               	movlw	0
 30266  003202  6E08               	movwf	___llmod@divisor+3,c
 30267  003204  EC58  F031         	call	___llmod	;wreg free
 30268  003208  5001               	movf	?___llmod,w,c
 30269  00320A  0F30               	addlw	48
 30270  00320C  6EDF               	movwf	indf2,c
 30271                           
 30272                           ;display.c: 303: value /= 10;
 30273  00320E  C00E  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30274  003212  C00F  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30275  003216  C010  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30276  00321A  C011  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30277  00321E  0E0A               	movlw	10
 30278  003220  6E05               	movwf	___lldiv@divisor,c
 30279  003222  0E00               	movlw	0
 30280  003224  6E06               	movwf	___lldiv@divisor+1,c
 30281  003226  0E00               	movlw	0
 30282  003228  6E07               	movwf	___lldiv@divisor+2,c
 30283  00322A  0E00               	movlw	0
 30284  00322C  6E08               	movwf	___lldiv@divisor+3,c
 30285  00322E  ECAE  F02E         	call	___lldiv	;wreg free
 30286  003232  C001  F00E         	movff	?___lldiv,__display_itoa_u32@value
 30287  003236  C002  F00F         	movff	?___lldiv+1,__display_itoa_u32@value+1
 30288  00323A  C003  F010         	movff	?___lldiv+2,__display_itoa_u32@value+2
 30289  00323E  C004  F011         	movff	?___lldiv+3,__display_itoa_u32@value+3
 30290  003242  0614               	decf	__display_itoa_u32@cntr,f,c
 30291  003244  D7BC               	goto	l10573
 30292  003246                     u8120:
 30293                           
 30294                           ;display.c: 304: };display.c: 306: return number_of_digits;
 30295  003246  5015               	movf	__display_itoa_u32@number_of_digits,w,c
 30296  003248  0012               	return	
 30297  00324A                     __end_of__display_itoa_u32:
 30298                           	opt stack 0
 30299                           tosu	equ	0xFFF
 30300                           tosh	equ	0xFFE
 30301                           tosl	equ	0xFFD
 30302                           pclath	equ	0xFFA
 30303                           tblptru	equ	0xFF8
 30304                           tblptrh	equ	0xFF7
 30305                           tblptrl	equ	0xFF6
 30306                           tablat	equ	0xFF5
 30307                           prodh	equ	0xFF4
 30308                           prodl	equ	0xFF3
 30309                           intcon	equ	0xFF2
 30310                           intcon3	equ	0xFF0
 30311                           indf0	equ	0xFEF
 30312                           postinc0	equ	0xFEE
 30313                           fsr0h	equ	0xFEA
 30314                           fsr0l	equ	0xFE9
 30315                           wreg	equ	0xFE8
 30316                           indf1	equ	0xFE7
 30317                           postdec1	equ	0xFE5
 30318                           plusw1	equ	0xFE3
 30319                           fsr1h	equ	0xFE2
 30320                           fsr1l	equ	0xFE1
 30321                           indf2	equ	0xFDF
 30322                           postinc2	equ	0xFDE
 30323                           postdec2	equ	0xFDD
 30324                           plusw2	equ	0xFDB
 30325                           fsr2h	equ	0xFDA
 30326                           fsr2l	equ	0xFD9
 30327                           status	equ	0xFD8
 30328                           
 30329 ;; *************** function ___wmul *****************
 30330 ;; Defined at:
 30331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 30332 ;; Parameters:    Size  Location     Type
 30333 ;;  multiplier      2    0[COMRAM] unsigned int 
 30334 ;;  multiplicand    2    2[COMRAM] unsigned int 
 30335 ;; Auto vars:     Size  Location     Type
 30336 ;;  product         2    4[COMRAM] unsigned int 
 30337 ;; Return value:  Size  Location     Type
 30338 ;;                  2    0[COMRAM] unsigned int 
 30339 ;; Registers used:
 30340 ;;		wreg, status,2, status,0, prodl, prodh
 30341 ;; Tracked objects:
 30342 ;;		On entry : 0/0
 30343 ;;		On exit  : 0/0
 30344 ;;		Unchanged: 0/0
 30345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30350 ;;Total ram usage:        6 bytes
 30351 ;; Hardware stack levels used:    1
 30352 ;; This function calls:
 30353 ;;		Nothing
 30354 ;; This function is called by:
 30355 ;;		__display_itoa_u32
 30356 ;; This function uses a non-reentrant model
 30357 ;;
 30358                           
 30359                           	psect	text150
 30360  007114                     __ptext150:
 30361                           	opt stack 0
 30362  007114                     ___wmul:
 30363                           	opt stack 24
 30364                           
 30365                           ;incstack = 0
 30366  007114  5001               	movf	___wmul@multiplier,w,c
 30367  007116  0203               	mulwf	___wmul@multiplicand,c
 30368  007118  CFF3 F005          	movff	prodl,___wmul@product
 30369  00711C  CFF4 F006          	movff	prodh,___wmul@product+1
 30370  007120  5001               	movf	___wmul@multiplier,w,c
 30371  007122  0204               	mulwf	___wmul@multiplicand+1,c
 30372  007124  50F3               	movf	prodl,w,c
 30373  007126  2606               	addwf	___wmul@product+1,f,c
 30374  007128  5002               	movf	___wmul@multiplier+1,w,c
 30375  00712A  0203               	mulwf	___wmul@multiplicand,c
 30376  00712C  50F3               	movf	prodl,w,c
 30377  00712E  2606               	addwf	___wmul@product+1,f,c
 30378  007130  C005  F001         	movff	___wmul@product,?___wmul
 30379  007134  C006  F002         	movff	___wmul@product+1,?___wmul+1
 30380  007138  0012               	return	
 30381  00713A                     __end_of___wmul:
 30382                           	opt stack 0
 30383                           tosu	equ	0xFFF
 30384                           tosh	equ	0xFFE
 30385                           tosl	equ	0xFFD
 30386                           pclath	equ	0xFFA
 30387                           tblptru	equ	0xFF8
 30388                           tblptrh	equ	0xFF7
 30389                           tblptrl	equ	0xFF6
 30390                           tablat	equ	0xFF5
 30391                           prodh	equ	0xFF4
 30392                           prodl	equ	0xFF3
 30393                           intcon	equ	0xFF2
 30394                           intcon3	equ	0xFF0
 30395                           indf0	equ	0xFEF
 30396                           postinc0	equ	0xFEE
 30397                           fsr0h	equ	0xFEA
 30398                           fsr0l	equ	0xFE9
 30399                           wreg	equ	0xFE8
 30400                           indf1	equ	0xFE7
 30401                           postdec1	equ	0xFE5
 30402                           plusw1	equ	0xFE3
 30403                           fsr1h	equ	0xFE2
 30404                           fsr1l	equ	0xFE1
 30405                           indf2	equ	0xFDF
 30406                           postinc2	equ	0xFDE
 30407                           postdec2	equ	0xFDD
 30408                           plusw2	equ	0xFDB
 30409                           fsr2h	equ	0xFDA
 30410                           fsr2l	equ	0xFD9
 30411                           status	equ	0xFD8
 30412                           
 30413 ;; *************** function ___llmod *****************
 30414 ;; Defined at:
 30415 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30416 ;; Parameters:    Size  Location     Type
 30417 ;;  dividend        4    0[COMRAM] unsigned long 
 30418 ;;  divisor         4    4[COMRAM] unsigned long 
 30419 ;; Auto vars:     Size  Location     Type
 30420 ;;  counter         1    8[COMRAM] unsigned char 
 30421 ;; Return value:  Size  Location     Type
 30422 ;;                  4    0[COMRAM] unsigned long 
 30423 ;; Registers used:
 30424 ;;		wreg, status,2, status,0
 30425 ;; Tracked objects:
 30426 ;;		On entry : 0/0
 30427 ;;		On exit  : 0/0
 30428 ;;		Unchanged: 0/0
 30429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30430 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30433 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30434 ;;Total ram usage:        9 bytes
 30435 ;; Hardware stack levels used:    1
 30436 ;; This function calls:
 30437 ;;		Nothing
 30438 ;; This function is called by:
 30439 ;;		__display_itoa_u32
 30440 ;; This function uses a non-reentrant model
 30441 ;;
 30442                           
 30443                           	psect	text151
 30444  0062B0                     __ptext151:
 30445                           	opt stack 0
 30446  0062B0                     ___llmod:
 30447                           	opt stack 24
 30448                           
 30449                           ;incstack = 0
 30450  0062B0  5005               	movf	___llmod@divisor,w,c
 30451  0062B2  1006               	iorwf	___llmod@divisor+1,w,c
 30452  0062B4  1007               	iorwf	___llmod@divisor+2,w,c
 30453  0062B6  1008               	iorwf	___llmod@divisor+3,w,c
 30454  0062B8  B4D8               	btfsc	status,2,c
 30455  0062BA  D024               	goto	l3287
 30456  0062BC  0E01               	movlw	1
 30457  0062BE  6E09               	movwf	___llmod@counter,c
 30458  0062C0  D006               	goto	l3282
 30459  0062C2  90D8               	bcf	status,0,c
 30460  0062C4  3605               	rlcf	___llmod@divisor,f,c
 30461  0062C6  3606               	rlcf	___llmod@divisor+1,f,c
 30462  0062C8  3607               	rlcf	___llmod@divisor+2,f,c
 30463  0062CA  3608               	rlcf	___llmod@divisor+3,f,c
 30464  0062CC  2A09               	incf	___llmod@counter,f,c
 30465  0062CE                     l3282:
 30466  0062CE  AE08               	btfss	___llmod@divisor+3,7,c
 30467  0062D0  D7F8               	goto	l3283
 30468  0062D2                     u7610:
 30469  0062D2  5005               	movf	___llmod@divisor,w,c
 30470  0062D4  5C01               	subwf	___llmod@dividend,w,c
 30471  0062D6  5006               	movf	___llmod@divisor+1,w,c
 30472  0062D8  5802               	subwfb	___llmod@dividend+1,w,c
 30473  0062DA  5007               	movf	___llmod@divisor+2,w,c
 30474  0062DC  5803               	subwfb	___llmod@dividend+2,w,c
 30475  0062DE  5008               	movf	___llmod@divisor+3,w,c
 30476  0062E0  5804               	subwfb	___llmod@dividend+3,w,c
 30477  0062E2  A0D8               	btfss	status,0,c
 30478  0062E4  D008               	goto	l3286
 30479  0062E6  5005               	movf	___llmod@divisor,w,c
 30480  0062E8  5E01               	subwf	___llmod@dividend,f,c
 30481  0062EA  5006               	movf	___llmod@divisor+1,w,c
 30482  0062EC  5A02               	subwfb	___llmod@dividend+1,f,c
 30483  0062EE  5007               	movf	___llmod@divisor+2,w,c
 30484  0062F0  5A03               	subwfb	___llmod@dividend+2,f,c
 30485  0062F2  5008               	movf	___llmod@divisor+3,w,c
 30486  0062F4  5A04               	subwfb	___llmod@dividend+3,f,c
 30487  0062F6                     l3286:
 30488  0062F6  90D8               	bcf	status,0,c
 30489  0062F8  3208               	rrcf	___llmod@divisor+3,f,c
 30490  0062FA  3207               	rrcf	___llmod@divisor+2,f,c
 30491  0062FC  3206               	rrcf	___llmod@divisor+1,f,c
 30492  0062FE  3205               	rrcf	___llmod@divisor,f,c
 30493  006300  2E09               	decfsz	___llmod@counter,f,c
 30494  006302  D7E7               	goto	u7610
 30495  006304                     l3287:
 30496  006304  C001  F001         	movff	___llmod@dividend,?___llmod
 30497  006308  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30498  00630C  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30499  006310  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30500  006314  0012               	return		;funcret
 30501  006316                     __end_of___llmod:
 30502                           	opt stack 0
 30503                           tosu	equ	0xFFF
 30504                           tosh	equ	0xFFE
 30505                           tosl	equ	0xFFD
 30506                           pclath	equ	0xFFA
 30507                           tblptru	equ	0xFF8
 30508                           tblptrh	equ	0xFF7
 30509                           tblptrl	equ	0xFF6
 30510                           tablat	equ	0xFF5
 30511                           prodh	equ	0xFF4
 30512                           prodl	equ	0xFF3
 30513                           intcon	equ	0xFF2
 30514                           intcon3	equ	0xFF0
 30515                           indf0	equ	0xFEF
 30516                           postinc0	equ	0xFEE
 30517                           fsr0h	equ	0xFEA
 30518                           fsr0l	equ	0xFE9
 30519                           wreg	equ	0xFE8
 30520                           indf1	equ	0xFE7
 30521                           postdec1	equ	0xFE5
 30522                           plusw1	equ	0xFE3
 30523                           fsr1h	equ	0xFE2
 30524                           fsr1l	equ	0xFE1
 30525                           indf2	equ	0xFDF
 30526                           postinc2	equ	0xFDE
 30527                           postdec2	equ	0xFDD
 30528                           plusw2	equ	0xFDB
 30529                           fsr2h	equ	0xFDA
 30530                           fsr2l	equ	0xFD9
 30531                           status	equ	0xFD8
 30532                           
 30533 ;; *************** function ___lldiv *****************
 30534 ;; Defined at:
 30535 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30536 ;; Parameters:    Size  Location     Type
 30537 ;;  dividend        4    0[COMRAM] unsigned long 
 30538 ;;  divisor         4    4[COMRAM] unsigned long 
 30539 ;; Auto vars:     Size  Location     Type
 30540 ;;  quotient        4    8[COMRAM] unsigned long 
 30541 ;;  counter         1   12[COMRAM] unsigned char 
 30542 ;; Return value:  Size  Location     Type
 30543 ;;                  4    0[COMRAM] unsigned long 
 30544 ;; Registers used:
 30545 ;;		wreg, status,2, status,0
 30546 ;; Tracked objects:
 30547 ;;		On entry : 0/0
 30548 ;;		On exit  : 0/0
 30549 ;;		Unchanged: 0/0
 30550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30552 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30554 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30555 ;;Total ram usage:       13 bytes
 30556 ;; Hardware stack levels used:    1
 30557 ;; This function calls:
 30558 ;;		Nothing
 30559 ;; This function is called by:
 30560 ;;		__display_itoa_u32
 30561 ;; This function uses a non-reentrant model
 30562 ;;
 30563                           
 30564                           	psect	text152
 30565  005D5C                     __ptext152:
 30566                           	opt stack 0
 30567  005D5C                     ___lldiv:
 30568                           	opt stack 24
 30569                           
 30570                           ;incstack = 0
 30571  005D5C  0E00               	movlw	0
 30572  005D5E  6E09               	movwf	___lldiv@quotient,c
 30573  005D60  0E00               	movlw	0
 30574  005D62  6E0A               	movwf	___lldiv@quotient+1,c
 30575  005D64  0E00               	movlw	0
 30576  005D66  6E0B               	movwf	___lldiv@quotient+2,c
 30577  005D68  0E00               	movlw	0
 30578  005D6A  6E0C               	movwf	___lldiv@quotient+3,c
 30579  005D6C  5005               	movf	___lldiv@divisor,w,c
 30580  005D6E  1006               	iorwf	___lldiv@divisor+1,w,c
 30581  005D70  1007               	iorwf	___lldiv@divisor+2,w,c
 30582  005D72  1008               	iorwf	___lldiv@divisor+3,w,c
 30583  005D74  B4D8               	btfsc	status,2,c
 30584  005D76  D02A               	goto	l2906
 30585  005D78  0E01               	movlw	1
 30586  005D7A  6E0D               	movwf	___lldiv@counter,c
 30587  005D7C  D006               	goto	l2901
 30588  005D7E  90D8               	bcf	status,0,c
 30589  005D80  3605               	rlcf	___lldiv@divisor,f,c
 30590  005D82  3606               	rlcf	___lldiv@divisor+1,f,c
 30591  005D84  3607               	rlcf	___lldiv@divisor+2,f,c
 30592  005D86  3608               	rlcf	___lldiv@divisor+3,f,c
 30593  005D88  2A0D               	incf	___lldiv@counter,f,c
 30594  005D8A                     l2901:
 30595  005D8A  AE08               	btfss	___lldiv@divisor+3,7,c
 30596  005D8C  D7F8               	goto	l2902
 30597  005D8E                     u7580:
 30598  005D8E  90D8               	bcf	status,0,c
 30599  005D90  3609               	rlcf	___lldiv@quotient,f,c
 30600  005D92  360A               	rlcf	___lldiv@quotient+1,f,c
 30601  005D94  360B               	rlcf	___lldiv@quotient+2,f,c
 30602  005D96  360C               	rlcf	___lldiv@quotient+3,f,c
 30603  005D98  5005               	movf	___lldiv@divisor,w,c
 30604  005D9A  5C01               	subwf	___lldiv@dividend,w,c
 30605  005D9C  5006               	movf	___lldiv@divisor+1,w,c
 30606  005D9E  5802               	subwfb	___lldiv@dividend+1,w,c
 30607  005DA0  5007               	movf	___lldiv@divisor+2,w,c
 30608  005DA2  5803               	subwfb	___lldiv@dividend+2,w,c
 30609  005DA4  5008               	movf	___lldiv@divisor+3,w,c
 30610  005DA6  5804               	subwfb	___lldiv@dividend+3,w,c
 30611  005DA8  A0D8               	btfss	status,0,c
 30612  005DAA  D009               	goto	l2905
 30613  005DAC  5005               	movf	___lldiv@divisor,w,c
 30614  005DAE  5E01               	subwf	___lldiv@dividend,f,c
 30615  005DB0  5006               	movf	___lldiv@divisor+1,w,c
 30616  005DB2  5A02               	subwfb	___lldiv@dividend+1,f,c
 30617  005DB4  5007               	movf	___lldiv@divisor+2,w,c
 30618  005DB6  5A03               	subwfb	___lldiv@dividend+2,f,c
 30619  005DB8  5008               	movf	___lldiv@divisor+3,w,c
 30620  005DBA  5A04               	subwfb	___lldiv@dividend+3,f,c
 30621  005DBC  8009               	bsf	___lldiv@quotient,0,c
 30622  005DBE                     l2905:
 30623  005DBE  90D8               	bcf	status,0,c
 30624  005DC0  3208               	rrcf	___lldiv@divisor+3,f,c
 30625  005DC2  3207               	rrcf	___lldiv@divisor+2,f,c
 30626  005DC4  3206               	rrcf	___lldiv@divisor+1,f,c
 30627  005DC6  3205               	rrcf	___lldiv@divisor,f,c
 30628  005DC8  2E0D               	decfsz	___lldiv@counter,f,c
 30629  005DCA  D7E1               	goto	u7580
 30630  005DCC                     l2906:
 30631  005DCC  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30632  005DD0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30633  005DD4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30634  005DD8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30635  005DDC  0012               	return		;funcret
 30636  005DDE                     __end_of___lldiv:
 30637                           	opt stack 0
 30638                           tosu	equ	0xFFF
 30639                           tosh	equ	0xFFE
 30640                           tosl	equ	0xFFD
 30641                           pclath	equ	0xFFA
 30642                           tblptru	equ	0xFF8
 30643                           tblptrh	equ	0xFF7
 30644                           tblptrl	equ	0xFF6
 30645                           tablat	equ	0xFF5
 30646                           prodh	equ	0xFF4
 30647                           prodl	equ	0xFF3
 30648                           intcon	equ	0xFF2
 30649                           intcon3	equ	0xFF0
 30650                           indf0	equ	0xFEF
 30651                           postinc0	equ	0xFEE
 30652                           fsr0h	equ	0xFEA
 30653                           fsr0l	equ	0xFE9
 30654                           wreg	equ	0xFE8
 30655                           indf1	equ	0xFE7
 30656                           postdec1	equ	0xFE5
 30657                           plusw1	equ	0xFE3
 30658                           fsr1h	equ	0xFE2
 30659                           fsr1l	equ	0xFE1
 30660                           indf2	equ	0xFDF
 30661                           postinc2	equ	0xFDE
 30662                           postdec2	equ	0xFDD
 30663                           plusw2	equ	0xFDB
 30664                           fsr2h	equ	0xFDA
 30665                           fsr2l	equ	0xFD9
 30666                           status	equ	0xFD8
 30667                           
 30668 ;; *************** function __display_done *****************
 30669 ;; Defined at:
 30670 ;;		line 638 in file "display.c"
 30671 ;; Parameters:    Size  Location     Type
 30672 ;;		None
 30673 ;; Auto vars:     Size  Location     Type
 30674 ;;  cntr            1   28[COMRAM] unsigned char 
 30675 ;; Return value:  Size  Location     Type
 30676 ;;                  1    wreg      void 
 30677 ;; Registers used:
 30678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30679 ;; Tracked objects:
 30680 ;;		On entry : 0/0
 30681 ;;		On exit  : 0/0
 30682 ;;		Unchanged: 0/0
 30683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30688 ;;Total ram usage:        1 bytes
 30689 ;; Hardware stack levels used:    1
 30690 ;; Hardware stack levels required when called:    4
 30691 ;; This function calls:
 30692 ;;		__display_itoa_u16
 30693 ;;		_bootloader_get_flashPagesWritten
 30694 ;; This function is called by:
 30695 ;;		_display_prepare
 30696 ;; This function uses a non-reentrant model
 30697 ;;
 30698                           
 30699                           	psect	text153
 30700  002F80                     __ptext153:
 30701                           	opt stack 0
 30702  002F80                     __display_done:
 30703                           	opt stack 22
 30704                           
 30705                           ;display.c: 640: uint8_t cntr;;display.c: 641: cntr = 0;
 30706                           
 30707                           ;incstack = 0
 30708  002F80  0E00               	movlw	0
 30709  002F82  6E1D               	movwf	__display_done@cntr,c
 30710                           
 30711                           ;display.c: 642: while(done_line1[cntr])
 30712  002F84  D017               	goto	l1720
 30713  002F86                     
 30714                           ;display.c: 643: display_content[0][cntr] = done_line1[cntr++];
 30715  002F86  501D               	movf	__display_done@cntr,w,c
 30716  002F88  0D01               	mullw	1
 30717  002F8A  0E40               	movlw	low _done_line1
 30718  002F8C  24F3               	addwf	prodl,w,c
 30719  002F8E  6EF6               	movwf	tblptrl,c
 30720  002F90  0E8D               	movlw	high _done_line1
 30721  002F92  20F4               	addwfc	prodh,w,c
 30722  002F94  6EF7               	movwf	tblptrh,c
 30723  002F96                     	if	1	;There are 3 active tblptr bytes
 30724  002F96  6AF8               	clrf	tblptru,c
 30725  002F98  0E00               	movlw	low (__mediumconst shr (0+16))
 30726  002F9A  22F8               	addwfc	tblptru,f,c
 30727  002F9C                     	endif
 30728  002F9C  501D               	movf	__display_done@cntr,w,c
 30729  002F9E  0D01               	mullw	1
 30730  002FA0  0E7B               	movlw	low _display_content
 30731  002FA2  24F3               	addwf	prodl,w,c
 30732  002FA4  6ED9               	movwf	fsr2l,c
 30733  002FA6  0E01               	movlw	high _display_content
 30734  002FA8  20F4               	addwfc	prodh,w,c
 30735  002FAA  6EDA               	movwf	fsr2h,c
 30736  002FAC  0008               	tblrd		*
 30737  002FAE  CFF5 FFDF          	movff	tablat,indf2
 30738  002FB2  2A1D               	incf	__display_done@cntr,f,c
 30739  002FB4                     l1720:
 30740  002FB4  501D               	movf	__display_done@cntr,w,c
 30741  002FB6  0D01               	mullw	1
 30742  002FB8  0E40               	movlw	low _done_line1
 30743  002FBA  24F3               	addwf	prodl,w,c
 30744  002FBC  6EF6               	movwf	tblptrl,c
 30745  002FBE  0E8D               	movlw	high _done_line1
 30746  002FC0  20F4               	addwfc	prodh,w,c
 30747  002FC2  6EF7               	movwf	tblptrh,c
 30748  002FC4                     	if	1	;There are 3 active tblptr bytes
 30749  002FC4  6AF8               	clrf	tblptru,c
 30750  002FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 30751  002FC8  22F8               	addwfc	tblptru,f,c
 30752  002FCA                     	endif
 30753  002FCA  0008               	tblrd		*
 30754  002FCC  50F5               	movf	tablat,w,c
 30755  002FCE  0900               	iorlw	0
 30756  002FD0  A4D8               	btfss	status,2,c
 30757  002FD2  D7D9               	goto	l1721
 30758                           
 30759                           ;display.c: 644: cntr = 0;
 30760  002FD4  0E00               	movlw	0
 30761  002FD6  6E1D               	movwf	__display_done@cntr,c
 30762                           
 30763                           ;display.c: 645: while(done_line2[cntr])
 30764  002FD8  D017               	goto	l1723
 30765  002FDA                     
 30766                           ;display.c: 646: display_content[1][cntr] = done_line2[cntr++];
 30767  002FDA  501D               	movf	__display_done@cntr,w,c
 30768  002FDC  0D01               	mullw	1
 30769  002FDE  0E75               	movlw	low _done_line2
 30770  002FE0  24F3               	addwf	prodl,w,c
 30771  002FE2  6EF6               	movwf	tblptrl,c
 30772  002FE4  0E8E               	movlw	high _done_line2
 30773  002FE6  20F4               	addwfc	prodh,w,c
 30774  002FE8  6EF7               	movwf	tblptrh,c
 30775  002FEA                     	if	1	;There are 3 active tblptr bytes
 30776  002FEA  6AF8               	clrf	tblptru,c
 30777  002FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 30778  002FEE  22F8               	addwfc	tblptru,f,c
 30779  002FF0                     	endif
 30780  002FF0  501D               	movf	__display_done@cntr,w,c
 30781  002FF2  0D01               	mullw	1
 30782  002FF4  0E8F               	movlw	low (_display_content+20)
 30783  002FF6  24F3               	addwf	prodl,w,c
 30784  002FF8  6ED9               	movwf	fsr2l,c
 30785  002FFA  0E01               	movlw	high (_display_content+20)
 30786  002FFC  20F4               	addwfc	prodh,w,c
 30787  002FFE  6EDA               	movwf	fsr2h,c
 30788  003000  0008               	tblrd		*
 30789  003002  CFF5 FFDF          	movff	tablat,indf2
 30790  003006  2A1D               	incf	__display_done@cntr,f,c
 30791  003008                     l1723:
 30792  003008  501D               	movf	__display_done@cntr,w,c
 30793  00300A  0D01               	mullw	1
 30794  00300C  0E75               	movlw	low _done_line2
 30795  00300E  24F3               	addwf	prodl,w,c
 30796  003010  6EF6               	movwf	tblptrl,c
 30797  003012  0E8E               	movlw	high _done_line2
 30798  003014  20F4               	addwfc	prodh,w,c
 30799  003016  6EF7               	movwf	tblptrh,c
 30800  003018                     	if	1	;There are 3 active tblptr bytes
 30801  003018  6AF8               	clrf	tblptru,c
 30802  00301A  0E00               	movlw	low (__mediumconst shr (0+16))
 30803  00301C  22F8               	addwfc	tblptru,f,c
 30804  00301E                     	endif
 30805  00301E  0008               	tblrd		*
 30806  003020  50F5               	movf	tablat,w,c
 30807  003022  0900               	iorlw	0
 30808  003024  A4D8               	btfss	status,2,c
 30809  003026  D7D9               	goto	l1724
 30810                           
 30811                           ;display.c: 647: cntr = 0;
 30812  003028  0E00               	movlw	0
 30813  00302A  6E1D               	movwf	__display_done@cntr,c
 30814                           
 30815                           ;display.c: 648: while(done_line3[cntr])
 30816  00302C  D017               	goto	l1726
 30817  00302E                     
 30818                           ;display.c: 649: display_content[2][cntr] = done_line3[cntr++];
 30819  00302E  501D               	movf	__display_done@cntr,w,c
 30820  003030  0D01               	mullw	1
 30821  003032  0E30               	movlw	low _done_line3
 30822  003034  24F3               	addwf	prodl,w,c
 30823  003036  6EF6               	movwf	tblptrl,c
 30824  003038  0E8D               	movlw	high _done_line3
 30825  00303A  20F4               	addwfc	prodh,w,c
 30826  00303C  6EF7               	movwf	tblptrh,c
 30827  00303E                     	if	1	;There are 3 active tblptr bytes
 30828  00303E  6AF8               	clrf	tblptru,c
 30829  003040  0E00               	movlw	low (__mediumconst shr (0+16))
 30830  003042  22F8               	addwfc	tblptru,f,c
 30831  003044                     	endif
 30832  003044  501D               	movf	__display_done@cntr,w,c
 30833  003046  0D01               	mullw	1
 30834  003048  0EA3               	movlw	low (_display_content+40)
 30835  00304A  24F3               	addwf	prodl,w,c
 30836  00304C  6ED9               	movwf	fsr2l,c
 30837  00304E  0E01               	movlw	high (_display_content+40)
 30838  003050  20F4               	addwfc	prodh,w,c
 30839  003052  6EDA               	movwf	fsr2h,c
 30840  003054  0008               	tblrd		*
 30841  003056  CFF5 FFDF          	movff	tablat,indf2
 30842  00305A  2A1D               	incf	__display_done@cntr,f,c
 30843  00305C                     l1726:
 30844  00305C  501D               	movf	__display_done@cntr,w,c
 30845  00305E  0D01               	mullw	1
 30846  003060  0E30               	movlw	low _done_line3
 30847  003062  24F3               	addwf	prodl,w,c
 30848  003064  6EF6               	movwf	tblptrl,c
 30849  003066  0E8D               	movlw	high _done_line3
 30850  003068  20F4               	addwfc	prodh,w,c
 30851  00306A  6EF7               	movwf	tblptrh,c
 30852  00306C                     	if	1	;There are 3 active tblptr bytes
 30853  00306C  6AF8               	clrf	tblptru,c
 30854  00306E  0E00               	movlw	low (__mediumconst shr (0+16))
 30855  003070  22F8               	addwfc	tblptru,f,c
 30856  003072                     	endif
 30857  003072  0008               	tblrd		*
 30858  003074  50F5               	movf	tablat,w,c
 30859  003076  0900               	iorlw	0
 30860  003078  A4D8               	btfss	status,2,c
 30861  00307A  D7D9               	goto	l1727
 30862                           
 30863                           ;display.c: 650: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30864  00307C  EC2F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 30865  003080  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30866  003084  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30867  003088  501D               	movf	__display_done@cntr,w,c
 30868  00308A  0D01               	mullw	1
 30869  00308C  0EA3               	movlw	low (_display_content+40)
 30870  00308E  24F3               	addwf	prodl,w,c
 30871  003090  6E1B               	movwf	__display_itoa_u16@text,c
 30872  003092  0E01               	movlw	high (_display_content+40)
 30873  003094  20F4               	addwfc	prodh,w,c
 30874  003096  6E1C               	movwf	__display_itoa_u16@text+1,c
 30875  003098  EC9C  F028         	call	__display_itoa_u16	;wreg free
 30876                           
 30877                           ;display.c: 651: cntr = 0;
 30878  00309C  0E00               	movlw	0
 30879  00309E  6E1D               	movwf	__display_done@cntr,c
 30880                           
 30881                           ;display.c: 652: while(done_line4[cntr])
 30882  0030A0  D017               	goto	l1729
 30883  0030A2                     
 30884                           ;display.c: 653: display_content[3][cntr] = done_line4[cntr++];
 30885  0030A2  501D               	movf	__display_done@cntr,w,c
 30886  0030A4  0D01               	mullw	1
 30887  0030A6  0E20               	movlw	low _done_line4
 30888  0030A8  24F3               	addwf	prodl,w,c
 30889  0030AA  6EF6               	movwf	tblptrl,c
 30890  0030AC  0E8D               	movlw	high _done_line4
 30891  0030AE  20F4               	addwfc	prodh,w,c
 30892  0030B0  6EF7               	movwf	tblptrh,c
 30893  0030B2                     	if	1	;There are 3 active tblptr bytes
 30894  0030B2  6AF8               	clrf	tblptru,c
 30895  0030B4  0E00               	movlw	low (__mediumconst shr (0+16))
 30896  0030B6  22F8               	addwfc	tblptru,f,c
 30897  0030B8                     	endif
 30898  0030B8  501D               	movf	__display_done@cntr,w,c
 30899  0030BA  0D01               	mullw	1
 30900  0030BC  0EB7               	movlw	low (_display_content+60)
 30901  0030BE  24F3               	addwf	prodl,w,c
 30902  0030C0  6ED9               	movwf	fsr2l,c
 30903  0030C2  0E01               	movlw	high (_display_content+60)
 30904  0030C4  20F4               	addwfc	prodh,w,c
 30905  0030C6  6EDA               	movwf	fsr2h,c
 30906  0030C8  0008               	tblrd		*
 30907  0030CA  CFF5 FFDF          	movff	tablat,indf2
 30908  0030CE  2A1D               	incf	__display_done@cntr,f,c
 30909  0030D0                     l1729:
 30910  0030D0  501D               	movf	__display_done@cntr,w,c
 30911  0030D2  0D01               	mullw	1
 30912  0030D4  0E20               	movlw	low _done_line4
 30913  0030D6  24F3               	addwf	prodl,w,c
 30914  0030D8  6EF6               	movwf	tblptrl,c
 30915  0030DA  0E8D               	movlw	high _done_line4
 30916  0030DC  20F4               	addwfc	prodh,w,c
 30917  0030DE  6EF7               	movwf	tblptrh,c
 30918  0030E0                     	if	1	;There are 3 active tblptr bytes
 30919  0030E0  6AF8               	clrf	tblptru,c
 30920  0030E2  0E00               	movlw	low (__mediumconst shr (0+16))
 30921  0030E4  22F8               	addwfc	tblptru,f,c
 30922  0030E6                     	endif
 30923  0030E6  0008               	tblrd		*
 30924  0030E8  50F5               	movf	tablat,w,c
 30925  0030EA  0900               	iorlw	0
 30926  0030EC  B4D8               	btfsc	status,2,c
 30927  0030EE  0012               	return	
 30928  0030F0  D7D8               	goto	l1730
 30929  0030F2                     __end_of__display_done:
 30930                           	opt stack 0
 30931                           tosu	equ	0xFFF
 30932                           tosh	equ	0xFFE
 30933                           tosl	equ	0xFFD
 30934                           pclath	equ	0xFFA
 30935                           tblptru	equ	0xFF8
 30936                           tblptrh	equ	0xFF7
 30937                           tblptrl	equ	0xFF6
 30938                           tablat	equ	0xFF5
 30939                           prodh	equ	0xFF4
 30940                           prodl	equ	0xFF3
 30941                           intcon	equ	0xFF2
 30942                           intcon3	equ	0xFF0
 30943                           indf0	equ	0xFEF
 30944                           postinc0	equ	0xFEE
 30945                           fsr0h	equ	0xFEA
 30946                           fsr0l	equ	0xFE9
 30947                           wreg	equ	0xFE8
 30948                           indf1	equ	0xFE7
 30949                           postdec1	equ	0xFE5
 30950                           plusw1	equ	0xFE3
 30951                           fsr1h	equ	0xFE2
 30952                           fsr1l	equ	0xFE1
 30953                           indf2	equ	0xFDF
 30954                           postinc2	equ	0xFDE
 30955                           postdec2	equ	0xFDD
 30956                           plusw2	equ	0xFDB
 30957                           fsr2h	equ	0xFDA
 30958                           fsr2l	equ	0xFD9
 30959                           status	equ	0xFD8
 30960                           
 30961 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30962 ;; Defined at:
 30963 ;;		line 514 in file "bootloader.c"
 30964 ;; Parameters:    Size  Location     Type
 30965 ;;		None
 30966 ;; Auto vars:     Size  Location     Type
 30967 ;;		None
 30968 ;; Return value:  Size  Location     Type
 30969 ;;                  2    0[COMRAM] unsigned int 
 30970 ;; Registers used:
 30971 ;;		None
 30972 ;; Tracked objects:
 30973 ;;		On entry : 0/0
 30974 ;;		On exit  : 0/0
 30975 ;;		Unchanged: 0/0
 30976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30981 ;;Total ram usage:        2 bytes
 30982 ;; Hardware stack levels used:    1
 30983 ;; This function calls:
 30984 ;;		Nothing
 30985 ;; This function is called by:
 30986 ;;		__display_programming
 30987 ;;		__display_done
 30988 ;;		__fill_buffer_get_bootloader_details
 30989 ;; This function uses a non-reentrant model
 30990 ;;
 30991                           
 30992                           	psect	text154
 30993  00745E                     __ptext154:
 30994                           	opt stack 0
 30995  00745E                     _bootloader_get_flashPagesWritten:
 30996                           	opt stack 25
 30997                           
 30998                           ;bootloader.c: 516: return flash_pages_written;
 30999                           
 31000                           ;incstack = 0
 31001  00745E  C165  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31002  007462  C166  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31003  007466  0012               	return		;funcret
 31004  007468                     __end_of_bootloader_get_flashPagesWritten:
 31005                           	opt stack 0
 31006                           tosu	equ	0xFFF
 31007                           tosh	equ	0xFFE
 31008                           tosl	equ	0xFFD
 31009                           pclath	equ	0xFFA
 31010                           tblptru	equ	0xFF8
 31011                           tblptrh	equ	0xFF7
 31012                           tblptrl	equ	0xFF6
 31013                           tablat	equ	0xFF5
 31014                           prodh	equ	0xFF4
 31015                           prodl	equ	0xFF3
 31016                           intcon	equ	0xFF2
 31017                           intcon3	equ	0xFF0
 31018                           indf0	equ	0xFEF
 31019                           postinc0	equ	0xFEE
 31020                           fsr0h	equ	0xFEA
 31021                           fsr0l	equ	0xFE9
 31022                           wreg	equ	0xFE8
 31023                           indf1	equ	0xFE7
 31024                           postdec1	equ	0xFE5
 31025                           plusw1	equ	0xFE3
 31026                           fsr1h	equ	0xFE2
 31027                           fsr1l	equ	0xFE1
 31028                           indf2	equ	0xFDF
 31029                           postinc2	equ	0xFDE
 31030                           postdec2	equ	0xFDD
 31031                           plusw2	equ	0xFDB
 31032                           fsr2h	equ	0xFDA
 31033                           fsr2l	equ	0xFD9
 31034                           status	equ	0xFD8
 31035                           
 31036 ;; *************** function __display_clear *****************
 31037 ;; Defined at:
 31038 ;;		line 186 in file "display.c"
 31039 ;; Parameters:    Size  Location     Type
 31040 ;;		None
 31041 ;; Auto vars:     Size  Location     Type
 31042 ;;  col             1    3[COMRAM] unsigned char 
 31043 ;;  row             1    2[COMRAM] unsigned char 
 31044 ;; Return value:  Size  Location     Type
 31045 ;;                  1    wreg      void 
 31046 ;; Registers used:
 31047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31048 ;; Tracked objects:
 31049 ;;		On entry : 0/0
 31050 ;;		On exit  : 0/0
 31051 ;;		Unchanged: 0/0
 31052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31056 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31057 ;;Total ram usage:        4 bytes
 31058 ;; Hardware stack levels used:    1
 31059 ;; This function calls:
 31060 ;;		Nothing
 31061 ;; This function is called by:
 31062 ;;		_display_prepare
 31063 ;; This function uses a non-reentrant model
 31064 ;;
 31065                           
 31066                           	psect	text155
 31067  006ADA                     __ptext155:
 31068                           	opt stack 0
 31069  006ADA                     __display_clear:
 31070                           	opt stack 26
 31071                           
 31072                           ;display.c: 188: uint8_t row;;display.c: 189: uint8_t col;;display.c: 190: for(row=0;row
      +                          <4;++row)
 31073                           
 31074                           ;incstack = 0
 31075  006ADA  0E00               	movlw	0
 31076  006ADC  6E03               	movwf	__display_clear@row,c
 31077  006ADE                     l10937:
 31078  006ADE  0E03               	movlw	3
 31079  006AE0  6403               	cpfsgt	__display_clear@row,c
 31080  006AE2  D001               	goto	l1486
 31081  006AE4  0012               	return	
 31082  006AE6                     l1486:
 31083                           
 31084                           ;display.c: 191: {;display.c: 192: for(col=0;col<20;++col)
 31085  006AE6  0E00               	movlw	0
 31086  006AE8  6E04               	movwf	__display_clear@col,c
 31087  006AEA                     l10943:
 31088  006AEA  0E13               	movlw	19
 31089  006AEC  6404               	cpfsgt	__display_clear@col,c
 31090  006AEE  D001               	goto	l1488
 31091  006AF0  D016               	goto	u8600
 31092  006AF2                     l1488:
 31093                           
 31094                           ;display.c: 193: {;display.c: 194: display_content[row][col] = ' ';
 31095  006AF2  5003               	movf	__display_clear@row,w,c
 31096  006AF4  0D14               	mullw	20
 31097  006AF6  0E7B               	movlw	low _display_content
 31098  006AF8  6E01               	movwf	??__display_clear& (0+255),c
 31099  006AFA  0E01               	movlw	high _display_content
 31100  006AFC  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31101  006AFE  50F3               	movf	prodl,w,c
 31102  006B00  2601               	addwf	??__display_clear,f,c
 31103  006B02  50F4               	movf	prodh,w,c
 31104  006B04  2202               	addwfc	??__display_clear+1,f,c
 31105  006B06  5004               	movf	__display_clear@col,w,c
 31106  006B08  0D01               	mullw	1
 31107  006B0A  50F3               	movf	prodl,w,c
 31108  006B0C  2401               	addwf	??__display_clear,w,c
 31109  006B0E  6ED9               	movwf	fsr2l,c
 31110  006B10  50F4               	movf	prodh,w,c
 31111  006B12  2002               	addwfc	??__display_clear+1,w,c
 31112  006B14  6EDA               	movwf	fsr2h,c
 31113  006B16  0E20               	movlw	32
 31114  006B18  6EDF               	movwf	indf2,c
 31115  006B1A  2A04               	incf	__display_clear@col,f,c
 31116  006B1C  D7E6               	goto	l10943
 31117  006B1E                     u8600:
 31118  006B1E  2A03               	incf	__display_clear@row,f,c
 31119  006B20  D7DE               	goto	l10937
 31120  006B22                     __end_of__display_clear:
 31121                           	opt stack 0
 31122                           tosu	equ	0xFFF
 31123                           tosh	equ	0xFFE
 31124                           tosl	equ	0xFFD
 31125                           pclath	equ	0xFFA
 31126                           tblptru	equ	0xFF8
 31127                           tblptrh	equ	0xFF7
 31128                           tblptrl	equ	0xFF6
 31129                           tablat	equ	0xFF5
 31130                           prodh	equ	0xFF4
 31131                           prodl	equ	0xFF3
 31132                           intcon	equ	0xFF2
 31133                           intcon3	equ	0xFF0
 31134                           indf0	equ	0xFEF
 31135                           postinc0	equ	0xFEE
 31136                           fsr0h	equ	0xFEA
 31137                           fsr0l	equ	0xFE9
 31138                           wreg	equ	0xFE8
 31139                           indf1	equ	0xFE7
 31140                           postdec1	equ	0xFE5
 31141                           plusw1	equ	0xFE3
 31142                           fsr1h	equ	0xFE2
 31143                           fsr1l	equ	0xFE1
 31144                           indf2	equ	0xFDF
 31145                           postinc2	equ	0xFDE
 31146                           postdec2	equ	0xFDD
 31147                           plusw2	equ	0xFDB
 31148                           fsr2h	equ	0xFDA
 31149                           fsr2l	equ	0xFD9
 31150                           status	equ	0xFD8
 31151                           
 31152 ;; *************** function __display_checked *****************
 31153 ;; Defined at:
 31154 ;;		line 542 in file "display.c"
 31155 ;; Parameters:    Size  Location     Type
 31156 ;;		None
 31157 ;; Auto vars:     Size  Location     Type
 31158 ;;  cntr            1   31[COMRAM] unsigned char 
 31159 ;;  start           1   30[COMRAM] unsigned char 
 31160 ;; Return value:  Size  Location     Type
 31161 ;;                  1    wreg      void 
 31162 ;; Registers used:
 31163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31164 ;; Tracked objects:
 31165 ;;		On entry : 0/0
 31166 ;;		On exit  : 0/0
 31167 ;;		Unchanged: 0/0
 31168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31173 ;;Total ram usage:        4 bytes
 31174 ;; Hardware stack levels used:    1
 31175 ;; Hardware stack levels required when called:    4
 31176 ;; This function calls:
 31177 ;;		__display_itoa_u16
 31178 ;;		_bootloader_get_total_entries
 31179 ;; This function is called by:
 31180 ;;		_display_prepare
 31181 ;; This function uses a non-reentrant model
 31182 ;;
 31183                           
 31184                           	psect	text156
 31185  002C92                     __ptext156:
 31186                           	opt stack 0
 31187  002C92                     __display_checked:
 31188                           	opt stack 22
 31189                           
 31190                           ;display.c: 544: uint8_t cntr;;display.c: 545: uint8_t start;;display.c: 546: cntr = 0;
 31191                           
 31192                           ;incstack = 0
 31193  002C92  0E00               	movlw	0
 31194  002C94  6E20               	movwf	__display_checked@cntr,c
 31195                           
 31196                           ;display.c: 547: while(checked_line1[cntr])
 31197  002C96  D017               	goto	l1656
 31198  002C98                     
 31199                           ;display.c: 548: display_content[0][cntr] = checked_line1[cntr++];
 31200  002C98  5020               	movf	__display_checked@cntr,w,c
 31201  002C9A  0D01               	mullw	1
 31202  002C9C  0E80               	movlw	low _checked_line1
 31203  002C9E  24F3               	addwf	prodl,w,c
 31204  002CA0  6EF6               	movwf	tblptrl,c
 31205  002CA2  0E8D               	movlw	high _checked_line1
 31206  002CA4  20F4               	addwfc	prodh,w,c
 31207  002CA6  6EF7               	movwf	tblptrh,c
 31208  002CA8                     	if	1	;There are 3 active tblptr bytes
 31209  002CA8  6AF8               	clrf	tblptru,c
 31210  002CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 31211  002CAC  22F8               	addwfc	tblptru,f,c
 31212  002CAE                     	endif
 31213  002CAE  5020               	movf	__display_checked@cntr,w,c
 31214  002CB0  0D01               	mullw	1
 31215  002CB2  0E7B               	movlw	low _display_content
 31216  002CB4  24F3               	addwf	prodl,w,c
 31217  002CB6  6ED9               	movwf	fsr2l,c
 31218  002CB8  0E01               	movlw	high _display_content
 31219  002CBA  20F4               	addwfc	prodh,w,c
 31220  002CBC  6EDA               	movwf	fsr2h,c
 31221  002CBE  0008               	tblrd		*
 31222  002CC0  CFF5 FFDF          	movff	tablat,indf2
 31223  002CC4  2A20               	incf	__display_checked@cntr,f,c
 31224  002CC6                     l1656:
 31225  002CC6  5020               	movf	__display_checked@cntr,w,c
 31226  002CC8  0D01               	mullw	1
 31227  002CCA  0E80               	movlw	low _checked_line1
 31228  002CCC  24F3               	addwf	prodl,w,c
 31229  002CCE  6EF6               	movwf	tblptrl,c
 31230  002CD0  0E8D               	movlw	high _checked_line1
 31231  002CD2  20F4               	addwfc	prodh,w,c
 31232  002CD4  6EF7               	movwf	tblptrh,c
 31233  002CD6                     	if	1	;There are 3 active tblptr bytes
 31234  002CD6  6AF8               	clrf	tblptru,c
 31235  002CD8  0E00               	movlw	low (__mediumconst shr (0+16))
 31236  002CDA  22F8               	addwfc	tblptru,f,c
 31237  002CDC                     	endif
 31238  002CDC  0008               	tblrd		*
 31239  002CDE  50F5               	movf	tablat,w,c
 31240  002CE0  0900               	iorlw	0
 31241  002CE2  A4D8               	btfss	status,2,c
 31242  002CE4  D7D9               	goto	l1657
 31243                           
 31244                           ;display.c: 549: cntr = 0;
 31245  002CE6  0E00               	movlw	0
 31246  002CE8  6E20               	movwf	__display_checked@cntr,c
 31247                           
 31248                           ;display.c: 550: while(checked_line2[cntr])
 31249  002CEA  D017               	goto	l1659
 31250  002CEC                     
 31251                           ;display.c: 551: display_content[1][cntr] = checked_line2[cntr++];
 31252  002CEC  5020               	movf	__display_checked@cntr,w,c
 31253  002CEE  0D01               	mullw	1
 31254  002CF0  0E45               	movlw	low _checked_line2
 31255  002CF2  24F3               	addwf	prodl,w,c
 31256  002CF4  6EF6               	movwf	tblptrl,c
 31257  002CF6  0E8C               	movlw	high _checked_line2
 31258  002CF8  20F4               	addwfc	prodh,w,c
 31259  002CFA  6EF7               	movwf	tblptrh,c
 31260  002CFC                     	if	1	;There are 3 active tblptr bytes
 31261  002CFC  6AF8               	clrf	tblptru,c
 31262  002CFE  0E00               	movlw	low (__mediumconst shr (0+16))
 31263  002D00  22F8               	addwfc	tblptru,f,c
 31264  002D02                     	endif
 31265  002D02  5020               	movf	__display_checked@cntr,w,c
 31266  002D04  0D01               	mullw	1
 31267  002D06  0E8F               	movlw	low (_display_content+20)
 31268  002D08  24F3               	addwf	prodl,w,c
 31269  002D0A  6ED9               	movwf	fsr2l,c
 31270  002D0C  0E01               	movlw	high (_display_content+20)
 31271  002D0E  20F4               	addwfc	prodh,w,c
 31272  002D10  6EDA               	movwf	fsr2h,c
 31273  002D12  0008               	tblrd		*
 31274  002D14  CFF5 FFDF          	movff	tablat,indf2
 31275  002D18  2A20               	incf	__display_checked@cntr,f,c
 31276  002D1A                     l1659:
 31277  002D1A  5020               	movf	__display_checked@cntr,w,c
 31278  002D1C  0D01               	mullw	1
 31279  002D1E  0E45               	movlw	low _checked_line2
 31280  002D20  24F3               	addwf	prodl,w,c
 31281  002D22  6EF6               	movwf	tblptrl,c
 31282  002D24  0E8C               	movlw	high _checked_line2
 31283  002D26  20F4               	addwfc	prodh,w,c
 31284  002D28  6EF7               	movwf	tblptrh,c
 31285  002D2A                     	if	1	;There are 3 active tblptr bytes
 31286  002D2A  6AF8               	clrf	tblptru,c
 31287  002D2C  0E00               	movlw	low (__mediumconst shr (0+16))
 31288  002D2E  22F8               	addwfc	tblptru,f,c
 31289  002D30                     	endif
 31290  002D30  0008               	tblrd		*
 31291  002D32  50F5               	movf	tablat,w,c
 31292  002D34  0900               	iorlw	0
 31293  002D36  A4D8               	btfss	status,2,c
 31294  002D38  D7D9               	goto	l1660
 31295                           
 31296                           ;display.c: 553: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31297  002D3A  EC34  F03A         	call	_bootloader_get_total_entries	;wreg free
 31298  002D3E  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31299  002D42  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31300  002D46  0EA3               	movlw	low (_display_content+40)
 31301  002D48  6E1B               	movwf	__display_itoa_u16@text,c
 31302  002D4A  0E01               	movlw	high (_display_content+40)
 31303  002D4C  6E1C               	movwf	__display_itoa_u16@text+1,c
 31304  002D4E  EC9C  F028         	call	__display_itoa_u16	;wreg free
 31305  002D52  6E1F               	movwf	__display_checked@start,c
 31306                           
 31307                           ;display.c: 554: start++;
 31308  002D54  2A1F               	incf	__display_checked@start,f,c
 31309                           
 31310                           ;display.c: 555: cntr = 0;
 31311  002D56  0E00               	movlw	0
 31312  002D58  6E20               	movwf	__display_checked@cntr,c
 31313                           
 31314                           ;display.c: 556: while(checked_line3[cntr])
 31315  002D5A  D01C               	goto	l1662
 31316  002D5C                     
 31317                           ;display.c: 557: display_content[2][start+cntr] = checked_line3[cntr++];
 31318  002D5C  5020               	movf	__display_checked@cntr,w,c
 31319  002D5E  0D01               	mullw	1
 31320  002D60  0E49               	movlw	low _checked_line3
 31321  002D62  24F3               	addwf	prodl,w,c
 31322  002D64  6EF6               	movwf	tblptrl,c
 31323  002D66  0E8E               	movlw	high _checked_line3
 31324  002D68  20F4               	addwfc	prodh,w,c
 31325  002D6A  6EF7               	movwf	tblptrh,c
 31326  002D6C                     	if	1	;There are 3 active tblptr bytes
 31327  002D6C  6AF8               	clrf	tblptru,c
 31328  002D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 31329  002D70  22F8               	addwfc	tblptru,f,c
 31330  002D72                     	endif
 31331  002D72  5020               	movf	__display_checked@cntr,w,c
 31332  002D74  C01F  F01D         	movff	__display_checked@start,??__display_checked
 31333  002D78  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 31334  002D7A  261D               	addwf	??__display_checked,f,c
 31335  002D7C  0E00               	movlw	0
 31336  002D7E  221E               	addwfc	??__display_checked+1,f,c
 31337  002D80  0EA3               	movlw	low (_display_content+40)
 31338  002D82  241D               	addwf	??__display_checked,w,c
 31339  002D84  6ED9               	movwf	fsr2l,c
 31340  002D86  0E01               	movlw	high (_display_content+40)
 31341  002D88  201E               	addwfc	??__display_checked+1,w,c
 31342  002D8A  6EDA               	movwf	fsr2h,c
 31343  002D8C  0008               	tblrd		*
 31344  002D8E  CFF5 FFDF          	movff	tablat,indf2
 31345  002D92  2A20               	incf	__display_checked@cntr,f,c
 31346  002D94                     l1662:
 31347  002D94  5020               	movf	__display_checked@cntr,w,c
 31348  002D96  0D01               	mullw	1
 31349  002D98  0E49               	movlw	low _checked_line3
 31350  002D9A  24F3               	addwf	prodl,w,c
 31351  002D9C  6EF6               	movwf	tblptrl,c
 31352  002D9E  0E8E               	movlw	high _checked_line3
 31353  002DA0  20F4               	addwfc	prodh,w,c
 31354  002DA2  6EF7               	movwf	tblptrh,c
 31355  002DA4                     	if	1	;There are 3 active tblptr bytes
 31356  002DA4  6AF8               	clrf	tblptru,c
 31357  002DA6  0E00               	movlw	low (__mediumconst shr (0+16))
 31358  002DA8  22F8               	addwfc	tblptru,f,c
 31359  002DAA                     	endif
 31360  002DAA  0008               	tblrd		*
 31361  002DAC  50F5               	movf	tablat,w,c
 31362  002DAE  0900               	iorlw	0
 31363  002DB0  A4D8               	btfss	status,2,c
 31364  002DB2  D7D4               	goto	l1663
 31365                           
 31366                           ;display.c: 559: cntr = 0;
 31367  002DB4  0E00               	movlw	0
 31368  002DB6  6E20               	movwf	__display_checked@cntr,c
 31369                           
 31370                           ;display.c: 560: while(checked_line4[cntr])
 31371  002DB8  D017               	goto	l1665
 31372  002DBA                     
 31373                           ;display.c: 561: display_content[3][cntr] = checked_line4[cntr++];
 31374  002DBA  5020               	movf	__display_checked@cntr,w,c
 31375  002DBC  0D01               	mullw	1
 31376  002DBE  0EDE               	movlw	low _checked_line4
 31377  002DC0  24F3               	addwf	prodl,w,c
 31378  002DC2  6EF6               	movwf	tblptrl,c
 31379  002DC4  0E8C               	movlw	high _checked_line4
 31380  002DC6  20F4               	addwfc	prodh,w,c
 31381  002DC8  6EF7               	movwf	tblptrh,c
 31382  002DCA                     	if	1	;There are 3 active tblptr bytes
 31383  002DCA  6AF8               	clrf	tblptru,c
 31384  002DCC  0E00               	movlw	low (__mediumconst shr (0+16))
 31385  002DCE  22F8               	addwfc	tblptru,f,c
 31386  002DD0                     	endif
 31387  002DD0  5020               	movf	__display_checked@cntr,w,c
 31388  002DD2  0D01               	mullw	1
 31389  002DD4  0EB7               	movlw	low (_display_content+60)
 31390  002DD6  24F3               	addwf	prodl,w,c
 31391  002DD8  6ED9               	movwf	fsr2l,c
 31392  002DDA  0E01               	movlw	high (_display_content+60)
 31393  002DDC  20F4               	addwfc	prodh,w,c
 31394  002DDE  6EDA               	movwf	fsr2h,c
 31395  002DE0  0008               	tblrd		*
 31396  002DE2  CFF5 FFDF          	movff	tablat,indf2
 31397  002DE6  2A20               	incf	__display_checked@cntr,f,c
 31398  002DE8                     l1665:
 31399  002DE8  5020               	movf	__display_checked@cntr,w,c
 31400  002DEA  0D01               	mullw	1
 31401  002DEC  0EDE               	movlw	low _checked_line4
 31402  002DEE  24F3               	addwf	prodl,w,c
 31403  002DF0  6EF6               	movwf	tblptrl,c
 31404  002DF2  0E8C               	movlw	high _checked_line4
 31405  002DF4  20F4               	addwfc	prodh,w,c
 31406  002DF6  6EF7               	movwf	tblptrh,c
 31407  002DF8                     	if	1	;There are 3 active tblptr bytes
 31408  002DF8  6AF8               	clrf	tblptru,c
 31409  002DFA  0E00               	movlw	low (__mediumconst shr (0+16))
 31410  002DFC  22F8               	addwfc	tblptru,f,c
 31411  002DFE                     	endif
 31412  002DFE  0008               	tblrd		*
 31413  002E00  50F5               	movf	tablat,w,c
 31414  002E02  0900               	iorlw	0
 31415  002E04  B4D8               	btfsc	status,2,c
 31416  002E06  0012               	return	
 31417  002E08  D7D8               	goto	l1666
 31418  002E0A                     __end_of__display_checked:
 31419                           	opt stack 0
 31420                           tosu	equ	0xFFF
 31421                           tosh	equ	0xFFE
 31422                           tosl	equ	0xFFD
 31423                           pclath	equ	0xFFA
 31424                           tblptru	equ	0xFF8
 31425                           tblptrh	equ	0xFF7
 31426                           tblptrl	equ	0xFF6
 31427                           tablat	equ	0xFF5
 31428                           prodh	equ	0xFF4
 31429                           prodl	equ	0xFF3
 31430                           intcon	equ	0xFF2
 31431                           intcon3	equ	0xFF0
 31432                           indf0	equ	0xFEF
 31433                           postinc0	equ	0xFEE
 31434                           fsr0h	equ	0xFEA
 31435                           fsr0l	equ	0xFE9
 31436                           wreg	equ	0xFE8
 31437                           indf1	equ	0xFE7
 31438                           postdec1	equ	0xFE5
 31439                           plusw1	equ	0xFE3
 31440                           fsr1h	equ	0xFE2
 31441                           fsr1l	equ	0xFE1
 31442                           indf2	equ	0xFDF
 31443                           postinc2	equ	0xFDE
 31444                           postdec2	equ	0xFDD
 31445                           plusw2	equ	0xFDB
 31446                           fsr2h	equ	0xFDA
 31447                           fsr2l	equ	0xFD9
 31448                           status	equ	0xFD8
 31449                           
 31450 ;; *************** function _bootloader_get_total_entries *****************
 31451 ;; Defined at:
 31452 ;;		line 473 in file "bootloader.c"
 31453 ;; Parameters:    Size  Location     Type
 31454 ;;		None
 31455 ;; Auto vars:     Size  Location     Type
 31456 ;;		None
 31457 ;; Return value:  Size  Location     Type
 31458 ;;                  2    0[COMRAM] unsigned int 
 31459 ;; Registers used:
 31460 ;;		None
 31461 ;; Tracked objects:
 31462 ;;		On entry : 0/0
 31463 ;;		On exit  : 0/0
 31464 ;;		Unchanged: 0/0
 31465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31470 ;;Total ram usage:        2 bytes
 31471 ;; Hardware stack levels used:    1
 31472 ;; This function calls:
 31473 ;;		Nothing
 31474 ;; This function is called by:
 31475 ;;		__display_checked
 31476 ;;		__display_programming
 31477 ;;		__fill_buffer_get_bootloader_details
 31478 ;; This function uses a non-reentrant model
 31479 ;;
 31480                           
 31481                           	psect	text157
 31482  007468                     __ptext157:
 31483                           	opt stack 0
 31484  007468                     _bootloader_get_total_entries:
 31485                           	opt stack 25
 31486                           
 31487                           ;bootloader.c: 475: return total_hex_file_entries;
 31488                           
 31489                           ;incstack = 0
 31490  007468  C167  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31491  00746C  C168  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31492  007470  0012               	return		;funcret
 31493  007472                     __end_of_bootloader_get_total_entries:
 31494                           	opt stack 0
 31495                           tosu	equ	0xFFF
 31496                           tosh	equ	0xFFE
 31497                           tosl	equ	0xFFD
 31498                           pclath	equ	0xFFA
 31499                           tblptru	equ	0xFF8
 31500                           tblptrh	equ	0xFF7
 31501                           tblptrl	equ	0xFF6
 31502                           tablat	equ	0xFF5
 31503                           prodh	equ	0xFF4
 31504                           prodl	equ	0xFF3
 31505                           intcon	equ	0xFF2
 31506                           intcon3	equ	0xFF0
 31507                           indf0	equ	0xFEF
 31508                           postinc0	equ	0xFEE
 31509                           fsr0h	equ	0xFEA
 31510                           fsr0l	equ	0xFE9
 31511                           wreg	equ	0xFE8
 31512                           indf1	equ	0xFE7
 31513                           postdec1	equ	0xFE5
 31514                           plusw1	equ	0xFE3
 31515                           fsr1h	equ	0xFE2
 31516                           fsr1l	equ	0xFE1
 31517                           indf2	equ	0xFDF
 31518                           postinc2	equ	0xFDE
 31519                           postdec2	equ	0xFDD
 31520                           plusw2	equ	0xFDB
 31521                           fsr2h	equ	0xFDA
 31522                           fsr2l	equ	0xFD9
 31523                           status	equ	0xFD8
 31524                           
 31525 ;; *************** function __display_itoa_u16 *****************
 31526 ;; Defined at:
 31527 ;;		line 199 in file "display.c"
 31528 ;; Parameters:    Size  Location     Type
 31529 ;;  value           2   24[COMRAM] unsigned int 
 31530 ;;  text            2   26[COMRAM] PTR unsigned char 
 31531 ;;		 -> display_content(80), 
 31532 ;; Auto vars:     Size  Location     Type
 31533 ;;		None
 31534 ;; Return value:  Size  Location     Type
 31535 ;;                  1    wreg      unsigned char 
 31536 ;; Registers used:
 31537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31538 ;; Tracked objects:
 31539 ;;		On entry : 0/0
 31540 ;;		On exit  : 0/0
 31541 ;;		Unchanged: 0/0
 31542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31546 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31547 ;;Total ram usage:        4 bytes
 31548 ;; Hardware stack levels used:    1
 31549 ;; Hardware stack levels required when called:    3
 31550 ;; This function calls:
 31551 ;;		_itoa
 31552 ;; This function is called by:
 31553 ;;		__display_start
 31554 ;;		__display_verify
 31555 ;;		__display_checked
 31556 ;;		__display_failed
 31557 ;;		__display_programming
 31558 ;;		__display_done
 31559 ;; This function uses a non-reentrant model
 31560 ;;
 31561                           
 31562                           	psect	text158
 31563  005138                     __ptext158:
 31564                           	opt stack 0
 31565  005138                     __display_itoa_u16:
 31566                           	opt stack 22
 31567                           
 31568                           ;display.c: 201: itoa(text, value, 10);
 31569                           
 31570                           ;incstack = 0
 31571  005138  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 31572  00513C  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 31573  005140  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 31574  005144  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 31575  005148  0E00               	movlw	0
 31576  00514A  6E16               	movwf	itoa@base+1,c
 31577  00514C  0E0A               	movlw	10
 31578  00514E  6E15               	movwf	itoa@base,c
 31579  005150  EC3D  F036         	call	_itoa	;wreg free
 31580                           
 31581                           ;display.c: 202: if(value>9999)
 31582  005154  0E10               	movlw	16
 31583  005156  5C19               	subwf	__display_itoa_u16@value,w,c
 31584  005158  0E27               	movlw	39
 31585  00515A  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31586  00515C  A0D8               	btfss	status,0,c
 31587  00515E  D00A               	goto	l1493
 31588                           
 31589                           ;display.c: 203: {;display.c: 204: *(text+5) = ' ';
 31590  005160  EE20 F005          	lfsr	2,5
 31591  005164  501B               	movf	__display_itoa_u16@text,w,c
 31592  005166  26D9               	addwf	fsr2l,f,c
 31593  005168  501C               	movf	__display_itoa_u16@text+1,w,c
 31594  00516A  22DA               	addwfc	fsr2h,f,c
 31595  00516C  0E20               	movlw	32
 31596  00516E  6EDF               	movwf	indf2,c
 31597                           
 31598                           ;display.c: 205: return 5;
 31599  005170  0E05               	movlw	5
 31600                           
 31601                           ;display.c: 206: }
 31602  005172  0012               	return	
 31603  005174                     l1493:
 31604                           
 31605                           ;display.c: 207: else if (value>999)
 31606  005174  0EE8               	movlw	232
 31607  005176  5C19               	subwf	__display_itoa_u16@value,w,c
 31608  005178  0E03               	movlw	3
 31609  00517A  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31610  00517C  A0D8               	btfss	status,0,c
 31611  00517E  D00A               	goto	l1496
 31612                           
 31613                           ;display.c: 208: {;display.c: 209: *(text+4) = ' ';
 31614  005180  EE20 F004          	lfsr	2,4
 31615  005184  501B               	movf	__display_itoa_u16@text,w,c
 31616  005186  26D9               	addwf	fsr2l,f,c
 31617  005188  501C               	movf	__display_itoa_u16@text+1,w,c
 31618  00518A  22DA               	addwfc	fsr2h,f,c
 31619  00518C  0E20               	movlw	32
 31620  00518E  6EDF               	movwf	indf2,c
 31621                           
 31622                           ;display.c: 210: return 4;
 31623  005190  0E04               	movlw	4
 31624                           
 31625                           ;display.c: 211: }
 31626  005192  0012               	return	
 31627  005194                     l1496:
 31628                           
 31629                           ;display.c: 212: else if (value>99)
 31630  005194  501A               	movf	__display_itoa_u16@value+1,w,c
 31631  005196  E104               	bnz	u8000
 31632  005198  0E64               	movlw	100
 31633  00519A  5C19               	subwf	__display_itoa_u16@value,w,c
 31634  00519C  A0D8               	btfss	status,0,c
 31635  00519E  D00A               	goto	l1498
 31636  0051A0                     u8000:
 31637                           
 31638                           ;display.c: 213: {;display.c: 214: *(text+3) = ' ';
 31639  0051A0  EE20 F003          	lfsr	2,3
 31640  0051A4  501B               	movf	__display_itoa_u16@text,w,c
 31641  0051A6  26D9               	addwf	fsr2l,f,c
 31642  0051A8  501C               	movf	__display_itoa_u16@text+1,w,c
 31643  0051AA  22DA               	addwfc	fsr2h,f,c
 31644  0051AC  0E20               	movlw	32
 31645  0051AE  6EDF               	movwf	indf2,c
 31646                           
 31647                           ;display.c: 215: return 3;
 31648  0051B0  0E03               	movlw	3
 31649                           
 31650                           ;display.c: 216: }
 31651  0051B2  0012               	return	
 31652  0051B4                     l1498:
 31653                           
 31654                           ;display.c: 217: else if (value>9)
 31655  0051B4  501A               	movf	__display_itoa_u16@value+1,w,c
 31656  0051B6  E104               	bnz	u8010
 31657  0051B8  0E0A               	movlw	10
 31658  0051BA  5C19               	subwf	__display_itoa_u16@value,w,c
 31659  0051BC  A0D8               	btfss	status,0,c
 31660  0051BE  D00A               	goto	l1500
 31661  0051C0                     u8010:
 31662                           
 31663                           ;display.c: 218: {;display.c: 219: *(text+2) = ' ';
 31664  0051C0  EE20 F002          	lfsr	2,2
 31665  0051C4  501B               	movf	__display_itoa_u16@text,w,c
 31666  0051C6  26D9               	addwf	fsr2l,f,c
 31667  0051C8  501C               	movf	__display_itoa_u16@text+1,w,c
 31668  0051CA  22DA               	addwfc	fsr2h,f,c
 31669  0051CC  0E20               	movlw	32
 31670  0051CE  6EDF               	movwf	indf2,c
 31671                           
 31672                           ;display.c: 220: return 2;
 31673  0051D0  0E02               	movlw	2
 31674                           
 31675                           ;display.c: 221: }
 31676  0051D2  0012               	return	
 31677  0051D4                     l1500:
 31678                           
 31679                           ;display.c: 222: else;display.c: 223: {;display.c: 224: *(text+1) = ' ';
 31680  0051D4  EE20 F001          	lfsr	2,1
 31681  0051D8  501B               	movf	__display_itoa_u16@text,w,c
 31682  0051DA  26D9               	addwf	fsr2l,f,c
 31683  0051DC  501C               	movf	__display_itoa_u16@text+1,w,c
 31684  0051DE  22DA               	addwfc	fsr2h,f,c
 31685  0051E0  0E20               	movlw	32
 31686  0051E2  6EDF               	movwf	indf2,c
 31687                           
 31688                           ;display.c: 225: return 1;
 31689  0051E4  0E01               	movlw	1
 31690  0051E6  0012               	return	
 31691  0051E8                     __end_of__display_itoa_u16:
 31692                           	opt stack 0
 31693                           tosu	equ	0xFFF
 31694                           tosh	equ	0xFFE
 31695                           tosl	equ	0xFFD
 31696                           pclath	equ	0xFFA
 31697                           tblptru	equ	0xFF8
 31698                           tblptrh	equ	0xFF7
 31699                           tblptrl	equ	0xFF6
 31700                           tablat	equ	0xFF5
 31701                           prodh	equ	0xFF4
 31702                           prodl	equ	0xFF3
 31703                           intcon	equ	0xFF2
 31704                           intcon3	equ	0xFF0
 31705                           indf0	equ	0xFEF
 31706                           postinc0	equ	0xFEE
 31707                           fsr0h	equ	0xFEA
 31708                           fsr0l	equ	0xFE9
 31709                           wreg	equ	0xFE8
 31710                           indf1	equ	0xFE7
 31711                           postdec1	equ	0xFE5
 31712                           plusw1	equ	0xFE3
 31713                           fsr1h	equ	0xFE2
 31714                           fsr1l	equ	0xFE1
 31715                           indf2	equ	0xFDF
 31716                           postinc2	equ	0xFDE
 31717                           postdec2	equ	0xFDD
 31718                           plusw2	equ	0xFDB
 31719                           fsr2h	equ	0xFDA
 31720                           fsr2l	equ	0xFD9
 31721                           status	equ	0xFD8
 31722                           
 31723 ;; *************** function _itoa *****************
 31724 ;; Defined at:
 31725 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31726 ;; Parameters:    Size  Location     Type
 31727 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31728 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31729 ;;  val             2   18[COMRAM] int 
 31730 ;;  base            2   20[COMRAM] int 
 31731 ;; Auto vars:     Size  Location     Type
 31732 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31733 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31734 ;; Return value:  Size  Location     Type
 31735 ;;                  2   16[COMRAM] PTR unsigned char 
 31736 ;; Registers used:
 31737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31738 ;; Tracked objects:
 31739 ;;		On entry : 0/0
 31740 ;;		On exit  : 0/0
 31741 ;;		Unchanged: 0/0
 31742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31743 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31746 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31747 ;;Total ram usage:        8 bytes
 31748 ;; Hardware stack levels used:    1
 31749 ;; Hardware stack levels required when called:    2
 31750 ;; This function calls:
 31751 ;;		_utoa
 31752 ;; This function is called by:
 31753 ;;		__display_itoa_u16
 31754 ;;		__display_itoa
 31755 ;; This function uses a non-reentrant model
 31756 ;;
 31757                           
 31758                           	psect	text159
 31759  006C7A                     __ptext159:
 31760                           	opt stack 0
 31761  006C7A                     _itoa:
 31762                           	opt stack 22
 31763                           
 31764                           ;incstack = 0
 31765  006C7A  C011  F017         	movff	itoa@buf,itoa@cp
 31766  006C7E  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31767  006C82  AE14               	btfss	itoa@val+1,7,c
 31768  006C84  D00C               	goto	l3537
 31769  006C86  C011  FFD9         	movff	itoa@buf,fsr2l
 31770  006C8A  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31771  006C8E  0E2D               	movlw	45
 31772  006C90  6EDF               	movwf	indf2,c
 31773  006C92  4A11               	infsnz	itoa@buf,f,c
 31774  006C94  2A12               	incf	itoa@buf+1,f,c
 31775  006C96  6C13               	negf	itoa@val,c
 31776  006C98  1E14               	comf	itoa@val+1,f,c
 31777  006C9A  B0D8               	btfsc	status,0,c
 31778  006C9C  2A14               	incf	itoa@val+1,f,c
 31779  006C9E                     l3537:
 31780  006C9E  C011  F008         	movff	itoa@buf,utoa@buf
 31781  006CA2  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31782  006CA6  C013  F00A         	movff	itoa@val,utoa@val
 31783  006CAA  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31784  006CAE  C015  F00C         	movff	itoa@base,utoa@base
 31785  006CB2  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31786  006CB6  EC99  F02A         	call	_utoa	;wreg free
 31787  006CBA  0012               	return	
 31788  006CBC                     __end_of_itoa:
 31789                           	opt stack 0
 31790                           tosu	equ	0xFFF
 31791                           tosh	equ	0xFFE
 31792                           tosl	equ	0xFFD
 31793                           pclath	equ	0xFFA
 31794                           tblptru	equ	0xFF8
 31795                           tblptrh	equ	0xFF7
 31796                           tblptrl	equ	0xFF6
 31797                           tablat	equ	0xFF5
 31798                           prodh	equ	0xFF4
 31799                           prodl	equ	0xFF3
 31800                           intcon	equ	0xFF2
 31801                           intcon3	equ	0xFF0
 31802                           indf0	equ	0xFEF
 31803                           postinc0	equ	0xFEE
 31804                           fsr0h	equ	0xFEA
 31805                           fsr0l	equ	0xFE9
 31806                           wreg	equ	0xFE8
 31807                           indf1	equ	0xFE7
 31808                           postdec1	equ	0xFE5
 31809                           plusw1	equ	0xFE3
 31810                           fsr1h	equ	0xFE2
 31811                           fsr1l	equ	0xFE1
 31812                           indf2	equ	0xFDF
 31813                           postinc2	equ	0xFDE
 31814                           postdec2	equ	0xFDD
 31815                           plusw2	equ	0xFDB
 31816                           fsr2h	equ	0xFDA
 31817                           fsr2l	equ	0xFD9
 31818                           status	equ	0xFD8
 31819                           
 31820 ;; *************** function _utoa *****************
 31821 ;; Defined at:
 31822 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31823 ;; Parameters:    Size  Location     Type
 31824 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31825 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31826 ;;  val             2    9[COMRAM] unsigned int 
 31827 ;;  base            2   11[COMRAM] int 
 31828 ;; Auto vars:     Size  Location     Type
 31829 ;;  v               2   13[COMRAM] unsigned int 
 31830 ;;  c               1   15[COMRAM] unsigned char 
 31831 ;; Return value:  Size  Location     Type
 31832 ;;                  2    7[COMRAM] PTR unsigned char 
 31833 ;; Registers used:
 31834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31835 ;; Tracked objects:
 31836 ;;		On entry : 0/0
 31837 ;;		On exit  : 0/0
 31838 ;;		Unchanged: 0/0
 31839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31840 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31841 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31843 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31844 ;;Total ram usage:        9 bytes
 31845 ;; Hardware stack levels used:    1
 31846 ;; Hardware stack levels required when called:    1
 31847 ;; This function calls:
 31848 ;;		___lwdiv
 31849 ;;		___lwmod
 31850 ;; This function is called by:
 31851 ;;		_itoa
 31852 ;; This function uses a non-reentrant model
 31853 ;;
 31854                           
 31855                           	psect	text160
 31856  005532                     __ptext160:
 31857                           	opt stack 0
 31858  005532                     _utoa:
 31859                           	opt stack 22
 31860                           
 31861                           ;incstack = 0
 31862  005532  C00A  F00E         	movff	utoa@val,utoa@v
 31863  005536  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31864  00553A  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31865  00553E  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31866  005542  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31867  005546  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31868  00554A  EC85  F034         	call	___lwdiv	;wreg free
 31869  00554E  C001  F00E         	movff	?___lwdiv,utoa@v
 31870  005552  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31871  005556  4A08               	infsnz	utoa@buf,f,c
 31872  005558  2A09               	incf	utoa@buf+1,f,c
 31873  00555A  500E               	movf	utoa@v,w,c
 31874  00555C  100F               	iorwf	utoa@v+1,w,c
 31875  00555E  A4D8               	btfss	status,2,c
 31876  005560  D7EC               	goto	l3541
 31877  005562  C008  FFD9         	movff	utoa@buf,fsr2l
 31878  005566  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31879  00556A  0E00               	movlw	0
 31880  00556C  6EDF               	movwf	indf2,c
 31881  00556E  0608               	decf	utoa@buf,f,c
 31882  005570  A0D8               	btfss	status,0,c
 31883  005572  0609               	decf	utoa@buf+1,f,c
 31884  005574  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31885  005578  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31886  00557C  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31887  005580  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31888  005584  EC5E  F036         	call	___lwmod	;wreg free
 31889  005588  5001               	movf	?___lwmod,w,c
 31890  00558A  6E10               	movwf	utoa@c,c
 31891  00558C  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31892  005590  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31893  005594  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31894  005598  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31895  00559C  EC85  F034         	call	___lwdiv	;wreg free
 31896  0055A0  C001  F00A         	movff	?___lwdiv,utoa@val
 31897  0055A4  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31898  0055A8  0E09               	movlw	9
 31899  0055AA  6410               	cpfsgt	utoa@c,c
 31900  0055AC  D002               	goto	l3544
 31901  0055AE  0E07               	movlw	7
 31902  0055B0  2610               	addwf	utoa@c,f,c
 31903  0055B2                     l3544:
 31904  0055B2  0E30               	movlw	48
 31905  0055B4  2610               	addwf	utoa@c,f,c
 31906  0055B6  C008  FFD9         	movff	utoa@buf,fsr2l
 31907  0055BA  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31908  0055BE  C010  FFDF         	movff	utoa@c,indf2
 31909  0055C2  0608               	decf	utoa@buf,f,c
 31910  0055C4  A0D8               	btfss	status,0,c
 31911  0055C6  0609               	decf	utoa@buf+1,f,c
 31912  0055C8  500A               	movf	utoa@val,w,c
 31913  0055CA  100B               	iorwf	utoa@val+1,w,c
 31914  0055CC  A4D8               	btfss	status,2,c
 31915  0055CE  D7D2               	goto	l3543
 31916                           
 31917                           ;	Return value of _utoa is never used
 31918  0055D0  4A08               	infsnz	utoa@buf,f,c
 31919  0055D2  2A09               	incf	utoa@buf+1,f,c
 31920  0055D4  0012               	return	
 31921  0055D6                     __end_of_utoa:
 31922                           	opt stack 0
 31923                           tosu	equ	0xFFF
 31924                           tosh	equ	0xFFE
 31925                           tosl	equ	0xFFD
 31926                           pclath	equ	0xFFA
 31927                           tblptru	equ	0xFF8
 31928                           tblptrh	equ	0xFF7
 31929                           tblptrl	equ	0xFF6
 31930                           tablat	equ	0xFF5
 31931                           prodh	equ	0xFF4
 31932                           prodl	equ	0xFF3
 31933                           intcon	equ	0xFF2
 31934                           intcon3	equ	0xFF0
 31935                           indf0	equ	0xFEF
 31936                           postinc0	equ	0xFEE
 31937                           fsr0h	equ	0xFEA
 31938                           fsr0l	equ	0xFE9
 31939                           wreg	equ	0xFE8
 31940                           indf1	equ	0xFE7
 31941                           postdec1	equ	0xFE5
 31942                           plusw1	equ	0xFE3
 31943                           fsr1h	equ	0xFE2
 31944                           fsr1l	equ	0xFE1
 31945                           indf2	equ	0xFDF
 31946                           postinc2	equ	0xFDE
 31947                           postdec2	equ	0xFDD
 31948                           plusw2	equ	0xFDB
 31949                           fsr2h	equ	0xFDA
 31950                           fsr2l	equ	0xFD9
 31951                           status	equ	0xFD8
 31952                           
 31953 ;; *************** function ___lwmod *****************
 31954 ;; Defined at:
 31955 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31956 ;; Parameters:    Size  Location     Type
 31957 ;;  dividend        2    0[COMRAM] unsigned int 
 31958 ;;  divisor         2    2[COMRAM] unsigned int 
 31959 ;; Auto vars:     Size  Location     Type
 31960 ;;  counter         1    4[COMRAM] unsigned char 
 31961 ;; Return value:  Size  Location     Type
 31962 ;;                  2    0[COMRAM] unsigned int 
 31963 ;; Registers used:
 31964 ;;		wreg, status,2, status,0
 31965 ;; Tracked objects:
 31966 ;;		On entry : 0/0
 31967 ;;		On exit  : 0/0
 31968 ;;		Unchanged: 0/0
 31969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31970 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31973 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31974 ;;Total ram usage:        5 bytes
 31975 ;; Hardware stack levels used:    1
 31976 ;; This function calls:
 31977 ;;		Nothing
 31978 ;; This function is called by:
 31979 ;;		_utoa
 31980 ;; This function uses a non-reentrant model
 31981 ;;
 31982                           
 31983                           	psect	text161
 31984  006CBC                     __ptext161:
 31985                           	opt stack 0
 31986  006CBC                     ___lwmod:
 31987                           	opt stack 22
 31988                           
 31989                           ;incstack = 0
 31990  006CBC  5003               	movf	___lwmod@divisor,w,c
 31991  006CBE  1004               	iorwf	___lwmod@divisor+1,w,c
 31992  006CC0  B4D8               	btfsc	status,2,c
 31993  006CC2  D018               	goto	l3368
 31994  006CC4  0E01               	movlw	1
 31995  006CC6  6E05               	movwf	___lwmod@counter,c
 31996  006CC8  D004               	goto	l3363
 31997  006CCA  90D8               	bcf	status,0,c
 31998  006CCC  3603               	rlcf	___lwmod@divisor,f,c
 31999  006CCE  3604               	rlcf	___lwmod@divisor+1,f,c
 32000  006CD0  2A05               	incf	___lwmod@counter,f,c
 32001  006CD2                     l3363:
 32002  006CD2  AE04               	btfss	___lwmod@divisor+1,7,c
 32003  006CD4  D7FA               	goto	l3364
 32004  006CD6                     u7060:
 32005  006CD6  5003               	movf	___lwmod@divisor,w,c
 32006  006CD8  5C01               	subwf	___lwmod@dividend,w,c
 32007  006CDA  5004               	movf	___lwmod@divisor+1,w,c
 32008  006CDC  5802               	subwfb	___lwmod@dividend+1,w,c
 32009  006CDE  A0D8               	btfss	status,0,c
 32010  006CE0  D004               	goto	l3367
 32011  006CE2  5003               	movf	___lwmod@divisor,w,c
 32012  006CE4  5E01               	subwf	___lwmod@dividend,f,c
 32013  006CE6  5004               	movf	___lwmod@divisor+1,w,c
 32014  006CE8  5A02               	subwfb	___lwmod@dividend+1,f,c
 32015  006CEA                     l3367:
 32016  006CEA  90D8               	bcf	status,0,c
 32017  006CEC  3204               	rrcf	___lwmod@divisor+1,f,c
 32018  006CEE  3203               	rrcf	___lwmod@divisor,f,c
 32019  006CF0  2E05               	decfsz	___lwmod@counter,f,c
 32020  006CF2  D7F1               	goto	u7060
 32021  006CF4                     l3368:
 32022  006CF4  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32023  006CF8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32024  006CFC  0012               	return		;funcret
 32025  006CFE                     __end_of___lwmod:
 32026                           	opt stack 0
 32027                           tosu	equ	0xFFF
 32028                           tosh	equ	0xFFE
 32029                           tosl	equ	0xFFD
 32030                           pclath	equ	0xFFA
 32031                           tblptru	equ	0xFF8
 32032                           tblptrh	equ	0xFF7
 32033                           tblptrl	equ	0xFF6
 32034                           tablat	equ	0xFF5
 32035                           prodh	equ	0xFF4
 32036                           prodl	equ	0xFF3
 32037                           intcon	equ	0xFF2
 32038                           intcon3	equ	0xFF0
 32039                           indf0	equ	0xFEF
 32040                           postinc0	equ	0xFEE
 32041                           fsr0h	equ	0xFEA
 32042                           fsr0l	equ	0xFE9
 32043                           wreg	equ	0xFE8
 32044                           indf1	equ	0xFE7
 32045                           postdec1	equ	0xFE5
 32046                           plusw1	equ	0xFE3
 32047                           fsr1h	equ	0xFE2
 32048                           fsr1l	equ	0xFE1
 32049                           indf2	equ	0xFDF
 32050                           postinc2	equ	0xFDE
 32051                           postdec2	equ	0xFDD
 32052                           plusw2	equ	0xFDB
 32053                           fsr2h	equ	0xFDA
 32054                           fsr2l	equ	0xFD9
 32055                           status	equ	0xFD8
 32056                           
 32057 ;; *************** function ___lwdiv *****************
 32058 ;; Defined at:
 32059 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32060 ;; Parameters:    Size  Location     Type
 32061 ;;  dividend        2    0[COMRAM] unsigned int 
 32062 ;;  divisor         2    2[COMRAM] unsigned int 
 32063 ;; Auto vars:     Size  Location     Type
 32064 ;;  quotient        2    4[COMRAM] unsigned int 
 32065 ;;  counter         1    6[COMRAM] unsigned char 
 32066 ;; Return value:  Size  Location     Type
 32067 ;;                  2    0[COMRAM] unsigned int 
 32068 ;; Registers used:
 32069 ;;		wreg, status,2, status,0
 32070 ;; Tracked objects:
 32071 ;;		On entry : 0/0
 32072 ;;		On exit  : 0/0
 32073 ;;		Unchanged: 0/0
 32074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32078 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32079 ;;Total ram usage:        7 bytes
 32080 ;; Hardware stack levels used:    1
 32081 ;; This function calls:
 32082 ;;		Nothing
 32083 ;; This function is called by:
 32084 ;;		_utoa
 32085 ;; This function uses a non-reentrant model
 32086 ;;
 32087                           
 32088                           	psect	text162
 32089  00690A                     __ptext162:
 32090                           	opt stack 0
 32091  00690A                     ___lwdiv:
 32092                           	opt stack 22
 32093                           
 32094                           ;incstack = 0
 32095  00690A  0E00               	movlw	0
 32096  00690C  6E06               	movwf	___lwdiv@quotient+1,c
 32097  00690E  0E00               	movlw	0
 32098  006910  6E05               	movwf	___lwdiv@quotient,c
 32099  006912  5003               	movf	___lwdiv@divisor,w,c
 32100  006914  1004               	iorwf	___lwdiv@divisor+1,w,c
 32101  006916  B4D8               	btfsc	status,2,c
 32102  006918  D01C               	goto	l3358
 32103  00691A  0E01               	movlw	1
 32104  00691C  6E07               	movwf	___lwdiv@counter,c
 32105  00691E  D004               	goto	l3353
 32106  006920  90D8               	bcf	status,0,c
 32107  006922  3603               	rlcf	___lwdiv@divisor,f,c
 32108  006924  3604               	rlcf	___lwdiv@divisor+1,f,c
 32109  006926  2A07               	incf	___lwdiv@counter,f,c
 32110  006928                     l3353:
 32111  006928  AE04               	btfss	___lwdiv@divisor+1,7,c
 32112  00692A  D7FA               	goto	l3354
 32113  00692C                     u7030:
 32114  00692C  90D8               	bcf	status,0,c
 32115  00692E  3605               	rlcf	___lwdiv@quotient,f,c
 32116  006930  3606               	rlcf	___lwdiv@quotient+1,f,c
 32117  006932  5003               	movf	___lwdiv@divisor,w,c
 32118  006934  5C01               	subwf	___lwdiv@dividend,w,c
 32119  006936  5004               	movf	___lwdiv@divisor+1,w,c
 32120  006938  5802               	subwfb	___lwdiv@dividend+1,w,c
 32121  00693A  A0D8               	btfss	status,0,c
 32122  00693C  D005               	goto	l3357
 32123  00693E  5003               	movf	___lwdiv@divisor,w,c
 32124  006940  5E01               	subwf	___lwdiv@dividend,f,c
 32125  006942  5004               	movf	___lwdiv@divisor+1,w,c
 32126  006944  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32127  006946  8005               	bsf	___lwdiv@quotient,0,c
 32128  006948                     l3357:
 32129  006948  90D8               	bcf	status,0,c
 32130  00694A  3204               	rrcf	___lwdiv@divisor+1,f,c
 32131  00694C  3203               	rrcf	___lwdiv@divisor,f,c
 32132  00694E  2E07               	decfsz	___lwdiv@counter,f,c
 32133  006950  D7ED               	goto	u7030
 32134  006952                     l3358:
 32135  006952  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32136  006956  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32137  00695A  0012               	return		;funcret
 32138  00695C                     __end_of___lwdiv:
 32139                           	opt stack 0
 32140                           tosu	equ	0xFFF
 32141                           tosh	equ	0xFFE
 32142                           tosl	equ	0xFFD
 32143                           pclath	equ	0xFFA
 32144                           tblptru	equ	0xFF8
 32145                           tblptrh	equ	0xFF7
 32146                           tblptrl	equ	0xFF6
 32147                           tablat	equ	0xFF5
 32148                           prodh	equ	0xFF4
 32149                           prodl	equ	0xFF3
 32150                           intcon	equ	0xFF2
 32151                           intcon3	equ	0xFF0
 32152                           indf0	equ	0xFEF
 32153                           postinc0	equ	0xFEE
 32154                           fsr0h	equ	0xFEA
 32155                           fsr0l	equ	0xFE9
 32156                           wreg	equ	0xFE8
 32157                           indf1	equ	0xFE7
 32158                           postdec1	equ	0xFE5
 32159                           plusw1	equ	0xFE3
 32160                           fsr1h	equ	0xFE2
 32161                           fsr1l	equ	0xFE1
 32162                           indf2	equ	0xFDF
 32163                           postinc2	equ	0xFDE
 32164                           postdec2	equ	0xFDD
 32165                           plusw2	equ	0xFDB
 32166                           fsr2h	equ	0xFDA
 32167                           fsr2l	equ	0xFD9
 32168                           status	equ	0xFD8
 32169                           
 32170 ;; *************** function _i2c_eeprom_writeByte *****************
 32171 ;; Defined at:
 32172 ;;		line 188 in file "i2c.c"
 32173 ;; Parameters:    Size  Location     Type
 32174 ;;  address         2   10[COMRAM] unsigned int 
 32175 ;;  data            1   12[COMRAM] unsigned char 
 32176 ;; Auto vars:     Size  Location     Type
 32177 ;;  dat             2   16[COMRAM] unsigned char [2]
 32178 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32179 ;; Return value:  Size  Location     Type
 32180 ;;                  1    wreg      void 
 32181 ;; Registers used:
 32182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32183 ;; Tracked objects:
 32184 ;;		On entry : 0/0
 32185 ;;		On exit  : 0/0
 32186 ;;		Unchanged: 0/0
 32187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32188 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32189 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32190 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32191 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32192 ;;Total ram usage:        9 bytes
 32193 ;; Hardware stack levels used:    1
 32194 ;; Hardware stack levels required when called:    2
 32195 ;; This function calls:
 32196 ;;		__i2c_eeprom_busy
 32197 ;;		__i2c_write
 32198 ;; This function is called by:
 32199 ;;		__normal_mode
 32200 ;;		__ui_encoder
 32201 ;;		__parse_command_short
 32202 ;; This function uses a non-reentrant model
 32203 ;;
 32204                           
 32205                           	psect	text163
 32206  006BF4                     __ptext163:
 32207                           	opt stack 0
 32208  006BF4                     _i2c_eeprom_writeByte:
 32209                           	opt stack 26
 32210                           
 32211                           ;i2c.c: 190: uint8_t slave_address;;i2c.c: 191: uint8_t dat[2];;i2c.c: 194: while(_i2c_e
      +                          eprom_busy());
 32212                           
 32213                           ;incstack = 0
 32214  006BF4  EC9D  F038         	call	__i2c_eeprom_busy	;wreg free
 32215  006BF8  0900               	iorlw	0
 32216  006BFA  A4D8               	btfss	status,2,c
 32217  006BFC  D7FB               	goto	_i2c_eeprom_writeByte
 32218                           
 32219                           ;i2c.c: 196: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 32220  006BFE  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32221  006C02  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32222  006C06  0E07               	movlw	7
 32223  006C08  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32224  006C0A                     u10065:
 32225  006C0A  90D8               	bcf	status,0,c
 32226  006C0C  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32227  006C0E  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32228  006C10  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32229  006C12  D7FB               	goto	u10065
 32230  006C14  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32231  006C16  0B0E               	andlw	14
 32232  006C18  09A0               	iorlw	160
 32233  006C1A  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32234                           
 32235                           ;i2c.c: 197: dat[0] = address & 0xFF;
 32236  006C1C  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32237                           
 32238                           ;i2c.c: 198: dat[1] = data;
 32239  006C20  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32240                           
 32241                           ;i2c.c: 200: _i2c_write(slave_address, &dat[0], 2);
 32242  006C24  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32243  006C26  6E06               	movwf	__i2c_write@data,c
 32244  006C28  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32245  006C2A  6E07               	movwf	__i2c_write@data+1,c
 32246  006C2C  0E02               	movlw	2
 32247  006C2E  6E08               	movwf	__i2c_write@length,c
 32248  006C30  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32249  006C32  EC91  F035         	call	__i2c_write
 32250  006C36  0012               	return		;funcret
 32251  006C38                     __end_of_i2c_eeprom_writeByte:
 32252                           	opt stack 0
 32253                           tosu	equ	0xFFF
 32254                           tosh	equ	0xFFE
 32255                           tosl	equ	0xFFD
 32256                           pclath	equ	0xFFA
 32257                           tblptru	equ	0xFF8
 32258                           tblptrh	equ	0xFF7
 32259                           tblptrl	equ	0xFF6
 32260                           tablat	equ	0xFF5
 32261                           prodh	equ	0xFF4
 32262                           prodl	equ	0xFF3
 32263                           intcon	equ	0xFF2
 32264                           intcon3	equ	0xFF0
 32265                           indf0	equ	0xFEF
 32266                           postinc0	equ	0xFEE
 32267                           fsr0h	equ	0xFEA
 32268                           fsr0l	equ	0xFE9
 32269                           wreg	equ	0xFE8
 32270                           indf1	equ	0xFE7
 32271                           postdec1	equ	0xFE5
 32272                           plusw1	equ	0xFE3
 32273                           fsr1h	equ	0xFE2
 32274                           fsr1l	equ	0xFE1
 32275                           indf2	equ	0xFDF
 32276                           postinc2	equ	0xFDE
 32277                           postdec2	equ	0xFDD
 32278                           plusw2	equ	0xFDB
 32279                           fsr2h	equ	0xFDA
 32280                           fsr2l	equ	0xFD9
 32281                           status	equ	0xFD8
 32282                           
 32283 ;; *************** function __i2c_write *****************
 32284 ;; Defined at:
 32285 ;;		line 84 in file "i2c.c"
 32286 ;; Parameters:    Size  Location     Type
 32287 ;;  slave_addres    1    wreg     unsigned char 
 32288 ;;  data            2    5[COMRAM] PTR unsigned char 
 32289 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 32290 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 32291 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 32292 ;;  length          1    7[COMRAM] unsigned char 
 32293 ;; Auto vars:     Size  Location     Type
 32294 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32295 ;;  cntr            1    9[COMRAM] unsigned char 
 32296 ;; Return value:  Size  Location     Type
 32297 ;;                  1    wreg      void 
 32298 ;; Registers used:
 32299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32300 ;; Tracked objects:
 32301 ;;		On entry : 0/0
 32302 ;;		On exit  : 0/0
 32303 ;;		Unchanged: 0/0
 32304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32308 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32309 ;;Total ram usage:        5 bytes
 32310 ;; Hardware stack levels used:    1
 32311 ;; Hardware stack levels required when called:    1
 32312 ;; This function calls:
 32313 ;;		__i2c_send
 32314 ;;		__i2c_start
 32315 ;;		__i2c_stop
 32316 ;;		__i2c_wait_idle
 32317 ;; This function is called by:
 32318 ;;		_i2c_eeprom_writeByte
 32319 ;;		_i2c_eeprom_readByte
 32320 ;;		_i2c_display_init
 32321 ;;		__ic2_display_set_ddram_address
 32322 ;;		__ic2_display_set_cgram_address
 32323 ;;		_i2c_display_program_custom_character
 32324 ;;		_i2c_adc_start
 32325 ;;		_i2c_eeprom_write
 32326 ;;		_i2c_eeprom_read
 32327 ;;		__i2c_display_send_init_sequence
 32328 ;; This function uses a non-reentrant model
 32329 ;;
 32330                           
 32331                           	psect	text164
 32332  006B22                     __ptext164:
 32333                           	opt stack 0
 32334  006B22                     __i2c_write:
 32335                           	opt stack 25
 32336                           
 32337                           ;incstack = 0
 32338                           ;__i2c_write@slave_address stored from wreg
 32339  006B22  6E09               	movwf	__i2c_write@slave_address,c
 32340                           
 32341                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 32342  006B24  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32343                           
 32344                           ;i2c.c: 89: _i2c_start();
 32345  006B28  EC3D  F03A         	call	__i2c_start	;wreg free
 32346                           
 32347                           ;i2c.c: 90: _i2c_wait_idle();
 32348  006B2C  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32349                           
 32350                           ;i2c.c: 91: _i2c_send(slave_address);
 32351  006B30  5009               	movf	__i2c_write@slave_address,w,c
 32352  006B32  EC41  F03A         	call	__i2c_send
 32353                           
 32354                           ;i2c.c: 92: _i2c_wait_idle();
 32355  006B36  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32356                           
 32357                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 32358  006B3A  0E00               	movlw	0
 32359  006B3C  6E0A               	movwf	__i2c_write@cntr,c
 32360  006B3E  D00E               	goto	l1161
 32361  006B40                     
 32362                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 32363  006B40  500A               	movf	__i2c_write@cntr,w,c
 32364  006B42  0D01               	mullw	1
 32365  006B44  50F3               	movf	prodl,w,c
 32366  006B46  2406               	addwf	__i2c_write@data,w,c
 32367  006B48  6ED9               	movwf	fsr2l,c
 32368  006B4A  50F4               	movf	prodh,w,c
 32369  006B4C  2007               	addwfc	__i2c_write@data+1,w,c
 32370  006B4E  6EDA               	movwf	fsr2h,c
 32371  006B50  50DF               	movf	indf2,w,c
 32372  006B52  EC41  F03A         	call	__i2c_send
 32373                           
 32374                           ;i2c.c: 97: _i2c_wait_idle();
 32375  006B56  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32376  006B5A  2A0A               	incf	__i2c_write@cntr,f,c
 32377  006B5C                     l1161:
 32378  006B5C  5008               	movf	__i2c_write@length,w,c
 32379  006B5E  5C0A               	subwf	__i2c_write@cntr,w,c
 32380  006B60  A0D8               	btfss	status,0,c
 32381  006B62  D7EE               	goto	l1162
 32382                           
 32383                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 32384  006B64  EC39  F03A         	call	__i2c_stop	;wreg free
 32385  006B68  0012               	return		;funcret
 32386  006B6A                     __end_of__i2c_write:
 32387                           	opt stack 0
 32388                           tosu	equ	0xFFF
 32389                           tosh	equ	0xFFE
 32390                           tosl	equ	0xFFD
 32391                           pclath	equ	0xFFA
 32392                           tblptru	equ	0xFF8
 32393                           tblptrh	equ	0xFF7
 32394                           tblptrl	equ	0xFF6
 32395                           tablat	equ	0xFF5
 32396                           prodh	equ	0xFF4
 32397                           prodl	equ	0xFF3
 32398                           intcon	equ	0xFF2
 32399                           intcon3	equ	0xFF0
 32400                           indf0	equ	0xFEF
 32401                           postinc0	equ	0xFEE
 32402                           fsr0h	equ	0xFEA
 32403                           fsr0l	equ	0xFE9
 32404                           wreg	equ	0xFE8
 32405                           indf1	equ	0xFE7
 32406                           postdec1	equ	0xFE5
 32407                           plusw1	equ	0xFE3
 32408                           fsr1h	equ	0xFE2
 32409                           fsr1l	equ	0xFE1
 32410                           indf2	equ	0xFDF
 32411                           postinc2	equ	0xFDE
 32412                           postdec2	equ	0xFDD
 32413                           plusw2	equ	0xFDB
 32414                           fsr2h	equ	0xFDA
 32415                           fsr2l	equ	0xFD9
 32416                           status	equ	0xFD8
 32417                           
 32418 ;; *************** function __i2c_eeprom_busy *****************
 32419 ;; Defined at:
 32420 ;;		line 169 in file "i2c.c"
 32421 ;; Parameters:    Size  Location     Type
 32422 ;;		None
 32423 ;; Auto vars:     Size  Location     Type
 32424 ;;  busy            1    5[COMRAM] unsigned char 
 32425 ;; Return value:  Size  Location     Type
 32426 ;;                  1    wreg      unsigned char 
 32427 ;; Registers used:
 32428 ;;		wreg, status,2, status,0, cstack
 32429 ;; Tracked objects:
 32430 ;;		On entry : 0/0
 32431 ;;		On exit  : 0/0
 32432 ;;		Unchanged: 0/0
 32433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32438 ;;Total ram usage:        1 bytes
 32439 ;; Hardware stack levels used:    1
 32440 ;; Hardware stack levels required when called:    1
 32441 ;; This function calls:
 32442 ;;		__i2c_send
 32443 ;;		__i2c_start
 32444 ;;		__i2c_stop
 32445 ;;		__i2c_wait_idle
 32446 ;; This function is called by:
 32447 ;;		_i2c_eeprom_writeByte
 32448 ;;		_i2c_eeprom_readByte
 32449 ;;		_i2c_eeprom_write
 32450 ;;		_i2c_eeprom_read
 32451 ;; This function uses a non-reentrant model
 32452 ;;
 32453                           
 32454                           	psect	text165
 32455  00713A                     __ptext165:
 32456                           	opt stack 0
 32457  00713A                     __i2c_eeprom_busy:
 32458                           	opt stack 26
 32459                           
 32460                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 32461                           
 32462                           ;incstack = 0
 32463  00713A  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32464                           
 32465                           ;i2c.c: 173: _i2c_start();
 32466  00713E  EC3D  F03A         	call	__i2c_start	;wreg free
 32467                           
 32468                           ;i2c.c: 174: _i2c_wait_idle();
 32469  007142  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32470                           
 32471                           ;i2c.c: 175: _i2c_send(0b10100000);
 32472  007146  0EA0               	movlw	160
 32473  007148  EC41  F03A         	call	__i2c_send
 32474                           
 32475                           ;i2c.c: 176: _i2c_wait_idle();
 32476  00714C  ECAC  F032         	call	__i2c_wait_idle	;wreg free
 32477                           
 32478                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 32479  007150  0E00               	movlw	0
 32480  007152  BCC5               	btfsc	4037,6,c	;volatile
 32481  007154  0E01               	movlw	1
 32482  007156  6E06               	movwf	__i2c_eeprom_busy@busy,c
 32483                           
 32484                           ;i2c.c: 181: _i2c_stop();
 32485  007158  EC39  F03A         	call	__i2c_stop	;wreg free
 32486                           
 32487                           ;i2c.c: 183: return 0;
 32488  00715C  0E00               	movlw	0
 32489  00715E  0012               	return	
 32490  007160                     __end_of__i2c_eeprom_busy:
 32491                           	opt stack 0
 32492                           tosu	equ	0xFFF
 32493                           tosh	equ	0xFFE
 32494                           tosl	equ	0xFFD
 32495                           pclath	equ	0xFFA
 32496                           tblptru	equ	0xFF8
 32497                           tblptrh	equ	0xFF7
 32498                           tblptrl	equ	0xFF6
 32499                           tablat	equ	0xFF5
 32500                           prodh	equ	0xFF4
 32501                           prodl	equ	0xFF3
 32502                           intcon	equ	0xFF2
 32503                           intcon3	equ	0xFF0
 32504                           indf0	equ	0xFEF
 32505                           postinc0	equ	0xFEE
 32506                           fsr0h	equ	0xFEA
 32507                           fsr0l	equ	0xFE9
 32508                           wreg	equ	0xFE8
 32509                           indf1	equ	0xFE7
 32510                           postdec1	equ	0xFE5
 32511                           plusw1	equ	0xFE3
 32512                           fsr1h	equ	0xFE2
 32513                           fsr1l	equ	0xFE1
 32514                           indf2	equ	0xFDF
 32515                           postinc2	equ	0xFDE
 32516                           postdec2	equ	0xFDD
 32517                           plusw2	equ	0xFDB
 32518                           fsr2h	equ	0xFDA
 32519                           fsr2l	equ	0xFD9
 32520                           status	equ	0xFD8
 32521                           
 32522 ;; *************** function __i2c_wait_idle *****************
 32523 ;; Defined at:
 32524 ;;		line 40 in file "i2c.c"
 32525 ;; Parameters:    Size  Location     Type
 32526 ;;		None
 32527 ;; Auto vars:     Size  Location     Type
 32528 ;;		None
 32529 ;; Return value:  Size  Location     Type
 32530 ;;                  1    wreg      void 
 32531 ;; Registers used:
 32532 ;;		wreg, status,2, status,0
 32533 ;; Tracked objects:
 32534 ;;		On entry : 0/0
 32535 ;;		On exit  : 0/0
 32536 ;;		Unchanged: 0/0
 32537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32540 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32541 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32542 ;;Total ram usage:        5 bytes
 32543 ;; Hardware stack levels used:    1
 32544 ;; This function calls:
 32545 ;;		Nothing
 32546 ;; This function is called by:
 32547 ;;		__i2c_write
 32548 ;;		__i2c_read
 32549 ;;		__i2c_eeprom_busy
 32550 ;;		_i2c_display_write_fixed
 32551 ;;		_i2c_adc_read
 32552 ;;		_i2c_display_write
 32553 ;; This function uses a non-reentrant model
 32554 ;;
 32555                           
 32556                           	psect	text166
 32557  006558                     __ptext166:
 32558                           	opt stack 0
 32559  006558                     __i2c_wait_idle:
 32560                           	opt stack 25
 32561                           
 32562                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32563                           
 32564                           ;incstack = 0
 32565  006558  A4C7               	btfss	4039,2,c	;volatile
 32566  00655A  D003               	goto	u7130
 32567  00655C  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32568  00655E  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32569  006560  D001               	goto	u7138
 32570  006562                     u7130:
 32571  006562  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32572  006564                     u7138:
 32573  006564  A0C5               	btfss	4037,0,c	;volatile
 32574  006566  D003               	goto	u7140
 32575  006568  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32576  00656A  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32577  00656C  D001               	goto	u7148
 32578  00656E                     u7140:
 32579  00656E  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32580  006570                     u7148:
 32581  006570  A2C5               	btfss	4037,1,c	;volatile
 32582  006572  D003               	goto	u7150
 32583  006574  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32584  006576  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32585  006578  D001               	goto	u7158
 32586  00657A                     u7150:
 32587  00657A  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32588  00657C                     u7158:
 32589  00657C  A4C5               	btfss	4037,2,c	;volatile
 32590  00657E  D003               	goto	u7160
 32591  006580  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32592  006582  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32593  006584  D001               	goto	u7168
 32594  006586                     u7160:
 32595  006586  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32596  006588                     u7168:
 32597  006588  A6C5               	btfss	4037,3,c	;volatile
 32598  00658A  D003               	goto	u7170
 32599  00658C  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32600  00658E  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32601  006590  D001               	goto	u7178
 32602  006592                     u7170:
 32603  006592  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32604  006594                     u7178:
 32605  006594  A8C5               	btfss	4037,4,c	;volatile
 32606  006596  D002               	goto	u7180
 32607  006598  0E01               	movlw	1
 32608  00659A  D001               	goto	u7186
 32609  00659C                     u7180:
 32610  00659C  0E00               	movlw	0
 32611  00659E                     u7186:
 32612  00659E  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32613  0065A0  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32614  0065A2  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32615  0065A4  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32616  0065A6  1001               	iorwf	??__i2c_wait_idle,w,c
 32617  0065A8  0900               	iorlw	0
 32618  0065AA  B4D8               	btfsc	status,2,c
 32619  0065AC  0012               	return	
 32620  0065AE  D7D4               	goto	__i2c_wait_idle
 32621  0065B0                     __end_of__i2c_wait_idle:
 32622                           	opt stack 0
 32623                           tosu	equ	0xFFF
 32624                           tosh	equ	0xFFE
 32625                           tosl	equ	0xFFD
 32626                           pclath	equ	0xFFA
 32627                           tblptru	equ	0xFF8
 32628                           tblptrh	equ	0xFF7
 32629                           tblptrl	equ	0xFF6
 32630                           tablat	equ	0xFF5
 32631                           prodh	equ	0xFF4
 32632                           prodl	equ	0xFF3
 32633                           intcon	equ	0xFF2
 32634                           intcon3	equ	0xFF0
 32635                           indf0	equ	0xFEF
 32636                           postinc0	equ	0xFEE
 32637                           fsr0h	equ	0xFEA
 32638                           fsr0l	equ	0xFE9
 32639                           wreg	equ	0xFE8
 32640                           indf1	equ	0xFE7
 32641                           postdec1	equ	0xFE5
 32642                           plusw1	equ	0xFE3
 32643                           fsr1h	equ	0xFE2
 32644                           fsr1l	equ	0xFE1
 32645                           indf2	equ	0xFDF
 32646                           postinc2	equ	0xFDE
 32647                           postdec2	equ	0xFDD
 32648                           plusw2	equ	0xFDB
 32649                           fsr2h	equ	0xFDA
 32650                           fsr2l	equ	0xFD9
 32651                           status	equ	0xFD8
 32652                           
 32653 ;; *************** function __i2c_stop *****************
 32654 ;; Defined at:
 32655 ;;		line 63 in file "i2c.c"
 32656 ;; Parameters:    Size  Location     Type
 32657 ;;		None
 32658 ;; Auto vars:     Size  Location     Type
 32659 ;;		None
 32660 ;; Return value:  Size  Location     Type
 32661 ;;                  1    wreg      void 
 32662 ;; Registers used:
 32663 ;;		None
 32664 ;; Tracked objects:
 32665 ;;		On entry : 0/0
 32666 ;;		On exit  : 0/0
 32667 ;;		Unchanged: 0/0
 32668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32673 ;;Total ram usage:        0 bytes
 32674 ;; Hardware stack levels used:    1
 32675 ;; This function calls:
 32676 ;;		Nothing
 32677 ;; This function is called by:
 32678 ;;		__i2c_write
 32679 ;;		__i2c_read
 32680 ;;		__i2c_eeprom_busy
 32681 ;;		_i2c_display_write_fixed
 32682 ;;		_i2c_adc_read
 32683 ;;		_i2c_display_write
 32684 ;; This function uses a non-reentrant model
 32685 ;;
 32686                           
 32687                           	psect	text167
 32688  007472                     __ptext167:
 32689                           	opt stack 0
 32690  007472                     __i2c_stop:
 32691                           	opt stack 25
 32692                           
 32693                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 32694                           
 32695                           ;incstack = 0
 32696  007472  84C5               	bsf	4037,2,c	;volatile
 32697  007474  A4C5               	btfss	4037,2,c	;volatile
 32698  007476  0012               	return	
 32699  007478  D7FD               	goto	l1144
 32700  00747A                     __end_of__i2c_stop:
 32701                           	opt stack 0
 32702                           tosu	equ	0xFFF
 32703                           tosh	equ	0xFFE
 32704                           tosl	equ	0xFFD
 32705                           pclath	equ	0xFFA
 32706                           tblptru	equ	0xFF8
 32707                           tblptrh	equ	0xFF7
 32708                           tblptrl	equ	0xFF6
 32709                           tablat	equ	0xFF5
 32710                           prodh	equ	0xFF4
 32711                           prodl	equ	0xFF3
 32712                           intcon	equ	0xFF2
 32713                           intcon3	equ	0xFF0
 32714                           indf0	equ	0xFEF
 32715                           postinc0	equ	0xFEE
 32716                           fsr0h	equ	0xFEA
 32717                           fsr0l	equ	0xFE9
 32718                           wreg	equ	0xFE8
 32719                           indf1	equ	0xFE7
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           indf2	equ	0xFDF
 32725                           postinc2	equ	0xFDE
 32726                           postdec2	equ	0xFDD
 32727                           plusw2	equ	0xFDB
 32728                           fsr2h	equ	0xFDA
 32729                           fsr2l	equ	0xFD9
 32730                           status	equ	0xFD8
 32731                           
 32732 ;; *************** function __i2c_start *****************
 32733 ;; Defined at:
 32734 ;;		line 45 in file "i2c.c"
 32735 ;; Parameters:    Size  Location     Type
 32736 ;;		None
 32737 ;; Auto vars:     Size  Location     Type
 32738 ;;		None
 32739 ;; Return value:  Size  Location     Type
 32740 ;;                  1    wreg      void 
 32741 ;; Registers used:
 32742 ;;		None
 32743 ;; Tracked objects:
 32744 ;;		On entry : 0/0
 32745 ;;		On exit  : 0/0
 32746 ;;		Unchanged: 0/0
 32747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32752 ;;Total ram usage:        0 bytes
 32753 ;; Hardware stack levels used:    1
 32754 ;; This function calls:
 32755 ;;		Nothing
 32756 ;; This function is called by:
 32757 ;;		__i2c_write
 32758 ;;		__i2c_read
 32759 ;;		__i2c_eeprom_busy
 32760 ;;		_i2c_display_write_fixed
 32761 ;;		_i2c_adc_read
 32762 ;;		_i2c_display_write
 32763 ;; This function uses a non-reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text168
 32767  00747A                     __ptext168:
 32768                           	opt stack 0
 32769  00747A                     __i2c_start:
 32770                           	opt stack 25
 32771                           
 32772                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 32773                           
 32774                           ;incstack = 0
 32775  00747A  80C5               	bsf	4037,0,c	;volatile
 32776  00747C  A0C5               	btfss	4037,0,c	;volatile
 32777  00747E  0012               	return	
 32778  007480  D7FD               	goto	l1129
 32779  007482                     __end_of__i2c_start:
 32780                           	opt stack 0
 32781                           tosu	equ	0xFFF
 32782                           tosh	equ	0xFFE
 32783                           tosl	equ	0xFFD
 32784                           pclath	equ	0xFFA
 32785                           tblptru	equ	0xFF8
 32786                           tblptrh	equ	0xFF7
 32787                           tblptrl	equ	0xFF6
 32788                           tablat	equ	0xFF5
 32789                           prodh	equ	0xFF4
 32790                           prodl	equ	0xFF3
 32791                           intcon	equ	0xFF2
 32792                           intcon3	equ	0xFF0
 32793                           indf0	equ	0xFEF
 32794                           postinc0	equ	0xFEE
 32795                           fsr0h	equ	0xFEA
 32796                           fsr0l	equ	0xFE9
 32797                           wreg	equ	0xFE8
 32798                           indf1	equ	0xFE7
 32799                           postdec1	equ	0xFE5
 32800                           plusw1	equ	0xFE3
 32801                           fsr1h	equ	0xFE2
 32802                           fsr1l	equ	0xFE1
 32803                           indf2	equ	0xFDF
 32804                           postinc2	equ	0xFDE
 32805                           postdec2	equ	0xFDD
 32806                           plusw2	equ	0xFDB
 32807                           fsr2h	equ	0xFDA
 32808                           fsr2l	equ	0xFD9
 32809                           status	equ	0xFD8
 32810                           
 32811 ;; *************** function __i2c_send *****************
 32812 ;; Defined at:
 32813 ;;		line 51 in file "i2c.c"
 32814 ;; Parameters:    Size  Location     Type
 32815 ;;  dat             1    wreg     unsigned char 
 32816 ;; Auto vars:     Size  Location     Type
 32817 ;;  dat             1    0[COMRAM] unsigned char 
 32818 ;; Return value:  Size  Location     Type
 32819 ;;                  1    wreg      void 
 32820 ;; Registers used:
 32821 ;;		wreg
 32822 ;; Tracked objects:
 32823 ;;		On entry : 0/0
 32824 ;;		On exit  : 0/0
 32825 ;;		Unchanged: 0/0
 32826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32831 ;;Total ram usage:        1 bytes
 32832 ;; Hardware stack levels used:    1
 32833 ;; This function calls:
 32834 ;;		Nothing
 32835 ;; This function is called by:
 32836 ;;		__i2c_write
 32837 ;;		__i2c_read
 32838 ;;		__i2c_eeprom_busy
 32839 ;;		_i2c_display_write_fixed
 32840 ;;		_i2c_adc_read
 32841 ;;		_i2c_display_write
 32842 ;; This function uses a non-reentrant model
 32843 ;;
 32844                           
 32845                           	psect	text169
 32846  007482                     __ptext169:
 32847                           	opt stack 0
 32848  007482                     __i2c_send:
 32849                           	opt stack 25
 32850                           
 32851                           ;incstack = 0
 32852                           ;__i2c_send@dat stored from wreg
 32853  007482  6E01               	movwf	__i2c_send@dat,c
 32854                           
 32855                           ;i2c.c: 53: SSP1BUF = dat;
 32856  007484  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32857  007488  0012               	return		;funcret
 32858  00748A                     __end_of__i2c_send:
 32859                           	opt stack 0
 32860                           tosu	equ	0xFFF
 32861                           tosh	equ	0xFFE
 32862                           tosl	equ	0xFFD
 32863                           pclath	equ	0xFFA
 32864                           tblptru	equ	0xFF8
 32865                           tblptrh	equ	0xFF7
 32866                           tblptrl	equ	0xFF6
 32867                           tablat	equ	0xFF5
 32868                           prodh	equ	0xFF4
 32869                           prodl	equ	0xFF3
 32870                           intcon	equ	0xFF2
 32871                           intcon3	equ	0xFF0
 32872                           indf0	equ	0xFEF
 32873                           postinc0	equ	0xFEE
 32874                           fsr0h	equ	0xFEA
 32875                           fsr0l	equ	0xFE9
 32876                           wreg	equ	0xFE8
 32877                           indf1	equ	0xFE7
 32878                           postdec1	equ	0xFE5
 32879                           plusw1	equ	0xFE3
 32880                           fsr1h	equ	0xFE2
 32881                           fsr1l	equ	0xFE1
 32882                           indf2	equ	0xFDF
 32883                           postinc2	equ	0xFDE
 32884                           postdec2	equ	0xFDD
 32885                           plusw2	equ	0xFDB
 32886                           fsr2h	equ	0xFDA
 32887                           fsr2l	equ	0xFD9
 32888                           status	equ	0xFD8
 32889                           
 32890 ;; *************** function __parse_command_long *****************
 32891 ;; Defined at:
 32892 ;;		line 337 in file "api.c"
 32893 ;; Parameters:    Size  Location     Type
 32894 ;;  data            2   46[COMRAM] PTR unsigned char 
 32895 ;;		 -> ReceivedDataBuffer(64), 
 32896 ;;  out_buffer      2   48[COMRAM] PTR unsigned char 
 32897 ;;		 -> ToSendDataBuffer(64), 
 32898 ;;  out_idx_ptr     2   50[COMRAM] PTR unsigned char 
 32899 ;;		 -> api_parse@out_idx(1), 
 32900 ;; Auto vars:     Size  Location     Type
 32901 ;;  length          1   52[COMRAM] unsigned char 
 32902 ;; Return value:  Size  Location     Type
 32903 ;;                  1    wreg      unsigned char 
 32904 ;; Registers used:
 32905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32906 ;; Tracked objects:
 32907 ;;		On entry : 0/0
 32908 ;;		On exit  : 0/0
 32909 ;;		Unchanged: 0/0
 32910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32912 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32915 ;;Total ram usage:        7 bytes
 32916 ;; Hardware stack levels used:    1
 32917 ;; Hardware stack levels required when called:    7
 32918 ;; This function calls:
 32919 ;;		__parse_format_drive
 32920 ;; This function is called by:
 32921 ;;		_api_parse
 32922 ;; This function uses a non-reentrant model
 32923 ;;
 32924                           
 32925                           	psect	text170
 32926  006D76                     __ptext170:
 32927                           	opt stack 0
 32928  006D76                     __parse_command_long:
 32929                           	opt stack 21
 32930                           
 32931                           ;api.c: 339: uint8_t length = 65;
 32932                           
 32933                           ;incstack = 0
 32934  006D76  0E41               	movlw	65
 32935  006D78  6E35               	movwf	__parse_command_long@length,c
 32936                           
 32937                           ;api.c: 341: switch(data[0])
 32938  006D7A  D010               	goto	l2768
 32939  006D7C                     
 32940                           ;api.c: 344: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 32941  006D7C  C02F  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32942  006D80  C030  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32943  006D84  C031  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 32944  006D88  C032  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 32945  006D8C  C033  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 32946  006D90  C034  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 32947  006D94  EC9F  F029         	call	__parse_format_drive	;wreg free
 32948  006D98  6E35               	movwf	__parse_command_long@length,c
 32949                           
 32950                           ;api.c: 346: }
 32951                           
 32952                           ;api.c: 345: break;
 32953  006D9A  D008               	goto	l2770
 32954  006D9C                     l2768:
 32955  006D9C  C02F  FFD9         	movff	__parse_command_long@data,fsr2l
 32956  006DA0  C030  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32957  006DA4  50DF               	movf	indf2,w,c
 32958                           
 32959                           ; Switch size 1, requested type "space"
 32960                           ; Number of cases is 1, Range of values is 86 to 86
 32961                           ; switch strategies available:
 32962                           ; Name         Instructions Cycles
 32963                           ; simple_byte            4     3 (average)
 32964                           ;	Chosen strategy is simple_byte
 32965  006DA6  0A56               	xorlw	86	; case 86
 32966  006DA8  B4D8               	btfsc	status,2,c
 32967  006DAA  D7E8               	goto	l2769
 32968  006DAC                     l2770:
 32969                           
 32970                           ;api.c: 348: return length;
 32971  006DAC  5035               	movf	__parse_command_long@length,w,c
 32972  006DAE  0012               	return	
 32973  006DB0                     __end_of__parse_command_long:
 32974                           	opt stack 0
 32975                           tosu	equ	0xFFF
 32976                           tosh	equ	0xFFE
 32977                           tosl	equ	0xFFD
 32978                           pclath	equ	0xFFA
 32979                           tblptru	equ	0xFF8
 32980                           tblptrh	equ	0xFF7
 32981                           tblptrl	equ	0xFF6
 32982                           tablat	equ	0xFF5
 32983                           prodh	equ	0xFF4
 32984                           prodl	equ	0xFF3
 32985                           intcon	equ	0xFF2
 32986                           intcon3	equ	0xFF0
 32987                           indf0	equ	0xFEF
 32988                           postinc0	equ	0xFEE
 32989                           fsr0h	equ	0xFEA
 32990                           fsr0l	equ	0xFE9
 32991                           wreg	equ	0xFE8
 32992                           indf1	equ	0xFE7
 32993                           postdec1	equ	0xFE5
 32994                           plusw1	equ	0xFE3
 32995                           fsr1h	equ	0xFE2
 32996                           fsr1l	equ	0xFE1
 32997                           indf2	equ	0xFDF
 32998                           postinc2	equ	0xFDE
 32999                           postdec2	equ	0xFDD
 33000                           plusw2	equ	0xFDB
 33001                           fsr2h	equ	0xFDA
 33002                           fsr2l	equ	0xFD9
 33003                           status	equ	0xFD8
 33004                           
 33005 ;; *************** function __parse_format_drive *****************
 33006 ;; Defined at:
 33007 ;;		line 351 in file "api.c"
 33008 ;; Parameters:    Size  Location     Type
 33009 ;;  data            2   38[COMRAM] PTR unsigned char 
 33010 ;;		 -> ReceivedDataBuffer(64), 
 33011 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 33012 ;;		 -> ToSendDataBuffer(64), 
 33013 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 33014 ;;		 -> api_parse@out_idx(1), 
 33015 ;; Auto vars:     Size  Location     Type
 33016 ;;  return_value    1   45[COMRAM] unsigned char 
 33017 ;; Return value:  Size  Location     Type
 33018 ;;                  1    wreg      unsigned char 
 33019 ;; Registers used:
 33020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33021 ;; Tracked objects:
 33022 ;;		On entry : 0/0
 33023 ;;		On exit  : 0/0
 33024 ;;		Unchanged: 0/0
 33025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33029 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33030 ;;Total ram usage:        8 bytes
 33031 ;; Hardware stack levels used:    1
 33032 ;; Hardware stack levels required when called:    6
 33033 ;; This function calls:
 33034 ;;		_fat_format
 33035 ;; This function is called by:
 33036 ;;		__parse_command_long
 33037 ;; This function uses a non-reentrant model
 33038 ;;
 33039                           
 33040                           	psect	text171
 33041  00533E                     __ptext171:
 33042                           	opt stack 0
 33043  00533E                     __parse_format_drive:
 33044                           	opt stack 21
 33045                           
 33046                           ;api.c: 355: uint8_t return_value;;api.c: 357: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 33047                           
 33048                           ;incstack = 0
 33049  00533E  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 33050  005342  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 33051  005346  0E56               	movlw	86
 33052  005348  18DE               	xorwf	postinc2,w,c
 33053  00534A  A4D8               	btfss	status,2,c
 33054  00534C  D014               	goto	u10280
 33055  00534E  EE20 F001          	lfsr	2,1
 33056  005352  5027               	movf	__parse_format_drive@data,w,c
 33057  005354  26D9               	addwf	fsr2l,f,c
 33058  005356  5028               	movf	__parse_format_drive@data+1,w,c
 33059  005358  22DA               	addwfc	fsr2h,f,c
 33060  00535A  0EDA               	movlw	218
 33061  00535C  18DE               	xorwf	postinc2,w,c
 33062  00535E  A4D8               	btfss	status,2,c
 33063  005360  D00A               	goto	u10280
 33064  005362  EE20 F002          	lfsr	2,2
 33065  005366  5027               	movf	__parse_format_drive@data,w,c
 33066  005368  26D9               	addwf	fsr2l,f,c
 33067  00536A  5028               	movf	__parse_format_drive@data+1,w,c
 33068  00536C  22DA               	addwfc	fsr2h,f,c
 33069  00536E  0E22               	movlw	34
 33070  005370  18DE               	xorwf	postinc2,w,c
 33071  005372  B4D8               	btfsc	status,2,c
 33072  005374  D002               	goto	l2774
 33073  005376                     u10280:
 33074                           
 33075                           ;api.c: 358: {;api.c: 359: return 3;
 33076  005376  0E03               	movlw	3
 33077  005378  0012               	return	
 33078  00537A                     l2774:
 33079                           
 33080                           ;api.c: 360: };api.c: 362: return_value = fat_format();
 33081  00537A  EC1E  F00F         	call	_fat_format	;wreg free
 33082  00537E  6E2E               	movwf	__parse_format_drive@return_value,c
 33083                           
 33084                           ;api.c: 365: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 33085  005380  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33086  005384  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33087  005388  50DF               	movf	indf2,w,c
 33088  00538A  B4D8               	btfsc	status,2,c
 33089  00538C  D02B               	goto	l2778
 33090  00538E  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33091  005392  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33092  005396  0E3F               	movlw	63
 33093  005398  60DF               	cpfslt	indf2,c
 33094  00539A  D024               	goto	l2778
 33095                           
 33096                           ;api.c: 366: {;api.c: 367: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 33097  00539C  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33098  0053A0  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33099  0053A4  CFDF F02D          	movff	indf2,??__parse_format_drive
 33100  0053A8  0E01               	movlw	1
 33101  0053AA  26DF               	addwf	indf2,f,c
 33102  0053AC  502D               	movf	??__parse_format_drive,w,c
 33103  0053AE  0D01               	mullw	1
 33104  0053B0  50F3               	movf	prodl,w,c
 33105  0053B2  2429               	addwf	__parse_format_drive@out_buffer,w,c
 33106  0053B4  6ED9               	movwf	fsr2l,c
 33107  0053B6  50F4               	movf	prodh,w,c
 33108  0053B8  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 33109  0053BA  6EDA               	movwf	fsr2h,c
 33110  0053BC  0E56               	movlw	86
 33111  0053BE  6EDF               	movwf	indf2,c
 33112                           
 33113                           ;api.c: 368: out_buffer[(*out_idx_ptr)++] = return_value;
 33114  0053C0  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33115  0053C4  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33116  0053C8  CFDF F02D          	movff	indf2,??__parse_format_drive
 33117  0053CC  0E01               	movlw	1
 33118  0053CE  26DF               	addwf	indf2,f,c
 33119  0053D0  502D               	movf	??__parse_format_drive,w,c
 33120  0053D2  0D01               	mullw	1
 33121  0053D4  50F3               	movf	prodl,w,c
 33122  0053D6  2429               	addwf	__parse_format_drive@out_buffer,w,c
 33123  0053D8  6ED9               	movwf	fsr2l,c
 33124  0053DA  50F4               	movf	prodh,w,c
 33125  0053DC  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 33126  0053DE  6EDA               	movwf	fsr2h,c
 33127  0053E0  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 33128  0053E4                     l2778:
 33129                           
 33130                           ;api.c: 369: };api.c: 371: return 3;
 33131  0053E4  0E03               	movlw	3
 33132  0053E6  0012               	return	
 33133  0053E8                     __end_of__parse_format_drive:
 33134                           	opt stack 0
 33135                           tosu	equ	0xFFF
 33136                           tosh	equ	0xFFE
 33137                           tosl	equ	0xFFD
 33138                           pclath	equ	0xFFA
 33139                           tblptru	equ	0xFF8
 33140                           tblptrh	equ	0xFF7
 33141                           tblptrl	equ	0xFF6
 33142                           tablat	equ	0xFF5
 33143                           prodh	equ	0xFF4
 33144                           prodl	equ	0xFF3
 33145                           intcon	equ	0xFF2
 33146                           intcon3	equ	0xFF0
 33147                           indf0	equ	0xFEF
 33148                           postinc0	equ	0xFEE
 33149                           fsr0h	equ	0xFEA
 33150                           fsr0l	equ	0xFE9
 33151                           wreg	equ	0xFE8
 33152                           indf1	equ	0xFE7
 33153                           postdec1	equ	0xFE5
 33154                           plusw1	equ	0xFE3
 33155                           fsr1h	equ	0xFE2
 33156                           fsr1l	equ	0xFE1
 33157                           indf2	equ	0xFDF
 33158                           postinc2	equ	0xFDE
 33159                           postdec2	equ	0xFDD
 33160                           plusw2	equ	0xFDB
 33161                           fsr2h	equ	0xFDA
 33162                           fsr2l	equ	0xFD9
 33163                           status	equ	0xFD8
 33164                           
 33165 ;; *************** function _fat_format *****************
 33166 ;; Defined at:
 33167 ;;		line 1320 in file "fat16.c"
 33168 ;; Parameters:    Size  Location     Type
 33169 ;;		None
 33170 ;; Auto vars:     Size  Location     Type
 33171 ;;  cntr            2   36[COMRAM] unsigned int 
 33172 ;; Return value:  Size  Location     Type
 33173 ;;                  1    wreg      unsigned char 
 33174 ;; Registers used:
 33175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33176 ;; Tracked objects:
 33177 ;;		On entry : 0/0
 33178 ;;		On exit  : 0/0
 33179 ;;		Unchanged: 0/0
 33180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33185 ;;Total ram usage:        2 bytes
 33186 ;; Hardware stack levels used:    1
 33187 ;; Hardware stack levels required when called:    5
 33188 ;; This function calls:
 33189 ;;		__get_data
 33190 ;;		__get_fat
 33191 ;;		__get_fbr
 33192 ;;		__get_mbr
 33193 ;;		__get_root
 33194 ;;		_flash_sector_write
 33195 ;; This function is called by:
 33196 ;;		_fat_init
 33197 ;;		__parse_format_drive
 33198 ;; This function uses a non-reentrant model
 33199 ;;
 33200                           
 33201                           	psect	text172
 33202  001E3C                     __ptext172:
 33203                           	opt stack 0
 33204  001E3C                     _fat_format:
 33205                           	opt stack 23
 33206                           
 33207                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 33208                           
 33209                           ;incstack = 0
 33210  001E3C  0E00               	movlw	0
 33211  001E3E  6E26               	movwf	fat_format@cntr+1,c
 33212  001E40  0E00               	movlw	0
 33213  001E42  6E25               	movwf	fat_format@cntr,c
 33214  001E44                     l12297:
 33215  001E44  0E02               	movlw	2
 33216  001E46  5C26               	subwf	fat_format@cntr+1,w,c
 33217  001E48  B0D8               	btfsc	status,0,c
 33218  001E4A  D010               	goto	u9720
 33219                           
 33220                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 33221  001E4C  0ECC               	movlw	low _buffer
 33222  001E4E  2425               	addwf	fat_format@cntr,w,c
 33223  001E50  6ED9               	movwf	fsr2l,c
 33224  001E52  0E02               	movlw	high _buffer
 33225  001E54  2026               	addwfc	fat_format@cntr+1,w,c
 33226  001E56  6EDA               	movwf	fsr2h,c
 33227  001E58  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 33228  001E5C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 33229  001E60  EC58  F026         	call	__get_mbr	;wreg free
 33230  001E64  6EDF               	movwf	indf2,c
 33231  001E66  4A25               	infsnz	fat_format@cntr,f,c
 33232  001E68  2A26               	incf	fat_format@cntr+1,f,c
 33233  001E6A  D7EC               	goto	l12297
 33234  001E6C                     u9720:
 33235                           
 33236                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 33237  001E6C  0E00               	movlw	0
 33238  001E6E  6E21               	movwf	flash_sector_write@page+1,c
 33239  001E70  0E00               	movlw	0
 33240  001E72  6E20               	movwf	flash_sector_write@page,c
 33241  001E74  0ECC               	movlw	low _buffer
 33242  001E76  6E22               	movwf	flash_sector_write@data,c
 33243  001E78  0E02               	movlw	high _buffer
 33244  001E7A  6E23               	movwf	flash_sector_write@data+1,c
 33245  001E7C  EC24  F035         	call	_flash_sector_write	;wreg free
 33246                           
 33247                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 33248  001E80  0E00               	movlw	0
 33249  001E82  6E26               	movwf	fat_format@cntr+1,c
 33250  001E84  0E00               	movlw	0
 33251  001E86  6E25               	movwf	fat_format@cntr,c
 33252  001E88                     l12311:
 33253  001E88  0E02               	movlw	2
 33254  001E8A  5C26               	subwf	fat_format@cntr+1,w,c
 33255  001E8C  B0D8               	btfsc	status,0,c
 33256  001E8E  D010               	goto	u9740
 33257                           
 33258                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 33259  001E90  0ECC               	movlw	low _buffer
 33260  001E92  2425               	addwf	fat_format@cntr,w,c
 33261  001E94  6ED9               	movwf	fsr2l,c
 33262  001E96  0E02               	movlw	high _buffer
 33263  001E98  2026               	addwfc	fat_format@cntr+1,w,c
 33264  001E9A  6EDA               	movwf	fsr2h,c
 33265  001E9C  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 33266  001EA0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 33267  001EA4  ECAD  F00B         	call	__get_fbr	;wreg free
 33268  001EA8  6EDF               	movwf	indf2,c
 33269  001EAA  4A25               	infsnz	fat_format@cntr,f,c
 33270  001EAC  2A26               	incf	fat_format@cntr+1,f,c
 33271  001EAE  D7EC               	goto	l12311
 33272  001EB0                     u9740:
 33273                           
 33274                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 33275  001EB0  0E00               	movlw	0
 33276  001EB2  6E21               	movwf	flash_sector_write@page+1,c
 33277  001EB4  0E01               	movlw	1
 33278  001EB6  6E20               	movwf	flash_sector_write@page,c
 33279  001EB8  0ECC               	movlw	low _buffer
 33280  001EBA  6E22               	movwf	flash_sector_write@data,c
 33281  001EBC  0E02               	movlw	high _buffer
 33282  001EBE  6E23               	movwf	flash_sector_write@data+1,c
 33283  001EC0  EC24  F035         	call	_flash_sector_write	;wreg free
 33284                           
 33285                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 33286  001EC4  0E00               	movlw	0
 33287  001EC6  6E26               	movwf	fat_format@cntr+1,c
 33288  001EC8  0E00               	movlw	0
 33289  001ECA  6E25               	movwf	fat_format@cntr,c
 33290  001ECC                     l12325:
 33291  001ECC  0E02               	movlw	2
 33292  001ECE  5C26               	subwf	fat_format@cntr+1,w,c
 33293  001ED0  B0D8               	btfsc	status,0,c
 33294  001ED2  D010               	goto	u9760
 33295                           
 33296                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 33297  001ED4  0ECC               	movlw	low _buffer
 33298  001ED6  2425               	addwf	fat_format@cntr,w,c
 33299  001ED8  6ED9               	movwf	fsr2l,c
 33300  001EDA  0E02               	movlw	high _buffer
 33301  001EDC  2026               	addwfc	fat_format@cntr+1,w,c
 33302  001EDE  6EDA               	movwf	fsr2h,c
 33303  001EE0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 33304  001EE4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 33305  001EE8  ECDC  F033         	call	__get_fat	;wreg free
 33306  001EEC  6EDF               	movwf	indf2,c
 33307  001EEE  4A25               	infsnz	fat_format@cntr,f,c
 33308  001EF0  2A26               	incf	fat_format@cntr+1,f,c
 33309  001EF2  D7EC               	goto	l12325
 33310  001EF4                     u9760:
 33311                           
 33312                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 33313  001EF4  0E00               	movlw	0
 33314  001EF6  6E21               	movwf	flash_sector_write@page+1,c
 33315  001EF8  0E02               	movlw	2
 33316  001EFA  6E20               	movwf	flash_sector_write@page,c
 33317  001EFC  0ECC               	movlw	low _buffer
 33318  001EFE  6E22               	movwf	flash_sector_write@data,c
 33319  001F00  0E02               	movlw	high _buffer
 33320  001F02  6E23               	movwf	flash_sector_write@data+1,c
 33321  001F04  EC24  F035         	call	_flash_sector_write	;wreg free
 33322                           
 33323                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 33324  001F08  0E00               	movlw	0
 33325  001F0A  6E26               	movwf	fat_format@cntr+1,c
 33326  001F0C  0E00               	movlw	0
 33327  001F0E  6E25               	movwf	fat_format@cntr,c
 33328  001F10                     l12339:
 33329  001F10  0E02               	movlw	2
 33330  001F12  5C26               	subwf	fat_format@cntr+1,w,c
 33331  001F14  B0D8               	btfsc	status,0,c
 33332  001F16  D00B               	goto	u9780
 33333                           
 33334                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 33335  001F18  0ECC               	movlw	low _buffer
 33336  001F1A  2425               	addwf	fat_format@cntr,w,c
 33337  001F1C  6ED9               	movwf	fsr2l,c
 33338  001F1E  0E02               	movlw	high _buffer
 33339  001F20  2026               	addwfc	fat_format@cntr+1,w,c
 33340  001F22  6EDA               	movwf	fsr2h,c
 33341  001F24  0E00               	movlw	0
 33342  001F26  6EDF               	movwf	indf2,c
 33343  001F28  4A25               	infsnz	fat_format@cntr,f,c
 33344  001F2A  2A26               	incf	fat_format@cntr+1,f,c
 33345  001F2C  D7F1               	goto	l12339
 33346  001F2E                     u9780:
 33347                           
 33348                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 33349  001F2E  0E00               	movlw	0
 33350  001F30  6E26               	movwf	fat_format@cntr+1,c
 33351  001F32  0E03               	movlw	3
 33352  001F34  6E25               	movwf	fat_format@cntr,c
 33353  001F36                     l12351:
 33354  001F36  5026               	movf	fat_format@cntr+1,w,c
 33355  001F38  E111               	bnz	l12361
 33356  001F3A  0E22               	movlw	34
 33357  001F3C  5C25               	subwf	fat_format@cntr,w,c
 33358  001F3E  B0D8               	btfsc	status,0,c
 33359  001F40  D00D               	goto	u9800
 33360                           
 33361                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 33362  001F42  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33363  001F46  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33364  001F4A  0ECC               	movlw	low _buffer
 33365  001F4C  6E22               	movwf	flash_sector_write@data,c
 33366  001F4E  0E02               	movlw	high _buffer
 33367  001F50  6E23               	movwf	flash_sector_write@data+1,c
 33368  001F52  EC24  F035         	call	_flash_sector_write	;wreg free
 33369  001F56  4A25               	infsnz	fat_format@cntr,f,c
 33370  001F58  2A26               	incf	fat_format@cntr+1,f,c
 33371  001F5A  D7ED               	goto	l12351
 33372  001F5C                     u9800:
 33373  001F5C                     l12361:
 33374                           
 33375                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 33376  001F5C  0E00               	movlw	0
 33377  001F5E  6E26               	movwf	fat_format@cntr+1,c
 33378  001F60  0E00               	movlw	0
 33379  001F62  6E25               	movwf	fat_format@cntr,c
 33380  001F64                     l12363:
 33381  001F64  0E02               	movlw	2
 33382  001F66  5C26               	subwf	fat_format@cntr+1,w,c
 33383  001F68  B0D8               	btfsc	status,0,c
 33384  001F6A  D010               	goto	u9820
 33385                           
 33386                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 33387  001F6C  0ECC               	movlw	low _buffer
 33388  001F6E  2425               	addwf	fat_format@cntr,w,c
 33389  001F70  6ED9               	movwf	fsr2l,c
 33390  001F72  0E02               	movlw	high _buffer
 33391  001F74  2026               	addwfc	fat_format@cntr+1,w,c
 33392  001F76  6EDA               	movwf	fsr2h,c
 33393  001F78  C025  F001         	movff	fat_format@cntr,__get_root@idx
 33394  001F7C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 33395  001F80  ECC1  F014         	call	__get_root	;wreg free
 33396  001F84  6EDF               	movwf	indf2,c
 33397  001F86  4A25               	infsnz	fat_format@cntr,f,c
 33398  001F88  2A26               	incf	fat_format@cntr+1,f,c
 33399  001F8A  D7EC               	goto	l12363
 33400  001F8C                     u9820:
 33401                           
 33402                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 33403  001F8C  0E00               	movlw	0
 33404  001F8E  6E21               	movwf	flash_sector_write@page+1,c
 33405  001F90  0E22               	movlw	34
 33406  001F92  6E20               	movwf	flash_sector_write@page,c
 33407  001F94  0ECC               	movlw	low _buffer
 33408  001F96  6E22               	movwf	flash_sector_write@data,c
 33409  001F98  0E02               	movlw	high _buffer
 33410  001F9A  6E23               	movwf	flash_sector_write@data+1,c
 33411  001F9C  EC24  F035         	call	_flash_sector_write	;wreg free
 33412                           
 33413                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 33414  001FA0  0E00               	movlw	0
 33415  001FA2  6E26               	movwf	fat_format@cntr+1,c
 33416  001FA4  0E00               	movlw	0
 33417  001FA6  6E25               	movwf	fat_format@cntr,c
 33418  001FA8                     l12377:
 33419  001FA8  0E02               	movlw	2
 33420  001FAA  5C26               	subwf	fat_format@cntr+1,w,c
 33421  001FAC  B0D8               	btfsc	status,0,c
 33422  001FAE  D00B               	goto	u9840
 33423                           
 33424                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 33425  001FB0  0ECC               	movlw	low _buffer
 33426  001FB2  2425               	addwf	fat_format@cntr,w,c
 33427  001FB4  6ED9               	movwf	fsr2l,c
 33428  001FB6  0E02               	movlw	high _buffer
 33429  001FB8  2026               	addwfc	fat_format@cntr+1,w,c
 33430  001FBA  6EDA               	movwf	fsr2h,c
 33431  001FBC  0E00               	movlw	0
 33432  001FBE  6EDF               	movwf	indf2,c
 33433  001FC0  4A25               	infsnz	fat_format@cntr,f,c
 33434  001FC2  2A26               	incf	fat_format@cntr+1,f,c
 33435  001FC4  D7F1               	goto	l12377
 33436  001FC6                     u9840:
 33437                           
 33438                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 33439  001FC6  0E00               	movlw	0
 33440  001FC8  6E26               	movwf	fat_format@cntr+1,c
 33441  001FCA  0E23               	movlw	35
 33442  001FCC  6E25               	movwf	fat_format@cntr,c
 33443  001FCE                     l12389:
 33444  001FCE  5026               	movf	fat_format@cntr+1,w,c
 33445  001FD0  E111               	bnz	l12399
 33446  001FD2  0E26               	movlw	38
 33447  001FD4  5C25               	subwf	fat_format@cntr,w,c
 33448  001FD6  B0D8               	btfsc	status,0,c
 33449  001FD8  D00D               	goto	u9860
 33450                           
 33451                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 33452  001FDA  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33453  001FDE  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33454  001FE2  0ECC               	movlw	low _buffer
 33455  001FE4  6E22               	movwf	flash_sector_write@data,c
 33456  001FE6  0E02               	movlw	high _buffer
 33457  001FE8  6E23               	movwf	flash_sector_write@data+1,c
 33458  001FEA  EC24  F035         	call	_flash_sector_write	;wreg free
 33459  001FEE  4A25               	infsnz	fat_format@cntr,f,c
 33460  001FF0  2A26               	incf	fat_format@cntr+1,f,c
 33461  001FF2  D7ED               	goto	l12389
 33462  001FF4                     u9860:
 33463  001FF4                     l12399:
 33464                           
 33465                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 33466  001FF4  0E00               	movlw	0
 33467  001FF6  6E26               	movwf	fat_format@cntr+1,c
 33468  001FF8  0E00               	movlw	0
 33469  001FFA  6E25               	movwf	fat_format@cntr,c
 33470  001FFC                     l12401:
 33471  001FFC  0E02               	movlw	2
 33472  001FFE  5C26               	subwf	fat_format@cntr+1,w,c
 33473  002000  B0D8               	btfsc	status,0,c
 33474  002002  D010               	goto	u9880
 33475                           
 33476                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 33477  002004  0ECC               	movlw	low _buffer
 33478  002006  2425               	addwf	fat_format@cntr,w,c
 33479  002008  6ED9               	movwf	fsr2l,c
 33480  00200A  0E02               	movlw	high _buffer
 33481  00200C  2026               	addwfc	fat_format@cntr+1,w,c
 33482  00200E  6EDA               	movwf	fsr2h,c
 33483  002010  C025  F001         	movff	fat_format@cntr,__get_data@idx
 33484  002014  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 33485  002018  EC2A  F038         	call	__get_data	;wreg free
 33486  00201C  6EDF               	movwf	indf2,c
 33487  00201E  4A25               	infsnz	fat_format@cntr,f,c
 33488  002020  2A26               	incf	fat_format@cntr+1,f,c
 33489  002022  D7EC               	goto	l12401
 33490  002024                     u9880:
 33491                           
 33492                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 33493  002024  0E00               	movlw	0
 33494  002026  6E21               	movwf	flash_sector_write@page+1,c
 33495  002028  0E26               	movlw	38
 33496  00202A  6E20               	movwf	flash_sector_write@page,c
 33497  00202C  0ECC               	movlw	low _buffer
 33498  00202E  6E22               	movwf	flash_sector_write@data,c
 33499  002030  0E02               	movlw	high _buffer
 33500  002032  6E23               	movwf	flash_sector_write@data+1,c
 33501  002034  EC24  F035         	call	_flash_sector_write	;wreg free
 33502                           
 33503                           ;fat16.c: 1379: return 0x00;
 33504  002038  0E00               	movlw	0
 33505  00203A  0012               	return	
 33506  00203C                     __end_of_fat_format:
 33507                           	opt stack 0
 33508                           tosu	equ	0xFFF
 33509                           tosh	equ	0xFFE
 33510                           tosl	equ	0xFFD
 33511                           pclath	equ	0xFFA
 33512                           tblptru	equ	0xFF8
 33513                           tblptrh	equ	0xFF7
 33514                           tblptrl	equ	0xFF6
 33515                           tablat	equ	0xFF5
 33516                           prodh	equ	0xFF4
 33517                           prodl	equ	0xFF3
 33518                           intcon	equ	0xFF2
 33519                           intcon3	equ	0xFF0
 33520                           indf0	equ	0xFEF
 33521                           postinc0	equ	0xFEE
 33522                           fsr0h	equ	0xFEA
 33523                           fsr0l	equ	0xFE9
 33524                           wreg	equ	0xFE8
 33525                           indf1	equ	0xFE7
 33526                           postdec1	equ	0xFE5
 33527                           plusw1	equ	0xFE3
 33528                           fsr1h	equ	0xFE2
 33529                           fsr1l	equ	0xFE1
 33530                           indf2	equ	0xFDF
 33531                           postinc2	equ	0xFDE
 33532                           postdec2	equ	0xFDD
 33533                           plusw2	equ	0xFDB
 33534                           fsr2h	equ	0xFDA
 33535                           fsr2l	equ	0xFD9
 33536                           status	equ	0xFD8
 33537                           
 33538 ;; *************** function _flash_sector_write *****************
 33539 ;; Defined at:
 33540 ;;		line 434 in file "flash.c"
 33541 ;; Parameters:    Size  Location     Type
 33542 ;;  page            2   31[COMRAM] unsigned int 
 33543 ;;  data            2   33[COMRAM] PTR unsigned char 
 33544 ;;		 -> buffer(512), msd_buffer(512), 
 33545 ;; Auto vars:     Size  Location     Type
 33546 ;;  match           1   35[COMRAM] enum E6899
 33547 ;; Return value:  Size  Location     Type
 33548 ;;                  1    wreg      void 
 33549 ;; Registers used:
 33550 ;;		wreg, status,2, status,0, cstack
 33551 ;; Tracked objects:
 33552 ;;		On entry : 0/0
 33553 ;;		On exit  : 0/0
 33554 ;;		Unchanged: 0/0
 33555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33559 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33560 ;;Total ram usage:        5 bytes
 33561 ;; Hardware stack levels used:    1
 33562 ;; Hardware stack levels required when called:    4
 33563 ;; This function calls:
 33564 ;;		__flash_compare_page_to_buffer
 33565 ;;		__flash_write_page_from_buffer
 33566 ;;		__flash_write_to_buffer
 33567 ;; This function is called by:
 33568 ;;		_ExternalFlash_SectorWrite
 33569 ;;		_fat_format
 33570 ;;		__make_cluster_chain
 33571 ;; This function uses a non-reentrant model
 33572 ;;
 33573                           
 33574                           	psect	text173
 33575  006A48                     __ptext173:
 33576                           	opt stack 0
 33577  006A48                     _flash_sector_write:
 33578                           	opt stack 23
 33579                           
 33580                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 33581                           
 33582                           ;incstack = 0
 33583  006A48  0E00               	movlw	0
 33584  006A4A  6E15               	movwf	__flash_write_to_buffer@start+1,c
 33585  006A4C  0E00               	movlw	0
 33586  006A4E  6E14               	movwf	__flash_write_to_buffer@start,c
 33587  006A50  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 33588  006A54  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 33589  006A58  0E02               	movlw	2
 33590  006A5A  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 33591  006A5C  0E00               	movlw	0
 33592  006A5E  6E18               	movwf	__flash_write_to_buffer@data_length,c
 33593  006A60  0E00               	movlw	0
 33594  006A62  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 33595  006A64  ECD6  F034         	call	__flash_write_to_buffer	;wreg free
 33596                           
 33597                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33598  006A68  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 33599  006A6C  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 33600  006A70  0E00               	movlw	0
 33601  006A72  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 33602  006A74  EC68  F02F         	call	__flash_compare_page_to_buffer	;wreg free
 33603  006A78  6E24               	movwf	flash_sector_write@match,c
 33604                           
 33605                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 33606  006A7A  0424               	decf	flash_sector_write@match,w,c
 33607  006A7C  A4D8               	btfss	status,2,c
 33608  006A7E  0012               	return	
 33609                           
 33610                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33611  006A80  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 33612  006A84  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 33613  006A88  0E00               	movlw	0
 33614  006A8A  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 33615  006A8C  ECD8  F032         	call	__flash_write_page_from_buffer	;wreg free
 33616  006A90  0012               	return	
 33617  006A92                     __end_of_flash_sector_write:
 33618                           	opt stack 0
 33619                           tosu	equ	0xFFF
 33620                           tosh	equ	0xFFE
 33621                           tosl	equ	0xFFD
 33622                           pclath	equ	0xFFA
 33623                           tblptru	equ	0xFF8
 33624                           tblptrh	equ	0xFF7
 33625                           tblptrl	equ	0xFF6
 33626                           tablat	equ	0xFF5
 33627                           prodh	equ	0xFF4
 33628                           prodl	equ	0xFF3
 33629                           intcon	equ	0xFF2
 33630                           intcon3	equ	0xFF0
 33631                           indf0	equ	0xFEF
 33632                           postinc0	equ	0xFEE
 33633                           fsr0h	equ	0xFEA
 33634                           fsr0l	equ	0xFE9
 33635                           wreg	equ	0xFE8
 33636                           indf1	equ	0xFE7
 33637                           postdec1	equ	0xFE5
 33638                           plusw1	equ	0xFE3
 33639                           fsr1h	equ	0xFE2
 33640                           fsr1l	equ	0xFE1
 33641                           indf2	equ	0xFDF
 33642                           postinc2	equ	0xFDE
 33643                           postdec2	equ	0xFDD
 33644                           plusw2	equ	0xFDB
 33645                           fsr2h	equ	0xFDA
 33646                           fsr2l	equ	0xFD9
 33647                           status	equ	0xFD8
 33648                           
 33649 ;; *************** function __flash_write_to_buffer *****************
 33650 ;; Defined at:
 33651 ;;		line 236 in file "flash.c"
 33652 ;; Parameters:    Size  Location     Type
 33653 ;;  start           2   19[COMRAM] unsigned int 
 33654 ;;  data            2   21[COMRAM] PTR unsigned char 
 33655 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33656 ;;		 -> buffer(512), msd_buffer(512), 
 33657 ;;  data_length     2   23[COMRAM] unsigned int 
 33658 ;;  buffer          1   25[COMRAM] enum E6895
 33659 ;; Auto vars:     Size  Location     Type
 33660 ;;  command         4   26[COMRAM] unsigned char [4]
 33661 ;; Return value:  Size  Location     Type
 33662 ;;                  1    wreg      void 
 33663 ;; Registers used:
 33664 ;;		wreg, status,2, status,0, cstack
 33665 ;; Tracked objects:
 33666 ;;		On entry : 0/0
 33667 ;;		On exit  : 0/0
 33668 ;;		Unchanged: 0/0
 33669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33670 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33671 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33673 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33674 ;;Total ram usage:       11 bytes
 33675 ;; Hardware stack levels used:    1
 33676 ;; Hardware stack levels required when called:    3
 33677 ;; This function calls:
 33678 ;;		__flash_is_busy
 33679 ;;		_spi_tx_tx
 33680 ;; This function is called by:
 33681 ;;		_flash_sector_write
 33682 ;;		_flash_partial_write
 33683 ;;		_flash_write_to_buffer
 33684 ;; This function uses a non-reentrant model
 33685 ;;
 33686                           
 33687                           	psect	text174
 33688  0069AC                     __ptext174:
 33689                           	opt stack 0
 33690  0069AC                     __flash_write_to_buffer:
 33691                           	opt stack 23
 33692                           
 33693                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 33694                           
 33695                           ;incstack = 0
 33696  0069AC  ECD3  F038         	call	__flash_is_busy	;wreg free
 33697  0069B0  0900               	iorlw	0
 33698  0069B2  A4D8               	btfss	status,2,c
 33699  0069B4  D7FB               	goto	__flash_write_to_buffer
 33700                           
 33701                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 33702  0069B6  501A               	movf	__flash_write_to_buffer@buffer,w,c
 33703  0069B8  A4D8               	btfss	status,2,c
 33704  0069BA  D002               	goto	l1831
 33705                           
 33706                           ;flash.c: 245: command[0] = 0x84;
 33707  0069BC  0E84               	movlw	132
 33708  0069BE  6E1B               	movwf	__flash_write_to_buffer@command,c
 33709  0069C0                     l1831:
 33710                           
 33711                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 33712  0069C0  041A               	decf	__flash_write_to_buffer@buffer,w,c
 33713  0069C2  A4D8               	btfss	status,2,c
 33714  0069C4  D002               	goto	l1832
 33715                           
 33716                           ;flash.c: 247: command[0] = 0x87;
 33717  0069C6  0E87               	movlw	135
 33718  0069C8  6E1B               	movwf	__flash_write_to_buffer@command,c
 33719  0069CA                     l1832:
 33720                           
 33721                           ;flash.c: 249: command[1] = 0x00;
 33722  0069CA  0E00               	movlw	0
 33723  0069CC  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 33724                           
 33725                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33726  0069CE  5015               	movf	__flash_write_to_buffer@start+1,w,c
 33727  0069D0  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 33728                           
 33729                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 33730  0069D2  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33731                           
 33732                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 33733  0069D6  0E1B               	movlw	low __flash_write_to_buffer@command
 33734  0069D8  6E01               	movwf	spi_tx_tx@command,c
 33735  0069DA  0E00               	movlw	high __flash_write_to_buffer@command
 33736  0069DC  6E02               	movwf	spi_tx_tx@command+1,c
 33737  0069DE  0E00               	movlw	0
 33738  0069E0  6E04               	movwf	spi_tx_tx@command_length+1,c
 33739  0069E2  0E04               	movlw	4
 33740  0069E4  6E03               	movwf	spi_tx_tx@command_length,c
 33741  0069E6  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 33742  0069EA  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 33743  0069EE  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 33744  0069F2  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 33745  0069F6  ECE3  F02D         	call	_spi_tx_tx	;wreg free
 33746  0069FA  0012               	return		;funcret
 33747  0069FC                     __end_of__flash_write_to_buffer:
 33748                           	opt stack 0
 33749                           tosu	equ	0xFFF
 33750                           tosh	equ	0xFFE
 33751                           tosl	equ	0xFFD
 33752                           pclath	equ	0xFFA
 33753                           tblptru	equ	0xFF8
 33754                           tblptrh	equ	0xFF7
 33755                           tblptrl	equ	0xFF6
 33756                           tablat	equ	0xFF5
 33757                           prodh	equ	0xFF4
 33758                           prodl	equ	0xFF3
 33759                           intcon	equ	0xFF2
 33760                           intcon3	equ	0xFF0
 33761                           indf0	equ	0xFEF
 33762                           postinc0	equ	0xFEE
 33763                           fsr0h	equ	0xFEA
 33764                           fsr0l	equ	0xFE9
 33765                           wreg	equ	0xFE8
 33766                           indf1	equ	0xFE7
 33767                           postdec1	equ	0xFE5
 33768                           plusw1	equ	0xFE3
 33769                           fsr1h	equ	0xFE2
 33770                           fsr1l	equ	0xFE1
 33771                           indf2	equ	0xFDF
 33772                           postinc2	equ	0xFDE
 33773                           postdec2	equ	0xFDD
 33774                           plusw2	equ	0xFDB
 33775                           fsr2h	equ	0xFDA
 33776                           fsr2l	equ	0xFD9
 33777                           status	equ	0xFD8
 33778                           
 33779 ;; *************** function _spi_tx_tx *****************
 33780 ;; Defined at:
 33781 ;;		line 146 in file "spi.c"
 33782 ;; Parameters:    Size  Location     Type
 33783 ;;  command         2    0[COMRAM] PTR unsigned char 
 33784 ;;		 -> _flash_write_to_buffer@command(4), 
 33785 ;;  command_leng    2    2[COMRAM] unsigned int 
 33786 ;;  data            2    4[COMRAM] PTR unsigned char 
 33787 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33788 ;;		 -> buffer(512), msd_buffer(512), 
 33789 ;;  data_length     2    6[COMRAM] unsigned int 
 33790 ;; Auto vars:     Size  Location     Type
 33791 ;;		None
 33792 ;; Return value:  Size  Location     Type
 33793 ;;                  1    wreg      void 
 33794 ;; Registers used:
 33795 ;;		wreg, status,2, status,0
 33796 ;; Tracked objects:
 33797 ;;		On entry : 0/0
 33798 ;;		On exit  : 0/0
 33799 ;;		Unchanged: 0/0
 33800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33805 ;;Total ram usage:       12 bytes
 33806 ;; Hardware stack levels used:    1
 33807 ;; This function calls:
 33808 ;;		Nothing
 33809 ;; This function is called by:
 33810 ;;		__flash_write_to_buffer
 33811 ;; This function uses a non-reentrant model
 33812 ;;
 33813                           
 33814                           	psect	text175
 33815  005BC6                     __ptext175:
 33816                           	opt stack 0
 33817  005BC6                     _spi_tx_tx:
 33818                           	opt stack 25
 33819                           
 33820                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33821                           
 33822                           ;incstack = 0
 33823  005BC6  9E88               	bcf	3976,7,c	;volatile
 33824                           
 33825                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33826  005BC8  9C88               	bcf	3976,6,c	;volatile
 33827                           
 33828                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33829  005BCA  8A88               	bsf	3976,5,c	;volatile
 33830                           
 33831                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33832  005BCC  9888               	bcf	3976,4,c	;volatile
 33833                           
 33834                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33835  005BCE  9688               	bcf	3976,3,c	;volatile
 33836                           
 33837                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33838  005BD0  8488               	bsf	3976,2,c	;volatile
 33839                           
 33840                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33841  005BD2  9288               	bcf	3976,1,c	;volatile
 33842                           
 33843                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33844  005BD4  9886               	bcf	3974,4,c	;volatile
 33845  005BD6  9A86               	bcf	3974,5,c	;volatile
 33846  005BD8  9C86               	bcf	3974,6,c	;volatile
 33847  005BDA  9E86               	bcf	3974,7,c	;volatile
 33848                           
 33849                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33850  005BDC  9086               	bcf	3974,0,c	;volatile
 33851  005BDE  9286               	bcf	3974,1,c	;volatile
 33852  005BE0  9486               	bcf	3974,2,c	;volatile
 33853  005BE2  9686               	bcf	3974,3,c	;volatile
 33854                           
 33855                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33856  005BE4  5002               	movf	spi_tx_tx@command+1,w,c
 33857  005BE6  6E6A               	movwf	3946,c	;volatile
 33858                           
 33859                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33860  005BE8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33861                           
 33862                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33863  005BEC  0EFF               	movlw	255
 33864  005BEE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33865  005BF0  0EFF               	movlw	255
 33866  005BF2  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33867  005BF4  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33868  005BF8  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33869  005BFC  5009               	movf	??_spi_tx_tx,w,c
 33870  005BFE  260B               	addwf	??_spi_tx_tx+2,f,c
 33871  005C00  500A               	movf	??_spi_tx_tx+1,w,c
 33872  005C02  220C               	addwfc	??_spi_tx_tx+3,f,c
 33873  005C04  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33874  005C08  6A0C               	clrf	??_spi_tx_tx+3,c
 33875  005C0A  500B               	movf	??_spi_tx_tx+2,w,c
 33876  005C0C  6E66               	movwf	3942,c	;volatile
 33877                           
 33878                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33879  005C0E  0403               	decf	spi_tx_tx@command_length,w,c
 33880  005C10  6E67               	movwf	3943,c	;volatile
 33881                           
 33882                           ;spi.c: 174: LATDbits.LD7 = 0;
 33883  005C12  9E8C               	bcf	3980,7,c	;volatile
 33884                           
 33885                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33886  005C14  8088               	bsf	3976,0,c	;volatile
 33887  005C16  B088               	btfsc	3976,0,c	;volatile
 33888  005C18  D7FE               	goto	l2856
 33889                           
 33890                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33891  005C1A  5006               	movf	spi_tx_tx@data+1,w,c
 33892  005C1C  6E6A               	movwf	3946,c	;volatile
 33893                           
 33894                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33895  005C1E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33896                           
 33897                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33898  005C22  0EFF               	movlw	255
 33899  005C24  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33900  005C26  0EFF               	movlw	255
 33901  005C28  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33902  005C2A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33903  005C2E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33904  005C32  5009               	movf	??_spi_tx_tx,w,c
 33905  005C34  260B               	addwf	??_spi_tx_tx+2,f,c
 33906  005C36  500A               	movf	??_spi_tx_tx+1,w,c
 33907  005C38  220C               	addwfc	??_spi_tx_tx+3,f,c
 33908  005C3A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33909  005C3E  6A0C               	clrf	??_spi_tx_tx+3,c
 33910  005C40  500B               	movf	??_spi_tx_tx+2,w,c
 33911  005C42  6E66               	movwf	3942,c	;volatile
 33912                           
 33913                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33914  005C44  0407               	decf	spi_tx_tx@data_length,w,c
 33915  005C46  6E67               	movwf	3943,c	;volatile
 33916                           
 33917                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33918  005C48  8088               	bsf	3976,0,c	;volatile
 33919  005C4A  B088               	btfsc	3976,0,c	;volatile
 33920  005C4C  D7FE               	goto	l2859
 33921                           
 33922                           ;spi.c: 193: LATDbits.LD7 = 1;
 33923  005C4E  8E8C               	bsf	3980,7,c	;volatile
 33924  005C50  0012               	return		;funcret
 33925  005C52                     __end_of_spi_tx_tx:
 33926                           	opt stack 0
 33927                           tosu	equ	0xFFF
 33928                           tosh	equ	0xFFE
 33929                           tosl	equ	0xFFD
 33930                           pclath	equ	0xFFA
 33931                           tblptru	equ	0xFF8
 33932                           tblptrh	equ	0xFF7
 33933                           tblptrl	equ	0xFF6
 33934                           tablat	equ	0xFF5
 33935                           prodh	equ	0xFF4
 33936                           prodl	equ	0xFF3
 33937                           intcon	equ	0xFF2
 33938                           intcon3	equ	0xFF0
 33939                           indf0	equ	0xFEF
 33940                           postinc0	equ	0xFEE
 33941                           fsr0h	equ	0xFEA
 33942                           fsr0l	equ	0xFE9
 33943                           wreg	equ	0xFE8
 33944                           indf1	equ	0xFE7
 33945                           postdec1	equ	0xFE5
 33946                           plusw1	equ	0xFE3
 33947                           fsr1h	equ	0xFE2
 33948                           fsr1l	equ	0xFE1
 33949                           indf2	equ	0xFDF
 33950                           postinc2	equ	0xFDE
 33951                           postdec2	equ	0xFDD
 33952                           plusw2	equ	0xFDB
 33953                           fsr2h	equ	0xFDA
 33954                           fsr2l	equ	0xFD9
 33955                           status	equ	0xFD8
 33956                           
 33957 ;; *************** function __flash_write_page_from_buffer *****************
 33958 ;; Defined at:
 33959 ;;		line 258 in file "flash.c"
 33960 ;; Parameters:    Size  Location     Type
 33961 ;;  page            2   19[COMRAM] unsigned int 
 33962 ;;  buffer          1   21[COMRAM] enum E6895
 33963 ;; Auto vars:     Size  Location     Type
 33964 ;;  command         4   25[COMRAM] unsigned char [4]
 33965 ;; Return value:  Size  Location     Type
 33966 ;;                  1    wreg      void 
 33967 ;; Registers used:
 33968 ;;		wreg, status,2, status,0, cstack
 33969 ;; Tracked objects:
 33970 ;;		On entry : 0/0
 33971 ;;		On exit  : 0/0
 33972 ;;		Unchanged: 0/0
 33973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33974 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33975 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33976 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33977 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33978 ;;Total ram usage:       10 bytes
 33979 ;; Hardware stack levels used:    1
 33980 ;; Hardware stack levels required when called:    3
 33981 ;; This function calls:
 33982 ;;		__flash_is_busy
 33983 ;;		_spi_tx
 33984 ;; This function is called by:
 33985 ;;		_flash_sector_write
 33986 ;;		_flash_partial_write
 33987 ;;		_flash_write_page_from_buffer
 33988 ;; This function uses a non-reentrant model
 33989 ;;
 33990                           
 33991                           	psect	text176
 33992  0065B0                     __ptext176:
 33993                           	opt stack 0
 33994  0065B0                     __flash_write_page_from_buffer:
 33995                           	opt stack 23
 33996                           
 33997                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33998                           
 33999                           ;incstack = 0
 34000  0065B0  ECD3  F038         	call	__flash_is_busy	;wreg free
 34001  0065B4  0900               	iorlw	0
 34002  0065B6  A4D8               	btfss	status,2,c
 34003  0065B8  D7FB               	goto	__flash_write_page_from_buffer
 34004                           
 34005                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34006  0065BA  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 34007  0065BC  A4D8               	btfss	status,2,c
 34008  0065BE  D002               	goto	l1839
 34009                           
 34010                           ;flash.c: 267: command[0] = 0x83;
 34011  0065C0  0E83               	movlw	131
 34012  0065C2  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 34013  0065C4                     l1839:
 34014                           
 34015                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34016  0065C4  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 34017  0065C6  A4D8               	btfss	status,2,c
 34018  0065C8  D002               	goto	l1840
 34019                           
 34020                           ;flash.c: 269: command[0] = 0x86;
 34021  0065CA  0E86               	movlw	134
 34022  0065CC  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 34023  0065CE                     l1840:
 34024                           
 34025                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34026  0065CE  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34027  0065D2  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34028  0065D6  0E07               	movlw	7
 34029  0065D8  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 34030  0065DA                     u7345:
 34031  0065DA  90D8               	bcf	status,0,c
 34032  0065DC  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 34033  0065DE  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 34034  0065E0  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 34035  0065E2  D7FB               	goto	u7345
 34036  0065E4  5017               	movf	??__flash_write_page_from_buffer,w,c
 34037  0065E6  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 34038                           
 34039                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34040  0065E8  5014               	movf	__flash_write_page_from_buffer@page,w,c
 34041  0065EA  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 34042  0065EC  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 34043                           
 34044                           ;flash.c: 273: command[3] = 0x00;
 34045  0065EE  0E00               	movlw	0
 34046  0065F0  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 34047                           
 34048                           ;flash.c: 276: spi_tx(command, 4);
 34049  0065F2  0E1A               	movlw	low __flash_write_page_from_buffer@command
 34050  0065F4  6E01               	movwf	spi_tx@data,c
 34051  0065F6  0E00               	movlw	high __flash_write_page_from_buffer@command
 34052  0065F8  6E02               	movwf	spi_tx@data+1,c
 34053  0065FA  0E00               	movlw	0
 34054  0065FC  6E04               	movwf	spi_tx@length+1,c
 34055  0065FE  0E04               	movlw	4
 34056  006600  6E03               	movwf	spi_tx@length,c
 34057  006602  EC04  F033         	call	_spi_tx	;wreg free
 34058  006606  0012               	return		;funcret
 34059  006608                     __end_of__flash_write_page_from_buffer:
 34060                           	opt stack 0
 34061                           tosu	equ	0xFFF
 34062                           tosh	equ	0xFFE
 34063                           tosl	equ	0xFFD
 34064                           pclath	equ	0xFFA
 34065                           tblptru	equ	0xFF8
 34066                           tblptrh	equ	0xFF7
 34067                           tblptrl	equ	0xFF6
 34068                           tablat	equ	0xFF5
 34069                           prodh	equ	0xFF4
 34070                           prodl	equ	0xFF3
 34071                           intcon	equ	0xFF2
 34072                           intcon3	equ	0xFF0
 34073                           indf0	equ	0xFEF
 34074                           postinc0	equ	0xFEE
 34075                           fsr0h	equ	0xFEA
 34076                           fsr0l	equ	0xFE9
 34077                           wreg	equ	0xFE8
 34078                           indf1	equ	0xFE7
 34079                           postdec1	equ	0xFE5
 34080                           plusw1	equ	0xFE3
 34081                           fsr1h	equ	0xFE2
 34082                           fsr1l	equ	0xFE1
 34083                           indf2	equ	0xFDF
 34084                           postinc2	equ	0xFDE
 34085                           postdec2	equ	0xFDD
 34086                           plusw2	equ	0xFDB
 34087                           fsr2h	equ	0xFDA
 34088                           fsr2l	equ	0xFD9
 34089                           status	equ	0xFD8
 34090                           
 34091 ;; *************** function __flash_compare_page_to_buffer *****************
 34092 ;; Defined at:
 34093 ;;		line 176 in file "flash.c"
 34094 ;; Parameters:    Size  Location     Type
 34095 ;;  page            2   19[COMRAM] unsigned int 
 34096 ;;  buffer          1   21[COMRAM] enum E6895
 34097 ;; Auto vars:     Size  Location     Type
 34098 ;;  command         4   27[COMRAM] unsigned char [4]
 34099 ;;  status          2   25[COMRAM] unsigned int 
 34100 ;; Return value:  Size  Location     Type
 34101 ;;                  1    wreg      enum E6899
 34102 ;; Registers used:
 34103 ;;		wreg, status,2, status,0, cstack
 34104 ;; Tracked objects:
 34105 ;;		On entry : 0/0
 34106 ;;		On exit  : 0/0
 34107 ;;		Unchanged: 0/0
 34108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34110 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34112 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34113 ;;Total ram usage:       12 bytes
 34114 ;; Hardware stack levels used:    1
 34115 ;; Hardware stack levels required when called:    3
 34116 ;; This function calls:
 34117 ;;		__flash_get_status
 34118 ;;		__flash_is_busy
 34119 ;;		_spi_tx
 34120 ;; This function is called by:
 34121 ;;		_flash_sector_write
 34122 ;;		_flash_partial_write
 34123 ;; This function uses a non-reentrant model
 34124 ;;
 34125                           
 34126                           	psect	text177
 34127  005ED0                     __ptext177:
 34128                           	opt stack 0
 34129  005ED0                     __flash_compare_page_to_buffer:
 34130                           	opt stack 23
 34131                           
 34132                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34133                           
 34134                           ;incstack = 0
 34135  005ED0  ECD3  F038         	call	__flash_is_busy	;wreg free
 34136  005ED4  0900               	iorlw	0
 34137  005ED6  A4D8               	btfss	status,2,c
 34138  005ED8  D7FB               	goto	__flash_compare_page_to_buffer
 34139                           
 34140                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34141  005EDA  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 34142  005EDC  A4D8               	btfss	status,2,c
 34143  005EDE  D002               	goto	l1812
 34144                           
 34145                           ;flash.c: 186: command[0] = 0x60;
 34146  005EE0  0E60               	movlw	96
 34147  005EE2  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 34148  005EE4                     l1812:
 34149                           
 34150                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34151  005EE4  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 34152  005EE6  A4D8               	btfss	status,2,c
 34153  005EE8  D002               	goto	l1813
 34154                           
 34155                           ;flash.c: 188: command[0] = 0x60;
 34156  005EEA  0E60               	movlw	96
 34157  005EEC  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 34158  005EEE                     l1813:
 34159                           
 34160                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34161  005EEE  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34162  005EF2  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34163  005EF6  0E07               	movlw	7
 34164  005EF8  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 34165  005EFA                     u7255:
 34166  005EFA  90D8               	bcf	status,0,c
 34167  005EFC  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 34168  005EFE  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 34169  005F00  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 34170  005F02  D7FB               	goto	u7255
 34171  005F04  5017               	movf	??__flash_compare_page_to_buffer,w,c
 34172  005F06  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 34173                           
 34174                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34175  005F08  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 34176  005F0A  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 34177  005F0C  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 34178                           
 34179                           ;flash.c: 192: command[3] = 0x00;
 34180  005F0E  0E00               	movlw	0
 34181  005F10  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 34182                           
 34183                           ;flash.c: 195: spi_tx(command, 4);
 34184  005F12  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 34185  005F14  6E01               	movwf	spi_tx@data,c
 34186  005F16  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34187  005F18  6E02               	movwf	spi_tx@data+1,c
 34188  005F1A  0E00               	movlw	0
 34189  005F1C  6E04               	movwf	spi_tx@length+1,c
 34190  005F1E  0E04               	movlw	4
 34191  005F20  6E03               	movwf	spi_tx@length,c
 34192  005F22  EC04  F033         	call	_spi_tx	;wreg free
 34193  005F26  ECD3  F038         	call	__flash_is_busy	;wreg free
 34194  005F2A  0900               	iorlw	0
 34195  005F2C  A4D8               	btfss	status,2,c
 34196  005F2E  D7FB               	goto	l1815
 34197                           
 34198                           ;flash.c: 201: status = _flash_get_status();
 34199  005F30  EC77  F037         	call	__flash_get_status	;wreg free
 34200  005F34  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34201  005F38  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34202                           
 34203                           ;flash.c: 204: if(status & 0b0000000001000000)
 34204  005F3C  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 34205  005F3E  D002               	goto	l1817
 34206                           
 34207                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34208  005F40  0E01               	movlw	1
 34209                           
 34210                           ;flash.c: 208: }
 34211  005F42  0012               	return	
 34212  005F44                     l1817:
 34213                           
 34214                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 34215  005F44  0E00               	movlw	0
 34216  005F46  0012               	return	
 34217  005F48                     __end_of__flash_compare_page_to_buffer:
 34218                           	opt stack 0
 34219                           tosu	equ	0xFFF
 34220                           tosh	equ	0xFFE
 34221                           tosl	equ	0xFFD
 34222                           pclath	equ	0xFFA
 34223                           tblptru	equ	0xFF8
 34224                           tblptrh	equ	0xFF7
 34225                           tblptrl	equ	0xFF6
 34226                           tablat	equ	0xFF5
 34227                           prodh	equ	0xFF4
 34228                           prodl	equ	0xFF3
 34229                           intcon	equ	0xFF2
 34230                           intcon3	equ	0xFF0
 34231                           indf0	equ	0xFEF
 34232                           postinc0	equ	0xFEE
 34233                           fsr0h	equ	0xFEA
 34234                           fsr0l	equ	0xFE9
 34235                           wreg	equ	0xFE8
 34236                           indf1	equ	0xFE7
 34237                           postdec1	equ	0xFE5
 34238                           plusw1	equ	0xFE3
 34239                           fsr1h	equ	0xFE2
 34240                           fsr1l	equ	0xFE1
 34241                           indf2	equ	0xFDF
 34242                           postinc2	equ	0xFDE
 34243                           postdec2	equ	0xFDD
 34244                           plusw2	equ	0xFDB
 34245                           fsr2h	equ	0xFDA
 34246                           fsr2l	equ	0xFD9
 34247                           status	equ	0xFD8
 34248                           
 34249 ;; *************** function __flash_is_busy *****************
 34250 ;; Defined at:
 34251 ;;		line 281 in file "flash.c"
 34252 ;; Parameters:    Size  Location     Type
 34253 ;;		None
 34254 ;; Auto vars:     Size  Location     Type
 34255 ;;  status          2   17[COMRAM] unsigned int 
 34256 ;; Return value:  Size  Location     Type
 34257 ;;                  1    wreg      unsigned char 
 34258 ;; Registers used:
 34259 ;;		wreg, status,2, status,0, cstack
 34260 ;; Tracked objects:
 34261 ;;		On entry : 0/0
 34262 ;;		On exit  : 0/0
 34263 ;;		Unchanged: 0/0
 34264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34269 ;;Total ram usage:        2 bytes
 34270 ;; Hardware stack levels used:    1
 34271 ;; Hardware stack levels required when called:    2
 34272 ;; This function calls:
 34273 ;;		__flash_get_status
 34274 ;;		__flash_wakeup
 34275 ;; This function is called by:
 34276 ;;		__flash_set_page_size
 34277 ;;		__flash_compare_page_to_buffer
 34278 ;;		__flash_write_to_buffer
 34279 ;;		__flash_write_page_from_buffer
 34280 ;;		__flash_partial_read
 34281 ;;		_flash_is_busy
 34282 ;;		__flash_copy_page_to_buffer
 34283 ;;		__flash_erase_page
 34284 ;;		__flash_buffer_read
 34285 ;;		_flash_set_power_state
 34286 ;;		_flash_partial_write
 34287 ;; This function uses a non-reentrant model
 34288 ;;
 34289                           
 34290                           	psect	text178
 34291  0071A6                     __ptext178:
 34292                           	opt stack 0
 34293  0071A6                     __flash_is_busy:
 34294                           	opt stack 25
 34295                           
 34296                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 34297                           
 34298                           ;incstack = 0
 34299  0071A6  0100               	movlb	0	; () banked
 34300  0071A8  5194               	movf	_power_state& (0+255),w,b
 34301  0071AA  A4D8               	btfss	status,2,c
 34302                           
 34303                           ; BSR set to: 0
 34304                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 34305  0071AC  ECB1  F033         	call	__flash_wakeup	;wreg free
 34306                           
 34307                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 34308  0071B0  EC77  F037         	call	__flash_get_status	;wreg free
 34309  0071B4  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 34310  0071B8  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 34311                           
 34312                           ;flash.c: 295: if(status & 0b0000000010000000)
 34313  0071BC  AE12               	btfss	__flash_is_busy@status,7,c
 34314  0071BE  D002               	goto	l1845
 34315                           
 34316                           ;flash.c: 296: {;flash.c: 298: return 0;
 34317  0071C0  0E00               	movlw	0
 34318                           
 34319                           ;flash.c: 299: }
 34320  0071C2  0012               	return	
 34321  0071C4                     l1845:
 34322                           
 34323                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 34324  0071C4  0E01               	movlw	1
 34325  0071C6  0012               	return	
 34326  0071C8                     __end_of__flash_is_busy:
 34327                           	opt stack 0
 34328                           tosu	equ	0xFFF
 34329                           tosh	equ	0xFFE
 34330                           tosl	equ	0xFFD
 34331                           pclath	equ	0xFFA
 34332                           tblptru	equ	0xFF8
 34333                           tblptrh	equ	0xFF7
 34334                           tblptrl	equ	0xFF6
 34335                           tablat	equ	0xFF5
 34336                           prodh	equ	0xFF4
 34337                           prodl	equ	0xFF3
 34338                           intcon	equ	0xFF2
 34339                           intcon3	equ	0xFF0
 34340                           indf0	equ	0xFEF
 34341                           postinc0	equ	0xFEE
 34342                           fsr0h	equ	0xFEA
 34343                           fsr0l	equ	0xFE9
 34344                           wreg	equ	0xFE8
 34345                           indf1	equ	0xFE7
 34346                           postdec1	equ	0xFE5
 34347                           plusw1	equ	0xFE3
 34348                           fsr1h	equ	0xFE2
 34349                           fsr1l	equ	0xFE1
 34350                           indf2	equ	0xFDF
 34351                           postinc2	equ	0xFDE
 34352                           postdec2	equ	0xFDD
 34353                           plusw2	equ	0xFDB
 34354                           fsr2h	equ	0xFDA
 34355                           fsr2l	equ	0xFD9
 34356                           status	equ	0xFD8
 34357                           
 34358 ;; *************** function __flash_wakeup *****************
 34359 ;; Defined at:
 34360 ;;		line 128 in file "flash.c"
 34361 ;; Parameters:    Size  Location     Type
 34362 ;;		None
 34363 ;; Auto vars:     Size  Location     Type
 34364 ;;  command         1    8[COMRAM] unsigned char 
 34365 ;; Return value:  Size  Location     Type
 34366 ;;                  1    wreg      void 
 34367 ;; Registers used:
 34368 ;;		wreg, status,2, status,0, cstack
 34369 ;; Tracked objects:
 34370 ;;		On entry : 0/0
 34371 ;;		On exit  : 0/0
 34372 ;;		Unchanged: 0/0
 34373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34378 ;;Total ram usage:        1 bytes
 34379 ;; Hardware stack levels used:    1
 34380 ;; Hardware stack levels required when called:    1
 34381 ;; This function calls:
 34382 ;;		_spi_tx
 34383 ;; This function is called by:
 34384 ;;		__flash_is_busy
 34385 ;;		_flash_set_power_state
 34386 ;; This function uses a non-reentrant model
 34387 ;;
 34388                           
 34389                           	psect	text179
 34390  006762                     __ptext179:
 34391                           	opt stack 0
 34392  006762                     __flash_wakeup:
 34393                           	opt stack 25
 34394                           
 34395                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 34396                           
 34397                           ;incstack = 0
 34398  006762  D021               	goto	l1794
 34399  006764                     
 34400                           ;flash.c: 135: command = 0xAB;
 34401  006764  0EAB               	movlw	171
 34402  006766  6E09               	movwf	__flash_wakeup@command,c
 34403                           
 34404                           ;flash.c: 136: spi_tx(&command, 1);
 34405  006768  0E09               	movlw	low __flash_wakeup@command
 34406  00676A  6E01               	movwf	spi_tx@data,c
 34407  00676C  0E00               	movlw	high __flash_wakeup@command
 34408  00676E  6E02               	movwf	spi_tx@data+1,c
 34409  006770  0E00               	movlw	0
 34410  006772  6E04               	movwf	spi_tx@length+1,c
 34411  006774  0E01               	movlw	1
 34412  006776  6E03               	movwf	spi_tx@length,c
 34413  006778  EC04  F033         	call	_spi_tx	;wreg free
 34414                           
 34415                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 34416  00677C  0E17               	movlw	23
 34417  00677E                     u13877:
 34418  00677E  2EE8               	decfsz	wreg,f,c
 34419  006780  D7FE               	bra	u13877
 34420  006782  F000               	nop	
 34421                           
 34422                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 34423  006784  0E00               	movlw	0
 34424  006786  0100               	movlb	0	; () banked
 34425  006788  6F94               	movwf	_power_state& (0+255),b
 34426                           
 34427                           ;flash.c: 139: break;
 34428  00678A  0012               	return	
 34429  00678C                     l1797:
 34430                           
 34431                           ; BSR set to: 0
 34432                           ;flash.c: 144: LATDbits.LD7 = 0;
 34433  00678C  9E8C               	bcf	3980,7,c	;volatile
 34434                           
 34435                           ; BSR set to: 0
 34436                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 34437  00678E  0E0D               	movlw	13
 34438  006790                     u13887:
 34439  006790  2EE8               	decfsz	wreg,f,c
 34440  006792  D7FE               	bra	u13887
 34441  006794  F000               	nop	
 34442                           
 34443                           ;flash.c: 146: LATDbits.LD7 = 1;
 34444  006796  8E8C               	bsf	3980,7,c	;volatile
 34445                           
 34446                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 34447  006798  0E50               	movlw	80
 34448  00679A                     u13897:
 34449  00679A  2EE8               	decfsz	wreg,f,c
 34450  00679C  D7FE               	bra	u13897
 34451                           
 34452                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 34453  00679E  0E00               	movlw	0
 34454  0067A0  0100               	movlb	0	; () banked
 34455  0067A2  6F94               	movwf	_power_state& (0+255),b
 34456                           
 34457                           ; BSR set to: 0
 34458                           ;flash.c: 150: }
 34459                           
 34460                           ;flash.c: 149: break;
 34461  0067A4  0012               	return	
 34462  0067A6                     l1794:
 34463                           
 34464                           ; BSR set to: 0
 34465  0067A6  0100               	movlb	0	; () banked
 34466  0067A8  5194               	movf	_power_state& (0+255),w,b
 34467                           
 34468                           ; Switch size 1, requested type "space"
 34469                           ; Number of cases is 2, Range of values is 1 to 2
 34470                           ; switch strategies available:
 34471                           ; Name         Instructions Cycles
 34472                           ; simple_byte            7     4 (average)
 34473                           ;	Chosen strategy is simple_byte
 34474  0067AA  0A01               	xorlw	1	; case 1
 34475  0067AC  B4D8               	btfsc	status,2,c
 34476  0067AE  D7DA               	goto	l1795
 34477  0067B0  0A03               	xorlw	3	; case 2
 34478  0067B2  A4D8               	btfss	status,2,c
 34479  0067B4  0012               	return	
 34480  0067B6  D7EA               	goto	l1797
 34481  0067B8                     __end_of__flash_wakeup:
 34482                           	opt stack 0
 34483                           tosu	equ	0xFFF
 34484                           tosh	equ	0xFFE
 34485                           tosl	equ	0xFFD
 34486                           pclath	equ	0xFFA
 34487                           tblptru	equ	0xFF8
 34488                           tblptrh	equ	0xFF7
 34489                           tblptrl	equ	0xFF6
 34490                           tablat	equ	0xFF5
 34491                           prodh	equ	0xFF4
 34492                           prodl	equ	0xFF3
 34493                           intcon	equ	0xFF2
 34494                           intcon3	equ	0xFF0
 34495                           indf0	equ	0xFEF
 34496                           postinc0	equ	0xFEE
 34497                           fsr0h	equ	0xFEA
 34498                           fsr0l	equ	0xFE9
 34499                           wreg	equ	0xFE8
 34500                           indf1	equ	0xFE7
 34501                           postdec1	equ	0xFE5
 34502                           plusw1	equ	0xFE3
 34503                           fsr1h	equ	0xFE2
 34504                           fsr1l	equ	0xFE1
 34505                           indf2	equ	0xFDF
 34506                           postinc2	equ	0xFDE
 34507                           postdec2	equ	0xFDD
 34508                           plusw2	equ	0xFDB
 34509                           fsr2h	equ	0xFDA
 34510                           fsr2l	equ	0xFD9
 34511                           status	equ	0xFD8
 34512                           
 34513 ;; *************** function _spi_tx *****************
 34514 ;; Defined at:
 34515 ;;		line 108 in file "spi.c"
 34516 ;; Parameters:    Size  Location     Type
 34517 ;;  data            2    0[COMRAM] PTR unsigned char 
 34518 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 34519 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 34520 ;;  length          2    2[COMRAM] unsigned int 
 34521 ;; Auto vars:     Size  Location     Type
 34522 ;;		None
 34523 ;; Return value:  Size  Location     Type
 34524 ;;                  1    wreg      void 
 34525 ;; Registers used:
 34526 ;;		wreg, status,2, status,0
 34527 ;; Tracked objects:
 34528 ;;		On entry : 0/0
 34529 ;;		On exit  : 0/0
 34530 ;;		Unchanged: 0/0
 34531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34535 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34536 ;;Total ram usage:        8 bytes
 34537 ;; Hardware stack levels used:    1
 34538 ;; This function calls:
 34539 ;;		Nothing
 34540 ;; This function is called by:
 34541 ;;		__flash_set_page_size
 34542 ;;		__flash_wakeup
 34543 ;;		__flash_compare_page_to_buffer
 34544 ;;		__flash_write_page_from_buffer
 34545 ;;		__flash_copy_page_to_buffer
 34546 ;;		__flash_erase_page
 34547 ;;		_flash_set_power_state
 34548 ;; This function uses a non-reentrant model
 34549 ;;
 34550                           
 34551                           	psect	text180
 34552  006608                     __ptext180:
 34553                           	opt stack 0
 34554  006608                     _spi_tx:
 34555                           	opt stack 27
 34556                           
 34557                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 34558                           
 34559                           ; BSR set to: 0
 34560                           ;incstack = 0
 34561  006608  9E88               	bcf	3976,7,c	;volatile
 34562                           
 34563                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 34564  00660A  9C88               	bcf	3976,6,c	;volatile
 34565                           
 34566                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 34567  00660C  8A88               	bsf	3976,5,c	;volatile
 34568                           
 34569                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 34570  00660E  9888               	bcf	3976,4,c	;volatile
 34571                           
 34572                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 34573  006610  9688               	bcf	3976,3,c	;volatile
 34574                           
 34575                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 34576  006612  8488               	bsf	3976,2,c	;volatile
 34577                           
 34578                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 34579  006614  9288               	bcf	3976,1,c	;volatile
 34580                           
 34581                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 34582  006616  9886               	bcf	3974,4,c	;volatile
 34583  006618  9A86               	bcf	3974,5,c	;volatile
 34584  00661A  9C86               	bcf	3974,6,c	;volatile
 34585  00661C  9E86               	bcf	3974,7,c	;volatile
 34586                           
 34587                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 34588  00661E  9086               	bcf	3974,0,c	;volatile
 34589  006620  9286               	bcf	3974,1,c	;volatile
 34590  006622  9486               	bcf	3974,2,c	;volatile
 34591  006624  9686               	bcf	3974,3,c	;volatile
 34592                           
 34593                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34594  006626  5002               	movf	spi_tx@data+1,w,c
 34595  006628  6E6A               	movwf	3946,c	;volatile
 34596                           
 34597                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34598  00662A  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 34599                           
 34600                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 34601  00662E  0EFF               	movlw	255
 34602  006630  6E05               	movwf	??_spi_tx& (0+255),c
 34603  006632  0EFF               	movlw	255
 34604  006634  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 34605  006636  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 34606  00663A  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 34607  00663E  5005               	movf	??_spi_tx,w,c
 34608  006640  2607               	addwf	??_spi_tx+2,f,c
 34609  006642  5006               	movf	??_spi_tx+1,w,c
 34610  006644  2208               	addwfc	??_spi_tx+3,f,c
 34611  006646  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 34612  00664A  6A08               	clrf	??_spi_tx+3,c
 34613  00664C  5007               	movf	??_spi_tx+2,w,c
 34614  00664E  6E66               	movwf	3942,c	;volatile
 34615                           
 34616                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 34617  006650  0403               	decf	spi_tx@length,w,c
 34618  006652  6E67               	movwf	3943,c	;volatile
 34619                           
 34620                           ;spi.c: 136: LATDbits.LD7 = 0;
 34621  006654  9E8C               	bcf	3980,7,c	;volatile
 34622                           
 34623                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 34624  006656  8088               	bsf	3976,0,c	;volatile
 34625  006658  B088               	btfsc	3976,0,c	;volatile
 34626  00665A  D7FE               	goto	l2850
 34627                           
 34628                           ;spi.c: 139: LATDbits.LD7 = 1;
 34629  00665C  8E8C               	bsf	3980,7,c	;volatile
 34630  00665E  0012               	return		;funcret
 34631  006660                     __end_of_spi_tx:
 34632                           	opt stack 0
 34633                           tosu	equ	0xFFF
 34634                           tosh	equ	0xFFE
 34635                           tosl	equ	0xFFD
 34636                           pclath	equ	0xFFA
 34637                           tblptru	equ	0xFF8
 34638                           tblptrh	equ	0xFF7
 34639                           tblptrl	equ	0xFF6
 34640                           tablat	equ	0xFF5
 34641                           prodh	equ	0xFF4
 34642                           prodl	equ	0xFF3
 34643                           intcon	equ	0xFF2
 34644                           intcon3	equ	0xFF0
 34645                           indf0	equ	0xFEF
 34646                           postinc0	equ	0xFEE
 34647                           fsr0h	equ	0xFEA
 34648                           fsr0l	equ	0xFE9
 34649                           wreg	equ	0xFE8
 34650                           indf1	equ	0xFE7
 34651                           postdec1	equ	0xFE5
 34652                           plusw1	equ	0xFE3
 34653                           fsr1h	equ	0xFE2
 34654                           fsr1l	equ	0xFE1
 34655                           indf2	equ	0xFDF
 34656                           postinc2	equ	0xFDE
 34657                           postdec2	equ	0xFDD
 34658                           plusw2	equ	0xFDB
 34659                           fsr2h	equ	0xFDA
 34660                           fsr2l	equ	0xFD9
 34661                           status	equ	0xFD8
 34662                           
 34663 ;; *************** function __flash_get_status *****************
 34664 ;; Defined at:
 34665 ;;		line 117 in file "flash.c"
 34666 ;; Parameters:    Size  Location     Type
 34667 ;;		None
 34668 ;; Auto vars:     Size  Location     Type
 34669 ;;  status          2   15[COMRAM] unsigned int 
 34670 ;;  command         1   14[COMRAM] unsigned char 
 34671 ;; Return value:  Size  Location     Type
 34672 ;;                  2   12[COMRAM] unsigned int 
 34673 ;; Registers used:
 34674 ;;		wreg, status,2, status,0, cstack
 34675 ;; Tracked objects:
 34676 ;;		On entry : 0/0
 34677 ;;		On exit  : 0/0
 34678 ;;		Unchanged: 0/0
 34679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34681 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34683 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34684 ;;Total ram usage:        5 bytes
 34685 ;; Hardware stack levels used:    1
 34686 ;; Hardware stack levels required when called:    1
 34687 ;; This function calls:
 34688 ;;		_spi_tx_rx
 34689 ;; This function is called by:
 34690 ;;		__flash_compare_page_to_buffer
 34691 ;;		__flash_is_busy
 34692 ;; This function uses a non-reentrant model
 34693 ;;
 34694                           
 34695                           	psect	text181
 34696  006EEE                     __ptext181:
 34697                           	opt stack 0
 34698  006EEE                     __flash_get_status:
 34699                           	opt stack 25
 34700                           
 34701                           ;flash.c: 121: uint8_t command = 0xD7;
 34702                           
 34703                           ;incstack = 0
 34704  006EEE  0ED7               	movlw	215
 34705  006EF0  6E0F               	movwf	__flash_get_status@command,c
 34706                           
 34707                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 34708  006EF2  0E0F               	movlw	low __flash_get_status@command
 34709  006EF4  6E01               	movwf	spi_tx_rx@command,c
 34710  006EF6  0E00               	movlw	high __flash_get_status@command
 34711  006EF8  6E02               	movwf	spi_tx_rx@command+1,c
 34712  006EFA  0E00               	movlw	0
 34713  006EFC  6E04               	movwf	spi_tx_rx@command_length+1,c
 34714  006EFE  0E01               	movlw	1
 34715  006F00  6E03               	movwf	spi_tx_rx@command_length,c
 34716  006F02  0E10               	movlw	low __flash_get_status@status
 34717  006F04  6E05               	movwf	spi_tx_rx@data,c
 34718  006F06  0E00               	movlw	high __flash_get_status@status
 34719  006F08  6E06               	movwf	spi_tx_rx@data+1,c
 34720  006F0A  0E00               	movlw	0
 34721  006F0C  6E08               	movwf	spi_tx_rx@data_length+1,c
 34722  006F0E  0E02               	movlw	2
 34723  006F10  6E07               	movwf	spi_tx_rx@data_length,c
 34724  006F12  ECC1  F02C         	call	_spi_tx_rx	;wreg free
 34725                           
 34726                           ;flash.c: 124: return status;
 34727  006F16  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 34728  006F1A  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 34729  006F1E  0012               	return	
 34730  006F20                     __end_of__flash_get_status:
 34731                           	opt stack 0
 34732                           tosu	equ	0xFFF
 34733                           tosh	equ	0xFFE
 34734                           tosl	equ	0xFFD
 34735                           pclath	equ	0xFFA
 34736                           tblptru	equ	0xFF8
 34737                           tblptrh	equ	0xFF7
 34738                           tblptrl	equ	0xFF6
 34739                           tablat	equ	0xFF5
 34740                           prodh	equ	0xFF4
 34741                           prodl	equ	0xFF3
 34742                           intcon	equ	0xFF2
 34743                           intcon3	equ	0xFF0
 34744                           indf0	equ	0xFEF
 34745                           postinc0	equ	0xFEE
 34746                           fsr0h	equ	0xFEA
 34747                           fsr0l	equ	0xFE9
 34748                           wreg	equ	0xFE8
 34749                           indf1	equ	0xFE7
 34750                           postdec1	equ	0xFE5
 34751                           plusw1	equ	0xFE3
 34752                           fsr1h	equ	0xFE2
 34753                           fsr1l	equ	0xFE1
 34754                           indf2	equ	0xFDF
 34755                           postinc2	equ	0xFDE
 34756                           postdec2	equ	0xFDD
 34757                           plusw2	equ	0xFDB
 34758                           fsr2h	equ	0xFDA
 34759                           fsr2l	equ	0xFD9
 34760                           status	equ	0xFD8
 34761                           
 34762 ;; *************** function _spi_tx_rx *****************
 34763 ;; Defined at:
 34764 ;;		line 199 in file "spi.c"
 34765 ;; Parameters:    Size  Location     Type
 34766 ;;  command         2    0[COMRAM] PTR unsigned char 
 34767 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 34768 ;;  command_leng    2    2[COMRAM] unsigned int 
 34769 ;;  data            2    4[COMRAM] PTR unsigned char 
 34770 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 34771 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 34772 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 34773 ;;		 -> _flash_get_status@status(2), msd_buffer(512), 
 34774 ;;  data_length     2    6[COMRAM] unsigned int 
 34775 ;; Auto vars:     Size  Location     Type
 34776 ;;		None
 34777 ;; Return value:  Size  Location     Type
 34778 ;;                  1    wreg      void 
 34779 ;; Registers used:
 34780 ;;		wreg, status,2, status,0
 34781 ;; Tracked objects:
 34782 ;;		On entry : 0/0
 34783 ;;		On exit  : 0/0
 34784 ;;		Unchanged: 0/0
 34785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34788 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34789 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34790 ;;Total ram usage:       12 bytes
 34791 ;; Hardware stack levels used:    1
 34792 ;; This function calls:
 34793 ;;		Nothing
 34794 ;; This function is called by:
 34795 ;;		__flash_get_status
 34796 ;;		__flash_partial_read
 34797 ;;		__flash_buffer_read
 34798 ;; This function uses a non-reentrant model
 34799 ;;
 34800                           
 34801                           	psect	text182
 34802  005982                     __ptext182:
 34803                           	opt stack 0
 34804  005982                     _spi_tx_rx:
 34805                           	opt stack 25
 34806                           
 34807                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 34808                           
 34809                           ;incstack = 0
 34810  005982  9E88               	bcf	3976,7,c	;volatile
 34811                           
 34812                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 34813  005984  9C88               	bcf	3976,6,c	;volatile
 34814                           
 34815                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 34816  005986  8A88               	bsf	3976,5,c	;volatile
 34817                           
 34818                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 34819  005988  9888               	bcf	3976,4,c	;volatile
 34820                           
 34821                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 34822  00598A  9688               	bcf	3976,3,c	;volatile
 34823                           
 34824                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 34825  00598C  8488               	bsf	3976,2,c	;volatile
 34826                           
 34827                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 34828  00598E  9288               	bcf	3976,1,c	;volatile
 34829                           
 34830                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 34831  005990  9886               	bcf	3974,4,c	;volatile
 34832  005992  9A86               	bcf	3974,5,c	;volatile
 34833  005994  9C86               	bcf	3974,6,c	;volatile
 34834  005996  9E86               	bcf	3974,7,c	;volatile
 34835                           
 34836                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 34837  005998  9086               	bcf	3974,0,c	;volatile
 34838  00599A  9286               	bcf	3974,1,c	;volatile
 34839  00599C  9486               	bcf	3974,2,c	;volatile
 34840  00599E  9686               	bcf	3974,3,c	;volatile
 34841                           
 34842                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34843  0059A0  5002               	movf	spi_tx_rx@command+1,w,c
 34844  0059A2  6E6A               	movwf	3946,c	;volatile
 34845                           
 34846                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34847  0059A4  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 34848                           
 34849                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34850  0059A8  0EFF               	movlw	255
 34851  0059AA  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34852  0059AC  0EFF               	movlw	255
 34853  0059AE  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34854  0059B0  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 34855  0059B4  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 34856  0059B8  5009               	movf	??_spi_tx_rx,w,c
 34857  0059BA  260B               	addwf	??_spi_tx_rx+2,f,c
 34858  0059BC  500A               	movf	??_spi_tx_rx+1,w,c
 34859  0059BE  220C               	addwfc	??_spi_tx_rx+3,f,c
 34860  0059C0  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34861  0059C4  6A0C               	clrf	??_spi_tx_rx+3,c
 34862  0059C6  500B               	movf	??_spi_tx_rx+2,w,c
 34863  0059C8  6E66               	movwf	3942,c	;volatile
 34864                           
 34865                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34866  0059CA  0403               	decf	spi_tx_rx@command_length,w,c
 34867  0059CC  6E67               	movwf	3943,c	;volatile
 34868                           
 34869                           ;spi.c: 227: LATDbits.LD7 = 0;
 34870  0059CE  9E8C               	bcf	3980,7,c	;volatile
 34871                           
 34872                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 34873  0059D0  8088               	bsf	3976,0,c	;volatile
 34874  0059D2  B088               	btfsc	3976,0,c	;volatile
 34875  0059D4  D7FE               	goto	l2865
 34876                           
 34877                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 34878  0059D6  9A88               	bcf	3976,5,c	;volatile
 34879                           
 34880                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 34881  0059D8  8888               	bsf	3976,4,c	;volatile
 34882                           
 34883                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 34884  0059DA  9688               	bcf	3976,3,c	;volatile
 34885                           
 34886                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 34887  0059DC  9488               	bcf	3976,2,c	;volatile
 34888                           
 34889                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34890  0059DE  5006               	movf	spi_tx_rx@data+1,w,c
 34891  0059E0  6E68               	movwf	3944,c	;volatile
 34892                           
 34893                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34894  0059E2  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 34895                           
 34896                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34897  0059E6  0EFF               	movlw	255
 34898  0059E8  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34899  0059EA  0EFF               	movlw	255
 34900  0059EC  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34901  0059EE  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 34902  0059F2  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 34903  0059F6  5009               	movf	??_spi_tx_rx,w,c
 34904  0059F8  260B               	addwf	??_spi_tx_rx+2,f,c
 34905  0059FA  500A               	movf	??_spi_tx_rx+1,w,c
 34906  0059FC  220C               	addwfc	??_spi_tx_rx+3,f,c
 34907  0059FE  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34908  005A02  6A0C               	clrf	??_spi_tx_rx+3,c
 34909  005A04  500B               	movf	??_spi_tx_rx+2,w,c
 34910  005A06  6E66               	movwf	3942,c	;volatile
 34911                           
 34912                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34913  005A08  0407               	decf	spi_tx_rx@data_length,w,c
 34914  005A0A  6E67               	movwf	3943,c	;volatile
 34915                           
 34916                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 34917  005A0C  8088               	bsf	3976,0,c	;volatile
 34918  005A0E  B088               	btfsc	3976,0,c	;volatile
 34919  005A10  D7FE               	goto	l2868
 34920                           
 34921                           ;spi.c: 254: LATDbits.LD7 = 1;
 34922  005A12  8E8C               	bsf	3980,7,c	;volatile
 34923  005A14  0012               	return		;funcret
 34924  005A16                     __end_of_spi_tx_rx:
 34925                           	opt stack 0
 34926                           tosu	equ	0xFFF
 34927                           tosh	equ	0xFFE
 34928                           tosl	equ	0xFFD
 34929                           pclath	equ	0xFFA
 34930                           tblptru	equ	0xFF8
 34931                           tblptrh	equ	0xFF7
 34932                           tblptrl	equ	0xFF6
 34933                           tablat	equ	0xFF5
 34934                           prodh	equ	0xFF4
 34935                           prodl	equ	0xFF3
 34936                           intcon	equ	0xFF2
 34937                           intcon3	equ	0xFF0
 34938                           indf0	equ	0xFEF
 34939                           postinc0	equ	0xFEE
 34940                           fsr0h	equ	0xFEA
 34941                           fsr0l	equ	0xFE9
 34942                           wreg	equ	0xFE8
 34943                           indf1	equ	0xFE7
 34944                           postdec1	equ	0xFE5
 34945                           plusw1	equ	0xFE3
 34946                           fsr1h	equ	0xFE2
 34947                           fsr1l	equ	0xFE1
 34948                           indf2	equ	0xFDF
 34949                           postinc2	equ	0xFDE
 34950                           postdec2	equ	0xFDD
 34951                           plusw2	equ	0xFDB
 34952                           fsr2h	equ	0xFDA
 34953                           fsr2l	equ	0xFD9
 34954                           status	equ	0xFD8
 34955                           
 34956 ;; *************** function __get_root *****************
 34957 ;; Defined at:
 34958 ;;		line 1210 in file "fat16.c"
 34959 ;; Parameters:    Size  Location     Type
 34960 ;;  idx             2    0[COMRAM] unsigned int 
 34961 ;; Auto vars:     Size  Location     Type
 34962 ;;		None
 34963 ;; Return value:  Size  Location     Type
 34964 ;;                  1    wreg      unsigned char 
 34965 ;; Registers used:
 34966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34967 ;; Tracked objects:
 34968 ;;		On entry : 0/0
 34969 ;;		On exit  : 0/0
 34970 ;;		Unchanged: 0/0
 34971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34976 ;;Total ram usage:        6 bytes
 34977 ;; Hardware stack levels used:    1
 34978 ;; This function calls:
 34979 ;;		Nothing
 34980 ;; This function is called by:
 34981 ;;		_fat_format
 34982 ;; This function uses a non-reentrant model
 34983 ;;
 34984                           
 34985                           	psect	text183
 34986  002982                     __ptext183:
 34987                           	opt stack 0
 34988  002982                     __get_root:
 34989                           	opt stack 27
 34990                           
 34991                           ;fat16.c: 1212: if(idx < 0x20)
 34992                           
 34993                           ;incstack = 0
 34994  002982  5002               	movf	__get_root@idx+1,w,c
 34995  002984  E11D               	bnz	l11687
 34996  002986  0E20               	movlw	32
 34997  002988  5C01               	subwf	__get_root@idx,w,c
 34998  00298A  B0D8               	btfsc	status,0,c
 34999  00298C  D019               	goto	l2271
 35000                           
 35001                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 35002  00298E  5002               	movf	__get_root@idx+1,w,c
 35003  002990  E110               	bnz	l11681
 35004  002992  0E0B               	movlw	11
 35005  002994  5C01               	subwf	__get_root@idx,w,c
 35006  002996  B0D8               	btfsc	status,0,c
 35007  002998  D00C               	goto	l2269
 35008                           
 35009                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
 35010  00299A  0EDC               	movlw	low STR_9
 35011  00299C  2401               	addwf	__get_root@idx,w,c
 35012  00299E  6EF6               	movwf	tblptrl,c
 35013  0029A0  0E8F               	movlw	high STR_9
 35014  0029A2  2002               	addwfc	__get_root@idx+1,w,c
 35015  0029A4  6EF7               	movwf	tblptrh,c
 35016  0029A6                     	if	1	;There are 3 active tblptr bytes
 35017  0029A6  6AF8               	clrf	tblptru,c
 35018  0029A8  0E00               	movlw	low (__mediumconst shr (0+16))
 35019  0029AA  22F8               	addwfc	tblptru,f,c
 35020  0029AC                     	endif
 35021  0029AC  0008               	tblrd		*
 35022  0029AE  50F5               	movf	tablat,w,c
 35023  0029B0  0012               	return	
 35024  0029B2                     l2269:
 35025  0029B2                     l11681:
 35026                           
 35027                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 35028  0029B2  0E0B               	movlw	11
 35029  0029B4  1801               	xorwf	__get_root@idx,w,c
 35030  0029B6  1002               	iorwf	__get_root@idx+1,w,c
 35031  0029B8  A4D8               	btfss	status,2,c
 35032  0029BA  D002               	goto	l2271
 35033                           
 35034                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 35035  0029BC  0E08               	movlw	8
 35036  0029BE  0012               	return	
 35037  0029C0                     l2271:
 35038  0029C0                     l11687:
 35039                           
 35040                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 35041  0029C0  5002               	movf	__get_root@idx+1,w,c
 35042  0029C2  E103               	bnz	u9061
 35043  0029C4  0E40               	movlw	64
 35044  0029C6  5C01               	subwf	__get_root@idx,w,c
 35045  0029C8  B0D8               	btfsc	status,0,c
 35046  0029CA                     u9061:
 35047  0029CA  D0A4               	goto	l2297
 35048                           
 35049                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 35050  0029CC  0E20               	movlw	32
 35051  0029CE  5E01               	subwf	__get_root@idx,f,c
 35052  0029D0  0E00               	movlw	0
 35053  0029D2  5A02               	subwfb	__get_root@idx+1,f,c
 35054                           
 35055                           ;fat16.c: 1226: if(idx < 0+8)
 35056  0029D4  5002               	movf	__get_root@idx+1,w,c
 35057  0029D6  E110               	bnz	l11695
 35058  0029D8  0E08               	movlw	8
 35059  0029DA  5C01               	subwf	__get_root@idx,w,c
 35060  0029DC  B0D8               	btfsc	status,0,c
 35061  0029DE  D00C               	goto	l2273
 35062                           
 35063                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 35064  0029E0  0EE8               	movlw	low STR_10
 35065  0029E2  2401               	addwf	__get_root@idx,w,c
 35066  0029E4  6EF6               	movwf	tblptrl,c
 35067  0029E6  0E8F               	movlw	high STR_10
 35068  0029E8  2002               	addwfc	__get_root@idx+1,w,c
 35069  0029EA  6EF7               	movwf	tblptrh,c
 35070  0029EC                     	if	1	;There are 3 active tblptr bytes
 35071  0029EC  6AF8               	clrf	tblptru,c
 35072  0029EE  0E00               	movlw	low (__mediumconst shr (0+16))
 35073  0029F0  22F8               	addwfc	tblptru,f,c
 35074  0029F2                     	endif
 35075  0029F2  0008               	tblrd		*
 35076  0029F4  50F5               	movf	tablat,w,c
 35077  0029F6  0012               	return	
 35078  0029F8                     l2273:
 35079  0029F8                     l11695:
 35080                           
 35081                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 35082  0029F8  5002               	movf	__get_root@idx+1,w,c
 35083  0029FA  E146               	bnz	l11787
 35084  0029FC  0E0B               	movlw	11
 35085  0029FE  5C01               	subwf	__get_root@idx,w,c
 35086  002A00  B0D8               	btfsc	status,0,c
 35087  002A02  D042               	goto	l2275
 35088                           
 35089                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 35090  002A04  0EF8               	movlw	248
 35091  002A06  6E03               	movwf	??__get_root& (0+255),c
 35092  002A08  0EFF               	movlw	255
 35093  002A0A  6E04               	movwf	(??__get_root+1)& (0+255),c
 35094  002A0C  C001  F005         	movff	__get_root@idx,??__get_root+2
 35095  002A10  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 35096  002A14  5003               	movf	??__get_root,w,c
 35097  002A16  2605               	addwf	??__get_root+2,f,c
 35098  002A18  5004               	movf	??__get_root+1,w,c
 35099  002A1A  2206               	addwfc	??__get_root+3,f,c
 35100  002A1C  0EFA               	movlw	low STR_11
 35101  002A1E  2405               	addwf	??__get_root+2,w,c
 35102  002A20  6EF6               	movwf	tblptrl,c
 35103  002A22  0E8F               	movlw	high STR_11
 35104  002A24  2006               	addwfc	??__get_root+3,w,c
 35105  002A26  6EF7               	movwf	tblptrh,c
 35106  002A28                     	if	1	;There are 3 active tblptr bytes
 35107  002A28  6AF8               	clrf	tblptru,c
 35108  002A2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35109  002A2C  22F8               	addwfc	tblptru,f,c
 35110  002A2E                     	endif
 35111  002A2E  0008               	tblrd		*
 35112  002A30  50F5               	movf	tablat,w,c
 35113  002A32  0012               	return	
 35114  002A34                     
 35115                           ;fat16.c: 1237: return 0x20;
 35116  002A34  0E20               	movlw	32
 35117  002A36  0012               	return	
 35118  002A38                     
 35119                           ;fat16.c: 1239: return 0x06;
 35120  002A38  0E06               	movlw	6
 35121  002A3A  0012               	return	
 35122  002A3C                     
 35123                           ;fat16.c: 1241: return 0x28;
 35124  002A3C  0E28               	movlw	40
 35125  002A3E  0012               	return	
 35126  002A40                     
 35127                           ;fat16.c: 1243: return 0x78;
 35128  002A40  0E78               	movlw	120
 35129  002A42  0012               	return	
 35130  002A44                     
 35131                           ;fat16.c: 1245: return 0xDE;
 35132  002A44  0EDE               	movlw	222
 35133  002A46  0012               	return	
 35134  002A48                     
 35135                           ;fat16.c: 1247: return 0x38;
 35136  002A48  0E38               	movlw	56
 35137  002A4A  0012               	return	
 35138  002A4C                     
 35139                           ;fat16.c: 1249: return 0x5F;
 35140  002A4C  0E5F               	movlw	95
 35141  002A4E  0012               	return	
 35142  002A50                     
 35143                           ;fat16.c: 1251: return 0x4B;
 35144  002A50  0E4B               	movlw	75
 35145  002A52  0012               	return	
 35146  002A54                     
 35147                           ;fat16.c: 1253: return 0x00;
 35148  002A54  0E00               	movlw	0
 35149  002A56  0012               	return	
 35150  002A58                     
 35151                           ;fat16.c: 1255: return 0x00;
 35152  002A58  0E00               	movlw	0
 35153  002A5A  0012               	return	
 35154  002A5C                     
 35155                           ;fat16.c: 1257: return 0x04;
 35156  002A5C  0E04               	movlw	4
 35157  002A5E  0012               	return	
 35158  002A60                     
 35159                           ;fat16.c: 1259: return 0x77;
 35160  002A60  0E77               	movlw	119
 35161  002A62  0012               	return	
 35162  002A64                     
 35163                           ;fat16.c: 1261: return 0xDE;
 35164  002A64  0EDE               	movlw	222
 35165  002A66  0012               	return	
 35166  002A68                     
 35167                           ;fat16.c: 1263: return 0x38;
 35168  002A68  0E38               	movlw	56
 35169  002A6A  0012               	return	
 35170  002A6C                     
 35171                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 35172  002A6C  0E02               	movlw	2
 35173  002A6E  0012               	return	
 35174  002A70                     
 35175                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 35176  002A70  0E00               	movlw	0
 35177  002A72  0012               	return	
 35178  002A74                     
 35179                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 35180  002A74  0E0C               	movlw	12
 35181  002A76  0012               	return	
 35182  002A78                     
 35183                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 35184  002A78  0E00               	movlw	0
 35185  002A7A  0012               	return	
 35186  002A7C                     
 35187                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 35188  002A7C  0E00               	movlw	0
 35189  002A7E  0012               	return	
 35190  002A80                     
 35191                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35192  002A80  0E00               	movlw	0
 35193  002A82  0012               	return	
 35194  002A84                     
 35195                           ;fat16.c: 1277: return 0x00;
 35196  002A84  0E00               	movlw	0
 35197  002A86  0012               	return	
 35198  002A88                     l2275:
 35199  002A88                     l11787:
 35200  002A88  C001  F003         	movff	__get_root@idx,??__get_root
 35201  002A8C  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 35202                           
 35203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35204                           ; Switch size 1, requested type "space"
 35205                           ; Number of cases is 1, Range of values is 0 to 0
 35206                           ; switch strategies available:
 35207                           ; Name         Instructions Cycles
 35208                           ; simple_byte            4     3 (average)
 35209                           ;	Chosen strategy is simple_byte
 35210  002A90  5004               	movf	??__get_root+1,w,c
 35211  002A92  0A00               	xorlw	0	; case 0
 35212  002A94  A4D8               	btfss	status,2,c
 35213  002A96  D7F6               	goto	l2296
 35214                           
 35215                           ; Switch size 1, requested type "space"
 35216                           ; Number of cases is 20, Range of values is 11 to 31
 35217                           ; switch strategies available:
 35218                           ; Name         Instructions Cycles
 35219                           ; simple_byte           61    31 (average)
 35220                           ;	Chosen strategy is simple_byte
 35221  002A98  5003               	movf	??__get_root,w,c
 35222  002A9A  0A0B               	xorlw	11	; case 11
 35223  002A9C  B4D8               	btfsc	status,2,c
 35224  002A9E  D7CA               	goto	l2276
 35225  002AA0  0A06               	xorlw	6	; case 13
 35226  002AA2  B4D8               	btfsc	status,2,c
 35227  002AA4  D7C9               	goto	l2277
 35228  002AA6  0A03               	xorlw	3	; case 14
 35229  002AA8  B4D8               	btfsc	status,2,c
 35230  002AAA  D7C8               	goto	l2278
 35231  002AAC  0A01               	xorlw	1	; case 15
 35232  002AAE  B4D8               	btfsc	status,2,c
 35233  002AB0  D7C7               	goto	l2279
 35234  002AB2  0A1F               	xorlw	31	; case 16
 35235  002AB4  B4D8               	btfsc	status,2,c
 35236  002AB6  D7C6               	goto	l2280
 35237  002AB8  0A01               	xorlw	1	; case 17
 35238  002ABA  B4D8               	btfsc	status,2,c
 35239  002ABC  D7C5               	goto	l2281
 35240  002ABE  0A03               	xorlw	3	; case 18
 35241  002AC0  B4D8               	btfsc	status,2,c
 35242  002AC2  D7C4               	goto	l2282
 35243  002AC4  0A01               	xorlw	1	; case 19
 35244  002AC6  B4D8               	btfsc	status,2,c
 35245  002AC8  D7C3               	goto	l2283
 35246  002ACA  0A07               	xorlw	7	; case 20
 35247  002ACC  B4D8               	btfsc	status,2,c
 35248  002ACE  D7C2               	goto	l2284
 35249  002AD0  0A01               	xorlw	1	; case 21
 35250  002AD2  B4D8               	btfsc	status,2,c
 35251  002AD4  D7C1               	goto	l2285
 35252  002AD6  0A03               	xorlw	3	; case 22
 35253  002AD8  B4D8               	btfsc	status,2,c
 35254  002ADA  D7C0               	goto	l2286
 35255  002ADC  0A01               	xorlw	1	; case 23
 35256  002ADE  B4D8               	btfsc	status,2,c
 35257  002AE0  D7BF               	goto	l2287
 35258  002AE2  0A0F               	xorlw	15	; case 24
 35259  002AE4  B4D8               	btfsc	status,2,c
 35260  002AE6  D7BE               	goto	l2288
 35261  002AE8  0A01               	xorlw	1	; case 25
 35262  002AEA  B4D8               	btfsc	status,2,c
 35263  002AEC  D7BD               	goto	l2289
 35264  002AEE  0A03               	xorlw	3	; case 26
 35265  002AF0  B4D8               	btfsc	status,2,c
 35266  002AF2  D7BC               	goto	l2290
 35267  002AF4  0A01               	xorlw	1	; case 27
 35268  002AF6  B4D8               	btfsc	status,2,c
 35269  002AF8  D7BB               	goto	l2291
 35270  002AFA  0A07               	xorlw	7	; case 28
 35271  002AFC  B4D8               	btfsc	status,2,c
 35272  002AFE  D7BA               	goto	l2292
 35273  002B00  0A01               	xorlw	1	; case 29
 35274  002B02  B4D8               	btfsc	status,2,c
 35275  002B04  D7B9               	goto	l2293
 35276  002B06  0A03               	xorlw	3	; case 30
 35277  002B08  B4D8               	btfsc	status,2,c
 35278  002B0A  D7B8               	goto	l2294
 35279  002B0C  0A01               	xorlw	1	; case 31
 35280  002B0E  B4D8               	btfsc	status,2,c
 35281  002B10  D7B7               	goto	l2295
 35282  002B12  D7B8               	goto	l2296
 35283  002B14                     l2297:
 35284                           
 35285                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 35286  002B14  0E00               	movlw	0
 35287  002B16  0012               	return	
 35288  002B18                     __end_of__get_root:
 35289                           	opt stack 0
 35290                           tosu	equ	0xFFF
 35291                           tosh	equ	0xFFE
 35292                           tosl	equ	0xFFD
 35293                           pclath	equ	0xFFA
 35294                           tblptru	equ	0xFF8
 35295                           tblptrh	equ	0xFF7
 35296                           tblptrl	equ	0xFF6
 35297                           tablat	equ	0xFF5
 35298                           prodh	equ	0xFF4
 35299                           prodl	equ	0xFF3
 35300                           intcon	equ	0xFF2
 35301                           intcon3	equ	0xFF0
 35302                           indf0	equ	0xFEF
 35303                           postinc0	equ	0xFEE
 35304                           fsr0h	equ	0xFEA
 35305                           fsr0l	equ	0xFE9
 35306                           wreg	equ	0xFE8
 35307                           indf1	equ	0xFE7
 35308                           postdec1	equ	0xFE5
 35309                           plusw1	equ	0xFE3
 35310                           fsr1h	equ	0xFE2
 35311                           fsr1l	equ	0xFE1
 35312                           indf2	equ	0xFDF
 35313                           postinc2	equ	0xFDE
 35314                           postdec2	equ	0xFDD
 35315                           plusw2	equ	0xFDB
 35316                           fsr2h	equ	0xFDA
 35317                           fsr2l	equ	0xFD9
 35318                           status	equ	0xFD8
 35319                           
 35320 ;; *************** function __get_mbr *****************
 35321 ;; Defined at:
 35322 ;;		line 1037 in file "fat16.c"
 35323 ;; Parameters:    Size  Location     Type
 35324 ;;  idx             2    0[COMRAM] unsigned int 
 35325 ;; Auto vars:     Size  Location     Type
 35326 ;;		None
 35327 ;; Return value:  Size  Location     Type
 35328 ;;                  1    wreg      unsigned char 
 35329 ;; Registers used:
 35330 ;;		wreg, status,2, status,0
 35331 ;; Tracked objects:
 35332 ;;		On entry : 0/0
 35333 ;;		On exit  : 0/0
 35334 ;;		Unchanged: 0/0
 35335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35339 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35340 ;;Total ram usage:        4 bytes
 35341 ;; Hardware stack levels used:    1
 35342 ;; This function calls:
 35343 ;;		Nothing
 35344 ;; This function is called by:
 35345 ;;		_fat_get_format_status
 35346 ;;		_fat_format
 35347 ;; This function uses a non-reentrant model
 35348 ;;
 35349                           
 35350                           	psect	text184
 35351  004CB0                     __ptext184:
 35352                           	opt stack 0
 35353  004CB0                     __get_mbr:
 35354                           	opt stack 27
 35355                           
 35356                           ;fat16.c: 1039: switch (idx)
 35357                           
 35358                           ;incstack = 0
 35359  004CB0  D026               	goto	l2178
 35360  004CB2                     
 35361                           ;fat16.c: 1042: return 0x80;
 35362  004CB2  0E80               	movlw	128
 35363  004CB4  0012               	return	
 35364  004CB6                     
 35365                           ;fat16.c: 1044: return 0;
 35366  004CB6  0E00               	movlw	0
 35367  004CB8  0012               	return	
 35368  004CBA                     
 35369                           ;fat16.c: 1046: return 2;
 35370  004CBA  0E02               	movlw	2
 35371  004CBC  0012               	return	
 35372  004CBE                     
 35373                           ;fat16.c: 1048: return 0;
 35374  004CBE  0E00               	movlw	0
 35375  004CC0  0012               	return	
 35376  004CC2                     
 35377                           ;fat16.c: 1050: return 0x04;
 35378  004CC2  0E04               	movlw	4
 35379  004CC4  0012               	return	
 35380  004CC6                     
 35381                           ;fat16.c: 1052: return 2;
 35382  004CC6  0E02               	movlw	2
 35383  004CC8  0012               	return	
 35384  004CCA                     
 35385                           ;fat16.c: 1054: return 3;
 35386  004CCA  0E03               	movlw	3
 35387  004CCC  0012               	return	
 35388  004CCE                     
 35389                           ;fat16.c: 1056: return 8;
 35390  004CCE  0E08               	movlw	8
 35391  004CD0  0012               	return	
 35392  004CD2                     
 35393                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 35394  004CD2  0E01               	movlw	1
 35395  004CD4  0012               	return	
 35396  004CD6                     
 35397                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 35398  004CD6  0E00               	movlw	0
 35399  004CD8  0012               	return	
 35400  004CDA                     
 35401                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 35402  004CDA  0E00               	movlw	0
 35403  004CDC  0012               	return	
 35404  004CDE                     
 35405                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35406  004CDE  0E00               	movlw	0
 35407  004CE0  0012               	return	
 35408  004CE2                     
 35409                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 35410  004CE2  0EFF               	movlw	255
 35411  004CE4  0012               	return	
 35412  004CE6                     
 35413                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 35414  004CE6  0E1F               	movlw	31
 35415  004CE8  0012               	return	
 35416  004CEA                     
 35417                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 35418  004CEA  0E00               	movlw	0
 35419  004CEC  0012               	return	
 35420  004CEE                     
 35421                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 35422  004CEE  0E00               	movlw	0
 35423  004CF0  0012               	return	
 35424  004CF2                     
 35425                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 35426  004CF2  0E55               	movlw	85
 35427  004CF4  0012               	return	
 35428  004CF6                     
 35429                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 35430  004CF6  0EAA               	movlw	170
 35431  004CF8  0012               	return	
 35432  004CFA                     
 35433                           ;fat16.c: 1078: return 0X00;
 35434  004CFA  0E00               	movlw	0
 35435                           
 35436                           ;fat16.c: 1079: }
 35437  004CFC  0012               	return	
 35438  004CFE                     l2178:
 35439  004CFE  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 35440  004D02  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 35441                           
 35442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35443                           ; Switch size 1, requested type "space"
 35444                           ; Number of cases is 1, Range of values is 1 to 1
 35445                           ; switch strategies available:
 35446                           ; Name         Instructions Cycles
 35447                           ; simple_byte            4     3 (average)
 35448                           ;	Chosen strategy is simple_byte
 35449  004D06  5004               	movf	??__get_mbr+1,w,c
 35450  004D08  0A01               	xorlw	1	; case 1
 35451  004D0A  A4D8               	btfss	status,2,c
 35452  004D0C  D7F6               	goto	l2198
 35453                           
 35454                           ; Switch size 1, requested type "space"
 35455                           ; Number of cases is 18, Range of values is 190 to 255
 35456                           ; switch strategies available:
 35457                           ; Name         Instructions Cycles
 35458                           ; simple_byte           55    28 (average)
 35459                           ;	Chosen strategy is simple_byte
 35460  004D0E  5003               	movf	??__get_mbr,w,c
 35461  004D10  0ABE               	xorlw	190	; case 190
 35462  004D12  B4D8               	btfsc	status,2,c
 35463  004D14  D7CE               	goto	l2179
 35464  004D16  0A01               	xorlw	1	; case 191
 35465  004D18  B4D8               	btfsc	status,2,c
 35466  004D1A  D7CD               	goto	l2181
 35467  004D1C  0A7F               	xorlw	127	; case 192
 35468  004D1E  B4D8               	btfsc	status,2,c
 35469  004D20  D7CC               	goto	l2182
 35470  004D22  0A01               	xorlw	1	; case 193
 35471  004D24  B4D8               	btfsc	status,2,c
 35472  004D26  D7CB               	goto	l2183
 35473  004D28  0A03               	xorlw	3	; case 194
 35474  004D2A  B4D8               	btfsc	status,2,c
 35475  004D2C  D7CA               	goto	l2184
 35476  004D2E  0A01               	xorlw	1	; case 195
 35477  004D30  B4D8               	btfsc	status,2,c
 35478  004D32  D7C9               	goto	l2185
 35479  004D34  0A07               	xorlw	7	; case 196
 35480  004D36  B4D8               	btfsc	status,2,c
 35481  004D38  D7C8               	goto	l2186
 35482  004D3A  0A01               	xorlw	1	; case 197
 35483  004D3C  B4D8               	btfsc	status,2,c
 35484  004D3E  D7C7               	goto	l2187
 35485  004D40  0A03               	xorlw	3	; case 198
 35486  004D42  B4D8               	btfsc	status,2,c
 35487  004D44  D7C6               	goto	l2188
 35488  004D46  0A01               	xorlw	1	; case 199
 35489  004D48  B4D8               	btfsc	status,2,c
 35490  004D4A  D7C5               	goto	l2189
 35491  004D4C  0A0F               	xorlw	15	; case 200
 35492  004D4E  B4D8               	btfsc	status,2,c
 35493  004D50  D7C4               	goto	l2190
 35494  004D52  0A01               	xorlw	1	; case 201
 35495  004D54  B4D8               	btfsc	status,2,c
 35496  004D56  D7C3               	goto	l2191
 35497  004D58  0A03               	xorlw	3	; case 202
 35498  004D5A  B4D8               	btfsc	status,2,c
 35499  004D5C  D7C2               	goto	l2192
 35500  004D5E  0A01               	xorlw	1	; case 203
 35501  004D60  B4D8               	btfsc	status,2,c
 35502  004D62  D7C1               	goto	l2193
 35503  004D64  0A07               	xorlw	7	; case 204
 35504  004D66  B4D8               	btfsc	status,2,c
 35505  004D68  D7C0               	goto	l2194
 35506  004D6A  0A01               	xorlw	1	; case 205
 35507  004D6C  B4D8               	btfsc	status,2,c
 35508  004D6E  D7BF               	goto	l2195
 35509  004D70  0A33               	xorlw	51	; case 254
 35510  004D72  B4D8               	btfsc	status,2,c
 35511  004D74  D7BE               	goto	l2196
 35512  004D76  0A01               	xorlw	1	; case 255
 35513  004D78  B4D8               	btfsc	status,2,c
 35514  004D7A  D7BD               	goto	l2197
 35515  004D7C  D7BE               	goto	l2198
 35516  004D7E                     __end_of__get_mbr:
 35517                           	opt stack 0
 35518                           tosu	equ	0xFFF
 35519                           tosh	equ	0xFFE
 35520                           tosl	equ	0xFFD
 35521                           pclath	equ	0xFFA
 35522                           tblptru	equ	0xFF8
 35523                           tblptrh	equ	0xFF7
 35524                           tblptrl	equ	0xFF6
 35525                           tablat	equ	0xFF5
 35526                           prodh	equ	0xFF4
 35527                           prodl	equ	0xFF3
 35528                           intcon	equ	0xFF2
 35529                           intcon3	equ	0xFF0
 35530                           indf0	equ	0xFEF
 35531                           postinc0	equ	0xFEE
 35532                           fsr0h	equ	0xFEA
 35533                           fsr0l	equ	0xFE9
 35534                           wreg	equ	0xFE8
 35535                           indf1	equ	0xFE7
 35536                           postdec1	equ	0xFE5
 35537                           plusw1	equ	0xFE3
 35538                           fsr1h	equ	0xFE2
 35539                           fsr1l	equ	0xFE1
 35540                           indf2	equ	0xFDF
 35541                           postinc2	equ	0xFDE
 35542                           postdec2	equ	0xFDD
 35543                           plusw2	equ	0xFDB
 35544                           fsr2h	equ	0xFDA
 35545                           fsr2l	equ	0xFD9
 35546                           status	equ	0xFD8
 35547                           
 35548 ;; *************** function __get_fbr *****************
 35549 ;; Defined at:
 35550 ;;		line 1082 in file "fat16.c"
 35551 ;; Parameters:    Size  Location     Type
 35552 ;;  idx             2    0[COMRAM] unsigned int 
 35553 ;; Auto vars:     Size  Location     Type
 35554 ;;		None
 35555 ;; Return value:  Size  Location     Type
 35556 ;;                  1    wreg      unsigned char 
 35557 ;; Registers used:
 35558 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35559 ;; Tracked objects:
 35560 ;;		On entry : 0/0
 35561 ;;		On exit  : 0/0
 35562 ;;		Unchanged: 0/0
 35563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35568 ;;Total ram usage:        4 bytes
 35569 ;; Hardware stack levels used:    1
 35570 ;; This function calls:
 35571 ;;		Nothing
 35572 ;; This function is called by:
 35573 ;;		_fat_get_format_status
 35574 ;;		_fat_format
 35575 ;; This function uses a non-reentrant model
 35576 ;;
 35577                           
 35578                           	psect	text185
 35579  00175A                     __ptext185:
 35580                           	opt stack 0
 35581  00175A                     __get_fbr:
 35582                           	opt stack 27
 35583                           
 35584                           ;fat16.c: 1084: switch (idx)
 35585                           
 35586                           ;incstack = 0
 35587  00175A  D091               	goto	l2202
 35588  00175C                     
 35589                           ;fat16.c: 1087: return 0xEB;
 35590  00175C  0EEB               	movlw	235
 35591  00175E  0012               	return	
 35592  001760                     
 35593                           ;fat16.c: 1089: return 0x3C;
 35594  001760  0E3C               	movlw	60
 35595  001762  0012               	return	
 35596  001764                     
 35597                           ;fat16.c: 1091: return 0x90;
 35598  001764  0E90               	movlw	144
 35599  001766  0012               	return	
 35600  001768                     
 35601                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 35602  001768  0EF1               	movlw	low STR_1
 35603  00176A  6EF6               	movwf	tblptrl,c
 35604  00176C                     	if	1	;There is more than 1 active tblptr byte
 35605  00176C  0E8F               	movlw	high STR_1
 35606  00176E  6EF7               	movwf	tblptrh,c
 35607  001770                     	endif
 35608  001770                     	if	1	;There are 3 active tblptr bytes
 35609  001770  0E00               	movlw	low (STR_1 shr (0+16))
 35610  001772  6EF8               	movwf	tblptru,c
 35611  001774                     	endif
 35612  001774  0008               	tblrd		*
 35613  001776  50F5               	movf	tablat,w,c
 35614  001778  0012               	return	
 35615  00177A                     
 35616                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 35617  00177A  0EF2               	movlw	low (STR_1+1)
 35618  00177C  6EF6               	movwf	tblptrl,c
 35619  00177E  0E8F               	movlw	high (STR_1+1)
 35620  001780  6EF7               	movwf	tblptrh,c
 35621  001782                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35622  001782  6AF8               	clrf	tblptru,c
 35623  001784                     	endif
 35624  001784                     	if	0	;tblptru may be non-zero
 35625  001784                     	endif
 35626  001784  0008               	tblrd		*
 35627  001786  50F5               	movf	tablat,w,c
 35628  001788  0012               	return	
 35629  00178A                     
 35630                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 35631  00178A  0EF3               	movlw	low (STR_1+2)
 35632  00178C  6EF6               	movwf	tblptrl,c
 35633  00178E  0E8F               	movlw	high (STR_1+2)
 35634  001790  6EF7               	movwf	tblptrh,c
 35635  001792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35636  001792  6AF8               	clrf	tblptru,c
 35637  001794                     	endif
 35638  001794                     	if	0	;tblptru may be non-zero
 35639  001794                     	endif
 35640  001794  0008               	tblrd		*
 35641  001796  50F5               	movf	tablat,w,c
 35642  001798  0012               	return	
 35643  00179A                     
 35644                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 35645  00179A  0EF4               	movlw	low (STR_1+3)
 35646  00179C  6EF6               	movwf	tblptrl,c
 35647  00179E  0E8F               	movlw	high (STR_1+3)
 35648  0017A0  6EF7               	movwf	tblptrh,c
 35649  0017A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35650  0017A2  6AF8               	clrf	tblptru,c
 35651  0017A4                     	endif
 35652  0017A4                     	if	0	;tblptru may be non-zero
 35653  0017A4                     	endif
 35654  0017A4  0008               	tblrd		*
 35655  0017A6  50F5               	movf	tablat,w,c
 35656  0017A8  0012               	return	
 35657  0017AA                     
 35658                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 35659  0017AA  0EF5               	movlw	low (STR_1+4)
 35660  0017AC  6EF6               	movwf	tblptrl,c
 35661  0017AE  0E8F               	movlw	high (STR_1+4)
 35662  0017B0  6EF7               	movwf	tblptrh,c
 35663  0017B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35664  0017B2  6AF8               	clrf	tblptru,c
 35665  0017B4                     	endif
 35666  0017B4                     	if	0	;tblptru may be non-zero
 35667  0017B4                     	endif
 35668  0017B4  0008               	tblrd		*
 35669  0017B6  50F5               	movf	tablat,w,c
 35670  0017B8  0012               	return	
 35671  0017BA                     
 35672                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 35673  0017BA  0EF6               	movlw	low (STR_1+5)
 35674  0017BC  6EF6               	movwf	tblptrl,c
 35675  0017BE  0E8F               	movlw	high (STR_1+5)
 35676  0017C0  6EF7               	movwf	tblptrh,c
 35677  0017C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35678  0017C2  6AF8               	clrf	tblptru,c
 35679  0017C4                     	endif
 35680  0017C4                     	if	0	;tblptru may be non-zero
 35681  0017C4                     	endif
 35682  0017C4  0008               	tblrd		*
 35683  0017C6  50F5               	movf	tablat,w,c
 35684  0017C8  0012               	return	
 35685  0017CA                     
 35686                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 35687  0017CA  0EF7               	movlw	low (STR_1+6)
 35688  0017CC  6EF6               	movwf	tblptrl,c
 35689  0017CE  0E8F               	movlw	high (STR_1+6)
 35690  0017D0  6EF7               	movwf	tblptrh,c
 35691  0017D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35692  0017D2  6AF8               	clrf	tblptru,c
 35693  0017D4                     	endif
 35694  0017D4                     	if	0	;tblptru may be non-zero
 35695  0017D4                     	endif
 35696  0017D4  0008               	tblrd		*
 35697  0017D6  50F5               	movf	tablat,w,c
 35698  0017D8  0012               	return	
 35699  0017DA                     
 35700                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 35701  0017DA  0EF8               	movlw	low (STR_1+7)
 35702  0017DC  6EF6               	movwf	tblptrl,c
 35703  0017DE  0E8F               	movlw	high (STR_1+7)
 35704  0017E0  6EF7               	movwf	tblptrh,c
 35705  0017E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35706  0017E2  6AF8               	clrf	tblptru,c
 35707  0017E4                     	endif
 35708  0017E4                     	if	0	;tblptru may be non-zero
 35709  0017E4                     	endif
 35710  0017E4  0008               	tblrd		*
 35711  0017E6  50F5               	movf	tablat,w,c
 35712  0017E8  0012               	return	
 35713  0017EA                     
 35714                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 35715  0017EA  0E00               	movlw	0
 35716  0017EC  0012               	return	
 35717  0017EE                     
 35718                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 35719  0017EE  0E02               	movlw	2
 35720  0017F0  0012               	return	
 35721  0017F2                     
 35722                           ;fat16.c: 1113: return 1;
 35723  0017F2  0E01               	movlw	1
 35724  0017F4  0012               	return	
 35725  0017F6                     
 35726                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 35727  0017F6  0E01               	movlw	1
 35728  0017F8  0012               	return	
 35729  0017FA                     
 35730                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 35731  0017FA  0E00               	movlw	0
 35732  0017FC  0012               	return	
 35733  0017FE                     
 35734                           ;fat16.c: 1119: return 1;
 35735  0017FE  0E01               	movlw	1
 35736  001800  0012               	return	
 35737  001802                     
 35738                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 35739  001802  0E40               	movlw	64
 35740  001804  0012               	return	
 35741  001806                     
 35742                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 35743  001806  0E00               	movlw	0
 35744  001808  0012               	return	
 35745  00180A                     
 35746                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 35747  00180A  0EFF               	movlw	255
 35748  00180C  0012               	return	
 35749  00180E                     
 35750                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35751  00180E  0E1F               	movlw	31
 35752  001810  0012               	return	
 35753  001812                     
 35754                           ;fat16.c: 1129: return 0XF8;
 35755  001812  0EF8               	movlw	248
 35756  001814  0012               	return	
 35757  001816                     
 35758                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 35759  001816  0E20               	movlw	32
 35760  001818  0012               	return	
 35761  00181A                     
 35762                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35763  00181A  0E00               	movlw	0
 35764  00181C  0012               	return	
 35765  00181E                     
 35766                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 35767  00181E  0E3F               	movlw	63
 35768  001820  0012               	return	
 35769  001822                     
 35770                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35771  001822  0E00               	movlw	0
 35772  001824  0012               	return	
 35773  001826                     
 35774                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 35775  001826  0E10               	movlw	16
 35776  001828  0012               	return	
 35777  00182A                     
 35778                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35779  00182A  0E00               	movlw	0
 35780  00182C  0012               	return	
 35781  00182E                     
 35782                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35783  00182E  0E00               	movlw	0
 35784  001830  0012               	return	
 35785  001832                     
 35786                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35787  001832  0E00               	movlw	0
 35788  001834  0012               	return	
 35789  001836                     
 35790                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35791  001836  0E00               	movlw	0
 35792  001838  0012               	return	
 35793  00183A                     
 35794                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35795  00183A  0E00               	movlw	0
 35796  00183C  0012               	return	
 35797  00183E                     
 35798                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35799  00183E  0E01               	movlw	1
 35800  001840  0012               	return	
 35801  001842                     
 35802                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35803  001842  0E00               	movlw	0
 35804  001844  0012               	return	
 35805  001846                     
 35806                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35807  001846  0E22               	movlw	34
 35808  001848  0012               	return	
 35809  00184A                     
 35810                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35811  00184A  0E00               	movlw	0
 35812  00184C  0012               	return	
 35813  00184E                     
 35814                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35815                           
 35816                           ;fat16.c: 1160: case 0x2F:
 35817  00184E  0E00               	movlw	0
 35818  001850  0012               	return	
 35819  001852                     
 35820                           ;fat16.c: 1163: return 'F';
 35821  001852  0E46               	movlw	70
 35822  001854  0012               	return	
 35823  001856                     
 35824                           ;fat16.c: 1165: return 'A';
 35825  001856  0E41               	movlw	65
 35826  001858  0012               	return	
 35827  00185A                     
 35828                           ;fat16.c: 1167: return 'T';
 35829  00185A  0E54               	movlw	84
 35830  00185C  0012               	return	
 35831  00185E                     
 35832                           ;fat16.c: 1169: return '1';
 35833  00185E  0E31               	movlw	49
 35834  001860  0012               	return	
 35835  001862                     
 35836                           ;fat16.c: 1171: return '6';
 35837  001862  0E36               	movlw	54
 35838  001864  0012               	return	
 35839  001866                     
 35840                           ;fat16.c: 1173: return ' ';
 35841  001866  0E20               	movlw	32
 35842  001868  0012               	return	
 35843  00186A                     
 35844                           ;fat16.c: 1175: return ' ';
 35845  00186A  0E20               	movlw	32
 35846  00186C  0012               	return	
 35847  00186E                     
 35848                           ;fat16.c: 1177: return ' ';
 35849  00186E  0E20               	movlw	32
 35850  001870  0012               	return	
 35851  001872                     
 35852                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35853  001872  0E55               	movlw	85
 35854  001874  0012               	return	
 35855  001876                     
 35856                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35857  001876  0EAA               	movlw	170
 35858  001878  0012               	return	
 35859  00187A                     
 35860                           ;fat16.c: 1183: return 0X00;
 35861  00187A  0E00               	movlw	0
 35862                           
 35863                           ;fat16.c: 1184: }
 35864  00187C  0012               	return	
 35865  00187E                     l2202:
 35866  00187E  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35867  001882  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35868                           
 35869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35870                           ; Switch size 1, requested type "space"
 35871                           ; Number of cases is 2, Range of values is 0 to 1
 35872                           ; switch strategies available:
 35873                           ; Name         Instructions Cycles
 35874                           ; simple_byte            7     4 (average)
 35875                           ;	Chosen strategy is simple_byte
 35876  001886  5004               	movf	??__get_fbr+1,w,c
 35877  001888  0A00               	xorlw	0	; case 0
 35878  00188A  B4D8               	btfsc	status,2,c
 35879  00188C  D004               	goto	l15633
 35880  00188E  0A01               	xorlw	1	; case 1
 35881  001890  B4D8               	btfsc	status,2,c
 35882  001892  D08D               	goto	l15635
 35883  001894  D7F2               	goto	l2252
 35884  001896                     l15633:
 35885                           
 35886                           ; Switch size 1, requested type "space"
 35887                           ; Number of cases is 46, Range of values is 0 to 61
 35888                           ; switch strategies available:
 35889                           ; Name         Instructions Cycles
 35890                           ; simple_byte          139    70 (average)
 35891                           ;	Chosen strategy is simple_byte
 35892  001896  5003               	movf	??__get_fbr,w,c
 35893  001898  0A00               	xorlw	0	; case 0
 35894  00189A  B4D8               	btfsc	status,2,c
 35895  00189C  D75F               	goto	l2203
 35896  00189E  0A01               	xorlw	1	; case 1
 35897  0018A0  B4D8               	btfsc	status,2,c
 35898  0018A2  D75E               	goto	l2205
 35899  0018A4  0A03               	xorlw	3	; case 2
 35900  0018A6  B4D8               	btfsc	status,2,c
 35901  0018A8  D75D               	goto	l2206
 35902  0018AA  0A01               	xorlw	1	; case 3
 35903  0018AC  B4D8               	btfsc	status,2,c
 35904  0018AE  D75C               	goto	l2207
 35905  0018B0  0A07               	xorlw	7	; case 4
 35906  0018B2  B4D8               	btfsc	status,2,c
 35907  0018B4  D762               	goto	l2208
 35908  0018B6  0A01               	xorlw	1	; case 5
 35909  0018B8  B4D8               	btfsc	status,2,c
 35910  0018BA  D767               	goto	l2209
 35911  0018BC  0A03               	xorlw	3	; case 6
 35912  0018BE  B4D8               	btfsc	status,2,c
 35913  0018C0  D76C               	goto	l2210
 35914  0018C2  0A01               	xorlw	1	; case 7
 35915  0018C4  B4D8               	btfsc	status,2,c
 35916  0018C6  D771               	goto	l2211
 35917  0018C8  0A0F               	xorlw	15	; case 8
 35918  0018CA  B4D8               	btfsc	status,2,c
 35919  0018CC  D776               	goto	l2212
 35920  0018CE  0A01               	xorlw	1	; case 9
 35921  0018D0  B4D8               	btfsc	status,2,c
 35922  0018D2  D77B               	goto	l2213
 35923  0018D4  0A03               	xorlw	3	; case 10
 35924  0018D6  B4D8               	btfsc	status,2,c
 35925  0018D8  D780               	goto	l2214
 35926  0018DA  0A01               	xorlw	1	; case 11
 35927  0018DC  B4D8               	btfsc	status,2,c
 35928  0018DE  D785               	goto	l2215
 35929  0018E0  0A07               	xorlw	7	; case 12
 35930  0018E2  B4D8               	btfsc	status,2,c
 35931  0018E4  D784               	goto	l2216
 35932  0018E6  0A01               	xorlw	1	; case 13
 35933  0018E8  B4D8               	btfsc	status,2,c
 35934  0018EA  D783               	goto	l2217
 35935  0018EC  0A03               	xorlw	3	; case 14
 35936  0018EE  B4D8               	btfsc	status,2,c
 35937  0018F0  D782               	goto	l2218
 35938  0018F2  0A01               	xorlw	1	; case 15
 35939  0018F4  B4D8               	btfsc	status,2,c
 35940  0018F6  D781               	goto	l2219
 35941  0018F8  0A1F               	xorlw	31	; case 16
 35942  0018FA  B4D8               	btfsc	status,2,c
 35943  0018FC  D780               	goto	l2220
 35944  0018FE  0A01               	xorlw	1	; case 17
 35945  001900  B4D8               	btfsc	status,2,c
 35946  001902  D77F               	goto	l2221
 35947  001904  0A03               	xorlw	3	; case 18
 35948  001906  B4D8               	btfsc	status,2,c
 35949  001908  D77E               	goto	l2222
 35950  00190A  0A01               	xorlw	1	; case 19
 35951  00190C  B4D8               	btfsc	status,2,c
 35952  00190E  D77D               	goto	l2223
 35953  001910  0A07               	xorlw	7	; case 20
 35954  001912  B4D8               	btfsc	status,2,c
 35955  001914  D77C               	goto	l2224
 35956  001916  0A01               	xorlw	1	; case 21
 35957  001918  B4D8               	btfsc	status,2,c
 35958  00191A  D77B               	goto	l2225
 35959  00191C  0A03               	xorlw	3	; case 22
 35960  00191E  B4D8               	btfsc	status,2,c
 35961  001920  D77A               	goto	l2226
 35962  001922  0A01               	xorlw	1	; case 23
 35963  001924  B4D8               	btfsc	status,2,c
 35964  001926  D779               	goto	l2227
 35965  001928  0A0F               	xorlw	15	; case 24
 35966  00192A  B4D8               	btfsc	status,2,c
 35967  00192C  D778               	goto	l2228
 35968  00192E  0A01               	xorlw	1	; case 25
 35969  001930  B4D8               	btfsc	status,2,c
 35970  001932  D777               	goto	l2229
 35971  001934  0A03               	xorlw	3	; case 26
 35972  001936  B4D8               	btfsc	status,2,c
 35973  001938  D776               	goto	l2230
 35974  00193A  0A01               	xorlw	1	; case 27
 35975  00193C  B4D8               	btfsc	status,2,c
 35976  00193E  D775               	goto	l2231
 35977  001940  0A07               	xorlw	7	; case 28
 35978  001942  B4D8               	btfsc	status,2,c
 35979  001944  D774               	goto	l2232
 35980  001946  0A01               	xorlw	1	; case 29
 35981  001948  B4D8               	btfsc	status,2,c
 35982  00194A  D773               	goto	l2233
 35983  00194C  0A03               	xorlw	3	; case 30
 35984  00194E  B4D8               	btfsc	status,2,c
 35985  001950  D772               	goto	l2234
 35986  001952  0A01               	xorlw	1	; case 31
 35987  001954  B4D8               	btfsc	status,2,c
 35988  001956  D771               	goto	l2235
 35989  001958  0A37               	xorlw	55	; case 40
 35990  00195A  B4D8               	btfsc	status,2,c
 35991  00195C  D770               	goto	l2236
 35992  00195E  0A01               	xorlw	1	; case 41
 35993  001960  B4D8               	btfsc	status,2,c
 35994  001962  D76F               	goto	l2237
 35995  001964  0A05               	xorlw	5	; case 44
 35996  001966  B4D8               	btfsc	status,2,c
 35997  001968  D76E               	goto	l2238
 35998  00196A  0A01               	xorlw	1	; case 45
 35999  00196C  B4D8               	btfsc	status,2,c
 36000  00196E  D76D               	goto	l2239
 36001  001970  0A03               	xorlw	3	; case 46
 36002  001972  B4D8               	btfsc	status,2,c
 36003  001974  D76C               	goto	l2240
 36004  001976  0A01               	xorlw	1	; case 47
 36005  001978  B4D8               	btfsc	status,2,c
 36006  00197A  D769               	goto	l2240
 36007  00197C  0A19               	xorlw	25	; case 54
 36008  00197E  B4D8               	btfsc	status,2,c
 36009  001980  D768               	goto	l2242
 36010  001982  0A01               	xorlw	1	; case 55
 36011  001984  B4D8               	btfsc	status,2,c
 36012  001986  D767               	goto	l2243
 36013  001988  0A0F               	xorlw	15	; case 56
 36014  00198A  B4D8               	btfsc	status,2,c
 36015  00198C  D766               	goto	l2244
 36016  00198E  0A01               	xorlw	1	; case 57
 36017  001990  B4D8               	btfsc	status,2,c
 36018  001992  D765               	goto	l2245
 36019  001994  0A03               	xorlw	3	; case 58
 36020  001996  B4D8               	btfsc	status,2,c
 36021  001998  D764               	goto	l2246
 36022  00199A  0A01               	xorlw	1	; case 59
 36023  00199C  B4D8               	btfsc	status,2,c
 36024  00199E  D763               	goto	l2247
 36025  0019A0  0A07               	xorlw	7	; case 60
 36026  0019A2  B4D8               	btfsc	status,2,c
 36027  0019A4  D762               	goto	l2248
 36028  0019A6  0A01               	xorlw	1	; case 61
 36029  0019A8  B4D8               	btfsc	status,2,c
 36030  0019AA  D761               	goto	l2249
 36031  0019AC  D766               	goto	l2252
 36032  0019AE                     l15635:
 36033                           
 36034                           ; Switch size 1, requested type "space"
 36035                           ; Number of cases is 2, Range of values is 254 to 255
 36036                           ; switch strategies available:
 36037                           ; Name         Instructions Cycles
 36038                           ; simple_byte            7     4 (average)
 36039                           ;	Chosen strategy is simple_byte
 36040  0019AE  5003               	movf	??__get_fbr,w,c
 36041  0019B0  0AFE               	xorlw	254	; case 254
 36042  0019B2  B4D8               	btfsc	status,2,c
 36043  0019B4  D75E               	goto	l2250
 36044  0019B6  0A01               	xorlw	1	; case 255
 36045  0019B8  B4D8               	btfsc	status,2,c
 36046  0019BA  D75D               	goto	l2251
 36047  0019BC  D75E               	goto	l2252
 36048  0019BE                     __end_of__get_fbr:
 36049                           	opt stack 0
 36050                           tosu	equ	0xFFF
 36051                           tosh	equ	0xFFE
 36052                           tosl	equ	0xFFD
 36053                           pclath	equ	0xFFA
 36054                           tblptru	equ	0xFF8
 36055                           tblptrh	equ	0xFF7
 36056                           tblptrl	equ	0xFF6
 36057                           tablat	equ	0xFF5
 36058                           prodh	equ	0xFF4
 36059                           prodl	equ	0xFF3
 36060                           intcon	equ	0xFF2
 36061                           intcon3	equ	0xFF0
 36062                           indf0	equ	0xFEF
 36063                           postinc0	equ	0xFEE
 36064                           fsr0h	equ	0xFEA
 36065                           fsr0l	equ	0xFE9
 36066                           wreg	equ	0xFE8
 36067                           indf1	equ	0xFE7
 36068                           postdec1	equ	0xFE5
 36069                           plusw1	equ	0xFE3
 36070                           fsr1h	equ	0xFE2
 36071                           fsr1l	equ	0xFE1
 36072                           indf2	equ	0xFDF
 36073                           postinc2	equ	0xFDE
 36074                           postdec2	equ	0xFDD
 36075                           plusw2	equ	0xFDB
 36076                           fsr2h	equ	0xFDA
 36077                           fsr2l	equ	0xFD9
 36078                           status	equ	0xFD8
 36079                           
 36080 ;; *************** function __get_fat *****************
 36081 ;; Defined at:
 36082 ;;		line 1187 in file "fat16.c"
 36083 ;; Parameters:    Size  Location     Type
 36084 ;;  idx             2    0[COMRAM] unsigned int 
 36085 ;; Auto vars:     Size  Location     Type
 36086 ;;		None
 36087 ;; Return value:  Size  Location     Type
 36088 ;;                  1    wreg      unsigned char 
 36089 ;; Registers used:
 36090 ;;		wreg, status,2, status,0
 36091 ;; Tracked objects:
 36092 ;;		On entry : 0/0
 36093 ;;		On exit  : 0/0
 36094 ;;		Unchanged: 0/0
 36095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36099 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36100 ;;Total ram usage:        4 bytes
 36101 ;; Hardware stack levels used:    1
 36102 ;; This function calls:
 36103 ;;		Nothing
 36104 ;; This function is called by:
 36105 ;;		_fat_format
 36106 ;; This function uses a non-reentrant model
 36107 ;;
 36108                           
 36109                           	psect	text186
 36110  0067B8                     __ptext186:
 36111                           	opt stack 0
 36112  0067B8                     __get_fat:
 36113                           	opt stack 27
 36114                           
 36115                           ;fat16.c: 1189: switch (idx)
 36116                           
 36117                           ;incstack = 0
 36118  0067B8  D00E               	goto	l2256
 36119  0067BA                     
 36120                           ;fat16.c: 1193: return 0xF8;
 36121  0067BA  0EF8               	movlw	248
 36122  0067BC  0012               	return	
 36123  0067BE                     
 36124                           ;fat16.c: 1195: return 0xFF;
 36125  0067BE  0EFF               	movlw	255
 36126  0067C0  0012               	return	
 36127  0067C2                     
 36128                           ;fat16.c: 1197: return 0xFF;
 36129  0067C2  0EFF               	movlw	255
 36130  0067C4  0012               	return	
 36131  0067C6                     
 36132                           ;fat16.c: 1199: return 0xFF;
 36133  0067C6  0EFF               	movlw	255
 36134  0067C8  0012               	return	
 36135  0067CA                     
 36136                           ;fat16.c: 1202: return 0xFF;
 36137  0067CA  0EFF               	movlw	255
 36138  0067CC  0012               	return	
 36139  0067CE                     
 36140                           ;fat16.c: 1204: return 0xFF;
 36141  0067CE  0EFF               	movlw	255
 36142  0067D0  0012               	return	
 36143  0067D2                     
 36144                           ;fat16.c: 1206: return 0X00;
 36145  0067D2  0E00               	movlw	0
 36146                           
 36147                           ;fat16.c: 1207: }
 36148  0067D4  0012               	return	
 36149  0067D6                     l2256:
 36150  0067D6  C001  F003         	movff	__get_fat@idx,??__get_fat
 36151  0067DA  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 36152                           
 36153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36154                           ; Switch size 1, requested type "space"
 36155                           ; Number of cases is 1, Range of values is 0 to 0
 36156                           ; switch strategies available:
 36157                           ; Name         Instructions Cycles
 36158                           ; simple_byte            4     3 (average)
 36159                           ;	Chosen strategy is simple_byte
 36160  0067DE  5004               	movf	??__get_fat+1,w,c
 36161  0067E0  0A00               	xorlw	0	; case 0
 36162  0067E2  A4D8               	btfss	status,2,c
 36163  0067E4  D7F6               	goto	l2264
 36164                           
 36165                           ; Switch size 1, requested type "space"
 36166                           ; Number of cases is 6, Range of values is 0 to 5
 36167                           ; switch strategies available:
 36168                           ; Name         Instructions Cycles
 36169                           ; simple_byte           19    10 (average)
 36170                           ;	Chosen strategy is simple_byte
 36171  0067E6  5003               	movf	??__get_fat,w,c
 36172  0067E8  0A00               	xorlw	0	; case 0
 36173  0067EA  B4D8               	btfsc	status,2,c
 36174  0067EC  D7E6               	goto	l2257
 36175  0067EE  0A01               	xorlw	1	; case 1
 36176  0067F0  B4D8               	btfsc	status,2,c
 36177  0067F2  D7E5               	goto	l2259
 36178  0067F4  0A03               	xorlw	3	; case 2
 36179  0067F6  B4D8               	btfsc	status,2,c
 36180  0067F8  D7E4               	goto	l2260
 36181  0067FA  0A01               	xorlw	1	; case 3
 36182  0067FC  B4D8               	btfsc	status,2,c
 36183  0067FE  D7E3               	goto	l2261
 36184  006800  0A07               	xorlw	7	; case 4
 36185  006802  B4D8               	btfsc	status,2,c
 36186  006804  D7E2               	goto	l2262
 36187  006806  0A01               	xorlw	1	; case 5
 36188  006808  B4D8               	btfsc	status,2,c
 36189  00680A  D7E1               	goto	l2263
 36190  00680C  D7E2               	goto	l2264
 36191  00680E                     __end_of__get_fat:
 36192                           	opt stack 0
 36193                           tosu	equ	0xFFF
 36194                           tosh	equ	0xFFE
 36195                           tosl	equ	0xFFD
 36196                           pclath	equ	0xFFA
 36197                           tblptru	equ	0xFF8
 36198                           tblptrh	equ	0xFF7
 36199                           tblptrl	equ	0xFF6
 36200                           tablat	equ	0xFF5
 36201                           prodh	equ	0xFF4
 36202                           prodl	equ	0xFF3
 36203                           intcon	equ	0xFF2
 36204                           intcon3	equ	0xFF0
 36205                           indf0	equ	0xFEF
 36206                           postinc0	equ	0xFEE
 36207                           fsr0h	equ	0xFEA
 36208                           fsr0l	equ	0xFE9
 36209                           wreg	equ	0xFE8
 36210                           indf1	equ	0xFE7
 36211                           postdec1	equ	0xFE5
 36212                           plusw1	equ	0xFE3
 36213                           fsr1h	equ	0xFE2
 36214                           fsr1l	equ	0xFE1
 36215                           indf2	equ	0xFDF
 36216                           postinc2	equ	0xFDE
 36217                           postdec2	equ	0xFDD
 36218                           plusw2	equ	0xFDB
 36219                           fsr2h	equ	0xFDA
 36220                           fsr2l	equ	0xFD9
 36221                           status	equ	0xFD8
 36222                           
 36223 ;; *************** function __get_data *****************
 36224 ;; Defined at:
 36225 ;;		line 1283 in file "fat16.c"
 36226 ;; Parameters:    Size  Location     Type
 36227 ;;  idx             2    0[COMRAM] unsigned int 
 36228 ;; Auto vars:     Size  Location     Type
 36229 ;;		None
 36230 ;; Return value:  Size  Location     Type
 36231 ;;                  1    wreg      unsigned char 
 36232 ;; Registers used:
 36233 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36234 ;; Tracked objects:
 36235 ;;		On entry : 0/0
 36236 ;;		On exit  : 0/0
 36237 ;;		Unchanged: 0/0
 36238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36243 ;;Total ram usage:        2 bytes
 36244 ;; Hardware stack levels used:    1
 36245 ;; This function calls:
 36246 ;;		Nothing
 36247 ;; This function is called by:
 36248 ;;		_fat_format
 36249 ;; This function uses a non-reentrant model
 36250 ;;
 36251                           
 36252                           	psect	text187
 36253  007054                     __ptext187:
 36254                           	opt stack 0
 36255  007054                     __get_data:
 36256                           	opt stack 27
 36257                           
 36258                           ;fat16.c: 1285: if(idx < 12)
 36259                           
 36260                           ;incstack = 0
 36261  007054  5002               	movf	__get_data@idx+1,w,c
 36262  007056  E110               	bnz	l11803
 36263  007058  0E0C               	movlw	12
 36264  00705A  5C01               	subwf	__get_data@idx,w,c
 36265  00705C  B0D8               	btfsc	status,0,c
 36266  00705E  D00C               	goto	l2300
 36267                           
 36268                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 36269  007060  0ECF               	movlw	low STR_12
 36270  007062  2401               	addwf	__get_data@idx,w,c
 36271  007064  6EF6               	movwf	tblptrl,c
 36272  007066  0E8F               	movlw	high STR_12
 36273  007068  2002               	addwfc	__get_data@idx+1,w,c
 36274  00706A  6EF7               	movwf	tblptrh,c
 36275  00706C                     	if	1	;There are 3 active tblptr bytes
 36276  00706C  6AF8               	clrf	tblptru,c
 36277  00706E  0E00               	movlw	low (__mediumconst shr (0+16))
 36278  007070  22F8               	addwfc	tblptru,f,c
 36279  007072                     	endif
 36280  007072  0008               	tblrd		*
 36281  007074  50F5               	movf	tablat,w,c
 36282  007076  0012               	return	
 36283  007078                     l2300:
 36284  007078                     l11803:
 36285                           
 36286                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 36287  007078  0E00               	movlw	0
 36288  00707A  0012               	return	
 36289  00707C                     __end_of__get_data:
 36290                           	opt stack 0
 36291                           tosu	equ	0xFFF
 36292                           tosh	equ	0xFFE
 36293                           tosl	equ	0xFFD
 36294                           pclath	equ	0xFFA
 36295                           tblptru	equ	0xFF8
 36296                           tblptrh	equ	0xFF7
 36297                           tblptrl	equ	0xFF6
 36298                           tablat	equ	0xFF5
 36299                           prodh	equ	0xFF4
 36300                           prodl	equ	0xFF3
 36301                           intcon	equ	0xFF2
 36302                           intcon3	equ	0xFF0
 36303                           indf0	equ	0xFEF
 36304                           postinc0	equ	0xFEE
 36305                           fsr0h	equ	0xFEA
 36306                           fsr0l	equ	0xFE9
 36307                           wreg	equ	0xFE8
 36308                           indf1	equ	0xFE7
 36309                           postdec1	equ	0xFE5
 36310                           plusw1	equ	0xFE3
 36311                           fsr1h	equ	0xFE2
 36312                           fsr1l	equ	0xFE1
 36313                           indf2	equ	0xFDF
 36314                           postinc2	equ	0xFDE
 36315                           postdec2	equ	0xFDD
 36316                           plusw2	equ	0xFDB
 36317                           fsr2h	equ	0xFDA
 36318                           fsr2l	equ	0xFD9
 36319                           status	equ	0xFD8
 36320                           
 36321 ;; *************** function _USBTransferOnePacket *****************
 36322 ;; Defined at:
 36323 ;;		line 995 in file "usb_device.c"
 36324 ;; Parameters:    Size  Location     Type
 36325 ;;  ep              1    wreg     unsigned char 
 36326 ;;  dir             1    0[COMRAM] unsigned char 
 36327 ;;  data            2    1[COMRAM] PTR unsigned char 
 36328 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 36329 ;;		 -> msd_cbw(31), NULL(0), 
 36330 ;;  len             1    3[COMRAM] unsigned char 
 36331 ;; Auto vars:     Size  Location     Type
 36332 ;;  ep              1    8[COMRAM] unsigned char 
 36333 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 36334 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 36335 ;; Return value:  Size  Location     Type
 36336 ;;                  2    0[COMRAM] PTR void 
 36337 ;; Registers used:
 36338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36339 ;; Tracked objects:
 36340 ;;		On entry : 0/0
 36341 ;;		On exit  : 0/0
 36342 ;;		Unchanged: 0/0
 36343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36345 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36347 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36348 ;;Total ram usage:       11 bytes
 36349 ;; Hardware stack levels used:    1
 36350 ;; This function calls:
 36351 ;;		Nothing
 36352 ;; This function is called by:
 36353 ;;		_USBMSDInit
 36354 ;;		_USBCheckMSDRequest
 36355 ;;		_MSDTasks
 36356 ;;		_MSDProcessCommandMediaPresent
 36357 ;;		_MSDReadHandler
 36358 ;;		_MSDWriteHandler
 36359 ;;		_MSDTransferTerminated
 36360 ;;		_APP_DeviceCustomHIDInitialize
 36361 ;;		_APP_DeviceCustomHIDTasks
 36362 ;; This function uses a non-reentrant model
 36363 ;;
 36364                           
 36365                           	psect	text188
 36366  004112                     __ptext188:
 36367                           	opt stack 0
 36368  004112                     _USBTransferOnePacket:
 36369                           	opt stack 27
 36370                           
 36371                           ;incstack = 0
 36372                           ;USBTransferOnePacket@ep stored from wreg
 36373  004112  6E09               	movwf	USBTransferOnePacket@ep,c
 36374                           
 36375                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 36376  004114  5001               	movf	USBTransferOnePacket@dir,w,c
 36377  004116  B4D8               	btfsc	status,2,c
 36378  004118  D007               	goto	l183
 36379                           
 36380                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 36381  00411A  5009               	movf	USBTransferOnePacket@ep,w,c
 36382  00411C  0D02               	mullw	2
 36383  00411E  0E75               	movlw	low _pBDTEntryIn
 36384  004120  24F3               	addwf	prodl,w,c
 36385  004122  6ED9               	movwf	fsr2l,c
 36386  004124  0E00               	movlw	high _pBDTEntryIn
 36387  004126  D006               	goto	L43
 36388  004128                     l183:
 36389                           
 36390                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 36391  004128  5009               	movf	USBTransferOnePacket@ep,w,c
 36392  00412A  0D02               	mullw	2
 36393  00412C  0E39               	movlw	low _pBDTEntryOut
 36394  00412E  24F3               	addwf	prodl,w,c
 36395  004130  6ED9               	movwf	fsr2l,c
 36396  004132  0E01               	movlw	high _pBDTEntryOut
 36397  004134                     L43:
 36398  004134  20F4               	addwfc	prodh,w,c
 36399  004136  6EDA               	movwf	fsr2h,c
 36400  004138  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 36401  00413C  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 36402                           
 36403                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 36404  004140  500A               	movf	USBTransferOnePacket@handle,w,c
 36405  004142  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 36406  004144  A4D8               	btfss	status,2,c
 36407  004146  D005               	goto	l185
 36408                           
 36409                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 36410  004148  0E00               	movlw	0
 36411  00414A  6E01               	movwf	?_USBTransferOnePacket,c
 36412  00414C  0E00               	movlw	0
 36413  00414E  6E02               	movwf	?_USBTransferOnePacket+1,c
 36414  004150  0012               	return	
 36415  004152                     l185:
 36416                           
 36417                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 36418  004152  EE20 F002          	lfsr	2,2
 36419  004156  500A               	movf	USBTransferOnePacket@handle,w,c
 36420  004158  26D9               	addwf	fsr2l,f,c
 36421  00415A  500B               	movf	USBTransferOnePacket@handle+1,w,c
 36422  00415C  22DA               	addwfc	fsr2h,f,c
 36423  00415E  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 36424  004162  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 36425                           
 36426                           ;usb_device.c: 1030: handle->CNT = len;
 36427  004166  EE20 F001          	lfsr	2,1
 36428  00416A  500A               	movf	USBTransferOnePacket@handle,w,c
 36429  00416C  26D9               	addwf	fsr2l,f,c
 36430  00416E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 36431  004170  22DA               	addwfc	fsr2h,f,c
 36432  004172  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 36433                           
 36434                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 36435  004176  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36436  00417A  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36437  00417E  0E40               	movlw	64
 36438  004180  16DF               	andwf	indf2,f,c
 36439                           
 36440                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 36441  004182  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36442  004186  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36443  00418A  0E00               	movlw	0
 36444  00418C  86DB               	bsf	plusw2,3,c
 36445                           
 36446                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 36447  00418E  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36448  004192  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36449  004196  0E00               	movlw	0
 36450  004198  8EDB               	bsf	plusw2,7,c
 36451                           
 36452                           ;usb_device.c: 1036: if(dir != 0)
 36453  00419A  5001               	movf	USBTransferOnePacket@dir,w,c
 36454  00419C  B4D8               	btfsc	status,2,c
 36455  00419E  D018               	goto	l187
 36456                           
 36457                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 36458  0041A0  5009               	movf	USBTransferOnePacket@ep,w,c
 36459  0041A2  0D02               	mullw	2
 36460  0041A4  0E75               	movlw	low _pBDTEntryIn
 36461  0041A6  24F3               	addwf	prodl,w,c
 36462  0041A8  6ED9               	movwf	fsr2l,c
 36463  0041AA  0E00               	movlw	high _pBDTEntryIn
 36464  0041AC  20F4               	addwfc	prodh,w,c
 36465  0041AE  6EDA               	movwf	fsr2h,c
 36466  0041B0  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 36467  0041B4  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 36468  0041B8  0E04               	movlw	4
 36469  0041BA  1805               	xorwf	??_USBTransferOnePacket,w,c
 36470  0041BC  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 36471  0041BE  5006               	movf	??_USBTransferOnePacket+1,w,c
 36472  0041C0  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 36473  0041C2  5009               	movf	USBTransferOnePacket@ep,w,c
 36474  0041C4  0D02               	mullw	2
 36475  0041C6  0E75               	movlw	low _pBDTEntryIn
 36476  0041C8  24F3               	addwf	prodl,w,c
 36477  0041CA  6ED9               	movwf	fsr2l,c
 36478  0041CC  0E00               	movlw	high _pBDTEntryIn
 36479  0041CE  D017               	goto	L44
 36480  0041D0                     l187:
 36481                           
 36482                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 36483  0041D0  5009               	movf	USBTransferOnePacket@ep,w,c
 36484  0041D2  0D02               	mullw	2
 36485  0041D4  0E39               	movlw	low _pBDTEntryOut
 36486  0041D6  24F3               	addwf	prodl,w,c
 36487  0041D8  6ED9               	movwf	fsr2l,c
 36488  0041DA  0E01               	movlw	high _pBDTEntryOut
 36489  0041DC  20F4               	addwfc	prodh,w,c
 36490  0041DE  6EDA               	movwf	fsr2h,c
 36491  0041E0  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 36492  0041E4  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 36493  0041E8  0E04               	movlw	4
 36494  0041EA  1805               	xorwf	??_USBTransferOnePacket,w,c
 36495  0041EC  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 36496  0041EE  5006               	movf	??_USBTransferOnePacket+1,w,c
 36497  0041F0  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 36498  0041F2  5009               	movf	USBTransferOnePacket@ep,w,c
 36499  0041F4  0D02               	mullw	2
 36500  0041F6  0E39               	movlw	low _pBDTEntryOut
 36501  0041F8  24F3               	addwf	prodl,w,c
 36502  0041FA  6ED9               	movwf	fsr2l,c
 36503  0041FC  0E01               	movlw	high _pBDTEntryOut
 36504  0041FE                     L44:
 36505  0041FE  20F4               	addwfc	prodh,w,c
 36506  004200  6EDA               	movwf	fsr2h,c
 36507  004202  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 36508  004206  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 36509                           
 36510                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 36511  00420A  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 36512  00420E  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 36513  004212  0012               	return	
 36514  004214                     __end_of_USBTransferOnePacket:
 36515                           	opt stack 0
 36516                           tosu	equ	0xFFF
 36517                           tosh	equ	0xFFE
 36518                           tosl	equ	0xFFD
 36519                           pclath	equ	0xFFA
 36520                           tblptru	equ	0xFF8
 36521                           tblptrh	equ	0xFF7
 36522                           tblptrl	equ	0xFF6
 36523                           tablat	equ	0xFF5
 36524                           prodh	equ	0xFF4
 36525                           prodl	equ	0xFF3
 36526                           intcon	equ	0xFF2
 36527                           intcon3	equ	0xFF0
 36528                           indf0	equ	0xFEF
 36529                           postinc0	equ	0xFEE
 36530                           fsr0h	equ	0xFEA
 36531                           fsr0l	equ	0xFE9
 36532                           wreg	equ	0xFE8
 36533                           indf1	equ	0xFE7
 36534                           postdec1	equ	0xFE5
 36535                           plusw1	equ	0xFE3
 36536                           fsr1h	equ	0xFE2
 36537                           fsr1l	equ	0xFE1
 36538                           indf2	equ	0xFDF
 36539                           postinc2	equ	0xFDE
 36540                           postdec2	equ	0xFDD
 36541                           plusw2	equ	0xFDB
 36542                           fsr2h	equ	0xFDA
 36543                           fsr2l	equ	0xFD9
 36544                           status	equ	0xFD8
 36545                           tosu	equ	0xFFF
 36546                           tosh	equ	0xFFE
 36547                           tosl	equ	0xFFD
 36548                           pclath	equ	0xFFA
 36549                           tblptru	equ	0xFF8
 36550                           tblptrh	equ	0xFF7
 36551                           tblptrl	equ	0xFF6
 36552                           tablat	equ	0xFF5
 36553                           prodh	equ	0xFF4
 36554                           prodl	equ	0xFF3
 36555                           intcon	equ	0xFF2
 36556                           intcon3	equ	0xFF0
 36557                           indf0	equ	0xFEF
 36558                           postinc0	equ	0xFEE
 36559                           fsr0h	equ	0xFEA
 36560                           fsr0l	equ	0xFE9
 36561                           wreg	equ	0xFE8
 36562                           indf1	equ	0xFE7
 36563                           postdec1	equ	0xFE5
 36564                           plusw1	equ	0xFE3
 36565                           fsr1h	equ	0xFE2
 36566                           fsr1l	equ	0xFE1
 36567                           indf2	equ	0xFDF
 36568                           postinc2	equ	0xFDE
 36569                           postdec2	equ	0xFDD
 36570                           plusw2	equ	0xFDB
 36571                           fsr2h	equ	0xFDA
 36572                           fsr2l	equ	0xFD9
 36573                           status	equ	0xFD8
 36574                           
 36575                           	psect	text189
 36576  000000                     __ptext189:
 36577                           	opt stack 0
 36578                           tosu	equ	0xFFF
 36579                           tosh	equ	0xFFE
 36580                           tosl	equ	0xFFD
 36581                           pclath	equ	0xFFA
 36582                           tblptru	equ	0xFF8
 36583                           tblptrh	equ	0xFF7
 36584                           tblptrl	equ	0xFF6
 36585                           tablat	equ	0xFF5
 36586                           prodh	equ	0xFF4
 36587                           prodl	equ	0xFF3
 36588                           intcon	equ	0xFF2
 36589                           intcon3	equ	0xFF0
 36590                           indf0	equ	0xFEF
 36591                           postinc0	equ	0xFEE
 36592                           fsr0h	equ	0xFEA
 36593                           fsr0l	equ	0xFE9
 36594                           wreg	equ	0xFE8
 36595                           indf1	equ	0xFE7
 36596                           postdec1	equ	0xFE5
 36597                           plusw1	equ	0xFE3
 36598                           fsr1h	equ	0xFE2
 36599                           fsr1l	equ	0xFE1
 36600                           indf2	equ	0xFDF
 36601                           postinc2	equ	0xFDE
 36602                           postdec2	equ	0xFDD
 36603                           plusw2	equ	0xFDB
 36604                           fsr2h	equ	0xFDA
 36605                           fsr2l	equ	0xFD9
 36606                           status	equ	0xFD8
 36607                           
 36608                           	psect	rparam
 36609  0000                     tosu	equ	0xFFF
 36610                           tosh	equ	0xFFE
 36611                           tosl	equ	0xFFD
 36612                           pclath	equ	0xFFA
 36613                           tblptru	equ	0xFF8
 36614                           tblptrh	equ	0xFF7
 36615                           tblptrl	equ	0xFF6
 36616                           tablat	equ	0xFF5
 36617                           prodh	equ	0xFF4
 36618                           prodl	equ	0xFF3
 36619                           intcon	equ	0xFF2
 36620                           intcon3	equ	0xFF0
 36621                           indf0	equ	0xFEF
 36622                           postinc0	equ	0xFEE
 36623                           fsr0h	equ	0xFEA
 36624                           fsr0l	equ	0xFE9
 36625                           wreg	equ	0xFE8
 36626                           indf1	equ	0xFE7
 36627                           postdec1	equ	0xFE5
 36628                           plusw1	equ	0xFE3
 36629                           fsr1h	equ	0xFE2
 36630                           fsr1l	equ	0xFE1
 36631                           indf2	equ	0xFDF
 36632                           postinc2	equ	0xFDE
 36633                           postdec2	equ	0xFDD
 36634                           plusw2	equ	0xFDB
 36635                           fsr2h	equ	0xFDA
 36636                           fsr2l	equ	0xFD9
 36637                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    906
    Data        47
    BSS         2034
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     73     160
    BANK1           256      0     253
    BANK2           256      0     204
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), 
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(COMRAM[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(COMRAM[2]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_oe(CODE[8]), bit_pattern_ue(CODE[8]), bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), 
		 -> bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(COMRAM[11]), _ic2_display_set_cgram_address@data_array(COMRAM[3]), _ic2_display_set_ddram_address@data_array(COMRAM[2]), i2c_display_init@init_sequence(COMRAM[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    _system_minimal_init->_system_delay_ms
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    __bootloader_find_file->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_status
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_prepare->__display_checked
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u16
    __display_itoa_u32->___lldiv
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_format_drive
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  617550
                                             92 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   58172
                        __ui_encoder
                       _display_init
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    6488
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4550
                                             14 COMRAM    19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2009
                                             10 COMRAM     4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1938
                                             10 COMRAM    10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   51684
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      46
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32113
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6638
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138279
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62249
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53713
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35431
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7929
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22251
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7123
                                             39 COMRAM     8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7483
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5952
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2810
                                             17 COMRAM     7     5      2
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106628
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106628
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101464
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51483
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49725
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24963
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13866
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 COMRAM     4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   83083
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4    7749
                                             22 COMRAM     5     1      4
__fill_buffer_get_bootloader_details
           __fill_buffer_get_display
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    3155
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        1     1      0    2714
                                             19 COMRAM     1     1      0
                     __flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   72021
                                             53 COMRAM    11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   51706
                                             35 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   48496
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3234
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     824
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2410
                                             13 COMRAM     3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_ddram_address                       3     3      0    1984
                                             10 COMRAM     3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   45262
                                             32 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    4369
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    4530
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    4505
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0    8946
                                             21 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   13266
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    8     2      6    8561
                                             13 COMRAM     8     2      6
                            ___lldiv
                            ___llmod
                             ___wmul
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7141
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    4437
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    4439
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    4143
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2121
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3142
                                             10 COMRAM     9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    1914
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 COMRAM     1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (6) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (6) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19573
                                             46 COMRAM     7     1      6
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   19194
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_ddram_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
         _ui_get_status
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _i2c_eeprom_writeByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _jump_to_main_program
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _ui_init
   _system_minimal_init
     _i2c_init
     _system_delay_ms
   _system_minimal_init_undo
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_ddram_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _ui_get_status
       _system_delay_ms
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CC       9       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C8      31        0.0%
DATA                 0      0     8C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Dec 15 16:16:48 2019

                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E51  
                                 __system_timer0_init 71C8  
                                                  _os 0060  
                                       _USBDeviceInit 34EE  
                                 ___wmul@multiplicand 0003  
                                  _USBCheckHIDRequest 44E6  
                         ??__data_sector_from_cluster 0003  
                                    __i2c_eeprom_busy 713A  
                __bootloader_verify_file@return_value 00ED  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 000B  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4E8E  
                                                 l210 581E  
                                                 l220 423C  
                                                 l141 355C  
                                                 l214 5950  
                                                 l310 527C  
                                                 l150 2E32  
                                                 l143 3598  
                                                 l303 6E14  
                                                 l151 2E2A  
                                                 l320 64AC  
                                                 l208 5804  
                                                 l224 42BE  
                                                 l304 6E12  
                                                 l152 2E28  
                                                 l241 4CA8  
                                                 l233 4BFC  
                                                 l161 2EAA  
                                                 l242 4C70  
                                                 l330 4E38  
                                                 l322 64F6  
                                                 l235 4C06  
                                                 l331 4DFE  
                                                 l251 3A8A  
                                                 l411 4534  
                                                 l219 4294  
                                                 l139 3534  
                                                 l171 2F38  
                                                 l163 2EC0  
                                                 l155 2E4C  
                                                 l252 3A70  
                                                 l412 4502  
                                                 l260 47D4  
                                                 l164 2ECC  
                                                 l156 2E5C  
                                                 l237 4C68  
                                                 l333 4E1E  
                                                 l309 5282  
                                                 l173 2F5C  
                                                 l165 2EF4  
                                                 l157 2E64  
                                                 l238 4C30  
                                                 l422 4556  
                                                 l414 4546  
                         __end_of_USBStdGetDscHandler 3776  
                                                 l262 4848  
                                                 l350 4444  
                                                 l166 2EFE  
                                                 l158 2E78  
                                                 l183 4128  
                                                 l191 3D5C  
                                                 l423 456E  
                                                 l415 4520  
                                                 l271 3662  
                                                 l343 44A2  
                                                 l175 2F78  
                                                 l159 2E84  
                                                 l328 4DB6  
                                                 l248 3A14  
                                                 l424 457A  
                                                 l360 14FA  
                                                 l272 36F0  
                                                 l352 444A  
                                                 l344 4414  
                                                 l168 2F10  
                                                 l185 4152  
                                                 l329 4DBA  
                                                 l249 39F2  
                                                 l521 3EFA  
                                                 l425 4592  
                                                 l361 1500  
                                                 l281 5312  
                                                 l353 4468  
                                                 l610 63AE  
                                                 l178 6D4A  
                                                 l418 459E  
                                                 l530 4F1E  
                                                 l274 36F8  
                                                 l282 52A0  
                                                 l354 4484  
                                                 l346 441E  
                                                 l187 41D0  
                                                 l603 63B6  
                                                 l179 6D58  
                                                 l371 1620  
                                                 l363 156C  
                                                 l275 374E  
                                                 l347 4424  
                                                 l620 04BE  
                                                 l604 637A  
                                                 l372 163C  
                                                 l268 375E  
                                                 l348 442A  
                                                 l621 04C8  
                                                 l381 1734  
                                                 l365 15B4  
                                                 l277 3756  
                                                 l269 364E  
                                                 l285 5328  
                                                 l349 443E  
                                                 l710 45D8  
                                                 l702 1466  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6396  
                                                 l518 3F02  
                                                 l534 4F84  
                                                 l374 16A2  
                                                 l286 52B2  
                                                 l703 147E  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3E76  
                                                 l375 16AE  
                                                 l367 15D6  
                                                 l287 52B8  
                                                 l295 6BF0  
                                                 l712 45EE  
                                                 l704 1496  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 63A2  
                                                 l800 5C86  
                                                 l376 1728  
                                                 l288 52D6  
                                                 l296 6BEE  
                                                 l721 467A  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 63A8  
                                                 l561 1B0C  
                                                 l529 4FBA  
                                                 l369 1656  
                                                 l722 4664  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1BF8  
                                                 l562 1AF6  
                                                 l546 4F8C  
                                                 l810 5C78  
                                                 l715 461E  
                                                 l651 07CC  
                                                 l571 1B28  
                                                 l563 1ACA  
                                                 l555 19C8  
                                                 l379 16E2  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1AD2  
                                                 l804 5C54  
                                                 l661 58A6  
                                                 l741 3F36  
                                                 l733 468C  
                                                 l645 0784  
                                                 l573 1B3A  
                                                 l805 5C5C  
                                                 l750 3F6A  
                                                 l718 462A  
                                                 l670 2468  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1AEA  
                                                 l806 5C64  
                                                 l751 3F76  
                                                 l719 4644  
                                                 l671 2472  
                                                 l575 1B5C  
                                                 l559 19EA  
                                                 l903 68D6  
                                                 l752 3F88  
                                                 l680 25A0  
                                                 l672 2486  
                                                 l648 07CE  
                                                 l592 3B4A  
                                                 l576 1B64  
                                                 l808 5C6E  
                                                 l753 3F94  
                                                 l737 469C  
                                                 l665 25B6  
                                                 l649 07A8  
                                                 l577 1B88  
                                                 l905 68E2  
                                                 l754 3FA6  
                                                 l674 24D0  
                                                 l666 2408  
                                                 l690 12C6  
                                                 l586 1BDA  
                                                 l659 5890  
                                                 l747 3FE8  
                                                 l755 3FDC  
                                                 l675 24F8  
                                                 l691 12D2  
                                                 l748 3F62  
                                                 l668 25DA  
                                                 l676 2528  
                                                 l684 14AC  
                                                 l692 12F2  
                                                 l596 3BE2  
                                                 l764 66D4  
                                                 _BDT 000D00  
                                                 l677 253A  
                                                 l669 245C  
                                                 l693 133C  
                                                 l685 1220  
                                                 l597 3BDC  
                                                 l589 1BE2  
                                                 l942 56DE  
                                                 l678 2540  
                                                 l694 1316  
                                                 l870 4A7C  
                                                 l679 2554  
                                                 l687 14D0  
                                                 l695 1382  
                                                 l599 3BE6  
                                                 l767 670A  
                                                 l871 4A84  
                                                 l863 4A3E  
                                                 l936 567E  
                                                 l696 137A  
                                                 l688 12C0  
                                                 l872 4A8C  
                                                 l864 4A4C  
                                                 l873 4A94  
                                                 l698 1396  
                                                 l882 6522  
                                                 l866 4AB6  
                                                 l874 4A9C  
                                                 l699 13FE  
                                                 l875 4AA6  
                                                 l867 4A6C  
                                                 l868 4AFA  
                                                 l885 6548  
                                                 l869 4A74  
                                                 l886 6554  
                                                 l896 68F4  
                                                 l897 68BA  
                                                 l978 738E  
                                                 l899 68C4  
                                                 _LBA 0083  
                                       ?_display_init 0001  
                                                 _LUN 01E9  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                            __size_of__display_failed 02F2  
                                         _start_line1 8DC0  
                                         _start_line2 8E38  
                                         _start_line3 8E7E  
                                         _start_line4 8DEE  
                                  api_prepare@command 001B  
                                          _USBSuspend 6F20  
                                  _internalFlash_read 6E20  
                              __end_of_display_update 61E2  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 2E0A  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                            __size_of__display_verify 0128  
                           __size_of_i2c_display_init 0048  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 007B  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 5716  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 0017  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1041 438E  
                                                l1051 4388  
                                                l1052 43F2  
                                                l1060 43DE  
                                                l1044 434E  
                                                l1301 2C2E  
                                                l1150 7426  
                                                l2102 4770  
                                                l1062 43EC  
                                                l1055 43B2  
                                                l1047 436A  
                                                l1144 7474  
                                                l1240 5F64  
                                                l1320 3C0C  
                                                l1129 747C  
                                                l1161 6B5C  
                                                l2105 60B6  
                                                l1049 437A  
                                                l1321 3C1E  
                                                l2202 187E  
                                                l2210 179A  
                                                l1162 6B40  
                                                l1234 699E  
                                                l1138 741A  
                                                l1058 43CE  
                                                l1314 3CD2  
                                                l1322 3C32  
                                                l2211 17AA  
                                                l2203 175C  
                                                l1235 6982  
                                                l1067 717A  
                                                l2027 57A2  
                                                l1315 3BEE  
                                                l2300 7078  
                                                l2220 17FE  
                                                l2212 17BA  
                                                l1500 51D4  
                                                l1068 7168  
                                                l1156 7412  
                                                l2028 573C  
                                                l2140 1C5A  
                                                l1324 3C56  
                                                l2221 1802  
                                                l2213 17CA  
                                                l2205 1760  
                                                l2029 5786  
                                                l1325 3C7A  
                                                l2230 1826  
                                                l2222 1806  
                                                l2214 17DA  
                                                l2206 1764  
                                                l1094 7302  
                                                l2142 1E24  
                                                l2310 5528  
                                                l2231 182A  
                                                l2223 180A  
                                                l2215 17EA  
                                                l2207 1768  
                                                l1167 5B76  
                                                l2143 1D12  
                                                l1327 3C96  
                                                l2240 184E  
                                                l2232 182E  
                                                l2224 180E  
                                                l2216 17EE  
                                                l2208 177A  
                                                l1600 263A  
                                                l1168 5B5A  
                                                l2144 1D3A  
                                                l1328 3CC2  
                                                l2233 1832  
                                                l2225 1812  
                                                l2217 17F2  
                                                l2209 178A  
                                                l2145 1DE2  
                                                l1281 2B7E  
                                                l1273 2B3A  
                                                l2250 1872  
                                                l2242 1852  
                                                l2234 1836  
                                                l2226 1816  
                                                l2218 17F6  
                                                l1530 3106  
                                                l1602 2742  
                                                l2066 6322  
                                                l2306 54D8  
                                                l2251 1876  
                                                l2243 1856  
                                                l2235 183A  
                                                l2227 181A  
                                                l2219 17FA  
                                                l1611 33D0  
                                                l1603 2714  
                                                l1267 2C56  
                                                l2260 67C2  
                                                l2252 187A  
                                                l2244 185A  
                                                l2236 183E  
                                                l2228 181E  
                                                l1540 3176  
                                                l1532 311A  
                                                l1700 11AE  
                                                l1620 34CC  
                                                l1612 33A2  
                                                l2068 6374  
                                                l2340 602A  
                                                l2500 0D60  
                                                l1268 2B1A  
                                                l2261 67C6  
                                                l2245 185E  
                                                l2237 1842  
                                                l2229 1822  
                                                l2181 4CB6  
                                                l1621 349E  
                                                l1605 2796  
                                                l1189 6884  
                                                l2093 4786  
                                                l2501 0DDA  
                                                l1293 2BE0  
                                                l1285 2B9C  
                                                l1277 2B58  
                                                l2262 67CA  
                                                l2246 1862  
                                                l2238 1846  
                                                l2190 4CDA  
                                                l2182 4CBA  
                                                l1542 318E  
                                                l1534 3130  
                                                l1630 2284  
                                                l1614 3424  
                                                l1606 2768  
                                                l2263 67CE  
                                                l2247 1866  
                                                l2239 184A  
                                                l2191 4CDE  
                                                l2183 4CBE  
                                                l2271 29C0  
                                                l1711 2894  
                                                l1615 33F6  
                                                l2503 0E3A  
                                                l2256 67D6  
                                                l2264 67D2  
                                                l2248 186A  
                                                l2192 4CE2  
                                                l2184 4CC2  
                                                l2280 2A44  
                                                l1720 2FB4  
                                                l1544 31A2  
                                                l1536 3146  
                                                l1632 2306  
                                                l1712 2866  
                                                l2096 46FC  
                                                l2520 0BF6  
                                                l2504 0E6C  
                                                l2257 67BA  
                                                l2249 186E  
                                                l2193 4CE6  
                                                l2185 4CC6  
                                                l2281 2A48  
                                                l2273 29F8  
                                                l1721 2F86  
                                                l1633 22D8  
                                                l1705 27EC  
                                                l1617 3478  
                                                l2361 6F8E  
                                                l2521 09FE  
                                                l2513 08A0  
                                                l2505 0E9A  
                                                l1297 2BFE  
                                                l1289 2BBA  
                                                l2178 4CFE  
                                                l2194 4CEA  
                                                l2186 4CCA  
                                                l2290 2A6C  
                                                l2282 2A4C  
                                                l1730 30A2  
                                                l1546 31B6  
                                                l1538 315E  
                                                l1626 225E  
                                                l1714 2940  
                                                l1706 27BE  
                                                l1618 344A  
                                                l1650 3852  
                                                l2338 5FC8  
                                                l2530 0BA6  
                                                l2506 0EF6  
                                                l2259 67BE  
                                                l2195 4CEE  
                                                l2187 4CCE  
                                                l2179 4CB2  
                                                l2275 2A88  
                                                l2291 2A70  
                                                l2283 2A50  
                                                l1723 3008  
                                                l1635 2390  
                                                l1627 2230  
                                                l1715 2912  
                                                l1651 3824  
                                                l2363 6F98  
                                                l2515 092A  
                                                l2196 4CF2  
                                                l2188 4CD2  
                                                l2292 2A74  
                                                l2284 2A54  
                                                l2276 2A34  
                                                l1812 5EE4  
                                                l1660 2CEC  
                                                l1724 2FDA  
                                                l1636 2358  
                                                l1708 2840  
                                                l1644 37AA  
                                                l1580 4962  
                                                l2612 6176  
                                                l2380 0188  
                                                l2532 0BC2  
                                                l2524 0A3A  
                                                l2516 0992  
                                                l2508 0F18  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 4CF6  
                                                l2189 4CD6  
                                                l2293 2A78  
                                                l2285 2A58  
                                                l2277 2A38  
                                                l2269 29B2  
                                                l1813 5EEE  
                                                l1493 5174  
                                                l1629 22B2  
                                                l1709 2812  
                                                l1741 327E  
                                                l1645 377C  
                                                l1581 4968  
                                                l2621 504C  
                                                l2365 6FA6  
                                                l2517 09EC  
                                                l2198 4CFA  
                                                l2294 2A7C  
                                                l2286 2A5C  
                                                l2278 2A3C  
                                                l1662 2D94  
                                                l1486 6AE6  
                                                l1726 305C  
                                                l1638 23E4  
                                                l1750 337A  
                                                l1742 3250  
                                                l1590 49E8  
                                                l1582 496E  
                                                l2710 489A  
                                                l2390 0458  
                                                l2382 033E  
                                                l2526 0AE8  
                                                l2470 6206  
                                                l2295 2A80  
                                                l2287 2A60  
                                                l2279 2A40  
                                                l1815 5F26  
                                                l1831 69C0  
                                                l1663 2D5C  
                                                l1727 302E  
                                                l1671 0F60  
                                                l1639 23B6  
                                                l1735 6740  
                                                l1751 334C  
                                                l1647 37FE  
                                                l1591 4A1A  
                                                l1575 498C  
                                                l1583 4974  
                                                l2711 48A8  
                                                l2383 0310  
                                                l2527 0BAC  
                                                l2296 2A84  
                                                l2288 2A64  
                                                l1840 65CE  
                                                l1832 69CA  
                                                l1496 5194  
                                                l1656 2CC6  
                                                l1488 6AF2  
                                                l1680 0FDA  
                                                l1672 0F32  
                                                l1736 6712  
                                                l1744 32D2  
                                                l1648 37D0  
                                                l1584 497A  
                                                l1576 4950  
                                                l2712 48BA  
                                                l2480 4B0C  
                                                l2392 048A  
                                                l2376 003E  
                                                l2528 0AF2  
                                                l2464 6218  
                                                l2297 2B14  
                                                l2289 2A68  
                                                l1817 5F44  
                                                l3353 6928  
                                                l1665 2DE8  
                                                l1657 2C98  
                                                l1729 30D0  
                                                l1745 32A4  
                                                l1585 4980  
                                                l2713 48CC  
                                                l2481 4B62  
                                                l2625 703A  
                                                l2385 039C  
                                                l2529 0B6A  
                                                l2473 620C  
                                                l2465 61EE  
                                                l3354 6920  
                                                l1498 51B4  
                                                l1666 2DBA  
                                                l3282 62CE  
                                                l1682 11A8  
                                                l1674 0FB4  
                                                l1586 4986  
                                                l1578 4956  
                                                l2730 395A  
                                                l2722 3908  
                                                l2714 48DA  
                                                l2634 6E54  
                                                l2618 5082  
                                                l2386 03C0  
                                                l2378 00B4  
                                                l3363 6CD2  
                                                l1659 2D1A  
                                                l3283 62C2  
                                                l1675 0F86  
                                                l1747 3326  
                                                l1587 49F0  
                                                l1579 495C  
                                                l2707 4920  
                                                l2715 4902  
                                                l2491 565C  
                                                l2483 4BB8  
                                                l2619 5040  
                                                l2379 0202  
                                                l3364 6CCA  
                                                l1692 10F8  
                                                l1684 1058  
                                                l1596 2614  
                                                l1748 32F8  
                                                l1588 49DC  
                                                l2724 390E  
                                                l2740 50D0  
                                                l2484 4BBA  
                                                l2388 0426  
                                                l2468 61FA  
                                                l1845 71C4  
                                                l3357 6948  
                                                l3541 553A  
                                                l2901 5D8A  
                                                l1677 1186  
                                                l1693 10CA  
                                                l1685 102A  
                                                l1597 25E6  
                                                l1589 49E2  
                                                l2485 4BC4  
                                                l3358 6952  
                                                l2902 5D7E  
                                                l3286 62F6  
                                                l2726 3982  
                                                l2750 21F2  
                                                l2742 510E  
                                                l3550 6260  
                                                l1839 65C4  
                                                l3367 6CEA  
                                                l3543 5574  
                                                l3287 6304  
                                                l1679 1008  
                                                l1599 2668  
                                                l2727 3928  
                                                l2719 38BA  
                                                l2751 2220  
                                                l2743 50DA  
                                                l1943 6EA4  
                                                l2479 4BD0  
                                                l3368 6CF4  
                                                l3544 55B2  
                                                l1696 1148  
                                                l1688 10A8  
                                                l2760 5AC8  
                                                l2728 39B8  
                                                l2752 21F8  
                                                l2744 50E6  
                                                l2496 0C4C  
                                                l3537 6C9E  
                                                l2905 5DBE  
                                                l1697 111A  
                                                l1689 107A  
                                                l2761 5AE4  
                                                l2729 3940  
                                                l2497 0C70  
                                                l2850 6658  
                                                l1794 67A6  
                                                l2770 6DAC  
                                                l2906 5DCC  
                                                l2762 5B00  
                                                l2738 5096  
                                                l1786 5E16  
                                                l2842 6D26  
                                                l1795 6764  
                                                l1699 11DC  
                                                l2763 5B06  
                                                l1939 6ED6  
                                                l3555 6FF0  
                                                l2499 0CF8  
                                                l1787 5E42  
                                                l2843 6D02  
                                                l2764 5B0C  
                                                l3556 6FE0  
                                                l2844 6D34  
                                                l1797 678C  
                                                l2757 5B12  
                                                l3549 629E  
                                                l2845 6D14  
                                                l2774 537A  
                                                l2758 5AAC  
                                                l3567 5D42  
                                                l2856 5C16  
                                                l2768 6D9C  
                                                l3568 5CDA  
                                                l2865 59D2  
                                                l2769 6D7C  
                                                l3569 5D3A  
                                                l2778 53E4  
                                                l2859 5C4A  
                                                l2868 5A0E  
                           ?__offset_from_file_number 0001  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8D90  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8C5A  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E51  
                               __end_of_checked_line4 8CEF  
                                      _bootloader_run 61E2  
                                 ?_internalFlash_read 000E  
                                                u7030 692C  
                                                u8000 51A0  
                                                u7130 6562  
                                                u8010 51C0  
                                                u7140 656E  
                                                u7060 6CD6  
                                                u7150 657A  
                                                u7160 6586  
                                                u8120 3246  
                                                u8200 4C58  
                                                u7170 6592  
                                                u7138 6564  
                                                u8130 6ED2  
                                                u7180 659C  
                                                u7148 6570  
                                                u8140 6EA0  
                                                u8220 4C98  
                                                u7158 657C  
                                                u7255 5EFA  
                                                u8207 4C4E  
                               ??_USBCtrlTrfTxService 0001  
                                                u7168 6588  
                                                u8240 6280  
                                                u7345 65DA  
                                                u7186 659E  
                                                u7178 6594  
                                                u7610 62D2  
                                                u9210 36BA  
                                                u8227 4C8E  
                                                u8500 1438  
                                                u7428 3E96  
                                                u9220 36EA  
                                                u9061 29CA  
                                                u7365 5E70  
                                                u7429 3EA8  
                                                u8318 24AA  
                                                u8510 143A  
                                                u8247 6276  
                                                u8319 24BE  
                                                _UCFG 000F39  
                                                u8600 6B1E  
                                                u7464 3EEC  
                                                u7448 3EBA  
                                                u9240 3742  
                                                u8265 242E  
                                                u7465 3EE6  
                                                u7449 3ECE  
                                                u9217 36B0  
                                                u7490 3F22  
                                                u7730 4F66  
                                                u9170 4800  
                                                u9227 36E0  
                                                u7580 5D8E  
                                                _UEP0 000F26  
                                                _UEP1 000F27  
                                                u7910 4688  
                                                u8375 1246  
                                                u9247 3738  
                                                u8528 1440  
                                                u8529 1454  
                                                u7930 4698  
                                                u8458 1348  
                                                u8459 135C  
                                                _UEIE 000F37  
                                                u7860 4660  
                                                u9460 16C8  
                                                u8398 127A  
                                                u9630 074C  
                                                u8399 128E  
                                                u9800 1F5C  
                                                u9720 1E6C  
                                                u9640 075E  
                                                u9560 062C  
                                                u9528 052C  
                                                u9529 0540  
                                                u9705 70DA  
                                                u7890 4676  
                                                u9538 055C  
                                                u9539 0570  
                                                u9820 1F8C  
                                                u9740 1EB0  
                                                u9670 07D6  
                                                u9840 1FC6  
                                                u9760 1EF4  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9578 064C  
                                                u9579 0660  
                                                u9860 1FF4  
                                                u9780 1F2E  
                                                u9880 2024  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                                api_parse@out_idx_ptr 003D  
                                      _ResetSenseData 63DA  
                                                _enc1 0097  
                                                _enc2 0096  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0179  
                                                _main 4A26  
                             _bit_pattern_verticalbar 8FB7  
                                                _itoa 6C7A  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4A26  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5532  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                             __bootloader_verify_file 0C0E  
                           _ExternalFlash_MediaDetect 74B2  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 73DC  
                               _display_get_character 7002  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8D80  
                                __end_of_failed_line2 8CCC  
                                __end_of_failed_line4 8E49  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 44E6  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0171  
                    __end_of__fat_sector_from_cluster 731C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 2E0A  
                                      _hex_file_entry 01CB  
                              _bootloader_get_entries 7454  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 6EEE  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 016D  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                                               l12103 05FC  
                                               l10273 451A  
                                               l10541 311A  
                                               l12311 1E88  
                                               l10391 462A  
                                               l10463 68E2  
                                               l13015 46DE  
                                               l12401 1FFC  
                                               l10561 318E  
                                               l10553 315E  
                                               l10545 3130  
                                               l10537 3106  
                                               l10459 68C4  
                                               l12325 1ECC  
                                               l10573 31BE  
                                               l10557 3176  
                                               l10549 3146  
                                               l10717 6260  
                                               l10637 6FE0  
                                               l13133 54AA  
                                               l12351 1F36  
                                               l13151 54FA  
                                               l12361 1F5C  
                                               l13049 4786  
                                               l11803 7078  
                                               l12363 1F64  
                                               l12339 1F10  
                                               l13323 5038  
                                               l14107 0C68  
                                               l13405 50DE  
                                               l10685 4C06  
                                               l10943 6AEA  
                                               l11681 29B2  
                                               l12377 1FA8  
                                               l12297 1E44  
                                               l10937 6ADE  
                                               l13257 4B62  
                                               l13329 5044  
                                               l10795 25B0  
                                               l12389 1FCE  
                                               l11695 29F8  
                                               l11687 29C0  
                                               l12399 1FF4  
                                               l11871 47CC  
                                               l13543 352C  
                                               l14239 0B6A  
                                               l11787 2A88  
                                               l13571 3590  
                                               l14365 2F08  
                                               l13681 19E2  
                                               l12699 5CDA  
                                               l15621 5CD2  
                                               l12981 5DE0  
                                               l13847 3956  
                                               l15633 1896  
                                               l12969 5F5C  
                                        spi_tx@length 0003  
                                               l15635 19AE  
                                               l15619 5C9E  
                                  ?__flash_get_status 000D  
                                      ??_display_init 0022  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5DDE  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10130 5772  
                                               u11020 5066  
                                               u10215 603C  
                                               u11120 3550  
                                               u10065 6C0A  
                                               u10410 3B18  
                                               u10170 6370  
                                               u10235 6F5E  
                                               u11070 510C  
                                               u11150 35F4  
                                               u10190 5D0A  
                                               u12030 08EC  
                                               u10510 5FA8  
                                               u10280 5376  
                                               u10424 3B2E  
                                               u10425 3B28  
                                               u10434 3B60  
                                               u10610 477C  
                                               u10435 3B5A  
                                               u10620 4786  
                                               u11270 19DE  
                                               u10800 00A2  
                                     __end_of___llmod 6316  
                                               u10474 3BB2  
                                               u10458 3B82  
                                               u11290 1A12  
                              __end_of_USBDeviceTasks 2F80  
                                               u11610 2B6C  
                                               u10475 3BAC  
                                               u10459 3B94  
                                               u10491 6A9C  
                                               u11460 1BBC  
                                               u10900 4B8E  
                                               u10660 6026  
                                               u10398 3AE6  
                                               u12350 2F7C  
                                               u10670 1C34  
                                               u10750 54DE  
                                               u11710 2C12  
                                               u11630 2B92  
                                               u10399 3AFA  
                                               u12450 5698  
                                               u11730 2C44  
                                               u11650 2BB0  
                                               u11570 2B30  
                                               u11475 686E  
                                               u10675 1C2A  
                                               u10780 552E  
                                               u12470 56AC  
                                               u12390 6550  
                                               u11670 2BCE  
                                               u11590 2B4E  
                                               u10695 1CCC  
                                               u10880 4B32  
                                               u10960 6142  
                                               u11930 0CBA  
                                               u11690 2BF4  
                                               u10955 729E  
                                               u10980 5002  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12860 3CBC  
                                               u12780 3BFC  
                                               u12790 3C44  
                                               u13847 6AAC  
                                               u13857 6ABE  
                                               u13867 716E  
                                               u13877 677E  
                                               u13887 6790  
                                               u13897 679A  
                                     __end_of___lwdiv 695C  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0016  
                                     __end_of___lwmod 6CFE  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                               _PORTA 000F80  
                                               _PORTE 000F84  
                               ??__parse_format_drive 002D  
                                _file_minimum_address 0147  
                                    ??__display_start 001D  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FB  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 00D2  
                           __end_of__find_nth_cluster 57B4  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 1C16  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 4F0A  
                     __end_of_internalFlash_getBuffer 740E  
                     __end_of_USBCtrlEPAllowDataStage 5852  
                                               _sd000 8FCB  
                                               _sd001 8EBF  
                                               _sd002 8EF3  
                                               _sd003 8F62  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 624A  
                       __end_of_MSDTransferTerminated 670C  
               __i2c_display_send_init_sequence@F6826 02BB  
                                        _gblCBWLength 009B  
                           ??_internalFlash_writePage 000B  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                              __end_of_ResetSenseData 643C  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 002F  
                           __data_sector_from_cluster 73EA  
                           fat_get_format_status@cntr 002E  
                                               pclath 000FFA  
                                     __end_of_ui_init 7386  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 009F  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 6178  
                          __end_of__display_rebooting 6762  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 0020  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5D5C  
                               hexCharsToUint8@retVal 0006  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                                      _MSDReadHandler 2406  
         i2c_display_program_custom_character@address 0020  
                        __size_of_USBStdSetCfgHandler 00E0  
               __bootloader_check_address@byte_status 000B  
                       internalFlash_readPage@address 0018  
                                     __initialization 53E8  
                           __end_of__flash_get_status 6F20  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                                 _system_minimal_init 7334  
               __end_of_ExternalFlash_MediaInitialize 72EA  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 72D0  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 001C  
                                         _FileAddress 0163  
                                        __end_of_main 4B02  
                                        __end_of_itoa 6CBC  
                       __end_of_system_encoder_enable 7262  
                          i2c_eeprom_readByte@address 0012  
              __end_of__ic2_display_set_ddram_address 7228  
             __size_of__ic2_display_set_ddram_address 0020  
                      __ic2_display_set_ddram_address 7208  
                     __end_of_i2c_display_write_fixed 69AC  
                                        __end_of_utoa 55D6  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 6558  
                                    _timer_pseudo_isr 4314  
                       fat_read_from_file_fast@offset 00BA  
                            __parse_command_short@cmd 0024  
                  fat_read_from_file_fast@read_length 00BE  
                                    __end_of_i2c_init 727E  
                       fat_read_from_file_fast@sector 00B6  
                            __end_of__i2c_acknowledge 742C  
                                     _hex_file_offset 007F  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 734A  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 016B  
                                api_prepare@outBuffer 0019  
                                              ??_main 005D  
                                    __end_of__i2c_get 7422  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 017A  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00CC  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 5FBC  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 74B2  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 74AE  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00DE  
                               ??__bootloader_program 00C4  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                _i2c_eeprom_writeByte 6BF4  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                          __end_of__display_suspended 339C  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7160  
                              __flash_write_to_buffer 69AC  
              __end_of__ic2_display_set_cgram_address 70A2  
             __size_of__ic2_display_set_cgram_address 0026  
                      __ic2_display_set_cgram_address 707C  
                                _start_from_byte_next 0092  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 7334  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 001D  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 747A  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 6B22  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 00C4  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 680E  
                                    __end_of__get_fbr 19BE  
                                    __end_of__get_mbr 4D7E  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPOR21 000ED5  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 0054  
                                   ??__display_verify 001D  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 25E0  
                                 _flash_pages_written 0165  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 55D6  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 73CC  
                   __bootloader_program@page_to_write 00FD  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00AD  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 5084  
                        __end_of__flash_set_page_size 5E58  
                                     _hexCharsToUint8 727E  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 609E  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                              ___wmul 7114  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2932 0003  
                                          _SoftDetach 009A  
                                           ??___lwmod 0005  
                                              _buffer 02CC  
                                   _USBEnableEndpoint 6D3A  
                       __bootloader_program@address32 00F6  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 624A  
                                  ?_fat_get_file_size 0036  
                                              _memset 6FD6  
                    __end_of__sector_from_file_number 6FD6  
                                              clear_0 5442  
                                              clear_1 5456  
                                              clear_2 5468  
                                              clear_3 5474  
                                              clear_4 5480  
                           _ExternalFlash_SectorWrite 6E8A  
                                   api_parse@inBuffer 0036  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F45  
                                              _reboot 72EA  
                __bootloader_check_address@worst_case 000A  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 3BEC  
                                              _spi_tx 6608  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0009  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 70A2  
                                              _tx_buf 02C4  
                               i2c_display_init@F6829 02B2  
                          __parse_command_long@length 0035  
            i2c_display_program_custom_character@cntr 0021  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                        __end_of_jump_to_main_program 7490  
                               __end_of_fat_find_file 478A  
                      __parse_command_long@out_buffer 0031  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 0092  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 8C44  
                          __size_of__find_nth_cluster 009E  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 649C  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 643C  
                                              tblptru 000FF8  
                                    __end_of_spi_init 6D3A  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                 ?_flash_partial_read 0028  
                                    _i2c_display_init 6A92  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 6378  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 74A8  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AC  
                          ??_APP_DeviceCustomHIDTasks 0041  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 68B6  
                            __end_of__i2c_eeprom_busy 7160  
                                          __accesstop 0060  
                             __end_of__initialization 5488  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                __end_of_display_init 6A48  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0172  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7418  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 6DB0  
                   __end_of_failed_line3_noNextRecord 8DEE  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 610C  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 6D76  
                            _bootloader_get_file_size 73AA  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8EF3  
                                       __end_of_sd002 8F21  
                                       __end_of_sd003 8F7C  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 74B6  
                                        __pidataBANK1 7360  
                                        __pidataBANK2 72B6  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7468  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 745E  
                ExternalFlash_SectorWrite@sector_addr 0027  
                     __end_of_bit_pattern_verticalbar 8FBF  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 00B2  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 0F2C  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4E46  
                                 _userInterfaceStatus 0095  
                                 display_prepare@mode 0023  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3F0A  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                       __size_of__display_programming 01CA  
                             __end_of_system_delay_ms 7184  
                                  __size_of_api_parse 0124  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0169  
                      __end_of_failed_line3_startCode 8C95  
                                  _flash_sector_write 6A48  
                                  __size_of__spi_init 0038  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8D70  
                                        _failed_line2 8CBA  
                                        _failed_line4 8E41  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A1  
                           __end_of_SYSTEM_Initialize 690A  
                                   __end_of__i2c_read 5BC6  
                                   __end_of__i2c_send 748A  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5294  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 747A  
                                         ?__i2c_start 0001  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                    __size_of_i2c_display_write_fixed 0050  
                                    _USBStallEndpoint 3CFC  
                        __size_of_i2c_eeprom_readByte 0054  
                                          _gblNumBLKS 014F  
                                           ?_i2c_init 0001  
                                    _mediaInformation 01E2  
                             __end_of_hexCharsToUint8 729A  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5532  
                                       __flash_wakeup 6762  
                            __fill_buffer_get_display 5084  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 0075  
                               __size_of__normal_mode 005C  
                         __size_of_i2c_display_cursor 001E  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4314  
               __end_of_APP_DeviceCustomHIDInitialize 6E8A  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 6E56  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                           __bootloader_check_address 4B02  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                                             ?___wmul 0001  
                                          _fat_format 1E3C  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8F7C  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001D  
                                    _USBCtrlEPService 51E8  
                                             ?_ui_run 0001  
                                          _ep_data_in 0160  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 013F  
                                  __display_clear@row 0003  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 2F80  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3ADA  
           __ic2_display_set_ddram_address@data_array 000C  
                                  _USBCheckStdRequest 4404  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8E7F  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                          _flash_init 73DC  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4CB0  
                                   __end_of__get_data 707C  
                                 _USBStdSetCfgHandler 478A  
                                  __display_done@cntr 001D  
                                   __end_of__get_root 2B18  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8D40  
                                          _done_line2 8E75  
                                          _done_line3 8D30  
                                          _done_line4 8D20  
                                             _SSP1ADD 000FC8  
                       i2c_display_init@init_sequence 000C  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7360  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0167  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 5DDE  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 4404  
                                        __normal_mode 64FC  
                          __end_of_APP_DeviceMSDTasks 7398  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 66B6  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 73F8  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00EC  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 5F48  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 5ED0  
                                          ??_i2c_init 0001  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8F8E  
                           ?__sector_from_file_number 0001  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 680E  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 00B8  
                      __end_of_bootloader_get_entries 745E  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 39C2  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3ADA  
                                     hexCharToUint8@c 0001  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
                                   __end_of__spi_init 6DE8  
                         __size_of_USBCheckHIDRequest 00E2  
                                             __Lparam 0000  
                                _jump_to_main_program 748A  
                                   __end_of_hid_rpt01 8F62  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 001D  
                             __end_of_MSDErrorHandler 4010  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 602E  
                                          _last_error 0093  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                   __end_of__data_sector_from_cluster 73F8  
                            ?_internalFlash_erasePage 0009  
                                __end_of_found_line3b 8E6E  
                                             ___lldiv 5D5C  
                                    ??_USBDeviceTasks 0020  
                                     __size_of___wmul 0026  
                                             ___llmod 62B0  
                                             ___lwdiv 690A  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 6CBC  
                                   _fast_read_cluster 00B0  
                                  __display_rebooting 670C  
                         __end_of__parse_format_drive 53E8  
      i2c_display_program_custom_character@data_array 0015  
                         __size_of_internalFlash_read 0036  
                                   ?__i2c_acknowledge 0001  
              __ic2_display_set_cgram_address@address 000E  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 7208  
                                             __pcinit 53E8  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                              __display_itoa_u32@cntr 0014  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EBF  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u16@text 001B  
                              __display_itoa_u32@text 0012  
                                      ?__display_done 0001  
                                             __ptext0 4A26  
                                             __ptext1 3BEC  
                                     __display_failed 0F2C  
                                             __ptext2 7246  
                                             __ptext3 69FC  
                                             __ptext4 5F48  
                                             __ptext5 707C  
                                             __ptext6 6A92  
                                             __ptext7 2B18  
                                             __ptext8 4314  
                                             __ptext9 73F8  
                                             _inPipes 006F  
                                     __size_of_ui_run 0110  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A2  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                  __display_itoa_u32@number_of_digits 0015  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 71E8  
                             __read_value_from_offset 6B6A  
                             _fat_read_from_file_fast 1C16  
                                        ??_USBSuspend 0018  
                                     __display_search 339C  
                                  __end_of_USBMSDInit 3F0A  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 73CC  
                                             _msd_cbw 000D40  
                                     __display_verify 3776  
                                             _msd_csw 000D80  
                                __i2c_not_acknowledge 740E  
                            __offset_from_file_number 70C8  
                                             _ui_init 7374  
                    ??__ic2_display_set_ddram_address 000B  
                     ?__ic2_display_set_ddram_address 0001  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7440  
                                  __end_of_USB_CD_Ptr 8E7D  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                               __size_of_display_init 004C  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 5CD8  
                                end_of_initialization 5488  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 66B6  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 222A  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 203C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E59  
                          __end_of_bit_pattern_degree 8FB7  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 008D  
                           __end_of_MSDProcessCommand 3BEC  
                                             itoa@buf 0011  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 0153  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 6C38  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
                               ??_USBStdSetCfgHandler 0018  
                     __parse_command_long@out_idx_ptr 0033  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                                  __display_suspended 324A  
                        ?_bootloader_get_rec_checksum 0001  
                    ??__ic2_display_set_cgram_address 000B  
                     ?__ic2_display_set_cgram_address 0001  
                                  __end_of_USBSuspend 6F50  
                             _USBCtrlEPAllowDataStage 57B4  
                                   __end_of_spi_tx_rx 5A16  
                                   __end_of_spi_tx_tx 5C52  
                            __end_of_i2c_display_init 6ADA  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7436  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 742C  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                    __size_of__fill_buffer_get_status 0102  
                                       ??__ui_encoder 0024  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4214  
                                             utoa@val 000A  
                                           _MSD_State 00A0  
                                 ?__display_suspended 0001  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 7246  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 001B  
                          _USBStatusStageEnabledFlag1 00A5  
                          _USBStatusStageEnabledFlag2 00A4  
                      __parse_format_drive@out_buffer 0029  
                                      _bit_pattern_ae 8FA7  
                                      _bit_pattern_oe 8F97  
                                      _bit_pattern_ue 8F9F  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTEbits 000F84  
                      __end_of__flash_write_to_buffer 69FC  
                                    __CFG_DSBOREN$OFF 000000  
                                        _display_init 69FC  
                      internalFlash_writePage@address 0013  
                            ?_internalFlash_writePage 0009  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                  api_parse@outBuffer 0039  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00A8  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02CC  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 695C  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                                ??__display_suspended 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B4  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DC  
                                       _checked_line1 8D80  
                                       _checked_line2 8C45  
                                       _checked_line3 8E49  
                                       _checked_line4 8CDE  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8DFD  
                             __size_of__display_start 01D8  
                                     _suspended_line1 8D10  
                                     _suspended_line2 8E25  
                                     _suspended_line3 8E7D  
                                     _suspended_line4 8D00  
                        __end_of_USBTransferOnePacket 4214  
                                   ?__i2c_eeprom_busy 0001  
                               __i2c_eeprom_busy@busy 0006  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 0011  
                        __end_of__parse_command_short 5B3A  
               __end_of_internalFlash_pageFromAddress 72B6  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 729A  
                                  ??__i2c_eeprom_busy 0006  
                                __end_of_reboot_line1 8E18  
                                __end_of_search_line1 8DC0  
                                __end_of_search_line2 8D00  
                                __end_of_search_line3 8C82  
                                __end_of_search_line4 8E38  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6316  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 121E  
                                    ?_MSDErrorHandler 0001  
                  __find_nth_cluster@sector_in_buffer 003E  
                              _USBCtrlTrfSetupHandler 5A16  
                       ??_bootloader_get_rec_checksum 0001  
                      __bootloader_program@entry_page 00CE  
                              __end_of_bit_pattern_ae 8FAF  
                              __display_checked@start 001F  
                    ExternalFlash_CapacityRead@config 0001  
                              __end_of_bit_pattern_oe 8F9F  
                              __end_of_bit_pattern_ue 8FA7  
                            __size_of_display_prepare 00DE  
                             __end_of__display_search 34EE  
                               __end_of_USBDeviceInit 363C  
               __end_of_USBIncrement1msInternalTimers 71A6  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7184  
                                     ??__display_done 001D  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                                      __end_of___wmul 713A  
                             __end_of__display_verify 389E  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 3E04  
                                 _i2c_eeprom_readByte 6862  
                 __bootloader_program@start_from_byte 00FA  
                         __end_of_system_minimal_init 734A  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8C5A  
                                      __end_of_memcpy 62B0  
                                     _MSDRetryAttempt 009C  
                                      __end_of_memset 7002  
                                      __end_of_reboot 7304  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                                   _USBBusIsSuspended 00AA  
                                      __end_of_ui_run 3CFC  
                                      __end_of_spi_tx 6660  
                                 __end_of__ui_encoder 2C92  
                           __flash_set_page_size@size 0018  
                                 start_initialization 53E8  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 4948  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0018  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 008B  
                        __end_of_USBConfigureEndpoint 5982  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 175A  
                                 __flash_partial_read 5E58  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 0200  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 0099  
                                      _hexCharToUint8 6F7E  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 4F0A  
                            _fast_read_cluster_number 00AE  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 2982  
                            __end_of_USBCtrlEPService 5294  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 71E8  
                                           __i2c_read 5B3A  
                                           __i2c_send 7482  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7472  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 001C  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 74AE  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8DDF  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 008F  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 602E  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 000E  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D60  
                                   _programming_line2 8CA8  
                                   _programming_line3 8E59  
                                   _programming_line4 8D50  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0026  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                            ??___wmul 0005  
                                 _USBStdGetDscHandler 363C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT12 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A0  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01E9  
                                         __pdataBANK2 02B2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 003A  
                                            ??_reboot 0024  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0024  
                                  __end_of__i2c_start 7482  
                                            ??_spi_tx 0005  
                                  __end_of__i2c_write 6B6A  
                            __end_of_system_full_init 6862  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B5  
                      __end_of_USBStdGetStatusHandler 533E  
                          ??_system_minimal_init_undo 0001  
                            __fat_sector_from_cluster 7304  
                         api_parse@receivedDataLength 0038  
                                    api_parse@out_idx 003F  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 4BDC  
               __end_of_internalFlash_addressFromPage 6F7E  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 6F50  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B6  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 46AA  
             __bootloader_program@address_within_page 00D0  
                             __end_of_suspended_line1 8D20  
                             __end_of_suspended_line2 8E2F  
                             __end_of_suspended_line3 8E7E  
                             __end_of_suspended_line4 8D10  
                              __end_of_hexCharToUint8 6FAA  
                           __size_of__display_checked 0178  
                                           _gblBLKLen 014B  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 71A6  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 609E  
        __end_of_i2c_display_program_custom_character 5FBC  
       __size_of_i2c_display_program_custom_character 0074  
              ??_i2c_display_program_custom_character 0011  
               ?_i2c_display_program_custom_character 000F  
                _i2c_display_program_custom_character 5F48  
                                        _found_line3b 8E67  
                                           __get_data 7054  
                                   _flash_sector_read 70EE  
                    __bootloader_program@return_value 00F2  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 6BB0  
                     __end_of_fat_read_from_file_fast 1E3C  
                                           __get_root 2982  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 6E20  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 7246  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 6BB0  
                                        _pBDTEntryOut 0139  
                                          ?__i2c_stop 0001  
                                           __read_fat 6660  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8D70  
                           __end_of_programming_line2 8CBA  
                           __end_of_programming_line3 8E60  
                           __end_of_programming_line4 8D60  
                    __end_of_ExternalFlash_SectorRead 6EEE  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7472  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7468  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 548E  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 389E  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4010  
                                  _APP_DeviceMSDTasks 7386  
                                       __pmediumconst 8C44  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 6E8A  
                                           __ptext101 2406  
                                           __ptext110 742C  
                                           __ptext102 45C8  
                                           __ptext111 7398  
                                           __ptext103 3F0A  
                                           __ptext120 7002  
                                           __ptext112 72D0  
                                           __ptext104 3CFC  
                                           __ptext121 203C  
                                           __ptext113 74B2  
                                           __ptext105 63DA  
                                           __ptext130 72EA  
                                           __ptext122 7490  
                                           __ptext114 5676  
                                           __ptext106 6EBC  
                                           __ptext131 74A2  
                                           __ptext123 7440  
                                           __ptext115 486A  
                                           __ptext107 70EE  
                                           __ptext140 339C  
                                           __ptext132 6178  
                                           __ptext124 734A  
                                           __ptext116 624A  
                                           __ptext108 5E58  
                                           __ptext141 670C  
                                           __ptext133 695C  
                                           __ptext125 7496  
                                           __ptext117 4010  
                                           __ptext109 5852  
                                           __ptext150 7114  
                                           __ptext142 27B8  
                                           __ptext134 7228  
                                           __ptext126 749C  
                                           __ptext118 7436  
                                           __ptext151 62B0  
                                           __ptext143 222A  
                                           __ptext135 7208  
                                           __ptext127 389E  
                                           __ptext119 5084  
                                           __ptext160 5532  
                                           __ptext152 5D5C  
                                           __ptext144 73AA  
                                           __ptext136 4948  
                                           __ptext128 5AA8  
                                           __ptext161 6CBC  
                                           __ptext153 2F80  
                                           __ptext145 0F2C  
                                           __ptext137 3776  
                                           __ptext129 7160  
                                           __ptext170 6D76  
                                           __ptext162 690A  
                                           __ptext154 745E  
                                           __ptext146 744A  
                                           __ptext138 324A  
                                           __ptext171 533E  
                                           __ptext163 6BF4  
                                           __ptext155 6ADA  
                                           __ptext147 74A8  
                                           __ptext139 25E0  
                                           __ptext180 6608  
                                           __ptext172 1E3C  
                                           __ptext164 6B22  
                                           __ptext156 2C92  
                                           __ptext148 7454  
                                           __ptext181 6EEE  
                                           __ptext173 6A48  
                                           __ptext165 713A  
                                           __ptext157 7468  
                                           __ptext149 30F2  
                                           __ptext182 5982  
                                           __ptext174 69AC  
                                           __ptext166 6558  
                                           __ptext158 5138  
                                           __ptext183 2982  
                                           __ptext175 5BC6  
                                           __ptext167 7472  
                                           __ptext159 6C7A  
                                           __ptext184 4CB0  
                                           __ptext176 65B0  
                                           __ptext168 747A  
                                           __ptext185 175A  
                                           __ptext177 5ED0  
                                           __ptext169 7482  
                                           __ptext186 67B8  
                                           __ptext178 71A6  
                                           __ptext187 7054  
                                           __ptext179 6762  
                                           __ptext188 4112  
                                           __ptext189 0000  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 004A  
                                            ?___lwdiv 0001  
                                           __spi_init 6DB0  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F45  
                                         __ui_encoder 2B18  
                                           _idle_rate 00B3  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 486A  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0143  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 000F  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4112  
           __ic2_display_set_cgram_address@data_array 000B  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0021  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 5AA8  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 71C8  
                                       _fat_find_file 46AA  
                       __size_of_i2c_eeprom_writeByte 0044  
                                            ?_ui_init 0001  
                           __display_programming@cntr 001D  
                                   __display_itoa_u32 30F2  
                                   __display_itoa_u16 5138  
                    __size_of_internalFlash_erasePage 006C  
                        __end_of_USBCtrlTrfOutHandler 64FC  
                           __end_of_flash_sector_read 7114  
                               ??_USBStdGetDscHandler 0001  
                                 __end_of_found_line1 8DB0  
                                 __end_of_found_line2 8CA8  
                                 __end_of_found_line3 8E75  
                                 __end_of_found_line4 8CDE  
                                         _ep_data_out 015D  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 744A  
              __size_of_bootloader_get_rec_dataLength 000A  
                       _bootloader_get_rec_dataLength 7440  
                                       _MSDWriteState 009D  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u16 0019  
                                  ?__display_itoa_u32 000E  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 6ADA  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0016  
                                      __display_found 222A  
                    __end_of_bootloader_get_file_size 73BC  
                                         _file_buffer 0280  
                                     _config_internal 015A  
                                          ?__get_root 0001  
                                       _ui_get_status 74A2  
                                     _config_external 0157  
                                      __display_start 25E0  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 702C  
                                         _file_number 00FF  
                                      ___wmul@product 0005  
                                            _LATAbits 000F89  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                          __end_of_USBCheckHIDRequest 45C8  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                 ??__display_itoa_u16 001D  
                                 ??__display_itoa_u32 0014  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                            __fat_offset_from_cluster 731C  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                   __bootloader_verify_file@address32 00F1  
                          __end_of_internalFlash_read 6E56  
                                          ?_api_parse 0036  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                                            _MSDTasks 19BE  
                          _USBDeferINDataStagePackets 00A3  
                                        ??_fat_format 0025  
                                _active_configuration 0091  
                                   ?_i2c_display_init 0001  
                             spi_tx_rx@command_length 0003  
                                  _bit_pattern_degree 8FAF  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 58EE  
                          ?__data_sector_from_cluster 0001  
              __ic2_display_set_ddram_address@address 000B  
                                  ??_i2c_display_init 000B  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 5982  
                                           _spi_tx_tx 5BC6  
                                __display_verify@cntr 001F  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0089  
                               flash_sector_read@data 002A  
                                __display_programming 27B8  
                                   ___wmul@multiplier 0001  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                           __end_of__display_itoa_u16 51E8  
                           __end_of__display_itoa_u32 324A  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DA0  
                                __end_of_verify_line2 8E25  
                                __end_of_verify_line3 8E67  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AB  
                   __end_of_ExternalFlash_MediaDetect 74B6  
                        __size_of__parse_format_drive 00AA  
                                        _reboot_line1 8E0B  
                                        _search_line1 8DB0  
                                        _search_line2 8CEF  
                                        _search_line3 8C6E  
                                        _search_line4 8E2F  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 00C0  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 5138  
                        ??_bootloader_get_rec_address 0003  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 6B22  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 74A8  
                               __display_checked@cntr 0020  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 2406  
                             __end_of_USBStallHandler 6BF4  
                            __sector_from_file_number 6FAA  
                      __end_of_internalFlash_readPage 6C7A  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 27B8  
                                         _INTCON3bits 000FF0  
                                           copy_data0 53FC  
                                           copy_data1 541C  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 486A  
                                  __end_of_fat_format 203C  
                                 __display_found@cntr 0019  
                                            _i2c_init 7262  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 00B8  
                                         ??__i2c_send 0001  
                                        _MSDReadState 009E  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8F8E  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7418  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 0012  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8F97  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 73EA  
                                      _TransferLength 0087  
                                _bootloader_extension 8FC7  
                          __end_of_USBCheckMSDRequest 4FCC  
                                     api_parse@in_idx 0040  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 6EBC  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 000A  
                                  __end_of_done_line1 8D50  
                                  __end_of_done_line2 8E7B  
                                  __end_of_done_line3 8D40  
                                  __end_of_done_line4 8D30  
                                      __i2c_wait_idle 6558  
                                     _MSDWriteHandler 121E  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 0098  
                           __size_of__i2c_eeprom_busy 0026  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 7404  
                                         _found_line1 8DA0  
                                         _found_line2 8C95  
                                         _found_line3 8E6E  
                                         _found_line4 8CCC  
                                            __get_fat 67B8  
                                            __get_fbr 175A  
                                            __get_mbr 4CB0  
                                  ??_USBStallEndpoint 0002  
                  __end_of_ExternalFlash_CapacityRead 73AA  
                          _ExternalFlash_CapacityRead 7398  
                             ??_MSDTransferTerminated 000E  
                             __display_suspended@cntr 0001  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u16@value 0019  
                             __display_itoa_u32@value 000E  
                                            _fat_init 73BC  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                          __size_of_flash_sector_read 0026  
                                    __display_checked 2C92  
               __end_of_bootloader_get_rec_recordType 7496  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7490  
                                            __ptext10 7334  
                                            __ptext11 7262  
                                            __ptext20 71C8  
                                            __ptext12 680E  
                                            __ptext21 71E8  
                                            __ptext13 7374  
                                            __ptext30 4FCC  
                                            __ptext22 748A  
                                            __ptext14 73DC  
                                            __ptext31 6C38  
                                            __ptext23 61E2  
                                            __ptext15 6CFE  
                                            __ptext40 5716  
                                            __ptext32 6E20  
                                            __ptext24 0C0E  
                                            __ptext16 6DB0  
                                            __ptext41 6B6A  
                                            __ptext33 729A  
                                            __ptext25 085A  
                                            __ptext17 5DDE  
                                            __ptext50 6316  
                                            __ptext42 6660  
                                            __ptext34 7404  
                                            __ptext26 0020  
                                            __ptext18 73BC  
                                            __ptext51 70A2  
                                            __ptext43 7304  
                                            __ptext35 610C  
                                            __ptext27 727E  
                                            __ptext19 548E  
                                            __ptext60 7418  
                                            __ptext52 6FAA  
                                            __ptext44 731C  
                                            __ptext36 702C  
                                            __ptext28 602E  
                                            __ptext61 7422  
                                            __ptext53 70C8  
                                            __ptext45 73EA  
                                            __ptext37 643C  
                                            __ptext29 6F7E  
                                            __ptext70 4214  
                                            __ptext62 2E0A  
                                            __ptext54 46AA  
                                            __ptext46 5FBC  
                                            __ptext38 6F50  
                                            __ptext71 57B4  
                                            __ptext63 6DE8  
                                            __ptext55 5CD8  
                                            __ptext47 4B02  
                                            __ptext39 1C16  
                                            __ptext80 44E6  
                                            __ptext72 4404  
                                            __ptext64 6F20  
                                            __ptext56 64FC  
                                            __ptext48 55D6  
                                            __ptext81 68B6  
                                            __ptext73 478A  
                                            __ptext65 6BB0  
                                            __ptext57 6862  
                                            __ptext49 609E  
                                            __ptext90 4E46  
                                            __ptext82 66B6  
                                            __ptext74 6FD6  
                                            __ptext66 7184  
                                            __ptext58 5B3A  
                                            __ptext91 4D7E  
                                            __ptext83 73CC  
                                            __ptext75 5294  
                                            __ptext67 34EE  
                                            __ptext59 740E  
                                            __ptext92 4BDC  
                                            __ptext84 3E04  
                                            __ptext76 363C  
                                            __ptext68 51E8  
                                            __ptext93 7386  
                                            __ptext85 6E56  
                                            __ptext77 14D6  
                                            __ptext69 5A16  
                                            __ptext94 19BE  
                                            __ptext86 6D3A  
                                            __ptext78 5C52  
                                            __ptext95 3ADA  
                                            __ptext87 58EE  
                                            __ptext79 4F0A  
                                            __ptext96 6378  
                                            __ptext88 649C  
                                            __ptext97 049C  
                                            __ptext89 39C2  
                                            __ptext98 121E  
                                            __ptext99 74AE  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 63DA  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6378  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_root 0003  
                         __size_of__display_suspended 0152  
                             __size_of_bootloader_run 0068  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 6D76  
                   __end_of_failed_line3_addressRange 8C6E  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                      __size_of__bootloader_find_file 00A0  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5716  
                       __end_of__bootloader_find_file 5676  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 67B8  
                      __end_of_USBCtrlTrfSetupHandler 5AA8  
                                       __size_of_main 00DC  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F21  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 0032  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 00BC  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 749C  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7496  
                                 _USBCtrlTrfInHandler 4D7E  
                  _MSDProcessCommandMediaPresent$2390 003C  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 003B  
                              __end_of__i2c_wait_idle 65B0  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
     i2c_display_program_custom_character@bit_pattern 000F  
                                            _spi_init 6CFE  
                                _USBCtrlTrfOutHandler 649C  
                    __end_of__offset_from_file_number 70EE  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 4E46  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7404  
                                ?__parse_command_long 002F  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                    __parse_format_drive@return_value 002E  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                 __display_start@cntr 001D  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 30F2  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 0024  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A6  
                          __size_of__display_itoa_u16 00B0  
                          __size_of__display_itoa_u32 0158  
                     __end_of__fill_buffer_get_status 4112  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7054  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 702C  
                             _internalFlash_erasePage 610C  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 58EE  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5852  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                                 __end_of_start_line1 8DD0  
                                 __end_of_start_line2 8E41  
                                 __end_of_start_line3 8E7F  
                                 __end_of_start_line4 8DFD  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7436  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7422  
                              bootloader_run@timeslot 005C  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0062  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5CD8  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5C52  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 6EBC  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6608  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 65B0  
                SYSTEM_Initialize@pll_startup_counter 0001  
                                     _display_content 017B  
                          __end_of_flash_partial_read 70C8  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 14D6  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 74A2  
                         _bootloader_get_rec_checksum 749C  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 00CC  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 4948  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8DD0  
                                 _USBCtrlTrfRxService 39C2  
                           __size_of_timer_pseudo_isr 00F0  
                                  _USBWakeFromSuspend 6DE8  
                               ??__parse_command_long 0035  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 000F  
                         internalFlash_writePage@page 0009  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7228  
                              ??__display_programming 001D  
                             _USBStdFeatureReqHandler 14D6  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4BDC  
                                        ?_api_prepare 0017  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0173  
                    __size_of_bootloader_get_rec_data 0016  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E0B  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7454  
                          _bootloader_get_rec_address 744A  
                               _USBAlternateInterface 01E7  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 68B6  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0177  
                           _failed_line3_noNextRecord 8DDF  
                          ?__bootloader_check_address 0001  
                     __parse_format_drive@out_idx_ptr 002B  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00A9  
                                      _display_update 6178  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8C82  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 45C8  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0175  
                             _internalFlash_writePage 4FCC  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3E04  
                        _USBStatusStageTimeoutCounter 00A7  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 000C  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 5ED0  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 6C38  
                                        _verify_line1 8D90  
                                        _verify_line2 8E18  
                                        _verify_line3 8E60  
                                 __parse_format_drive 533E  
                                          _USB_CD_Ptr 8E7B  
                                         _power_state 0094  
                                         _USBInHandle 016F  
                            _APP_DeviceCustomHIDTasks 5676  
                          __end_of_flash_sector_write 6A92  
