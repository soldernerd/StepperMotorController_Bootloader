

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 21 22:26:30 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=2
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=2
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   214                           	dabs	1,0x600,512,_msd_buffer
   215                           	dabs	1,0xD00,48,_BDT
   216                           	dabs	1,0xD40,31,_msd_cbw
   217                           	dabs	1,0xD80,13,_msd_csw
   218                           	dabs	1,0xD38,8,_CtrlTrfData
   219                           	dabs	1,0xD30,8,_SetupPkt
   220  0000                     
   221                           ; Version 2.00
   222                           ; Generated 27/05/2018 GMT
   223                           ; 
   224                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   225                           ; All rights reserved.
   226                           ; 
   227                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   228                           ; 
   229                           ; Redistribution and use in source and binary forms, with or without modification, are
   230                           ; permitted provided that the following conditions are met:
   231                           ; 
   232                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   233                           ;        conditions and the following disclaimer.
   234                           ; 
   235                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   236                           ;        of conditions and the following disclaimer in the documentation and/or other
   237                           ;        materials provided with the distribution.
   238                           ; 
   239                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   240                           ;        software without specific prior written permission.
   241                           ; 
   242                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   243                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   244                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   245                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   246                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   247                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   248                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   249                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   250                           ; 
   251                           ; 
   252                           ; Code-generator required, PIC18F47J53 Definitions
   253                           ; 
   254                           ; SFR Addresses
   255  0000                     
   256                           	psect	intcode
   257  000008  EF04 F048          	goto	36872	;# 
   258                           
   259                           	psect	intcodelo
   260  000018  EF0C F048          	goto	36888	; ;# 
   261  0000                     
   262                           	psect	idataBANK0
   263  00725E                     __pidataBANK0:
   264                           	opt stack 0
   265                           
   266                           ;initializer for _file_number
   267  00725E  FF                 	db	255
   268                           
   269                           	psect	idataBANK1
   270  0070BA                     __pidataBANK1:
   271                           	opt stack 0
   272                           
   273                           ;initializer for _LUN
   274  0070BA  28                 	db	low _ExternalFlash_MediaInitialize
   275  0070BB  70                 	db	high _ExternalFlash_MediaInitialize
   276  0070BC  04                 	db	low _ExternalFlash_CapacityRead
   277  0070BD  71                 	db	high _ExternalFlash_CapacityRead
   278  0070BE  D4                 	db	low _ExternalFlash_SectorSizeRead
   279  0070BF  71                 	db	high _ExternalFlash_SectorSizeRead
   280  0070C0  5A                 	db	low _ExternalFlash_MediaDetect
   281  0070C1  72                 	db	high _ExternalFlash_MediaDetect
   282  0070C2  6E                 	db	low _ExternalFlash_SectorRead
   283  0070C3  6C                 	db	high _ExternalFlash_SectorRead
   284  0070C4  56                 	db	low _ExternalFlash_WriteProtectStateGet
   285  0070C5  72                 	db	high _ExternalFlash_WriteProtectStateGet
   286  0070C6  3C                 	db	low _ExternalFlash_SectorWrite
   287  0070C7  6C                 	db	high _ExternalFlash_SectorWrite
   288  0070C8  00                 	db	0
   289  0070C9  00                 	db	0
   290  0070CA  00                 	db	0
   291  0070CB  00                 	db	0
   292  0070CC  00                 	db	0
   293  0070CD  00                 	db	0
   294                           
   295                           	psect	idataBANK2
   296  007128                     __pidataBANK2:
   297                           	opt stack 0
   298                           
   299                           ;initializer for i2c_display_send_init_sequence@F6804
   300  007128  3A                 	db	58
   301  007129  1E                 	db	30
   302  00712A  39                 	db	57
   303  00712B  0C                 	db	12
   304  00712C  74                 	db	116
   305  00712D  5C                 	db	92
   306  00712E  6D                 	db	109
   307  00712F  0C                 	db	12
   308  007130  01                 	db	1
   309                           
   310                           ;initializer for _tx_buf
   311  007131  01                 	db	1
   312  007132  02                 	db	2
   313  007133  03                 	db	3
   314  007134  04                 	db	4
   315  007135  05                 	db	5
   316  007136  06                 	db	6
   317  007137  07                 	db	7
   318  007138  08                 	db	8
   319                           
   320                           	psect	mediumconst
   321  008C6C                     __pmediumconst:
   322                           	opt stack 0
   323  008C6C  00                 	db	0
   324  008C6D                     _checked_line2:
   325                           	opt stack 0
   326  008C6D  46                 	db	70
   327  008C6E  69                 	db	105
   328  008C6F  6C                 	db	108
   329  008C70  65                 	db	101
   330  008C71  20                 	db	32
   331  008C72  63                 	db	99
   332  008C73  68                 	db	104
   333  008C74  65                 	db	101
   334  008C75  63                 	db	99
   335  008C76  6B                 	db	107
   336  008C77  20                 	db	32
   337  008C78  63                 	db	99
   338  008C79  6F                 	db	111
   339  008C7A  6D                 	db	109
   340  008C7B  70                 	db	112
   341  008C7C  6C                 	db	108
   342  008C7D  65                 	db	101
   343  008C7E  74                 	db	116
   344  008C7F  65                 	db	101
   345  008C80  64                 	db	100
   346  008C81  00                 	db	0
   347  008C82                     __end_of_checked_line2:
   348                           	opt stack 0
   349  008C82                     _failed_line3_addressRange:
   350                           	opt stack 0
   351  008C82  41                 	db	65
   352  008C83  64                 	db	100
   353  008C84  64                 	db	100
   354  008C85  72                 	db	114
   355  008C86  2E                 	db	46
   356  008C87  20                 	db	32
   357  008C88  6F                 	db	111
   358  008C89  75                 	db	117
   359  008C8A  74                 	db	116
   360  008C8B  73                 	db	115
   361  008C8C  69                 	db	105
   362  008C8D  64                 	db	100
   363  008C8E  65                 	db	101
   364  008C8F  20                 	db	32
   365  008C90  72                 	db	114
   366  008C91  61                 	db	97
   367  008C92  6E                 	db	110
   368  008C93  67                 	db	103
   369  008C94  65                 	db	101
   370  008C95  00                 	db	0
   371  008C96                     __end_of_failed_line3_addressRange:
   372                           	opt stack 0
   373  008C96                     _search_line3:
   374                           	opt stack 0
   375  008C96  46                 	db	70
   376  008C97  49                 	db	73
   377  008C98  52                 	db	82
   378  008C99  4D                 	db	77
   379  008C9A  57                 	db	87
   380  008C9B  41                 	db	65
   381  008C9C  52                 	db	82
   382  008C9D  45                 	db	69
   383  008C9E  2E                 	db	46
   384  008C9F  48                 	db	72
   385  008CA0  45                 	db	69
   386  008CA1  58                 	db	88
   387  008CA2  20                 	db	32
   388  008CA3  6F                 	db	111
   389  008CA4  6E                 	db	110
   390  008CA5  20                 	db	32
   391  008CA6  55                 	db	85
   392  008CA7  53                 	db	83
   393  008CA8  42                 	db	66
   394  008CA9  00                 	db	0
   395  008CAA                     __end_of_search_line3:
   396                           	opt stack 0
   397  008CAA                     _failed_line3_startCode:
   398                           	opt stack 0
   399  008CAA  4D                 	db	77
   400  008CAB  69                 	db	105
   401  008CAC  73                 	db	115
   402  008CAD  73                 	db	115
   403  008CAE  69                 	db	105
   404  008CAF  6E                 	db	110
   405  008CB0  67                 	db	103
   406  008CB1  20                 	db	32
   407  008CB2  73                 	db	115
   408  008CB3  74                 	db	116
   409  008CB4  61                 	db	97
   410  008CB5  72                 	db	114
   411  008CB6  74                 	db	116
   412  008CB7  20                 	db	32
   413  008CB8  63                 	db	99
   414  008CB9  6F                 	db	111
   415  008CBA  64                 	db	100
   416  008CBB  65                 	db	101
   417  008CBC  00                 	db	0
   418  008CBD                     __end_of_failed_line3_startCode:
   419                           	opt stack 0
   420  008CBD                     _found_line2:
   421                           	opt stack 0
   422  008CBD  46                 	db	70
   423  008CBE  49                 	db	73
   424  008CBF  52                 	db	82
   425  008CC0  4D                 	db	77
   426  008CC1  57                 	db	87
   427  008CC2  41                 	db	65
   428  008CC3  52                 	db	82
   429  008CC4  45                 	db	69
   430  008CC5  2E                 	db	46
   431  008CC6  48                 	db	72
   432  008CC7  45                 	db	69
   433  008CC8  58                 	db	88
   434  008CC9  20                 	db	32
   435  008CCA  66                 	db	102
   436  008CCB  6F                 	db	111
   437  008CCC  75                 	db	117
   438  008CCD  6E                 	db	110
   439  008CCE  64                 	db	100
   440  008CCF  00                 	db	0
   441  008CD0                     __end_of_found_line2:
   442                           	opt stack 0
   443  008CD0                     _programming_line2:
   444                           	opt stack 0
   445  008CD0  50                 	db	80
   446  008CD1  72                 	db	114
   447  008CD2  6F                 	db	111
   448  008CD3  67                 	db	103
   449  008CD4  72                 	db	114
   450  008CD5  61                 	db	97
   451  008CD6  6D                 	db	109
   452  008CD7  6D                 	db	109
   453  008CD8  69                 	db	105
   454  008CD9  6E                 	db	110
   455  008CDA  67                 	db	103
   456  008CDB  20                 	db	32
   457  008CDC  66                 	db	102
   458  008CDD  6C                 	db	108
   459  008CDE  61                 	db	97
   460  008CDF  73                 	db	115
   461  008CE0  68                 	db	104
   462  008CE1  00                 	db	0
   463  008CE2                     __end_of_programming_line2:
   464                           	opt stack 0
   465  008CE2                     _failed_line2:
   466                           	opt stack 0
   467  008CE2  46                 	db	70
   468  008CE3  69                 	db	105
   469  008CE4  6C                 	db	108
   470  008CE5  65                 	db	101
   471  008CE6  20                 	db	32
   472  008CE7  63                 	db	99
   473  008CE8  68                 	db	104
   474  008CE9  65                 	db	101
   475  008CEA  63                 	db	99
   476  008CEB  6B                 	db	107
   477  008CEC  20                 	db	32
   478  008CED  66                 	db	102
   479  008CEE  61                 	db	97
   480  008CEF  69                 	db	105
   481  008CF0  6C                 	db	108
   482  008CF1  65                 	db	101
   483  008CF2  64                 	db	100
   484  008CF3  00                 	db	0
   485  008CF4                     __end_of_failed_line2:
   486                           	opt stack 0
   487  008CF4                     _found_line4:
   488                           	opt stack 0
   489  008CF4  50                 	db	80
   490  008CF5  72                 	db	114
   491  008CF6  65                 	db	101
   492  008CF7  73                 	db	115
   493  008CF8  73                 	db	115
   494  008CF9  20                 	db	32
   495  008CFA  74                 	db	116
   496  008CFB  6F                 	db	111
   497  008CFC  20                 	db	32
   498  008CFD  75                 	db	117
   499  008CFE  73                 	db	115
   500  008CFF  65                 	db	101
   501  008D00  20                 	db	32
   502  008D01  66                 	db	102
   503  008D02  69                 	db	105
   504  008D03  6C                 	db	108
   505  008D04  65                 	db	101
   506  008D05  00                 	db	0
   507  008D06                     __end_of_found_line4:
   508                           	opt stack 0
   509  008D06                     _checked_line4:
   510                           	opt stack 0
   511  008D06  50                 	db	80
   512  008D07  72                 	db	114
   513  008D08  65                 	db	101
   514  008D09  73                 	db	115
   515  008D0A  73                 	db	115
   516  008D0B  20                 	db	32
   517  008D0C  74                 	db	116
   518  008D0D  6F                 	db	111
   519  008D0E  20                 	db	32
   520  008D0F  70                 	db	112
   521  008D10  72                 	db	114
   522  008D11  6F                 	db	111
   523  008D12  67                 	db	103
   524  008D13  72                 	db	114
   525  008D14  61                 	db	97
   526  008D15  6D                 	db	109
   527  008D16  00                 	db	0
   528  008D17                     __end_of_checked_line4:
   529                           	opt stack 0
   530  008D17                     _search_line2:
   531                           	opt stack 0
   532  008D17  4C                 	db	76
   533  008D18  6F                 	db	111
   534  008D19  6F                 	db	111
   535  008D1A  6B                 	db	107
   536  008D1B  69                 	db	105
   537  008D1C  6E                 	db	110
   538  008D1D  67                 	db	103
   539  008D1E  20                 	db	32
   540  008D1F  66                 	db	102
   541  008D20  6F                 	db	111
   542  008D21  72                 	db	114
   543  008D22  20                 	db	32
   544  008D23  66                 	db	102
   545  008D24  69                 	db	105
   546  008D25  6C                 	db	108
   547  008D26  65                 	db	101
   548  008D27  00                 	db	0
   549  008D28                     __end_of_search_line2:
   550                           	opt stack 0
   551  008D28                     _suspended_line4:
   552                           	opt stack 0
   553  008D28  50                 	db	80
   554  008D29  72                 	db	114
   555  008D2A  65                 	db	101
   556  008D2B  73                 	db	115
   557  008D2C  73                 	db	115
   558  008D2D  20                 	db	32
   559  008D2E  74                 	db	116
   560  008D2F  6F                 	db	111
   561  008D30  20                 	db	32
   562  008D31  72                 	db	114
   563  008D32  65                 	db	101
   564  008D33  73                 	db	115
   565  008D34  75                 	db	117
   566  008D35  6D                 	db	109
   567  008D36  65                 	db	101
   568  008D37  00                 	db	0
   569  008D38                     __end_of_suspended_line4:
   570                           	opt stack 0
   571  008D38                     _suspended_line1:
   572                           	opt stack 0
   573  008D38  42                 	db	66
   574  008D39  6F                 	db	111
   575  008D3A  6F                 	db	111
   576  008D3B  74                 	db	116
   577  008D3C  6C                 	db	108
   578  008D3D  6F                 	db	111
   579  008D3E  61                 	db	97
   580  008D3F  64                 	db	100
   581  008D40  65                 	db	101
   582  008D41  72                 	db	114
   583  008D42  20                 	db	32
   584  008D43  4D                 	db	77
   585  008D44  6F                 	db	111
   586  008D45  64                 	db	100
   587  008D46  65                 	db	101
   588  008D47  00                 	db	0
   589  008D48                     __end_of_suspended_line1:
   590                           	opt stack 0
   591  008D48                     _done_line4:
   592                           	opt stack 0
   593  008D48  50                 	db	80
   594  008D49  72                 	db	114
   595  008D4A  65                 	db	101
   596  008D4B  73                 	db	115
   597  008D4C  73                 	db	115
   598  008D4D  20                 	db	32
   599  008D4E  74                 	db	116
   600  008D4F  6F                 	db	111
   601  008D50  20                 	db	32
   602  008D51  72                 	db	114
   603  008D52  65                 	db	101
   604  008D53  62                 	db	98
   605  008D54  6F                 	db	111
   606  008D55  6F                 	db	111
   607  008D56  74                 	db	116
   608  008D57  00                 	db	0
   609  008D58                     __end_of_done_line4:
   610                           	opt stack 0
   611  008D58                     _done_line3:
   612                           	opt stack 0
   613  008D58  50                 	db	80
   614  008D59  61                 	db	97
   615  008D5A  67                 	db	103
   616  008D5B  65                 	db	101
   617  008D5C  73                 	db	115
   618  008D5D  20                 	db	32
   619  008D5E  77                 	db	119
   620  008D5F  72                 	db	114
   621  008D60  69                 	db	105
   622  008D61  74                 	db	116
   623  008D62  74                 	db	116
   624  008D63  65                 	db	101
   625  008D64  6E                 	db	110
   626  008D65  3A                 	db	58
   627  008D66  20                 	db	32
   628  008D67  00                 	db	0
   629  008D68                     __end_of_done_line3:
   630                           	opt stack 0
   631  008D68                     _done_line1:
   632                           	opt stack 0
   633  008D68  42                 	db	66
   634  008D69  6F                 	db	111
   635  008D6A  6F                 	db	111
   636  008D6B  74                 	db	116
   637  008D6C  6C                 	db	108
   638  008D6D  6F                 	db	111
   639  008D6E  61                 	db	97
   640  008D6F  64                 	db	100
   641  008D70  65                 	db	101
   642  008D71  72                 	db	114
   643  008D72  20                 	db	32
   644  008D73  4D                 	db	77
   645  008D74  6F                 	db	111
   646  008D75  64                 	db	100
   647  008D76  65                 	db	101
   648  008D77  00                 	db	0
   649  008D78                     __end_of_done_line1:
   650                           	opt stack 0
   651  008D78                     _programming_line4:
   652                           	opt stack 0
   653  008D78  50                 	db	80
   654  008D79  61                 	db	97
   655  008D7A  67                 	db	103
   656  008D7B  65                 	db	101
   657  008D7C  73                 	db	115
   658  008D7D  20                 	db	32
   659  008D7E  77                 	db	119
   660  008D7F  72                 	db	114
   661  008D80  69                 	db	105
   662  008D81  74                 	db	116
   663  008D82  74                 	db	116
   664  008D83  65                 	db	101
   665  008D84  6E                 	db	110
   666  008D85  3A                 	db	58
   667  008D86  20                 	db	32
   668  008D87  00                 	db	0
   669  008D88                     __end_of_programming_line4:
   670                           	opt stack 0
   671  008D88                     _programming_line1:
   672                           	opt stack 0
   673  008D88  42                 	db	66
   674  008D89  6F                 	db	111
   675  008D8A  6F                 	db	111
   676  008D8B  74                 	db	116
   677  008D8C  6C                 	db	108
   678  008D8D  6F                 	db	111
   679  008D8E  61                 	db	97
   680  008D8F  64                 	db	100
   681  008D90  65                 	db	101
   682  008D91  72                 	db	114
   683  008D92  20                 	db	32
   684  008D93  4D                 	db	77
   685  008D94  6F                 	db	111
   686  008D95  64                 	db	100
   687  008D96  65                 	db	101
   688  008D97  00                 	db	0
   689  008D98                     __end_of_programming_line1:
   690                           	opt stack 0
   691  008D98                     _failed_line1:
   692                           	opt stack 0
   693  008D98  42                 	db	66
   694  008D99  6F                 	db	111
   695  008D9A  6F                 	db	111
   696  008D9B  74                 	db	116
   697  008D9C  6C                 	db	108
   698  008D9D  6F                 	db	111
   699  008D9E  61                 	db	97
   700  008D9F  64                 	db	100
   701  008DA0  65                 	db	101
   702  008DA1  72                 	db	114
   703  008DA2  20                 	db	32
   704  008DA3  4D                 	db	77
   705  008DA4  6F                 	db	111
   706  008DA5  64                 	db	100
   707  008DA6  65                 	db	101
   708  008DA7  00                 	db	0
   709  008DA8                     __end_of_failed_line1:
   710                           	opt stack 0
   711  008DA8                     _checked_line1:
   712                           	opt stack 0
   713  008DA8  42                 	db	66
   714  008DA9  6F                 	db	111
   715  008DAA  6F                 	db	111
   716  008DAB  74                 	db	116
   717  008DAC  6C                 	db	108
   718  008DAD  6F                 	db	111
   719  008DAE  61                 	db	97
   720  008DAF  64                 	db	100
   721  008DB0  65                 	db	101
   722  008DB1  72                 	db	114
   723  008DB2  20                 	db	32
   724  008DB3  4D                 	db	77
   725  008DB4  6F                 	db	111
   726  008DB5  64                 	db	100
   727  008DB6  65                 	db	101
   728  008DB7  00                 	db	0
   729  008DB8                     __end_of_checked_line1:
   730                           	opt stack 0
   731  008DB8                     _verify_line1:
   732                           	opt stack 0
   733  008DB8  42                 	db	66
   734  008DB9  6F                 	db	111
   735  008DBA  6F                 	db	111
   736  008DBB  74                 	db	116
   737  008DBC  6C                 	db	108
   738  008DBD  6F                 	db	111
   739  008DBE  61                 	db	97
   740  008DBF  64                 	db	100
   741  008DC0  65                 	db	101
   742  008DC1  72                 	db	114
   743  008DC2  20                 	db	32
   744  008DC3  4D                 	db	77
   745  008DC4  6F                 	db	111
   746  008DC5  64                 	db	100
   747  008DC6  65                 	db	101
   748  008DC7  00                 	db	0
   749  008DC8                     __end_of_verify_line1:
   750                           	opt stack 0
   751  008DC8                     _found_line1:
   752                           	opt stack 0
   753  008DC8  42                 	db	66
   754  008DC9  6F                 	db	111
   755  008DCA  6F                 	db	111
   756  008DCB  74                 	db	116
   757  008DCC  6C                 	db	108
   758  008DCD  6F                 	db	111
   759  008DCE  61                 	db	97
   760  008DCF  64                 	db	100
   761  008DD0  65                 	db	101
   762  008DD1  72                 	db	114
   763  008DD2  20                 	db	32
   764  008DD3  4D                 	db	77
   765  008DD4  6F                 	db	111
   766  008DD5  64                 	db	100
   767  008DD6  65                 	db	101
   768  008DD7  00                 	db	0
   769  008DD8                     __end_of_found_line1:
   770                           	opt stack 0
   771  008DD8                     _search_line1:
   772                           	opt stack 0
   773  008DD8  42                 	db	66
   774  008DD9  6F                 	db	111
   775  008DDA  6F                 	db	111
   776  008DDB  74                 	db	116
   777  008DDC  6C                 	db	108
   778  008DDD  6F                 	db	111
   779  008DDE  61                 	db	97
   780  008DDF  64                 	db	100
   781  008DE0  65                 	db	101
   782  008DE1  72                 	db	114
   783  008DE2  20                 	db	32
   784  008DE3  4D                 	db	77
   785  008DE4  6F                 	db	111
   786  008DE5  64                 	db	100
   787  008DE6  65                 	db	101
   788  008DE7  00                 	db	0
   789  008DE8                     __end_of_search_line1:
   790                           	opt stack 0
   791  008DE8                     _start_line1:
   792                           	opt stack 0
   793  008DE8  42                 	db	66
   794  008DE9  6F                 	db	111
   795  008DEA  6F                 	db	111
   796  008DEB  74                 	db	116
   797  008DEC  6C                 	db	108
   798  008DED  6F                 	db	111
   799  008DEE  61                 	db	97
   800  008DEF  64                 	db	100
   801  008DF0  65                 	db	101
   802  008DF1  72                 	db	114
   803  008DF2  20                 	db	32
   804  008DF3  4D                 	db	77
   805  008DF4  6F                 	db	111
   806  008DF5  64                 	db	100
   807  008DF6  65                 	db	101
   808  008DF7  00                 	db	0
   809  008DF8                     __end_of_start_line1:
   810                           	opt stack 0
   811  008DF8                     _failed_line3_checksum:
   812                           	opt stack 0
   813  008DF8  43                 	db	67
   814  008DF9  68                 	db	104
   815  008DFA  65                 	db	101
   816  008DFB  63                 	db	99
   817  008DFC  6B                 	db	107
   818  008DFD  73                 	db	115
   819  008DFE  75                 	db	117
   820  008DFF  6D                 	db	109
   821  008E00  20                 	db	32
   822  008E01  65                 	db	101
   823  008E02  72                 	db	114
   824  008E03  72                 	db	114
   825  008E04  6F                 	db	111
   826  008E05  72                 	db	114
   827  008E06  00                 	db	0
   828  008E07                     __end_of_failed_line3_checksum:
   829                           	opt stack 0
   830  008E07                     _failed_line3_noNextRecord:
   831                           	opt stack 0
   832  008E07  4E                 	db	78
   833  008E08  6F                 	db	111
   834  008E09  20                 	db	32
   835  008E0A  6E                 	db	110
   836  008E0B  65                 	db	101
   837  008E0C  78                 	db	120
   838  008E0D  74                 	db	116
   839  008E0E  20                 	db	32
   840  008E0F  72                 	db	114
   841  008E10  65                 	db	101
   842  008E11  63                 	db	99
   843  008E12  6F                 	db	111
   844  008E13  72                 	db	114
   845  008E14  64                 	db	100
   846  008E15  00                 	db	0
   847  008E16                     __end_of_failed_line3_noNextRecord:
   848                           	opt stack 0
   849  008E16                     _start_line4:
   850                           	opt stack 0
   851  008E16  73                 	db	115
   852  008E17  6F                 	db	111
   853  008E18  6C                 	db	108
   854  008E19  64                 	db	100
   855  008E1A  65                 	db	101
   856  008E1B  72                 	db	114
   857  008E1C  6E                 	db	110
   858  008E1D  65                 	db	101
   859  008E1E  72                 	db	114
   860  008E1F  64                 	db	100
   861  008E20  2E                 	db	46
   862  008E21  63                 	db	99
   863  008E22  6F                 	db	111
   864  008E23  6D                 	db	109
   865  008E24  00                 	db	0
   866  008E25                     __end_of_start_line4:
   867                           	opt stack 0
   868  008E25                     _failed_line3_dataTooLong:
   869                           	opt stack 0
   870  008E25  44                 	db	68
   871  008E26  61                 	db	97
   872  008E27  74                 	db	116
   873  008E28  61                 	db	97
   874  008E29  20                 	db	32
   875  008E2A  74                 	db	116
   876  008E2B  6F                 	db	111
   877  008E2C  6F                 	db	111
   878  008E2D  20                 	db	32
   879  008E2E  6C                 	db	108
   880  008E2F  6F                 	db	111
   881  008E30  6E                 	db	110
   882  008E31  67                 	db	103
   883  008E32  00                 	db	0
   884  008E33                     __end_of_failed_line3_dataTooLong:
   885                           	opt stack 0
   886  008E33                     _reboot_line1:
   887                           	opt stack 0
   888  008E33  52                 	db	82
   889  008E34  65                 	db	101
   890  008E35  62                 	db	98
   891  008E36  6F                 	db	111
   892  008E37  6F                 	db	111
   893  008E38  74                 	db	116
   894  008E39  69                 	db	105
   895  008E3A  6E                 	db	110
   896  008E3B  67                 	db	103
   897  008E3C  2E                 	db	46
   898  008E3D  2E                 	db	46
   899  008E3E  2E                 	db	46
   900  008E3F  00                 	db	0
   901  008E40                     __end_of_reboot_line1:
   902                           	opt stack 0
   903  008E40                     _verify_line2:
   904                           	opt stack 0
   905  008E40  56                 	db	86
   906  008E41  65                 	db	101
   907  008E42  72                 	db	114
   908  008E43  69                 	db	105
   909  008E44  66                 	db	102
   910  008E45  79                 	db	121
   911  008E46  69                 	db	105
   912  008E47  6E                 	db	110
   913  008E48  67                 	db	103
   914  008E49  2E                 	db	46
   915  008E4A  2E                 	db	46
   916  008E4B  2E                 	db	46
   917  008E4C  00                 	db	0
   918  008E4D                     __end_of_verify_line2:
   919                           	opt stack 0
   920  008E4D                     _suspended_line2:
   921                           	opt stack 0
   922  008E4D  53                 	db	83
   923  008E4E  75                 	db	117
   924  008E4F  73                 	db	115
   925  008E50  70                 	db	112
   926  008E51  65                 	db	101
   927  008E52  6E                 	db	110
   928  008E53  64                 	db	100
   929  008E54  65                 	db	101
   930  008E55  64                 	db	100
   931  008E56  00                 	db	0
   932  008E57                     __end_of_suspended_line2:
   933                           	opt stack 0
   934  008E57                     _search_line4:
   935                           	opt stack 0
   936  008E57  64                 	db	100
   937  008E58  72                 	db	114
   938  008E59  69                 	db	105
   939  008E5A  76                 	db	118
   940  008E5B  65                 	db	101
   941  008E5C  2E                 	db	46
   942  008E5D  2E                 	db	46
   943  008E5E  2E                 	db	46
   944  008E5F  00                 	db	0
   945  008E60                     __end_of_search_line4:
   946                           	opt stack 0
   947  008E60                     _start_line2:
   948                           	opt stack 0
   949  008E60  56                 	db	86
   950  008E61  65                 	db	101
   951  008E62  72                 	db	114
   952  008E63  73                 	db	115
   953  008E64  69                 	db	105
   954  008E65  6F                 	db	111
   955  008E66  6E                 	db	110
   956  008E67  20                 	db	32
   957  008E68  00                 	db	0
   958  008E69                     __end_of_start_line2:
   959                           	opt stack 0
   960  008E69                     _failed_line4:
   961                           	opt stack 0
   962  008E69  52                 	db	82
   963  008E6A  65                 	db	101
   964  008E6B  63                 	db	99
   965  008E6C  6F                 	db	111
   966  008E6D  72                 	db	114
   967  008E6E  64                 	db	100
   968  008E6F  20                 	db	32
   969  008E70  00                 	db	0
   970  008E71                     __end_of_failed_line4:
   971                           	opt stack 0
   972  008E71                     _checked_line3:
   973                           	opt stack 0
   974  008E71  72                 	db	114
   975  008E72  65                 	db	101
   976  008E73  63                 	db	99
   977  008E74  6F                 	db	111
   978  008E75  72                 	db	114
   979  008E76  64                 	db	100
   980  008E77  73                 	db	115
   981  008E78  00                 	db	0
   982  008E79                     __end_of_checked_line3:
   983                           	opt stack 0
   984  008E79                     _USB_SD_Ptr:
   985                           	opt stack 0
   986  008E79  CB                 	db	low _sd000
   987  008E7A  8F                 	db	high _sd000
   988  008E7B  E7                 	db	low _sd001
   989  008E7C  8E                 	db	high _sd001
   990  008E7D  1B                 	db	low _sd002
   991  008E7E  8F                 	db	high _sd002
   992  008E7F  8A                 	db	low _sd003
   993  008E80  8F                 	db	high _sd003
   994  008E81                     __end_of_USB_SD_Ptr:
   995                           	opt stack 0
   996  008E81                     _programming_line3:
   997                           	opt stack 0
   998  008E81  45                 	db	69
   999  008E82  6E                 	db	110
  1000  008E83  74                 	db	116
  1001  008E84  72                 	db	114
  1002  008E85  79                 	db	121
  1003  008E86  20                 	db	32
  1004  008E87  00                 	db	0
  1005  008E88                     __end_of_programming_line3:
  1006                           	opt stack 0
  1007  008E88                     _verify_line3:
  1008                           	opt stack 0
  1009  008E88  52                 	db	82
  1010  008E89  65                 	db	101
  1011  008E8A  63                 	db	99
  1012  008E8B  6F                 	db	111
  1013  008E8C  72                 	db	114
  1014  008E8D  64                 	db	100
  1015  008E8E  00                 	db	0
  1016  008E8F                     __end_of_verify_line3:
  1017                           	opt stack 0
  1018  008E8F                     _found_line3b:
  1019                           	opt stack 0
  1020  008E8F  20                 	db	32
  1021  008E90  62                 	db	98
  1022  008E91  79                 	db	121
  1023  008E92  74                 	db	116
  1024  008E93  65                 	db	101
  1025  008E94  73                 	db	115
  1026  008E95  00                 	db	0
  1027  008E96                     __end_of_found_line3b:
  1028                           	opt stack 0
  1029  008E96                     _found_line3:
  1030                           	opt stack 0
  1031  008E96  53                 	db	83
  1032  008E97  69                 	db	105
  1033  008E98  7A                 	db	122
  1034  008E99  65                 	db	101
  1035  008E9A  3A                 	db	58
  1036  008E9B  20                 	db	32
  1037  008E9C  00                 	db	0
  1038  008E9D                     __end_of_found_line3:
  1039                           	opt stack 0
  1040  008E9D                     _done_line2:
  1041                           	opt stack 0
  1042  008E9D  44                 	db	68
  1043  008E9E  6F                 	db	111
  1044  008E9F  6E                 	db	110
  1045  008EA0  65                 	db	101
  1046  008EA1  21                 	db	33
  1047  008EA2  00                 	db	0
  1048  008EA3                     __end_of_done_line2:
  1049                           	opt stack 0
  1050  008EA3                     _USB_CD_Ptr:
  1051                           	opt stack 0
  1052  008EA3  A7                 	db	low _configDescriptor1
  1053  008EA4  8E                 	db	high _configDescriptor1
  1054  008EA5                     __end_of_USB_CD_Ptr:
  1055                           	opt stack 0
  1056  008EA5                     _suspended_line3:
  1057                           	opt stack 0
  1058  008EA5  00                 	db	0
  1059  008EA6                     __end_of_suspended_line3:
  1060                           	opt stack 0
  1061  008EA6                     _start_line3:
  1062                           	opt stack 0
  1063  008EA6  00                 	db	0
  1064  008EA7                     __end_of_start_line3:
  1065                           	opt stack 0
  1066  008EA7                     _configDescriptor1:
  1067                           	opt stack 0
  1068  008EA7  09                 	db	9
  1069  008EA8  02                 	db	2
  1070  008EA9  40                 	db	64
  1071  008EAA  00                 	db	0
  1072  008EAB  02                 	db	2
  1073  008EAC  01                 	db	1
  1074  008EAD  00                 	db	0
  1075  008EAE  C0                 	db	192
  1076  008EAF  32                 	db	50
  1077  008EB0  09                 	db	9
  1078  008EB1  04                 	db	4
  1079  008EB2  00                 	db	0
  1080  008EB3  00                 	db	0
  1081  008EB4  02                 	db	2
  1082  008EB5  03                 	db	3
  1083  008EB6  00                 	db	0
  1084  008EB7  00                 	db	0
  1085  008EB8  00                 	db	0
  1086  008EB9  09                 	db	9
  1087  008EBA  21                 	db	33
  1088  008EBB  11                 	db	17
  1089  008EBC  01                 	db	1
  1090  008EBD  00                 	db	0
  1091  008EBE  01                 	db	1
  1092  008EBF  22                 	db	34
  1093  008EC0  1D                 	db	29
  1094  008EC1  00                 	db	0
  1095  008EC2  07                 	db	7
  1096  008EC3  05                 	db	5
  1097  008EC4  81                 	db	129
  1098  008EC5  03                 	db	3
  1099  008EC6  40                 	db	64
  1100  008EC7  00                 	db	0
  1101  008EC8  01                 	db	1
  1102  008EC9  07                 	db	7
  1103  008ECA  05                 	db	5
  1104  008ECB  01                 	db	1
  1105  008ECC  03                 	db	3
  1106  008ECD  40                 	db	64
  1107  008ECE  00                 	db	0
  1108  008ECF  01                 	db	1
  1109  008ED0  09                 	db	9
  1110  008ED1  04                 	db	4
  1111  008ED2  01                 	db	1
  1112  008ED3  00                 	db	0
  1113  008ED4  02                 	db	2
  1114  008ED5  08                 	db	8
  1115  008ED6  06                 	db	6
  1116  008ED7  50                 	db	80
  1117  008ED8  00                 	db	0
  1118  008ED9  07                 	db	7
  1119  008EDA  05                 	db	5
  1120  008EDB  82                 	db	130
  1121  008EDC  02                 	db	2
  1122  008EDD  40                 	db	64
  1123  008EDE  00                 	db	0
  1124  008EDF  01                 	db	1
  1125  008EE0  07                 	db	7
  1126  008EE1  05                 	db	5
  1127  008EE2  02                 	db	2
  1128  008EE3  02                 	db	2
  1129  008EE4  40                 	db	64
  1130  008EE5  00                 	db	0
  1131  008EE6  01                 	db	1
  1132  008EE7                     __end_of_configDescriptor1:
  1133                           	opt stack 0
  1134  008EE7                     _sd001:
  1135                           	opt stack 0
  1136  008EE7  34                 	db	52
  1137  008EE8  03                 	db	3
  1138  008EE9  0053               	dw	83
  1139  008EEB  006F               	dw	111
  1140  008EED  006C               	dw	108
  1141  008EEF  0064               	dw	100
  1142  008EF1  0065               	dw	101
  1143  008EF3  0072               	dw	114
  1144  008EF5  006E               	dw	110
  1145  008EF7  0065               	dw	101
  1146  008EF9  0072               	dw	114
  1147  008EFB  0064               	dw	100
  1148  008EFD  002E               	dw	46
  1149  008EFF  0063               	dw	99
  1150  008F01  006F               	dw	111
  1151  008F03  006D               	dw	109
  1152  008F05  0020               	dw	32
  1153  008F07  0020               	dw	32
  1154  008F09  0020               	dw	32
  1155  008F0B  0020               	dw	32
  1156  008F0D  0020               	dw	32
  1157  008F0F  0020               	dw	32
  1158  008F11  0020               	dw	32
  1159  008F13  0020               	dw	32
  1160  008F15  0020               	dw	32
  1161  008F17  0020               	dw	32
  1162  008F19  0020               	dw	32
  1163  008F1B                     __end_of_sd001:
  1164                           	opt stack 0
  1165  008F1B                     _sd002:
  1166                           	opt stack 0
  1167  008F1B  2E                 	db	46
  1168  008F1C  03                 	db	3
  1169  008F1D  0053               	dw	83
  1170  008F1F  0074               	dw	116
  1171  008F21  0065               	dw	101
  1172  008F23  0070               	dw	112
  1173  008F25  0070               	dw	112
  1174  008F27  0065               	dw	101
  1175  008F29  0072               	dw	114
  1176  008F2B  004D               	dw	77
  1177  008F2D  006F               	dw	111
  1178  008F2F  0074               	dw	116
  1179  008F31  006F               	dw	111
  1180  008F33  0072               	dw	114
  1181  008F35  0043               	dw	67
  1182  008F37  006F               	dw	111
  1183  008F39  006E               	dw	110
  1184  008F3B  0074               	dw	116
  1185  008F3D  0072               	dw	114
  1186  008F3F  006F               	dw	111
  1187  008F41  006C               	dw	108
  1188  008F43  006C               	dw	108
  1189  008F45  0065               	dw	101
  1190  008F47  0072               	dw	114
  1191  008F49                     __end_of_sd002:
  1192                           	opt stack 0
  1193  008F49                     _inq_resp:
  1194                           	opt stack 0
  1195  008F49  00                 	db	0
  1196  008F4A  80                 	db	128
  1197  008F4B  04                 	db	4
  1198  008F4C  02                 	db	2
  1199  008F4D  20                 	db	32
  1200  008F4E  00                 	db	0
  1201  008F4F  00                 	db	0
  1202  008F50  00                 	db	0
  1203  008F51  4D                 	db	77
  1204  008F52  69                 	db	105
  1205  008F53  63                 	db	99
  1206  008F54  72                 	db	114
  1207  008F55  6F                 	db	111
  1208  008F56  63                 	db	99
  1209  008F57  68                 	db	104
  1210  008F58  70                 	db	112
  1211  008F59  4D                 	db	77
  1212  008F5A  61                 	db	97
  1213  008F5B  73                 	db	115
  1214  008F5C  73                 	db	115
  1215  008F5D  20                 	db	32
  1216  008F5E  53                 	db	83
  1217  008F5F  74                 	db	116
  1218  008F60  6F                 	db	111
  1219  008F61  72                 	db	114
  1220  008F62  61                 	db	97
  1221  008F63  67                 	db	103
  1222  008F64  65                 	db	101
  1223  008F65  20                 	db	32
  1224  008F66  20                 	db	32
  1225  008F67  20                 	db	32
  1226  008F68  20                 	db	32
  1227  008F69  30                 	db	48
  1228  008F6A  30                 	db	48
  1229  008F6B  30                 	db	48
  1230  008F6C  31                 	db	49
  1231  008F6D                     __end_of_inq_resp:
  1232                           	opt stack 0
  1233  008F6D                     _hid_rpt01:
  1234                           	opt stack 0
  1235  008F6D  06                 	db	6
  1236  008F6E  00                 	db	0
  1237  008F6F  FF                 	db	255
  1238  008F70  09                 	db	9
  1239  008F71  01                 	db	1
  1240  008F72  A1                 	db	161
  1241  008F73  01                 	db	1
  1242  008F74  19                 	db	25
  1243  008F75  01                 	db	1
  1244  008F76  29                 	db	41
  1245  008F77  40                 	db	64
  1246  008F78  15                 	db	21
  1247  008F79  00                 	db	0
  1248  008F7A  26                 	db	38
  1249  008F7B  FF                 	db	255
  1250  008F7C  00                 	db	0
  1251  008F7D  75                 	db	117
  1252  008F7E  08                 	db	8
  1253  008F7F  95                 	db	149
  1254  008F80  40                 	db	64
  1255  008F81  81                 	db	129
  1256  008F82  00                 	db	0
  1257  008F83  19                 	db	25
  1258  008F84  01                 	db	1
  1259  008F85  29                 	db	41
  1260  008F86  40                 	db	64
  1261  008F87  91                 	db	145
  1262  008F88  00                 	db	0
  1263  008F89  C0                 	db	192
  1264  008F8A                     __end_of_hid_rpt01:
  1265                           	opt stack 0
  1266  008F8A                     _sd003:
  1267                           	opt stack 0
  1268  008F8A  1A                 	db	26
  1269  008F8B  03                 	db	3
  1270  008F8C  0031               	dw	49
  1271  008F8E  0032               	dw	50
  1272  008F90  0033               	dw	51
  1273  008F92  0034               	dw	52
  1274  008F94  0035               	dw	53
  1275  008F96  0036               	dw	54
  1276  008F98  0037               	dw	55
  1277  008F9A  0038               	dw	56
  1278  008F9C  0039               	dw	57
  1279  008F9E  0030               	dw	48
  1280  008FA0  0039               	dw	57
  1281  008FA2  0039               	dw	57
  1282  008FA4                     __end_of_sd003:
  1283                           	opt stack 0
  1284  008FA4                     _device_dsc:
  1285                           	opt stack 0
  1286  008FA4  12                 	db	18
  1287  008FA5  01                 	db	1
  1288  008FA6  0200               	dw	512
  1289  008FA8  00                 	db	0
  1290  008FA9  00                 	db	0
  1291  008FAA  00                 	db	0
  1292  008FAB  08                 	db	8
  1293  008FAC  04D8               	dw	1240
  1294  008FAE  EDCF               	dw	60879
  1295  008FB0  0100               	dw	256
  1296  008FB2  01                 	db	1
  1297  008FB3  02                 	db	2
  1298  008FB4  00                 	db	0
  1299  008FB5  01                 	db	1
  1300  008FB6                     __end_of_device_dsc:
  1301                           	opt stack 0
  1302  008FB6                     _bootloader_filename:
  1303                           	opt stack 0
  1304  008FB6  46                 	db	70
  1305  008FB7  49                 	db	73
  1306  008FB8  52                 	db	82
  1307  008FB9  4D                 	db	77
  1308  008FBA  57                 	db	87
  1309  008FBB  41                 	db	65
  1310  008FBC  52                 	db	82
  1311  008FBD  45                 	db	69
  1312  008FBE  00                 	db	0
  1313  008FBF                     __end_of_bootloader_filename:
  1314                           	opt stack 0
  1315  008FBF                     _flash_command_pagesize_528:
  1316                           	opt stack 0
  1317  008FBF  3D                 	db	61
  1318  008FC0  2A                 	db	42
  1319  008FC1  80                 	db	128
  1320  008FC2  A7                 	db	167
  1321  008FC3                     __end_of_flash_command_pagesize_528:
  1322                           	opt stack 0
  1323  008FC3                     _flash_command_pagesize_512:
  1324                           	opt stack 0
  1325  008FC3  3D                 	db	61
  1326  008FC4  2A                 	db	42
  1327  008FC5  80                 	db	128
  1328  008FC6  A6                 	db	166
  1329  008FC7                     __end_of_flash_command_pagesize_512:
  1330                           	opt stack 0
  1331  008FC7                     _bootloader_extension:
  1332                           	opt stack 0
  1333  008FC7  48                 	db	72
  1334  008FC8  45                 	db	69
  1335  008FC9  58                 	db	88
  1336  008FCA  00                 	db	0
  1337  008FCB                     __end_of_bootloader_extension:
  1338                           	opt stack 0
  1339  008FCB                     _sd000:
  1340                           	opt stack 0
  1341  008FCB  04                 	db	4
  1342  008FCC  03                 	db	3
  1343  008FCD  0409               	dw	1033
  1344  008FCF                     __end_of_sd000:
  1345                           	opt stack 0
  1346  0000                     _RPINR22	set	3837
  1347  0000                     _RPOR23	set	3799
  1348  0000                     _RPOR21	set	3797
  1349  0000                     _RPINR21	set	3836
  1350  0000                     _RPINR2	set	3810
  1351  0000                     _RPINR3	set	3811
  1352  0000                     _RPINR1	set	3809
  1353  0000                     _PPSCONbits	set	3775
  1354  0000                     _ANCON0bits	set	3912
  1355  0000                     _UEP0bits	set	3878
  1356  0000                     _UIEbits	set	3894
  1357  0000                     _UADDR	set	3896
  1358  0000                     _UIE	set	3894
  1359  0000                     _UEIE	set	3895
  1360  0000                     _UCFG	set	3897
  1361  0000                     _UEP1	set	3879
  1362  0000                     _UEP0	set	3878
  1363  0000                     _TBLPTR	set	4086
  1364  0000                     _RXADDRL	set	3945
  1365  0000                     _RXADDRH	set	3944
  1366  0000                     _DMABCL	set	3943
  1367  0000                     _DMABCH	set	3942
  1368  0000                     _TXADDRL	set	3947
  1369  0000                     _TXADDRH	set	3946
  1370  0000                     _DMACON2bits	set	3974
  1371  0000                     _DMACON1bits	set	3976
  1372  0000                     _SSP2CON1bits	set	3954
  1373  0000                     _SSP2STATbits	set	3955
  1374  0000                     _INTCON	set	4082
  1375  0000                     _EECON1	set	4006
  1376  0000                     _TABLAT	set	4085
  1377  0000                     _EECON1bits	set	4006
  1378  0000                     _SSP1CON1	set	4038
  1379  0000                     _SSP1BUF	set	4041
  1380  0000                     _SSP1CON2bits	set	4037
  1381  0000                     _SSP1CON1bits	set	4038
  1382  0000                     _SSP1ADD	set	4040
  1383  0000                     _SSP1STATbits	set	4039
  1384  0000                     _TRISEbits	set	3990
  1385  0000                     _LATDbits	set	3980
  1386  0000                     _TRISDbits	set	3989
  1387  0000                     _LATCbits	set	3979
  1388  0000                     _TRISCbits	set	3988
  1389  0000                     _LATAbits	set	3977
  1390  0000                     _TRISAbits	set	3986
  1391  0000                     _T0CONbits	set	4053
  1392  0000                     _INTCON2bits	set	4081
  1393  0000                     _EECON2	set	4007
  1394  0000                     _PORTEbits	set	3972
  1395  0000                     _INTCON3bits	set	4080
  1396  0000                     _TMR0L	set	4054
  1397  0000                     _TMR0H	set	4055
  1398  0000                     _INTCONbits	set	4082
  1399  0000                     _OSCCON	set	4051
  1400  0000                     _OSCTUNEbits	set	3995
  1401  0000                     _PORTAbits	set	3968
  1402  0000                     _USTAT	set	3940
  1403  0000                     _PIR2bits	set	4001
  1404  0000                     _UCON	set	3941
  1405  0000                     _UIRbits	set	3938
  1406  0000                     _UCONbits	set	3941
  1407  0000                     _UIR	set	3938
  1408  0000                     _UEIR	set	3939
  1409  0000                     _PIE2bits	set	4000
  1410  008FCF                     STR_12:
  1411  008FCF  68                 	db	104	;'h'
  1412  008FD0  65                 	db	101	;'e'
  1413  008FD1  6C                 	db	108	;'l'
  1414  008FD2  6C                 	db	108	;'l'
  1415  008FD3  6F                 	db	111	;'o'
  1416  008FD4  20                 	db	32
  1417  008FD5  77                 	db	119	;'w'
  1418  008FD6  6F                 	db	111	;'o'
  1419  008FD7  72                 	db	114	;'r'
  1420  008FD8  6C                 	db	108	;'l'
  1421  008FD9  64                 	db	100	;'d'
  1422  008FDA  21                 	db	33
  1423  008FDB  00                 	db	0
  1424  008FDC                     STR_9:
  1425  008FDC  53                 	db	83	;'S'
  1426  008FDD  74                 	db	116	;'t'
  1427  008FDE  65                 	db	101	;'e'
  1428  008FDF  70                 	db	112	;'p'
  1429  008FE0  70                 	db	112	;'p'
  1430  008FE1  65                 	db	101	;'e'
  1431  008FE2  72                 	db	114	;'r'
  1432  008FE3  43                 	db	67	;'C'
  1433  008FE4  74                 	db	116	;'t'
  1434  008FE5  72                 	db	114	;'r'
  1435  008FE6  6C                 	db	108	;'l'
  1436  008FE7  00                 	db	0
  1437  008FE8                     STR_10:
  1438  008FE8  46                 	db	70	;'F'
  1439  008FE9  49                 	db	73	;'I'
  1440  008FEA  4C                 	db	76	;'L'
  1441  008FEB  45                 	db	69	;'E'
  1442  008FEC  20                 	db	32
  1443  008FED  20                 	db	32
  1444  008FEE  20                 	db	32
  1445  008FEF  20                 	db	32
  1446  008FF0  00                 	db	0
  1447  008FF1                     STR_1:
  1448  008FF1  4D                 	db	77	;'M'
  1449  008FF2  53                 	db	83	;'S'
  1450  008FF3  44                 	db	68	;'D'
  1451  008FF4  4F                 	db	79	;'O'
  1452  008FF5  53                 	db	83	;'S'
  1453  008FF6  35                 	db	53	;'5'
  1454  008FF7  2E                 	db	46
  1455  008FF8  30                 	db	48	;'0'
  1456  008FF9  00                 	db	0
  1457  008FFA                     STR_11:
  1458  008FFA  54                 	db	84	;'T'
  1459  008FFB  58                 	db	88	;'X'
  1460  008FFC  54                 	db	84	;'T'
  1461  008FFD  00                 	db	0
  1462  0000                     
  1463                           ; #config settings
  1464  008FFE  00                 	db	0	; dummy byte at the end
  1465  0000                     
  1466                           	psect	cinit
  1467  00524A                     __pcinit:
  1468                           	opt stack 0
  1469  00524A                     start_initialization:
  1470                           	opt stack 0
  1471  00524A                     __initialization:
  1472                           	opt stack 0
  1473                           
  1474                           ; Initialize objects allocated to BANK2 (17 bytes)
  1475                           ; load TBLPTR registers with __pidataBANK2
  1476  00524A  0E28               	movlw	low __pidataBANK2
  1477  00524C  6EF6               	movwf	tblptrl,c
  1478  00524E  0E71               	movlw	high __pidataBANK2
  1479  005250  6EF7               	movwf	tblptrh,c
  1480  005252  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1481  005254  6EF8               	movwf	tblptru,c
  1482  005256  EE02  F0B2         	lfsr	0,__pdataBANK2
  1483  00525A  EE10 F011          	lfsr	1,17
  1484  00525E                     copy_data0:
  1485  00525E  0009               	tblrd		*+
  1486  005260  CFF5 FFEE          	movff	tablat,postinc0
  1487  005264  50E5               	movf	postdec1,w,c
  1488  005266  50E1               	movf	fsr1l,w,c
  1489  005268  E1FA               	bnz	copy_data0
  1490                           
  1491                           ; Initialize objects allocated to BANK1 (20 bytes)
  1492                           ; load TBLPTR registers with __pidataBANK1
  1493  00526A  0EBA               	movlw	low __pidataBANK1
  1494  00526C  6EF6               	movwf	tblptrl,c
  1495  00526E  0E70               	movlw	high __pidataBANK1
  1496  005270  6EF7               	movwf	tblptrh,c
  1497  005272  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1498  005274  6EF8               	movwf	tblptru,c
  1499  005276  EE01  F0E6         	lfsr	0,__pdataBANK1
  1500  00527A  EE10 F014          	lfsr	1,20
  1501  00527E                     copy_data1:
  1502  00527E  0009               	tblrd		*+
  1503  005280  CFF5 FFEE          	movff	tablat,postinc0
  1504  005284  50E5               	movf	postdec1,w,c
  1505  005286  50E1               	movf	fsr1l,w,c
  1506  005288  E1FA               	bnz	copy_data1
  1507                           
  1508                           ; Initialize objects allocated to BANK0 (1 bytes)
  1509                           ; load TBLPTR registers with __pidataBANK0
  1510  00528A  0E5E               	movlw	low __pidataBANK0
  1511  00528C  6EF6               	movwf	tblptrl,c
  1512  00528E  0E72               	movlw	high __pidataBANK0
  1513  005290  6EF7               	movwf	tblptrh,c
  1514  005292  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1515  005294  6EF8               	movwf	tblptru,c
  1516  005296  0009               	tblrd		*+	;fetch initializer
  1517  005298  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1518                           
  1519                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1520  00529C  EE02  F0C3         	lfsr	0,__pbssBIGRAMll
  1521  0052A0  EE12 F000          	lfsr	1,512
  1522  0052A4                     clear_0:
  1523  0052A4  6AEE               	clrf	postinc0,c
  1524  0052A6  50E5               	movf	postdec1,w,c
  1525  0052A8  50E1               	movf	fsr1l,w,c
  1526  0052AA  E1FC               	bnz	clear_0
  1527  0052AC  50E2               	movf	fsr1h,w,c
  1528  0052AE  E1FA               	bnz	clear_0
  1529                           
  1530                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1531  0052B0  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1532  0052B4  EE14 F000          	lfsr	1,1024
  1533  0052B8                     clear_1:
  1534  0052B8  6AEE               	clrf	postinc0,c
  1535  0052BA  50E5               	movf	postdec1,w,c
  1536  0052BC  50E1               	movf	fsr1l,w,c
  1537  0052BE  E1FC               	bnz	clear_1
  1538  0052C0  50E2               	movf	fsr1h,w,c
  1539  0052C2  E1FA               	bnz	clear_1
  1540                           
  1541                           ; Clear objects allocated to BANK2 (178 bytes)
  1542  0052C4  EE02  F000         	lfsr	0,__pbssBANK2
  1543  0052C8  0EB2               	movlw	178
  1544  0052CA                     clear_2:
  1545  0052CA  6AEE               	clrf	postinc0,c
  1546  0052CC  06E8               	decf	wreg,f,c
  1547  0052CE  E1FD               	bnz	clear_2
  1548                           
  1549                           ; Clear objects allocated to BANK1 (230 bytes)
  1550  0052D0  EE01  F000         	lfsr	0,__pbssBANK1
  1551  0052D4  0EE6               	movlw	230
  1552  0052D6                     clear_3:
  1553  0052D6  6AEE               	clrf	postinc0,c
  1554  0052D8  06E8               	decf	wreg,f,c
  1555  0052DA  E1FD               	bnz	clear_3
  1556                           
  1557                           ; Clear objects allocated to BANK0 (86 bytes)
  1558  0052DC  EE00  F060         	lfsr	0,__pbssBANK0
  1559  0052E0  0E56               	movlw	86
  1560  0052E2                     clear_4:
  1561  0052E2  6AEE               	clrf	postinc0,c
  1562  0052E4  06E8               	decf	wreg,f,c
  1563  0052E6  E1FD               	bnz	clear_4
  1564                           
  1565                           ; Clear objects allocated to COMRAM (1 bytes)
  1566  0052E8  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1567  0052EA                     end_of_initialization:
  1568                           	opt stack 0
  1569  0052EA                     __end_of__initialization:
  1570                           	opt stack 0
  1571  0052EA  0100               	movlb	0
  1572  0052EC  EF44  F024         	goto	_main	;jump to C main() function
  1573                           tblptru	equ	0xFF8
  1574                           tblptrh	equ	0xFF7
  1575                           tblptrl	equ	0xFF6
  1576                           tablat	equ	0xFF5
  1577                           postinc0	equ	0xFEE
  1578                           wreg	equ	0xFE8
  1579                           postdec1	equ	0xFE5
  1580                           fsr1h	equ	0xFE2
  1581                           fsr1l	equ	0xFE1
  1582                           
  1583                           	psect	bssCOMRAM
  1584  00005F                     __pbssCOMRAM:
  1585                           	opt stack 0
  1586  00005F                     _USBDeviceState:
  1587                           	opt stack 0
  1588  00005F                     	ds	1
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           postinc0	equ	0xFEE
  1594                           wreg	equ	0xFE8
  1595                           postdec1	equ	0xFE5
  1596                           fsr1h	equ	0xFE2
  1597                           fsr1l	equ	0xFE1
  1598                           
  1599                           	psect	bssBANK0
  1600  000060                     __pbssBANK0:
  1601                           	opt stack 0
  1602  000060                     _os:
  1603                           	opt stack 0
  1604  000060                     	ds	13
  1605  00006D                     _inPipes:
  1606                           	opt stack 0
  1607  00006D                     	ds	6
  1608  000073                     _pBDTEntryIn:
  1609                           	opt stack 0
  1610  000073                     	ds	6
  1611  000079                     _pBDTEntryOut:
  1612                           	opt stack 0
  1613  000079                     	ds	6
  1614  00007F                     _hex_file_size:
  1615                           	opt stack 0
  1616  00007F                     	ds	4
  1617  000083                     _hex_file_offset:
  1618                           	opt stack 0
  1619  000083                     	ds	4
  1620  000087                     _LBA:
  1621                           	opt stack 0
  1622  000087                     	ds	4
  1623  00008B                     _TransferLength:
  1624                           	opt stack 0
  1625  00008B                     	ds	2
  1626  00008D                     _USBMSDInHandle:
  1627                           	opt stack 0
  1628  00008D                     	ds	2
  1629  00008F                     _USBMSDOutHandle:
  1630                           	opt stack 0
  1631  00008F                     	ds	2
  1632  000091                     _pBDTEntryEP0OutNext:
  1633                           	opt stack 0
  1634  000091                     	ds	2
  1635  000093                     _pBDTEntryEP0OutCurrent:
  1636                           	opt stack 0
  1637  000093                     	ds	2
  1638  000095                     _start_from_byte_next:
  1639                           	opt stack 0
  1640  000095                     	ds	1
  1641  000096                     _last_error:
  1642                           	opt stack 0
  1643  000096                     	ds	1
  1644  000097                     _power_state:
  1645                           	opt stack 0
  1646  000097                     	ds	1
  1647  000098                     _userInterfaceStatus:
  1648                           	opt stack 0
  1649  000098                     	ds	1
  1650  000099                     _MSDCBWValid:
  1651                           	opt stack 0
  1652  000099                     	ds	1
  1653  00009A                     _MSDHostNoData:
  1654                           	opt stack 0
  1655  00009A                     	ds	1
  1656  00009B                     _SoftDetach:
  1657                           	opt stack 0
  1658  00009B                     	ds	1
  1659  00009C                     _MSDRetryAttempt:
  1660                           	opt stack 0
  1661  00009C                     	ds	1
  1662  00009D                     _MSDWriteState:
  1663                           	opt stack 0
  1664  00009D                     	ds	1
  1665  00009E                     _MSDReadState:
  1666                           	opt stack 0
  1667  00009E                     	ds	1
  1668  00009F                     _MSDCommandState:
  1669                           	opt stack 0
  1670  00009F                     	ds	1
  1671  0000A0                     _MSD_State:
  1672                           	opt stack 0
  1673  0000A0                     	ds	1
  1674  0000A1                     _USBTicksSinceSuspendEnd:
  1675                           	opt stack 0
  1676  0000A1                     	ds	1
  1677  0000A2                     _USBDeferOUTDataStagePackets:
  1678                           	opt stack 0
  1679  0000A2                     	ds	1
  1680  0000A3                     _USBDeferINDataStagePackets:
  1681                           	opt stack 0
  1682  0000A3                     	ds	1
  1683  0000A4                     _USBStatusStageEnabledFlag2:
  1684                           	opt stack 0
  1685  0000A4                     	ds	1
  1686  0000A5                     _USBStatusStageEnabledFlag1:
  1687                           	opt stack 0
  1688  0000A5                     	ds	1
  1689  0000A6                     _USBDeferStatusStagePacket:
  1690                           	opt stack 0
  1691  0000A6                     	ds	1
  1692  0000A7                     _USBStatusStageTimeoutCounter:
  1693                           	opt stack 0
  1694  0000A7                     	ds	1
  1695  0000A8                     _BothEP0OutUOWNsSet:
  1696                           	opt stack 0
  1697  0000A8                     	ds	1
  1698  0000A9                     _endpoint_number:
  1699                           	opt stack 0
  1700  0000A9                     	ds	1
  1701  0000AA                     _USBBusIsSuspended:
  1702                           	opt stack 0
  1703  0000AA                     	ds	1
  1704  0000AB                     _RemoteWakeup:
  1705                           	opt stack 0
  1706  0000AB                     	ds	1
  1707  0000AC                     _controlTransferState:
  1708                           	opt stack 0
  1709  0000AC                     	ds	1
  1710  0000AD                     _shortPacketStatus:
  1711                           	opt stack 0
  1712  0000AD                     	ds	1
  1713  0000AE                     _fast_read_cluster_number:
  1714                           	opt stack 0
  1715  0000AE                     	ds	2
  1716  0000B0                     _fast_read_cluster:
  1717                           	opt stack 0
  1718  0000B0                     	ds	2
  1719  0000B2                     _active_protocol:
  1720                           	opt stack 0
  1721  0000B2                     	ds	1
  1722  0000B3                     _idle_rate:
  1723                           	opt stack 0
  1724  0000B3                     	ds	1
  1725  0000B4                     _USTATcopy:
  1726                           	opt stack 0
  1727  0000B4                     	ds	1
  1728  0000B5                     _USBActiveConfiguration:
  1729                           	opt stack 0
  1730  0000B5                     	ds	1
  1731                           tblptru	equ	0xFF8
  1732                           tblptrh	equ	0xFF7
  1733                           tblptrl	equ	0xFF6
  1734                           tablat	equ	0xFF5
  1735                           postinc0	equ	0xFEE
  1736                           wreg	equ	0xFE8
  1737                           postdec1	equ	0xFE5
  1738                           fsr1h	equ	0xFE2
  1739                           fsr1l	equ	0xFE1
  1740                           
  1741                           	psect	dataBANK0
  1742  0000FF                     __pdataBANK0:
  1743                           	opt stack 0
  1744  0000FF                     _file_number:
  1745                           	opt stack 0
  1746  0000FF                     	ds	1
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           postdec1	equ	0xFE5
  1754                           fsr1h	equ	0xFE2
  1755                           fsr1l	equ	0xFE1
  1756                           
  1757                           	psect	bssBANK1
  1758  000100                     __pbssBANK1:
  1759                           	opt stack 0
  1760  000100                     _gblCBW:
  1761                           	opt stack 0
  1762  000100                     	ds	31
  1763  00011F                     _gblSenseData:
  1764                           	opt stack 0
  1765  00011F                     	ds	18
  1766  000131                     _outPipes:
  1767                           	opt stack 0
  1768  000131                     	ds	8
  1769  000139                     _extended_linear_address:
  1770                           	opt stack 0
  1771  000139                     	ds	4
  1772  00013D                     _file_maximum_address:
  1773                           	opt stack 0
  1774  00013D                     	ds	4
  1775  000141                     _file_minimum_address:
  1776                           	opt stack 0
  1777  000141                     	ds	4
  1778  000145                     _gblBLKLen:
  1779                           	opt stack 0
  1780  000145                     	ds	4
  1781  000149                     _gblNumBLKS:
  1782                           	opt stack 0
  1783  000149                     	ds	4
  1784  00014D                     _USB1msTickCount:
  1785                           	opt stack 0
  1786  00014D                     	ds	4
  1787  000151                     _config_external:
  1788                           	opt stack 0
  1789  000151                     	ds	3
  1790  000154                     _config_internal:
  1791                           	opt stack 0
  1792  000154                     	ds	3
  1793  000157                     _ep_data_out:
  1794                           	opt stack 0
  1795  000157                     	ds	3
  1796  00015A                     _ep_data_in:
  1797                           	opt stack 0
  1798  00015A                     	ds	3
  1799  00015D                     _FileAddress:
  1800                           	opt stack 0
  1801  00015D                     	ds	2
  1802  00015F                     _flash_pages_written:
  1803                           	opt stack 0
  1804  00015F                     	ds	2
  1805  000161                     _total_hex_file_entries:
  1806                           	opt stack 0
  1807  000161                     	ds	2
  1808  000163                     _hex_file_entries:
  1809                           	opt stack 0
  1810  000163                     	ds	2
  1811  000165                     _startup_timer:
  1812                           	opt stack 0
  1813  000165                     	ds	2
  1814  000167                     _system_ui_inactive_count:
  1815                           	opt stack 0
  1816  000167                     	ds	2
  1817  000169                     _USBInHandle:
  1818                           	opt stack 0
  1819  000169                     	ds	2
  1820  00016B                     _USBOutHandle:
  1821                           	opt stack 0
  1822  00016B                     	ds	2
  1823  00016D                     _gblMediaPresent:
  1824                           	opt stack 0
  1825  00016D                     	ds	2
  1826  00016F                     _MSBBufferIndex:
  1827                           	opt stack 0
  1828  00016F                     	ds	2
  1829  000171                     _ptrNextData:
  1830                           	opt stack 0
  1831  000171                     	ds	2
  1832  000173                     _pDst:
  1833                           	opt stack 0
  1834  000173                     	ds	2
  1835  000175                     _active_configuration:
  1836                           	opt stack 0
  1837  000175                     	ds	1
  1838  000176                     _i2c_frequency:
  1839                           	opt stack 0
  1840  000176                     	ds	1
  1841  000177                     _gblCBWLength:
  1842                           	opt stack 0
  1843  000177                     	ds	1
  1844  000178                     _display_content:
  1845                           	opt stack 0
  1846  000178                     	ds	80
  1847  0001C8                     _hex_file_entry:
  1848                           	opt stack 0
  1849  0001C8                     	ds	23
  1850  0001DF                     _mediaInformation:
  1851                           	opt stack 0
  1852  0001DF                     	ds	5
  1853  0001E4                     _USBAlternateInterface:
  1854                           	opt stack 0
  1855  0001E4                     	ds	2
  1856                           tblptru	equ	0xFF8
  1857                           tblptrh	equ	0xFF7
  1858                           tblptrl	equ	0xFF6
  1859                           tablat	equ	0xFF5
  1860                           postinc0	equ	0xFEE
  1861                           wreg	equ	0xFE8
  1862                           postdec1	equ	0xFE5
  1863                           fsr1h	equ	0xFE2
  1864                           fsr1l	equ	0xFE1
  1865                           
  1866                           	psect	dataBANK1
  1867  0001E6                     __pdataBANK1:
  1868                           	opt stack 0
  1869  0001E6                     _LUN:
  1870                           	opt stack 0
  1871  0001E6                     	ds	20
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           postinc0	equ	0xFEE
  1877                           wreg	equ	0xFE8
  1878                           postdec1	equ	0xFE5
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           
  1882                           	psect	bssBANK2
  1883  000200                     __pbssBANK2:
  1884                           	opt stack 0
  1885  000200                     _ToSendDataBuffer:
  1886                           	opt stack 0
  1887  000200                     	ds	64
  1888  000240                     _ReceivedDataBuffer:
  1889                           	opt stack 0
  1890  000240                     	ds	64
  1891  000280                     _file_buffer:
  1892                           	opt stack 0
  1893  000280                     	ds	50
  1894                           tblptru	equ	0xFF8
  1895                           tblptrh	equ	0xFF7
  1896                           tblptrl	equ	0xFF6
  1897                           tablat	equ	0xFF5
  1898                           postinc0	equ	0xFEE
  1899                           wreg	equ	0xFE8
  1900                           postdec1	equ	0xFE5
  1901                           fsr1h	equ	0xFE2
  1902                           fsr1l	equ	0xFE1
  1903                           
  1904                           	psect	dataBANK2
  1905  0002B2                     __pdataBANK2:
  1906                           	opt stack 0
  1907  0002B2                     i2c_display_send_init_sequence@F6804:
  1908                           	opt stack 0
  1909  0002B2                     	ds	9
  1910  0002BB                     	ds	8
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           postinc0	equ	0xFEE
  1916                           wreg	equ	0xFE8
  1917                           postdec1	equ	0xFE5
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           
  1921                           	psect	bssBIGRAMlh
  1922  000800                     __pbssBIGRAMlh:
  1923                           	opt stack 0
  1924  000800                     _pageBuffer:
  1925                           	opt stack 0
  1926  000800                     	ds	1024
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1h	equ	0xFE2
  1935                           fsr1l	equ	0xFE1
  1936                           
  1937                           	psect	bssBIGRAMll
  1938  0002C3                     __pbssBIGRAMll:
  1939                           	opt stack 0
  1940  0002C3                     _buffer:
  1941                           	opt stack 0
  1942  0002C3                     	ds	512
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           
  1953                           	psect	cstackBANK0
  1954  0000B6                     __pcstackBANK0:
  1955                           	opt stack 0
  1956  0000B6                     fat_read_from_file_fast@sector:
  1957                           	opt stack 0
  1958                           
  1959                           ; 2 bytes @ 0x0
  1960  0000B6                     	ds	2
  1961  0000B8                     fat_read_from_file_fast@working_cluster:
  1962                           	opt stack 0
  1963                           
  1964                           ; 2 bytes @ 0x2
  1965  0000B8                     	ds	2
  1966  0000BA                     fat_read_from_file_fast@offset:
  1967                           	opt stack 0
  1968                           
  1969                           ; 2 bytes @ 0x4
  1970  0000BA                     	ds	2
  1971  0000BC                     fat_read_from_file_fast@needed_cluster:
  1972                           	opt stack 0
  1973                           
  1974                           ; 2 bytes @ 0x6
  1975  0000BC                     	ds	2
  1976  0000BE                     fat_read_from_file_fast@read_length:
  1977                           	opt stack 0
  1978                           
  1979                           ; 2 bytes @ 0x8
  1980  0000BE                     	ds	2
  1981  0000C0                     fat_read_from_file_fast@position:
  1982                           	opt stack 0
  1983                           
  1984                           ; 4 bytes @ 0xA
  1985  0000C0                     	ds	4
  1986  0000C4                     ??__bootloader_verify_file:
  1987  0000C4                     ??__bootloader_program:
  1988                           
  1989                           ; 1 bytes @ 0xE
  1990  0000C4                     	ds	8
  1991  0000CC                     __bootloader_program@buffer:
  1992                           	opt stack 0
  1993  0000CC                     __bootloader_verify_file@root:
  1994                           	opt stack 0
  1995                           
  1996                           ; 32 bytes @ 0x16
  1997  0000CC                     	ds	2
  1998  0000CE                     __bootloader_program@entry_page:
  1999                           	opt stack 0
  2000                           
  2001                           ; 2 bytes @ 0x18
  2002  0000CE                     	ds	2
  2003  0000D0                     __bootloader_program@address_within_page:
  2004                           	opt stack 0
  2005                           
  2006                           ; 2 bytes @ 0x1A
  2007  0000D0                     	ds	2
  2008  0000D2                     __bootloader_program@root:
  2009                           	opt stack 0
  2010                           
  2011                           ; 32 bytes @ 0x1C
  2012  0000D2                     	ds	26
  2013  0000EC                     __bootloader_verify_file@rec_counter:
  2014                           	opt stack 0
  2015                           
  2016                           ; 1 bytes @ 0x36
  2017  0000EC                     	ds	1
  2018  0000ED                     __bootloader_verify_file@return_value:
  2019                           	opt stack 0
  2020                           
  2021                           ; 4 bytes @ 0x37
  2022  0000ED                     	ds	4
  2023  0000F1                     __bootloader_verify_file@address32:
  2024                           	opt stack 0
  2025                           
  2026                           ; 4 bytes @ 0x3B
  2027  0000F1                     	ds	1
  2028  0000F2                     __bootloader_program@return_value:
  2029                           	opt stack 0
  2030                           
  2031                           ; 4 bytes @ 0x3C
  2032  0000F2                     	ds	4
  2033  0000F6                     __bootloader_program@address32:
  2034                           	opt stack 0
  2035                           
  2036                           ; 4 bytes @ 0x40
  2037  0000F6                     	ds	4
  2038  0000FA                     __bootloader_program@start_from_byte:
  2039                           	opt stack 0
  2040                           
  2041                           ; 1 bytes @ 0x44
  2042  0000FA                     	ds	1
  2043  0000FB                     __bootloader_program@cntr:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x45
  2047  0000FB                     	ds	2
  2048  0000FD                     __bootloader_program@page_to_write:
  2049                           	opt stack 0
  2050                           
  2051                           ; 2 bytes @ 0x47
  2052  0000FD                     	ds	2
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           postinc0	equ	0xFEE
  2058                           wreg	equ	0xFE8
  2059                           postdec1	equ	0xFE5
  2060                           fsr1h	equ	0xFE2
  2061                           fsr1l	equ	0xFE1
  2062                           
  2063                           	psect	cstackCOMRAM
  2064  000001                     __pcstackCOMRAM:
  2065                           	opt stack 0
  2066  000001                     ??_USBStdGetDscHandler:
  2067  000001                     ??_USBStdGetStatusHandler:
  2068  000001                     ??_system_delay_ms:
  2069  000001                     ??__i2c_wait_idle:
  2070  000001                     ??__display_clear:
  2071  000001                     ?_USBTransferOnePacket:
  2072                           	opt stack 0
  2073  000001                     ?_ExternalFlash_MediaInitialize:
  2074                           	opt stack 0
  2075  000001                     ?_ExternalFlash_SectorSizeRead:
  2076                           	opt stack 0
  2077  000001                     ?_bootloader_get_entries:
  2078                           	opt stack 0
  2079  000001                     ?_bootloader_get_total_entries:
  2080                           	opt stack 0
  2081  000001                     ?_bootloader_get_rec_address:
  2082                           	opt stack 0
  2083  000001                     ?_bootloader_get_flashPagesWritten:
  2084                           	opt stack 0
  2085  000001                     ?_strncmp:
  2086                           	opt stack 0
  2087  000001                     ?_internalFlash_pageFromAddress:
  2088                           	opt stack 0
  2089  000001                     ?_internalFlash_getBuffer:
  2090                           	opt stack 0
  2091  000001                     ?__sector_from_file_number:
  2092                           	opt stack 0
  2093  000001                     ?__offset_from_file_number:
  2094                           	opt stack 0
  2095  000001                     ?__data_sector_from_cluster:
  2096                           	opt stack 0
  2097  000001                     ?__fat_sector_from_cluster:
  2098                           	opt stack 0
  2099  000001                     ?__fat_offset_from_cluster:
  2100                           	opt stack 0
  2101  000001                     ?__read_value_from_offset:
  2102                           	opt stack 0
  2103  000001                     ?_bootloader_get_rec_dataLength:
  2104                           	opt stack 0
  2105  000001                     ?___wmul:
  2106                           	opt stack 0
  2107  000001                     ?___lwdiv:
  2108                           	opt stack 0
  2109  000001                     ?___lwmod:
  2110                           	opt stack 0
  2111  000001                     ?_ExternalFlash_CapacityRead:
  2112                           	opt stack 0
  2113  000001                     ?_bootloader_get_file_size:
  2114                           	opt stack 0
  2115  000001                     ?_internalFlash_addressFromPage:
  2116                           	opt stack 0
  2117  000001                     ?___lldiv:
  2118                           	opt stack 0
  2119  000001                     ?___llmod:
  2120                           	opt stack 0
  2121  000001                     USBTransferOnePacket@dir:
  2122                           	opt stack 0
  2123  000001                     USBStallEndpoint@dir:
  2124                           	opt stack 0
  2125  000001                     USBConfigureEndpoint@direction:
  2126                           	opt stack 0
  2127  000001                     USBCtrlTrfTxService@byteToSend:
  2128                           	opt stack 0
  2129  000001                     USBCtrlTrfRxService@i:
  2130                           	opt stack 0
  2131  000001                     __i2c_send@dat:
  2132                           	opt stack 0
  2133  000001                     i2c_set_frequency@frequency:
  2134                           	opt stack 0
  2135  000001                     display_get_character@position:
  2136                           	opt stack 0
  2137  000001                     __display_search@cntr:
  2138                           	opt stack 0
  2139  000001                     __display_rebooting@cntr:
  2140                           	opt stack 0
  2141  000001                     __display_suspended@cntr:
  2142                           	opt stack 0
  2143  000001                     hexCharToUint8@c:
  2144                           	opt stack 0
  2145  000001                     bootloader_get_rec_data@index:
  2146                           	opt stack 0
  2147  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2148                           	opt stack 0
  2149  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2150                           	opt stack 0
  2151  000001                     SYSTEM_Initialize@pll_startup_counter:
  2152                           	opt stack 0
  2153  000001                     ExternalFlash_MediaInitialize@config:
  2154                           	opt stack 0
  2155  000001                     ExternalFlash_SectorSizeRead@config:
  2156                           	opt stack 0
  2157  000001                     ExternalFlash_CapacityRead@config:
  2158                           	opt stack 0
  2159  000001                     ExternalFlash_MediaDetect@config:
  2160                           	opt stack 0
  2161  000001                     ExternalFlash_WriteProtectStateGet@config:
  2162                           	opt stack 0
  2163  000001                     __data_sector_from_cluster@fat_cluster:
  2164                           	opt stack 0
  2165  000001                     __fat_sector_from_cluster@cluster:
  2166                           	opt stack 0
  2167  000001                     __fat_offset_from_cluster@cluster:
  2168                           	opt stack 0
  2169  000001                     __read_value_from_offset@offset:
  2170                           	opt stack 0
  2171  000001                     __get_mbr@idx:
  2172                           	opt stack 0
  2173  000001                     __get_fbr@idx:
  2174                           	opt stack 0
  2175  000001                     __get_fat@idx:
  2176                           	opt stack 0
  2177  000001                     __get_root@idx:
  2178                           	opt stack 0
  2179  000001                     __get_data@idx:
  2180                           	opt stack 0
  2181  000001                     internalFlash_addressFromPage@page:
  2182                           	opt stack 0
  2183  000001                     spi_tx@data:
  2184                           	opt stack 0
  2185  000001                     spi_tx_tx@command:
  2186                           	opt stack 0
  2187  000001                     spi_tx_rx@command:
  2188                           	opt stack 0
  2189  000001                     ___wmul@multiplier:
  2190                           	opt stack 0
  2191  000001                     ___lwdiv@dividend:
  2192                           	opt stack 0
  2193  000001                     ___lwmod@dividend:
  2194                           	opt stack 0
  2195  000001                     memcpy@d1:
  2196                           	opt stack 0
  2197  000001                     memset@p1:
  2198                           	opt stack 0
  2199  000001                     strncmp@s1:
  2200                           	opt stack 0
  2201  000001                     __spi_init@details:
  2202                           	opt stack 0
  2203  000001                     __bootloader_check_address@address:
  2204                           	opt stack 0
  2205  000001                     internalFlash_pageFromAddress@address:
  2206                           	opt stack 0
  2207  000001                     ___lldiv@dividend:
  2208                           	opt stack 0
  2209  000001                     ___llmod@dividend:
  2210                           	opt stack 0
  2211                           
  2212                           ; 4 bytes @ 0x0
  2213  000001                     	ds	1
  2214  000002                     ??_USBConfigureEndpoint:
  2215  000002                     ??_USBStallEndpoint:
  2216  000002                     ??_display_get_character:
  2217  000002                     USBCtrlTrfRxService@byteToRead:
  2218                           	opt stack 0
  2219  000002                     USBCtrlTrfInHandler@lastDTS:
  2220                           	opt stack 0
  2221  000002                     system_delay_ms@ms:
  2222                           	opt stack 0
  2223  000002                     hexCharToUint8@ascii:
  2224                           	opt stack 0
  2225  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2226                           	opt stack 0
  2227  000002                     USBTransferOnePacket@data:
  2228                           	opt stack 0
  2229  000002                     USBStdGetStatusHandler@p:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x1
  2233  000002                     	ds	1
  2234  000003                     ??_MSDComputeDeviceInAndResidue:
  2235  000003                     ??__get_mbr:
  2236  000003                     ??__get_fbr:
  2237  000003                     ??__get_fat:
  2238  000003                     ??__get_root:
  2239  000003                     ?_hexCharsToUint16:
  2240                           	opt stack 0
  2241  000003                     system_delay_ms@cntr:
  2242                           	opt stack 0
  2243  000003                     __display_clear@row:
  2244                           	opt stack 0
  2245  000003                     __sector_from_file_number@file_number:
  2246                           	opt stack 0
  2247  000003                     __offset_from_file_number@file_number:
  2248                           	opt stack 0
  2249  000003                     hexCharsToUint8@c2:
  2250                           	opt stack 0
  2251  000003                     hexCharsToUint16@c2:
  2252                           	opt stack 0
  2253  000003                     SYSTEM_Initialize@pll_startup_counter_2866:
  2254                           	opt stack 0
  2255  000003                     __read_value_from_offset@buffer:
  2256                           	opt stack 0
  2257  000003                     spi_tx@length:
  2258                           	opt stack 0
  2259  000003                     spi_tx_tx@command_length:
  2260                           	opt stack 0
  2261  000003                     spi_tx_rx@command_length:
  2262                           	opt stack 0
  2263  000003                     ___wmul@multiplicand:
  2264                           	opt stack 0
  2265  000003                     ___lwdiv@divisor:
  2266                           	opt stack 0
  2267  000003                     ___lwmod@divisor:
  2268                           	opt stack 0
  2269  000003                     memset@c:
  2270                           	opt stack 0
  2271  000003                     strncmp@s2:
  2272                           	opt stack 0
  2273  000003                     memcpy@s1:
  2274                           	opt stack 0
  2275                           
  2276                           ; 3 bytes @ 0x2
  2277  000003                     	ds	1
  2278  000004                     ??_hexCharsToUint8:
  2279  000004                     USBTransferOnePacket@len:
  2280                           	opt stack 0
  2281  000004                     display_get_character@line:
  2282                           	opt stack 0
  2283  000004                     __display_clear@col:
  2284                           	opt stack 0
  2285  000004                     hexCharsToUint16@c3:
  2286                           	opt stack 0
  2287  000004                     spi_init@configuration:
  2288                           	opt stack 0
  2289  000004                     __sector_from_file_number@sector:
  2290                           	opt stack 0
  2291  000004                     __offset_from_file_number@offset:
  2292                           	opt stack 0
  2293                           
  2294                           ; 2 bytes @ 0x3
  2295  000004                     	ds	1
  2296  000005                     ??_USBTransferOnePacket:
  2297  000005                     ??_spi_tx:
  2298  000005                     ??_internalFlash_pageFromAddress:
  2299  000005                     ??__read_value_from_offset:
  2300  000005                     SYSTEM_Initialize@state:
  2301                           	opt stack 0
  2302  000005                     hexCharsToUint8@c1:
  2303                           	opt stack 0
  2304  000005                     hexCharsToUint16@c4:
  2305                           	opt stack 0
  2306  000005                     __bootloader_check_address@dataLength:
  2307                           	opt stack 0
  2308  000005                     ___lwmod@counter:
  2309                           	opt stack 0
  2310  000005                     __fill_buffer_get_display@outBuffer:
  2311                           	opt stack 0
  2312  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2313                           	opt stack 0
  2314  000005                     spi_tx_tx@data:
  2315                           	opt stack 0
  2316  000005                     spi_tx_rx@data:
  2317                           	opt stack 0
  2318  000005                     ___wmul@product:
  2319                           	opt stack 0
  2320  000005                     ___lwdiv@quotient:
  2321                           	opt stack 0
  2322  000005                     memset@n:
  2323                           	opt stack 0
  2324  000005                     strncmp@len:
  2325                           	opt stack 0
  2326  000005                     internalFlash_addressFromPage@address:
  2327                           	opt stack 0
  2328  000005                     ___lldiv@divisor:
  2329                           	opt stack 0
  2330  000005                     ___llmod@divisor:
  2331                           	opt stack 0
  2332                           
  2333                           ; 4 bytes @ 0x4
  2334  000005                     	ds	1
  2335  000006                     ??_hexCharsToUint16:
  2336  000006                     ??__bootloader_check_address:
  2337  000006                     USBStallEndpoint@ep:
  2338                           	opt stack 0
  2339  000006                     USBConfigureEndpoint@EPNum:
  2340                           	opt stack 0
  2341  000006                     hexCharsToUint8@retVal:
  2342                           	opt stack 0
  2343  000006                     __i2c_write@data:
  2344                           	opt stack 0
  2345  000006                     __i2c_read@data:
  2346                           	opt stack 0
  2347  000006                     i2c_display_write_fixed@data:
  2348                           	opt stack 0
  2349  000006                     memcpy@n:
  2350                           	opt stack 0
  2351                           
  2352                           ; 2 bytes @ 0x5
  2353  000006                     	ds	1
  2354  000007                     ??_strncmp:
  2355  000007                     ??__fill_buffer_get_bootloader_details:
  2356  000007                     __fill_buffer_get_display@secondHalf:
  2357                           	opt stack 0
  2358  000007                     ___lwdiv@counter:
  2359                           	opt stack 0
  2360  000007                     USBStallEndpoint@p:
  2361                           	opt stack 0
  2362  000007                     USBConfigureEndpoint@handle:
  2363                           	opt stack 0
  2364  000007                     spi_tx_tx@data_length:
  2365                           	opt stack 0
  2366  000007                     spi_tx_rx@data_length:
  2367                           	opt stack 0
  2368  000007                     memset@p:
  2369                           	opt stack 0
  2370                           
  2371                           ; 2 bytes @ 0x6
  2372  000007                     	ds	1
  2373  000008                     ??__fill_buffer_get_display:
  2374  000008                     __i2c_write@length:
  2375                           	opt stack 0
  2376  000008                     __i2c_read@length:
  2377                           	opt stack 0
  2378  000008                     i2c_display_write_fixed@length:
  2379                           	opt stack 0
  2380  000008                     __read_value_from_offset@value:
  2381                           	opt stack 0
  2382  000008                     utoa@buf:
  2383                           	opt stack 0
  2384  000008                     memcpy@s:
  2385                           	opt stack 0
  2386                           
  2387                           ; 3 bytes @ 0x7
  2388  000008                     	ds	1
  2389  000009                     ??_spi_tx_rx:
  2390  000009                     ??_spi_tx_tx:
  2391  000009                     ??__i2c_read:
  2392  000009                     ?_internalFlash_addressWithinPage:
  2393                           	opt stack 0
  2394  000009                     USBDeviceInit@i:
  2395                           	opt stack 0
  2396  000009                     USBEnableEndpoint@options:
  2397                           	opt stack 0
  2398  000009                     USBTransferOnePacket@ep:
  2399                           	opt stack 0
  2400  000009                     MSDErrorHandler@ErrorCase:
  2401                           	opt stack 0
  2402  000009                     __i2c_write@slave_address:
  2403                           	opt stack 0
  2404  000009                     i2c_display_write_fixed@pos:
  2405                           	opt stack 0
  2406  000009                     __flash_wakeup@command:
  2407                           	opt stack 0
  2408  000009                     hexCharsToUint16@c1:
  2409                           	opt stack 0
  2410  000009                     ___llmod@counter:
  2411                           	opt stack 0
  2412  000009                     internalFlash_erasePage@page:
  2413                           	opt stack 0
  2414  000009                     internalFlash_writePage@page:
  2415                           	opt stack 0
  2416  000009                     internalFlash_addressWithinPage@address:
  2417                           	opt stack 0
  2418  000009                     ___lldiv@quotient:
  2419                           	opt stack 0
  2420                           
  2421                           ; 4 bytes @ 0x8
  2422  000009                     	ds	1
  2423  00000A                     MSDErrorHandler@OldMSD_State:
  2424                           	opt stack 0
  2425  00000A                     __i2c_write@cntr:
  2426                           	opt stack 0
  2427  00000A                     __bootloader_check_address@worst_case:
  2428                           	opt stack 0
  2429  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2430                           	opt stack 0
  2431  00000A                     USBEnableEndpoint@p:
  2432                           	opt stack 0
  2433  00000A                     USBTransferOnePacket@handle:
  2434                           	opt stack 0
  2435  00000A                     hexCharsToUint16@retVal:
  2436                           	opt stack 0
  2437  00000A                     utoa@val:
  2438                           	opt stack 0
  2439                           
  2440                           ; 2 bytes @ 0x9
  2441  00000A                     	ds	1
  2442  00000B                     ??_internalFlash_erasePage:
  2443  00000B                     ??_internalFlash_writePage:
  2444  00000B                     __ic2_display_set_address@address:
  2445                           	opt stack 0
  2446  00000B                     __bootloader_check_address@byte_status:
  2447                           	opt stack 0
  2448  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2449                           	opt stack 0
  2450  00000B                     i2c_eeprom_writeByte@address:
  2451                           	opt stack 0
  2452  00000B                     memcpy@d:
  2453                           	opt stack 0
  2454  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2455                           	opt stack 0
  2456  00000B                     i2c_display_send_init_sequence@init_sequence:
  2457                           	opt stack 0
  2458                           
  2459                           ; 9 bytes @ 0xA
  2460  00000B                     	ds	1
  2461  00000C                     ??_USBMSDInit:
  2462  00000C                     ?_parseHexFileEntry:
  2463                           	opt stack 0
  2464  00000C                     USBEnableEndpoint@ep:
  2465                           	opt stack 0
  2466  00000C                     __bootloader_check_address@cntr:
  2467                           	opt stack 0
  2468  00000C                     _USBCheckMSDRequest$2319:
  2469                           	opt stack 0
  2470  00000C                     MSDTransferTerminated@handle:
  2471                           	opt stack 0
  2472  00000C                     __ic2_display_set_address@data_array:
  2473                           	opt stack 0
  2474  00000C                     parseHexFileEntry@data:
  2475                           	opt stack 0
  2476  00000C                     utoa@base:
  2477                           	opt stack 0
  2478  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2479                           	opt stack 0
  2480                           
  2481                           ; 4 bytes @ 0xB
  2482  00000C                     	ds	1
  2483  00000D                     ?__flash_get_status:
  2484                           	opt stack 0
  2485  00000D                     i2c_eeprom_writeByte@data:
  2486                           	opt stack 0
  2487  00000D                     __fill_buffer_get_display@cntr:
  2488                           	opt stack 0
  2489  00000D                     ___lldiv@counter:
  2490                           	opt stack 0
  2491  00000D                     memcpy@tmp:
  2492                           	opt stack 0
  2493  00000D                     internalFlash_addressWithinPage@page:
  2494                           	opt stack 0
  2495                           
  2496                           ; 2 bytes @ 0xC
  2497  00000D                     	ds	1
  2498  00000E                     ??_i2c_eeprom_writeByte:
  2499  00000E                     i2c_display_cursor@position:
  2500                           	opt stack 0
  2501  00000E                     __fill_buffer_get_display@line:
  2502                           	opt stack 0
  2503  00000E                     _USBCheckMSDRequest$2320:
  2504                           	opt stack 0
  2505  00000E                     _MSDTransferTerminated$2407:
  2506                           	opt stack 0
  2507  00000E                     utoa@v:
  2508                           	opt stack 0
  2509  00000E                     __display_itoa_u32@value:
  2510                           	opt stack 0
  2511  00000E                     parseHexFileEntry@offset:
  2512                           	opt stack 0
  2513  00000E                     internalFlash_read@address:
  2514                           	opt stack 0
  2515                           
  2516                           ; 4 bytes @ 0xD
  2517  00000E                     	ds	1
  2518  00000F                     ??_internalFlash_addressWithinPage:
  2519  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2520                           	opt stack 0
  2521  00000F                     i2c_display_cursor@line:
  2522                           	opt stack 0
  2523  00000F                     __flash_get_status@command:
  2524                           	opt stack 0
  2525  00000F                     __fill_buffer_get_display@start_line:
  2526                           	opt stack 0
  2527  00000F                     internalFlash_writePage@cntr:
  2528                           	opt stack 0
  2529  00000F                     internalFlash_erasePage@address:
  2530                           	opt stack 0
  2531                           
  2532                           ; 4 bytes @ 0xE
  2533  00000F                     	ds	1
  2534  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2535                           	opt stack 0
  2536  000010                     __i2c_read@slave_address:
  2537                           	opt stack 0
  2538  000010                     i2c_display_cursor@address:
  2539                           	opt stack 0
  2540  000010                     __fill_buffer_get_display@position:
  2541                           	opt stack 0
  2542  000010                     utoa@c:
  2543                           	opt stack 0
  2544  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2545                           	opt stack 0
  2546  000010                     __flash_get_status@status:
  2547                           	opt stack 0
  2548  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2549                           	opt stack 0
  2550                           
  2551                           ; 2 bytes @ 0xF
  2552  000010                     	ds	1
  2553  000011                     MSDCheckForErrorCases@DeviceNoData:
  2554                           	opt stack 0
  2555  000011                     __i2c_read@cntr:
  2556                           	opt stack 0
  2557  000011                     internalFlash_writePage@block_cntr:
  2558                           	opt stack 0
  2559  000011                     i2c_eeprom_writeByte@dat:
  2560                           	opt stack 0
  2561  000011                     itoa@buf:
  2562                           	opt stack 0
  2563                           
  2564                           ; 2 bytes @ 0x10
  2565  000011                     	ds	1
  2566  000012                     internalFlash_writePage@byte_cntr:
  2567                           	opt stack 0
  2568  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2569                           	opt stack 0
  2570  000012                     i2c_eeprom_readByte@address:
  2571                           	opt stack 0
  2572  000012                     __display_itoa_u32@text:
  2573                           	opt stack 0
  2574  000012                     __flash_is_busy@status:
  2575                           	opt stack 0
  2576  000012                     parseHexFileEntry@hexEntry:
  2577                           	opt stack 0
  2578  000012                     internalFlash_read@data_length:
  2579                           	opt stack 0
  2580                           
  2581                           ; 2 bytes @ 0x11
  2582  000012                     	ds	1
  2583  000013                     i2c_eeprom_writeByte@slave_address:
  2584                           	opt stack 0
  2585  000013                     itoa@val:
  2586                           	opt stack 0
  2587  000013                     internalFlash_writePage@address:
  2588                           	opt stack 0
  2589  000013                     internalFlash_addressWithinPage@page_start_address:
  2590                           	opt stack 0
  2591                           
  2592                           ; 4 bytes @ 0x12
  2593  000013                     	ds	1
  2594  000014                     ??_i2c_eeprom_readByte:
  2595  000014                     ??_parseHexFileEntry:
  2596  000014                     __display_itoa_u32@cntr:
  2597                           	opt stack 0
  2598  000014                     flash_is_busy@result:
  2599                           	opt stack 0
  2600  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2601                           	opt stack 0
  2602  000014                     __flash_compare_page_to_buffer@page:
  2603                           	opt stack 0
  2604  000014                     __flash_write_to_buffer@start:
  2605                           	opt stack 0
  2606  000014                     __flash_write_page_from_buffer@page:
  2607                           	opt stack 0
  2608  000014                     __flash_partial_read@page:
  2609                           	opt stack 0
  2610  000014                     internalFlash_read@buffer:
  2611                           	opt stack 0
  2612  000014                     __flash_set_page_size@command:
  2613                           	opt stack 0
  2614                           
  2615                           ; 4 bytes @ 0x13
  2616  000014                     	ds	1
  2617  000015                     __display_itoa_u32@number_of_digits:
  2618                           	opt stack 0
  2619  000015                     __fill_buffer_get_status@outBuffer:
  2620                           	opt stack 0
  2621  000015                     itoa@base:
  2622                           	opt stack 0
  2623                           
  2624                           ; 2 bytes @ 0x14
  2625  000015                     	ds	1
  2626  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2627  000016                     ??__display_found:
  2628  000016                     __flash_compare_page_to_buffer@buffer:
  2629                           	opt stack 0
  2630  000016                     __flash_write_page_from_buffer@buffer:
  2631                           	opt stack 0
  2632  000016                     __flash_write_to_buffer@data:
  2633                           	opt stack 0
  2634  000016                     __flash_partial_read@start:
  2635                           	opt stack 0
  2636  000016                     internalFlash_readPage@page:
  2637                           	opt stack 0
  2638                           
  2639                           ; 2 bytes @ 0x15
  2640  000016                     	ds	1
  2641  000017                     ??__flash_compare_page_to_buffer:
  2642  000017                     ??__flash_write_page_from_buffer:
  2643  000017                     i2c_eeprom_readByte@slave_address:
  2644                           	opt stack 0
  2645  000017                     api_prepare@inBuffer:
  2646                           	opt stack 0
  2647  000017                     itoa@cp:
  2648                           	opt stack 0
  2649                           
  2650                           ; 2 bytes @ 0x16
  2651  000017                     	ds	1
  2652  000018                     ??_USBStdFeatureReqHandler:
  2653  000018                     USBStdSetCfgHandler@i:
  2654                           	opt stack 0
  2655  000018                     i2c_eeprom_readByte@addr:
  2656                           	opt stack 0
  2657  000018                     __display_found@start:
  2658                           	opt stack 0
  2659  000018                     __flash_set_page_size@size:
  2660                           	opt stack 0
  2661  000018                     __flash_write_to_buffer@data_length:
  2662                           	opt stack 0
  2663  000018                     __flash_partial_read@length:
  2664                           	opt stack 0
  2665  000018                     internalFlash_readPage@address:
  2666                           	opt stack 0
  2667                           
  2668                           ; 4 bytes @ 0x17
  2669  000018                     	ds	1
  2670  000019                     __display_found@cntr:
  2671                           	opt stack 0
  2672  000019                     USBStdFeatureReqHandler@pUEP:
  2673                           	opt stack 0
  2674  000019                     __display_itoa_u16@value:
  2675                           	opt stack 0
  2676  000019                     api_prepare@outBuffer:
  2677                           	opt stack 0
  2678                           
  2679                           ; 2 bytes @ 0x18
  2680  000019                     	ds	1
  2681  00001A                     __flash_write_to_buffer@buffer:
  2682                           	opt stack 0
  2683  00001A                     __flash_compare_page_to_buffer@status:
  2684                           	opt stack 0
  2685  00001A                     __flash_partial_read@data:
  2686                           	opt stack 0
  2687  00001A                     __flash_write_page_from_buffer@command:
  2688                           	opt stack 0
  2689                           
  2690                           ; 4 bytes @ 0x19
  2691  00001A                     	ds	1
  2692  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2693                           	opt stack 0
  2694  00001B                     api_prepare@command:
  2695                           	opt stack 0
  2696  00001B                     __display_itoa_u16@text:
  2697                           	opt stack 0
  2698  00001B                     __flash_write_to_buffer@command:
  2699                           	opt stack 0
  2700                           
  2701                           ; 4 bytes @ 0x1A
  2702  00001B                     	ds	1
  2703  00001C                     ??__flash_partial_read:
  2704  00001C                     parseHexFileEntry@i:
  2705                           	opt stack 0
  2706  00001C                     USBStdFeatureReqHandler@p:
  2707                           	opt stack 0
  2708  00001C                     __flash_compare_page_to_buffer@command:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x1B
  2712  00001C                     	ds	1
  2713  00001D                     ??__display_verify:
  2714  00001D                     ??__display_checked:
  2715  00001D                     __display_start@cntr:
  2716                           	opt stack 0
  2717  00001D                     __display_failed@cntr:
  2718                           	opt stack 0
  2719  00001D                     __display_programming@cntr:
  2720                           	opt stack 0
  2721  00001D                     __display_done@cntr:
  2722                           	opt stack 0
  2723                           
  2724                           ; 1 bytes @ 0x1C
  2725  00001D                     	ds	1
  2726  00001E                     ??_USBCtrlEPService:
  2727  00001E                     
  2728                           ; 1 bytes @ 0x1D
  2729  00001E                     	ds	1
  2730  00001F                     __display_verify@cntr:
  2731                           	opt stack 0
  2732  00001F                     __display_checked@start:
  2733                           	opt stack 0
  2734                           
  2735                           ; 1 bytes @ 0x1E
  2736  00001F                     	ds	1
  2737  000020                     USBDeviceTasks@i:
  2738                           	opt stack 0
  2739  000020                     __display_checked@cntr:
  2740                           	opt stack 0
  2741  000020                     flash_sector_write@page:
  2742                           	opt stack 0
  2743  000020                     __flash_partial_read@command:
  2744                           	opt stack 0
  2745                           
  2746                           ; 4 bytes @ 0x1F
  2747  000020                     	ds	1
  2748  000021                     ??_display_prepare:
  2749                           
  2750                           ; 1 bytes @ 0x20
  2751  000021                     	ds	1
  2752  000022                     flash_sector_write@data:
  2753                           	opt stack 0
  2754                           
  2755                           ; 2 bytes @ 0x21
  2756  000022                     	ds	1
  2757  000023                     display_prepare@mode:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0x22
  2761  000023                     	ds	1
  2762  000024                     flash_sector_write@match:
  2763                           	opt stack 0
  2764  000024                     __parse_command_short@cmd:
  2765                           	opt stack 0
  2766  000024                     __flash_partial_read@address:
  2767                           	opt stack 0
  2768                           
  2769                           ; 4 bytes @ 0x23
  2770  000024                     	ds	1
  2771  000025                     ExternalFlash_SectorWrite@config:
  2772                           	opt stack 0
  2773  000025                     fat_format@cntr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 2 bytes @ 0x24
  2777  000025                     	ds	2
  2778  000027                     __parse_format_drive@data:
  2779                           	opt stack 0
  2780  000027                     ExternalFlash_SectorWrite@sector_addr:
  2781                           	opt stack 0
  2782                           
  2783                           ; 4 bytes @ 0x26
  2784  000027                     	ds	1
  2785  000028                     flash_sector_read@page:
  2786                           	opt stack 0
  2787  000028                     flash_partial_read@page:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x27
  2791  000028                     	ds	1
  2792  000029                     __parse_format_drive@out_buffer:
  2793                           	opt stack 0
  2794                           
  2795                           ; 2 bytes @ 0x28
  2796  000029                     	ds	1
  2797  00002A                     flash_sector_read@data:
  2798                           	opt stack 0
  2799  00002A                     flash_partial_read@start:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x29
  2803  00002A                     	ds	1
  2804  00002B                     ExternalFlash_SectorWrite@buffer:
  2805                           	opt stack 0
  2806  00002B                     __parse_format_drive@out_idx_ptr:
  2807                           	opt stack 0
  2808                           
  2809                           ; 2 bytes @ 0x2A
  2810  00002B                     	ds	1
  2811  00002C                     ??_fat_get_format_status:
  2812  00002C                     flash_partial_read@length:
  2813                           	opt stack 0
  2814  00002C                     ExternalFlash_SectorRead@config:
  2815                           	opt stack 0
  2816  00002C                     fat_find_file@name:
  2817                           	opt stack 0
  2818                           
  2819                           ; 2 bytes @ 0x2B
  2820  00002C                     	ds	1
  2821  00002D                     ??__parse_format_drive:
  2822  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2823                           	opt stack 0
  2824                           
  2825                           ; 1 bytes @ 0x2C
  2826  00002D                     	ds	1
  2827  00002E                     __parse_format_drive@return_value:
  2828                           	opt stack 0
  2829  00002E                     flash_partial_read@data:
  2830                           	opt stack 0
  2831  00002E                     ExternalFlash_SectorWrite@page:
  2832                           	opt stack 0
  2833  00002E                     fat_find_file@extension:
  2834                           	opt stack 0
  2835  00002E                     fat_get_format_status@cntr:
  2836                           	opt stack 0
  2837  00002E                     ExternalFlash_SectorRead@sector_addr:
  2838                           	opt stack 0
  2839                           
  2840                           ; 4 bytes @ 0x2D
  2841  00002E                     	ds	1
  2842  00002F                     __parse_command_long@data:
  2843                           	opt stack 0
  2844                           
  2845                           ; 2 bytes @ 0x2E
  2846  00002F                     	ds	1
  2847  000030                     ??_MSDWriteHandler:
  2848  000030                     ??_fat_find_file:
  2849  000030                     ?__read_fat:
  2850                           	opt stack 0
  2851  000030                     __root_is_available@root_sector:
  2852                           	opt stack 0
  2853  000030                     __read_fat@cluster:
  2854                           	opt stack 0
  2855  000030                     fat_get_file_information@data:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x2F
  2859  000030                     	ds	1
  2860  000031                     __parse_command_long@out_buffer:
  2861                           	opt stack 0
  2862                           
  2863                           ; 2 bytes @ 0x30
  2864  000031                     	ds	1
  2865  000032                     fat_find_file@file_number:
  2866                           	opt stack 0
  2867  000032                     ExternalFlash_SectorRead@buffer:
  2868                           	opt stack 0
  2869  000032                     __root_is_available@offset:
  2870                           	opt stack 0
  2871  000032                     __read_fat@sector:
  2872                           	opt stack 0
  2873                           
  2874                           ; 2 bytes @ 0x31
  2875  000032                     	ds	1
  2876  000033                     fat_find_file@sector:
  2877                           	opt stack 0
  2878  000033                     fat_get_file_information@root_sector:
  2879                           	opt stack 0
  2880  000033                     __parse_command_long@out_idx_ptr:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x32
  2884  000033                     	ds	1
  2885  000034                     __root_is_available@file_number:
  2886                           	opt stack 0
  2887  000034                     ExternalFlash_SectorRead@page:
  2888                           	opt stack 0
  2889  000034                     __read_fat@offset:
  2890                           	opt stack 0
  2891                           
  2892                           ; 2 bytes @ 0x33
  2893  000034                     	ds	1
  2894  000035                     __root_is_available@first_byte:
  2895                           	opt stack 0
  2896  000035                     __parse_command_long@length:
  2897                           	opt stack 0
  2898  000035                     fat_find_file@offset:
  2899                           	opt stack 0
  2900  000035                     fat_get_file_information@offset:
  2901                           	opt stack 0
  2902                           
  2903                           ; 2 bytes @ 0x34
  2904  000035                     	ds	1
  2905  000036                     ??_MSDReadHandler:
  2906  000036                     ?_fat_get_file_size:
  2907                           	opt stack 0
  2908  000036                     __read_fat@value:
  2909                           	opt stack 0
  2910  000036                     api_parse@inBuffer:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x35
  2914  000036                     	ds	1
  2915  000037                     fat_get_file_information@file_number:
  2916                           	opt stack 0
  2917                           
  2918                           ; 1 bytes @ 0x36
  2919  000037                     	ds	1
  2920  000038                     ?__find_nth_cluster:
  2921                           	opt stack 0
  2922  000038                     api_parse@receivedDataLength:
  2923                           	opt stack 0
  2924  000038                     __find_nth_cluster@cluster:
  2925                           	opt stack 0
  2926                           
  2927                           ; 2 bytes @ 0x37
  2928  000038                     	ds	1
  2929  000039                     api_parse@outBuffer:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x38
  2933  000039                     	ds	1
  2934  00003A                     ??_MSDProcessCommandMediaPresent:
  2935  00003A                     __find_nth_cluster@n:
  2936                           	opt stack 0
  2937  00003A                     fat_get_file_size@sector:
  2938                           	opt stack 0
  2939                           
  2940                           ; 2 bytes @ 0x39
  2941  00003A                     	ds	1
  2942  00003B                     ??_api_parse:
  2943                           
  2944                           ; 1 bytes @ 0x3A
  2945  00003B                     	ds	1
  2946  00003C                     _MSDProcessCommandMediaPresent$2390:
  2947                           	opt stack 0
  2948  00003C                     __find_nth_cluster@offset:
  2949                           	opt stack 0
  2950  00003C                     fat_get_file_size@offset:
  2951                           	opt stack 0
  2952                           
  2953                           ; 2 bytes @ 0x3B
  2954  00003C                     	ds	1
  2955  00003D                     api_parse@out_idx_ptr:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x3C
  2959  00003D                     	ds	1
  2960  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2961                           	opt stack 0
  2962  00003E                     __find_nth_cluster@sector_in_buffer:
  2963                           	opt stack 0
  2964  00003E                     fat_get_file_size@file_size:
  2965                           	opt stack 0
  2966                           
  2967                           ; 4 bytes @ 0x3D
  2968  00003E                     	ds	1
  2969  00003F                     api_parse@out_idx:
  2970                           	opt stack 0
  2971  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  2972                           	opt stack 0
  2973                           
  2974                           ; 4 bytes @ 0x3E
  2975  00003F                     	ds	1
  2976  000040                     api_parse@in_idx:
  2977                           	opt stack 0
  2978  000040                     __find_nth_cluster@sector:
  2979                           	opt stack 0
  2980                           
  2981                           ; 2 bytes @ 0x3F
  2982  000040                     	ds	1
  2983  000041                     
  2984                           ; 1 bytes @ 0x40
  2985  000041                     	ds	1
  2986  000042                     fat_get_file_size@file_number:
  2987                           	opt stack 0
  2988  000042                     fat_read_from_file_fast@start_byte:
  2989                           	opt stack 0
  2990                           
  2991                           ; 4 bytes @ 0x41
  2992  000042                     	ds	1
  2993  000043                     MSDProcessCommandMediaPresent@capacity:
  2994                           	opt stack 0
  2995                           
  2996                           ; 4 bytes @ 0x42
  2997  000043                     	ds	3
  2998  000046                     fat_read_from_file_fast@length:
  2999                           	opt stack 0
  3000                           
  3001                           ; 4 bytes @ 0x45
  3002  000046                     	ds	1
  3003  000047                     MSDProcessCommandMediaPresent@i:
  3004                           	opt stack 0
  3005                           
  3006                           ; 1 bytes @ 0x46
  3007  000047                     	ds	1
  3008  000048                     ??_MSDProcessCommand:
  3009  000048                     
  3010                           ; 1 bytes @ 0x47
  3011  000048                     	ds	2
  3012  00004A                     fat_read_from_file_fast@data:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x49
  3016  00004A                     	ds	2
  3017  00004C                     fat_read_from_file_fast@cluster:
  3018                           	opt stack 0
  3019                           
  3020                           ; 2 bytes @ 0x4B
  3021  00004C                     	ds	1
  3022  00004D                     ??_MSDTasks:
  3023                           
  3024                           ; 1 bytes @ 0x4C
  3025  00004D                     	ds	1
  3026  00004E                     _MSDTasks$2372:
  3027                           	opt stack 0
  3028  00004E                     fat_read_from_file_fast@cluster_number:
  3029                           	opt stack 0
  3030                           
  3031                           ; 2 bytes @ 0x4D
  3032  00004E                     	ds	2
  3033  000050                     ??_fat_read_from_file_fast:
  3034  000050                     _MSDTasks$2373:
  3035                           	opt stack 0
  3036                           
  3037                           ; 2 bytes @ 0x4F
  3038  000050                     	ds	2
  3039  000052                     MSDTasks@i:
  3040                           	opt stack 0
  3041                           
  3042                           ; 1 bytes @ 0x51
  3043  000052                     	ds	1
  3044  000053                     
  3045                           ; 1 bytes @ 0x52
  3046  000053                     	ds	9
  3047  00005C                     bootloader_run@timeslot:
  3048                           	opt stack 0
  3049                           
  3050                           ; 1 bytes @ 0x5B
  3051  00005C                     	ds	1
  3052  00005D                     ??_main:
  3053                           
  3054                           ; 1 bytes @ 0x5C
  3055  00005D                     	ds	2
  3056                           tblptru	equ	0xFF8
  3057                           tblptrh	equ	0xFF7
  3058                           tblptrl	equ	0xFF6
  3059                           tablat	equ	0xFF5
  3060                           postinc0	equ	0xFEE
  3061                           wreg	equ	0xFE8
  3062                           postdec1	equ	0xFE5
  3063                           fsr1h	equ	0xFE2
  3064                           fsr1l	equ	0xFE1
  3065                           
  3066 ;;
  3067 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3068 ;;
  3069 ;; *************** function _main *****************
  3070 ;; Defined at:
  3071 ;;		line 56 in file "main.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels required when called:   12
  3091 ;; This function calls:
  3092 ;;		_APP_DeviceCustomHIDTasks
  3093 ;;		_APP_DeviceMSDTasks
  3094 ;;		_SYSTEM_Initialize
  3095 ;;		_USBDeviceInit
  3096 ;;		_USBDeviceTasks
  3097 ;;		__normal_mode
  3098 ;;		_bootloader_run
  3099 ;;		_display_prepare
  3100 ;;		_display_update
  3101 ;;		_jump_to_main_program
  3102 ;;		_system_full_init
  3103 ;;		_system_minimal_init
  3104 ;;		_system_minimal_init_undo
  3105 ;;		_timer_pseudo_isr
  3106 ;;		_ui_get_status
  3107 ;;		_ui_run
  3108 ;; This function is called by:
  3109 ;;		Startup code after reset
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text0
  3114  004888                     __ptext0:
  3115                           	opt stack 0
  3116  004888                     _main:
  3117                           	opt stack 19
  3118                           
  3119                           ;incstack = 0
  3120  004888  0004               	clrwdt		;# 
  3121                           
  3122                           ;main.c: 63: system_minimal_init();
  3123  00488A  EC67  F038         	call	_system_minimal_init	;wreg free
  3124                           
  3125                           ;main.c: 66: if(_normal_mode())
  3126  00488E  EC75  F031         	call	__normal_mode	;wreg free
  3127  004892  0900               	iorlw	0
  3128  004894  B4D8               	btfsc	status,2,c
  3129  004896  D004               	goto	l861
  3130                           
  3131                           ;main.c: 67: {;main.c: 69: system_minimal_init_undo();
  3132  004898  ECCA  F038         	call	_system_minimal_init_undo	;wreg free
  3133                           
  3134                           ;main.c: 70: jump_to_main_program();
  3135  00489C  EC19  F039         	call	_jump_to_main_program	;wreg free
  3136  0048A0                     l861:
  3137                           
  3138                           ;main.c: 71: };main.c: 75: system_full_init();
  3139  0048A0  EC5A  F034         	call	_system_full_init	;wreg free
  3140                           
  3141                           ;main.c: 79: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3142  0048A4  0E00               	movlw	0
  3143  0048A6  EC27  F033         	call	_SYSTEM_Initialize
  3144                           
  3145                           ;main.c: 80: USBDeviceInit();
  3146  0048AA  ECBB  F019         	call	_USBDeviceInit	;wreg free
  3147  0048AE                     l862:
  3148  0048AE  0004               	clrwdt		;# 
  3149                           
  3150                           ;main.c: 93: USBDeviceTasks();
  3151  0048B0  EC49  F016         	call	_USBDeviceTasks	;wreg free
  3152                           
  3153                           ;main.c: 94: APP_DeviceMSDTasks();
  3154  0048B4  EC79  F038         	call	_APP_DeviceMSDTasks	;wreg free
  3155                           
  3156                           ;main.c: 95: APP_DeviceCustomHIDTasks();
  3157  0048B8  EC6C  F02A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3158                           
  3159                           ;main.c: 99: timer_pseudo_isr();
  3160  0048BC  ECEA  F035         	call	_timer_pseudo_isr	;wreg free
  3161                           
  3162                           ;main.c: 103: if(!os.done)
  3163  0048C0  0100               	movlb	0	; () banked
  3164  0048C2  5163               	movf	(_os+3)& (0+255),w,b
  3165  0048C4  A4D8               	btfss	status,2,c
  3166  0048C6  D7F3               	goto	l862
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;main.c: 104: {;main.c: 106: ui_run();
  3170  0048C8  EC45  F020         	call	_ui_run	;wreg free
  3171                           
  3172                           ;main.c: 111: switch(os.timeSlot&0b00000111)
  3173  0048CC  D025               	goto	l864
  3174  0048CE                     
  3175                           ;main.c: 114: bootloader_run(0);
  3176  0048CE  0E00               	movlw	0
  3177  0048D0  ECE8  F02F         	call	_bootloader_run
  3178                           
  3179                           ;main.c: 115: break;
  3180  0048D4  D043               	goto	l866
  3181  0048D6                     
  3182                           ;main.c: 118: bootloader_run(1);
  3183  0048D6  0E01               	movlw	1
  3184  0048D8  ECE8  F02F         	call	_bootloader_run
  3185                           
  3186                           ;main.c: 119: break;
  3187  0048DC  D03F               	goto	l866
  3188  0048DE                     
  3189                           ;main.c: 122: bootloader_run(2);
  3190  0048DE  0E02               	movlw	2
  3191  0048E0  ECE8  F02F         	call	_bootloader_run
  3192                           
  3193                           ;main.c: 123: break;
  3194  0048E4  D03B               	goto	l866
  3195  0048E6                     
  3196                           ;main.c: 126: bootloader_run(3);
  3197  0048E6  0E03               	movlw	3
  3198  0048E8  ECE8  F02F         	call	_bootloader_run
  3199                           
  3200                           ;main.c: 127: break;
  3201  0048EC  D037               	goto	l866
  3202  0048EE                     
  3203                           ;main.c: 130: bootloader_run(4);
  3204  0048EE  0E04               	movlw	4
  3205  0048F0  ECE8  F02F         	call	_bootloader_run
  3206                           
  3207                           ;main.c: 131: break;
  3208  0048F4  D033               	goto	l866
  3209  0048F6                     
  3210                           ;main.c: 134: bootloader_run(5);
  3211  0048F6  0E05               	movlw	5
  3212  0048F8  ECE8  F02F         	call	_bootloader_run
  3213                           
  3214                           ;main.c: 135: break;
  3215  0048FC  D02F               	goto	l866
  3216  0048FE                     
  3217                           ;main.c: 138: display_prepare(os.display_mode);
  3218  0048FE  0100               	movlb	0	; () banked
  3219  004900  5165               	movf	(_os+5)& (0+255),w,b
  3220  004902  ECD5  F023         	call	_display_prepare
  3221                           
  3222                           ;main.c: 139: break;
  3223  004906  D02A               	goto	l866
  3224  004908                     
  3225                           ;main.c: 142: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3226  004908  EC25  F039         	call	_ui_get_status	;wreg free
  3227  00490C  0A05               	xorlw	5
  3228  00490E  A4D8               	btfss	status,2,c
  3229  004910  D025               	goto	l866
  3230                           
  3231                           ;main.c: 143: {;main.c: 144: display_update();
  3232  004912  ECB3  F02F         	call	_display_update	;wreg free
  3233                           
  3234                           ;main.c: 147: }
  3235                           
  3236                           ;main.c: 145: };main.c: 146: break;
  3237  004916  D022               	goto	l866
  3238  004918                     l864:
  3239  004918  0100               	movlb	0	; () banked
  3240  00491A  5162               	movf	(_os+2)& (0+255),w,b
  3241  00491C  0B07               	andlw	7
  3242  00491E  6E5D               	movwf	??_main& (0+255),c
  3243  004920  6A5E               	clrf	(??_main+1)& (0+255),c
  3244                           
  3245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3246                           ; Switch size 1, requested type "space"
  3247                           ; Number of cases is 1, Range of values is 0 to 0
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte            4     3 (average)
  3251                           ;	Chosen strategy is simple_byte
  3252  004922  505E               	movf	??_main+1,w,c
  3253  004924  0A00               	xorlw	0	; case 0
  3254  004926  A4D8               	btfss	status,2,c
  3255  004928  D019               	goto	l866
  3256                           
  3257                           ; BSR set to: 0
  3258                           ; Switch size 1, requested type "space"
  3259                           ; Number of cases is 8, Range of values is 0 to 7
  3260                           ; switch strategies available:
  3261                           ; Name         Instructions Cycles
  3262                           ; simple_byte           25    13 (average)
  3263                           ;	Chosen strategy is simple_byte
  3264  00492A  505D               	movf	??_main,w,c
  3265  00492C  0A00               	xorlw	0	; case 0
  3266  00492E  B4D8               	btfsc	status,2,c
  3267  004930  D7CE               	goto	l865
  3268  004932  0A01               	xorlw	1	; case 1
  3269  004934  B4D8               	btfsc	status,2,c
  3270  004936  D7CF               	goto	l867
  3271  004938  0A03               	xorlw	3	; case 2
  3272  00493A  B4D8               	btfsc	status,2,c
  3273  00493C  D7D0               	goto	l868
  3274  00493E  0A01               	xorlw	1	; case 3
  3275  004940  B4D8               	btfsc	status,2,c
  3276  004942  D7D1               	goto	l869
  3277  004944  0A07               	xorlw	7	; case 4
  3278  004946  B4D8               	btfsc	status,2,c
  3279  004948  D7D2               	goto	l870
  3280  00494A  0A01               	xorlw	1	; case 5
  3281  00494C  B4D8               	btfsc	status,2,c
  3282  00494E  D7D3               	goto	l871
  3283  004950  0A03               	xorlw	3	; case 6
  3284  004952  B4D8               	btfsc	status,2,c
  3285  004954  D7D4               	goto	l872
  3286  004956  0A01               	xorlw	1	; case 7
  3287  004958  B4D8               	btfsc	status,2,c
  3288  00495A  D7D6               	goto	l873
  3289  00495C                     l866:
  3290                           
  3291                           ;main.c: 148: os.done = 1;
  3292                           
  3293                           ; BSR set to: 0
  3294  00495C  0E01               	movlw	1
  3295  00495E  0100               	movlb	0	; () banked
  3296  004960  6F63               	movwf	(_os+3)& (0+255),b
  3297                           
  3298                           ; BSR set to: 0
  3299                           
  3300                           ; BSR set to: 0
  3301  004962  D7A5               	goto	l862
  3302  004964                     __end_of_main:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           postinc0	equ	0xFEE
  3309                           wreg	equ	0xFE8
  3310                           postdec1	equ	0xFE5
  3311                           fsr1h	equ	0xFE2
  3312                           fsr1l	equ	0xFE1
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function _ui_run *****************
  3316 ;; Defined at:
  3317 ;;		line 118 in file "ui.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    8
  3338 ;; This function calls:
  3339 ;;		__ui_encoder
  3340 ;;		_i2c_display_send_init_sequence
  3341 ;;		_system_encoder_enable
  3342 ;;		_ui_init
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text1
  3349  00408A                     __ptext1:
  3350                           	opt stack 0
  3351  00408A                     _ui_run:
  3352                           	opt stack 22
  3353                           
  3354                           ;ui.c: 120: switch(userInterfaceStatus)
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;incstack = 0
  3358  00408A  D067               	goto	l1274
  3359  00408C                     
  3360                           ;ui.c: 124: if (os.buttonCount!=0)
  3361  00408C  0100               	movlb	0	; () banked
  3362  00408E  5161               	movf	(_os+1)& (0+255),w,b
  3363  004090  B4D8               	btfsc	status,2,c
  3364  004092  0012               	return	
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;ui.c: 125: {;ui.c: 126: ui_init();
  3368  004094  EC70  F038         	call	_ui_init	;wreg free
  3369                           
  3370                           ;ui.c: 127: os.buttonCount = 0;
  3371  004098  0E00               	movlw	0
  3372  00409A  0100               	movlb	0	; () banked
  3373  00409C  6F61               	movwf	(_os+1)& (0+255),b
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;ui.c: 128: };ui.c: 129: break;
  3377  00409E  0012               	return	
  3378  0040A0                     
  3379                           ; BSR set to: 0
  3380                           ;ui.c: 134: system_ui_inactive_count = 0;
  3381                           
  3382                           ; BSR set to: 0
  3383  0040A0  0E00               	movlw	0
  3384  0040A2  0101               	movlb	1	; () banked
  3385  0040A4  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3386  0040A6  0E00               	movlw	0
  3387  0040A8  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3388                           
  3389                           ;ui.c: 135: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3390  0040AA  0E02               	movlw	2
  3391  0040AC  0100               	movlb	0	; () banked
  3392  0040AE  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3393                           
  3394                           ;ui.c: 136: break;
  3395  0040B0  0012               	return	
  3396  0040B2                     l1279:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ;ui.c: 140: LATAbits.LA3 = 0;
  3400  0040B2  9689               	bcf	3977,3,c	;volatile
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;ui.c: 142: system_ui_inactive_count = 0;
  3404  0040B4  0E00               	movlw	0
  3405  0040B6  0101               	movlb	1	; () banked
  3406  0040B8  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3407  0040BA  0E00               	movlw	0
  3408  0040BC  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3409                           
  3410                           ;ui.c: 143: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3411  0040BE  0E03               	movlw	3
  3412  0040C0  0100               	movlb	0	; () banked
  3413  0040C2  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3414                           
  3415                           ;ui.c: 144: break;
  3416  0040C4  0012               	return	
  3417  0040C6                     
  3418                           ; BSR set to: 0
  3419                           ;ui.c: 147: ++system_ui_inactive_count;
  3420                           
  3421                           ; BSR set to: 0
  3422  0040C6  0101               	movlb	1	; () banked
  3423  0040C8  4B67               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3424  0040CA  2B68               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3425                           
  3426                           ; BSR set to: 1
  3427                           ;ui.c: 149: if (system_ui_inactive_count>3)
  3428  0040CC  5168               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3429  0040CE  E104               	bnz	u11980
  3430  0040D0  0E04               	movlw	4
  3431  0040D2  5D67               	subwf	_system_ui_inactive_count& (0+255),w,b
  3432  0040D4  A0D8               	btfss	status,0,c
  3433  0040D6  0012               	return	
  3434  0040D8                     u11980:
  3435                           
  3436                           ; BSR set to: 1
  3437                           ;ui.c: 150: {;ui.c: 151: LATAbits.LA3 = 1;
  3438  0040D8  8689               	bsf	3977,3,c	;volatile
  3439                           
  3440                           ; BSR set to: 1
  3441                           ;ui.c: 152: system_ui_inactive_count = 0;
  3442  0040DA  0E00               	movlw	0
  3443  0040DC  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3444  0040DE  0E00               	movlw	0
  3445  0040E0  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3446                           
  3447                           ;ui.c: 153: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3448  0040E2  0E04               	movlw	4
  3449  0040E4  0100               	movlb	0	; () banked
  3450  0040E6  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;ui.c: 154: };ui.c: 155: break;
  3454  0040E8  0012               	return	
  3455  0040EA                     
  3456                           ; BSR set to: 0
  3457                           ;ui.c: 159: i2c_display_send_init_sequence();
  3458                           
  3459                           ; BSR set to: 0
  3460  0040EA  EC98  F036         	call	_i2c_display_send_init_sequence	;wreg free
  3461                           
  3462                           ;ui.c: 161: LATCbits.LC1 = 1;
  3463  0040EE  828B               	bsf	3979,1,c	;volatile
  3464                           
  3465                           ;ui.c: 163: system_encoder_enable();
  3466  0040F0  EC9D  F038         	call	_system_encoder_enable	;wreg free
  3467                           
  3468                           ;ui.c: 165: system_ui_inactive_count = 0;
  3469  0040F4  0E00               	movlw	0
  3470  0040F6  0101               	movlb	1	; () banked
  3471  0040F8  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3472  0040FA  0E00               	movlw	0
  3473  0040FC  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3474                           
  3475                           ; BSR set to: 1
  3476                           ;ui.c: 166: startup_timer = 0;
  3477  0040FE  0E00               	movlw	0
  3478  004100  6F66               	movwf	(_startup_timer+1)& (0+255),b
  3479  004102  0E00               	movlw	0
  3480  004104  6F65               	movwf	_startup_timer& (0+255),b
  3481                           
  3482                           ; BSR set to: 1
  3483                           ;ui.c: 167: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3484  004106  0E05               	movlw	5
  3485  004108  0100               	movlb	0	; () banked
  3486  00410A  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3487                           
  3488                           ;ui.c: 168: break;
  3489  00410C  0012               	return	
  3490  00410E                     
  3491                           ; BSR set to: 0
  3492                           ;ui.c: 171: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3493                           
  3494                           ; BSR set to: 0
  3495  00410E  5165               	movf	(_os+5)& (0+255),w,b
  3496  004110  A4D8               	btfss	status,2,c
  3497  004112  D00B               	goto	l1285
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;ui.c: 172: {;ui.c: 173: ++startup_timer;
  3501  004114  0101               	movlb	1	; () banked
  3502  004116  4B65               	infsnz	_startup_timer& (0+255),f,b
  3503  004118  2B66               	incf	(_startup_timer+1)& (0+255),f,b
  3504                           
  3505                           ; BSR set to: 1
  3506                           ;ui.c: 174: if(startup_timer==250)
  3507  00411A  0EFA               	movlw	250
  3508  00411C  1965               	xorwf	_startup_timer& (0+255),w,b
  3509  00411E  1166               	iorwf	(_startup_timer+1)& (0+255),w,b
  3510  004120  A4D8               	btfss	status,2,c
  3511  004122  D003               	goto	l1285
  3512                           
  3513                           ; BSR set to: 1
  3514                           ;ui.c: 175: {;ui.c: 176: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3515  004124  0E10               	movlw	16
  3516  004126  0100               	movlb	0	; () banked
  3517  004128  6F65               	movwf	(_os+5)& (0+255),b
  3518  00412A                     l1285:
  3519                           
  3520                           ;ui.c: 177: };ui.c: 178: };ui.c: 179: if (os.encoderCount==0 && os.buttonCount==0)
  3521                           
  3522                           ; BSR set to: 0
  3523  00412A  0100               	movlb	0	; () banked
  3524  00412C  5160               	movf	_os& (0+255),w,b
  3525  00412E  A4D8               	btfss	status,2,c
  3526  004130  D00C               	goto	l1286
  3527                           
  3528                           ; BSR set to: 0
  3529  004132  5161               	movf	(_os+1)& (0+255),w,b
  3530  004134  A4D8               	btfss	status,2,c
  3531  004136  D009               	goto	l1286
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;ui.c: 180: {;ui.c: 181: if(system_ui_inactive_count<0xFFFF)
  3535  004138  0101               	movlb	1	; () banked
  3536  00413A  2967               	incf	_system_ui_inactive_count& (0+255),w,b
  3537  00413C  E103               	bnz	u12030
  3538  00413E  2968               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3539  004140  B4D8               	btfsc	status,2,c
  3540  004142  0012               	return	
  3541  004144                     u12030:
  3542                           
  3543                           ; BSR set to: 1
  3544                           ;ui.c: 182: ++system_ui_inactive_count;
  3545  004144  4B67               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3546  004146  2B68               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3547                           
  3548                           ; BSR set to: 1
  3549                           ;ui.c: 183: }
  3550  004148  0012               	return	
  3551  00414A                     l1286:
  3552                           
  3553                           ;ui.c: 184: else;ui.c: 185: {;ui.c: 186: system_ui_inactive_count = 0;
  3554                           
  3555                           ; BSR set to: 1
  3556  00414A  0E00               	movlw	0
  3557  00414C  0101               	movlb	1	; () banked
  3558  00414E  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3559  004150  0E00               	movlw	0
  3560  004152  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;ui.c: 187: _ui_encoder();
  3564  004154  EC45  F01F         	call	__ui_encoder	;wreg free
  3565                           
  3566                           ;ui.c: 190: }
  3567                           
  3568                           ;ui.c: 188: };ui.c: 189: break;
  3569  004158  0012               	return	
  3570  00415A                     l1274:
  3571  00415A  0100               	movlb	0	; () banked
  3572  00415C  5198               	movf	_userInterfaceStatus& (0+255),w,b
  3573                           
  3574                           ; Switch size 1, requested type "space"
  3575                           ; Number of cases is 6, Range of values is 0 to 5
  3576                           ; switch strategies available:
  3577                           ; Name         Instructions Cycles
  3578                           ; simple_byte           19    10 (average)
  3579                           ;	Chosen strategy is simple_byte
  3580  00415E  0A00               	xorlw	0	; case 0
  3581  004160  B4D8               	btfsc	status,2,c
  3582  004162  D794               	goto	l1275
  3583  004164  0A01               	xorlw	1	; case 1
  3584  004166  B4D8               	btfsc	status,2,c
  3585  004168  D79B               	goto	l1278
  3586  00416A  0A03               	xorlw	3	; case 2
  3587  00416C  B4D8               	btfsc	status,2,c
  3588  00416E  D7A1               	goto	l1279
  3589  004170  0A01               	xorlw	1	; case 3
  3590  004172  B4D8               	btfsc	status,2,c
  3591  004174  D7A8               	goto	l1280
  3592  004176  0A07               	xorlw	7	; case 4
  3593  004178  B4D8               	btfsc	status,2,c
  3594  00417A  D7B7               	goto	l1282
  3595  00417C  0A01               	xorlw	1	; case 5
  3596  00417E  A4D8               	btfss	status,2,c
  3597  004180  0012               	return	
  3598  004182  D7C5               	goto	l1283
  3599  004184                     __end_of_ui_run:
  3600                           	opt stack 0
  3601                           tblptru	equ	0xFF8
  3602                           tblptrh	equ	0xFF7
  3603                           tblptrl	equ	0xFF6
  3604                           tablat	equ	0xFF5
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           postdec1	equ	0xFE5
  3608                           fsr1h	equ	0xFE2
  3609                           fsr1l	equ	0xFE1
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _system_encoder_enable *****************
  3613 ;; Defined at:
  3614 ;;		line 97 in file "os.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, status,2
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; This function calls:
  3635 ;;		Nothing
  3636 ;; This function is called by:
  3637 ;;		_ui_run
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text2
  3642  00713A                     __ptext2:
  3643                           	opt stack 0
  3644  00713A                     _system_encoder_enable:
  3645                           	opt stack 29
  3646                           
  3647                           ;os.c: 100: INTCON3bits.INT2IF = 0;
  3648                           
  3649                           ;incstack = 0
  3650  00713A  92F0               	bcf	intcon3,1,c	;volatile
  3651                           
  3652                           ;os.c: 101: INTCON3bits.INT3IF = 0;
  3653  00713C  94F0               	bcf	intcon3,2,c	;volatile
  3654                           
  3655                           ;os.c: 104: os.encoderCount = 0;
  3656  00713E  0E00               	movlw	0
  3657  007140  0100               	movlb	0	; () banked
  3658  007142  6F60               	movwf	_os& (0+255),b
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;os.c: 107: INTCON3bits.INT2IE = 1;
  3662  007144  88F0               	bsf	intcon3,4,c	;volatile
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;os.c: 108: INTCON3bits.INT3IE = 1;
  3666  007146  8AF0               	bsf	intcon3,5,c	;volatile
  3667                           
  3668                           ; BSR set to: 0
  3669  007148  0012               	return		;funcret
  3670  00714A                     __end_of_system_encoder_enable:
  3671                           	opt stack 0
  3672                           tblptru	equ	0xFF8
  3673                           tblptrh	equ	0xFF7
  3674                           tblptrl	equ	0xFF6
  3675                           tablat	equ	0xFF5
  3676                           intcon3	equ	0xFF0
  3677                           postinc0	equ	0xFEE
  3678                           wreg	equ	0xFE8
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           status	equ	0xFD8
  3683                           
  3684 ;; *************** function _i2c_display_send_init_sequence *****************
  3685 ;; Defined at:
  3686 ;;		line 215 in file "i2c.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3701 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3703 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3704 ;;Total ram usage:        9 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; Hardware stack levels required when called:    2
  3707 ;; This function calls:
  3708 ;;		__i2c_write
  3709 ;;		_i2c_set_frequency
  3710 ;; This function is called by:
  3711 ;;		_ui_run
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text3
  3716  006D30                     __ptext3:
  3717                           	opt stack 0
  3718  006D30                     _i2c_display_send_init_sequence:
  3719                           	opt stack 27
  3720                           
  3721                           ;i2c.c: 217: uint8_t init_sequence[9] = {;i2c.c: 218: 0x3A,;i2c.c: 220: 0b00011110,;i2c.
      +                          c: 221: 0x39,;i2c.c: 223: 0b00001100,;i2c.c: 224: 0x74,;i2c.c: 225: 0b1011100,;i2c.c: 22
      +                          6: 0x6d,;i2c.c: 227: 0x0c,;i2c.c: 228: 0x01;i2c.c: 229: };
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;incstack = 0
  3725  006D30  EE22  F0B2         	lfsr	2,i2c_display_send_init_sequence@F6804
  3726  006D34  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3727  006D38  0E08               	movlw	8
  3728  006D3A                     u11081:
  3729  006D3A  CFDB FFE3          	movff	plusw2,plusw1
  3730  006D3E  06E8               	decf	wreg,f,c
  3731  006D40  E2FC               	bc	u11081
  3732                           
  3733                           ;i2c.c: 232: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3734  006D42  0E00               	movlw	0
  3735  006D44  ECF0  F036         	call	_i2c_set_frequency
  3736                           
  3737                           ;i2c.c: 235: _i2c_write(0b01111000, &init_sequence[0], 9);
  3738  006D48  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3739  006D4A  6E06               	movwf	__i2c_write@data,c
  3740  006D4C  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3741  006D4E  6E07               	movwf	__i2c_write@data+1,c
  3742  006D50  0E09               	movlw	9
  3743  006D52  6E08               	movwf	__i2c_write@length,c
  3744  006D54  0E78               	movlw	120
  3745  006D56  EC13  F034         	call	__i2c_write
  3746  006D5A  0012               	return		;funcret
  3747  006D5C                     __end_of_i2c_display_send_init_sequence:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           intcon3	equ	0xFF0
  3754                           postinc0	equ	0xFEE
  3755                           wreg	equ	0xFE8
  3756                           postdec1	equ	0xFE5
  3757                           plusw1	equ	0xFE3
  3758                           fsr1h	equ	0xFE2
  3759                           fsr1l	equ	0xFE1
  3760                           plusw2	equ	0xFDB
  3761                           status	equ	0xFD8
  3762                           
  3763 ;; *************** function __ui_encoder *****************
  3764 ;; Defined at:
  3765 ;;		line 23 in file "ui.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    7
  3786 ;; This function calls:
  3787 ;;		_i2c_eeprom_writeByte
  3788 ;;		_reboot
  3789 ;;		_system_delay_ms
  3790 ;; This function is called by:
  3791 ;;		_ui_run
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text4
  3796  003E8A                     __ptext4:
  3797                           	opt stack 0
  3798  003E8A                     __ui_encoder:
  3799                           	opt stack 22
  3800                           
  3801                           ;ui.c: 25: switch(os.display_mode)
  3802                           
  3803                           ;incstack = 0
  3804  003E8A  D061               	goto	l1245
  3805  003E8C                     
  3806                           ;ui.c: 28: if(os.buttonCount>0)
  3807  003E8C  0100               	movlb	0	; () banked
  3808  003E8E  5161               	movf	(_os+1)& (0+255),w,b
  3809  003E90  0A80               	xorlw	128
  3810  003E92  0F7F               	addlw	-129
  3811  003E94  A0D8               	btfss	status,0,c
  3812  003E96  0012               	return	
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;ui.c: 29: {;ui.c: 30: os.buttonCount = 0;
  3816  003E98  0E00               	movlw	0
  3817  003E9A  6F61               	movwf	(_os+1)& (0+255),b
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;ui.c: 31: };ui.c: 32: break;
  3821  003E9C  0012               	return	
  3822  003E9E                     
  3823                           ; BSR set to: 0
  3824                           ;ui.c: 35: if(os.buttonCount>0)
  3825                           
  3826                           ; BSR set to: 0
  3827  003E9E  5161               	movf	(_os+1)& (0+255),w,b
  3828  003EA0  0A80               	xorlw	128
  3829  003EA2  0F7F               	addlw	-129
  3830  003EA4  A0D8               	btfss	status,0,c
  3831  003EA6  0012               	return	
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;ui.c: 36: {;ui.c: 37: os.buttonCount = 0;
  3835  003EA8  0E00               	movlw	0
  3836  003EAA  6F61               	movwf	(_os+1)& (0+255),b
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;ui.c: 38: };ui.c: 39: break;
  3840  003EAC  0012               	return	
  3841  003EAE                     
  3842                           ; BSR set to: 0
  3843                           ;ui.c: 42: if(os.buttonCount>0)
  3844                           
  3845                           ; BSR set to: 0
  3846  003EAE  5161               	movf	(_os+1)& (0+255),w,b
  3847  003EB0  0A80               	xorlw	128
  3848  003EB2  0F7F               	addlw	-129
  3849  003EB4  A0D8               	btfss	status,0,c
  3850  003EB6  0012               	return	
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;ui.c: 43: {;ui.c: 44: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  3854  003EB8  0E30               	movlw	48
  3855  003EBA  6F64               	movwf	(_os+4)& (0+255),b
  3856                           
  3857                           ;ui.c: 45: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  3858  003EBC  0E30               	movlw	48
  3859  003EBE  6F65               	movwf	(_os+5)& (0+255),b
  3860                           
  3861                           ;ui.c: 46: os.buttonCount = 0;
  3862  003EC0  0E00               	movlw	0
  3863  003EC2  6F61               	movwf	(_os+1)& (0+255),b
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;ui.c: 47: };ui.c: 48: break;
  3867  003EC4  0012               	return	
  3868  003EC6                     
  3869                           ; BSR set to: 0
  3870                           ;ui.c: 51: if(os.buttonCount>0)
  3871                           
  3872                           ; BSR set to: 0
  3873  003EC6  5161               	movf	(_os+1)& (0+255),w,b
  3874  003EC8  0A80               	xorlw	128
  3875  003ECA  0F7F               	addlw	-129
  3876  003ECC  A0D8               	btfss	status,0,c
  3877  003ECE  0012               	return	
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;ui.c: 52: {;ui.c: 53: os.buttonCount = 0;
  3881  003ED0  0E00               	movlw	0
  3882  003ED2  6F61               	movwf	(_os+1)& (0+255),b
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;ui.c: 54: };ui.c: 55: break;
  3886  003ED4  0012               	return	
  3887  003ED6                     
  3888                           ; BSR set to: 0
  3889                           ;ui.c: 58: if(os.buttonCount>0)
  3890                           
  3891                           ; BSR set to: 0
  3892  003ED6  5161               	movf	(_os+1)& (0+255),w,b
  3893  003ED8  0A80               	xorlw	128
  3894  003EDA  0F7F               	addlw	-129
  3895  003EDC  A0D8               	btfss	status,0,c
  3896  003EDE  0012               	return	
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;ui.c: 59: {;ui.c: 60: os.buttonCount = 0;
  3900  003EE0  0E00               	movlw	0
  3901  003EE2  6F61               	movwf	(_os+1)& (0+255),b
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;ui.c: 61: };ui.c: 62: break;
  3905  003EE4  0012               	return	
  3906  003EE6                     
  3907                           ; BSR set to: 0
  3908                           ;ui.c: 65: if(os.buttonCount>0)
  3909                           
  3910                           ; BSR set to: 0
  3911  003EE6  5161               	movf	(_os+1)& (0+255),w,b
  3912  003EE8  0A80               	xorlw	128
  3913  003EEA  0F7F               	addlw	-129
  3914  003EEC  A0D8               	btfss	status,0,c
  3915  003EEE  0012               	return	
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;ui.c: 66: {;ui.c: 67: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  3919  003EF0  0E60               	movlw	96
  3920  003EF2  6F64               	movwf	(_os+4)& (0+255),b
  3921                           
  3922                           ;ui.c: 68: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  3923  003EF4  0E60               	movlw	96
  3924  003EF6  6F65               	movwf	(_os+5)& (0+255),b
  3925                           
  3926                           ;ui.c: 69: os.buttonCount = 0;
  3927  003EF8  0E00               	movlw	0
  3928  003EFA  6F61               	movwf	(_os+1)& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;ui.c: 70: };ui.c: 71: break;
  3932  003EFC  0012               	return	
  3933  003EFE                     
  3934                           ; BSR set to: 0
  3935                           ;ui.c: 74: if(os.buttonCount>0)
  3936                           
  3937                           ; BSR set to: 0
  3938  003EFE  5161               	movf	(_os+1)& (0+255),w,b
  3939  003F00  0A80               	xorlw	128
  3940  003F02  0F7F               	addlw	-129
  3941  003F04  A0D8               	btfss	status,0,c
  3942  003F06  0012               	return	
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;ui.c: 75: {;ui.c: 76: os.buttonCount = 0;
  3946  003F08  0E00               	movlw	0
  3947  003F0A  6F61               	movwf	(_os+1)& (0+255),b
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;ui.c: 77: };ui.c: 78: break;
  3951  003F0C  0012               	return	
  3952  003F0E                     
  3953                           ; BSR set to: 0
  3954                           ;ui.c: 81: if(os.buttonCount>0)
  3955                           
  3956                           ; BSR set to: 0
  3957  003F0E  5161               	movf	(_os+1)& (0+255),w,b
  3958  003F10  0A80               	xorlw	128
  3959  003F12  0F7F               	addlw	-129
  3960  003F14  A0D8               	btfss	status,0,c
  3961  003F16  0012               	return	
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;ui.c: 82: {;ui.c: 83: i2c_eeprom_writeByte(0x100, 0x78);
  3965  003F18  0E01               	movlw	1
  3966  003F1A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  3967  003F1C  0E00               	movlw	0
  3968  003F1E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  3969  003F20  0E78               	movlw	120
  3970  003F22  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  3971  003F24  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
  3972                           
  3973                           ;ui.c: 84: system_delay_ms(10);
  3974  003F28  0E0A               	movlw	10
  3975  003F2A  ECA2  F037         	call	_system_delay_ms
  3976                           
  3977                           ;ui.c: 85: reboot();
  3978  003F2E  EC21  F038         	call	_reboot	;wreg free
  3979                           
  3980                           ;ui.c: 86: };ui.c: 87: break;
  3981  003F32  0012               	return	
  3982  003F34                     
  3983                           ;ui.c: 90: if(os.buttonCount>0)
  3984  003F34  0100               	movlb	0	; () banked
  3985  003F36  5161               	movf	(_os+1)& (0+255),w,b
  3986  003F38  0A80               	xorlw	128
  3987  003F3A  0F7F               	addlw	-129
  3988  003F3C  A0D8               	btfss	status,0,c
  3989  003F3E  0012               	return	
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;ui.c: 91: {;ui.c: 92: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  3993  003F40  0E10               	movlw	16
  3994  003F42  6F64               	movwf	(_os+4)& (0+255),b
  3995                           
  3996                           ;ui.c: 93: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3997  003F44  0E10               	movlw	16
  3998  003F46  6F65               	movwf	(_os+5)& (0+255),b
  3999                           
  4000                           ;ui.c: 94: os.buttonCount = 0;
  4001  003F48  0E00               	movlw	0
  4002  003F4A  6F61               	movwf	(_os+1)& (0+255),b
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;ui.c: 97: }
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;ui.c: 95: };ui.c: 96: break;
  4009  003F4C  0012               	return	
  4010  003F4E                     l1245:
  4011                           
  4012                           ; BSR set to: 0
  4013  003F4E  0100               	movlb	0	; () banked
  4014  003F50  5165               	movf	(_os+5)& (0+255),w,b
  4015                           
  4016                           ; Switch size 1, requested type "space"
  4017                           ; Number of cases is 9, Range of values is 0 to 144
  4018                           ; switch strategies available:
  4019                           ; Name         Instructions Cycles
  4020                           ; simple_byte           28    15 (average)
  4021                           ;	Chosen strategy is simple_byte
  4022  003F52  0A00               	xorlw	0	; case 0
  4023  003F54  B4D8               	btfsc	status,2,c
  4024  003F56  D79A               	goto	l1246
  4025  003F58  0A10               	xorlw	16	; case 16
  4026  003F5A  B4D8               	btfsc	status,2,c
  4027  003F5C  D7A0               	goto	l1249
  4028  003F5E  0A30               	xorlw	48	; case 32
  4029  003F60  B4D8               	btfsc	status,2,c
  4030  003F62  D7A5               	goto	l1251
  4031  003F64  0A10               	xorlw	16	; case 48
  4032  003F66  B4D8               	btfsc	status,2,c
  4033  003F68  D7AE               	goto	l1253
  4034  003F6A  0A70               	xorlw	112	; case 64
  4035  003F6C  B4D8               	btfsc	status,2,c
  4036  003F6E  D7BB               	goto	l1257
  4037  003F70  0A10               	xorlw	16	; case 80
  4038  003F72  B4D8               	btfsc	status,2,c
  4039  003F74  D7B0               	goto	l1255
  4040  003F76  0A30               	xorlw	48	; case 96
  4041  003F78  B4D8               	btfsc	status,2,c
  4042  003F7A  D7C1               	goto	l1259
  4043  003F7C  0A10               	xorlw	16	; case 112
  4044  003F7E  B4D8               	btfsc	status,2,c
  4045  003F80  D7C6               	goto	l1261
  4046  003F82  0AE0               	xorlw	224	; case 144
  4047  003F84  A4D8               	btfss	status,2,c
  4048  003F86  0012               	return	
  4049  003F88  D7D5               	goto	l1263
  4050  003F8A                     __end_of__ui_encoder:
  4051                           	opt stack 0
  4052                           tblptru	equ	0xFF8
  4053                           tblptrh	equ	0xFF7
  4054                           tblptrl	equ	0xFF6
  4055                           tablat	equ	0xFF5
  4056                           intcon3	equ	0xFF0
  4057                           postinc0	equ	0xFEE
  4058                           wreg	equ	0xFE8
  4059                           postdec1	equ	0xFE5
  4060                           plusw1	equ	0xFE3
  4061                           fsr1h	equ	0xFE2
  4062                           fsr1l	equ	0xFE1
  4063                           plusw2	equ	0xFDB
  4064                           status	equ	0xFD8
  4065                           
  4066 ;; *************** function _timer_pseudo_isr *****************
  4067 ;; Defined at:
  4068 ;;		line 20 in file "os.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;Total ram usage:        0 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text5
  4096  006BD4                     __ptext5:
  4097                           	opt stack 0
  4098  006BD4                     _timer_pseudo_isr:
  4099                           	opt stack 30
  4100                           
  4101                           ;os.c: 23: if(INTCONbits.T0IF==0)
  4102                           
  4103                           ;incstack = 0
  4104  006BD4  A4F2               	btfss	intcon,2,c	;volatile
  4105  006BD6  0012               	return	
  4106                           
  4107                           ;os.c: 26: };os.c: 30: TMR0H = 0xD1;
  4108                           
  4109                           ;os.c: 24: {;os.c: 25: return;
  4110  006BD8  0ED1               	movlw	209
  4111  006BDA  6ED7               	movwf	4055,c	;volatile
  4112                           
  4113                           ;os.c: 31: TMR0L = 0x20;
  4114  006BDC  0E20               	movlw	32
  4115  006BDE  6ED6               	movwf	4054,c	;volatile
  4116                           
  4117                           ;os.c: 32: ++os.timeSlot;
  4118  006BE0  0100               	movlb	0	; () banked
  4119  006BE2  2B62               	incf	(_os+2)& (0+255),f,b
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;os.c: 34: os.done = 0;
  4123  006BE4  0E00               	movlw	0
  4124  006BE6  6F63               	movwf	(_os+3)& (0+255),b
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;os.c: 35: INTCONbits.T0IF = 0;
  4128  006BE8  94F2               	bcf	intcon,2,c	;volatile
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;os.c: 38: if(INTCON3bits.INT1IF)
  4132  006BEA  A0F0               	btfss	intcon3,0,c	;volatile
  4133  006BEC  D002               	goto	l1041
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;os.c: 39: {;os.c: 40: ++os.buttonCount;
  4137  006BEE  2B61               	incf	(_os+1)& (0+255),f,b
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;os.c: 41: INTCON3bits.INT1IF = 0;
  4141  006BF0  90F0               	bcf	intcon3,0,c	;volatile
  4142  006BF2                     l1041:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;os.c: 42: };os.c: 45: if(INTCON3bits.INT2IF)
  4146                           
  4147                           ; BSR set to: 0
  4148  006BF2  A2F0               	btfss	intcon3,1,c	;volatile
  4149  006BF4  D003               	goto	l1042
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;os.c: 46: {;os.c: 47: if(!PORTEbits.RE0)
  4153  006BF6  A084               	btfss	3972,0,c	;volatile
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;os.c: 48: {;os.c: 49: --os.encoderCount;
  4157  006BF8  0760               	decf	_os& (0+255),f,b
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;os.c: 50: };os.c: 51: INTCON3bits.INT2IF = 0;
  4161                           
  4162                           ; BSR set to: 0
  4163  006BFA  92F0               	bcf	intcon3,1,c	;volatile
  4164  006BFC                     l1042:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;os.c: 52: };os.c: 53: if(INTCON3bits.INT3IF)
  4168                           
  4169                           ; BSR set to: 0
  4170  006BFC  A4F0               	btfss	intcon3,2,c	;volatile
  4171  006BFE  0012               	return	
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;os.c: 54: {;os.c: 55: if(!PORTEbits.RE2)
  4175  006C00  A484               	btfss	3972,2,c	;volatile
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;os.c: 56: {;os.c: 57: ++os.encoderCount;
  4179  006C02  2B60               	incf	_os& (0+255),f,b
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;os.c: 58: };os.c: 59: INTCON3bits.INT3IF = 0;
  4183                           
  4184                           ; BSR set to: 0
  4185  006C04  94F0               	bcf	intcon3,2,c	;volatile
  4186  006C06  0012               	return	
  4187  006C08                     __end_of_timer_pseudo_isr:
  4188                           	opt stack 0
  4189                           tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           intcon	equ	0xFF2
  4194                           intcon3	equ	0xFF0
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           postdec1	equ	0xFE5
  4198                           plusw1	equ	0xFE3
  4199                           fsr1h	equ	0xFE2
  4200                           fsr1l	equ	0xFE1
  4201                           plusw2	equ	0xFDB
  4202                           status	equ	0xFD8
  4203                           
  4204 ;; *************** function _system_minimal_init_undo *****************
  4205 ;; Defined at:
  4206 ;;		line 154 in file "os.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;		None
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    1
  4227 ;; This function calls:
  4228 ;;		_i2c_reset
  4229 ;; This function is called by:
  4230 ;;		_main
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text6
  4235  007194                     __ptext6:
  4236                           	opt stack 0
  4237  007194                     _system_minimal_init_undo:
  4238                           	opt stack 29
  4239                           
  4240                           ;os.c: 157: i2c_reset();
  4241                           
  4242                           ;incstack = 0
  4243  007194  ECB5  F038         	call	_i2c_reset	;wreg free
  4244                           
  4245                           ;os.c: 160: TRISAbits.TRISA1 = 1;
  4246  007198  8292               	bsf	3986,1,c	;volatile
  4247                           
  4248                           ;os.c: 161: ANCON0bits.PCFG1 = 0;
  4249  00719A  010F               	movlb	15	; () banked
  4250  00719C  9348               	bcf	72,1,b	;volatile
  4251                           
  4252                           ; BSR set to: 15
  4253  00719E  0012               	return		;funcret
  4254  0071A0                     __end_of_system_minimal_init_undo:
  4255                           	opt stack 0
  4256                           tblptru	equ	0xFF8
  4257                           tblptrh	equ	0xFF7
  4258                           tblptrl	equ	0xFF6
  4259                           tablat	equ	0xFF5
  4260                           intcon	equ	0xFF2
  4261                           intcon3	equ	0xFF0
  4262                           postinc0	equ	0xFEE
  4263                           wreg	equ	0xFE8
  4264                           postdec1	equ	0xFE5
  4265                           plusw1	equ	0xFE3
  4266                           fsr1h	equ	0xFE2
  4267                           fsr1l	equ	0xFE1
  4268                           plusw2	equ	0xFDB
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _i2c_reset *****************
  4272 ;; Defined at:
  4273 ;;		line 118 in file "i2c.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;Total ram usage:        0 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; This function calls:
  4294 ;;		Nothing
  4295 ;; This function is called by:
  4296 ;;		_system_minimal_init_undo
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text7
  4301  00716A                     __ptext7:
  4302                           	opt stack 0
  4303  00716A                     _i2c_reset:
  4304                           	opt stack 29
  4305                           
  4306                           ;i2c.c: 120: SSP1STATbits.SMP = 0;
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;incstack = 0
  4310  00716A  9EC7               	bcf	4039,7,c	;volatile
  4311                           
  4312                           ;i2c.c: 121: SSP1STATbits.CKE = 0;
  4313  00716C  9CC7               	bcf	4039,6,c	;volatile
  4314                           
  4315                           ;i2c.c: 122: SSP1CON1 = 0x00;
  4316  00716E  0E00               	movlw	0
  4317  007170  6EC6               	movwf	4038,c	;volatile
  4318                           
  4319                           ;i2c.c: 123: SSP1ADD = 0x00;
  4320  007172  0E00               	movlw	0
  4321  007174  6EC8               	movwf	4040,c	;volatile
  4322  007176  0012               	return		;funcret
  4323  007178                     __end_of_i2c_reset:
  4324                           	opt stack 0
  4325                           tblptru	equ	0xFF8
  4326                           tblptrh	equ	0xFF7
  4327                           tblptrl	equ	0xFF6
  4328                           tablat	equ	0xFF5
  4329                           intcon	equ	0xFF2
  4330                           intcon3	equ	0xFF0
  4331                           postinc0	equ	0xFEE
  4332                           wreg	equ	0xFE8
  4333                           postdec1	equ	0xFE5
  4334                           plusw1	equ	0xFE3
  4335                           fsr1h	equ	0xFE2
  4336                           fsr1l	equ	0xFE1
  4337                           plusw2	equ	0xFDB
  4338                           status	equ	0xFD8
  4339                           
  4340 ;; *************** function _system_minimal_init *****************
  4341 ;; Defined at:
  4342 ;;		line 140 in file "os.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;		None
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;		None
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  1    wreg      void 
  4349 ;; Registers used:
  4350 ;;		wreg, status,2, status,0, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;Total ram usage:        0 bytes
  4361 ;; Hardware stack levels used:    1
  4362 ;; Hardware stack levels required when called:    2
  4363 ;; This function calls:
  4364 ;;		_i2c_init
  4365 ;;		_system_delay_ms
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text8
  4372  0070CE                     __ptext8:
  4373                           	opt stack 0
  4374  0070CE                     _system_minimal_init:
  4375                           	opt stack 28
  4376                           
  4377                           ;os.c: 143: TRISAbits.TRISA1 = 1;
  4378                           
  4379                           ;incstack = 0
  4380  0070CE  8292               	bsf	3986,1,c	;volatile
  4381                           
  4382                           ;os.c: 144: ANCON0bits.PCFG1 = 1;
  4383  0070D0  010F               	movlb	15	; () banked
  4384  0070D2  8348               	bsf	72,1,b	;volatile
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;os.c: 147: i2c_init();
  4388  0070D4  ECD0  F038         	call	_i2c_init	;wreg free
  4389                           
  4390                           ;os.c: 150: system_delay_ms(50);
  4391  0070D8  0E32               	movlw	50
  4392  0070DA  ECA2  F037         	call	_system_delay_ms
  4393  0070DE  0012               	return		;funcret
  4394  0070E0                     __end_of_system_minimal_init:
  4395                           	opt stack 0
  4396                           tblptru	equ	0xFF8
  4397                           tblptrh	equ	0xFF7
  4398                           tblptrl	equ	0xFF6
  4399                           tablat	equ	0xFF5
  4400                           intcon	equ	0xFF2
  4401                           intcon3	equ	0xFF0
  4402                           postinc0	equ	0xFEE
  4403                           wreg	equ	0xFE8
  4404                           postdec1	equ	0xFE5
  4405                           plusw1	equ	0xFE3
  4406                           fsr1h	equ	0xFE2
  4407                           fsr1l	equ	0xFE1
  4408                           plusw2	equ	0xFDB
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _i2c_init *****************
  4412 ;; Defined at:
  4413 ;;		line 110 in file "i2c.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;		None
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, status,2, status,0, cstack
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;Total ram usage:        0 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    1
  4434 ;; This function calls:
  4435 ;;		__i2c_open_1
  4436 ;;		_i2c_set_frequency
  4437 ;; This function is called by:
  4438 ;;		_system_minimal_init
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text9
  4443  0071A0                     __ptext9:
  4444                           	opt stack 0
  4445  0071A0                     _i2c_init:
  4446                           	opt stack 28
  4447                           
  4448                           ;i2c.c: 113: _i2c_open_1();
  4449                           
  4450                           ;incstack = 0
  4451  0071A0  EC2E  F038         	call	__i2c_open_1	;wreg free
  4452                           
  4453                           ;i2c.c: 115: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4454  0071A4  0E00               	movlw	0
  4455  0071A6  ECF0  F036         	call	_i2c_set_frequency
  4456  0071AA  0012               	return		;funcret
  4457  0071AC                     __end_of_i2c_init:
  4458                           	opt stack 0
  4459                           tblptru	equ	0xFF8
  4460                           tblptrh	equ	0xFF7
  4461                           tblptrl	equ	0xFF6
  4462                           tablat	equ	0xFF5
  4463                           intcon	equ	0xFF2
  4464                           intcon3	equ	0xFF0
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           postdec1	equ	0xFE5
  4468                           plusw1	equ	0xFE3
  4469                           fsr1h	equ	0xFE2
  4470                           fsr1l	equ	0xFE1
  4471                           plusw2	equ	0xFDB
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function __i2c_open_1 *****************
  4475 ;; Defined at:
  4476 ;;		line 44 in file "i2c.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_i2c_init
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text10
  4504  00705C                     __ptext10:
  4505                           	opt stack 0
  4506  00705C                     __i2c_open_1:
  4507                           	opt stack 28
  4508                           
  4509                           ;i2c.c: 46: SSP1STATbits.SMP = 0;
  4510                           
  4511                           ;incstack = 0
  4512  00705C  9EC7               	bcf	4039,7,c	;volatile
  4513                           
  4514                           ;i2c.c: 47: SSP1STATbits.CKE = 0;
  4515  00705E  9CC7               	bcf	4039,6,c	;volatile
  4516                           
  4517                           ;i2c.c: 48: SSP1ADD = 29;
  4518  007060  0E1D               	movlw	29
  4519  007062  6EC8               	movwf	4040,c	;volatile
  4520                           
  4521                           ;i2c.c: 49: SSP1CON1bits.WCOL = 0;
  4522  007064  9EC6               	bcf	4038,7,c	;volatile
  4523                           
  4524                           ;i2c.c: 50: SSP1CON1bits.SSPOV = 0;
  4525  007066  9CC6               	bcf	4038,6,c	;volatile
  4526                           
  4527                           ;i2c.c: 51: SSP1CON1bits.SSPM = 0b1000;
  4528  007068  50C6               	movf	4038,w,c	;volatile
  4529  00706A  0BF0               	andlw	-16
  4530  00706C  0908               	iorlw	8
  4531  00706E  6EC6               	movwf	4038,c	;volatile
  4532                           
  4533                           ;i2c.c: 52: SSP1CON1bits.SSPEN = 1;
  4534  007070  8AC6               	bsf	4038,5,c	;volatile
  4535  007072  0012               	return		;funcret
  4536  007074                     __end_of__i2c_open_1:
  4537                           	opt stack 0
  4538                           tblptru	equ	0xFF8
  4539                           tblptrh	equ	0xFF7
  4540                           tblptrl	equ	0xFF6
  4541                           tablat	equ	0xFF5
  4542                           intcon	equ	0xFF2
  4543                           intcon3	equ	0xFF0
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           plusw1	equ	0xFE3
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           plusw2	equ	0xFDB
  4551                           status	equ	0xFD8
  4552                           
  4553 ;; *************** function _system_full_init *****************
  4554 ;; Defined at:
  4555 ;;		line 165 in file "os.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;Total ram usage:        0 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    7
  4576 ;; This function calls:
  4577 ;;		__system_encoder_init
  4578 ;;		__system_timer0_init
  4579 ;;		_fat_init
  4580 ;;		_flash_init
  4581 ;;		_ui_init
  4582 ;; This function is called by:
  4583 ;;		_main
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text11
  4588  0068B4                     __ptext11:
  4589                           	opt stack 0
  4590  0068B4                     _system_full_init:
  4591                           	opt stack 23
  4592                           
  4593                           ;os.c: 172: TRISAbits.TRISA3 = 0;
  4594                           
  4595                           ;incstack = 0
  4596  0068B4  9692               	bcf	3986,3,c	;volatile
  4597                           
  4598                           ;os.c: 173: LATAbits.LA3 = 0;
  4599  0068B6  9689               	bcf	3977,3,c	;volatile
  4600                           
  4601                           ;os.c: 176: TRISCbits.TRISC1 = 0;
  4602  0068B8  9294               	bcf	3988,1,c	;volatile
  4603                           
  4604                           ;os.c: 177: LATCbits.LC1 = 1;
  4605  0068BA  828B               	bsf	3979,1,c	;volatile
  4606                           
  4607                           ;os.c: 180: TRISCbits.TRISC6 = 0;
  4608  0068BC  9C94               	bcf	3988,6,c	;volatile
  4609                           
  4610                           ;os.c: 181: LATCbits.LC6 = 0;
  4611  0068BE  9C8B               	bcf	3979,6,c	;volatile
  4612                           
  4613                           ;os.c: 184: TRISAbits.TRISA5 = 0;
  4614  0068C0  9A92               	bcf	3986,5,c	;volatile
  4615                           
  4616                           ;os.c: 185: LATAbits.LA5 = 0;
  4617  0068C2  9A89               	bcf	3977,5,c	;volatile
  4618                           
  4619                           ;os.c: 188: TRISDbits.TRISD5 = 1;
  4620  0068C4  8A95               	bsf	3989,5,c	;volatile
  4621                           
  4622                           ;os.c: 189: TRISDbits.TRISD4 = 0;
  4623  0068C6  9895               	bcf	3989,4,c	;volatile
  4624                           
  4625                           ;os.c: 190: TRISDbits.TRISD6 = 0;
  4626  0068C8  9C95               	bcf	3989,6,c	;volatile
  4627                           
  4628                           ;os.c: 191: TRISDbits.TRISD7 = 0;
  4629  0068CA  9E95               	bcf	3989,7,c	;volatile
  4630                           
  4631                           ;os.c: 192: LATDbits.LD7 = 1;
  4632  0068CC  8E8C               	bsf	3980,7,c	;volatile
  4633                           
  4634                           ;os.c: 195: TRISEbits.TRISE2 = 1;
  4635  0068CE  8496               	bsf	3990,2,c	;volatile
  4636                           
  4637                           ;os.c: 196: TRISEbits.TRISE0 = 1;
  4638  0068D0  8096               	bsf	3990,0,c	;volatile
  4639                           
  4640                           ;os.c: 197: TRISEbits.TRISE1 = 1;
  4641  0068D2  8296               	bsf	3990,1,c	;volatile
  4642                           
  4643                           ;os.c: 198: TRISAbits.TRISA0 = 1;
  4644  0068D4  8092               	bsf	3986,0,c	;volatile
  4645                           
  4646                           ;os.c: 199: TRISAbits.TRISA2 = 1;
  4647  0068D6  8492               	bsf	3986,2,c	;volatile
  4648                           
  4649                           ;os.c: 202: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4650  0068D8  0E10               	movlw	16
  4651  0068DA  0100               	movlb	0	; () banked
  4652  0068DC  6F64               	movwf	(_os+4)& (0+255),b
  4653                           
  4654                           ;os.c: 203: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4655  0068DE  0E00               	movlw	0
  4656  0068E0  6F65               	movwf	(_os+5)& (0+255),b
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;os.c: 206: flash_init();
  4660  0068E2  ECBC  F038         	call	_flash_init	;wreg free
  4661                           
  4662                           ;os.c: 209: fat_init();
  4663  0068E6  ECA5  F038         	call	_fat_init	;wreg free
  4664                           
  4665                           ;os.c: 213: _system_encoder_init();
  4666  0068EA  EC5D  F035         	call	__system_encoder_init	;wreg free
  4667                           
  4668                           ;os.c: 216: ui_init();
  4669  0068EE  EC70  F038         	call	_ui_init	;wreg free
  4670                           
  4671                           ;os.c: 219: _system_timer0_init();
  4672  0068F2  ECE8  F037         	call	__system_timer0_init	;wreg free
  4673  0068F6  0012               	return		;funcret
  4674  0068F8                     __end_of_system_full_init:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           intcon	equ	0xFF2
  4681                           intcon3	equ	0xFF0
  4682                           postinc0	equ	0xFEE
  4683                           wreg	equ	0xFE8
  4684                           postdec1	equ	0xFE5
  4685                           plusw1	equ	0xFE3
  4686                           fsr1h	equ	0xFE2
  4687                           fsr1l	equ	0xFE1
  4688                           plusw2	equ	0xFDB
  4689                           status	equ	0xFD8
  4690                           
  4691 ;; *************** function _ui_init *****************
  4692 ;; Defined at:
  4693 ;;		line 111 in file "ui.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_system_full_init
  4717 ;;		_ui_run
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text12
  4722  0070E0                     __ptext12:
  4723                           	opt stack 0
  4724  0070E0                     _ui_init:
  4725                           	opt stack 29
  4726                           
  4727                           ;ui.c: 113: system_ui_inactive_count = 0;
  4728                           
  4729                           ;incstack = 0
  4730  0070E0  0E00               	movlw	0
  4731  0070E2  0101               	movlb	1	; () banked
  4732  0070E4  6F68               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4733  0070E6  0E00               	movlw	0
  4734  0070E8  6F67               	movwf	_system_ui_inactive_count& (0+255),b
  4735                           
  4736                           ;ui.c: 114: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4737  0070EA  0E01               	movlw	1
  4738  0070EC  0100               	movlb	0	; () banked
  4739  0070EE  6F98               	movwf	_userInterfaceStatus& (0+255),b
  4740                           
  4741                           ; BSR set to: 0
  4742  0070F0  0012               	return		;funcret
  4743  0070F2                     __end_of_ui_init:
  4744                           	opt stack 0
  4745                           tblptru	equ	0xFF8
  4746                           tblptrh	equ	0xFF7
  4747                           tblptrl	equ	0xFF6
  4748                           tablat	equ	0xFF5
  4749                           intcon	equ	0xFF2
  4750                           intcon3	equ	0xFF0
  4751                           postinc0	equ	0xFEE
  4752                           wreg	equ	0xFE8
  4753                           postdec1	equ	0xFE5
  4754                           plusw1	equ	0xFE3
  4755                           fsr1h	equ	0xFE2
  4756                           fsr1l	equ	0xFE1
  4757                           plusw2	equ	0xFDB
  4758                           status	equ	0xFD8
  4759                           
  4760 ;; *************** function _flash_init *****************
  4761 ;; Defined at:
  4762 ;;		line 361 in file "flash.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;		None
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  1    wreg      void 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;Total ram usage:        0 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    4
  4783 ;; This function calls:
  4784 ;;		__flash_set_page_size
  4785 ;;		_spi_init
  4786 ;; This function is called by:
  4787 ;;		_system_full_init
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text13
  4792  007178                     __ptext13:
  4793                           	opt stack 0
  4794  007178                     _flash_init:
  4795                           	opt stack 25
  4796                           
  4797                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;incstack = 0
  4801  007178  0E00               	movlw	0
  4802  00717A  EC21  F035         	call	_spi_init
  4803                           
  4804                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  4805  00717E  0E00               	movlw	0
  4806  007180  EC20  F02E         	call	__flash_set_page_size
  4807  007184  0012               	return		;funcret
  4808  007186                     __end_of_flash_init:
  4809                           	opt stack 0
  4810                           tblptru	equ	0xFF8
  4811                           tblptrh	equ	0xFF7
  4812                           tblptrl	equ	0xFF6
  4813                           tablat	equ	0xFF5
  4814                           intcon	equ	0xFF2
  4815                           intcon3	equ	0xFF0
  4816                           postinc0	equ	0xFEE
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           plusw1	equ	0xFE3
  4820                           fsr1h	equ	0xFE2
  4821                           fsr1l	equ	0xFE1
  4822                           plusw2	equ	0xFDB
  4823                           status	equ	0xFD8
  4824                           
  4825 ;; *************** function _spi_init *****************
  4826 ;; Defined at:
  4827 ;;		line 89 in file "spi.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  configuratio    1    wreg     enum E6751
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  configuratio    1    3[COMRAM] enum E6751
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:        1 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    1
  4848 ;; This function calls:
  4849 ;;		__spi_init
  4850 ;; This function is called by:
  4851 ;;		_flash_init
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text14
  4856  006A42                     __ptext14:
  4857                           	opt stack 0
  4858  006A42                     _spi_init:
  4859                           	opt stack 27
  4860                           
  4861                           ;incstack = 0
  4862                           ;spi_init@configuration stored from wreg
  4863  006A42  6E04               	movwf	spi_init@configuration,c
  4864                           
  4865                           ;spi.c: 91: switch(configuration)
  4866  006A44  D012               	goto	l2783
  4867  006A46                     
  4868                           ;spi.c: 94: _spi_init(config_internal);
  4869  006A46  C154  F001         	movff	_config_internal,__spi_init@details
  4870  006A4A  C155  F002         	movff	_config_internal+1,__spi_init@details+1
  4871  006A4E  C156  F003         	movff	_config_internal+2,__spi_init@details+2
  4872  006A52  EC97  F035         	call	__spi_init	;wreg free
  4873                           
  4874                           ;spi.c: 95: break;
  4875  006A56  D010               	goto	l2785
  4876  006A58                     
  4877                           ;spi.c: 98: _spi_init(config_external);
  4878  006A58  C151  F001         	movff	_config_external,__spi_init@details
  4879  006A5C  C152  F002         	movff	_config_external+1,__spi_init@details+1
  4880  006A60  C153  F003         	movff	_config_external+2,__spi_init@details+2
  4881  006A64  EC97  F035         	call	__spi_init	;wreg free
  4882                           
  4883                           ;spi.c: 100: }
  4884                           
  4885                           ;spi.c: 99: break;
  4886  006A68  D007               	goto	l2785
  4887  006A6A                     l2783:
  4888  006A6A  5004               	movf	spi_init@configuration,w,c
  4889                           
  4890                           ; Switch size 1, requested type "space"
  4891                           ; Number of cases is 2, Range of values is 0 to 1
  4892                           ; switch strategies available:
  4893                           ; Name         Instructions Cycles
  4894                           ; simple_byte            7     4 (average)
  4895                           ;	Chosen strategy is simple_byte
  4896  006A6C  0A00               	xorlw	0	; case 0
  4897  006A6E  B4D8               	btfsc	status,2,c
  4898  006A70  D7EA               	goto	l2784
  4899  006A72  0A01               	xorlw	1	; case 1
  4900  006A74  B4D8               	btfsc	status,2,c
  4901  006A76  D7F0               	goto	l2786
  4902  006A78                     l2785:
  4903                           
  4904                           ;spi.c: 102: active_configuration = configuration;
  4905  006A78  C004  F175         	movff	spi_init@configuration,_active_configuration
  4906  006A7C  0012               	return		;funcret
  4907  006A7E                     __end_of_spi_init:
  4908                           	opt stack 0
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           intcon	equ	0xFF2
  4914                           intcon3	equ	0xFF0
  4915                           postinc0	equ	0xFEE
  4916                           wreg	equ	0xFE8
  4917                           postdec1	equ	0xFE5
  4918                           plusw1	equ	0xFE3
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           plusw2	equ	0xFDB
  4922                           status	equ	0xFD8
  4923                           
  4924 ;; *************** function __spi_init *****************
  4925 ;; Defined at:
  4926 ;;		line 24 in file "spi.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  details         3    0[COMRAM] struct .
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4940 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;Total ram usage:        3 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_spi_init
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text15
  4954  006B2E                     __ptext15:
  4955                           	opt stack 0
  4956  006B2E                     __spi_init:
  4957                           	opt stack 27
  4958                           
  4959                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  4960                           
  4961                           ;incstack = 0
  4962  006B2E  0E55               	movlw	85
  4963  006B30  6EA7               	movwf	4007,c	;volsfr
  4964  006B32  0EAA               	movlw	170
  4965  006B34  6EA7               	movwf	4007,c	;volsfr
  4966  006B36  010E               	movlb	14	; () banked
  4967  006B38  91BF               	bcf	191,0,b	;volatile
  4968                           
  4969                           ;spi.c: 31: RPINR21 = 22;
  4970  006B3A  0E16               	movlw	22
  4971  006B3C  6FFC               	movwf	252,b	;volatile
  4972                           
  4973                           ;spi.c: 32: RPOR21 = 10;
  4974  006B3E  0E0A               	movlw	10
  4975  006B40  6FD5               	movwf	213,b	;volatile
  4976                           
  4977                           ;spi.c: 34: RPOR23 = 11;
  4978  006B42  0E0B               	movlw	11
  4979  006B44  6FD7               	movwf	215,b	;volatile
  4980                           
  4981                           ;spi.c: 35: RPINR22 = 23;
  4982  006B46  0E17               	movlw	23
  4983  006B48  6FFD               	movwf	253,b	;volatile
  4984                           
  4985                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  4986  006B4A  0E55               	movlw	85
  4987  006B4C  6EA7               	movwf	4007,c	;volsfr
  4988  006B4E  0EAA               	movlw	170
  4989  006B50  6EA7               	movwf	4007,c	;volsfr
  4990                           
  4991                           ; BSR set to: 14
  4992  006B52  81BF               	bsf	191,0,b	;volatile
  4993                           
  4994                           ; BSR set to: 14
  4995                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  4996  006B54  8E73               	bsf	3955,7,c	;volatile
  4997                           
  4998                           ; BSR set to: 14
  4999                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  5000  006B56  8C73               	bsf	3955,6,c	;volatile
  5001                           
  5002                           ; BSR set to: 14
  5003                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  5004  006B58  9872               	bcf	3954,4,c	;volatile
  5005                           
  5006                           ; BSR set to: 14
  5007                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  5008  006B5A  9072               	bcf	3954,0,c	;volatile
  5009  006B5C  9272               	bcf	3954,1,c	;volatile
  5010  006B5E  9472               	bcf	3954,2,c	;volatile
  5011  006B60  9672               	bcf	3954,3,c	;volatile
  5012                           
  5013                           ; BSR set to: 14
  5014                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  5015  006B62  8A72               	bsf	3954,5,c	;volatile
  5016                           
  5017                           ; BSR set to: 14
  5018  006B64  0012               	return		;funcret
  5019  006B66                     __end_of__spi_init:
  5020                           	opt stack 0
  5021                           tblptru	equ	0xFF8
  5022                           tblptrh	equ	0xFF7
  5023                           tblptrl	equ	0xFF6
  5024                           tablat	equ	0xFF5
  5025                           intcon	equ	0xFF2
  5026                           intcon3	equ	0xFF0
  5027                           postinc0	equ	0xFEE
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           plusw1	equ	0xFE3
  5031                           fsr1h	equ	0xFE2
  5032                           fsr1l	equ	0xFE1
  5033                           plusw2	equ	0xFDB
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function __flash_set_page_size *****************
  5037 ;; Defined at:
  5038 ;;		line 99 in file "flash.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  size            1    wreg     enum E6894
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  size            1   23[COMRAM] enum E6894
  5043 ;;  command         4   19[COMRAM] unsigned char [4]
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;Total ram usage:        5 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    3
  5060 ;; This function calls:
  5061 ;;		__flash_is_busy
  5062 ;;		_memcpy
  5063 ;;		_spi_tx
  5064 ;; This function is called by:
  5065 ;;		_flash_init
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text16
  5070  005C40                     __ptext16:
  5071                           	opt stack 0
  5072  005C40                     __flash_set_page_size:
  5073                           	opt stack 25
  5074                           
  5075                           ; BSR set to: 14
  5076                           ;incstack = 0
  5077                           ;__flash_set_page_size@size stored from wreg
  5078  005C40  6E18               	movwf	__flash_set_page_size@size,c
  5079  005C42                     
  5080                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  5081  005C42  ECD7  F037         	call	__flash_is_busy	;wreg free
  5082  005C46  0900               	iorlw	0
  5083  005C48  A4D8               	btfss	status,2,c
  5084  005C4A  D7FB               	goto	l12760
  5085                           
  5086                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  5087  005C4C  5018               	movf	__flash_set_page_size@size,w,c
  5088  005C4E  A4D8               	btfss	status,2,c
  5089  005C50  D013               	goto	l1727
  5090                           
  5091                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  5092  005C52  0E14               	movlw	low __flash_set_page_size@command
  5093  005C54  6E01               	movwf	memcpy@d1,c
  5094  005C56  0E00               	movlw	high __flash_set_page_size@command
  5095  005C58  6E02               	movwf	memcpy@d1+1,c
  5096  005C5A  0EC3               	movlw	low _flash_command_pagesize_512
  5097  005C5C  6E03               	movwf	memcpy@s1,c
  5098  005C5E  0E8F               	movlw	high _flash_command_pagesize_512
  5099  005C60  6E04               	movwf	memcpy@s1+1,c
  5100  005C62  5003               	movf	memcpy@s1,w,c
  5101  005C64  1004               	iorwf	memcpy@s1+1,w,c
  5102  005C66  A4D8               	btfss	status,2,c
  5103  005C68  0E00               	movlw	low (__mediumconst shr (0+16))
  5104  005C6A  6E05               	movwf	memcpy@s1+2,c
  5105  005C6C  0E00               	movlw	0
  5106  005C6E  6E07               	movwf	memcpy@n+1,c
  5107  005C70  0E04               	movlw	4
  5108  005C72  6E06               	movwf	memcpy@n,c
  5109  005C74  EC1C  F030         	call	_memcpy	;wreg free
  5110  005C78                     l1727:
  5111                           
  5112                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  5113  005C78  0418               	decf	__flash_set_page_size@size,w,c
  5114  005C7A  A4D8               	btfss	status,2,c
  5115  005C7C  D013               	goto	l1728
  5116                           
  5117                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  5118  005C7E  0E14               	movlw	low __flash_set_page_size@command
  5119  005C80  6E01               	movwf	memcpy@d1,c
  5120  005C82  0E00               	movlw	high __flash_set_page_size@command
  5121  005C84  6E02               	movwf	memcpy@d1+1,c
  5122  005C86  0EBF               	movlw	low _flash_command_pagesize_528
  5123  005C88  6E03               	movwf	memcpy@s1,c
  5124  005C8A  0E8F               	movlw	high _flash_command_pagesize_528
  5125  005C8C  6E04               	movwf	memcpy@s1+1,c
  5126  005C8E  5003               	movf	memcpy@s1,w,c
  5127  005C90  1004               	iorwf	memcpy@s1+1,w,c
  5128  005C92  A4D8               	btfss	status,2,c
  5129  005C94  0E00               	movlw	low (__mediumconst shr (0+16))
  5130  005C96  6E05               	movwf	memcpy@s1+2,c
  5131  005C98  0E00               	movlw	0
  5132  005C9A  6E07               	movwf	memcpy@n+1,c
  5133  005C9C  0E04               	movlw	4
  5134  005C9E  6E06               	movwf	memcpy@n,c
  5135  005CA0  EC1C  F030         	call	_memcpy	;wreg free
  5136  005CA4                     l1728:
  5137                           
  5138                           ;flash.c: 113: spi_tx(command, 4);
  5139  005CA4  0E14               	movlw	low __flash_set_page_size@command
  5140  005CA6  6E01               	movwf	spi_tx@data,c
  5141  005CA8  0E00               	movlw	high __flash_set_page_size@command
  5142  005CAA  6E02               	movwf	spi_tx@data+1,c
  5143  005CAC  0E00               	movlw	0
  5144  005CAE  6E04               	movwf	spi_tx@length+1,c
  5145  005CB0  0E04               	movlw	4
  5146  005CB2  6E03               	movwf	spi_tx@length,c
  5147  005CB4  ECF9  F031         	call	_spi_tx	;wreg free
  5148  005CB8  0012               	return		;funcret
  5149  005CBA                     __end_of__flash_set_page_size:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           intcon	equ	0xFF2
  5156                           intcon3	equ	0xFF0
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           postdec1	equ	0xFE5
  5160                           plusw1	equ	0xFE3
  5161                           fsr1h	equ	0xFE2
  5162                           fsr1l	equ	0xFE1
  5163                           plusw2	equ	0xFDB
  5164                           status	equ	0xFD8
  5165                           
  5166 ;; *************** function _fat_init *****************
  5167 ;; Defined at:
  5168 ;;		line 1382 in file "fat16.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5186 ;;Total ram usage:        0 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    6
  5189 ;; This function calls:
  5190 ;;		_fat_format
  5191 ;;		_fat_get_format_status
  5192 ;; This function is called by:
  5193 ;;		_system_full_init
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text17
  5198  00714A                     __ptext17:
  5199                           	opt stack 0
  5200  00714A                     _fat_init:
  5201                           	opt stack 23
  5202                           
  5203                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5204                           
  5205                           ;incstack = 0
  5206  00714A  EC78  F029         	call	_fat_get_format_status	;wreg free
  5207  00714E  0900               	iorlw	0
  5208  007150  A4D8               	btfss	status,2,c
  5209  007152  0012               	return	
  5210                           
  5211                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  5212  007154  EC1E  F00F         	call	_fat_format	;wreg free
  5213  007158  0012               	return	
  5214  00715A                     __end_of_fat_init:
  5215                           	opt stack 0
  5216                           tblptru	equ	0xFF8
  5217                           tblptrh	equ	0xFF7
  5218                           tblptrl	equ	0xFF6
  5219                           tablat	equ	0xFF5
  5220                           intcon	equ	0xFF2
  5221                           intcon3	equ	0xFF0
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           postdec1	equ	0xFE5
  5225                           plusw1	equ	0xFE3
  5226                           fsr1h	equ	0xFE2
  5227                           fsr1l	equ	0xFE1
  5228                           plusw2	equ	0xFDB
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function _fat_get_format_status *****************
  5232 ;; Defined at:
  5233 ;;		line 1292 in file "fat16.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  cntr            2   45[COMRAM] unsigned int 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      enum E6868
  5240 ;; Registers used:
  5241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        4 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    5
  5254 ;; This function calls:
  5255 ;;		__get_fbr
  5256 ;;		__get_mbr
  5257 ;;		_flash_sector_read
  5258 ;; This function is called by:
  5259 ;;		_fat_init
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text18
  5264  0052F0                     __ptext18:
  5265                           	opt stack 0
  5266  0052F0                     _fat_get_format_status:
  5267                           	opt stack 23
  5268                           
  5269                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  5270                           
  5271                           ;incstack = 0
  5272  0052F0  0E00               	movlw	0
  5273  0052F2  6E29               	movwf	flash_sector_read@page+1,c
  5274  0052F4  0E00               	movlw	0
  5275  0052F6  6E28               	movwf	flash_sector_read@page,c
  5276  0052F8  0EC3               	movlw	low _buffer
  5277  0052FA  6E2A               	movwf	flash_sector_read@data,c
  5278  0052FC  0E02               	movlw	high _buffer
  5279  0052FE  6E2B               	movwf	flash_sector_read@data+1,c
  5280  005300  EC69  F037         	call	_flash_sector_read	;wreg free
  5281                           
  5282                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  5283  005304  0E00               	movlw	0
  5284  005306  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5285  005308  0E00               	movlw	0
  5286  00530A  6E2E               	movwf	fat_get_format_status@cntr,c
  5287  00530C                     l12912:
  5288  00530C  0E02               	movlw	2
  5289  00530E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5290  005310  B0D8               	btfsc	status,0,c
  5291  005312  D016               	goto	u10280
  5292                           
  5293                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  5294  005314  0EC3               	movlw	low _buffer
  5295  005316  242E               	addwf	fat_get_format_status@cntr,w,c
  5296  005318  6ED9               	movwf	fsr2l,c
  5297  00531A  0E02               	movlw	high _buffer
  5298  00531C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5299  00531E  6EDA               	movwf	fsr2h,c
  5300  005320  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5301  005324  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5302  005328  EC89  F025         	call	__get_mbr	;wreg free
  5303  00532C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5304  00532E  50DE               	movf	postinc2,w,c
  5305  005330  182D               	xorwf	??_fat_get_format_status+1,w,c
  5306  005332  B4D8               	btfsc	status,2,c
  5307  005334  D002               	goto	l2247
  5308                           
  5309                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  5310  005336  0E00               	movlw	0
  5311  005338  0012               	return	
  5312  00533A                     l2247:
  5313  00533A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5314  00533C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5315  00533E  D7E6               	goto	l12912
  5316  005340                     u10280:
  5317                           
  5318                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  5319  005340  0E00               	movlw	0
  5320  005342  6E29               	movwf	flash_sector_read@page+1,c
  5321  005344  0E01               	movlw	1
  5322  005346  6E28               	movwf	flash_sector_read@page,c
  5323  005348  0EC3               	movlw	low _buffer
  5324  00534A  6E2A               	movwf	flash_sector_read@data,c
  5325  00534C  0E02               	movlw	high _buffer
  5326  00534E  6E2B               	movwf	flash_sector_read@data+1,c
  5327  005350  EC69  F037         	call	_flash_sector_read	;wreg free
  5328                           
  5329                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  5330  005354  0E00               	movlw	0
  5331  005356  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5332  005358  0E00               	movlw	0
  5333  00535A  6E2E               	movwf	fat_get_format_status@cntr,c
  5334  00535C                     l12930:
  5335  00535C  0E02               	movlw	2
  5336  00535E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5337  005360  B0D8               	btfsc	status,0,c
  5338  005362  D016               	goto	u10310
  5339                           
  5340                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  5341  005364  0EC3               	movlw	low _buffer
  5342  005366  242E               	addwf	fat_get_format_status@cntr,w,c
  5343  005368  6ED9               	movwf	fsr2l,c
  5344  00536A  0E02               	movlw	high _buffer
  5345  00536C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5346  00536E  6EDA               	movwf	fsr2h,c
  5347  005370  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5348  005374  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5349  005378  ECAD  F00B         	call	__get_fbr	;wreg free
  5350  00537C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5351  00537E  50DE               	movf	postinc2,w,c
  5352  005380  182D               	xorwf	??_fat_get_format_status+1,w,c
  5353  005382  B4D8               	btfsc	status,2,c
  5354  005384  D002               	goto	l2251
  5355                           
  5356                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  5357  005386  0E00               	movlw	0
  5358  005388  0012               	return	
  5359  00538A                     l2251:
  5360  00538A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5361  00538C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5362  00538E  D7E6               	goto	l12930
  5363  005390                     u10310:
  5364                           
  5365                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  5366  005390  0E01               	movlw	1
  5367  005392  0012               	return	
  5368  005394                     __end_of_fat_get_format_status:
  5369                           	opt stack 0
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           intcon	equ	0xFF2
  5375                           intcon3	equ	0xFF0
  5376                           postinc0	equ	0xFEE
  5377                           wreg	equ	0xFE8
  5378                           postdec1	equ	0xFE5
  5379                           plusw1	equ	0xFE3
  5380                           fsr1h	equ	0xFE2
  5381                           fsr1l	equ	0xFE1
  5382                           postinc2	equ	0xFDE
  5383                           plusw2	equ	0xFDB
  5384                           fsr2h	equ	0xFDA
  5385                           fsr2l	equ	0xFD9
  5386                           status	equ	0xFD8
  5387                           
  5388 ;; *************** function __system_timer0_init *****************
  5389 ;; Defined at:
  5390 ;;		line 113 in file "os.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;		None
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;		None
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;Total ram usage:        0 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_system_full_init
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text19
  5418  006FD0                     __ptext19:
  5419                           	opt stack 0
  5420  006FD0                     __system_timer0_init:
  5421                           	opt stack 29
  5422                           
  5423                           ;os.c: 116: T0CONbits.T0CS = 0;
  5424                           
  5425                           ;incstack = 0
  5426  006FD0  9AD5               	bcf	4053,5,c	;volatile
  5427                           
  5428                           ;os.c: 118: T0CONbits.T08BIT = 0;
  5429  006FD2  9CD5               	bcf	4053,6,c	;volatile
  5430                           
  5431                           ;os.c: 120: T0CONbits.T0PS2 = 0;
  5432  006FD4  94D5               	bcf	4053,2,c	;volatile
  5433                           
  5434                           ;os.c: 121: T0CONbits.T0PS1 = 1;
  5435  006FD6  82D5               	bsf	4053,1,c	;volatile
  5436                           
  5437                           ;os.c: 122: T0CONbits.T0PS0 = 0;
  5438  006FD8  90D5               	bcf	4053,0,c	;volatile
  5439                           
  5440                           ;os.c: 124: T0CONbits.PSA = 0;
  5441  006FDA  96D5               	bcf	4053,3,c	;volatile
  5442                           
  5443                           ;os.c: 126: TMR0H = 0xD1;
  5444  006FDC  0ED1               	movlw	209
  5445  006FDE  6ED7               	movwf	4055,c	;volatile
  5446                           
  5447                           ;os.c: 127: TMR0L = 0x20;
  5448  006FE0  0E20               	movlw	32
  5449  006FE2  6ED6               	movwf	4054,c	;volatile
  5450                           
  5451                           ;os.c: 129: T0CONbits.TMR0ON = 1;
  5452  006FE4  8ED5               	bsf	4053,7,c	;volatile
  5453                           
  5454                           ;os.c: 133: INTCONbits.TMR0IF = 0;
  5455  006FE6  94F2               	bcf	intcon,2,c	;volatile
  5456                           
  5457                           ;os.c: 136: os.timeSlot = 0;
  5458  006FE8  0E00               	movlw	0
  5459  006FEA  0100               	movlb	0	; () banked
  5460  006FEC  6F62               	movwf	(_os+2)& (0+255),b
  5461                           
  5462                           ; BSR set to: 0
  5463  006FEE  0012               	return		;funcret
  5464  006FF0                     __end_of__system_timer0_init:
  5465                           	opt stack 0
  5466                           tblptru	equ	0xFF8
  5467                           tblptrh	equ	0xFF7
  5468                           tblptrl	equ	0xFF6
  5469                           tablat	equ	0xFF5
  5470                           intcon	equ	0xFF2
  5471                           intcon3	equ	0xFF0
  5472                           postinc0	equ	0xFEE
  5473                           wreg	equ	0xFE8
  5474                           postdec1	equ	0xFE5
  5475                           plusw1	equ	0xFE3
  5476                           fsr1h	equ	0xFE2
  5477                           fsr1l	equ	0xFE1
  5478                           postinc2	equ	0xFDE
  5479                           plusw2	equ	0xFDB
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function __system_encoder_init *****************
  5485 ;; Defined at:
  5486 ;;		line 74 in file "os.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;		None
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;Total ram usage:        0 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_system_full_init
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text20
  5514  006ABA                     __ptext20:
  5515                           	opt stack 0
  5516  006ABA                     __system_encoder_init:
  5517                           	opt stack 29
  5518                           
  5519                           ;os.c: 76: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;incstack = 0
  5523  006ABA  0E55               	movlw	85
  5524  006ABC  6EA7               	movwf	4007,c	;volsfr
  5525  006ABE  0EAA               	movlw	170
  5526  006AC0  6EA7               	movwf	4007,c	;volsfr
  5527  006AC2  010E               	movlb	14	; () banked
  5528  006AC4  91BF               	bcf	191,0,b	;volatile
  5529                           
  5530                           ;os.c: 77: RPINR1 = 1;
  5531  006AC6  0E01               	movlw	1
  5532  006AC8  6FE1               	movwf	225,b	;volatile
  5533                           
  5534                           ;os.c: 78: RPINR3 = 0;
  5535  006ACA  0E00               	movlw	0
  5536  006ACC  6FE3               	movwf	227,b	;volatile
  5537                           
  5538                           ;os.c: 79: RPINR2 = 2;
  5539  006ACE  0E02               	movlw	2
  5540  006AD0  6FE2               	movwf	226,b	;volatile
  5541                           
  5542                           ;os.c: 80: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  5543  006AD2  0E55               	movlw	85
  5544  006AD4  6EA7               	movwf	4007,c	;volsfr
  5545  006AD6  0EAA               	movlw	170
  5546  006AD8  6EA7               	movwf	4007,c	;volsfr
  5547                           
  5548                           ; BSR set to: 14
  5549  006ADA  91BF               	bcf	191,0,b	;volatile
  5550                           
  5551                           ; BSR set to: 14
  5552                           ;os.c: 83: INTCON2bits.INTEDG1 = 0;
  5553  006ADC  9AF1               	bcf	intcon2,5,c	;volatile
  5554                           
  5555                           ; BSR set to: 14
  5556                           ;os.c: 84: INTCON3bits.INT1IF = 0;
  5557  006ADE  90F0               	bcf	intcon3,0,c	;volatile
  5558                           
  5559                           ; BSR set to: 14
  5560                           ;os.c: 86: INTCON2bits.INTEDG2 = 1;
  5561  006AE0  88F1               	bsf	intcon2,4,c	;volatile
  5562                           
  5563                           ; BSR set to: 14
  5564                           ;os.c: 87: INTCON3bits.INT2IF = 0;
  5565  006AE2  92F0               	bcf	intcon3,1,c	;volatile
  5566                           
  5567                           ; BSR set to: 14
  5568                           ;os.c: 89: INTCON2bits.INTEDG3 = 1;
  5569  006AE4  86F1               	bsf	intcon2,3,c	;volatile
  5570                           
  5571                           ; BSR set to: 14
  5572                           ;os.c: 90: INTCON3bits.INT3IF = 0;
  5573  006AE6  94F0               	bcf	intcon3,2,c	;volatile
  5574                           
  5575                           ;os.c: 92: os.encoderCount = 0;
  5576  006AE8  0E00               	movlw	0
  5577  006AEA  0100               	movlb	0	; () banked
  5578  006AEC  6F60               	movwf	_os& (0+255),b
  5579                           
  5580                           ;os.c: 93: os.buttonCount = 0;
  5581  006AEE  0E00               	movlw	0
  5582  006AF0  6F61               	movwf	(_os+1)& (0+255),b
  5583                           
  5584                           ; BSR set to: 0
  5585  006AF2  0012               	return		;funcret
  5586  006AF4                     __end_of__system_encoder_init:
  5587                           	opt stack 0
  5588                           tblptru	equ	0xFF8
  5589                           tblptrh	equ	0xFF7
  5590                           tblptrl	equ	0xFF6
  5591                           tablat	equ	0xFF5
  5592                           intcon	equ	0xFF2
  5593                           intcon2	equ	0xFF1
  5594                           intcon3	equ	0xFF0
  5595                           postinc0	equ	0xFEE
  5596                           wreg	equ	0xFE8
  5597                           postdec1	equ	0xFE5
  5598                           plusw1	equ	0xFE3
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           postinc2	equ	0xFDE
  5602                           plusw2	equ	0xFDB
  5603                           fsr2h	equ	0xFDA
  5604                           fsr2l	equ	0xFD9
  5605                           status	equ	0xFD8
  5606                           
  5607 ;; *************** function _jump_to_main_program *****************
  5608 ;; Defined at:
  5609 ;;		line 227 in file "os.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;		None
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  1    wreg      void 
  5616 ;; Registers used:
  5617 ;;		None
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5627 ;;Total ram usage:        0 bytes
  5628 ;; Hardware stack levels used:    1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_main
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text21
  5637  007232                     __ptext21:
  5638                           	opt stack 0
  5639  007232                     _jump_to_main_program:
  5640                           	opt stack 30
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;incstack = 0
  5644  007232  EF00 F048          	goto	36864	; ;# 
  5645  007236  0012               	return		;funcret
  5646  007238                     __end_of_jump_to_main_program:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           intcon3	equ	0xFF0
  5655                           postinc0	equ	0xFEE
  5656                           wreg	equ	0xFE8
  5657                           postdec1	equ	0xFE5
  5658                           plusw1	equ	0xFE3
  5659                           fsr1h	equ	0xFE2
  5660                           fsr1l	equ	0xFE1
  5661                           postinc2	equ	0xFDE
  5662                           plusw2	equ	0xFDB
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8
  5666                           
  5667 ;; *************** function _bootloader_run *****************
  5668 ;; Defined at:
  5669 ;;		line 63 in file "bootloader.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  timeslot        1    wreg     unsigned char 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  timeslot        1   91[COMRAM] unsigned char 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;Total ram usage:        1 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:    9
  5690 ;; This function calls:
  5691 ;;		__bootloader_find_file
  5692 ;;		__bootloader_program
  5693 ;;		__bootloader_verify_file
  5694 ;; This function is called by:
  5695 ;;		_main
  5696 ;; This function uses a non-reentrant model
  5697 ;;
  5698                           
  5699                           	psect	text22
  5700  005FD0                     __ptext22:
  5701                           	opt stack 0
  5702  005FD0                     _bootloader_run:
  5703                           	opt stack 21
  5704                           
  5705                           ;incstack = 0
  5706                           ;bootloader_run@timeslot stored from wreg
  5707  005FD0  6E5C               	movwf	bootloader_run@timeslot,c
  5708                           
  5709                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  5710  005FD2  0100               	movlb	0	; () banked
  5711  005FD4  5165               	movf	(_os+5)& (0+255),w,b
  5712  005FD6  B4D8               	btfsc	status,2,c
  5713  005FD8  0012               	return	
  5714  005FDA  D015               	goto	l2405
  5715  005FDC                     
  5716                           ; BSR set to: 0
  5717                           ;bootloader.c: 74: if(timeslot==0)
  5718                           
  5719                           ; BSR set to: 0
  5720  005FDC  505C               	movf	bootloader_run@timeslot,w,c
  5721  005FDE  A4D8               	btfss	status,2,c
  5722  005FE0  0012               	return	
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  5726  005FE2  EC1C  F02A         	call	__bootloader_find_file	;wreg free
  5727                           
  5728                           ;bootloader.c: 77: };bootloader.c: 78: break;
  5729  005FE6  0012               	return	
  5730  005FE8                     
  5731                           ;bootloader.c: 81: if(timeslot==0)
  5732  005FE8  505C               	movf	bootloader_run@timeslot,w,c
  5733  005FEA  A4D8               	btfss	status,2,c
  5734  005FEC  0012               	return	
  5735                           
  5736                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  5737  005FEE  EC1C  F02A         	call	__bootloader_find_file	;wreg free
  5738                           
  5739                           ;bootloader.c: 84: };bootloader.c: 85: break;
  5740  005FF2  0012               	return	
  5741  005FF4                     
  5742                           ;bootloader.c: 88: _bootloader_verify_file();
  5743  005FF4  EC07  F006         	call	__bootloader_verify_file	;wreg free
  5744                           
  5745                           ;bootloader.c: 95: break;
  5746                           
  5747                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  5748                           
  5749                           ;bootloader.c: 92: break;
  5750                           
  5751                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  5752                           
  5753                           ;bootloader.c: 89: break;
  5754  005FF8  0012               	return	
  5755  005FFA                     
  5756                           ;bootloader.c: 98: if(timeslot==0)
  5757  005FFA  505C               	movf	bootloader_run@timeslot,w,c
  5758  005FFC  A4D8               	btfss	status,2,c
  5759  005FFE  0012               	return	
  5760                           
  5761                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  5762  006000  EC2D  F004         	call	__bootloader_program	;wreg free
  5763                           
  5764                           ;bootloader.c: 109: }
  5765                           
  5766                           ;bootloader.c: 108: break;
  5767                           
  5768                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  5769                           
  5770                           ;bootloader.c: 105: break;
  5771                           
  5772                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  5773                           
  5774                           ;bootloader.c: 101: };bootloader.c: 102: break;
  5775  006004  0012               	return	
  5776  006006                     l2405:
  5777  006006  0100               	movlb	0	; () banked
  5778  006008  5164               	movf	(_os+4)& (0+255),w,b
  5779                           
  5780                           ; Switch size 1, requested type "space"
  5781                           ; Number of cases is 8, Range of values is 16 to 144
  5782                           ; switch strategies available:
  5783                           ; Name         Instructions Cycles
  5784                           ; simple_byte           25    13 (average)
  5785                           ;	Chosen strategy is simple_byte
  5786  00600A  0A10               	xorlw	16	; case 16
  5787  00600C  B4D8               	btfsc	status,2,c
  5788  00600E  D7E6               	goto	l2406
  5789  006010  0A30               	xorlw	48	; case 32
  5790  006012  B4D8               	btfsc	status,2,c
  5791  006014  D7E9               	goto	l2409
  5792  006016  0A10               	xorlw	16	; case 48
  5793  006018  B4D8               	btfsc	status,2,c
  5794  00601A  D7EC               	goto	l2411
  5795  00601C  0A70               	xorlw	112	; case 64
  5796  00601E  B4D8               	btfsc	status,2,c
  5797  006020  0012               	return	
  5798  006022  0A10               	xorlw	16	; case 80
  5799  006024  B4D8               	btfsc	status,2,c
  5800  006026  0012               	return	
  5801  006028  0A30               	xorlw	48	; case 96
  5802  00602A  B4D8               	btfsc	status,2,c
  5803  00602C  D7E6               	goto	l2414
  5804  00602E  0A10               	xorlw	16	; case 112
  5805  006030  B4D8               	btfsc	status,2,c
  5806  006032  0012               	return	
  5807  006034  0AE0               	xorlw	224	; case 144
  5808  006036  0012               	return	
  5809  006038                     __end_of_bootloader_run:
  5810                           	opt stack 0
  5811                           tblptru	equ	0xFF8
  5812                           tblptrh	equ	0xFF7
  5813                           tblptrl	equ	0xFF6
  5814                           tablat	equ	0xFF5
  5815                           intcon	equ	0xFF2
  5816                           intcon2	equ	0xFF1
  5817                           intcon3	equ	0xFF0
  5818                           postinc0	equ	0xFEE
  5819                           wreg	equ	0xFE8
  5820                           postdec1	equ	0xFE5
  5821                           plusw1	equ	0xFE3
  5822                           fsr1h	equ	0xFE2
  5823                           fsr1l	equ	0xFE1
  5824                           postinc2	equ	0xFDE
  5825                           plusw2	equ	0xFDB
  5826                           fsr2h	equ	0xFDA
  5827                           fsr2l	equ	0xFD9
  5828                           status	equ	0xFD8
  5829                           
  5830 ;; *************** function __bootloader_verify_file *****************
  5831 ;; Defined at:
  5832 ;;		line 185 in file "bootloader.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  root           32   22[BANK0 ] struct .
  5837 ;;  address32       4   59[BANK0 ] unsigned long 
  5838 ;;  return_value    4   55[BANK0 ] unsigned long 
  5839 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;Total ram usage:       49 bytes
  5854 ;; Hardware stack levels used:    1
  5855 ;; Hardware stack levels required when called:    8
  5856 ;; This function calls:
  5857 ;;		__bootloader_check_address
  5858 ;;		_fat_get_file_information
  5859 ;;		_fat_get_file_size
  5860 ;;		_fat_read_from_file_fast
  5861 ;;		_parseHexFileEntry
  5862 ;; This function is called by:
  5863 ;;		_bootloader_run
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text23
  5868  000C0E                     __ptext23:
  5869                           	opt stack 0
  5870  000C0E                     __bootloader_verify_file:
  5871                           	opt stack 21
  5872                           
  5873                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  5874                           
  5875                           ;incstack = 0
  5876  000C0E  0E00               	movlw	0
  5877  000C10  0100               	movlb	0	; () banked
  5878  000C12  6FED               	movwf	__bootloader_verify_file@return_value& (0+255),b
  5879  000C14  0E00               	movlw	0
  5880  000C16  6FEE               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  5881  000C18  0E00               	movlw	0
  5882  000C1A  6FEF               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  5883  000C1C  0E00               	movlw	0
  5884  000C1E  6FF0               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  5888  000C20  5183               	movf	_hex_file_offset& (0+255),w,b
  5889  000C22  1184               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  5890  000C24  1185               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  5891  000C26  1186               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  5892  000C28  A4D8               	btfss	status,2,c
  5893  000C2A  D010               	goto	l2437
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  5897  000C2C  0ECC               	movlw	low __bootloader_verify_file@root
  5898  000C2E  6E30               	movwf	fat_get_file_information@data,c
  5899  000C30  0E00               	movlw	high __bootloader_verify_file@root
  5900  000C32  6E31               	movwf	fat_get_file_information@data+1,c
  5901  000C34  51FF               	movf	_file_number& (0+255),w,b
  5902  000C36  ECD5  F02E         	call	_fat_get_file_information
  5903                           
  5904                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  5905  000C3A  C0E6  F0B0         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  5906  000C3E  C0E7  F0B1         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  5907                           
  5908                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  5909  000C42  0E00               	movlw	0
  5910  000C44  0100               	movlb	0	; () banked
  5911  000C46  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  5912  000C48  0E00               	movlw	0
  5913  000C4A  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  5914  000C4C                     l2437:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  5918                           
  5919                           ; BSR set to: 0
  5920  000C4C  51FF               	movf	_file_number& (0+255),w,b
  5921  000C4E  EC46  F02F         	call	_fat_get_file_size
  5922  000C52  C036  F07F         	movff	?_fat_get_file_size,_hex_file_size
  5923  000C56  C037  F080         	movff	?_fat_get_file_size+1,_hex_file_size+1
  5924  000C5A  C038  F081         	movff	?_fat_get_file_size+2,_hex_file_size+2
  5925  000C5E  C039  F082         	movff	?_fat_get_file_size+3,_hex_file_size+3
  5926                           
  5927                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  5928  000C62  0E00               	movlw	0
  5929  000C64  0100               	movlb	0	; () banked
  5930  000C66  6FEC               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  5931  000C68                     l13870:
  5932                           
  5933                           ; BSR set to: 0
  5934  000C68  0E0F               	movlw	15
  5935  000C6A  65EC               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  5936  000C6C  D001               	goto	l2438
  5937  000C6E  0012               	return	
  5938  000C70                     l2438:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  5942                           
  5943                           ; BSR set to: 0
  5944  000C70  C083  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  5945  000C74  C084  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  5946  000C78  C085  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  5947  000C7C  C086  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  5948  000C80  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  5949  000C82  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  5950  000C84  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  5951  000C86  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  5952  000C88  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  5953  000C8A  0E00               	movlw	0
  5954  000C8C  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  5955  000C8E  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  5956  000C90  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  5957  000C92  517F               	movf	_hex_file_size& (0+255),w,b
  5958  000C94  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  5959  000C96  6FC8               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  5960  000C98  5180               	movf	(_hex_file_size+1)& (0+255),w,b
  5961  000C9A  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  5962  000C9C  6FC9               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  5963  000C9E  5181               	movf	(_hex_file_size+2)& (0+255),w,b
  5964  000CA0  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  5965  000CA2  6FCA               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  5966  000CA4  5182               	movf	(_hex_file_size+3)& (0+255),w,b
  5967  000CA6  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  5968  000CA8  6FCB               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  5969  000CAA  51CB               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  5970  000CAC  11CA               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  5971  000CAE  11C9               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  5972  000CB0  E104               	bnz	u11370
  5973  000CB2  0E32               	movlw	50
  5974  000CB4  5DC8               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  5975  000CB6  A0D8               	btfss	status,0,c
  5976  000CB8  D01F               	goto	l2440
  5977  000CBA                     u11370:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  5981  000CBA  C083  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  5982  000CBE  C084  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  5983  000CC2  C085  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  5984  000CC6  C086  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  5985  000CCA  0E32               	movlw	50
  5986  000CCC  6E46               	movwf	fat_read_from_file_fast@length,c
  5987  000CCE  0E00               	movlw	0
  5988  000CD0  6E47               	movwf	fat_read_from_file_fast@length+1,c
  5989  000CD2  0E00               	movlw	0
  5990  000CD4  6E48               	movwf	fat_read_from_file_fast@length+2,c
  5991  000CD6  0E00               	movlw	0
  5992  000CD8  6E49               	movwf	fat_read_from_file_fast@length+3,c
  5993  000CDA  0E80               	movlw	low _file_buffer
  5994  000CDC  6E4A               	movwf	fat_read_from_file_fast@data,c
  5995  000CDE  0E02               	movlw	high _file_buffer
  5996  000CE0  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  5997  000CE2  0EB0               	movlw	low _fast_read_cluster
  5998  000CE4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  5999  000CE6  0E00               	movlw	high _fast_read_cluster
  6000  000CE8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6001  000CEA  0EAE               	movlw	low _fast_read_cluster_number
  6002  000CEC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6003  000CEE  0E00               	movlw	high _fast_read_cluster_number
  6004  000CF0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6005  000CF2  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6006                           
  6007                           ;bootloader.c: 211: }
  6008  000CF6  D034               	goto	l2441
  6009  000CF8                     l2440:
  6010                           
  6011                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6012  000CF8  C083  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6013  000CFC  C084  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6014  000D00  C085  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6015  000D04  C086  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6016  000D08  C083  F0C4         	movff	_hex_file_offset,??__bootloader_verify_file
  6017  000D0C  C084  F0C5         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6018  000D10  C085  F0C6         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6019  000D14  C086  F0C7         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6020  000D18  0100               	movlb	0	; () banked
  6021  000D1A  1FC4               	comf	??__bootloader_verify_file& (0+255),f,b
  6022  000D1C  1FC5               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6023  000D1E  1FC6               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6024  000D20  1FC7               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6025  000D22  2BC4               	incf	??__bootloader_verify_file& (0+255),f,b
  6026  000D24  0E00               	movlw	0
  6027  000D26  23C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6028  000D28  23C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6029  000D2A  23C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6030  000D2C  517F               	movf	_hex_file_size& (0+255),w,b
  6031  000D2E  25C4               	addwf	??__bootloader_verify_file& (0+255),w,b
  6032  000D30  6E46               	movwf	fat_read_from_file_fast@length,c
  6033  000D32  5180               	movf	(_hex_file_size+1)& (0+255),w,b
  6034  000D34  21C5               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6035  000D36  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6036  000D38  5181               	movf	(_hex_file_size+2)& (0+255),w,b
  6037  000D3A  21C6               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6038  000D3C  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6039  000D3E  5182               	movf	(_hex_file_size+3)& (0+255),w,b
  6040  000D40  21C7               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6041  000D42  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6042  000D44  0E80               	movlw	low _file_buffer
  6043  000D46  6E4A               	movwf	fat_read_from_file_fast@data,c
  6044  000D48  0E02               	movlw	high _file_buffer
  6045  000D4A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6046  000D4C  0EB0               	movlw	low _fast_read_cluster
  6047  000D4E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6048  000D50  0E00               	movlw	high _fast_read_cluster
  6049  000D52  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6050  000D54  0EAE               	movlw	low _fast_read_cluster_number
  6051  000D56  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6052  000D58  0E00               	movlw	high _fast_read_cluster_number
  6053  000D5A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6054  000D5C  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6055  000D60                     l2441:
  6056                           
  6057                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6058  000D60  0E80               	movlw	low _file_buffer
  6059  000D62  6E0C               	movwf	parseHexFileEntry@data,c
  6060  000D64  0E02               	movlw	high _file_buffer
  6061  000D66  6E0D               	movwf	parseHexFileEntry@data+1,c
  6062  000D68  0E00               	movlw	0
  6063  000D6A  6E0E               	movwf	parseHexFileEntry@offset,c
  6064  000D6C  0E00               	movlw	0
  6065  000D6E  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6066  000D70  0E00               	movlw	0
  6067  000D72  6E10               	movwf	parseHexFileEntry@offset+2,c
  6068  000D74  0E00               	movlw	0
  6069  000D76  6E11               	movwf	parseHexFileEntry@offset+3,c
  6070  000D78  0EC8               	movlw	low _hex_file_entry
  6071  000D7A  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6072  000D7C  0E01               	movlw	high _hex_file_entry
  6073  000D7E  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6074  000D80  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6075  000D84  C00C  F0ED         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6076  000D88  C00D  F0EE         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6077  000D8C  C00E  F0EF         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6078  000D90  C00F  F0F0         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6079                           
  6080                           ;bootloader.c: 222: ++hex_file_entries;
  6081  000D94  0101               	movlb	1	; () banked
  6082  000D96  4B63               	infsnz	_hex_file_entries& (0+255),f,b
  6083  000D98  2B64               	incf	(_hex_file_entries+1)& (0+255),f,b
  6084                           
  6085                           ; BSR set to: 1
  6086                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6087  000D9A  0E04               	movlw	4
  6088  000D9C  19CC               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6089  000D9E  A4D8               	btfss	status,2,c
  6090  000DA0  D01C               	goto	l2442
  6091                           
  6092                           ; BSR set to: 1
  6093                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6094  000DA2  51CD               	movf	(_hex_file_entry+5)& (0+255),w,b
  6095  000DA4  6F39               	movwf	_extended_linear_address& (0+255),b
  6096  000DA6  6B3A               	clrf	(_extended_linear_address+1)& (0+255),b
  6097  000DA8  6B3B               	clrf	(_extended_linear_address+2)& (0+255),b
  6098  000DAA  6B3C               	clrf	(_extended_linear_address+3)& (0+255),b
  6099                           
  6100                           ; BSR set to: 1
  6101                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6102  000DAC  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6103  000DB0  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6104  000DB4  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6105  000DB8  6B39               	clrf	_extended_linear_address& (0+255),b
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  6109  000DBA  51CE               	movf	(_hex_file_entry+6)& (0+255),w,b
  6110  000DBC  1339               	iorwf	_extended_linear_address& (0+255),f,b
  6111                           
  6112                           ; BSR set to: 1
  6113                           ;bootloader.c: 230: extended_linear_address <<= 8;
  6114  000DBE  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6115  000DC2  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6116  000DC6  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6117  000DCA  6B39               	clrf	_extended_linear_address& (0+255),b
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;bootloader.c: 231: extended_linear_address <<= 8;
  6121  000DCC  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6122  000DD0  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6123  000DD4  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6124  000DD8  6B39               	clrf	_extended_linear_address& (0+255),b
  6125  000DDA                     l2442:
  6126                           
  6127                           ; BSR set to: 1
  6128                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  6129                           
  6130                           ; BSR set to: 1
  6131  000DDA  51CC               	movf	(_hex_file_entry+4)& (0+255),w,b
  6132  000DDC  A4D8               	btfss	status,2,c
  6133  000DDE  D05D               	goto	l2446
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6137  000DE0  51CA               	movf	(_hex_file_entry+2)& (0+255),w,b
  6138  000DE2  2539               	addwf	_extended_linear_address& (0+255),w,b
  6139  000DE4  0100               	movlb	0	; () banked
  6140  000DE6  6FF1               	movwf	__bootloader_verify_file@address32& (0+255),b
  6141  000DE8  0101               	movlb	1	; () banked
  6142  000DEA  51CB               	movf	(_hex_file_entry+3)& (0+255),w,b
  6143  000DEC  213A               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6144  000DEE  0100               	movlb	0	; () banked
  6145  000DF0  6FF2               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6146  000DF2  0E00               	movlw	0
  6147  000DF4  0101               	movlb	1	; () banked
  6148  000DF6  213B               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6149  000DF8  0100               	movlb	0	; () banked
  6150  000DFA  6FF3               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6151  000DFC  0E00               	movlw	0
  6152  000DFE  0101               	movlb	1	; () banked
  6153  000E00  213C               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6154  000E02  0100               	movlb	0	; () banked
  6155  000E04  6FF4               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6156                           
  6157                           ;bootloader.c: 241: if(address32<file_minimum_address)
  6158  000E06  0101               	movlb	1	; () banked
  6159  000E08  5141               	movf	_file_minimum_address& (0+255),w,b
  6160  000E0A  0100               	movlb	0	; () banked
  6161  000E0C  5DF1               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6162  000E0E  0101               	movlb	1	; () banked
  6163  000E10  5142               	movf	(_file_minimum_address+1)& (0+255),w,b
  6164  000E12  0100               	movlb	0	; () banked
  6165  000E14  59F2               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6166  000E16  0101               	movlb	1	; () banked
  6167  000E18  5143               	movf	(_file_minimum_address+2)& (0+255),w,b
  6168  000E1A  0100               	movlb	0	; () banked
  6169  000E1C  59F3               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6170  000E1E  0101               	movlb	1	; () banked
  6171  000E20  5144               	movf	(_file_minimum_address+3)& (0+255),w,b
  6172  000E22  0100               	movlb	0	; () banked
  6173  000E24  59F4               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6174  000E26  B0D8               	btfsc	status,0,c
  6175  000E28  D008               	goto	l2444
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  6179  000E2A  C0F1  F141         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6180  000E2E  C0F2  F142         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6181  000E32  C0F3  F143         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6182  000E36  C0F4  F144         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6183  000E3A                     l2444:
  6184                           
  6185                           ; BSR set to: 0
  6186                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  6187                           
  6188                           ; BSR set to: 0
  6189  000E3A  51F1               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6190  000E3C  0101               	movlb	1	; () banked
  6191  000E3E  5D3D               	subwf	_file_maximum_address& (0+255),w,b
  6192  000E40  0100               	movlb	0	; () banked
  6193  000E42  51F2               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6194  000E44  0101               	movlb	1	; () banked
  6195  000E46  593E               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6196  000E48  0100               	movlb	0	; () banked
  6197  000E4A  51F3               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6198  000E4C  0101               	movlb	1	; () banked
  6199  000E4E  593F               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6200  000E50  0100               	movlb	0	; () banked
  6201  000E52  51F4               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6202  000E54  0101               	movlb	1	; () banked
  6203  000E56  5940               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6204  000E58  B0D8               	btfsc	status,0,c
  6205  000E5A  D008               	goto	l2445
  6206                           
  6207                           ; BSR set to: 1
  6208                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  6209  000E5C  C0F1  F13D         	movff	__bootloader_verify_file@address32,_file_maximum_address
  6210  000E60  C0F2  F13E         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  6211  000E64  C0F3  F13F         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  6212  000E68  C0F4  F140         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  6213  000E6C                     l2445:
  6214                           
  6215                           ; BSR set to: 1
  6216                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  6217                           
  6218                           ; BSR set to: 1
  6219  000E6C  C0F1  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  6220  000E70  C0F2  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  6221  000E74  C0F3  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  6222  000E78  C0F4  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  6223  000E7C  C1C8  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  6224  000E80  ECB2  F024         	call	__bootloader_check_address	;wreg free
  6225  000E84  0AFF               	xorlw	255
  6226  000E86  A4D8               	btfss	status,2,c
  6227  000E88  D008               	goto	l2446
  6228                           
  6229                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  6230  000E8A  0E0B               	movlw	11
  6231  000E8C  0100               	movlb	0	; () banked
  6232  000E8E  6F96               	movwf	_last_error& (0+255),b
  6233                           
  6234                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  6235  000E90  0E50               	movlw	80
  6236  000E92  6F64               	movwf	(_os+4)& (0+255),b
  6237                           
  6238                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6239  000E94  0E50               	movlw	80
  6240  000E96  6F65               	movwf	(_os+5)& (0+255),b
  6241                           
  6242                           ;bootloader.c: 258: break;
  6243  000E98  0012               	return	
  6244  000E9A                     l2446:
  6245                           
  6246                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  6247                           
  6248                           ; BSR set to: 0
  6249                           
  6250                           ; BSR set to: 0
  6251  000E9A  0100               	movlb	0	; () banked
  6252  000E9C  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6253  000E9E  11EE               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6254  000EA0  11EF               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6255  000EA2  11F0               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6256  000EA4  A4D8               	btfss	status,2,c
  6257  000EA6  D027               	goto	l2447
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  6261  000EA8  C163  F161         	movff	_hex_file_entries,_total_hex_file_entries
  6262  000EAC  C164  F162         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  6263                           
  6264                           ; BSR set to: 0
  6265                           ;bootloader.c: 267: hex_file_entries = 0;
  6266  000EB0  0E00               	movlw	0
  6267  000EB2  0101               	movlb	1	; () banked
  6268  000EB4  6F64               	movwf	(_hex_file_entries+1)& (0+255),b
  6269  000EB6  0E00               	movlw	0
  6270  000EB8  6F63               	movwf	_hex_file_entries& (0+255),b
  6271                           
  6272                           ;bootloader.c: 268: hex_file_offset = 0;
  6273  000EBA  0E00               	movlw	0
  6274  000EBC  0100               	movlb	0	; () banked
  6275  000EBE  6F83               	movwf	_hex_file_offset& (0+255),b
  6276  000EC0  0E00               	movlw	0
  6277  000EC2  6F84               	movwf	(_hex_file_offset+1)& (0+255),b
  6278  000EC4  0E00               	movlw	0
  6279  000EC6  6F85               	movwf	(_hex_file_offset+2)& (0+255),b
  6280  000EC8  0E00               	movlw	0
  6281  000ECA  6F86               	movwf	(_hex_file_offset+3)& (0+255),b
  6282                           
  6283                           ;bootloader.c: 269: extended_linear_address = 0;
  6284  000ECC  0E00               	movlw	0
  6285  000ECE  0101               	movlb	1	; () banked
  6286  000ED0  6F39               	movwf	_extended_linear_address& (0+255),b
  6287  000ED2  0E00               	movlw	0
  6288  000ED4  6F3A               	movwf	(_extended_linear_address+1)& (0+255),b
  6289  000ED6  0E00               	movlw	0
  6290  000ED8  6F3B               	movwf	(_extended_linear_address+2)& (0+255),b
  6291  000EDA  0E00               	movlw	0
  6292  000EDC  6F3C               	movwf	(_extended_linear_address+3)& (0+255),b
  6293                           
  6294                           ;bootloader.c: 270: flash_pages_written = 0;
  6295  000EDE  0E00               	movlw	0
  6296  000EE0  6F60               	movwf	(_flash_pages_written+1)& (0+255),b
  6297  000EE2  0E00               	movlw	0
  6298  000EE4  6F5F               	movwf	_flash_pages_written& (0+255),b
  6299                           
  6300                           ;bootloader.c: 271: start_from_byte_next = 0;
  6301  000EE6  0E00               	movlw	0
  6302  000EE8  0100               	movlb	0	; () banked
  6303  000EEA  6F95               	movwf	_start_from_byte_next& (0+255),b
  6304                           
  6305                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  6306  000EEC  0E40               	movlw	64
  6307  000EEE  6F64               	movwf	(_os+4)& (0+255),b
  6308                           
  6309                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  6310  000EF0  0E40               	movlw	64
  6311  000EF2  6F65               	movwf	(_os+5)& (0+255),b
  6312                           
  6313                           ;bootloader.c: 275: break;
  6314  000EF4  0012               	return	
  6315  000EF6                     l2447:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  6319                           
  6320                           ; BSR set to: 0
  6321  000EF6  0EF1               	movlw	241
  6322  000EF8  5DED               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  6323  000EFA  0EFF               	movlw	255
  6324  000EFC  59EE               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6325  000EFE  0EFF               	movlw	255
  6326  000F00  59EF               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6327  000F02  0EFF               	movlw	255
  6328  000F04  59F0               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6329  000F06  A0D8               	btfss	status,0,c
  6330  000F08  D007               	goto	l2449
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  6334  000F0A  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6335  000F0C  0B0F               	andlw	15
  6336  000F0E  6F96               	movwf	_last_error& (0+255),b
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  6340  000F10  0E50               	movlw	80
  6341  000F12  6F64               	movwf	(_os+4)& (0+255),b
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6345  000F14  0E50               	movlw	80
  6346  000F16  D7ED               	goto	L1
  6347  000F18                     l2449:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  6351                           
  6352                           ; BSR set to: 0
  6353  000F18  51ED               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6354  000F1A  2783               	addwf	_hex_file_offset& (0+255),f,b
  6355  000F1C  51EE               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6356  000F1E  2384               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  6357  000F20  51EF               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6358  000F22  2385               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  6359  000F24  51F0               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6360  000F26  2386               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  6361                           
  6362                           ; BSR set to: 0
  6363                           
  6364                           ; BSR set to: 0
  6365                           
  6366                           ; BSR set to: 0
  6367  000F28  2BEC               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  6368  000F2A  D69E               	goto	l13870
  6369  000F2C                     __end_of__bootloader_verify_file:
  6370                           	opt stack 0
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           intcon	equ	0xFF2
  6376                           intcon2	equ	0xFF1
  6377                           intcon3	equ	0xFF0
  6378                           postinc0	equ	0xFEE
  6379                           wreg	equ	0xFE8
  6380                           postdec1	equ	0xFE5
  6381                           plusw1	equ	0xFE3
  6382                           fsr1h	equ	0xFE2
  6383                           fsr1l	equ	0xFE1
  6384                           postinc2	equ	0xFDE
  6385                           plusw2	equ	0xFDB
  6386                           fsr2h	equ	0xFDA
  6387                           fsr2l	equ	0xFD9
  6388                           status	equ	0xFD8
  6389                           
  6390 ;; *************** function __bootloader_program *****************
  6391 ;; Defined at:
  6392 ;;		line 294 in file "bootloader.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;		None
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  root           32   28[BANK0 ] struct .
  6397 ;;  address32       4   64[BANK0 ] unsigned long 
  6398 ;;  return_value    4   60[BANK0 ] unsigned long 
  6399 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  6400 ;;  cntr            2   69[BANK0 ] unsigned int 
  6401 ;;  address_with    2   26[BANK0 ] unsigned int 
  6402 ;;  entry_page      2   24[BANK0 ] unsigned int 
  6403 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  6404 ;;		 -> pageBuffer(1024), 
  6405 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;Total ram usage:       59 bytes
  6420 ;; Hardware stack levels used:    1
  6421 ;; Hardware stack levels required when called:    8
  6422 ;; This function calls:
  6423 ;;		__bootloader_check_address
  6424 ;;		_fat_get_file_information
  6425 ;;		_fat_read_from_file_fast
  6426 ;;		_internalFlash_addressWithinPage
  6427 ;;		_internalFlash_erasePage
  6428 ;;		_internalFlash_getBuffer
  6429 ;;		_internalFlash_pageFromAddress
  6430 ;;		_internalFlash_readPage
  6431 ;;		_internalFlash_writePage
  6432 ;;		_parseHexFileEntry
  6433 ;; This function is called by:
  6434 ;;		_bootloader_run
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text24
  6439  00085A                     __ptext24:
  6440                           	opt stack 0
  6441  00085A                     __bootloader_program:
  6442                           	opt stack 21
  6443                           
  6444                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;incstack = 0
  6448  00085A  0E00               	movlw	0
  6449  00085C  0100               	movlb	0	; () banked
  6450  00085E  6FFE               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  6451  000860  0E00               	movlw	0
  6452  000862  6FFD               	movwf	__bootloader_program@page_to_write& (0+255),b
  6453                           
  6454                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  6455  000864  0E00               	movlw	0
  6456  000866  6FF2               	movwf	__bootloader_program@return_value& (0+255),b
  6457  000868  0E00               	movlw	0
  6458  00086A  6FF3               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  6459  00086C  0E00               	movlw	0
  6460  00086E  6FF4               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  6461  000870  0E00               	movlw	0
  6462  000872  6FF5               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  6466  000874  5183               	movf	_hex_file_offset& (0+255),w,b
  6467  000876  1184               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6468  000878  1185               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6469  00087A  1186               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6470  00087C  A4D8               	btfss	status,2,c
  6471  00087E  D010               	goto	l2454
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  6475  000880  0ED2               	movlw	low __bootloader_program@root
  6476  000882  6E30               	movwf	fat_get_file_information@data,c
  6477  000884  0E00               	movlw	high __bootloader_program@root
  6478  000886  6E31               	movwf	fat_get_file_information@data+1,c
  6479  000888  51FF               	movf	_file_number& (0+255),w,b
  6480  00088A  ECD5  F02E         	call	_fat_get_file_information
  6481                           
  6482                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  6483  00088E  C0EC  F0B0         	movff	__bootloader_program@root+26,_fast_read_cluster
  6484  000892  C0ED  F0B1         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  6485                           
  6486                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  6487  000896  0E00               	movlw	0
  6488  000898  0100               	movlb	0	; () banked
  6489  00089A  6FAF               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6490  00089C  0E00               	movlw	0
  6491  00089E  6FAE               	movwf	_fast_read_cluster_number& (0+255),b
  6492  0008A0                     l2454:
  6493                           
  6494                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  6495                           
  6496                           ; BSR set to: 0
  6497                           
  6498                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  6499                           
  6500                           ; BSR set to: 0
  6501  0008A0  C083  F0C4         	movff	_hex_file_offset,??__bootloader_program
  6502  0008A4  C084  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  6503  0008A8  C085  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  6504  0008AC  C086  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  6505  0008B0  0100               	movlb	0	; () banked
  6506  0008B2  1FC4               	comf	??__bootloader_program& (0+255),f,b
  6507  0008B4  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  6508  0008B6  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  6509  0008B8  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  6510  0008BA  2BC4               	incf	??__bootloader_program& (0+255),f,b
  6511  0008BC  0E00               	movlw	0
  6512  0008BE  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  6513  0008C0  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  6514  0008C2  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  6515  0008C4  517F               	movf	_hex_file_size& (0+255),w,b
  6516  0008C6  25C4               	addwf	??__bootloader_program& (0+255),w,b
  6517  0008C8  6FC8               	movwf	(??__bootloader_program+4)& (0+255),b
  6518  0008CA  5180               	movf	(_hex_file_size+1)& (0+255),w,b
  6519  0008CC  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  6520  0008CE  6FC9               	movwf	(??__bootloader_program+5)& (0+255),b
  6521  0008D0  5181               	movf	(_hex_file_size+2)& (0+255),w,b
  6522  0008D2  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  6523  0008D4  6FCA               	movwf	(??__bootloader_program+6)& (0+255),b
  6524  0008D6  5182               	movf	(_hex_file_size+3)& (0+255),w,b
  6525  0008D8  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  6526  0008DA  6FCB               	movwf	(??__bootloader_program+7)& (0+255),b
  6527  0008DC  51CB               	movf	(??__bootloader_program+7)& (0+255),w,b
  6528  0008DE  11CA               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  6529  0008E0  11C9               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  6530  0008E2  E104               	bnz	u11470
  6531  0008E4  0E32               	movlw	50
  6532  0008E6  5DC8               	subwf	(??__bootloader_program+4)& (0+255),w,b
  6533  0008E8  A0D8               	btfss	status,0,c
  6534  0008EA  D01F               	goto	l2456
  6535  0008EC                     u11470:
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6539  0008EC  C083  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6540  0008F0  C084  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6541  0008F4  C085  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6542  0008F8  C086  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6543  0008FC  0E32               	movlw	50
  6544  0008FE  6E46               	movwf	fat_read_from_file_fast@length,c
  6545  000900  0E00               	movlw	0
  6546  000902  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6547  000904  0E00               	movlw	0
  6548  000906  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6549  000908  0E00               	movlw	0
  6550  00090A  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6551  00090C  0E80               	movlw	low _file_buffer
  6552  00090E  6E4A               	movwf	fat_read_from_file_fast@data,c
  6553  000910  0E02               	movlw	high _file_buffer
  6554  000912  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6555  000914  0EB0               	movlw	low _fast_read_cluster
  6556  000916  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6557  000918  0E00               	movlw	high _fast_read_cluster
  6558  00091A  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6559  00091C  0EAE               	movlw	low _fast_read_cluster_number
  6560  00091E  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6561  000920  0E00               	movlw	high _fast_read_cluster_number
  6562  000922  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6563  000924  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6564                           
  6565                           ;bootloader.c: 325: }
  6566  000928  D034               	goto	l2457
  6567  00092A                     l2456:
  6568                           
  6569                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6570  00092A  C083  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6571  00092E  C084  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6572  000932  C085  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6573  000936  C086  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6574  00093A  C083  F0C4         	movff	_hex_file_offset,??__bootloader_program
  6575  00093E  C084  F0C5         	movff	_hex_file_offset+1,??__bootloader_program+1
  6576  000942  C085  F0C6         	movff	_hex_file_offset+2,??__bootloader_program+2
  6577  000946  C086  F0C7         	movff	_hex_file_offset+3,??__bootloader_program+3
  6578  00094A  0100               	movlb	0	; () banked
  6579  00094C  1FC4               	comf	??__bootloader_program& (0+255),f,b
  6580  00094E  1FC5               	comf	(??__bootloader_program+1)& (0+255),f,b
  6581  000950  1FC6               	comf	(??__bootloader_program+2)& (0+255),f,b
  6582  000952  1FC7               	comf	(??__bootloader_program+3)& (0+255),f,b
  6583  000954  2BC4               	incf	??__bootloader_program& (0+255),f,b
  6584  000956  0E00               	movlw	0
  6585  000958  23C5               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  6586  00095A  23C6               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  6587  00095C  23C7               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  6588  00095E  517F               	movf	_hex_file_size& (0+255),w,b
  6589  000960  25C4               	addwf	??__bootloader_program& (0+255),w,b
  6590  000962  6E46               	movwf	fat_read_from_file_fast@length,c
  6591  000964  5180               	movf	(_hex_file_size+1)& (0+255),w,b
  6592  000966  21C5               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  6593  000968  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6594  00096A  5181               	movf	(_hex_file_size+2)& (0+255),w,b
  6595  00096C  21C6               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  6596  00096E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6597  000970  5182               	movf	(_hex_file_size+3)& (0+255),w,b
  6598  000972  21C7               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  6599  000974  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6600  000976  0E80               	movlw	low _file_buffer
  6601  000978  6E4A               	movwf	fat_read_from_file_fast@data,c
  6602  00097A  0E02               	movlw	high _file_buffer
  6603  00097C  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6604  00097E  0EB0               	movlw	low _fast_read_cluster
  6605  000980  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6606  000982  0E00               	movlw	high _fast_read_cluster
  6607  000984  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6608  000986  0EAE               	movlw	low _fast_read_cluster_number
  6609  000988  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6610  00098A  0E00               	movlw	high _fast_read_cluster_number
  6611  00098C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6612  00098E  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6613  000992                     l2457:
  6614                           
  6615                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6616  000992  0E80               	movlw	low _file_buffer
  6617  000994  6E0C               	movwf	parseHexFileEntry@data,c
  6618  000996  0E02               	movlw	high _file_buffer
  6619  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  6620  00099A  0E00               	movlw	0
  6621  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  6622  00099E  0E00               	movlw	0
  6623  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6624  0009A2  0E00               	movlw	0
  6625  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  6626  0009A6  0E00               	movlw	0
  6627  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  6628  0009AA  0EC8               	movlw	low _hex_file_entry
  6629  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6630  0009AE  0E01               	movlw	high _hex_file_entry
  6631  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6632  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6633  0009B6  C00C  F0F2         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  6634  0009BA  C00D  F0F3         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  6635  0009BE  C00E  F0F4         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  6636  0009C2  C00F  F0F5         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  6637                           
  6638                           ;bootloader.c: 336: ++hex_file_entries;
  6639  0009C6  0101               	movlb	1	; () banked
  6640  0009C8  4B63               	infsnz	_hex_file_entries& (0+255),f,b
  6641  0009CA  2B64               	incf	(_hex_file_entries+1)& (0+255),f,b
  6642                           
  6643                           ; BSR set to: 1
  6644                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  6645  0009CC  0EF1               	movlw	241
  6646  0009CE  0100               	movlb	0	; () banked
  6647  0009D0  5DF2               	subwf	__bootloader_program@return_value& (0+255),w,b
  6648  0009D2  0EFF               	movlw	255
  6649  0009D4  59F3               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  6650  0009D6  0EFF               	movlw	255
  6651  0009D8  59F4               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  6652  0009DA  0EFF               	movlw	255
  6653  0009DC  59F5               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  6654  0009DE  A0D8               	btfss	status,0,c
  6655  0009E0  D005               	goto	l2458
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  6659  0009E2  0E50               	movlw	80
  6660  0009E4  6F64               	movwf	(_os+4)& (0+255),b
  6661                           
  6662                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6663  0009E6  0E50               	movlw	80
  6664  0009E8  6F65               	movwf	(_os+5)& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;bootloader.c: 344: return;
  6668  0009EA  0012               	return	
  6669  0009EC                     l2458:
  6670                           
  6671                           ; BSR set to: 0
  6672                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  6673                           
  6674                           ; BSR set to: 0
  6675  0009EC  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  6676  0009EE  2783               	addwf	_hex_file_offset& (0+255),f,b
  6677  0009F0  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  6678  0009F2  2384               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  6679  0009F4  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  6680  0009F6  2385               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  6681  0009F8  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  6682  0009FA  2386               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  6686  0009FC  D0FC               	goto	l2461
  6687  0009FE                     
  6688                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  6689                           
  6690                           ; BSR set to: 0
  6691  0009FE  0101               	movlb	1	; () banked
  6692  000A00  51CD               	movf	(_hex_file_entry+5)& (0+255),w,b
  6693  000A02  6F39               	movwf	_extended_linear_address& (0+255),b
  6694  000A04  6B3A               	clrf	(_extended_linear_address+1)& (0+255),b
  6695  000A06  6B3B               	clrf	(_extended_linear_address+2)& (0+255),b
  6696  000A08  6B3C               	clrf	(_extended_linear_address+3)& (0+255),b
  6697                           
  6698                           ; BSR set to: 1
  6699                           ;bootloader.c: 359: extended_linear_address <<= 8;
  6700  000A0A  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6701  000A0E  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6702  000A12  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6703  000A16  6B39               	clrf	_extended_linear_address& (0+255),b
  6704                           
  6705                           ; BSR set to: 1
  6706                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  6707  000A18  51CE               	movf	(_hex_file_entry+6)& (0+255),w,b
  6708  000A1A  1339               	iorwf	_extended_linear_address& (0+255),f,b
  6709                           
  6710                           ; BSR set to: 1
  6711                           ;bootloader.c: 361: extended_linear_address <<= 8;
  6712  000A1C  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6713  000A20  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6714  000A24  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6715  000A28  6B39               	clrf	_extended_linear_address& (0+255),b
  6716                           
  6717                           ; BSR set to: 1
  6718                           ;bootloader.c: 362: extended_linear_address <<= 8;
  6719  000A2A  C13B  F13C         	movff	_extended_linear_address+2,_extended_linear_address+3
  6720  000A2E  C13A  F13B         	movff	_extended_linear_address+1,_extended_linear_address+2
  6721  000A32  C139  F13A         	movff	_extended_linear_address,_extended_linear_address+1
  6722  000A36  6B39               	clrf	_extended_linear_address& (0+255),b
  6723                           
  6724                           ; BSR set to: 1
  6725                           ;bootloader.c: 364: break;
  6726                           
  6727                           ;bootloader.c: 363: continue;
  6728  000A38  D733               	goto	l2454
  6729  000A3A                     l2465:
  6730                           
  6731                           ; BSR set to: 1
  6732                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  6733  000A3A  C095  F0FA         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  6734                           
  6735                           ; BSR set to: 1
  6736                           ;bootloader.c: 371: start_from_byte_next = 0;
  6737  000A3E  0E00               	movlw	0
  6738  000A40  0100               	movlb	0	; () banked
  6739  000A42  6F95               	movwf	_start_from_byte_next& (0+255),b
  6740                           
  6741                           ; BSR set to: 0
  6742                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  6743  000A44  0101               	movlb	1	; () banked
  6744  000A46  51CA               	movf	(_hex_file_entry+2)& (0+255),w,b
  6745  000A48  2539               	addwf	_extended_linear_address& (0+255),w,b
  6746  000A4A  0100               	movlb	0	; () banked
  6747  000A4C  6FF6               	movwf	__bootloader_program@address32& (0+255),b
  6748  000A4E  0101               	movlb	1	; () banked
  6749  000A50  51CB               	movf	(_hex_file_entry+3)& (0+255),w,b
  6750  000A52  213A               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6751  000A54  0100               	movlb	0	; () banked
  6752  000A56  6FF7               	movwf	(__bootloader_program@address32+1)& (0+255),b
  6753  000A58  0E00               	movlw	0
  6754  000A5A  0101               	movlb	1	; () banked
  6755  000A5C  213B               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6756  000A5E  0100               	movlb	0	; () banked
  6757  000A60  6FF8               	movwf	(__bootloader_program@address32+2)& (0+255),b
  6758  000A62  0E00               	movlw	0
  6759  000A64  0101               	movlb	1	; () banked
  6760  000A66  213C               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6761  000A68  0100               	movlb	0	; () banked
  6762  000A6A  6FF9               	movwf	(__bootloader_program@address32+3)& (0+255),b
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  6766  000A6C  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6767  000A6E  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6768  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  6769  000A72  0E00               	movlw	0
  6770  000A74  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6771  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  6772  000A78  0E00               	movlw	0
  6773  000A7A  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6774  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  6775  000A7E  0E00               	movlw	0
  6776  000A80  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6777  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  6778  000A84  EC06  F038         	call	_internalFlash_pageFromAddress	;wreg free
  6779  000A88  C001  F0CE         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  6780  000A8C  C002  F0CF         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  6781                           
  6782                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  6783  000A90  0100               	movlb	0	; () banked
  6784  000A92  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6785  000A94  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6786  000A96  6E01               	movwf	__bootloader_check_address@address,c
  6787  000A98  0E00               	movlw	0
  6788  000A9A  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6789  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  6790  000A9E  0E00               	movlw	0
  6791  000AA0  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6792  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  6793  000AA4  0E00               	movlw	0
  6794  000AA6  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6795  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  6796  000AAA  51FA               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  6797  000AAC  0800               	sublw	0
  6798  000AAE  0101               	movlb	1	; () banked
  6799  000AB0  25C8               	addwf	_hex_file_entry& (0+255),w,b
  6800  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  6801  000AB4  ECB2  F024         	call	__bootloader_check_address	;wreg free
  6802  000AB8  0900               	iorlw	0
  6803  000ABA  A4D8               	btfss	status,2,c
  6804  000ABC  D6F1               	goto	l2454
  6805                           
  6806                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  6807                           
  6808                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  6809  000ABE  0100               	movlb	0	; () banked
  6810  000AC0  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6811  000AC2  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6812  000AC4  A4D8               	btfss	status,2,c
  6813  000AC6  D010               	goto	l2467
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  6817  000AC8  C0CE  F0FD         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  6818  000ACC  C0CF  F0FE         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  6822  000AD0  C0FD  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  6823  000AD4  C0FE  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  6824  000AD8  EC9E  F034         	call	_internalFlash_readPage	;wreg free
  6825                           
  6826                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  6827  000ADC  ECD6  F038         	call	_internalFlash_getBuffer	;wreg free
  6828  000AE0  C001  F0CC         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  6829  000AE4  C002  F0CD         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  6830  000AE8                     l2467:
  6831                           
  6832                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  6833  000AE8  C0FA  F0FB         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  6834  000AEC  0100               	movlb	0	; () banked
  6835  000AEE  6BFC               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  6836  000AF0  D05D               	goto	l2468
  6837  000AF2                     
  6838                           ; BSR set to: 0
  6839                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  6840                           
  6841                           ; BSR set to: 0
  6842  000AF2  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  6843  000AF4  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6844  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  6845  000AF8  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  6846  000AFA  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6847  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  6848  000AFE  0E00               	movlw	0
  6849  000B00  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6850  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  6851  000B04  0E00               	movlw	0
  6852  000B06  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6853  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  6854  000B0A  EC06  F038         	call	_internalFlash_pageFromAddress	;wreg free
  6855  000B0E  0100               	movlb	0	; () banked
  6856  000B10  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6857  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  6858  000B14  E12A               	bnz	l14002
  6859  000B16  51FE               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6860  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  6861  000B1A  A4D8               	btfss	status,2,c
  6862  000B1C  D026               	goto	l2470
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  6866  000B1E  51FB               	movf	__bootloader_program@cntr& (0+255),w,b
  6867  000B20  25F6               	addwf	__bootloader_program@address32& (0+255),w,b
  6868  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  6869  000B24  51FC               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  6870  000B26  21F7               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  6871  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  6872  000B2A  0E00               	movlw	0
  6873  000B2C  21F8               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  6874  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  6875  000B30  0E00               	movlw	0
  6876  000B32  21F9               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  6877  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  6878  000B36  C0FD  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  6879  000B3A  C0FE  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  6880  000B3E  EC15  F031         	call	_internalFlash_addressWithinPage	;wreg free
  6881  000B42  C009  F0D0         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  6882  000B46  C00A  F0D1         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  6883                           
  6884                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  6885  000B4A  0ECD               	movlw	low (_hex_file_entry+5)
  6886  000B4C  0100               	movlb	0	; () banked
  6887  000B4E  25FB               	addwf	__bootloader_program@cntr& (0+255),w,b
  6888  000B50  6ED9               	movwf	fsr2l,c
  6889  000B52  0E01               	movlw	high (_hex_file_entry+5)
  6890  000B54  21FC               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  6891  000B56  6EDA               	movwf	fsr2h,c
  6892  000B58  51D0               	movf	__bootloader_program@address_within_page& (0+255),w,b
  6893  000B5A  25CC               	addwf	__bootloader_program@buffer& (0+255),w,b
  6894  000B5C  6EE1               	movwf	fsr1l,c
  6895  000B5E  51D1               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  6896  000B60  21CD               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  6897  000B62  6EE2               	movwf	fsr1h,c
  6898  000B64  CFDF FFE7          	movff	indf2,indf1
  6899                           
  6900                           ;bootloader.c: 401: }
  6901  000B68  D01E               	goto	l2471
  6902  000B6A                     l2470:
  6903  000B6A                     l14002:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  6907  000B6A  51F2               	movf	__bootloader_program@return_value& (0+255),w,b
  6908  000B6C  5F83               	subwf	_hex_file_offset& (0+255),f,b
  6909  000B6E  51F3               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  6910  000B70  5B84               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  6911  000B72  51F4               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  6912  000B74  5B85               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  6913  000B76  51F5               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  6914  000B78  5B86               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;bootloader.c: 406: --hex_file_entries;
  6918  000B7A  0101               	movlb	1	; () banked
  6919  000B7C  0763               	decf	_hex_file_entries& (0+255),f,b
  6920  000B7E  A0D8               	btfss	status,0,c
  6921  000B80  0764               	decf	(_hex_file_entries+1)& (0+255),f,b
  6922                           
  6923                           ; BSR set to: 1
  6924                           ;bootloader.c: 408: start_from_byte_next = cntr;
  6925  000B82  C0FB  F095         	movff	__bootloader_program@cntr,_start_from_byte_next
  6926                           
  6927                           ; BSR set to: 1
  6928                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  6929  000B86  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  6930  000B8A  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  6931  000B8E  EC7D  F02F         	call	_internalFlash_erasePage	;wreg free
  6932                           
  6933                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  6934  000B92  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  6935  000B96  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  6936  000B9A  EC17  F027         	call	_internalFlash_writePage	;wreg free
  6937                           
  6938                           ;bootloader.c: 412: ++flash_pages_written;
  6939  000B9E  0101               	movlb	1	; () banked
  6940  000BA0  4B5F               	infsnz	_flash_pages_written& (0+255),f,b
  6941  000BA2  2B60               	incf	(_flash_pages_written+1)& (0+255),f,b
  6942                           
  6943                           ; BSR set to: 1
  6944                           ;bootloader.c: 414: return;
  6945  000BA4  0012               	return	
  6946  000BA6                     l2471:
  6947                           
  6948                           ; BSR set to: 1
  6949  000BA6  0100               	movlb	0	; () banked
  6950  000BA8  4BFB               	infsnz	__bootloader_program@cntr& (0+255),f,b
  6951  000BAA  2BFC               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  6952  000BAC                     l2468:
  6953                           
  6954                           ; BSR set to: 0
  6955                           
  6956                           ; BSR set to: 0
  6957  000BAC  0101               	movlb	1	; () banked
  6958  000BAE  51C8               	movf	_hex_file_entry& (0+255),w,b
  6959  000BB0  0100               	movlb	0	; () banked
  6960  000BB2  5DFB               	subwf	__bootloader_program@cntr& (0+255),w,b
  6961  000BB4  0101               	movlb	1	; () banked
  6962  000BB6  51C9               	movf	(_hex_file_entry+1)& (0+255),w,b
  6963  000BB8  0100               	movlb	0	; () banked
  6964  000BBA  59FC               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  6965  000BBC  B0D8               	btfsc	status,0,c
  6966  000BBE  D670               	goto	l2454
  6967  000BC0  D798               	goto	l2469
  6968  000BC2                     
  6969                           ;bootloader.c: 422: if(page_to_write!=0)
  6970                           
  6971                           ; BSR set to: 0
  6972  000BC2  0100               	movlb	0	; () banked
  6973  000BC4  51FD               	movf	__bootloader_program@page_to_write& (0+255),w,b
  6974  000BC6  11FE               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  6975  000BC8  B4D8               	btfsc	status,2,c
  6976  000BCA  0012               	return	
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  6980  000BCC  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  6981  000BD0  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  6982  000BD4  EC7D  F02F         	call	_internalFlash_erasePage	;wreg free
  6983                           
  6984                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  6985  000BD8  C0FD  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  6986  000BDC  C0FE  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  6987  000BE0  EC17  F027         	call	_internalFlash_writePage	;wreg free
  6988                           
  6989                           ;bootloader.c: 427: ++flash_pages_written;
  6990  000BE4  0101               	movlb	1	; () banked
  6991  000BE6  4B5F               	infsnz	_flash_pages_written& (0+255),f,b
  6992  000BE8  2B60               	incf	(_flash_pages_written+1)& (0+255),f,b
  6993                           
  6994                           ; BSR set to: 1
  6995                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  6996  000BEA  0E70               	movlw	112
  6997  000BEC  0100               	movlb	0	; () banked
  6998  000BEE  6F64               	movwf	(_os+4)& (0+255),b
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7002  000BF0  0E70               	movlw	112
  7003  000BF2  6F65               	movwf	(_os+5)& (0+255),b
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;bootloader.c: 431: };bootloader.c: 433: return;
  7007                           
  7008                           ; BSR set to: 0
  7009  000BF4  0012               	return	
  7010  000BF6                     l2461:
  7011                           
  7012                           ; BSR set to: 0
  7013                           
  7014                           ; BSR set to: 0
  7015  000BF6  0101               	movlb	1	; () banked
  7016  000BF8  51CC               	movf	(_hex_file_entry+4)& (0+255),w,b
  7017                           
  7018                           ; Switch size 1, requested type "space"
  7019                           ; Number of cases is 3, Range of values is 0 to 4
  7020                           ; switch strategies available:
  7021                           ; Name         Instructions Cycles
  7022                           ; simple_byte           10     6 (average)
  7023                           ;	Chosen strategy is simple_byte
  7024  000BFA  0A00               	xorlw	0	; case 0
  7025  000BFC  B4D8               	btfsc	status,2,c
  7026  000BFE  D71D               	goto	l2465
  7027  000C00  0A01               	xorlw	1	; case 1
  7028  000C02  B4D8               	btfsc	status,2,c
  7029  000C04  D7DE               	goto	l2473
  7030  000C06  0A05               	xorlw	5	; case 4
  7031  000C08  B4D8               	btfsc	status,2,c
  7032  000C0A  D6F9               	goto	l2462
  7033                           
  7034                           ; BSR set to: 1
  7035                           
  7036                           ; BSR set to: 1
  7037  000C0C  D649               	goto	l2454
  7038  000C0E                     __end_of__bootloader_program:
  7039                           	opt stack 0
  7040                           tblptru	equ	0xFF8
  7041                           tblptrh	equ	0xFF7
  7042                           tblptrl	equ	0xFF6
  7043                           tablat	equ	0xFF5
  7044                           intcon	equ	0xFF2
  7045                           intcon2	equ	0xFF1
  7046                           intcon3	equ	0xFF0
  7047                           postinc0	equ	0xFEE
  7048                           wreg	equ	0xFE8
  7049                           indf1	equ	0xFE7
  7050                           postdec1	equ	0xFE5
  7051                           plusw1	equ	0xFE3
  7052                           fsr1h	equ	0xFE2
  7053                           fsr1l	equ	0xFE1
  7054                           indf2	equ	0xFDF
  7055                           postinc2	equ	0xFDE
  7056                           plusw2	equ	0xFDB
  7057                           fsr2h	equ	0xFDA
  7058                           fsr2l	equ	0xFD9
  7059                           status	equ	0xFD8
  7060                           
  7061 ;; *************** function _parseHexFileEntry *****************
  7062 ;; Defined at:
  7063 ;;		line 59 in file "hex.c"
  7064 ;; Parameters:    Size  Location     Type
  7065 ;;  data            2   11[COMRAM] PTR unsigned char 
  7066 ;;		 -> file_buffer(50), 
  7067 ;;  offset          4   13[COMRAM] unsigned long 
  7068 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7069 ;;		 -> hex_file_entry(23), 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  i               1   27[COMRAM] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  4   11[COMRAM] unsigned long 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;Total ram usage:       17 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    2
  7088 ;; This function calls:
  7089 ;;		_hexCharsToUint16
  7090 ;;		_hexCharsToUint8
  7091 ;; This function is called by:
  7092 ;;		__bootloader_verify_file
  7093 ;;		__bootloader_program
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text25
  7098  000020                     __ptext25:
  7099                           	opt stack 0
  7100  000020                     _parseHexFileEntry:
  7101                           	opt stack 26
  7102                           
  7103                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7104                           
  7105                           ;incstack = 0
  7106  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7107  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7108  000024  6ED9               	movwf	fsr2l,c
  7109  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7110  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7111  00002A  6EDA               	movwf	fsr2h,c
  7112  00002C  0E3A               	movlw	58
  7113  00002E  18DE               	xorwf	postinc2,w,c
  7114  000030  B4D8               	btfsc	status,2,c
  7115  000032  D005               	goto	l2317
  7116                           
  7117                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7118  000034  680C               	setf	?_parseHexFileEntry,c
  7119  000036  680D               	setf	?_parseHexFileEntry+1,c
  7120  000038  680E               	setf	?_parseHexFileEntry+2,c
  7121  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7122  00003C  0012               	return	
  7123  00003E                     l2317:
  7124                           
  7125                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7126  00003E  0E02               	movlw	2
  7127  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7128  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7129  000044  0E00               	movlw	0
  7130  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7131  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7132  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7133  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7134  00004E  6ED9               	movwf	fsr2l,c
  7135  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7136  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7137  000054  6EDA               	movwf	fsr2h,c
  7138  000056  50DF               	movf	indf2,w,c
  7139  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7140  00005A  0E01               	movlw	1
  7141  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7142  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7143  000060  0E00               	movlw	0
  7144  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7145  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7146  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7147  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7148  00006A  6ED9               	movwf	fsr2l,c
  7149  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7150  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7151  000070  6EDA               	movwf	fsr2h,c
  7152  000072  50DF               	movf	indf2,w,c
  7153  000074  ECF8  F037         	call	_hexCharsToUint8
  7154  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7155  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7156  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7157  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7158  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7159  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7160                           
  7161                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7162  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7163  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7164  000094  0E01               	movlw	1
  7165  000096  50DB               	movf	plusw2,w,c
  7166  000098  E104               	bnz	u10330
  7167  00009A  0E11               	movlw	17
  7168  00009C  5CDE               	subwf	postinc2,w,c
  7169  00009E  A0D8               	btfss	status,0,c
  7170  0000A0  D009               	goto	l2319
  7171  0000A2                     u10330:
  7172                           
  7173                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7174  0000A2  0EFC               	movlw	252
  7175  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7176  0000A6  0EFF               	movlw	255
  7177  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7178  0000AA  0EFF               	movlw	255
  7179  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7180  0000AE  0EFF               	movlw	255
  7181  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7182  0000B2  0012               	return	
  7183  0000B4                     l2319:
  7184                           
  7185                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7186  0000B4  0E04               	movlw	4
  7187  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7188  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7189  0000BA  0E00               	movlw	0
  7190  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7191  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7192  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7193  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7194  0000C4  6ED9               	movwf	fsr2l,c
  7195  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7196  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7197  0000CA  6EDA               	movwf	fsr2h,c
  7198  0000CC  50DF               	movf	indf2,w,c
  7199  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7200  0000D0  0E05               	movlw	5
  7201  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7202  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7203  0000D6  0E00               	movlw	0
  7204  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7205  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7206  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  7207  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  7208  0000E0  6ED9               	movwf	fsr2l,c
  7209  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  7210  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7211  0000E6  6EDA               	movwf	fsr2h,c
  7212  0000E8  50DF               	movf	indf2,w,c
  7213  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  7214  0000EC  0E06               	movlw	6
  7215  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  7216  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7217  0000F2  0E00               	movlw	0
  7218  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7219  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7220  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  7221  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  7222  0000FC  6ED9               	movwf	fsr2l,c
  7223  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  7224  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7225  000102  6EDA               	movwf	fsr2h,c
  7226  000104  50DF               	movf	indf2,w,c
  7227  000106  6E05               	movwf	hexCharsToUint16@c4,c
  7228  000108  0E03               	movlw	3
  7229  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  7230  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  7231  00010E  0E00               	movlw	0
  7232  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7233  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  7234  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  7235  000116  240C               	addwf	parseHexFileEntry@data,w,c
  7236  000118  6ED9               	movwf	fsr2l,c
  7237  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  7238  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7239  00011E  6EDA               	movwf	fsr2h,c
  7240  000120  50DF               	movf	indf2,w,c
  7241  000122  EC0E  F02F         	call	_hexCharsToUint16
  7242  000126  EE20 F002          	lfsr	2,2
  7243  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7244  00012C  26D9               	addwf	fsr2l,f,c
  7245  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7246  000130  22DA               	addwfc	fsr2h,f,c
  7247  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  7248  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  7249                           
  7250                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  7251  00013A  EE20 F004          	lfsr	2,4
  7252  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7253  000140  26D9               	addwf	fsr2l,f,c
  7254  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7255  000144  22DA               	addwfc	fsr2h,f,c
  7256  000146  0E08               	movlw	8
  7257  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  7258  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7259  00014C  0E00               	movlw	0
  7260  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7261  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7262  000152  5014               	movf	??_parseHexFileEntry,w,c
  7263  000154  240C               	addwf	parseHexFileEntry@data,w,c
  7264  000156  6EE1               	movwf	fsr1l,c
  7265  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  7266  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7267  00015C  6EE2               	movwf	fsr1h,c
  7268  00015E  50E7               	movf	indf1,w,c
  7269  000160  6E03               	movwf	hexCharsToUint8@c2,c
  7270  000162  0E07               	movlw	7
  7271  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  7272  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7273  000168  0E00               	movlw	0
  7274  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7275  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7276  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  7277  000170  240C               	addwf	parseHexFileEntry@data,w,c
  7278  000172  6EE1               	movwf	fsr1l,c
  7279  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  7280  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7281  000178  6EE2               	movwf	fsr1h,c
  7282  00017A  50E7               	movf	indf1,w,c
  7283  00017C  ECF8  F037         	call	_hexCharsToUint8
  7284  000180  6EDF               	movwf	indf2,c
  7285                           
  7286                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  7287  000182  0E00               	movlw	0
  7288  000184  6E1C               	movwf	parseHexFileEntry@i,c
  7289  000186  D03D               	goto	l2320
  7290  000188                     
  7291                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  7292  000188  501C               	movf	parseHexFileEntry@i,w,c
  7293  00018A  0D01               	mullw	1
  7294  00018C  0E05               	movlw	5
  7295  00018E  26F3               	addwf	prodl,f,c
  7296  000190  0E00               	movlw	0
  7297  000192  22F4               	addwfc	prodh,f,c
  7298  000194  50F3               	movf	prodl,w,c
  7299  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  7300  000198  6ED9               	movwf	fsr2l,c
  7301  00019A  50F4               	movf	prodh,w,c
  7302  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  7303  00019E  6EDA               	movwf	fsr2h,c
  7304  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  7305  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7306  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7307  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  7308  0001AA  0E00               	movlw	0
  7309  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7310  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  7311  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  7312  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  7313  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7314  0001B6  0E0A               	movlw	10
  7315  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  7316  0001BA  0E00               	movlw	0
  7317  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7318  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  7319  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  7320  0001C2  6EE1               	movwf	fsr1l,c
  7321  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  7322  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7323  0001C8  6EE2               	movwf	fsr1h,c
  7324  0001CA  50E7               	movf	indf1,w,c
  7325  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  7326  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  7327  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  7328  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7329  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  7330  0001D8  0E00               	movlw	0
  7331  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7332  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  7333  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  7334  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  7335  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7336  0001E4  0E09               	movlw	9
  7337  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  7338  0001E8  0E00               	movlw	0
  7339  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7340  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  7341  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  7342  0001F0  6EE1               	movwf	fsr1l,c
  7343  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  7344  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7345  0001F6  6EE2               	movwf	fsr1h,c
  7346  0001F8  50E7               	movf	indf1,w,c
  7347  0001FA  ECF8  F037         	call	_hexCharsToUint8
  7348  0001FE  6EDF               	movwf	indf2,c
  7349  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  7350  000202                     l2320:
  7351  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7352  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7353  00020A  501C               	movf	parseHexFileEntry@i,w,c
  7354  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7355  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7356  000210  50DE               	movf	postinc2,w,c
  7357  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  7358  000214  50DE               	movf	postinc2,w,c
  7359  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  7360  000218  A0D8               	btfss	status,0,c
  7361  00021A  D7B6               	goto	l2321
  7362                           
  7363                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  7364  00021C  EE20 F015          	lfsr	2,21
  7365  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7366  000222  26D9               	addwf	fsr2l,f,c
  7367  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7368  000226  22DA               	addwfc	fsr2h,f,c
  7369  000228  501C               	movf	parseHexFileEntry@i,w,c
  7370  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7371  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7372  000230  2614               	addwf	??_parseHexFileEntry,f,c
  7373  000232  0E00               	movlw	0
  7374  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7375  000236  500E               	movf	parseHexFileEntry@offset,w,c
  7376  000238  2614               	addwf	??_parseHexFileEntry,f,c
  7377  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  7378  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7379  00023E  0E0A               	movlw	10
  7380  000240  2614               	addwf	??_parseHexFileEntry,f,c
  7381  000242  0E00               	movlw	0
  7382  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7383  000246  5014               	movf	??_parseHexFileEntry,w,c
  7384  000248  240C               	addwf	parseHexFileEntry@data,w,c
  7385  00024A  6EE1               	movwf	fsr1l,c
  7386  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  7387  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7388  000250  6EE2               	movwf	fsr1h,c
  7389  000252  50E7               	movf	indf1,w,c
  7390  000254  6E03               	movwf	hexCharsToUint8@c2,c
  7391  000256  501C               	movf	parseHexFileEntry@i,w,c
  7392  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  7393  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7394  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  7395  000260  0E00               	movlw	0
  7396  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7397  000264  500E               	movf	parseHexFileEntry@offset,w,c
  7398  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  7399  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  7400  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7401  00026C  0E09               	movlw	9
  7402  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  7403  000270  0E00               	movlw	0
  7404  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  7405  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  7406  000276  240C               	addwf	parseHexFileEntry@data,w,c
  7407  000278  6EE1               	movwf	fsr1l,c
  7408  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  7409  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7410  00027E  6EE2               	movwf	fsr1h,c
  7411  000280  50E7               	movf	indf1,w,c
  7412  000282  ECF8  F037         	call	_hexCharsToUint8
  7413  000286  6EDF               	movwf	indf2,c
  7414                           
  7415                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  7416  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7417  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7418  000290  EE10 F016          	lfsr	1,22
  7419  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7420  000296  26E1               	addwf	fsr1l,f,c
  7421  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7422  00029A  22E2               	addwfc	fsr1h,f,c
  7423  00029C  CFDF FFE7          	movff	indf2,indf1
  7424                           
  7425                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  7426  0002A0  EE20 F002          	lfsr	2,2
  7427  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7428  0002A6  26D9               	addwf	fsr2l,f,c
  7429  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7430  0002AA  22DA               	addwfc	fsr2h,f,c
  7431  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  7432  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  7433  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  7434  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  7435  0002BA  EE20 F016          	lfsr	2,22
  7436  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7437  0002C0  26D9               	addwf	fsr2l,f,c
  7438  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7439  0002C4  22DA               	addwfc	fsr2h,f,c
  7440  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  7441  0002C8  26DF               	addwf	indf2,f,c
  7442                           
  7443                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  7444  0002CA  EE20 F002          	lfsr	2,2
  7445  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7446  0002D0  26D9               	addwf	fsr2l,f,c
  7447  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7448  0002D4  22DA               	addwfc	fsr2h,f,c
  7449  0002D6  50DF               	movf	indf2,w,c
  7450  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7451  0002DA  EE20 F016          	lfsr	2,22
  7452  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7453  0002E0  26D9               	addwf	fsr2l,f,c
  7454  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7455  0002E4  22DA               	addwfc	fsr2h,f,c
  7456  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  7457  0002E8  26DF               	addwf	indf2,f,c
  7458                           
  7459                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  7460  0002EA  EE20 F004          	lfsr	2,4
  7461  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7462  0002F0  26D9               	addwf	fsr2l,f,c
  7463  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7464  0002F4  22DA               	addwfc	fsr2h,f,c
  7465  0002F6  50DF               	movf	indf2,w,c
  7466  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7467  0002FA  EE20 F016          	lfsr	2,22
  7468  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7469  000300  26D9               	addwf	fsr2l,f,c
  7470  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7471  000304  22DA               	addwfc	fsr2h,f,c
  7472  000306  5014               	movf	??_parseHexFileEntry,w,c
  7473  000308  26DF               	addwf	indf2,f,c
  7474                           
  7475                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  7476  00030A  0E00               	movlw	0
  7477  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  7478  00030E  D017               	goto	l2323
  7479  000310                     
  7480                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  7481  000310  501C               	movf	parseHexFileEntry@i,w,c
  7482  000312  0D01               	mullw	1
  7483  000314  0E05               	movlw	5
  7484  000316  26F3               	addwf	prodl,f,c
  7485  000318  0E00               	movlw	0
  7486  00031A  22F4               	addwfc	prodh,f,c
  7487  00031C  50F3               	movf	prodl,w,c
  7488  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  7489  000320  6ED9               	movwf	fsr2l,c
  7490  000322  50F4               	movf	prodh,w,c
  7491  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  7492  000326  6EDA               	movwf	fsr2h,c
  7493  000328  50DF               	movf	indf2,w,c
  7494  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7495  00032C  EE20 F016          	lfsr	2,22
  7496  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7497  000332  26D9               	addwf	fsr2l,f,c
  7498  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7499  000336  22DA               	addwfc	fsr2h,f,c
  7500  000338  5014               	movf	??_parseHexFileEntry,w,c
  7501  00033A  26DF               	addwf	indf2,f,c
  7502  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  7503  00033E                     l2323:
  7504  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7505  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7506  000346  501C               	movf	parseHexFileEntry@i,w,c
  7507  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7508  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  7509  00034C  50DE               	movf	postinc2,w,c
  7510  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  7511  000350  50DE               	movf	postinc2,w,c
  7512  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  7513  000354  A0D8               	btfss	status,0,c
  7514  000356  D7DC               	goto	l2324
  7515                           
  7516                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  7517  000358  EE20 F015          	lfsr	2,21
  7518  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7519  00035E  26D9               	addwf	fsr2l,f,c
  7520  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7521  000362  22DA               	addwfc	fsr2h,f,c
  7522  000364  50DF               	movf	indf2,w,c
  7523  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7524  000368  EE20 F016          	lfsr	2,22
  7525  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7526  00036E  26D9               	addwf	fsr2l,f,c
  7527  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7528  000372  22DA               	addwfc	fsr2h,f,c
  7529  000374  5014               	movf	??_parseHexFileEntry,w,c
  7530  000376  26DF               	addwf	indf2,f,c
  7531                           
  7532                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  7533  000378  EE20 F016          	lfsr	2,22
  7534  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7535  00037E  26D9               	addwf	fsr2l,f,c
  7536  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7537  000382  22DA               	addwfc	fsr2h,f,c
  7538  000384  50DF               	movf	indf2,w,c
  7539  000386  B4D8               	btfsc	status,2,c
  7540  000388  D009               	goto	l2326
  7541                           
  7542                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  7543  00038A  0EFE               	movlw	254
  7544  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  7545  00038E  0EFF               	movlw	255
  7546  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  7547  000392  0EFF               	movlw	255
  7548  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  7549  000396  0EFF               	movlw	255
  7550  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  7551  00039A  0012               	return	
  7552  00039C                     l2326:
  7553                           
  7554                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  7555  00039C  EE20 F004          	lfsr	2,4
  7556  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7557  0003A2  26D9               	addwf	fsr2l,f,c
  7558  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7559  0003A6  22DA               	addwfc	fsr2h,f,c
  7560  0003A8  04DE               	decf	postinc2,w,c
  7561  0003AA  A4D8               	btfss	status,2,c
  7562  0003AC  D009               	goto	l2327
  7563                           
  7564                           ;hex.c: 110: {;hex.c: 112: return 0;
  7565  0003AE  0E00               	movlw	0
  7566  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  7567  0003B2  0E00               	movlw	0
  7568  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  7569  0003B6  0E00               	movlw	0
  7570  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  7571  0003BA  0E00               	movlw	0
  7572  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  7573                           
  7574                           ;hex.c: 113: }
  7575  0003BE  0012               	return	
  7576  0003C0                     l2327:
  7577                           
  7578                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  7579  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  7580  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  7581  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  7582  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  7583  0003CA  0E00               	movlw	0
  7584  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  7585  0003CE  0E0B               	movlw	11
  7586  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  7587  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7588  0003D4  0E00               	movlw	0
  7589  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  7590  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7591  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  7592  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  7593  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  7594  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  7595  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7596  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  7597  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  7598  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  7599  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7600  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  7601  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7602  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  7603  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7604                           
  7605                           ;hex.c: 117: if (data[++offset] == ':')
  7606  0003F4  0E01               	movlw	1
  7607  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  7608  0003F8  0E00               	movlw	0
  7609  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7610  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7611  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7612  000400  500E               	movf	parseHexFileEntry@offset,w,c
  7613  000402  240C               	addwf	parseHexFileEntry@data,w,c
  7614  000404  6ED9               	movwf	fsr2l,c
  7615  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  7616  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7617  00040A  6EDA               	movwf	fsr2h,c
  7618  00040C  0E3A               	movlw	58
  7619  00040E  18DE               	xorwf	postinc2,w,c
  7620  000410  A4D8               	btfss	status,2,c
  7621  000412  D009               	goto	l2329
  7622                           
  7623                           ;hex.c: 118: {;hex.c: 119: return offset;
  7624  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7625  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7626  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7627  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7628                           
  7629                           ;hex.c: 120: }
  7630  000424  0012               	return	
  7631  000426                     l2329:
  7632                           
  7633                           ;hex.c: 121: else if (data[++offset] == ':')
  7634  000426  0E01               	movlw	1
  7635  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  7636  00042A  0E00               	movlw	0
  7637  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7638  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7639  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7640  000432  500E               	movf	parseHexFileEntry@offset,w,c
  7641  000434  240C               	addwf	parseHexFileEntry@data,w,c
  7642  000436  6ED9               	movwf	fsr2l,c
  7643  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  7644  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7645  00043C  6EDA               	movwf	fsr2h,c
  7646  00043E  0E3A               	movlw	58
  7647  000440  18DE               	xorwf	postinc2,w,c
  7648  000442  A4D8               	btfss	status,2,c
  7649  000444  D009               	goto	l2331
  7650                           
  7651                           ;hex.c: 122: {;hex.c: 123: return offset;
  7652  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7653  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7654  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7655  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7656                           
  7657                           ;hex.c: 124: }
  7658  000456  0012               	return	
  7659  000458                     l2331:
  7660                           
  7661                           ;hex.c: 125: else if (data[++offset] == ':')
  7662  000458  0E01               	movlw	1
  7663  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  7664  00045C  0E00               	movlw	0
  7665  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  7666  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  7667  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  7668  000464  500E               	movf	parseHexFileEntry@offset,w,c
  7669  000466  240C               	addwf	parseHexFileEntry@data,w,c
  7670  000468  6ED9               	movwf	fsr2l,c
  7671  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  7672  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7673  00046E  6EDA               	movwf	fsr2h,c
  7674  000470  0E3A               	movlw	58
  7675  000472  18DE               	xorwf	postinc2,w,c
  7676  000474  A4D8               	btfss	status,2,c
  7677  000476  D009               	goto	l2333
  7678                           
  7679                           ;hex.c: 126: {;hex.c: 127: return offset;
  7680  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  7681  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  7682  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  7683  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  7684                           
  7685                           ;hex.c: 128: }
  7686  000488  0012               	return	
  7687  00048A                     l2333:
  7688                           
  7689                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  7690  00048A  0EFD               	movlw	253
  7691  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  7692  00048E  0EFF               	movlw	255
  7693  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  7694  000492  0EFF               	movlw	255
  7695  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  7696  000496  0EFF               	movlw	255
  7697  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  7698  00049A  0012               	return	
  7699  00049C                     __end_of_parseHexFileEntry:
  7700                           	opt stack 0
  7701                           tblptru	equ	0xFF8
  7702                           tblptrh	equ	0xFF7
  7703                           tblptrl	equ	0xFF6
  7704                           tablat	equ	0xFF5
  7705                           prodh	equ	0xFF4
  7706                           prodl	equ	0xFF3
  7707                           intcon	equ	0xFF2
  7708                           intcon2	equ	0xFF1
  7709                           intcon3	equ	0xFF0
  7710                           postinc0	equ	0xFEE
  7711                           wreg	equ	0xFE8
  7712                           indf1	equ	0xFE7
  7713                           postdec1	equ	0xFE5
  7714                           plusw1	equ	0xFE3
  7715                           fsr1h	equ	0xFE2
  7716                           fsr1l	equ	0xFE1
  7717                           indf2	equ	0xFDF
  7718                           postinc2	equ	0xFDE
  7719                           postdec2	equ	0xFDD
  7720                           plusw2	equ	0xFDB
  7721                           fsr2h	equ	0xFDA
  7722                           fsr2l	equ	0xFD9
  7723                           status	equ	0xFD8
  7724                           
  7725 ;; *************** function _hexCharsToUint8 *****************
  7726 ;; Defined at:
  7727 ;;		line 42 in file "hex.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  c1              1    wreg     unsigned char 
  7730 ;;  c2              1    2[COMRAM] unsigned char 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  c1              1    4[COMRAM] unsigned char 
  7733 ;;  retVal          1    5[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      unsigned char 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7743 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7747 ;;Total ram usage:        4 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    1
  7750 ;; This function calls:
  7751 ;;		_hexCharToUint8
  7752 ;; This function is called by:
  7753 ;;		_parseHexFileEntry
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text26
  7758  006FF0                     __ptext26:
  7759                           	opt stack 0
  7760  006FF0                     _hexCharsToUint8:
  7761                           	opt stack 26
  7762                           
  7763                           ;incstack = 0
  7764                           ;hexCharsToUint8@c1 stored from wreg
  7765  006FF0  6E05               	movwf	hexCharsToUint8@c1,c
  7766                           
  7767                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  7768  006FF2  5005               	movf	hexCharsToUint8@c1,w,c
  7769  006FF4  ECAE  F036         	call	_hexCharToUint8
  7770  006FF8  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  7771  006FFA  3804               	swapf	??_hexCharsToUint8,w,c
  7772  006FFC  0BF0               	andlw	240
  7773  006FFE  6E06               	movwf	hexCharsToUint8@retVal,c
  7774                           
  7775                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  7776  007000  5003               	movf	hexCharsToUint8@c2,w,c
  7777  007002  ECAE  F036         	call	_hexCharToUint8
  7778  007006  1206               	iorwf	hexCharsToUint8@retVal,f,c
  7779                           
  7780                           ;hex.c: 46: return retVal;
  7781  007008  5006               	movf	hexCharsToUint8@retVal,w,c
  7782  00700A  0012               	return	
  7783  00700C                     __end_of_hexCharsToUint8:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           prodh	equ	0xFF4
  7790                           prodl	equ	0xFF3
  7791                           intcon	equ	0xFF2
  7792                           intcon2	equ	0xFF1
  7793                           intcon3	equ	0xFF0
  7794                           postinc0	equ	0xFEE
  7795                           wreg	equ	0xFE8
  7796                           indf1	equ	0xFE7
  7797                           postdec1	equ	0xFE5
  7798                           plusw1	equ	0xFE3
  7799                           fsr1h	equ	0xFE2
  7800                           fsr1l	equ	0xFE1
  7801                           indf2	equ	0xFDF
  7802                           postinc2	equ	0xFDE
  7803                           postdec2	equ	0xFDD
  7804                           plusw2	equ	0xFDB
  7805                           fsr2h	equ	0xFDA
  7806                           fsr2l	equ	0xFD9
  7807                           status	equ	0xFD8
  7808                           
  7809 ;; *************** function _hexCharsToUint16 *****************
  7810 ;; Defined at:
  7811 ;;		line 49 in file "hex.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  c1              1    wreg     unsigned char 
  7814 ;;  c2              1    2[COMRAM] unsigned char 
  7815 ;;  c3              1    3[COMRAM] unsigned char 
  7816 ;;  c4              1    4[COMRAM] unsigned char 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  c1              1    8[COMRAM] unsigned char 
  7819 ;;  retVal          2    9[COMRAM] unsigned int 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  2    2[COMRAM] unsigned int 
  7822 ;; Registers used:
  7823 ;;		wreg, status,2, status,0, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7829 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;Total ram usage:        9 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:    1
  7836 ;; This function calls:
  7837 ;;		_hexCharToUint8
  7838 ;; This function is called by:
  7839 ;;		_parseHexFileEntry
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text27
  7844  005E1C                     __ptext27:
  7845                           	opt stack 0
  7846  005E1C                     _hexCharsToUint16:
  7847                           	opt stack 26
  7848                           
  7849                           ;incstack = 0
  7850                           ;hexCharsToUint16@c1 stored from wreg
  7851  005E1C  6E09               	movwf	hexCharsToUint16@c1,c
  7852                           
  7853                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  7854  005E1E  5009               	movf	hexCharsToUint16@c1,w,c
  7855  005E20  ECAE  F036         	call	_hexCharToUint8
  7856  005E24  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7857  005E26  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7858  005E28  0E0C               	movlw	12
  7859  005E2A                     u9775:
  7860  005E2A  90D8               	bcf	status,0,c
  7861  005E2C  3606               	rlcf	??_hexCharsToUint16,f,c
  7862  005E2E  3607               	rlcf	??_hexCharsToUint16+1,f,c
  7863  005E30  2EE8               	decfsz	wreg,f,c
  7864  005E32  D7FB               	goto	u9775
  7865  005E34  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  7866  005E38  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  7867                           
  7868                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  7869  005E3C  5003               	movf	hexCharsToUint16@c2,w,c
  7870  005E3E  ECAE  F036         	call	_hexCharToUint8
  7871  005E42  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7872  005E44  5006               	movf	??_hexCharsToUint16,w,c
  7873  005E46  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  7874  005E48  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7875  005E4A  5007               	movf	??_hexCharsToUint16+1,w,c
  7876  005E4C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7877  005E4E  5008               	movf	??_hexCharsToUint16+2,w,c
  7878  005E50  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  7879                           
  7880                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  7881  005E52  5004               	movf	hexCharsToUint16@c3,w,c
  7882  005E54  ECAE  F036         	call	_hexCharToUint8
  7883  005E58  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7884  005E5A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  7885  005E5C  3A06               	swapf	??_hexCharsToUint16,f,c
  7886  005E5E  3A07               	swapf	??_hexCharsToUint16+1,f,c
  7887  005E60  0EF0               	movlw	240
  7888  005E62  1607               	andwf	??_hexCharsToUint16+1,f,c
  7889  005E64  5006               	movf	??_hexCharsToUint16,w,c
  7890  005E66  0B0F               	andlw	15
  7891  005E68  1207               	iorwf	??_hexCharsToUint16+1,f,c
  7892  005E6A  0EF0               	movlw	240
  7893  005E6C  1606               	andwf	??_hexCharsToUint16,f,c
  7894  005E6E  5006               	movf	??_hexCharsToUint16,w,c
  7895  005E70  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7896  005E72  5007               	movf	??_hexCharsToUint16+1,w,c
  7897  005E74  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  7898                           
  7899                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  7900  005E76  5005               	movf	hexCharsToUint16@c4,w,c
  7901  005E78  ECAE  F036         	call	_hexCharToUint8
  7902  005E7C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  7903  005E7E  5006               	movf	??_hexCharsToUint16,w,c
  7904  005E80  120A               	iorwf	hexCharsToUint16@retVal,f,c
  7905                           
  7906                           ;hex.c: 55: return retVal;
  7907  005E82  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  7908  005E86  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  7909  005E8A  0012               	return	
  7910  005E8C                     __end_of_hexCharsToUint16:
  7911                           	opt stack 0
  7912                           tblptru	equ	0xFF8
  7913                           tblptrh	equ	0xFF7
  7914                           tblptrl	equ	0xFF6
  7915                           tablat	equ	0xFF5
  7916                           prodh	equ	0xFF4
  7917                           prodl	equ	0xFF3
  7918                           intcon	equ	0xFF2
  7919                           intcon2	equ	0xFF1
  7920                           intcon3	equ	0xFF0
  7921                           postinc0	equ	0xFEE
  7922                           wreg	equ	0xFE8
  7923                           indf1	equ	0xFE7
  7924                           postdec1	equ	0xFE5
  7925                           plusw1	equ	0xFE3
  7926                           fsr1h	equ	0xFE2
  7927                           fsr1l	equ	0xFE1
  7928                           indf2	equ	0xFDF
  7929                           postinc2	equ	0xFDE
  7930                           postdec2	equ	0xFDD
  7931                           plusw2	equ	0xFDB
  7932                           fsr2h	equ	0xFDA
  7933                           fsr2l	equ	0xFD9
  7934                           status	equ	0xFD8
  7935                           
  7936 ;; *************** function _hexCharToUint8 *****************
  7937 ;; Defined at:
  7938 ;;		line 11 in file "hex.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  c               1    wreg     unsigned char 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  c               1    0[COMRAM] unsigned char 
  7943 ;;  ascii           1    1[COMRAM] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  1    wreg      unsigned char 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7957 ;;Total ram usage:        2 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_hexCharsToUint8
  7963 ;;		_hexCharsToUint16
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           	psect	text28
  7968  006D5C                     __ptext28:
  7969                           	opt stack 0
  7970  006D5C                     _hexCharToUint8:
  7971                           	opt stack 26
  7972                           
  7973                           ;incstack = 0
  7974                           ;hexCharToUint8@c stored from wreg
  7975  006D5C  6E01               	movwf	hexCharToUint8@c,c
  7976                           
  7977                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  7978  006D5E  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  7979                           
  7980                           ;hex.c: 16: if (ascii >= 97)
  7981  006D62  0E60               	movlw	96
  7982  006D64  6402               	cpfsgt	hexCharToUint8@ascii,c
  7983  006D66  D002               	goto	l2302
  7984                           
  7985                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  7986  006D68  0E57               	movlw	87
  7987  006D6A  D006               	goto	L3
  7988  006D6C                     l2302:
  7989                           
  7990                           ;hex.c: 21: else if (ascii >= 65)
  7991  006D6C  0E40               	movlw	64
  7992  006D6E  6402               	cpfsgt	hexCharToUint8@ascii,c
  7993  006D70  D002               	goto	l2304
  7994                           
  7995                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  7996  006D72  0E37               	movlw	55
  7997  006D74  D001               	goto	L3
  7998  006D76                     l2304:
  7999                           
  8000                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8001  006D76  0E30               	movlw	48
  8002  006D78                     L3:
  8003  006D78  5E02               	subwf	hexCharToUint8@ascii,f,c
  8004                           
  8005                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8006  006D7A  0E0F               	movlw	15
  8007  006D7C  6402               	cpfsgt	hexCharToUint8@ascii,c
  8008  006D7E  D002               	goto	l2306
  8009                           
  8010                           ;hex.c: 32: {;hex.c: 33: return 0;
  8011  006D80  0E00               	movlw	0
  8012                           
  8013                           ;hex.c: 34: }
  8014  006D82  0012               	return	
  8015  006D84                     l2306:
  8016                           
  8017                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8018  006D84  5002               	movf	hexCharToUint8@ascii,w,c
  8019  006D86  0012               	return	
  8020  006D88                     __end_of_hexCharToUint8:
  8021                           	opt stack 0
  8022                           tblptru	equ	0xFF8
  8023                           tblptrh	equ	0xFF7
  8024                           tblptrl	equ	0xFF6
  8025                           tablat	equ	0xFF5
  8026                           prodh	equ	0xFF4
  8027                           prodl	equ	0xFF3
  8028                           intcon	equ	0xFF2
  8029                           intcon2	equ	0xFF1
  8030                           intcon3	equ	0xFF0
  8031                           postinc0	equ	0xFEE
  8032                           wreg	equ	0xFE8
  8033                           indf1	equ	0xFE7
  8034                           postdec1	equ	0xFE5
  8035                           plusw1	equ	0xFE3
  8036                           fsr1h	equ	0xFE2
  8037                           fsr1l	equ	0xFE1
  8038                           indf2	equ	0xFDF
  8039                           postinc2	equ	0xFDE
  8040                           postdec2	equ	0xFDD
  8041                           plusw2	equ	0xFDB
  8042                           fsr2h	equ	0xFDA
  8043                           fsr2l	equ	0xFD9
  8044                           status	equ	0xFD8
  8045                           
  8046 ;; *************** function _internalFlash_writePage *****************
  8047 ;; Defined at:
  8048 ;;		line 65 in file "internal_flash.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  page            2    8[COMRAM] unsigned int 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  address         4   18[COMRAM] unsigned long 
  8053 ;;  cntr            2   14[COMRAM] unsigned int 
  8054 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  8055 ;;  block_cntr      1   16[COMRAM] unsigned char 
  8056 ;;  i               1    0        unsigned char 
  8057 ;;  gie             1    0        unsigned char 
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;Total ram usage:       14 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    1
  8074 ;; This function calls:
  8075 ;;		__internalFlash_unlockAndActivate
  8076 ;;		_internalFlash_addressFromPage
  8077 ;; This function is called by:
  8078 ;;		__bootloader_program
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text29
  8083  004E2E                     __ptext29:
  8084                           	opt stack 0
  8085  004E2E                     _internalFlash_writePage:
  8086                           	opt stack 27
  8087                           
  8088                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  8089                           
  8090                           ;incstack = 0
  8091  004E2E  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  8092  004E32  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  8093  004E36  EC81  F036         	call	_internalFlash_addressFromPage	;wreg free
  8094  004E3A  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  8095  004E3E  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  8096  004E42  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  8097  004E46  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  8098                           
  8099                           ;internal_flash.c: 76: TBLPTR = address;
  8100  004E4A  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8101  004E4E  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8102  004E52  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8103                           
  8104                           ;internal_flash.c: 79: if((address<0x9000) || (address+1023>=0x1FFFF))
  8105  004E56  5016               	movf	internalFlash_writePage@address+3,w,c
  8106  004E58  1015               	iorwf	internalFlash_writePage@address+2,w,c
  8107  004E5A  E104               	bnz	u10510
  8108  004E5C  0E90               	movlw	144
  8109  004E5E  5C14               	subwf	internalFlash_writePage@address+1,w,c
  8110  004E60  A0D8               	btfss	status,0,c
  8111  004E62  0012               	return	
  8112  004E64                     u10510:
  8113  004E64  0EFF               	movlw	255
  8114  004E66  2413               	addwf	internalFlash_writePage@address,w,c
  8115  004E68  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  8116  004E6A  0E03               	movlw	3
  8117  004E6C  2014               	addwfc	internalFlash_writePage@address+1,w,c
  8118  004E6E  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  8119  004E70  0E00               	movlw	0
  8120  004E72  2015               	addwfc	internalFlash_writePage@address+2,w,c
  8121  004E74  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  8122  004E76  0E00               	movlw	0
  8123  004E78  2016               	addwfc	internalFlash_writePage@address+3,w,c
  8124  004E7A  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  8125  004E7C  500E               	movf	??_internalFlash_writePage+3,w,c
  8126  004E7E  E132               	bnz	l2559
  8127  004E80  280B               	incf	??_internalFlash_writePage,w,c
  8128  004E82  0EFF               	movlw	255
  8129  004E84  580C               	subwfb	??_internalFlash_writePage+1,w,c
  8130  004E86  0E01               	movlw	1
  8131  004E88  580D               	subwfb	??_internalFlash_writePage+2,w,c
  8132  004E8A  B0D8               	btfsc	status,0,c
  8133  004E8C  0012               	return	
  8134                           
  8135                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  8136                           
  8137                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  8138  004E8E  0E00               	movlw	0
  8139  004E90  6E10               	movwf	internalFlash_writePage@cntr+1,c
  8140  004E92  0E00               	movlw	0
  8141  004E94  6E0F               	movwf	internalFlash_writePage@cntr,c
  8142                           
  8143                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8144  004E96  0E00               	movlw	0
  8145  004E98  6E11               	movwf	internalFlash_writePage@block_cntr,c
  8146  004E9A                     l13102:
  8147  004E9A  0E0F               	movlw	15
  8148  004E9C  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  8149  004E9E  D001               	goto	l2560
  8150  004EA0  0012               	return	
  8151  004EA2                     l2560:
  8152                           
  8153                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8154  004EA2  0E00               	movlw	0
  8155  004EA4  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  8156  004EA6                     l13108:
  8157  004EA6  0E3F               	movlw	63
  8158  004EA8  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8159  004EAA  D001               	goto	l2562
  8160  004EAC  D00D               	goto	u10550
  8161  004EAE                     l2562:
  8162                           
  8163                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  8164  004EAE  0E00               	movlw	low _pageBuffer
  8165  004EB0  240F               	addwf	internalFlash_writePage@cntr,w,c
  8166  004EB2  6ED9               	movwf	fsr2l,c
  8167  004EB4  0E08               	movlw	high _pageBuffer
  8168  004EB6  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  8169  004EB8  6EDA               	movwf	fsr2h,c
  8170  004EBA  50DF               	movf	indf2,w,c
  8171  004EBC  6EF5               	movwf	tablat,c	;volatile
  8172  004EBE  000D               	tblwt		*+	;# 
  8173                           
  8174                           ;internal_flash.c: 97: ++cntr;
  8175  004EC0  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  8176  004EC2  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  8177  004EC4  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  8178  004EC6  D7EF               	goto	l13108
  8179  004EC8                     u10550:
  8180  004EC8  000A               	tblrd		*-	;# 
  8181                           
  8182                           ;internal_flash.c: 104: EECON1 = 0x84;
  8183  004ECA  0E84               	movlw	132
  8184  004ECC  6EA6               	movwf	4006,c	;volsfr
  8185                           
  8186                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8187  004ECE  0EB5               	movlw	181
  8188  004ED0  EC1B  F037         	call	__internalFlash_unlockAndActivate
  8189                           
  8190                           ;internal_flash.c: 106: TBLPTR++;
  8191  004ED4  0E01               	movlw	1
  8192  004ED6  26F6               	addwf	tblptrl,f,c	;volatile
  8193  004ED8  0E00               	movlw	0
  8194  004EDA  22F7               	addwfc	tblptrh,f,c	;volatile
  8195  004EDC  0E00               	movlw	0
  8196  004EDE  22F8               	addwfc	tblptru,f,c	;volatile
  8197  004EE0  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  8198  004EE2  D7DB               	goto	l13102
  8199  004EE4                     l2559:
  8200  004EE4  0012               	return		;funcret
  8201  004EE6                     __end_of_internalFlash_writePage:
  8202                           	opt stack 0
  8203                           tblptru	equ	0xFF8
  8204                           tblptrh	equ	0xFF7
  8205                           tblptrl	equ	0xFF6
  8206                           tablat	equ	0xFF5
  8207                           prodh	equ	0xFF4
  8208                           prodl	equ	0xFF3
  8209                           intcon	equ	0xFF2
  8210                           intcon2	equ	0xFF1
  8211                           intcon3	equ	0xFF0
  8212                           postinc0	equ	0xFEE
  8213                           wreg	equ	0xFE8
  8214                           indf1	equ	0xFE7
  8215                           postdec1	equ	0xFE5
  8216                           plusw1	equ	0xFE3
  8217                           fsr1h	equ	0xFE2
  8218                           fsr1l	equ	0xFE1
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           postdec2	equ	0xFDD
  8222                           plusw2	equ	0xFDB
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function _internalFlash_readPage *****************
  8228 ;; Defined at:
  8229 ;;		line 37 in file "internal_flash.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;  page            2   21[COMRAM] unsigned int 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;  address         4   23[COMRAM] unsigned long 
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;Total ram usage:        6 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    2
  8250 ;; This function calls:
  8251 ;;		_internalFlash_addressFromPage
  8252 ;;		_internalFlash_read
  8253 ;; This function is called by:
  8254 ;;		__bootloader_program
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text30
  8259  00693C                     __ptext30:
  8260                           	opt stack 0
  8261  00693C                     _internalFlash_readPage:
  8262                           	opt stack 26
  8263                           
  8264                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  8265                           
  8266                           ;incstack = 0
  8267  00693C  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  8268  006940  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  8269  006944  EC81  F036         	call	_internalFlash_addressFromPage	;wreg free
  8270  006948  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  8271  00694C  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  8272  006950  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  8273  006954  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  8274                           
  8275                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  8276  006958  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  8277  00695C  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  8278  006960  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  8279  006964  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  8280  006968  0E04               	movlw	4
  8281  00696A  6E13               	movwf	internalFlash_read@data_length+1,c
  8282  00696C  0E00               	movlw	0
  8283  00696E  6E12               	movwf	internalFlash_read@data_length,c
  8284  006970  0E00               	movlw	low _pageBuffer
  8285  006972  6E14               	movwf	internalFlash_read@buffer,c
  8286  006974  0E08               	movlw	high _pageBuffer
  8287  006976  6E15               	movwf	internalFlash_read@buffer+1,c
  8288  006978  ECCF  F035         	call	_internalFlash_read	;wreg free
  8289  00697C  0012               	return		;funcret
  8290  00697E                     __end_of_internalFlash_readPage:
  8291                           	opt stack 0
  8292                           tblptru	equ	0xFF8
  8293                           tblptrh	equ	0xFF7
  8294                           tblptrl	equ	0xFF6
  8295                           tablat	equ	0xFF5
  8296                           prodh	equ	0xFF4
  8297                           prodl	equ	0xFF3
  8298                           intcon	equ	0xFF2
  8299                           intcon2	equ	0xFF1
  8300                           intcon3	equ	0xFF0
  8301                           postinc0	equ	0xFEE
  8302                           wreg	equ	0xFE8
  8303                           indf1	equ	0xFE7
  8304                           postdec1	equ	0xFE5
  8305                           plusw1	equ	0xFE3
  8306                           fsr1h	equ	0xFE2
  8307                           fsr1l	equ	0xFE1
  8308                           indf2	equ	0xFDF
  8309                           postinc2	equ	0xFDE
  8310                           postdec2	equ	0xFDD
  8311                           plusw2	equ	0xFDB
  8312                           fsr2h	equ	0xFDA
  8313                           fsr2l	equ	0xFD9
  8314                           status	equ	0xFD8
  8315                           
  8316 ;; *************** function _internalFlash_read *****************
  8317 ;; Defined at:
  8318 ;;		line 150 in file "internal_flash.c"
  8319 ;; Parameters:    Size  Location     Type
  8320 ;;  address         4   13[COMRAM] unsigned long 
  8321 ;;  data_length     2   17[COMRAM] unsigned int 
  8322 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  8323 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      unsigned char 
  8328 ;; Registers used:
  8329 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8335 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;Total ram usage:        8 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:    1
  8342 ;; This function calls:
  8343 ;;		_memcpy
  8344 ;; This function is called by:
  8345 ;;		_internalFlash_readPage
  8346 ;;		__bootloader_verify_program_memory
  8347 ;; This function uses a non-reentrant model
  8348 ;;
  8349                           
  8350                           	psect	text31
  8351  006B9E                     __ptext31:
  8352                           	opt stack 0
  8353  006B9E                     _internalFlash_read:
  8354                           	opt stack 26
  8355                           
  8356                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  8357                           
  8358                           ;incstack = 0
  8359  006B9E  5011               	movf	internalFlash_read@address+3,w,c
  8360  006BA0  E118               	bnz	l2575
  8361  006BA2  280E               	incf	internalFlash_read@address,w,c
  8362  006BA4  0EFF               	movlw	255
  8363  006BA6  580F               	subwfb	internalFlash_read@address+1,w,c
  8364  006BA8  0E01               	movlw	1
  8365  006BAA  5810               	subwfb	internalFlash_read@address+2,w,c
  8366  006BAC  B0D8               	btfsc	status,0,c
  8367  006BAE  0012               	return	
  8368                           
  8369                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  8370                           
  8371                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  8372  006BB0  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  8373  006BB4  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  8374  006BB8  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  8375  006BBC  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  8376  006BC0  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  8377  006BC4  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  8378  006BC8  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  8379  006BCC  EC1C  F030         	call	_memcpy	;wreg free
  8380  006BD0  0012               	return	
  8381  006BD2                     l2575:
  8382  006BD2  0012               	return		;funcret
  8383  006BD4                     __end_of_internalFlash_read:
  8384                           	opt stack 0
  8385                           tblptru	equ	0xFF8
  8386                           tblptrh	equ	0xFF7
  8387                           tblptrl	equ	0xFF6
  8388                           tablat	equ	0xFF5
  8389                           prodh	equ	0xFF4
  8390                           prodl	equ	0xFF3
  8391                           intcon	equ	0xFF2
  8392                           intcon2	equ	0xFF1
  8393                           intcon3	equ	0xFF0
  8394                           postinc0	equ	0xFEE
  8395                           wreg	equ	0xFE8
  8396                           indf1	equ	0xFE7
  8397                           postdec1	equ	0xFE5
  8398                           plusw1	equ	0xFE3
  8399                           fsr1h	equ	0xFE2
  8400                           fsr1l	equ	0xFE1
  8401                           indf2	equ	0xFDF
  8402                           postinc2	equ	0xFDE
  8403                           postdec2	equ	0xFDD
  8404                           plusw2	equ	0xFDB
  8405                           fsr2h	equ	0xFDA
  8406                           fsr2l	equ	0xFD9
  8407                           status	equ	0xFD8
  8408                           
  8409 ;; *************** function _internalFlash_pageFromAddress *****************
  8410 ;; Defined at:
  8411 ;;		line 171 in file "internal_flash.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;  address         4    0[COMRAM] unsigned long 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  2    0[COMRAM] unsigned int 
  8418 ;; Registers used:
  8419 ;;		wreg, status,2, status,0
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8429 ;;Total ram usage:        5 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		__bootloader_program
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text32
  8439  00700C                     __ptext32:
  8440                           	opt stack 0
  8441  00700C                     _internalFlash_pageFromAddress:
  8442                           	opt stack 28
  8443                           
  8444                           ;internal_flash.c: 173: address >>= 10;
  8445                           
  8446                           ;incstack = 0
  8447  00700C  0E0A               	movlw	10
  8448  00700E  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  8449  007010                     u10485:
  8450  007010  90D8               	bcf	status,0,c
  8451  007012  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  8452  007014  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  8453  007016  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  8454  007018  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  8455  00701A  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  8456  00701C  D7F9               	goto	u10485
  8457                           
  8458                           ;internal_flash.c: 174: return (uint16_t) address;
  8459  00701E  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  8460  007022  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  8461  007026  0012               	return	
  8462  007028                     __end_of_internalFlash_pageFromAddress:
  8463                           	opt stack 0
  8464                           tblptru	equ	0xFF8
  8465                           tblptrh	equ	0xFF7
  8466                           tblptrl	equ	0xFF6
  8467                           tablat	equ	0xFF5
  8468                           prodh	equ	0xFF4
  8469                           prodl	equ	0xFF3
  8470                           intcon	equ	0xFF2
  8471                           intcon2	equ	0xFF1
  8472                           intcon3	equ	0xFF0
  8473                           postinc0	equ	0xFEE
  8474                           wreg	equ	0xFE8
  8475                           indf1	equ	0xFE7
  8476                           postdec1	equ	0xFE5
  8477                           plusw1	equ	0xFE3
  8478                           fsr1h	equ	0xFE2
  8479                           fsr1l	equ	0xFE1
  8480                           indf2	equ	0xFDF
  8481                           postinc2	equ	0xFDE
  8482                           postdec2	equ	0xFDD
  8483                           plusw2	equ	0xFDB
  8484                           fsr2h	equ	0xFDA
  8485                           fsr2l	equ	0xFD9
  8486                           status	equ	0xFD8
  8487                           
  8488 ;; *************** function _internalFlash_getBuffer *****************
  8489 ;; Defined at:
  8490 ;;		line 32 in file "internal_flash.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;		None
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;		None
  8495 ;; Return value:  Size  Location     Type
  8496 ;;                  2    0[COMRAM] PTR unsigned char 
  8497 ;; Registers used:
  8498 ;;		wreg, status,2, status,0
  8499 ;; Tracked objects:
  8500 ;;		On entry : 0/0
  8501 ;;		On exit  : 0/0
  8502 ;;		Unchanged: 0/0
  8503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;Total ram usage:        2 bytes
  8509 ;; Hardware stack levels used:    1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		__bootloader_program
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text33
  8518  0071AC                     __ptext33:
  8519                           	opt stack 0
  8520  0071AC                     _internalFlash_getBuffer:
  8521                           	opt stack 28
  8522                           
  8523                           ;internal_flash.c: 34: return pageBuffer;
  8524                           
  8525                           ;incstack = 0
  8526  0071AC  0E00               	movlw	low _pageBuffer
  8527  0071AE  6E01               	movwf	?_internalFlash_getBuffer,c
  8528  0071B0  0E08               	movlw	high _pageBuffer
  8529  0071B2  6E02               	movwf	?_internalFlash_getBuffer+1,c
  8530  0071B4  0012               	return	
  8531  0071B6                     __end_of_internalFlash_getBuffer:
  8532                           	opt stack 0
  8533                           tblptru	equ	0xFF8
  8534                           tblptrh	equ	0xFF7
  8535                           tblptrl	equ	0xFF6
  8536                           tablat	equ	0xFF5
  8537                           prodh	equ	0xFF4
  8538                           prodl	equ	0xFF3
  8539                           intcon	equ	0xFF2
  8540                           intcon2	equ	0xFF1
  8541                           intcon3	equ	0xFF0
  8542                           postinc0	equ	0xFEE
  8543                           wreg	equ	0xFE8
  8544                           indf1	equ	0xFE7
  8545                           postdec1	equ	0xFE5
  8546                           plusw1	equ	0xFE3
  8547                           fsr1h	equ	0xFE2
  8548                           fsr1l	equ	0xFE1
  8549                           indf2	equ	0xFDF
  8550                           postinc2	equ	0xFDE
  8551                           postdec2	equ	0xFDD
  8552                           plusw2	equ	0xFDB
  8553                           fsr2h	equ	0xFDA
  8554                           fsr2l	equ	0xFD9
  8555                           status	equ	0xFD8
  8556                           
  8557 ;; *************** function _internalFlash_erasePage *****************
  8558 ;; Defined at:
  8559 ;;		line 44 in file "internal_flash.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  page            2    8[COMRAM] unsigned int 
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;  address         4   14[COMRAM] unsigned long 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;Total ram usage:       10 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    1
  8580 ;; This function calls:
  8581 ;;		__internalFlash_unlockAndActivate
  8582 ;;		_internalFlash_addressFromPage
  8583 ;; This function is called by:
  8584 ;;		__bootloader_program
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text34
  8589  005EFA                     __ptext34:
  8590                           	opt stack 0
  8591  005EFA                     _internalFlash_erasePage:
  8592                           	opt stack 27
  8593                           
  8594                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  8595                           
  8596                           ;incstack = 0
  8597  005EFA  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  8598  005EFE  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  8599  005F02  EC81  F036         	call	_internalFlash_addressFromPage	;wreg free
  8600  005F06  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  8601  005F0A  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  8602  005F0E  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  8603  005F12  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  8604                           
  8605                           ;internal_flash.c: 50: TBLPTR = address;
  8606  005F16  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  8607  005F1A  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  8608  005F1E  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  8609                           
  8610                           ;internal_flash.c: 53: if((address<0x9000) || (address+1023>=0x1FFFF))
  8611  005F22  5012               	movf	internalFlash_erasePage@address+3,w,c
  8612  005F24  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  8613  005F26  E104               	bnz	u10490
  8614  005F28  0E90               	movlw	144
  8615  005F2A  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  8616  005F2C  A0D8               	btfss	status,0,c
  8617  005F2E  0012               	return	
  8618  005F30                     u10490:
  8619  005F30  0EFF               	movlw	255
  8620  005F32  240F               	addwf	internalFlash_erasePage@address,w,c
  8621  005F34  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  8622  005F36  0E03               	movlw	3
  8623  005F38  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  8624  005F3A  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  8625  005F3C  0E00               	movlw	0
  8626  005F3E  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  8627  005F40  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  8628  005F42  0E00               	movlw	0
  8629  005F44  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  8630  005F46  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  8631  005F48  500E               	movf	??_internalFlash_erasePage+3,w,c
  8632  005F4A  E10C               	bnz	l2553
  8633  005F4C  280B               	incf	??_internalFlash_erasePage,w,c
  8634  005F4E  0EFF               	movlw	255
  8635  005F50  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  8636  005F52  0E01               	movlw	1
  8637  005F54  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  8638  005F56  B0D8               	btfsc	status,0,c
  8639  005F58  0012               	return	
  8640                           
  8641                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  8642                           
  8643                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  8644  005F5A  84A6               	bsf	4006,2,c	;volsfr
  8645                           
  8646                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  8647  005F5C  88A6               	bsf	4006,4,c	;volsfr
  8648                           
  8649                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8650  005F5E  0EB5               	movlw	181
  8651  005F60  EC1B  F037         	call	__internalFlash_unlockAndActivate
  8652  005F64                     l2553:
  8653  005F64  0012               	return		;funcret
  8654  005F66                     __end_of_internalFlash_erasePage:
  8655                           	opt stack 0
  8656                           tblptru	equ	0xFF8
  8657                           tblptrh	equ	0xFF7
  8658                           tblptrl	equ	0xFF6
  8659                           tablat	equ	0xFF5
  8660                           prodh	equ	0xFF4
  8661                           prodl	equ	0xFF3
  8662                           intcon	equ	0xFF2
  8663                           intcon2	equ	0xFF1
  8664                           intcon3	equ	0xFF0
  8665                           postinc0	equ	0xFEE
  8666                           wreg	equ	0xFE8
  8667                           indf1	equ	0xFE7
  8668                           postdec1	equ	0xFE5
  8669                           plusw1	equ	0xFE3
  8670                           fsr1h	equ	0xFE2
  8671                           fsr1l	equ	0xFE1
  8672                           indf2	equ	0xFDF
  8673                           postinc2	equ	0xFDE
  8674                           postdec2	equ	0xFDD
  8675                           plusw2	equ	0xFDB
  8676                           fsr2h	equ	0xFDA
  8677                           fsr2l	equ	0xFD9
  8678                           status	equ	0xFD8
  8679                           
  8680 ;; *************** function __internalFlash_unlockAndActivate *****************
  8681 ;; Defined at:
  8682 ;;		line 112 in file "internal_flash.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  UnlockKey       1    wreg     unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  8687 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;Total ram usage:        2 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_internalFlash_erasePage
  8707 ;;		_internalFlash_writePage
  8708 ;;		_EraseBlock
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text35
  8713  006E36                     __ptext35:
  8714                           	opt stack 0
  8715  006E36                     __internalFlash_unlockAndActivate:
  8716                           	opt stack 27
  8717                           
  8718                           ;incstack = 0
  8719                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  8720  006E36  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  8721                           
  8722                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  8723  006E38  0EB5               	movlw	181
  8724  006E3A  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  8725  006E3C  B4D8               	btfsc	status,2,c
  8726  006E3E  D002               	goto	l2566
  8727                           
  8728                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
  8729  006E40  94A6               	bcf	4006,2,c	;volsfr
  8730                           
  8731                           ;internal_flash.c: 124: return;
  8732  006E42  0012               	return	
  8733  006E44                     l2566:
  8734                           
  8735                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
  8736  006E44  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  8737                           
  8738                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
  8739  006E48  9EF2               	bcf	intcon,7,c	;volatile
  8740                           
  8741                           ;internal_flash.c: 129: EECON2 = 0x55;
  8742  006E4A  0E55               	movlw	85
  8743  006E4C  6EA7               	movwf	4007,c	;volsfr
  8744                           
  8745                           ;internal_flash.c: 130: EECON2 = 0xAA;
  8746  006E4E  0EAA               	movlw	170
  8747  006E50  6EA7               	movwf	4007,c	;volsfr
  8748                           
  8749                           ;internal_flash.c: 131: EECON1bits.WR = 1;
  8750  006E52  82A6               	bsf	4006,1,c	;volsfr
  8751                           
  8752                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
  8753  006E54  94A6               	bcf	4006,2,c	;volsfr
  8754                           
  8755                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
  8756  006E56  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  8757  006E58  0012               	return	
  8758                           
  8759                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
  8760  006E5A  8EF2               	bsf	intcon,7,c	;volatile
  8761  006E5C  0012               	return	
  8762  006E5E                     __end_of__internalFlash_unlockAndActivate:
  8763                           	opt stack 0
  8764                           tblptru	equ	0xFF8
  8765                           tblptrh	equ	0xFF7
  8766                           tblptrl	equ	0xFF6
  8767                           tablat	equ	0xFF5
  8768                           prodh	equ	0xFF4
  8769                           prodl	equ	0xFF3
  8770                           intcon	equ	0xFF2
  8771                           intcon2	equ	0xFF1
  8772                           intcon3	equ	0xFF0
  8773                           postinc0	equ	0xFEE
  8774                           wreg	equ	0xFE8
  8775                           indf1	equ	0xFE7
  8776                           postdec1	equ	0xFE5
  8777                           plusw1	equ	0xFE3
  8778                           fsr1h	equ	0xFE2
  8779                           fsr1l	equ	0xFE1
  8780                           indf2	equ	0xFDF
  8781                           postinc2	equ	0xFDE
  8782                           postdec2	equ	0xFDD
  8783                           plusw2	equ	0xFDB
  8784                           fsr2h	equ	0xFDA
  8785                           fsr2l	equ	0xFD9
  8786                           status	equ	0xFD8
  8787                           
  8788 ;; *************** function _internalFlash_addressWithinPage *****************
  8789 ;; Defined at:
  8790 ;;		line 185 in file "internal_flash.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  address         4    8[COMRAM] unsigned long 
  8793 ;;  page            2   12[COMRAM] unsigned int 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  page_start_a    4   18[COMRAM] unsigned long 
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  2    8[COMRAM] unsigned int 
  8798 ;; Registers used:
  8799 ;;		wreg, status,2, status,0, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8806 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;Total ram usage:       14 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    1
  8812 ;; This function calls:
  8813 ;;		_internalFlash_addressFromPage
  8814 ;; This function is called by:
  8815 ;;		__bootloader_program
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text36
  8820  00622A                     __ptext36:
  8821                           	opt stack 0
  8822  00622A                     _internalFlash_addressWithinPage:
  8823                           	opt stack 27
  8824                           
  8825                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  8826                           
  8827                           ;incstack = 0
  8828  00622A  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  8829  00622E  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  8830  006232  EC81  F036         	call	_internalFlash_addressFromPage	;wreg free
  8831  006236  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  8832  00623A  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  8833  00623E  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  8834  006242  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  8835                           
  8836                           ;internal_flash.c: 189: address = address - page_start_address;
  8837  006246  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  8838  00624A  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  8839  00624E  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  8840  006252  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  8841  006256  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  8842  006258  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  8843  00625A  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  8844  00625C  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  8845  00625E  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  8846  006260  0E00               	movlw	0
  8847  006262  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  8848  006264  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  8849  006266  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  8850  006268  5009               	movf	internalFlash_addressWithinPage@address,w,c
  8851  00626A  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  8852  00626C  6E09               	movwf	internalFlash_addressWithinPage@address,c
  8853  00626E  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  8854  006270  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  8855  006272  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  8856  006274  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  8857  006276  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  8858  006278  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  8859  00627A  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  8860  00627C  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  8861  00627E  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  8862                           
  8863                           ;internal_flash.c: 190: return (uint16_t) address;
  8864  006280  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  8865  006284  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  8866  006288  0012               	return	
  8867  00628A                     __end_of_internalFlash_addressWithinPage:
  8868                           	opt stack 0
  8869                           tblptru	equ	0xFF8
  8870                           tblptrh	equ	0xFF7
  8871                           tblptrl	equ	0xFF6
  8872                           tablat	equ	0xFF5
  8873                           prodh	equ	0xFF4
  8874                           prodl	equ	0xFF3
  8875                           intcon	equ	0xFF2
  8876                           intcon2	equ	0xFF1
  8877                           intcon3	equ	0xFF0
  8878                           postinc0	equ	0xFEE
  8879                           wreg	equ	0xFE8
  8880                           indf1	equ	0xFE7
  8881                           postdec1	equ	0xFE5
  8882                           plusw1	equ	0xFE3
  8883                           fsr1h	equ	0xFE2
  8884                           fsr1l	equ	0xFE1
  8885                           indf2	equ	0xFDF
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           plusw2	equ	0xFDB
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8
  8892                           
  8893 ;; *************** function _internalFlash_addressFromPage *****************
  8894 ;; Defined at:
  8895 ;;		line 177 in file "internal_flash.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  page            2    0[COMRAM] unsigned int 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  address         4    4[COMRAM] unsigned long 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  4    0[COMRAM] unsigned long 
  8902 ;; Registers used:
  8903 ;;		wreg, status,2, status,0
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;Total ram usage:        8 bytes
  8914 ;; Hardware stack levels used:    1
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_internalFlash_readPage
  8919 ;;		_internalFlash_erasePage
  8920 ;;		_internalFlash_writePage
  8921 ;;		_internalFlash_addressWithinPage
  8922 ;; This function uses a non-reentrant model
  8923 ;;
  8924                           
  8925                           	psect	text37
  8926  006D02                     __ptext37:
  8927                           	opt stack 0
  8928  006D02                     _internalFlash_addressFromPage:
  8929                           	opt stack 27
  8930                           
  8931                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
  8932                           
  8933                           ;incstack = 0
  8934  006D02  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  8935  006D06  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  8936  006D0A  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  8937  006D0C  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  8938                           
  8939                           ;internal_flash.c: 181: address <<= 10;
  8940  006D0E  0E0A               	movlw	10
  8941  006D10                     u9795:
  8942  006D10  90D8               	bcf	status,0,c
  8943  006D12  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  8944  006D14  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  8945  006D16  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  8946  006D18  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  8947  006D1A  2EE8               	decfsz	wreg,f,c
  8948  006D1C  D7F9               	goto	u9795
  8949                           
  8950                           ;internal_flash.c: 182: return address;
  8951  006D1E  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  8952  006D22  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  8953  006D26  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  8954  006D2A  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  8955  006D2E  0012               	return	
  8956  006D30                     __end_of_internalFlash_addressFromPage:
  8957                           	opt stack 0
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           intcon	equ	0xFF2
  8965                           intcon2	equ	0xFF1
  8966                           intcon3	equ	0xFF0
  8967                           postinc0	equ	0xFEE
  8968                           wreg	equ	0xFE8
  8969                           indf1	equ	0xFE7
  8970                           postdec1	equ	0xFE5
  8971                           plusw1	equ	0xFE3
  8972                           fsr1h	equ	0xFE2
  8973                           fsr1l	equ	0xFE1
  8974                           indf2	equ	0xFDF
  8975                           postinc2	equ	0xFDE
  8976                           postdec2	equ	0xFDD
  8977                           plusw2	equ	0xFDB
  8978                           fsr2h	equ	0xFDA
  8979                           fsr2l	equ	0xFD9
  8980                           status	equ	0xFD8
  8981                           
  8982 ;; *************** function _fat_read_from_file_fast *****************
  8983 ;; Defined at:
  8984 ;;		line 787 in file "fat16.c"
  8985 ;; Parameters:    Size  Location     Type
  8986 ;;  start_byte      4   65[COMRAM] unsigned long 
  8987 ;;  length          4   69[COMRAM] unsigned long 
  8988 ;;  data            2   73[COMRAM] PTR unsigned char 
  8989 ;;		 -> file_buffer(50), 
  8990 ;;  cluster         2   75[COMRAM] PTR unsigned int 
  8991 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
  8992 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
  8993 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;  position        4   10[BANK0 ] unsigned long 
  8996 ;;  read_length     2    8[BANK0 ] unsigned int 
  8997 ;;  needed_clust    2    6[BANK0 ] unsigned int 
  8998 ;;  offset          2    4[BANK0 ] unsigned int 
  8999 ;;  working_clus    2    2[BANK0 ] unsigned int 
  9000 ;;  sector          2    0[BANK0 ] unsigned int 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  1    wreg      unsigned char 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9010 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9012 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9013 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9014 ;;Total ram usage:       40 bytes
  9015 ;; Hardware stack levels used:    1
  9016 ;; Hardware stack levels required when called:    7
  9017 ;; This function calls:
  9018 ;;		__data_sector_from_cluster
  9019 ;;		__find_nth_cluster
  9020 ;;		__read_fat
  9021 ;;		_flash_partial_read
  9022 ;; This function is called by:
  9023 ;;		__bootloader_verify_file
  9024 ;;		__bootloader_program
  9025 ;;		_fat_read_from_file
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029                           	psect	text38
  9030  001C16                     __ptext38:
  9031                           	opt stack 0
  9032  001C16                     _fat_read_from_file_fast:
  9033                           	opt stack 21
  9034                           
  9035                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
  9036                           
  9037                           ;incstack = 0
  9038  001C16  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
  9039  001C1A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
  9040  001C1E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
  9041  001C22  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
  9042  001C26  0E0A               	movlw	10
  9043  001C28  D005               	goto	u10200
  9044  001C2A                     u10205:
  9045  001C2A  90D8               	bcf	status,0,c
  9046  001C2C  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
  9047  001C2E  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
  9048  001C30  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
  9049  001C32  3250               	rrcf	??_fat_read_from_file_fast,f,c
  9050  001C34                     u10200:
  9051  001C34  2EE8               	decfsz	wreg,f,c
  9052  001C36  D7F9               	goto	u10205
  9053  001C38  C050  F0BC         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
  9054  001C3C  C051  F0BD         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
  9055                           
  9056                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
  9057  001C40  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9058  001C44  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9059  001C48  50DE               	movf	postinc2,w,c
  9060  001C4A  0100               	movlb	0	; () banked
  9061  001C4C  5DBC               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9062  001C4E  50DE               	movf	postinc2,w,c
  9063  001C50  59BD               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9064  001C52  B0D8               	btfsc	status,0,c
  9065  001C54  D002               	goto	l2081
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
  9069  001C56  0EFF               	movlw	255
  9070                           
  9071                           ; BSR set to: 0
  9072  001C58  0012               	return	
  9073  001C5A                     l2081:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
  9077                           
  9078                           ; BSR set to: 0
  9079  001C5A  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9080  001C5E  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9081  001C62  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
  9082  001C66  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
  9083  001C6A  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9084  001C6E  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9085  001C72  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
  9086  001C76  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
  9087  001C7A  1E50               	comf	??_fat_read_from_file_fast,f,c
  9088  001C7C  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9089  001C7E  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9090  001C80  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9091  001C82  51BC               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9092  001C84  2450               	addwf	??_fat_read_from_file_fast,w,c
  9093  001C86  6E3A               	movwf	__find_nth_cluster@n,c
  9094  001C88  51BD               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9095  001C8A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9096  001C8C  6E3B               	movwf	__find_nth_cluster@n+1,c
  9097  001C8E  ECBC  F02A         	call	__find_nth_cluster	;wreg free
  9098  001C92  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9099  001C96  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9100  001C9A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
  9101  001C9E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
  9102                           
  9103                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
  9104  001CA2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9105  001CA6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9106  001CAA  C0BC  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
  9107  001CAE  C0BD  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
  9108                           
  9109                           ;fat16.c: 813: working_cluster = (*cluster);
  9110  001CB2  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9111  001CB6  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9112  001CBA  CFDE F0B8          	movff	postinc2,fat_read_from_file_fast@working_cluster
  9113  001CBE  CFDD F0B9          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
  9114                           
  9115                           ;fat16.c: 816: position = (needed_cluster << 9);
  9116  001CC2  C0BC  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
  9117  001CC6  C0BD  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
  9118  001CCA  0E09               	movlw	9
  9119  001CCC                     u10225:
  9120  001CCC  90D8               	bcf	status,0,c
  9121  001CCE  3650               	rlcf	??_fat_read_from_file_fast,f,c
  9122  001CD0  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
  9123  001CD2  2EE8               	decfsz	wreg,f,c
  9124  001CD4  D7FB               	goto	u10225
  9125  001CD6  C050  F0C0         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
  9126  001CDA  C051  F0C1         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
  9127  001CDE  0100               	movlb	0	; () banked
  9128  001CE0  6BC2               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
  9129  001CE2  6BC3               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
  9130                           
  9131                           ; BSR set to: 0
  9132                           ;fat16.c: 817: offset = start_byte - position;
  9133  001CE4  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9134  001CE8  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9135  001CEC  1E50               	comf	??_fat_read_from_file_fast,f,c
  9136  001CEE  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9137  001CF0  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9138  001CF2  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9139  001CF4  5042               	movf	fat_read_from_file_fast@start_byte,w,c
  9140  001CF6  2450               	addwf	??_fat_read_from_file_fast,w,c
  9141  001CF8  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9142  001CFA  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
  9143  001CFC  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9144  001CFE  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;fat16.c: 820: position = 0;
  9148  001D00  0E00               	movlw	0
  9149  001D02  6FC0               	movwf	fat_read_from_file_fast@position& (0+255),b
  9150  001D04  0E00               	movlw	0
  9151  001D06  6FC1               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
  9152  001D08  0E00               	movlw	0
  9153  001D0A  6FC2               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
  9154  001D0C  0E00               	movlw	0
  9155  001D0E  6FC3               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
  9156                           
  9157                           ;fat16.c: 821: while(position < length)
  9158  001D10  D089               	goto	l2083
  9159  001D12                     
  9160                           ; BSR set to: 0
  9161                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
  9162                           
  9163                           ; BSR set to: 0
  9164  001D12  0E02               	movlw	2
  9165  001D14  19BB               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
  9166  001D16  11BA               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
  9167  001D18  A4D8               	btfss	status,2,c
  9168  001D1A  D00F               	goto	l2085
  9169                           
  9170                           ; BSR set to: 0
  9171                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
  9172  001D1C  C0B8  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
  9173  001D20  C0B9  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
  9174  001D24  EC25  F032         	call	__read_fat	;wreg free
  9175  001D28  C030  F0B8         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
  9176  001D2C  C031  F0B9         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
  9177                           
  9178                           ;fat16.c: 828: offset = 0;
  9179  001D30  0E00               	movlw	0
  9180  001D32  0100               	movlb	0	; () banked
  9181  001D34  6FBB               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9182  001D36  0E00               	movlw	0
  9183  001D38  6FBA               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9184  001D3A                     l2085:
  9185                           
  9186                           ; BSR set to: 0
  9187                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
  9188                           
  9189                           ; BSR set to: 0
  9190  001D3A  C0B8  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
  9191  001D3E  C0B9  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
  9192  001D42  ECC3  F038         	call	__data_sector_from_cluster	;wreg free
  9193  001D46  C001  F0B6         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
  9194  001D4A  C002  F0B7         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
  9195                           
  9196                           ;fat16.c: 835: read_length = 512 - offset;
  9197  001D4E  C0BA  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
  9198  001D52  C0BB  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
  9199  001D56  1E50               	comf	??_fat_read_from_file_fast,f,c
  9200  001D58  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9201  001D5A  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9202  001D5C  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9203  001D5E  0E00               	movlw	0
  9204  001D60  2450               	addwf	??_fat_read_from_file_fast,w,c
  9205  001D62  0100               	movlb	0	; () banked
  9206  001D64  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9207  001D66  0E02               	movlw	2
  9208  001D68  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9209  001D6A  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;fat16.c: 836: if(read_length > (length-position))
  9213  001D6C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9214  001D6E  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
  9215  001D70  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9216  001D72  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
  9217  001D74  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
  9218  001D76  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
  9219  001D78  C0C0  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
  9220  001D7C  C0C1  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
  9221  001D80  C0C2  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
  9222  001D84  C0C3  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
  9223  001D88  1E54               	comf	??_fat_read_from_file_fast+4,f,c
  9224  001D8A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
  9225  001D8C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
  9226  001D8E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
  9227  001D90  2A54               	incf	??_fat_read_from_file_fast+4,f,c
  9228  001D92  0E00               	movlw	0
  9229  001D94  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
  9230  001D96  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
  9231  001D98  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
  9232  001D9A  5046               	movf	fat_read_from_file_fast@length,w,c
  9233  001D9C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
  9234  001D9E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
  9235  001DA0  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9236  001DA2  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
  9237  001DA4  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
  9238  001DA6  5048               	movf	fat_read_from_file_fast@length+2,w,c
  9239  001DA8  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
  9240  001DAA  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
  9241  001DAC  5049               	movf	fat_read_from_file_fast@length+3,w,c
  9242  001DAE  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
  9243  001DB0  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
  9244  001DB2  5050               	movf	??_fat_read_from_file_fast,w,c
  9245  001DB4  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
  9246  001DB6  5051               	movf	??_fat_read_from_file_fast+1,w,c
  9247  001DB8  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
  9248  001DBA  5052               	movf	??_fat_read_from_file_fast+2,w,c
  9249  001DBC  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
  9250  001DBE  5053               	movf	??_fat_read_from_file_fast+3,w,c
  9251  001DC0  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
  9252  001DC2  B0D8               	btfsc	status,0,c
  9253  001DC4  D00E               	goto	l2086
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
  9257  001DC6  C0C0  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9258  001DCA  C0C1  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9259  001DCE  1E50               	comf	??_fat_read_from_file_fast,f,c
  9260  001DD0  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9261  001DD2  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9262  001DD4  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9263  001DD6  5046               	movf	fat_read_from_file_fast@length,w,c
  9264  001DD8  2450               	addwf	??_fat_read_from_file_fast,w,c
  9265  001DDA  6FBE               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9266  001DDC  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9267  001DDE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9268  001DE0  6FBF               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9269  001DE2                     l2086:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
  9273                           
  9274                           ; BSR set to: 0
  9275  001DE2  C0B6  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
  9276  001DE6  C0B7  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
  9277  001DEA  C0BA  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
  9278  001DEE  C0BB  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
  9279  001DF2  C0BE  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
  9280  001DF6  C0BF  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
  9281  001DFA  51C0               	movf	fat_read_from_file_fast@position& (0+255),w,b
  9282  001DFC  244A               	addwf	fat_read_from_file_fast@data,w,c
  9283  001DFE  6E2E               	movwf	flash_partial_read@data,c
  9284  001E00  51C1               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
  9285  001E02  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
  9286  001E04  6E2F               	movwf	flash_partial_read@data+1,c
  9287  001E06  EC43  F037         	call	_flash_partial_read	;wreg free
  9288                           
  9289                           ;fat16.c: 846: position += read_length;
  9290  001E0A  0100               	movlb	0	; () banked
  9291  001E0C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9292  001E0E  27C0               	addwf	fat_read_from_file_fast@position& (0+255),f,b
  9293  001E10  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9294  001E12  23C1               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
  9295  001E14  0E00               	movlw	0
  9296  001E16  23C2               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
  9297  001E18  0E00               	movlw	0
  9298  001E1A  23C3               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;fat16.c: 847: offset += read_length;
  9302  001E1C  51BE               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9303  001E1E  27BA               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
  9304  001E20  51BF               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9305  001E22  23BB               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
  9306  001E24                     l2083:
  9307                           
  9308                           ; BSR set to: 0
  9309                           
  9310                           ; BSR set to: 0
  9311  001E24  5046               	movf	fat_read_from_file_fast@length,w,c
  9312  001E26  5DC0               	subwf	fat_read_from_file_fast@position& (0+255),w,b
  9313  001E28  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9314  001E2A  59C1               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
  9315  001E2C  5048               	movf	fat_read_from_file_fast@length+2,w,c
  9316  001E2E  59C2               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
  9317  001E30  5049               	movf	fat_read_from_file_fast@length+3,w,c
  9318  001E32  59C3               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
  9319  001E34  A0D8               	btfss	status,0,c
  9320  001E36  D76D               	goto	l2084
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
  9324                           
  9325                           ; BSR set to: 0
  9326  001E38  0E00               	movlw	0
  9327  001E3A  0012               	return	
  9328  001E3C                     __end_of_fat_read_from_file_fast:
  9329                           	opt stack 0
  9330                           tblptru	equ	0xFF8
  9331                           tblptrh	equ	0xFF7
  9332                           tblptrl	equ	0xFF6
  9333                           tablat	equ	0xFF5
  9334                           prodh	equ	0xFF4
  9335                           prodl	equ	0xFF3
  9336                           intcon	equ	0xFF2
  9337                           intcon2	equ	0xFF1
  9338                           intcon3	equ	0xFF0
  9339                           postinc0	equ	0xFEE
  9340                           wreg	equ	0xFE8
  9341                           indf1	equ	0xFE7
  9342                           postdec1	equ	0xFE5
  9343                           plusw1	equ	0xFE3
  9344                           fsr1h	equ	0xFE2
  9345                           fsr1l	equ	0xFE1
  9346                           indf2	equ	0xFDF
  9347                           postinc2	equ	0xFDE
  9348                           postdec2	equ	0xFDD
  9349                           plusw2	equ	0xFDB
  9350                           fsr2h	equ	0xFDA
  9351                           fsr2l	equ	0xFD9
  9352                           status	equ	0xFD8
  9353                           
  9354 ;; *************** function __find_nth_cluster *****************
  9355 ;; Defined at:
  9356 ;;		line 182 in file "fat16.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  cluster         2   55[COMRAM] unsigned int 
  9359 ;;  n               2   57[COMRAM] unsigned int 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  sector          2   63[COMRAM] unsigned int 
  9362 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
  9363 ;;  offset          2   59[COMRAM] unsigned int 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  2   55[COMRAM] unsigned int 
  9366 ;; Registers used:
  9367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;Total ram usage:       10 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    6
  9380 ;; This function calls:
  9381 ;;		__fat_offset_from_cluster
  9382 ;;		__fat_sector_from_cluster
  9383 ;;		__read_fat
  9384 ;;		__read_value_from_offset
  9385 ;;		_flash_sector_read
  9386 ;; This function is called by:
  9387 ;;		_fat_read_from_file_fast
  9388 ;;		_fat_modify_file
  9389 ;;		_fat_copy_sector_to_buffer
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text39
  9394  005578                     __ptext39:
  9395                           	opt stack 0
  9396  005578                     __find_nth_cluster:
  9397                           	opt stack 21
  9398                           
  9399                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;incstack = 0
  9403  005578  0E00               	movlw	0
  9404  00557A  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
  9405  00557C  0E00               	movlw	0
  9406  00557E  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
  9407                           
  9408                           ;fat16.c: 189: if(n==1)
  9409  005580  043A               	decf	__find_nth_cluster@n,w,c
  9410  005582  103B               	iorwf	__find_nth_cluster@n+1,w,c
  9411  005584  A4D8               	btfss	status,2,c
  9412  005586  D03E               	goto	l1968
  9413                           
  9414                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
  9415  005588  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
  9416  00558C  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
  9417  005590  EC25  F032         	call	__read_fat	;wreg free
  9418  005594  C030  F038         	movff	?__read_fat,?__find_nth_cluster
  9419  005598  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
  9420  00559C  0012               	return	
  9421  00559E                     
  9422                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
  9423  00559E  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
  9424  0055A2  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
  9425  0055A6  EC3A  F038         	call	__fat_sector_from_cluster	;wreg free
  9426  0055AA  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
  9427  0055AE  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
  9428                           
  9429                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
  9430  0055B2  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
  9431  0055B6  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
  9432  0055BA  EC46  F038         	call	__fat_offset_from_cluster	;wreg free
  9433  0055BE  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
  9434  0055C2  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
  9435                           
  9436                           ;fat16.c: 201: if(sector != sector_in_buffer)
  9437  0055C6  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
  9438  0055C8  1840               	xorwf	__find_nth_cluster@sector,w,c
  9439  0055CA  E104               	bnz	u9690
  9440  0055CC  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
  9441  0055CE  1841               	xorwf	__find_nth_cluster@sector+1,w,c
  9442  0055D0  B4D8               	btfsc	status,2,c
  9443  0055D2  D00A               	goto	l1970
  9444  0055D4                     u9690:
  9445                           
  9446                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
  9447  0055D4  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
  9448  0055D8  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
  9449  0055DC  0EC3               	movlw	low _buffer
  9450  0055DE  6E2A               	movwf	flash_sector_read@data,c
  9451  0055E0  0E02               	movlw	high _buffer
  9452  0055E2  6E2B               	movwf	flash_sector_read@data+1,c
  9453  0055E4  EC69  F037         	call	_flash_sector_read	;wreg free
  9454  0055E8                     l1970:
  9455                           
  9456                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
  9457  0055E8  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
  9458  0055EC  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
  9459  0055F0  0EC3               	movlw	low _buffer
  9460  0055F2  6E03               	movwf	__read_value_from_offset@buffer,c
  9461  0055F4  0E02               	movlw	high _buffer
  9462  0055F6  6E04               	movwf	__read_value_from_offset@buffer+1,c
  9463  0055F8  EC37  F034         	call	__read_value_from_offset	;wreg free
  9464  0055FC  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
  9465  005600  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
  9466  005604                     l1968:
  9467  005604  503A               	movf	__find_nth_cluster@n,w,c
  9468  005606  103B               	iorwf	__find_nth_cluster@n+1,w,c
  9469  005608  A4D8               	btfss	status,2,c
  9470  00560A  D7C9               	goto	l1969
  9471                           
  9472                           ;fat16.c: 208: };fat16.c: 210: return cluster;
  9473  00560C  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
  9474  005610  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
  9475  005614  0012               	return		;funcret
  9476  005616                     __end_of__find_nth_cluster:
  9477                           	opt stack 0
  9478                           tblptru	equ	0xFF8
  9479                           tblptrh	equ	0xFF7
  9480                           tblptrl	equ	0xFF6
  9481                           tablat	equ	0xFF5
  9482                           prodh	equ	0xFF4
  9483                           prodl	equ	0xFF3
  9484                           intcon	equ	0xFF2
  9485                           intcon2	equ	0xFF1
  9486                           intcon3	equ	0xFF0
  9487                           postinc0	equ	0xFEE
  9488                           wreg	equ	0xFE8
  9489                           indf1	equ	0xFE7
  9490                           postdec1	equ	0xFE5
  9491                           plusw1	equ	0xFE3
  9492                           fsr1h	equ	0xFE2
  9493                           fsr1l	equ	0xFE1
  9494                           indf2	equ	0xFDF
  9495                           postinc2	equ	0xFDE
  9496                           postdec2	equ	0xFDD
  9497                           plusw2	equ	0xFDB
  9498                           fsr2h	equ	0xFDA
  9499                           fsr2l	equ	0xFD9
  9500                           status	equ	0xFD8
  9501                           
  9502 ;; *************** function __read_value_from_offset *****************
  9503 ;; Defined at:
  9504 ;;		line 114 in file "fat16.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  offset          2    0[COMRAM] unsigned int 
  9507 ;;  buffer          2    2[COMRAM] PTR unsigned char 
  9508 ;;		 -> buffer(512), 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  value           2    7[COMRAM] unsigned int 
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  2    0[COMRAM] unsigned int 
  9513 ;; Registers used:
  9514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9524 ;;Total ram usage:        9 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		__find_nth_cluster
  9530 ;;		__make_cluster_chain
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text40
  9535  00686E                     __ptext40:
  9536                           	opt stack 0
  9537  00686E                     __read_value_from_offset:
  9538                           	opt stack 26
  9539                           
  9540                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
  9541                           
  9542                           ;incstack = 0
  9543  00686E  0E01               	movlw	1
  9544  006870  2401               	addwf	__read_value_from_offset@offset,w,c
  9545  006872  6E05               	movwf	??__read_value_from_offset& (0+255),c
  9546  006874  0E00               	movlw	0
  9547  006876  2002               	addwfc	__read_value_from_offset@offset+1,w,c
  9548  006878  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
  9549  00687A  5005               	movf	??__read_value_from_offset,w,c
  9550  00687C  2403               	addwf	__read_value_from_offset@buffer,w,c
  9551  00687E  6ED9               	movwf	fsr2l,c
  9552  006880  5006               	movf	??__read_value_from_offset+1,w,c
  9553  006882  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
  9554  006884  6EDA               	movwf	fsr2h,c
  9555  006886  50DF               	movf	indf2,w,c
  9556  006888  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
  9557  00688A  5007               	movf	??__read_value_from_offset+2,w,c
  9558  00688C  6E08               	movwf	__read_value_from_offset@value,c
  9559  00688E  6A09               	clrf	__read_value_from_offset@value+1,c
  9560                           
  9561                           ;fat16.c: 118: value <<= 8;
  9562  006890  5008               	movf	__read_value_from_offset@value,w,c
  9563  006892  6E09               	movwf	__read_value_from_offset@value+1,c
  9564  006894  6A08               	clrf	__read_value_from_offset@value,c
  9565                           
  9566                           ;fat16.c: 119: value |= buffer[offset];
  9567  006896  5001               	movf	__read_value_from_offset@offset,w,c
  9568  006898  2403               	addwf	__read_value_from_offset@buffer,w,c
  9569  00689A  6ED9               	movwf	fsr2l,c
  9570  00689C  5002               	movf	__read_value_from_offset@offset+1,w,c
  9571  00689E  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
  9572  0068A0  6EDA               	movwf	fsr2h,c
  9573  0068A2  50DF               	movf	indf2,w,c
  9574  0068A4  6E05               	movwf	??__read_value_from_offset& (0+255),c
  9575  0068A6  5005               	movf	??__read_value_from_offset,w,c
  9576  0068A8  1208               	iorwf	__read_value_from_offset@value,f,c
  9577                           
  9578                           ;fat16.c: 120: return value;
  9579  0068AA  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
  9580  0068AE  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
  9581  0068B2  0012               	return	
  9582  0068B4                     __end_of__read_value_from_offset:
  9583                           	opt stack 0
  9584                           tblptru	equ	0xFF8
  9585                           tblptrh	equ	0xFF7
  9586                           tblptrl	equ	0xFF6
  9587                           tablat	equ	0xFF5
  9588                           prodh	equ	0xFF4
  9589                           prodl	equ	0xFF3
  9590                           intcon	equ	0xFF2
  9591                           intcon2	equ	0xFF1
  9592                           intcon3	equ	0xFF0
  9593                           postinc0	equ	0xFEE
  9594                           wreg	equ	0xFE8
  9595                           indf1	equ	0xFE7
  9596                           postdec1	equ	0xFE5
  9597                           plusw1	equ	0xFE3
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           indf2	equ	0xFDF
  9601                           postinc2	equ	0xFDE
  9602                           postdec2	equ	0xFDD
  9603                           plusw2	equ	0xFDB
  9604                           fsr2h	equ	0xFDA
  9605                           fsr2l	equ	0xFD9
  9606                           status	equ	0xFD8
  9607                           
  9608 ;; *************** function __read_fat *****************
  9609 ;; Defined at:
  9610 ;;		line 456 in file "fat16.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;  cluster         2   47[COMRAM] unsigned int 
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;  value           2   53[COMRAM] unsigned int 
  9615 ;;  offset          2   51[COMRAM] unsigned int 
  9616 ;;  sector          2   49[COMRAM] unsigned int 
  9617 ;; Return value:  Size  Location     Type
  9618 ;;                  2   47[COMRAM] unsigned int 
  9619 ;; Registers used:
  9620 ;;		wreg, status,2, status,0, cstack
  9621 ;; Tracked objects:
  9622 ;;		On entry : 0/0
  9623 ;;		On exit  : 0/0
  9624 ;;		Unchanged: 0/0
  9625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9627 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9629 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;Total ram usage:        8 bytes
  9631 ;; Hardware stack levels used:    1
  9632 ;; Hardware stack levels required when called:    5
  9633 ;; This function calls:
  9634 ;;		__fat_offset_from_cluster
  9635 ;;		__fat_sector_from_cluster
  9636 ;;		_flash_partial_read
  9637 ;; This function is called by:
  9638 ;;		__find_nth_cluster
  9639 ;;		_fat_read_from_file_fast
  9640 ;;		_fat_modify_file
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text41
  9645  00644A                     __ptext41:
  9646                           	opt stack 0
  9647  00644A                     __read_fat:
  9648                           	opt stack 22
  9649                           
  9650                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
  9651                           
  9652                           ;incstack = 0
  9653  00644A  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
  9654  00644E  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
  9655  006452  EC3A  F038         	call	__fat_sector_from_cluster	;wreg free
  9656  006456  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
  9657  00645A  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
  9658                           
  9659                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
  9660  00645E  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
  9661  006462  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
  9662  006466  EC46  F038         	call	__fat_offset_from_cluster	;wreg free
  9663  00646A  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
  9664  00646E  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
  9665                           
  9666                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
  9667  006472  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
  9668  006476  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
  9669  00647A  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
  9670  00647E  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
  9671  006482  0E00               	movlw	0
  9672  006484  6E2D               	movwf	flash_partial_read@length+1,c
  9673  006486  0E02               	movlw	2
  9674  006488  6E2C               	movwf	flash_partial_read@length,c
  9675  00648A  0E36               	movlw	low __read_fat@value
  9676  00648C  6E2E               	movwf	flash_partial_read@data,c
  9677  00648E  0E00               	movlw	high __read_fat@value
  9678  006490  6E2F               	movwf	flash_partial_read@data+1,c
  9679  006492  EC43  F037         	call	_flash_partial_read	;wreg free
  9680                           
  9681                           ;fat16.c: 470: return value;
  9682  006496  C036  F030         	movff	__read_fat@value,?__read_fat
  9683  00649A  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
  9684  00649E  0012               	return	
  9685  0064A0                     __end_of__read_fat:
  9686                           	opt stack 0
  9687                           tblptru	equ	0xFF8
  9688                           tblptrh	equ	0xFF7
  9689                           tblptrl	equ	0xFF6
  9690                           tablat	equ	0xFF5
  9691                           prodh	equ	0xFF4
  9692                           prodl	equ	0xFF3
  9693                           intcon	equ	0xFF2
  9694                           intcon2	equ	0xFF1
  9695                           intcon3	equ	0xFF0
  9696                           postinc0	equ	0xFEE
  9697                           wreg	equ	0xFE8
  9698                           indf1	equ	0xFE7
  9699                           postdec1	equ	0xFE5
  9700                           plusw1	equ	0xFE3
  9701                           fsr1h	equ	0xFE2
  9702                           fsr1l	equ	0xFE1
  9703                           indf2	equ	0xFDF
  9704                           postinc2	equ	0xFDE
  9705                           postdec2	equ	0xFDD
  9706                           plusw2	equ	0xFDB
  9707                           fsr2h	equ	0xFDA
  9708                           fsr2l	equ	0xFD9
  9709                           status	equ	0xFD8
  9710                           
  9711 ;; *************** function __fat_sector_from_cluster *****************
  9712 ;; Defined at:
  9713 ;;		line 75 in file "fat16.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  cluster         2    0[COMRAM] unsigned int 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;		None
  9718 ;; Return value:  Size  Location     Type
  9719 ;;                  2    0[COMRAM] unsigned int 
  9720 ;; Registers used:
  9721 ;;		wreg, status,2, status,0
  9722 ;; Tracked objects:
  9723 ;;		On entry : 0/0
  9724 ;;		On exit  : 0/0
  9725 ;;		Unchanged: 0/0
  9726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9731 ;;Total ram usage:        2 bytes
  9732 ;; Hardware stack levels used:    1
  9733 ;; This function calls:
  9734 ;;		Nothing
  9735 ;; This function is called by:
  9736 ;;		__find_nth_cluster
  9737 ;;		__read_fat
  9738 ;;		__make_cluster_chain
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text42
  9743  007074                     __ptext42:
  9744                           	opt stack 0
  9745  007074                     __fat_sector_from_cluster:
  9746                           	opt stack 26
  9747                           
  9748                           ;fat16.c: 77: cluster >>= 8;
  9749                           
  9750                           ;incstack = 0
  9751  007074  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
  9752  007076  6E01               	movwf	__fat_sector_from_cluster@cluster,c
  9753  007078  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
  9754                           
  9755                           ;fat16.c: 78: cluster += 2;
  9756  00707A  0E02               	movlw	2
  9757  00707C  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
  9758  00707E  0E00               	movlw	0
  9759  007080  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
  9760                           
  9761                           ;fat16.c: 79: return cluster;
  9762  007082  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
  9763  007086  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
  9764  00708A  0012               	return	
  9765  00708C                     __end_of__fat_sector_from_cluster:
  9766                           	opt stack 0
  9767                           tblptru	equ	0xFF8
  9768                           tblptrh	equ	0xFF7
  9769                           tblptrl	equ	0xFF6
  9770                           tablat	equ	0xFF5
  9771                           prodh	equ	0xFF4
  9772                           prodl	equ	0xFF3
  9773                           intcon	equ	0xFF2
  9774                           intcon2	equ	0xFF1
  9775                           intcon3	equ	0xFF0
  9776                           postinc0	equ	0xFEE
  9777                           wreg	equ	0xFE8
  9778                           indf1	equ	0xFE7
  9779                           postdec1	equ	0xFE5
  9780                           plusw1	equ	0xFE3
  9781                           fsr1h	equ	0xFE2
  9782                           fsr1l	equ	0xFE1
  9783                           indf2	equ	0xFDF
  9784                           postinc2	equ	0xFDE
  9785                           postdec2	equ	0xFDD
  9786                           plusw2	equ	0xFDB
  9787                           fsr2h	equ	0xFDA
  9788                           fsr2l	equ	0xFD9
  9789                           status	equ	0xFD8
  9790                           
  9791 ;; *************** function __fat_offset_from_cluster *****************
  9792 ;; Defined at:
  9793 ;;		line 82 in file "fat16.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  cluster         2    0[COMRAM] unsigned int 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  2    0[COMRAM] unsigned int 
  9800 ;; Registers used:
  9801 ;;		wreg, status,2, status,0
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9811 ;;Total ram usage:        2 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		__find_nth_cluster
  9817 ;;		__read_fat
  9818 ;;		__make_cluster_chain
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text43
  9823  00708C                     __ptext43:
  9824                           	opt stack 0
  9825  00708C                     __fat_offset_from_cluster:
  9826                           	opt stack 26
  9827                           
  9828                           ;fat16.c: 84: cluster &= 0xFF;
  9829                           
  9830                           ;incstack = 0
  9831  00708C  0EFF               	movlw	255
  9832  00708E  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
  9833  007090  0E00               	movlw	0
  9834  007092  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
  9835                           
  9836                           ;fat16.c: 85: cluster <<= 1;
  9837  007094  90D8               	bcf	status,0,c
  9838  007096  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
  9839  007098  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
  9840                           
  9841                           ;fat16.c: 86: return cluster;
  9842  00709A  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
  9843  00709E  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
  9844  0070A2  0012               	return	
  9845  0070A4                     __end_of__fat_offset_from_cluster:
  9846                           	opt stack 0
  9847                           tblptru	equ	0xFF8
  9848                           tblptrh	equ	0xFF7
  9849                           tblptrl	equ	0xFF6
  9850                           tablat	equ	0xFF5
  9851                           prodh	equ	0xFF4
  9852                           prodl	equ	0xFF3
  9853                           intcon	equ	0xFF2
  9854                           intcon2	equ	0xFF1
  9855                           intcon3	equ	0xFF0
  9856                           postinc0	equ	0xFEE
  9857                           wreg	equ	0xFE8
  9858                           indf1	equ	0xFE7
  9859                           postdec1	equ	0xFE5
  9860                           plusw1	equ	0xFE3
  9861                           fsr1h	equ	0xFE2
  9862                           fsr1l	equ	0xFE1
  9863                           indf2	equ	0xFDF
  9864                           postinc2	equ	0xFDE
  9865                           postdec2	equ	0xFDD
  9866                           plusw2	equ	0xFDB
  9867                           fsr2h	equ	0xFDA
  9868                           fsr2l	equ	0xFD9
  9869                           status	equ	0xFD8
  9870                           
  9871 ;; *************** function __data_sector_from_cluster *****************
  9872 ;; Defined at:
  9873 ;;		line 70 in file "fat16.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  fat_cluster     2    0[COMRAM] unsigned int 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  2    0[COMRAM] unsigned int 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;Total ram usage:        2 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; This function calls:
  9894 ;;		Nothing
  9895 ;; This function is called by:
  9896 ;;		_fat_read_from_file_fast
  9897 ;;		_fat_modify_file
  9898 ;;		_fat_copy_sector_to_buffer
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           	psect	text44
  9903  007186                     __ptext44:
  9904                           	opt stack 0
  9905  007186                     __data_sector_from_cluster:
  9906                           	opt stack 27
  9907                           
  9908                           ;fat16.c: 72: return fat_cluster + 38 - 2;
  9909                           
  9910                           ;incstack = 0
  9911  007186  0E24               	movlw	36
  9912  007188  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
  9913  00718A  6E01               	movwf	?__data_sector_from_cluster,c
  9914  00718C  0E00               	movlw	0
  9915  00718E  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
  9916  007190  6E02               	movwf	?__data_sector_from_cluster+1,c
  9917  007192  0012               	return	
  9918  007194                     __end_of__data_sector_from_cluster:
  9919                           	opt stack 0
  9920                           tblptru	equ	0xFF8
  9921                           tblptrh	equ	0xFF7
  9922                           tblptrl	equ	0xFF6
  9923                           tablat	equ	0xFF5
  9924                           prodh	equ	0xFF4
  9925                           prodl	equ	0xFF3
  9926                           intcon	equ	0xFF2
  9927                           intcon2	equ	0xFF1
  9928                           intcon3	equ	0xFF0
  9929                           postinc0	equ	0xFEE
  9930                           wreg	equ	0xFE8
  9931                           indf1	equ	0xFE7
  9932                           postdec1	equ	0xFE5
  9933                           plusw1	equ	0xFE3
  9934                           fsr1h	equ	0xFE2
  9935                           fsr1l	equ	0xFE1
  9936                           indf2	equ	0xFDF
  9937                           postinc2	equ	0xFDE
  9938                           postdec2	equ	0xFDD
  9939                           plusw2	equ	0xFDB
  9940                           fsr2h	equ	0xFDA
  9941                           fsr2l	equ	0xFD9
  9942                           status	equ	0xFD8
  9943                           
  9944 ;; *************** function _fat_get_file_information *****************
  9945 ;; Defined at:
  9946 ;;		line 1391 in file "fat16.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  file_number     1    wreg     unsigned char 
  9949 ;;  data            2   47[COMRAM] PTR struct .
  9950 ;;		 -> _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@root(32), fat_resize_file@root(3
      +2), 
  9951 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), 
  9952 ;; Auto vars:     Size  Location     Type
  9953 ;;  file_number     1   54[COMRAM] unsigned char 
  9954 ;;  offset          2   52[COMRAM] unsigned int 
  9955 ;;  root_sector     2   50[COMRAM] unsigned int 
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      unsigned char 
  9958 ;; Registers used:
  9959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9966 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9968 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9969 ;;Total ram usage:        8 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:    5
  9972 ;; This function calls:
  9973 ;;		__offset_from_file_number
  9974 ;;		__sector_from_file_number
  9975 ;;		_flash_partial_read
  9976 ;; This function is called by:
  9977 ;;		__bootloader_verify_file
  9978 ;;		__bootloader_program
  9979 ;;		_fat_rename_file
  9980 ;;		_fat_read_from_file
  9981 ;;		_fat_resize_file
  9982 ;;		_fat_modify_file
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text45
  9987  005DAA                     __ptext45:
  9988                           	opt stack 0
  9989  005DAA                     _fat_get_file_information:
  9990                           	opt stack 23
  9991                           
  9992                           ;incstack = 0
  9993                           ;fat_get_file_information@file_number stored from wreg
  9994  005DAA  6E37               	movwf	fat_get_file_information@file_number,c
  9995                           
  9996                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
  9997  005DAC  0E3F               	movlw	63
  9998  005DAE  6437               	cpfsgt	fat_get_file_information@file_number,c
  9999  005DB0  D002               	goto	l2279
 10000                           
 10001                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 10002  005DB2  0E01               	movlw	1
 10003  005DB4  0012               	return	
 10004  005DB6                     l2279:
 10005                           
 10006                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 10007  005DB6  5037               	movf	fat_get_file_information@file_number,w,c
 10008  005DB8  ECC4  F036         	call	__sector_from_file_number
 10009  005DBC  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 10010  005DC0  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 10011                           
 10012                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 10013  005DC4  5037               	movf	fat_get_file_information@file_number,w,c
 10014  005DC6  EC56  F037         	call	__offset_from_file_number
 10015  005DCA  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 10016  005DCE  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 10017                           
 10018                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 10019  005DD2  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 10020  005DD6  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 10021  005DDA  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 10022  005DDE  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 10023  005DE2  0E00               	movlw	0
 10024  005DE4  6E2D               	movwf	flash_partial_read@length+1,c
 10025  005DE6  0E20               	movlw	32
 10026  005DE8  6E2C               	movwf	flash_partial_read@length,c
 10027  005DEA  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 10028  005DEE  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 10029  005DF2  EC43  F037         	call	_flash_partial_read	;wreg free
 10030                           
 10031                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 10032  005DF6  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10033  005DFA  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10034  005DFE  50DF               	movf	indf2,w,c
 10035  005E00  B4D8               	btfsc	status,2,c
 10036  005E02  D008               	goto	u10190
 10037  005E04  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10038  005E08  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10039  005E0C  0EE5               	movlw	229
 10040  005E0E  18DE               	xorwf	postinc2,w,c
 10041  005E10  A4D8               	btfss	status,2,c
 10042  005E12  D002               	goto	l2281
 10043  005E14                     u10190:
 10044                           
 10045                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 10046  005E14  0E02               	movlw	2
 10047  005E16  0012               	return	
 10048  005E18                     l2281:
 10049                           
 10050                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 10051  005E18  0E00               	movlw	0
 10052  005E1A  0012               	return	
 10053  005E1C                     __end_of_fat_get_file_information:
 10054                           	opt stack 0
 10055                           tblptru	equ	0xFF8
 10056                           tblptrh	equ	0xFF7
 10057                           tblptrl	equ	0xFF6
 10058                           tablat	equ	0xFF5
 10059                           prodh	equ	0xFF4
 10060                           prodl	equ	0xFF3
 10061                           intcon	equ	0xFF2
 10062                           intcon2	equ	0xFF1
 10063                           intcon3	equ	0xFF0
 10064                           postinc0	equ	0xFEE
 10065                           wreg	equ	0xFE8
 10066                           indf1	equ	0xFE7
 10067                           postdec1	equ	0xFE5
 10068                           plusw1	equ	0xFE3
 10069                           fsr1h	equ	0xFE2
 10070                           fsr1l	equ	0xFE1
 10071                           indf2	equ	0xFDF
 10072                           postinc2	equ	0xFDE
 10073                           postdec2	equ	0xFDD
 10074                           plusw2	equ	0xFDB
 10075                           fsr2h	equ	0xFDA
 10076                           fsr2l	equ	0xFD9
 10077                           status	equ	0xFD8
 10078                           
 10079 ;; *************** function __bootloader_check_address *****************
 10080 ;; Defined at:
 10081 ;;		line 112 in file "bootloader.c"
 10082 ;; Parameters:    Size  Location     Type
 10083 ;;  address         4    0[COMRAM] unsigned long 
 10084 ;;  dataLength      1    4[COMRAM] unsigned char 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  cntr            1   11[COMRAM] unsigned char 
 10087 ;;  byte_status     1   10[COMRAM] enum E6959
 10088 ;;  worst_case      1    9[COMRAM] enum E6959
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  1    wreg      enum E6959
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, status,0
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10098 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10099 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10101 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10102 ;;Total ram usage:       12 bytes
 10103 ;; Hardware stack levels used:    1
 10104 ;; This function calls:
 10105 ;;		Nothing
 10106 ;; This function is called by:
 10107 ;;		__bootloader_verify_file
 10108 ;;		__bootloader_program
 10109 ;; This function uses a non-reentrant model
 10110 ;;
 10111                           
 10112                           	psect	text46
 10113  004964                     __ptext46:
 10114                           	opt stack 0
 10115  004964                     __bootloader_check_address:
 10116                           	opt stack 28
 10117                           
 10118                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10119                           
 10120                           ;incstack = 0
 10121  004964  0E00               	movlw	0
 10122  004966  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10123                           
 10124                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10125  004968  0E00               	movlw	0
 10126  00496A  6E0C               	movwf	__bootloader_check_address@cntr,c
 10127  00496C  D062               	goto	l2420
 10128  00496E                     
 10129                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 10130  00496E  500C               	movf	__bootloader_check_address@cntr,w,c
 10131  004970  2401               	addwf	__bootloader_check_address@address,w,c
 10132  004972  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10133  004974  0E00               	movlw	0
 10134  004976  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10135  004978  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10136  00497A  0E00               	movlw	0
 10137  00497C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10138  00497E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10139  004980  0E00               	movlw	0
 10140  004982  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10141  004984  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10142  004986  5009               	movf	??__bootloader_check_address+3,w,c
 10143  004988  1008               	iorwf	??__bootloader_check_address+2,w,c
 10144  00498A  E104               	bnz	u10410
 10145  00498C  0E90               	movlw	144
 10146  00498E  5C07               	subwf	??__bootloader_check_address+1,w,c
 10147  004990  A0D8               	btfss	status,0,c
 10148  004992  D018               	goto	l2422
 10149  004994                     u10410:
 10150  004994  500C               	movf	__bootloader_check_address@cntr,w,c
 10151  004996  2401               	addwf	__bootloader_check_address@address,w,c
 10152  004998  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10153  00499A  0E00               	movlw	0
 10154  00499C  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10155  00499E  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10156  0049A0  0E00               	movlw	0
 10157  0049A2  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10158  0049A4  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10159  0049A6  0E00               	movlw	0
 10160  0049A8  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10161  0049AA  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10162  0049AC  5009               	movf	??__bootloader_check_address+3,w,c
 10163  0049AE  E10A               	bnz	l13036
 10164  0049B0  0EF8               	movlw	248
 10165  0049B2  5C06               	subwf	??__bootloader_check_address,w,c
 10166  0049B4  0EFF               	movlw	255
 10167  0049B6  5807               	subwfb	??__bootloader_check_address+1,w,c
 10168  0049B8  0E01               	movlw	1
 10169  0049BA  5808               	subwfb	??__bootloader_check_address+2,w,c
 10170  0049BC  B0D8               	btfsc	status,0,c
 10171  0049BE  D002               	goto	l2422
 10172                           
 10173                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10174  0049C0  0E00               	movlw	0
 10175  0049C2  D029               	goto	L4
 10176  0049C4                     l2422:
 10177  0049C4                     l13036:
 10178                           
 10179                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10180  0049C4  500C               	movf	__bootloader_check_address@cntr,w,c
 10181  0049C6  2401               	addwf	__bootloader_check_address@address,w,c
 10182  0049C8  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10183  0049CA  0E00               	movlw	0
 10184  0049CC  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10185  0049CE  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10186  0049D0  0E00               	movlw	0
 10187  0049D2  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10188  0049D4  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10189  0049D6  0E00               	movlw	0
 10190  0049D8  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10191  0049DA  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10192  0049DC  5009               	movf	??__bootloader_check_address+3,w,c
 10193  0049DE  E108               	bnz	u10430
 10194  0049E0  0EF8               	movlw	248
 10195  0049E2  5C06               	subwf	??__bootloader_check_address,w,c
 10196  0049E4  0EFF               	movlw	255
 10197  0049E6  5807               	subwfb	??__bootloader_check_address+1,w,c
 10198  0049E8  0E01               	movlw	1
 10199  0049EA  5808               	subwfb	??__bootloader_check_address+2,w,c
 10200  0049EC  A0D8               	btfss	status,0,c
 10201  0049EE  D015               	goto	l2424
 10202  0049F0                     u10430:
 10203  0049F0  500C               	movf	__bootloader_check_address@cntr,w,c
 10204  0049F2  2401               	addwf	__bootloader_check_address@address,w,c
 10205  0049F4  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10206  0049F6  0E00               	movlw	0
 10207  0049F8  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10208  0049FA  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10209  0049FC  0E00               	movlw	0
 10210  0049FE  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10211  004A00  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10212  004A02  0E00               	movlw	0
 10213  004A04  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10214  004A06  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10215  004A08  5009               	movf	??__bootloader_check_address+3,w,c
 10216  004A0A  E107               	bnz	l2424
 10217  004A0C  0E02               	movlw	2
 10218  004A0E  5C08               	subwf	??__bootloader_check_address+2,w,c
 10219  004A10  B0D8               	btfsc	status,0,c
 10220  004A12  D003               	goto	l2424
 10221                           
 10222                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10223  004A14  0E01               	movlw	1
 10224  004A16                     L4:
 10225  004A16  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10226                           
 10227                           ;bootloader.c: 133: }
 10228  004A18  D001               	goto	l2425
 10229  004A1A                     l2424:
 10230                           
 10231                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10232  004A1A  680B               	setf	__bootloader_check_address@byte_status,c
 10233  004A1C                     l2425:
 10234                           
 10235                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10236  004A1C  280B               	incf	__bootloader_check_address@byte_status,w,c
 10237  004A1E  A4D8               	btfss	status,2,c
 10238  004A20  D002               	goto	l2426
 10239                           
 10240                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10241  004A22  0EFF               	movlw	255
 10242  004A24  0012               	return	
 10243  004A26                     l2426:
 10244                           
 10245                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10246  004A26  500B               	movf	__bootloader_check_address@byte_status,w,c
 10247  004A28  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10248  004A2A  A0D8               	btfss	status,0,c
 10249                           
 10250                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10251  004A2C  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10252  004A30  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10253  004A32                     l2420:
 10254  004A32  5005               	movf	__bootloader_check_address@dataLength,w,c
 10255  004A34  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10256  004A36  A0D8               	btfss	status,0,c
 10257  004A38  D79A               	goto	l2421
 10258                           
 10259                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10260  004A3A  500A               	movf	__bootloader_check_address@worst_case,w,c
 10261  004A3C  0012               	return	
 10262  004A3E                     __end_of__bootloader_check_address:
 10263                           	opt stack 0
 10264                           tblptru	equ	0xFF8
 10265                           tblptrh	equ	0xFF7
 10266                           tblptrl	equ	0xFF6
 10267                           tablat	equ	0xFF5
 10268                           prodh	equ	0xFF4
 10269                           prodl	equ	0xFF3
 10270                           intcon	equ	0xFF2
 10271                           intcon2	equ	0xFF1
 10272                           intcon3	equ	0xFF0
 10273                           postinc0	equ	0xFEE
 10274                           wreg	equ	0xFE8
 10275                           indf1	equ	0xFE7
 10276                           postdec1	equ	0xFE5
 10277                           plusw1	equ	0xFE3
 10278                           fsr1h	equ	0xFE2
 10279                           fsr1l	equ	0xFE1
 10280                           indf2	equ	0xFDF
 10281                           postinc2	equ	0xFDE
 10282                           postdec2	equ	0xFDD
 10283                           plusw2	equ	0xFDB
 10284                           fsr2h	equ	0xFDA
 10285                           fsr2l	equ	0xFD9
 10286                           status	equ	0xFD8
 10287                           
 10288 ;; *************** function __bootloader_find_file *****************
 10289 ;; Defined at:
 10290 ;;		line 155 in file "bootloader.c"
 10291 ;; Parameters:    Size  Location     Type
 10292 ;;		None
 10293 ;; Auto vars:     Size  Location     Type
 10294 ;;		None
 10295 ;; Return value:  Size  Location     Type
 10296 ;;                  1    wreg      void 
 10297 ;; Registers used:
 10298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10299 ;; Tracked objects:
 10300 ;;		On entry : 0/0
 10301 ;;		On exit  : 0/0
 10302 ;;		Unchanged: 0/0
 10303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10308 ;;Total ram usage:        0 bytes
 10309 ;; Hardware stack levels used:    1
 10310 ;; Hardware stack levels required when called:    7
 10311 ;; This function calls:
 10312 ;;		_fat_find_file
 10313 ;;		_fat_get_file_size
 10314 ;; This function is called by:
 10315 ;;		_bootloader_run
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           	psect	text47
 10320  005438                     __ptext47:
 10321                           	opt stack 0
 10322  005438                     __bootloader_find_file:
 10323                           	opt stack 22
 10324                           
 10325                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10326                           
 10327                           ;incstack = 0
 10328  005438  0EB6               	movlw	low _bootloader_filename
 10329  00543A  6E2C               	movwf	fat_find_file@name,c
 10330  00543C  0E8F               	movlw	high _bootloader_filename
 10331  00543E  6E2D               	movwf	fat_find_file@name+1,c
 10332  005440  0EC7               	movlw	low _bootloader_extension
 10333  005442  6E2E               	movwf	fat_find_file@extension,c
 10334  005444  0E8F               	movlw	high _bootloader_extension
 10335  005446  6E2F               	movwf	fat_find_file@extension+1,c
 10336  005448  EC86  F022         	call	_fat_find_file	;wreg free
 10337  00544C  0100               	movlb	0	; () banked
 10338  00544E  6FFF               	movwf	_file_number& (0+255),b
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;bootloader.c: 161: if(file_number!=0xFF)
 10342  005450  29FF               	incf	_file_number& (0+255),w,b
 10343  005452  B4D8               	btfsc	status,2,c
 10344  005454  D034               	goto	l2432
 10345                           
 10346                           ; BSR set to: 0
 10347                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 10348  005456  51FF               	movf	_file_number& (0+255),w,b
 10349  005458  EC46  F02F         	call	_fat_get_file_size
 10350  00545C  C036  F07F         	movff	?_fat_get_file_size,_hex_file_size
 10351  005460  C037  F080         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10352  005464  C038  F081         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10353  005468  C039  F082         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10354                           
 10355                           ;bootloader.c: 166: hex_file_entries = 0;
 10356  00546C  0E00               	movlw	0
 10357  00546E  0101               	movlb	1	; () banked
 10358  005470  6F64               	movwf	(_hex_file_entries+1)& (0+255),b
 10359  005472  0E00               	movlw	0
 10360  005474  6F63               	movwf	_hex_file_entries& (0+255),b
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;bootloader.c: 167: hex_file_offset = 0;
 10364  005476  0E00               	movlw	0
 10365  005478  0100               	movlb	0	; () banked
 10366  00547A  6F83               	movwf	_hex_file_offset& (0+255),b
 10367  00547C  0E00               	movlw	0
 10368  00547E  6F84               	movwf	(_hex_file_offset+1)& (0+255),b
 10369  005480  0E00               	movlw	0
 10370  005482  6F85               	movwf	(_hex_file_offset+2)& (0+255),b
 10371  005484  0E00               	movlw	0
 10372  005486  6F86               	movwf	(_hex_file_offset+3)& (0+255),b
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 10376  005488  0101               	movlb	1	; () banked
 10377  00548A  6941               	setf	_file_minimum_address& (0+255),b
 10378  00548C  6942               	setf	(_file_minimum_address+1)& (0+255),b
 10379  00548E  6943               	setf	(_file_minimum_address+2)& (0+255),b
 10380  005490  6944               	setf	(_file_minimum_address+3)& (0+255),b
 10381                           
 10382                           ; BSR set to: 1
 10383                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 10384  005492  0E00               	movlw	0
 10385  005494  6F3D               	movwf	_file_maximum_address& (0+255),b
 10386  005496  0E00               	movlw	0
 10387  005498  6F3E               	movwf	(_file_maximum_address+1)& (0+255),b
 10388  00549A  0E00               	movlw	0
 10389  00549C  6F3F               	movwf	(_file_maximum_address+2)& (0+255),b
 10390  00549E  0E00               	movlw	0
 10391  0054A0  6F40               	movwf	(_file_maximum_address+3)& (0+255),b
 10392                           
 10393                           ; BSR set to: 1
 10394                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 10395  0054A2  0E00               	movlw	0
 10396  0054A4  6F39               	movwf	_extended_linear_address& (0+255),b
 10397  0054A6  0E00               	movlw	0
 10398  0054A8  6F3A               	movwf	(_extended_linear_address+1)& (0+255),b
 10399  0054AA  0E00               	movlw	0
 10400  0054AC  6F3B               	movwf	(_extended_linear_address+2)& (0+255),b
 10401  0054AE  0E00               	movlw	0
 10402  0054B0  6F3C               	movwf	(_extended_linear_address+3)& (0+255),b
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10406  0054B2  0E20               	movlw	32
 10407  0054B4  0100               	movlb	0	; () banked
 10408  0054B6  6F64               	movwf	(_os+4)& (0+255),b
 10409                           
 10410                           ; BSR set to: 0
 10411                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10412  0054B8  0E20               	movlw	32
 10413  0054BA  6F65               	movwf	(_os+5)& (0+255),b
 10414                           
 10415                           ;bootloader.c: 173: }
 10416  0054BC  0012               	return	
 10417  0054BE                     l2432:
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 10421                           
 10422                           ; BSR set to: 0
 10423  0054BE  0E00               	movlw	0
 10424  0054C0  6F7F               	movwf	_hex_file_size& (0+255),b
 10425  0054C2  0E00               	movlw	0
 10426  0054C4  6F80               	movwf	(_hex_file_size+1)& (0+255),b
 10427  0054C6  0E00               	movlw	0
 10428  0054C8  6F81               	movwf	(_hex_file_size+2)& (0+255),b
 10429  0054CA  0E00               	movlw	0
 10430  0054CC  6F82               	movwf	(_hex_file_size+3)& (0+255),b
 10431                           
 10432                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10433  0054CE  0E10               	movlw	16
 10434  0054D0  6F64               	movwf	(_os+4)& (0+255),b
 10435                           
 10436                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10437  0054D2  0E10               	movlw	16
 10438  0054D4  6F65               	movwf	(_os+5)& (0+255),b
 10439  0054D6  0012               	return	
 10440  0054D8                     __end_of__bootloader_find_file:
 10441                           	opt stack 0
 10442                           tblptru	equ	0xFF8
 10443                           tblptrh	equ	0xFF7
 10444                           tblptrl	equ	0xFF6
 10445                           tablat	equ	0xFF5
 10446                           prodh	equ	0xFF4
 10447                           prodl	equ	0xFF3
 10448                           intcon	equ	0xFF2
 10449                           intcon2	equ	0xFF1
 10450                           intcon3	equ	0xFF0
 10451                           postinc0	equ	0xFEE
 10452                           wreg	equ	0xFE8
 10453                           indf1	equ	0xFE7
 10454                           postdec1	equ	0xFE5
 10455                           plusw1	equ	0xFE3
 10456                           fsr1h	equ	0xFE2
 10457                           fsr1l	equ	0xFE1
 10458                           indf2	equ	0xFDF
 10459                           postinc2	equ	0xFDE
 10460                           postdec2	equ	0xFDD
 10461                           plusw2	equ	0xFDB
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function _fat_get_file_size *****************
 10467 ;; Defined at:
 10468 ;;		line 562 in file "fat16.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  file_number     1    wreg     unsigned char 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;  file_number     1   65[COMRAM] unsigned char 
 10473 ;;  file_size       4   61[COMRAM] unsigned long 
 10474 ;;  offset          2   59[COMRAM] unsigned int 
 10475 ;;  sector          2   57[COMRAM] unsigned int 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  4   53[COMRAM] unsigned long 
 10478 ;; Registers used:
 10479 ;;		wreg, status,2, status,0, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10486 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10488 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10489 ;;Total ram usage:       13 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    6
 10492 ;; This function calls:
 10493 ;;		__offset_from_file_number
 10494 ;;		__root_is_available
 10495 ;;		__sector_from_file_number
 10496 ;;		_flash_partial_read
 10497 ;; This function is called by:
 10498 ;;		__bootloader_find_file
 10499 ;;		__bootloader_verify_file
 10500 ;;		_fat_append_to_file
 10501 ;;		_fat_copy_file
 10502 ;;		_fat_copy_sector_to_buffer
 10503 ;;		_fat_write_sector_from_buffer
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text48
 10508  005E8C                     __ptext48:
 10509                           	opt stack 0
 10510  005E8C                     _fat_get_file_size:
 10511                           	opt stack 22
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;incstack = 0
 10515                           ;fat_get_file_size@file_number stored from wreg
 10516  005E8C  6E42               	movwf	fat_get_file_size@file_number,c
 10517                           
 10518                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 10519  005E8E  5042               	movf	fat_get_file_size@file_number,w,c
 10520  005E90  EC82  F030         	call	__root_is_available
 10521  005E94  0900               	iorlw	0
 10522  005E96  B4D8               	btfsc	status,2,c
 10523  005E98  D005               	goto	l2046
 10524                           
 10525                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 10526  005E9A  6836               	setf	?_fat_get_file_size,c
 10527  005E9C  6837               	setf	?_fat_get_file_size+1,c
 10528  005E9E  6838               	setf	?_fat_get_file_size+2,c
 10529  005EA0  6839               	setf	?_fat_get_file_size+3,c
 10530  005EA2  0012               	return	
 10531  005EA4                     l2046:
 10532                           
 10533                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 10534  005EA4  5042               	movf	fat_get_file_size@file_number,w,c
 10535  005EA6  ECC4  F036         	call	__sector_from_file_number
 10536  005EAA  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 10537  005EAE  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 10538                           
 10539                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 10540  005EB2  5042               	movf	fat_get_file_size@file_number,w,c
 10541  005EB4  EC56  F037         	call	__offset_from_file_number
 10542  005EB8  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 10543  005EBC  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 10544                           
 10545                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 10546  005EC0  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 10547  005EC4  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 10548  005EC8  0E1C               	movlw	28
 10549  005ECA  243C               	addwf	fat_get_file_size@offset,w,c
 10550  005ECC  6E2A               	movwf	flash_partial_read@start,c
 10551  005ECE  0E00               	movlw	0
 10552  005ED0  203D               	addwfc	fat_get_file_size@offset+1,w,c
 10553  005ED2  6E2B               	movwf	flash_partial_read@start+1,c
 10554  005ED4  0E00               	movlw	0
 10555  005ED6  6E2D               	movwf	flash_partial_read@length+1,c
 10556  005ED8  0E04               	movlw	4
 10557  005EDA  6E2C               	movwf	flash_partial_read@length,c
 10558  005EDC  0E3E               	movlw	low fat_get_file_size@file_size
 10559  005EDE  6E2E               	movwf	flash_partial_read@data,c
 10560  005EE0  0E00               	movlw	high fat_get_file_size@file_size
 10561  005EE2  6E2F               	movwf	flash_partial_read@data+1,c
 10562  005EE4  EC43  F037         	call	_flash_partial_read	;wreg free
 10563                           
 10564                           ;fat16.c: 583: return file_size;
 10565  005EE8  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 10566  005EEC  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 10567  005EF0  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 10568  005EF4  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 10569  005EF8  0012               	return	
 10570  005EFA                     __end_of_fat_get_file_size:
 10571                           	opt stack 0
 10572                           tblptru	equ	0xFF8
 10573                           tblptrh	equ	0xFF7
 10574                           tblptrl	equ	0xFF6
 10575                           tablat	equ	0xFF5
 10576                           prodh	equ	0xFF4
 10577                           prodl	equ	0xFF3
 10578                           intcon	equ	0xFF2
 10579                           intcon2	equ	0xFF1
 10580                           intcon3	equ	0xFF0
 10581                           postinc0	equ	0xFEE
 10582                           wreg	equ	0xFE8
 10583                           indf1	equ	0xFE7
 10584                           postdec1	equ	0xFE5
 10585                           plusw1	equ	0xFE3
 10586                           fsr1h	equ	0xFE2
 10587                           fsr1l	equ	0xFE1
 10588                           indf2	equ	0xFDF
 10589                           postinc2	equ	0xFDE
 10590                           postdec2	equ	0xFDD
 10591                           plusw2	equ	0xFDB
 10592                           fsr2h	equ	0xFDA
 10593                           fsr2l	equ	0xFD9
 10594                           status	equ	0xFD8
 10595                           
 10596 ;; *************** function __root_is_available *****************
 10597 ;; Defined at:
 10598 ;;		line 408 in file "fat16.c"
 10599 ;; Parameters:    Size  Location     Type
 10600 ;;  file_number     1    wreg     unsigned char 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  file_number     1   51[COMRAM] unsigned char 
 10603 ;;  offset          2   49[COMRAM] unsigned int 
 10604 ;;  root_sector     2   47[COMRAM] unsigned int 
 10605 ;;  first_byte      1   52[COMRAM] unsigned char 
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      unsigned char 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10616 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;Total ram usage:        6 bytes
 10620 ;; Hardware stack levels used:    1
 10621 ;; Hardware stack levels required when called:    5
 10622 ;; This function calls:
 10623 ;;		__offset_from_file_number
 10624 ;;		__sector_from_file_number
 10625 ;;		_flash_partial_read
 10626 ;; This function is called by:
 10627 ;;		_fat_get_file_size
 10628 ;;		__get_available_root_entry
 10629 ;;		_fat_delete_file
 10630 ;;		_fat_append_to_file
 10631 ;;		_fat_copy_file
 10632 ;;		_fat_resize_file
 10633 ;;		_fat_copy_sector_to_buffer
 10634 ;;		_fat_write_sector_from_buffer
 10635 ;; This function uses a non-reentrant model
 10636 ;;
 10637                           
 10638                           	psect	text49
 10639  006104                     __ptext49:
 10640                           	opt stack 0
 10641  006104                     __root_is_available:
 10642                           	opt stack 22
 10643                           
 10644                           ;incstack = 0
 10645                           ;__root_is_available@file_number stored from wreg
 10646  006104  6E34               	movwf	__root_is_available@file_number,c
 10647                           
 10648                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 10649  006106  0E3F               	movlw	63
 10650  006108  6434               	cpfsgt	__root_is_available@file_number,c
 10651  00610A  D002               	goto	l2007
 10652                           
 10653                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 10654  00610C  0E00               	movlw	0
 10655  00610E  0012               	return	
 10656  006110                     l2007:
 10657                           
 10658                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 10659  006110  5034               	movf	__root_is_available@file_number,w,c
 10660  006112  ECC4  F036         	call	__sector_from_file_number
 10661  006116  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 10662  00611A  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 10663                           
 10664                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 10665  00611E  5034               	movf	__root_is_available@file_number,w,c
 10666  006120  EC56  F037         	call	__offset_from_file_number
 10667  006124  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 10668  006128  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 10669                           
 10670                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 10671  00612C  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 10672  006130  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 10673  006134  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 10674  006138  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 10675  00613C  0E00               	movlw	0
 10676  00613E  6E2D               	movwf	flash_partial_read@length+1,c
 10677  006140  0E01               	movlw	1
 10678  006142  6E2C               	movwf	flash_partial_read@length,c
 10679  006144  0E35               	movlw	low __root_is_available@first_byte
 10680  006146  6E2E               	movwf	flash_partial_read@data,c
 10681  006148  0E00               	movlw	high __root_is_available@first_byte
 10682  00614A  6E2F               	movwf	flash_partial_read@data+1,c
 10683  00614C  EC43  F037         	call	_flash_partial_read	;wreg free
 10684                           
 10685                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 10686  006150  5035               	movf	__root_is_available@first_byte,w,c
 10687  006152  B4D8               	btfsc	status,2,c
 10688  006154  D004               	goto	u9730
 10689  006156  0EE5               	movlw	229
 10690  006158  1835               	xorwf	__root_is_available@first_byte,w,c
 10691  00615A  A4D8               	btfss	status,2,c
 10692  00615C  D002               	goto	l2009
 10693  00615E                     u9730:
 10694                           
 10695                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 10696  00615E  0E01               	movlw	1
 10697                           
 10698                           ;fat16.c: 434: }
 10699  006160  0012               	return	
 10700  006162                     l2009:
 10701                           
 10702                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 10703  006162  0E00               	movlw	0
 10704  006164  0012               	return	
 10705  006166                     __end_of__root_is_available:
 10706                           	opt stack 0
 10707                           tblptru	equ	0xFF8
 10708                           tblptrh	equ	0xFF7
 10709                           tblptrl	equ	0xFF6
 10710                           tablat	equ	0xFF5
 10711                           prodh	equ	0xFF4
 10712                           prodl	equ	0xFF3
 10713                           intcon	equ	0xFF2
 10714                           intcon2	equ	0xFF1
 10715                           intcon3	equ	0xFF0
 10716                           postinc0	equ	0xFEE
 10717                           wreg	equ	0xFE8
 10718                           indf1	equ	0xFE7
 10719                           postdec1	equ	0xFE5
 10720                           plusw1	equ	0xFE3
 10721                           fsr1h	equ	0xFE2
 10722                           fsr1l	equ	0xFE1
 10723                           indf2	equ	0xFDF
 10724                           postinc2	equ	0xFDE
 10725                           postdec2	equ	0xFDD
 10726                           plusw2	equ	0xFDB
 10727                           fsr2h	equ	0xFDA
 10728                           fsr2l	equ	0xFD9
 10729                           status	equ	0xFD8
 10730                           
 10731 ;; *************** function _flash_partial_read *****************
 10732 ;; Defined at:
 10733 ;;		line 452 in file "flash.c"
 10734 ;; Parameters:    Size  Location     Type
 10735 ;;  page            2   39[COMRAM] unsigned int 
 10736 ;;  start           2   41[COMRAM] unsigned int 
 10737 ;;  length          2   43[COMRAM] unsigned int 
 10738 ;;  data            2   45[COMRAM] PTR unsigned char 
 10739 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 10740 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 10741 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), 
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      void 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10756 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;Total ram usage:        8 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    4
 10760 ;; This function calls:
 10761 ;;		__flash_partial_read
 10762 ;; This function is called by:
 10763 ;;		__root_is_available
 10764 ;;		__read_fat
 10765 ;;		_fat_get_file_size
 10766 ;;		_fat_read_from_file_fast
 10767 ;;		_fat_get_file_information
 10768 ;;		__get_first_cluster
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text50
 10773  006E86                     __ptext50:
 10774                           	opt stack 0
 10775  006E86                     _flash_partial_read:
 10776                           	opt stack 23
 10777                           
 10778                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 10779                           
 10780                           ;incstack = 0
 10781  006E86  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 10782  006E8A  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 10783  006E8E  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 10784  006E92  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 10785  006E96  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 10786  006E9A  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 10787  006E9E  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 10788  006EA2  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 10789  006EA6  EC5D  F02E         	call	__flash_partial_read	;wreg free
 10790  006EAA  0012               	return		;funcret
 10791  006EAC                     __end_of_flash_partial_read:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           intcon2	equ	0xFF1
 10801                           intcon3	equ	0xFF0
 10802                           postinc0	equ	0xFEE
 10803                           wreg	equ	0xFE8
 10804                           indf1	equ	0xFE7
 10805                           postdec1	equ	0xFE5
 10806                           plusw1	equ	0xFE3
 10807                           fsr1h	equ	0xFE2
 10808                           fsr1l	equ	0xFE1
 10809                           indf2	equ	0xFDF
 10810                           postinc2	equ	0xFDE
 10811                           postdec2	equ	0xFDD
 10812                           plusw2	equ	0xFDB
 10813                           fsr2h	equ	0xFDA
 10814                           fsr2l	equ	0xFD9
 10815                           status	equ	0xFD8
 10816                           
 10817 ;; *************** function __sector_from_file_number *****************
 10818 ;; Defined at:
 10819 ;;		line 52 in file "fat16.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  file_number     1    wreg     unsigned char 
 10822 ;; Auto vars:     Size  Location     Type
 10823 ;;  file_number     1    2[COMRAM] unsigned char 
 10824 ;;  sector          2    3[COMRAM] unsigned int 
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  2    0[COMRAM] unsigned int 
 10827 ;; Registers used:
 10828 ;;		wreg, status,2, status,0
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;Total ram usage:        5 bytes
 10839 ;; Hardware stack levels used:    1
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		__root_is_available
 10844 ;;		_fat_get_file_size
 10845 ;;		_fat_get_file_information
 10846 ;;		__write_root
 10847 ;;		__delete_root
 10848 ;;		__get_first_cluster
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           	psect	text51
 10853  006D88                     __ptext51:
 10854                           	opt stack 0
 10855  006D88                     __sector_from_file_number:
 10856                           	opt stack 27
 10857                           
 10858                           ;incstack = 0
 10859                           ;__sector_from_file_number@file_number stored from wreg
 10860  006D88  6E03               	movwf	__sector_from_file_number@file_number,c
 10861                           
 10862                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 10863  006D8A  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 10864  006D8E  6A05               	clrf	__sector_from_file_number@sector+1,c
 10865                           
 10866                           ;fat16.c: 56: sector >>= 4;
 10867  006D90  3A04               	swapf	__sector_from_file_number@sector,f,c
 10868  006D92  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 10869  006D94  0E0F               	movlw	15
 10870  006D96  1604               	andwf	__sector_from_file_number@sector,f,c
 10871  006D98  5005               	movf	__sector_from_file_number@sector+1,w,c
 10872  006D9A  0BF0               	andlw	240
 10873  006D9C  1204               	iorwf	__sector_from_file_number@sector,f,c
 10874  006D9E  0E0F               	movlw	15
 10875  006DA0  1605               	andwf	__sector_from_file_number@sector+1,f,c
 10876                           
 10877                           ;fat16.c: 57: sector += 34;
 10878  006DA2  0E22               	movlw	34
 10879  006DA4  2604               	addwf	__sector_from_file_number@sector,f,c
 10880  006DA6  0E00               	movlw	0
 10881  006DA8  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 10882                           
 10883                           ;fat16.c: 58: return sector;
 10884  006DAA  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 10885  006DAE  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 10886  006DB2  0012               	return	
 10887  006DB4                     __end_of__sector_from_file_number:
 10888                           	opt stack 0
 10889                           tblptru	equ	0xFF8
 10890                           tblptrh	equ	0xFF7
 10891                           tblptrl	equ	0xFF6
 10892                           tablat	equ	0xFF5
 10893                           prodh	equ	0xFF4
 10894                           prodl	equ	0xFF3
 10895                           intcon	equ	0xFF2
 10896                           intcon2	equ	0xFF1
 10897                           intcon3	equ	0xFF0
 10898                           postinc0	equ	0xFEE
 10899                           wreg	equ	0xFE8
 10900                           indf1	equ	0xFE7
 10901                           postdec1	equ	0xFE5
 10902                           plusw1	equ	0xFE3
 10903                           fsr1h	equ	0xFE2
 10904                           fsr1l	equ	0xFE1
 10905                           indf2	equ	0xFDF
 10906                           postinc2	equ	0xFDE
 10907                           postdec2	equ	0xFDD
 10908                           plusw2	equ	0xFDB
 10909                           fsr2h	equ	0xFDA
 10910                           fsr2l	equ	0xFD9
 10911                           status	equ	0xFD8
 10912                           
 10913 ;; *************** function __offset_from_file_number *****************
 10914 ;; Defined at:
 10915 ;;		line 61 in file "fat16.c"
 10916 ;; Parameters:    Size  Location     Type
 10917 ;;  file_number     1    wreg     unsigned char 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  file_number     1    2[COMRAM] unsigned char 
 10920 ;;  offset          2    3[COMRAM] unsigned int 
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  2    0[COMRAM] unsigned int 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2, status,0
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10931 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;Total ram usage:        5 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		__root_is_available
 10940 ;;		_fat_get_file_size
 10941 ;;		_fat_get_file_information
 10942 ;;		__write_root
 10943 ;;		__delete_root
 10944 ;;		__get_first_cluster
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           	psect	text52
 10949  006EAC                     __ptext52:
 10950                           	opt stack 0
 10951  006EAC                     __offset_from_file_number:
 10952                           	opt stack 26
 10953                           
 10954                           ;incstack = 0
 10955                           ;__offset_from_file_number@file_number stored from wreg
 10956  006EAC  6E03               	movwf	__offset_from_file_number@file_number,c
 10957                           
 10958                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 10959  006EAE  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 10960  006EB2  6A05               	clrf	__offset_from_file_number@offset+1,c
 10961                           
 10962                           ;fat16.c: 65: offset &= 0b1111;
 10963  006EB4  0E0F               	movlw	15
 10964  006EB6  1604               	andwf	__offset_from_file_number@offset,f,c
 10965  006EB8  0E00               	movlw	0
 10966  006EBA  1605               	andwf	__offset_from_file_number@offset+1,f,c
 10967                           
 10968                           ;fat16.c: 66: offset <<= 5;
 10969  006EBC  0E05               	movlw	5
 10970  006EBE                     u9275:
 10971  006EBE  90D8               	bcf	status,0,c
 10972  006EC0  3604               	rlcf	__offset_from_file_number@offset,f,c
 10973  006EC2  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 10974  006EC4  2EE8               	decfsz	wreg,f,c
 10975  006EC6  D7FB               	goto	u9275
 10976                           
 10977                           ;fat16.c: 67: return offset;
 10978  006EC8  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 10979  006ECC  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 10980  006ED0  0012               	return	
 10981  006ED2                     __end_of__offset_from_file_number:
 10982                           	opt stack 0
 10983                           tblptru	equ	0xFF8
 10984                           tblptrh	equ	0xFF7
 10985                           tblptrl	equ	0xFF6
 10986                           tablat	equ	0xFF5
 10987                           prodh	equ	0xFF4
 10988                           prodl	equ	0xFF3
 10989                           intcon	equ	0xFF2
 10990                           intcon2	equ	0xFF1
 10991                           intcon3	equ	0xFF0
 10992                           postinc0	equ	0xFEE
 10993                           wreg	equ	0xFE8
 10994                           indf1	equ	0xFE7
 10995                           postdec1	equ	0xFE5
 10996                           plusw1	equ	0xFE3
 10997                           fsr1h	equ	0xFE2
 10998                           fsr1l	equ	0xFE1
 10999                           indf2	equ	0xFDF
 11000                           postinc2	equ	0xFDE
 11001                           postdec2	equ	0xFDD
 11002                           plusw2	equ	0xFDB
 11003                           fsr2h	equ	0xFDA
 11004                           fsr2l	equ	0xFD9
 11005                           status	equ	0xFD8
 11006                           
 11007 ;; *************** function _fat_find_file *****************
 11008 ;; Defined at:
 11009 ;;		line 517 in file "fat16.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  name            2   43[COMRAM] PTR unsigned char 
 11012 ;;		 -> bootloader_filename(9), 
 11013 ;;  extension       2   45[COMRAM] PTR unsigned char 
 11014 ;;		 -> bootloader_extension(4), 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;  offset          2   52[COMRAM] unsigned int 
 11017 ;;  sector          2   50[COMRAM] unsigned int 
 11018 ;;  file_number     1   49[COMRAM] unsigned char 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      unsigned char 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11029 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11031 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11032 ;;Total ram usage:       11 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    5
 11035 ;; This function calls:
 11036 ;;		_flash_sector_read
 11037 ;;		_strncmp
 11038 ;; This function is called by:
 11039 ;;		__bootloader_find_file
 11040 ;;		_fat_create_file
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           	psect	text53
 11045  00450C                     __ptext53:
 11046                           	opt stack 0
 11047  00450C                     _fat_find_file:
 11048                           	opt stack 23
 11049                           
 11050                           ;fat16.c: 519: uint8_t file_number = 0;
 11051                           
 11052                           ;incstack = 0
 11053  00450C  0E00               	movlw	0
 11054  00450E  6E32               	movwf	fat_find_file@file_number,c
 11055                           
 11056                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 11057  004510  0E00               	movlw	0
 11058  004512  6E34               	movwf	fat_find_file@sector+1,c
 11059  004514  0E22               	movlw	34
 11060  004516  6E33               	movwf	fat_find_file@sector,c
 11061  004518  5034               	movf	fat_find_file@sector+1,w,c
 11062  00451A  E166               	bnz	l2034
 11063  00451C  0E26               	movlw	38
 11064  00451E  5C33               	subwf	fat_find_file@sector,w,c
 11065  004520  B0D8               	btfsc	status,0,c
 11066  004522  D062               	goto	u10150
 11067                           
 11068                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 11069  004524  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 11070  004528  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 11071  00452C  0EC3               	movlw	low _buffer
 11072  00452E  6E2A               	movwf	flash_sector_read@data,c
 11073  004530  0E02               	movlw	high _buffer
 11074  004532  6E2B               	movwf	flash_sector_read@data+1,c
 11075  004534  EC69  F037         	call	_flash_sector_read	;wreg free
 11076                           
 11077                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 11078  004538  0E00               	movlw	0
 11079  00453A  6E36               	movwf	fat_find_file@offset+1,c
 11080  00453C  0E00               	movlw	0
 11081  00453E  6E35               	movwf	fat_find_file@offset,c
 11082  004540                     l12794:
 11083  004540  0E02               	movlw	2
 11084  004542  5C36               	subwf	fat_find_file@offset+1,w,c
 11085  004544  B0D8               	btfsc	status,0,c
 11086  004546  D04B               	goto	u10140
 11087                           
 11088                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 11089  004548  0EC3               	movlw	low _buffer
 11090  00454A  2435               	addwf	fat_find_file@offset,w,c
 11091  00454C  6ED9               	movwf	fsr2l,c
 11092  00454E  0E02               	movlw	high _buffer
 11093  004550  2036               	addwfc	fat_find_file@offset+1,w,c
 11094  004552  6EDA               	movwf	fsr2h,c
 11095  004554  50DF               	movf	indf2,w,c
 11096  004556  A4D8               	btfss	status,2,c
 11097  004558  D002               	goto	l2037
 11098                           
 11099                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 11100  00455A  0EFF               	movlw	255
 11101  00455C  0012               	return	
 11102  00455E                     l2037:
 11103                           
 11104                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 11105  00455E  0EC3               	movlw	low _buffer
 11106  004560  2435               	addwf	fat_find_file@offset,w,c
 11107  004562  6ED9               	movwf	fsr2l,c
 11108  004564  0E02               	movlw	high _buffer
 11109  004566  2036               	addwfc	fat_find_file@offset+1,w,c
 11110  004568  6EDA               	movwf	fsr2h,c
 11111  00456A  0EE5               	movlw	229
 11112  00456C  18DE               	xorwf	postinc2,w,c
 11113  00456E  B4D8               	btfsc	status,2,c
 11114  004570  D030               	goto	l2043
 11115                           
 11116                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 11117                           
 11118                           ;fat16.c: 537: {;fat16.c: 541: }
 11119  004572  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 11120  004576  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 11121  00457A  0EC3               	movlw	low _buffer
 11122  00457C  2435               	addwf	fat_find_file@offset,w,c
 11123  00457E  6E03               	movwf	strncmp@s2,c
 11124  004580  0E02               	movlw	high _buffer
 11125  004582  2036               	addwfc	fat_find_file@offset+1,w,c
 11126  004584  6E04               	movwf	strncmp@s2+1,c
 11127  004586  0E00               	movlw	0
 11128  004588  6E06               	movwf	strncmp@len+1,c
 11129  00458A  0E08               	movlw	8
 11130  00458C  6E05               	movwf	strncmp@len,c
 11131  00458E  EC9D  F02D         	call	_strncmp	;wreg free
 11132  004592  5001               	movf	?_strncmp,w,c
 11133  004594  1002               	iorwf	?_strncmp+1,w,c
 11134  004596  A4D8               	btfss	status,2,c
 11135  004598  D01C               	goto	l2043
 11136                           
 11137                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 11138  00459A  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 11139  00459E  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 11140  0045A2  0E08               	movlw	8
 11141  0045A4  2435               	addwf	fat_find_file@offset,w,c
 11142  0045A6  6E30               	movwf	??_fat_find_file& (0+255),c
 11143  0045A8  0E00               	movlw	0
 11144  0045AA  2036               	addwfc	fat_find_file@offset+1,w,c
 11145  0045AC  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 11146  0045AE  0EC3               	movlw	low _buffer
 11147  0045B0  2430               	addwf	??_fat_find_file,w,c
 11148  0045B2  6E03               	movwf	strncmp@s2,c
 11149  0045B4  0E02               	movlw	high _buffer
 11150  0045B6  2031               	addwfc	??_fat_find_file+1,w,c
 11151  0045B8  6E04               	movwf	strncmp@s2+1,c
 11152  0045BA  0E00               	movlw	0
 11153  0045BC  6E06               	movwf	strncmp@len+1,c
 11154  0045BE  0E03               	movlw	3
 11155  0045C0  6E05               	movwf	strncmp@len,c
 11156  0045C2  EC9D  F02D         	call	_strncmp	;wreg free
 11157  0045C6  5001               	movf	?_strncmp,w,c
 11158  0045C8  1002               	iorwf	?_strncmp+1,w,c
 11159  0045CA  A4D8               	btfss	status,2,c
 11160  0045CC  D002               	goto	l2043
 11161                           
 11162                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 11163  0045CE  5032               	movf	fat_find_file@file_number,w,c
 11164  0045D0  0012               	return	
 11165  0045D2                     l2043:
 11166                           
 11167                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 11168  0045D2  2A32               	incf	fat_find_file@file_number,f,c
 11169  0045D4  0E20               	movlw	32
 11170  0045D6  2635               	addwf	fat_find_file@offset,f,c
 11171  0045D8  0E00               	movlw	0
 11172  0045DA  2236               	addwfc	fat_find_file@offset+1,f,c
 11173  0045DC  D7B1               	goto	l12794
 11174  0045DE                     u10140:
 11175  0045DE  4A33               	infsnz	fat_find_file@sector,f,c
 11176  0045E0  2A34               	incf	fat_find_file@sector+1,f,c
 11177  0045E2  5034               	movf	fat_find_file@sector+1,w,c
 11178  0045E4  E101               	bnz	l12828
 11179  0045E6  D79A               	goto	L5
 11180  0045E8                     u10150:
 11181  0045E8                     l2034:
 11182  0045E8                     l12828:
 11183                           
 11184                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 11185  0045E8  0EFF               	movlw	255
 11186  0045EA  0012               	return	
 11187  0045EC                     __end_of_fat_find_file:
 11188                           	opt stack 0
 11189                           tblptru	equ	0xFF8
 11190                           tblptrh	equ	0xFF7
 11191                           tblptrl	equ	0xFF6
 11192                           tablat	equ	0xFF5
 11193                           prodh	equ	0xFF4
 11194                           prodl	equ	0xFF3
 11195                           intcon	equ	0xFF2
 11196                           intcon2	equ	0xFF1
 11197                           intcon3	equ	0xFF0
 11198                           postinc0	equ	0xFEE
 11199                           wreg	equ	0xFE8
 11200                           indf1	equ	0xFE7
 11201                           postdec1	equ	0xFE5
 11202                           plusw1	equ	0xFE3
 11203                           fsr1h	equ	0xFE2
 11204                           fsr1l	equ	0xFE1
 11205                           indf2	equ	0xFDF
 11206                           postinc2	equ	0xFDE
 11207                           postdec2	equ	0xFDD
 11208                           plusw2	equ	0xFDB
 11209                           fsr2h	equ	0xFDA
 11210                           fsr2l	equ	0xFD9
 11211                           status	equ	0xFD8
 11212                           
 11213 ;; *************** function _strncmp *****************
 11214 ;; Defined at:
 11215 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 11218 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 11219 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 11220 ;;		 -> buffer(512), 
 11221 ;;  len             2    4[COMRAM] unsigned int 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  2    0[COMRAM] int 
 11226 ;; Registers used:
 11227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11233 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11237 ;;Total ram usage:        8 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_fat_find_file
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text54
 11247  005B3A                     __ptext54:
 11248                           	opt stack 0
 11249  005B3A                     _strncmp:
 11250                           	opt stack 27
 11251                           
 11252                           ;incstack = 0
 11253  005B3A  D034               	goto	l3508
 11254  005B3C                     l12498:
 11255  005B3C  C001  FFF6         	movff	strncmp@s1,tblptrl
 11256  005B40  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11257  005B44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11258  005B44  6AF8               	clrf	tblptru,c
 11259  005B46                     	endif
 11260  005B46                     	if	0	;tblptru may be non-zero
 11261  005B46                     	endif
 11262  005B46  0008               	tblrd		*
 11263  005B48  50F5               	movf	tablat,w,c
 11264  005B4A  0900               	iorlw	0
 11265  005B4C  B4D8               	btfsc	status,2,c
 11266  005B4E  D00E               	goto	u9750
 11267  005B50  C003  FFD9         	movff	strncmp@s2,fsr2l
 11268  005B54  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11269  005B58  C001  FFF6         	movff	strncmp@s1,tblptrl
 11270  005B5C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11271  005B60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11272  005B60  6AF8               	clrf	tblptru,c
 11273  005B62                     	endif
 11274  005B62                     	if	0	;tblptru may be non-zero
 11275  005B62                     	endif
 11276  005B62  50DE               	movf	postinc2,w,c
 11277  005B64  0009               	tblrd		*+
 11278  005B66  18F5               	xorwf	tablat,w,c
 11279  005B68  B4D8               	btfsc	status,2,c
 11280  005B6A  D018               	goto	l3510
 11281  005B6C                     u9750:
 11282  005B6C  C003  FFD9         	movff	strncmp@s2,fsr2l
 11283  005B70  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11284  005B74  50DF               	movf	indf2,w,c
 11285  005B76  6E07               	movwf	??_strncmp& (0+255),c
 11286  005B78  6A08               	clrf	(??_strncmp+1)& (0+255),c
 11287  005B7A  1E07               	comf	??_strncmp,f,c
 11288  005B7C  1E08               	comf	??_strncmp+1,f,c
 11289  005B7E  4A07               	infsnz	??_strncmp,f,c
 11290  005B80  2A08               	incf	??_strncmp+1,f,c
 11291  005B82  C001  FFF6         	movff	strncmp@s1,tblptrl
 11292  005B86  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11293  005B8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11294  005B8A  6AF8               	clrf	tblptru,c
 11295  005B8C                     	endif
 11296  005B8C                     	if	0	;tblptru may be non-zero
 11297  005B8C                     	endif
 11298  005B8C  0008               	tblrd		*
 11299  005B8E  50F5               	movf	tablat,w,c
 11300  005B90  2407               	addwf	??_strncmp,w,c
 11301  005B92  6E01               	movwf	?_strncmp,c
 11302  005B94  0E00               	movlw	0
 11303  005B96  2008               	addwfc	??_strncmp+1,w,c
 11304  005B98  6E02               	movwf	?_strncmp+1,c
 11305  005B9A  0012               	return	
 11306  005B9C                     l3510:
 11307  005B9C  4A01               	infsnz	strncmp@s1,f,c
 11308  005B9E  2A02               	incf	strncmp@s1+1,f,c
 11309  005BA0  4A03               	infsnz	strncmp@s2,f,c
 11310  005BA2  2A04               	incf	strncmp@s2+1,f,c
 11311  005BA4                     l3508:
 11312  005BA4  0605               	decf	strncmp@len,f,c
 11313  005BA6  A0D8               	btfss	status,0,c
 11314  005BA8  0606               	decf	strncmp@len+1,f,c
 11315  005BAA  2805               	incf	strncmp@len,w,c
 11316  005BAC  E1C7               	bnz	l12498
 11317  005BAE  2806               	incf	strncmp@len+1,w,c
 11318  005BB0  A4D8               	btfss	status,2,c
 11319  005BB2  D7C4               	goto	l3509
 11320  005BB4  0E00               	movlw	0
 11321  005BB6  6E02               	movwf	?_strncmp+1,c
 11322  005BB8  0E00               	movlw	0
 11323  005BBA  6E01               	movwf	?_strncmp,c
 11324  005BBC  0012               	return	
 11325  005BBE                     __end_of_strncmp:
 11326                           	opt stack 0
 11327                           tblptru	equ	0xFF8
 11328                           tblptrh	equ	0xFF7
 11329                           tblptrl	equ	0xFF6
 11330                           tablat	equ	0xFF5
 11331                           prodh	equ	0xFF4
 11332                           prodl	equ	0xFF3
 11333                           intcon	equ	0xFF2
 11334                           intcon2	equ	0xFF1
 11335                           intcon3	equ	0xFF0
 11336                           postinc0	equ	0xFEE
 11337                           wreg	equ	0xFE8
 11338                           indf1	equ	0xFE7
 11339                           postdec1	equ	0xFE5
 11340                           plusw1	equ	0xFE3
 11341                           fsr1h	equ	0xFE2
 11342                           fsr1l	equ	0xFE1
 11343                           indf2	equ	0xFDF
 11344                           postinc2	equ	0xFDE
 11345                           postdec2	equ	0xFDD
 11346                           plusw2	equ	0xFDB
 11347                           fsr2h	equ	0xFDA
 11348                           fsr2l	equ	0xFD9
 11349                           status	equ	0xFD8
 11350                           
 11351 ;; *************** function __normal_mode *****************
 11352 ;; Defined at:
 11353 ;;		line 160 in file "main.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;		None
 11356 ;; Auto vars:     Size  Location     Type
 11357 ;;		None
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      unsigned char 
 11360 ;; Registers used:
 11361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11371 ;;Total ram usage:        0 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:    3
 11374 ;; This function calls:
 11375 ;;		_i2c_eeprom_readByte
 11376 ;;		_i2c_eeprom_writeByte
 11377 ;; This function is called by:
 11378 ;;		_main
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text55
 11383  0062EA                     __ptext55:
 11384                           	opt stack 0
 11385  0062EA                     __normal_mode:
 11386                           	opt stack 27
 11387                           
 11388                           ;main.c: 162: if(i2c_eeprom_readByte(0x100)==0x94)
 11389                           
 11390                           ;incstack = 0
 11391  0062EA  0E01               	movlw	1
 11392  0062EC  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11393  0062EE  0E00               	movlw	0
 11394  0062F0  6E12               	movwf	i2c_eeprom_readByte@address,c
 11395  0062F2  EC7A  F033         	call	_i2c_eeprom_readByte	;wreg free
 11396  0062F6  0A94               	xorlw	148
 11397  0062F8  A4D8               	btfss	status,2,c
 11398  0062FA  D00A               	goto	l880
 11399                           
 11400                           ;main.c: 163: {;main.c: 165: i2c_eeprom_writeByte(0x100, 0x00);
 11401  0062FC  0E01               	movlw	1
 11402  0062FE  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11403  006300  0E00               	movlw	0
 11404  006302  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11405  006304  0E00               	movlw	0
 11406  006306  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11407  006308  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
 11408                           
 11409                           ;main.c: 167: return 0;
 11410  00630C  0E00               	movlw	0
 11411  00630E  0012               	return	
 11412  006310                     l880:
 11413                           
 11414                           ;main.c: 169: else if(i2c_eeprom_readByte(0x100)==0x78)
 11415  006310  0E01               	movlw	1
 11416  006312  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11417  006314  0E00               	movlw	0
 11418  006316  6E12               	movwf	i2c_eeprom_readByte@address,c
 11419  006318  EC7A  F033         	call	_i2c_eeprom_readByte	;wreg free
 11420  00631C  0A78               	xorlw	120
 11421  00631E  A4D8               	btfss	status,2,c
 11422  006320  D00A               	goto	l883
 11423                           
 11424                           ;main.c: 170: {;main.c: 172: i2c_eeprom_writeByte(0x100, 0x00);
 11425  006322  0E01               	movlw	1
 11426  006324  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11427  006326  0E00               	movlw	0
 11428  006328  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11429  00632A  0E00               	movlw	0
 11430  00632C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11431  00632E  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
 11432                           
 11433                           ;main.c: 174: return 1;
 11434  006332  0E01               	movlw	1
 11435  006334  0012               	return	
 11436  006336                     l883:
 11437                           
 11438                           ;main.c: 175: };main.c: 177: if(!PORTAbits.RA1)
 11439  006336  B280               	btfsc	3968,1,c	;volatile
 11440  006338  D002               	goto	l884
 11441                           
 11442                           ;main.c: 178: {;main.c: 180: return 0;
 11443  00633A  0E00               	movlw	0
 11444                           
 11445                           ;main.c: 181: }
 11446  00633C  0012               	return	
 11447  00633E                     l884:
 11448                           
 11449                           ;main.c: 182: else;main.c: 183: {;main.c: 185: return 1;
 11450  00633E  0E01               	movlw	1
 11451  006340  0012               	return	
 11452  006342                     __end_of__normal_mode:
 11453                           	opt stack 0
 11454                           tblptru	equ	0xFF8
 11455                           tblptrh	equ	0xFF7
 11456                           tblptrl	equ	0xFF6
 11457                           tablat	equ	0xFF5
 11458                           prodh	equ	0xFF4
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           intcon2	equ	0xFF1
 11462                           intcon3	equ	0xFF0
 11463                           postinc0	equ	0xFEE
 11464                           wreg	equ	0xFE8
 11465                           indf1	equ	0xFE7
 11466                           postdec1	equ	0xFE5
 11467                           plusw1	equ	0xFE3
 11468                           fsr1h	equ	0xFE2
 11469                           fsr1l	equ	0xFE1
 11470                           indf2	equ	0xFDF
 11471                           postinc2	equ	0xFDE
 11472                           postdec2	equ	0xFDD
 11473                           plusw2	equ	0xFDB
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function _i2c_eeprom_readByte *****************
 11479 ;; Defined at:
 11480 ;;		line 395 in file "i2c.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;  address         2   17[COMRAM] unsigned int 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  addr            1   23[COMRAM] unsigned char 
 11485 ;;  slave_addres    1   22[COMRAM] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      unsigned char 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;Total ram usage:        7 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    2
 11502 ;; This function calls:
 11503 ;;		__i2c_read
 11504 ;;		__i2c_write
 11505 ;;		_i2c_set_frequency
 11506 ;; This function is called by:
 11507 ;;		__normal_mode
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text56
 11512  0066F4                     __ptext56:
 11513                           	opt stack 0
 11514  0066F4                     _i2c_eeprom_readByte:
 11515                           	opt stack 27
 11516                           
 11517                           ;i2c.c: 397: uint8_t slave_address;;i2c.c: 398: uint8_t addr;;i2c.c: 399: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 11518                           
 11519                           ;incstack = 0
 11520  0066F4  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 11521  0066F8  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 11522  0066FC  0E07               	movlw	7
 11523  0066FE  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 11524  006700                     u11005:
 11525  006700  90D8               	bcf	status,0,c
 11526  006702  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 11527  006704  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 11528  006706  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 11529  006708  D7FB               	goto	u11005
 11530  00670A  5014               	movf	??_i2c_eeprom_readByte,w,c
 11531  00670C  0B0E               	andlw	14
 11532  00670E  09A0               	iorlw	160
 11533  006710  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 11534                           
 11535                           ;i2c.c: 400: addr = address & 0xFF;
 11536  006712  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 11537                           
 11538                           ;i2c.c: 403: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 11539  006716  0E02               	movlw	2
 11540  006718  ECF0  F036         	call	_i2c_set_frequency
 11541                           
 11542                           ;i2c.c: 405: _i2c_write(slave_address, &addr, 1);
 11543  00671C  0E18               	movlw	low i2c_eeprom_readByte@addr
 11544  00671E  6E06               	movwf	__i2c_write@data,c
 11545  006720  0E00               	movlw	high i2c_eeprom_readByte@addr
 11546  006722  6E07               	movwf	__i2c_write@data+1,c
 11547  006724  0E01               	movlw	1
 11548  006726  6E08               	movwf	__i2c_write@length,c
 11549  006728  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11550  00672A  EC13  F034         	call	__i2c_write
 11551                           
 11552                           ;i2c.c: 406: _i2c_read(slave_address, &addr, 1);
 11553  00672E  0E18               	movlw	low i2c_eeprom_readByte@addr
 11554  006730  6E06               	movwf	__i2c_read@data,c
 11555  006732  0E00               	movlw	high i2c_eeprom_readByte@addr
 11556  006734  6E07               	movwf	__i2c_read@data+1,c
 11557  006736  0E01               	movlw	1
 11558  006738  6E08               	movwf	__i2c_read@length,c
 11559  00673A  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11560  00673C  ECCE  F02C         	call	__i2c_read
 11561                           
 11562                           ;i2c.c: 407: return addr;
 11563  006740  5018               	movf	i2c_eeprom_readByte@addr,w,c
 11564  006742  0012               	return	
 11565  006744                     __end_of_i2c_eeprom_readByte:
 11566                           	opt stack 0
 11567                           tblptru	equ	0xFF8
 11568                           tblptrh	equ	0xFF7
 11569                           tblptrl	equ	0xFF6
 11570                           tablat	equ	0xFF5
 11571                           prodh	equ	0xFF4
 11572                           prodl	equ	0xFF3
 11573                           intcon	equ	0xFF2
 11574                           intcon2	equ	0xFF1
 11575                           intcon3	equ	0xFF0
 11576                           postinc0	equ	0xFEE
 11577                           wreg	equ	0xFE8
 11578                           indf1	equ	0xFE7
 11579                           postdec1	equ	0xFE5
 11580                           plusw1	equ	0xFE3
 11581                           fsr1h	equ	0xFE2
 11582                           fsr1l	equ	0xFE1
 11583                           indf2	equ	0xFDF
 11584                           postinc2	equ	0xFDE
 11585                           postdec2	equ	0xFDD
 11586                           plusw2	equ	0xFDB
 11587                           fsr2h	equ	0xFDA
 11588                           fsr2l	equ	0xFD9
 11589                           status	equ	0xFD8
 11590                           
 11591 ;; *************** function __i2c_read *****************
 11592 ;; Defined at:
 11593 ;;		line 169 in file "i2c.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  slave_addres    1    wreg     unsigned char 
 11596 ;;  data            2    5[COMRAM] PTR unsigned char 
 11597 ;;		 -> i2c_eeprom_readByte@addr(1), 
 11598 ;;  length          1    7[COMRAM] unsigned char 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  slave_addres    1   15[COMRAM] unsigned char 
 11601 ;;  cntr            1   16[COMRAM] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11606 ;; Tracked objects:
 11607 ;;		On entry : 0/0
 11608 ;;		On exit  : 0/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11611 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11613 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;Total ram usage:       12 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:    1
 11618 ;; This function calls:
 11619 ;;		__i2c_acknowledge
 11620 ;;		__i2c_get
 11621 ;;		__i2c_not_acknowledge
 11622 ;;		__i2c_send
 11623 ;;		__i2c_start
 11624 ;;		__i2c_stop
 11625 ;;		__i2c_wait_idle
 11626 ;; This function is called by:
 11627 ;;		_i2c_eeprom_readByte
 11628 ;;		_i2c_eeprom_read
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text57
 11633  00599C                     __ptext57:
 11634                           	opt stack 0
 11635  00599C                     __i2c_read:
 11636                           	opt stack 27
 11637                           
 11638                           ;incstack = 0
 11639                           ;__i2c_read@slave_address stored from wreg
 11640  00599C  6E10               	movwf	__i2c_read@slave_address,c
 11641                           
 11642                           ;i2c.c: 171: uint8_t cntr;;i2c.c: 173: _i2c_wait_idle();
 11643  00599E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11644                           
 11645                           ;i2c.c: 174: _i2c_start();
 11646  0059A2  EC11  F039         	call	__i2c_start	;wreg free
 11647                           
 11648                           ;i2c.c: 175: _i2c_wait_idle();
 11649  0059A6  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11650                           
 11651                           ;i2c.c: 176: _i2c_send(slave_address | 0x01);
 11652  0059AA  5010               	movf	__i2c_read@slave_address,w,c
 11653  0059AC  0901               	iorlw	1
 11654  0059AE  EC15  F039         	call	__i2c_send
 11655                           
 11656                           ;i2c.c: 177: _i2c_wait_idle();
 11657  0059B2  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 11658                           
 11659                           ;i2c.c: 179: for(cntr=0; cntr<length-1; ++cntr)
 11660  0059B6  0E00               	movlw	0
 11661  0059B8  6E11               	movwf	__i2c_read@cntr,c
 11662  0059BA  D00E               	goto	l1167
 11663  0059BC                     
 11664                           ;i2c.c: 180: {;i2c.c: 181: data[cntr] = _i2c_get();
 11665  0059BC  5011               	movf	__i2c_read@cntr,w,c
 11666  0059BE  0D01               	mullw	1
 11667  0059C0  50F3               	movf	prodl,w,c
 11668  0059C2  2406               	addwf	__i2c_read@data,w,c
 11669  0059C4  6ED9               	movwf	fsr2l,c
 11670  0059C6  50F4               	movf	prodh,w,c
 11671  0059C8  2007               	addwfc	__i2c_read@data+1,w,c
 11672  0059CA  6EDA               	movwf	fsr2h,c
 11673  0059CC  ECE0  F038         	call	__i2c_get	;wreg free
 11674  0059D0  6EDF               	movwf	indf2,c
 11675                           
 11676                           ;i2c.c: 182: _i2c_acknowledge();
 11677  0059D2  ECE5  F038         	call	__i2c_acknowledge	;wreg free
 11678  0059D6  2A11               	incf	__i2c_read@cntr,f,c
 11679  0059D8                     l1167:
 11680  0059D8  0EFF               	movlw	255
 11681  0059DA  6E09               	movwf	??__i2c_read& (0+255),c
 11682  0059DC  0EFF               	movlw	255
 11683  0059DE  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 11684  0059E0  5008               	movf	__i2c_read@length,w,c
 11685  0059E2  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 11686  0059E4  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 11687  0059E6  5009               	movf	??__i2c_read,w,c
 11688  0059E8  260B               	addwf	??__i2c_read+2,f,c
 11689  0059EA  500A               	movf	??__i2c_read+1,w,c
 11690  0059EC  220C               	addwfc	??__i2c_read+3,f,c
 11691  0059EE  5011               	movf	__i2c_read@cntr,w,c
 11692  0059F0  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 11693  0059F2  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 11694  0059F4  500B               	movf	??__i2c_read+2,w,c
 11695  0059F6  5C0D               	subwf	??__i2c_read+4,w,c
 11696  0059F8  500E               	movf	??__i2c_read+5,w,c
 11697  0059FA  0A80               	xorlw	128
 11698  0059FC  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 11699  0059FE  500C               	movf	??__i2c_read+3,w,c
 11700  005A00  0A80               	xorlw	128
 11701  005A02  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 11702  005A04  A0D8               	btfss	status,0,c
 11703  005A06  D7DA               	goto	l1168
 11704                           
 11705                           ;i2c.c: 183: };i2c.c: 184: data[cntr] = _i2c_get();
 11706  005A08  5011               	movf	__i2c_read@cntr,w,c
 11707  005A0A  0D01               	mullw	1
 11708  005A0C  50F3               	movf	prodl,w,c
 11709  005A0E  2406               	addwf	__i2c_read@data,w,c
 11710  005A10  6ED9               	movwf	fsr2l,c
 11711  005A12  50F4               	movf	prodh,w,c
 11712  005A14  2007               	addwfc	__i2c_read@data+1,w,c
 11713  005A16  6EDA               	movwf	fsr2h,c
 11714  005A18  ECE0  F038         	call	__i2c_get	;wreg free
 11715  005A1C  6EDF               	movwf	indf2,c
 11716                           
 11717                           ;i2c.c: 185: _i2c_not_acknowledge();
 11718  005A1E  ECDB  F038         	call	__i2c_not_acknowledge	;wreg free
 11719                           
 11720                           ;i2c.c: 187: _i2c_stop();
 11721  005A22  EC0D  F039         	call	__i2c_stop	;wreg free
 11722  005A26  0012               	return		;funcret
 11723  005A28                     __end_of__i2c_read:
 11724                           	opt stack 0
 11725                           tblptru	equ	0xFF8
 11726                           tblptrh	equ	0xFF7
 11727                           tblptrl	equ	0xFF6
 11728                           tablat	equ	0xFF5
 11729                           prodh	equ	0xFF4
 11730                           prodl	equ	0xFF3
 11731                           intcon	equ	0xFF2
 11732                           intcon2	equ	0xFF1
 11733                           intcon3	equ	0xFF0
 11734                           postinc0	equ	0xFEE
 11735                           wreg	equ	0xFE8
 11736                           indf1	equ	0xFE7
 11737                           postdec1	equ	0xFE5
 11738                           plusw1	equ	0xFE3
 11739                           fsr1h	equ	0xFE2
 11740                           fsr1l	equ	0xFE1
 11741                           indf2	equ	0xFDF
 11742                           postinc2	equ	0xFDE
 11743                           postdec2	equ	0xFDD
 11744                           plusw2	equ	0xFDB
 11745                           fsr2h	equ	0xFDA
 11746                           fsr2l	equ	0xFD9
 11747                           status	equ	0xFD8
 11748                           
 11749 ;; *************** function __i2c_not_acknowledge *****************
 11750 ;; Defined at:
 11751 ;;		line 98 in file "i2c.c"
 11752 ;; Parameters:    Size  Location     Type
 11753 ;;		None
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;		None
 11756 ;; Return value:  Size  Location     Type
 11757 ;;                  1    wreg      void 
 11758 ;; Registers used:
 11759 ;;		None
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;Total ram usage:        0 bytes
 11770 ;; Hardware stack levels used:    1
 11771 ;; This function calls:
 11772 ;;		Nothing
 11773 ;; This function is called by:
 11774 ;;		__i2c_read
 11775 ;; This function uses a non-reentrant model
 11776 ;;
 11777                           
 11778                           	psect	text58
 11779  0071B6                     __ptext58:
 11780                           	opt stack 0
 11781  0071B6                     __i2c_not_acknowledge:
 11782                           	opt stack 27
 11783                           
 11784                           ;i2c.c: 100: SSP1CON2bits.ACKDT = 1;
 11785                           
 11786                           ;incstack = 0
 11787  0071B6  8AC5               	bsf	4037,5,c	;volatile
 11788                           
 11789                           ;i2c.c: 101: SSP1CON2bits.ACKEN = 1;
 11790  0071B8  88C5               	bsf	4037,4,c	;volatile
 11791  0071BA  A8C5               	btfss	4037,4,c	;volatile
 11792  0071BC  0012               	return	
 11793  0071BE  D7FD               	goto	l1139
 11794  0071C0                     __end_of__i2c_not_acknowledge:
 11795                           	opt stack 0
 11796                           tblptru	equ	0xFF8
 11797                           tblptrh	equ	0xFF7
 11798                           tblptrl	equ	0xFF6
 11799                           tablat	equ	0xFF5
 11800                           prodh	equ	0xFF4
 11801                           prodl	equ	0xFF3
 11802                           intcon	equ	0xFF2
 11803                           intcon2	equ	0xFF1
 11804                           intcon3	equ	0xFF0
 11805                           postinc0	equ	0xFEE
 11806                           wreg	equ	0xFE8
 11807                           indf1	equ	0xFE7
 11808                           postdec1	equ	0xFE5
 11809                           plusw1	equ	0xFE3
 11810                           fsr1h	equ	0xFE2
 11811                           fsr1l	equ	0xFE1
 11812                           indf2	equ	0xFDF
 11813                           postinc2	equ	0xFDE
 11814                           postdec2	equ	0xFDD
 11815                           plusw2	equ	0xFDB
 11816                           fsr2h	equ	0xFDA
 11817                           fsr2l	equ	0xFD9
 11818                           status	equ	0xFD8
 11819                           
 11820 ;; *************** function __i2c_get *****************
 11821 ;; Defined at:
 11822 ;;		line 75 in file "i2c.c"
 11823 ;; Parameters:    Size  Location     Type
 11824 ;;		None
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;		None
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  1    wreg      unsigned char 
 11829 ;; Registers used:
 11830 ;;		wreg, status,2
 11831 ;; Tracked objects:
 11832 ;;		On entry : 0/0
 11833 ;;		On exit  : 0/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11840 ;;Total ram usage:        0 bytes
 11841 ;; Hardware stack levels used:    1
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		__i2c_read
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text59
 11850  0071C0                     __ptext59:
 11851                           	opt stack 0
 11852  0071C0                     __i2c_get:
 11853                           	opt stack 27
 11854                           
 11855                           ;i2c.c: 77: SSP1CON2bits.RCEN = 1 ;
 11856                           
 11857                           ;incstack = 0
 11858  0071C0  86C5               	bsf	4037,3,c	;volatile
 11859  0071C2  B6C5               	btfsc	4037,3,c	;volatile
 11860  0071C4  D7FE               	goto	l1121
 11861                           
 11862                           ;i2c.c: 79: return SSP1BUF;
 11863  0071C6  50C9               	movf	4041,w,c	;volatile
 11864  0071C8  0012               	return	
 11865  0071CA                     __end_of__i2c_get:
 11866                           	opt stack 0
 11867                           tblptru	equ	0xFF8
 11868                           tblptrh	equ	0xFF7
 11869                           tblptrl	equ	0xFF6
 11870                           tablat	equ	0xFF5
 11871                           prodh	equ	0xFF4
 11872                           prodl	equ	0xFF3
 11873                           intcon	equ	0xFF2
 11874                           intcon2	equ	0xFF1
 11875                           intcon3	equ	0xFF0
 11876                           postinc0	equ	0xFEE
 11877                           wreg	equ	0xFE8
 11878                           indf1	equ	0xFE7
 11879                           postdec1	equ	0xFE5
 11880                           plusw1	equ	0xFE3
 11881                           fsr1h	equ	0xFE2
 11882                           fsr1l	equ	0xFE1
 11883                           indf2	equ	0xFDF
 11884                           postinc2	equ	0xFDE
 11885                           postdec2	equ	0xFDD
 11886                           plusw2	equ	0xFDB
 11887                           fsr2h	equ	0xFDA
 11888                           fsr2l	equ	0xFD9
 11889                           status	equ	0xFD8
 11890                           
 11891 ;; *************** function __i2c_acknowledge *****************
 11892 ;; Defined at:
 11893 ;;		line 90 in file "i2c.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;		None
 11896 ;; Auto vars:     Size  Location     Type
 11897 ;;		None
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  1    wreg      void 
 11900 ;; Registers used:
 11901 ;;		None
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11911 ;;Total ram usage:        0 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		__i2c_read
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text60
 11921  0071CA                     __ptext60:
 11922                           	opt stack 0
 11923  0071CA                     __i2c_acknowledge:
 11924                           	opt stack 27
 11925                           
 11926                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 0;
 11927                           
 11928                           ;incstack = 0
 11929  0071CA  9AC5               	bcf	4037,5,c	;volatile
 11930                           
 11931                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 11932  0071CC  88C5               	bsf	4037,4,c	;volatile
 11933  0071CE  A8C5               	btfss	4037,4,c	;volatile
 11934  0071D0  0012               	return	
 11935  0071D2  D7FD               	goto	l1133
 11936  0071D4                     __end_of__i2c_acknowledge:
 11937                           	opt stack 0
 11938                           tblptru	equ	0xFF8
 11939                           tblptrh	equ	0xFF7
 11940                           tblptrl	equ	0xFF6
 11941                           tablat	equ	0xFF5
 11942                           prodh	equ	0xFF4
 11943                           prodl	equ	0xFF3
 11944                           intcon	equ	0xFF2
 11945                           intcon2	equ	0xFF1
 11946                           intcon3	equ	0xFF0
 11947                           postinc0	equ	0xFEE
 11948                           wreg	equ	0xFE8
 11949                           indf1	equ	0xFE7
 11950                           postdec1	equ	0xFE5
 11951                           plusw1	equ	0xFE3
 11952                           fsr1h	equ	0xFE2
 11953                           fsr1l	equ	0xFE1
 11954                           indf2	equ	0xFDF
 11955                           postinc2	equ	0xFDE
 11956                           postdec2	equ	0xFDD
 11957                           plusw2	equ	0xFDB
 11958                           fsr2h	equ	0xFDA
 11959                           fsr2l	equ	0xFD9
 11960                           status	equ	0xFD8
 11961                           
 11962 ;; *************** function _USBDeviceTasks *****************
 11963 ;; Defined at:
 11964 ;;		line 477 in file "usb_device.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;  i               1   31[COMRAM] unsigned char 
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11982 ;;Total ram usage:        1 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    8
 11985 ;; This function calls:
 11986 ;;		_USBCtrlEPAllowStatusStage
 11987 ;;		_USBCtrlEPService
 11988 ;;		_USBDeviceInit
 11989 ;;		_USBIncrement1msInternalTimers
 11990 ;;		_USBStallHandler
 11991 ;;		_USBSuspend
 11992 ;;		_USBWakeFromSuspend
 11993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11994 ;; This function is called by:
 11995 ;;		_main
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text61
 12000  002C92                     __ptext61:
 12001                           	opt stack 0
 12002  002C92                     _USBDeviceTasks:
 12003                           	opt stack 22
 12004                           
 12005                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12006                           
 12007                           ; BSR set to: 15
 12008                           
 12009                           ; BSR set to: 15
 12010                           ;usb_device.c: 543: return;
 12011                           
 12012                           ; BSR set to: 15
 12013                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12014                           
 12015                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12016                           
 12017                           ;usb_device.c: 511: UIE = 0;
 12018                           
 12019                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12020                           
 12021                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12022                           
 12023                           ;incstack = 0
 12024  002C92  505F               	movf	_USBDeviceState,w,c
 12025  002C94  A4D8               	btfss	status,2,c
 12026  002C96  D011               	goto	l150
 12027                           
 12028                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12029  002C98  0E00               	movlw	0
 12030  002C9A  6E65               	movwf	3941,c	;volatile
 12031                           
 12032                           ;usb_device.c: 572: UIE = 0;
 12033  002C9C  0E00               	movlw	0
 12034  002C9E  010F               	movlb	15	; () banked
 12035  002CA0  6F36               	movwf	54,b	;volatile
 12036                           
 12037                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12038  002CA2  0E16               	movlw	22
 12039  002CA4  6F39               	movwf	57,b	;volatile
 12040  002CA6  0E9F               	movlw	159
 12041  002CA8  6F37               	movwf	55,b	;volatile
 12042  002CAA  0E7B               	movlw	123
 12043  002CAC  6F36               	movwf	54,b	;volatile
 12044                           
 12045                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12046  002CAE  D001               	goto	l151
 12047  002CB0                     l152:
 12048  002CB0  8665               	bsf	3941,3,c	;volatile
 12049  002CB2                     l151:
 12050  002CB2  A665               	btfss	3941,3,c	;volatile
 12051  002CB4  D7FD               	goto	l152
 12052                           
 12053                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12054  002CB6  0E01               	movlw	1
 12055  002CB8  6E5F               	movwf	_USBDeviceState,c
 12056  002CBA                     l150:
 12057                           
 12058                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12059  002CBA  045F               	decf	_USBDeviceState,w,c
 12060  002CBC  B4D8               	btfsc	status,2,c
 12061                           
 12062                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12063  002CBE  BA65               	btfsc	3941,5,c	;volatile
 12064  002CC0  D009               	goto	l155
 12065                           
 12066                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12067  002CC2  0E00               	movlw	0
 12068  002CC4  6E62               	movwf	3938,c	;volatile
 12069                           
 12070                           ;usb_device.c: 612: UIE=0;
 12071  002CC6  0E00               	movlw	0
 12072  002CC8  010F               	movlb	15	; () banked
 12073  002CCA  6F36               	movwf	54,b	;volatile
 12074                           
 12075                           ; BSR set to: 15
 12076                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12077  002CCC  8136               	bsf	54,0,b	;volatile
 12078                           
 12079                           ; BSR set to: 15
 12080                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12081  002CCE  8936               	bsf	54,4,b	;volatile
 12082                           
 12083                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12084  002CD0  0E02               	movlw	2
 12085  002CD2  6E5F               	movwf	_USBDeviceState,c
 12086  002CD4                     l155:
 12087                           
 12088                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12089                           
 12090                           ; BSR set to: 15
 12091                           
 12092                           ; BSR set to: 15
 12093  002CD4  A462               	btfss	3938,2,c	;volatile
 12094  002CD6  D006               	goto	l156
 12095  002CD8  010F               	movlb	15	; () banked
 12096  002CDA  A536               	btfss	54,2,b	;volatile
 12097  002CDC  D003               	goto	l156
 12098                           
 12099                           ; BSR set to: 15
 12100                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12101  002CDE  9462               	bcf	3938,2,c	;volatile
 12102                           
 12103                           ; BSR set to: 15
 12104                           ;usb_device.c: 640: USBWakeFromSuspend();
 12105  002CE0  ECB3  F035         	call	_USBWakeFromSuspend	;wreg free
 12106  002CE4                     l156:
 12107                           
 12108                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12109  002CE4  A265               	btfss	3941,1,c	;volatile
 12110  002CE6  D002               	goto	l157
 12111                           
 12112                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12113  002CE8  98A1               	bcf	4001,4,c	;volatile
 12114                           
 12115                           ;usb_device.c: 650: return;
 12116  002CEA  0012               	return	
 12117  002CEC                     l157:
 12118                           
 12119                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12120  002CEC  A062               	btfss	3938,0,c	;volatile
 12121  002CEE  D008               	goto	l158
 12122  002CF0  010F               	movlb	15	; () banked
 12123  002CF2  A136               	btfss	54,0,b	;volatile
 12124  002CF4  D005               	goto	l158
 12125                           
 12126                           ; BSR set to: 15
 12127                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12128  002CF6  ECBB  F019         	call	_USBDeviceInit	;wreg free
 12129                           
 12130                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12131  002CFA  0E04               	movlw	4
 12132  002CFC  6E5F               	movwf	_USBDeviceState,c
 12133                           
 12134                           ;usb_device.c: 681: (UIR &= 0xFE);
 12135  002CFE  9062               	bcf	3938,0,c	;volatile
 12136  002D00                     l158:
 12137                           
 12138                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12139  002D00  A862               	btfss	3938,4,c	;volatile
 12140  002D02  D004               	goto	l159
 12141  002D04  010F               	movlb	15	; () banked
 12142  002D06  B936               	btfsc	54,4,b	;volatile
 12143                           
 12144                           ; BSR set to: 15
 12145                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12146  002D08  EC69  F036         	call	_USBSuspend	;wreg free
 12147  002D0C                     l159:
 12148                           
 12149                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12150  002D0C  AC62               	btfss	3938,6,c	;volatile
 12151  002D0E  D01C               	goto	l163
 12152                           
 12153                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12154  002D10  010F               	movlb	15	; () banked
 12155  002D12  AD36               	btfss	54,6,b	;volatile
 12156  002D14  D00E               	goto	l161
 12157                           
 12158                           ; BSR set to: 15
 12159                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12160  002D16  0E00               	movlw	0
 12161  002D18  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12162  002D1A  0E73               	movlw	115
 12163  002D1C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12164  002D1E  0E00               	movlw	0
 12165  002D20  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12166  002D22  0E00               	movlw	0
 12167  002D24  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12168  002D26  0E00               	movlw	0
 12169  002D28  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12170  002D2A  0E01               	movlw	1
 12171  002D2C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12172  002D2E  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12173  002D32                     l161:
 12174                           
 12175                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12176  002D32  9C62               	bcf	3938,6,c	;volatile
 12177                           
 12178                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12179  002D34  ECC6  F037         	call	_USBIncrement1msInternalTimers	;wreg free
 12180                           
 12181                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12182  002D38  0100               	movlb	0	; () banked
 12183  002D3A  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12184  002D3C  A4D8               	btfss	status,2,c
 12185                           
 12186                           ; BSR set to: 0
 12187                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12188  002D3E  07A7               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12192                           
 12193                           ; BSR set to: 0
 12194  002D40  51A7               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12195  002D42  B4D8               	btfsc	status,2,c
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12199  002D44  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12200  002D48                     l163:
 12201                           
 12202                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12203  002D48  AA62               	btfss	3938,5,c	;volatile
 12204  002D4A  D004               	goto	l164
 12205  002D4C  010F               	movlb	15	; () banked
 12206  002D4E  BB36               	btfsc	54,5,b	;volatile
 12207                           
 12208                           ; BSR set to: 15
 12209                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12210  002D50  EC7C  F034         	call	_USBStallHandler	;wreg free
 12211  002D54                     l164:
 12212                           
 12213                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12214  002D54  A262               	btfss	3938,1,c	;volatile
 12215  002D56  D012               	goto	l165
 12216  002D58  010F               	movlb	15	; () banked
 12217  002D5A  A336               	btfss	54,1,b	;volatile
 12218  002D5C  D00F               	goto	l165
 12219                           
 12220                           ; BSR set to: 15
 12221                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12222  002D5E  0E7F               	movlw	127
 12223  002D60  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12224  002D62  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12225  002D64  0E00               	movlw	0
 12226  002D66  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12227  002D68  0E00               	movlw	0
 12228  002D6A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12229  002D6C  0E00               	movlw	0
 12230  002D6E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12231  002D70  0E01               	movlw	1
 12232  002D72  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12233  002D74  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12234                           
 12235                           ;usb_device.c: 759: {UEIR = 0;};
 12236  002D78  0E00               	movlw	0
 12237  002D7A  6E63               	movwf	3939,c	;volatile
 12238  002D7C                     l165:
 12239                           
 12240                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12241  002D7C  0E04               	movlw	4
 12242  002D7E  605F               	cpfslt	_USBDeviceState,c
 12243  002D80  D002               	goto	l166
 12244                           
 12245                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12246  002D82  98A1               	bcf	4001,4,c	;volatile
 12247                           
 12248                           ;usb_device.c: 777: return;
 12249  002D84  0012               	return	
 12250  002D86                     l166:
 12251                           
 12252                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12253  002D86  010F               	movlb	15	; () banked
 12254  002D88  A736               	btfss	54,3,b	;volatile
 12255  002D8A  D03C               	goto	u11790
 12256                           
 12257                           ; BSR set to: 15
 12258                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12259  002D8C  0E00               	movlw	0
 12260  002D8E  6E20               	movwf	USBDeviceTasks@i,c
 12261  002D90                     l14128:
 12262                           
 12263                           ; BSR set to: 15
 12264  002D90  0E03               	movlw	3
 12265  002D92  6420               	cpfsgt	USBDeviceTasks@i,c
 12266  002D94  D001               	goto	l168
 12267  002D96  D036               	goto	u11790
 12268  002D98                     l168:
 12269                           
 12270                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12271  002D98  A662               	btfss	3938,3,c	;volatile
 12272  002D9A  D034               	goto	u11790
 12273                           
 12274                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12275  002D9C  CF64 F0B4          	movff	3940,_USTATcopy	;volatile
 12276                           
 12277                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12278  002DA0  0100               	movlb	0	; () banked
 12279  002DA2  31B4               	rrcf	_USTATcopy& (0+255),w,b
 12280  002DA4  32E8               	rrcf	wreg,f,c
 12281  002DA6  32E8               	rrcf	wreg,f,c
 12282  002DA8  0B0F               	andlw	15
 12283  002DAA  6FA9               	movwf	_endpoint_number& (0+255),b
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;usb_device.c: 793: (UIR &= 0xF7);
 12287  002DAC  9662               	bcf	3938,3,c	;volatile
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12291  002DAE  B5B4               	btfsc	_USTATcopy& (0+255),2,b
 12292  002DB0  D007               	goto	l171
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12296  002DB2  51A9               	movf	_endpoint_number& (0+255),w,b
 12297  002DB4  0D01               	mullw	1
 12298  002DB6  0E57               	movlw	low _ep_data_out
 12299  002DB8  24F3               	addwf	prodl,w,c
 12300  002DBA  6ED9               	movwf	fsr2l,c
 12301  002DBC  0E01               	movlw	high _ep_data_out
 12302  002DBE  D007               	goto	L6
 12303  002DC0                     l171:
 12304                           
 12305                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12306                           
 12307                           ; BSR set to: 1
 12308  002DC0  0100               	movlb	0	; () banked
 12309  002DC2  51A9               	movf	_endpoint_number& (0+255),w,b
 12310  002DC4  0D01               	mullw	1
 12311  002DC6  0E5A               	movlw	low _ep_data_in
 12312  002DC8  24F3               	addwf	prodl,w,c
 12313  002DCA  6ED9               	movwf	fsr2l,c
 12314  002DCC  0E01               	movlw	high _ep_data_in
 12315  002DCE                     L6:
 12316  002DCE  20F4               	addwfc	prodh,w,c
 12317  002DD0  6EDA               	movwf	fsr2h,c
 12318  002DD2  0101               	movlb	1	; () banked
 12319  002DD4  70DF               	btg	indf2,0,c
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 12323                           
 12324                           ; BSR set to: 1
 12325  002DD6  0100               	movlb	0	; () banked
 12326  002DD8  51A9               	movf	_endpoint_number& (0+255),w,b
 12327  002DDA  A4D8               	btfss	status,2,c
 12328  002DDC  D003               	goto	l173
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 12332  002DDE  EC25  F028         	call	_USBCtrlEPService	;wreg free
 12333                           
 12334                           ;usb_device.c: 813: }
 12335  002DE2  D00E               	goto	l175
 12336  002DE4                     l173:
 12337                           
 12338                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 12339  002DE4  0E00               	movlw	0
 12340  002DE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12341  002DE8  0E72               	movlw	114
 12342  002DEA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12343  002DEC  0EB4               	movlw	low _USTATcopy
 12344  002DEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12345  002DF0  0E00               	movlw	high _USTATcopy
 12346  002DF2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12347  002DF4  0E00               	movlw	0
 12348  002DF6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12349  002DF8  0E00               	movlw	0
 12350  002DFA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12351  002DFC  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12352  002E00                     l175:
 12353  002E00  2A20               	incf	USBDeviceTasks@i,f,c
 12354  002E02  D7C6               	goto	l14128
 12355  002E04                     u11790:
 12356                           
 12357                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 12358  002E04  98A1               	bcf	4001,4,c	;volatile
 12359  002E06  0012               	return		;funcret
 12360  002E08                     __end_of_USBDeviceTasks:
 12361                           	opt stack 0
 12362                           tblptru	equ	0xFF8
 12363                           tblptrh	equ	0xFF7
 12364                           tblptrl	equ	0xFF6
 12365                           tablat	equ	0xFF5
 12366                           prodh	equ	0xFF4
 12367                           prodl	equ	0xFF3
 12368                           intcon	equ	0xFF2
 12369                           intcon2	equ	0xFF1
 12370                           intcon3	equ	0xFF0
 12371                           postinc0	equ	0xFEE
 12372                           wreg	equ	0xFE8
 12373                           indf1	equ	0xFE7
 12374                           postdec1	equ	0xFE5
 12375                           plusw1	equ	0xFE3
 12376                           fsr1h	equ	0xFE2
 12377                           fsr1l	equ	0xFE1
 12378                           indf2	equ	0xFDF
 12379                           postinc2	equ	0xFDE
 12380                           postdec2	equ	0xFDD
 12381                           plusw2	equ	0xFDB
 12382                           fsr2h	equ	0xFDA
 12383                           fsr2l	equ	0xFD9
 12384                           status	equ	0xFD8
 12385                           
 12386 ;; *************** function _USBWakeFromSuspend *****************
 12387 ;; Defined at:
 12388 ;;		line 2305 in file "usb_device.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;		None
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;		None
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  1    wreg      void 
 12395 ;; Registers used:
 12396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12406 ;;Total ram usage:        0 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    4
 12409 ;; This function calls:
 12410 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12411 ;; This function is called by:
 12412 ;;		_USBDeviceTasks
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           	psect	text62
 12417  006B66                     __ptext62:
 12418                           	opt stack 0
 12419  006B66                     _USBWakeFromSuspend:
 12420                           	opt stack 25
 12421                           
 12422                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 12423                           
 12424                           ;incstack = 0
 12425  006B66  0E00               	movlw	0
 12426  006B68  0100               	movlb	0	; () banked
 12427  006B6A  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12431  006B6C  0E00               	movlw	0
 12432  006B6E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12433  006B70  0E74               	movlw	116
 12434  006B72  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12435  006B74  0E00               	movlw	0
 12436  006B76  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12437  006B78  0E00               	movlw	0
 12438  006B7A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12439  006B7C  0E00               	movlw	0
 12440  006B7E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12441  006B80  0E00               	movlw	0
 12442  006B82  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12443  006B84  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12444                           
 12445                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 12446  006B88  9265               	bcf	3941,1,c	;volatile
 12447                           
 12448                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 12449  006B8A  010F               	movlb	15	; () banked
 12450  006B8C  9536               	bcf	54,2,b	;volatile
 12451                           
 12452                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 12453  006B8E  D001               	goto	l303
 12454  006B90                     
 12455                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 12456                           
 12457                           ; BSR set to: 15
 12458  006B90  9462               	bcf	3938,2,c	;volatile
 12459  006B92                     l303:
 12460  006B92  B462               	btfsc	3938,2,c	;volatile
 12461  006B94  D7FD               	goto	l304
 12462                           
 12463                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 12464  006B96  0E00               	movlw	0
 12465  006B98  0100               	movlb	0	; () banked
 12466  006B9A  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12467                           
 12468                           ; BSR set to: 0
 12469  006B9C  0012               	return		;funcret
 12470  006B9E                     __end_of_USBWakeFromSuspend:
 12471                           	opt stack 0
 12472                           tblptru	equ	0xFF8
 12473                           tblptrh	equ	0xFF7
 12474                           tblptrl	equ	0xFF6
 12475                           tablat	equ	0xFF5
 12476                           prodh	equ	0xFF4
 12477                           prodl	equ	0xFF3
 12478                           intcon	equ	0xFF2
 12479                           intcon2	equ	0xFF1
 12480                           intcon3	equ	0xFF0
 12481                           postinc0	equ	0xFEE
 12482                           wreg	equ	0xFE8
 12483                           indf1	equ	0xFE7
 12484                           postdec1	equ	0xFE5
 12485                           plusw1	equ	0xFE3
 12486                           fsr1h	equ	0xFE2
 12487                           fsr1l	equ	0xFE1
 12488                           indf2	equ	0xFDF
 12489                           postinc2	equ	0xFDE
 12490                           postdec2	equ	0xFDD
 12491                           plusw2	equ	0xFDB
 12492                           fsr2h	equ	0xFDA
 12493                           fsr2l	equ	0xFD9
 12494                           status	equ	0xFD8
 12495                           
 12496 ;; *************** function _USBSuspend *****************
 12497 ;; Defined at:
 12498 ;;		line 2247 in file "usb_device.c"
 12499 ;; Parameters:    Size  Location     Type
 12500 ;;		None
 12501 ;; Auto vars:     Size  Location     Type
 12502 ;;		None
 12503 ;; Return value:  Size  Location     Type
 12504 ;;                  1    wreg      void 
 12505 ;; Registers used:
 12506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12507 ;; Tracked objects:
 12508 ;;		On entry : 0/0
 12509 ;;		On exit  : 0/0
 12510 ;;		Unchanged: 0/0
 12511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12516 ;;Total ram usage:        0 bytes
 12517 ;; Hardware stack levels used:    1
 12518 ;; Hardware stack levels required when called:    4
 12519 ;; This function calls:
 12520 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12521 ;; This function is called by:
 12522 ;;		_USBDeviceTasks
 12523 ;; This function uses a non-reentrant model
 12524 ;;
 12525                           
 12526                           	psect	text63
 12527  006CD2                     __ptext63:
 12528                           	opt stack 0
 12529  006CD2                     _USBSuspend:
 12530                           	opt stack 25
 12531                           
 12532                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;incstack = 0
 12536  006CD2  010F               	movlb	15	; () banked
 12537  006CD4  8536               	bsf	54,2,b	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;usb_device.c: 2273: (UIR &= 0xEF);
 12541  006CD6  9862               	bcf	3938,4,c	;volatile
 12542                           
 12543                           ; BSR set to: 15
 12544                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 12545  006CD8  8265               	bsf	3941,1,c	;volatile
 12546                           
 12547                           ; BSR set to: 15
 12548                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 12549  006CDA  0E01               	movlw	1
 12550  006CDC  0100               	movlb	0	; () banked
 12551  006CDE  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 12555  006CE0  0E00               	movlw	0
 12556  006CE2  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12560  006CE4  0E00               	movlw	0
 12561  006CE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12562  006CE8  0E75               	movlw	117
 12563  006CEA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12564  006CEC  0E00               	movlw	0
 12565  006CEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12566  006CF0  0E00               	movlw	0
 12567  006CF2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12568  006CF4  0E00               	movlw	0
 12569  006CF6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12570  006CF8  0E00               	movlw	0
 12571  006CFA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12572  006CFC  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12573  006D00  0012               	return		;funcret
 12574  006D02                     __end_of_USBSuspend:
 12575                           	opt stack 0
 12576                           tblptru	equ	0xFF8
 12577                           tblptrh	equ	0xFF7
 12578                           tblptrl	equ	0xFF6
 12579                           tablat	equ	0xFF5
 12580                           prodh	equ	0xFF4
 12581                           prodl	equ	0xFF3
 12582                           intcon	equ	0xFF2
 12583                           intcon2	equ	0xFF1
 12584                           intcon3	equ	0xFF0
 12585                           postinc0	equ	0xFEE
 12586                           wreg	equ	0xFE8
 12587                           indf1	equ	0xFE7
 12588                           postdec1	equ	0xFE5
 12589                           plusw1	equ	0xFE3
 12590                           fsr1h	equ	0xFE2
 12591                           fsr1l	equ	0xFE1
 12592                           indf2	equ	0xFDF
 12593                           postinc2	equ	0xFDE
 12594                           postdec2	equ	0xFDD
 12595                           plusw2	equ	0xFDB
 12596                           fsr2h	equ	0xFDA
 12597                           fsr2l	equ	0xFD9
 12598                           status	equ	0xFD8
 12599                           
 12600 ;; *************** function _USBStallHandler *****************
 12601 ;; Defined at:
 12602 ;;		line 2204 in file "usb_device.c"
 12603 ;; Parameters:    Size  Location     Type
 12604 ;;		None
 12605 ;; Auto vars:     Size  Location     Type
 12606 ;;		None
 12607 ;; Return value:  Size  Location     Type
 12608 ;;                  1    wreg      void 
 12609 ;; Registers used:
 12610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12611 ;; Tracked objects:
 12612 ;;		On entry : 0/0
 12613 ;;		On exit  : 0/0
 12614 ;;		Unchanged: 0/0
 12615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12620 ;;Total ram usage:        1 bytes
 12621 ;; Hardware stack levels used:    1
 12622 ;; This function calls:
 12623 ;;		Nothing
 12624 ;; This function is called by:
 12625 ;;		_USBDeviceTasks
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text64
 12630  0068F8                     __ptext64:
 12631                           	opt stack 0
 12632  0068F8                     _USBStallHandler:
 12633                           	opt stack 29
 12634                           
 12635                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12636                           
 12637                           ;incstack = 0
 12638  0068F8  010F               	movlb	15	; () banked
 12639  0068FA  A126               	btfss	38,0,b	;volatile
 12640  0068FC  D01D               	goto	l295
 12641                           
 12642                           ; BSR set to: 15
 12643                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 12644  0068FE  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12645  006902  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12646  006906  0E80               	movlw	128
 12647  006908  18DE               	xorwf	postinc2,w,c
 12648  00690A  A4D8               	btfss	status,2,c
 12649  00690C  D014               	goto	l296
 12650                           
 12651                           ; BSR set to: 15
 12652  00690E  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 12653  006912  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12654  006916  0E84               	movlw	132
 12655  006918  18DE               	xorwf	postinc2,w,c
 12656  00691A  A4D8               	btfss	status,2,c
 12657  00691C  D00C               	goto	l296
 12658                           
 12659                           ; BSR set to: 15
 12660                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 12661  00691E  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12662  006922  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12663  006926  0E0C               	movlw	12
 12664  006928  6EDF               	movwf	indf2,c
 12665                           
 12666                           ; BSR set to: 15
 12667                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12668  00692A  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12669  00692E  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12670  006932  0E00               	movlw	0
 12671  006934  8EDB               	bsf	plusw2,7,c
 12672  006936                     l296:
 12673                           
 12674                           ; BSR set to: 15
 12675                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 12676                           
 12677                           ; BSR set to: 15
 12678  006936  9126               	bcf	38,0,b	;volatile
 12679  006938                     l295:
 12680                           
 12681                           ; BSR set to: 15
 12682                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 12683  006938  9A62               	bcf	3938,5,c	;volatile
 12684                           
 12685                           ; BSR set to: 15
 12686  00693A  0012               	return		;funcret
 12687  00693C                     __end_of_USBStallHandler:
 12688                           	opt stack 0
 12689                           tblptru	equ	0xFF8
 12690                           tblptrh	equ	0xFF7
 12691                           tblptrl	equ	0xFF6
 12692                           tablat	equ	0xFF5
 12693                           prodh	equ	0xFF4
 12694                           prodl	equ	0xFF3
 12695                           intcon	equ	0xFF2
 12696                           intcon2	equ	0xFF1
 12697                           intcon3	equ	0xFF0
 12698                           postinc0	equ	0xFEE
 12699                           wreg	equ	0xFE8
 12700                           indf1	equ	0xFE7
 12701                           postdec1	equ	0xFE5
 12702                           plusw1	equ	0xFE3
 12703                           fsr1h	equ	0xFE2
 12704                           fsr1l	equ	0xFE1
 12705                           indf2	equ	0xFDF
 12706                           postinc2	equ	0xFDE
 12707                           postdec2	equ	0xFDD
 12708                           plusw2	equ	0xFDB
 12709                           fsr2h	equ	0xFDA
 12710                           fsr2l	equ	0xFD9
 12711                           status	equ	0xFD8
 12712                           
 12713 ;; *************** function _USBIncrement1msInternalTimers *****************
 12714 ;; Defined at:
 12715 ;;		line 3027 in file "usb_device.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;		None
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		wreg, status,2, status,0
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12733 ;;Total ram usage:        0 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; This function calls:
 12736 ;;		Nothing
 12737 ;; This function is called by:
 12738 ;;		_USBDeviceTasks
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text65
 12743  006F8C                     __ptext65:
 12744                           	opt stack 0
 12745  006F8C                     _USBIncrement1msInternalTimers:
 12746                           	opt stack 29
 12747                           
 12748                           ;usb_device.c: 3035: USB1msTickCount++;
 12749                           
 12750                           ; BSR set to: 15
 12751                           ;incstack = 0
 12752  006F8C  0E01               	movlw	1
 12753  006F8E  0101               	movlb	1	; () banked
 12754  006F90  274D               	addwf	_USB1msTickCount& (0+255),f,b
 12755  006F92  0E00               	movlw	0
 12756  006F94  234E               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 12757  006F96  234F               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 12758  006F98  2350               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 12759                           
 12760                           ; BSR set to: 1
 12761                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 12762  006F9A  0100               	movlb	0	; () banked
 12763  006F9C  51AA               	movf	_USBBusIsSuspended& (0+255),w,b
 12764  006F9E  A4D8               	btfss	status,2,c
 12765  006FA0  0012               	return	
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 12769  006FA2  2BA1               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 12773  006FA4  51A1               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 12774  006FA6  A4D8               	btfss	status,2,c
 12775  006FA8  0012               	return	
 12776                           
 12777                           ; BSR set to: 0
 12778                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 12779  006FAA  69A1               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 12780                           
 12781                           ; BSR set to: 0
 12782  006FAC  0012               	return	
 12783  006FAE                     __end_of_USBIncrement1msInternalTimers:
 12784                           	opt stack 0
 12785                           tblptru	equ	0xFF8
 12786                           tblptrh	equ	0xFF7
 12787                           tblptrl	equ	0xFF6
 12788                           tablat	equ	0xFF5
 12789                           prodh	equ	0xFF4
 12790                           prodl	equ	0xFF3
 12791                           intcon	equ	0xFF2
 12792                           intcon2	equ	0xFF1
 12793                           intcon3	equ	0xFF0
 12794                           postinc0	equ	0xFEE
 12795                           wreg	equ	0xFE8
 12796                           indf1	equ	0xFE7
 12797                           postdec1	equ	0xFE5
 12798                           plusw1	equ	0xFE3
 12799                           fsr1h	equ	0xFE2
 12800                           fsr1l	equ	0xFE1
 12801                           indf2	equ	0xFDF
 12802                           postinc2	equ	0xFDE
 12803                           postdec2	equ	0xFDD
 12804                           plusw2	equ	0xFDB
 12805                           fsr2h	equ	0xFDA
 12806                           fsr2l	equ	0xFD9
 12807                           status	equ	0xFD8
 12808                           
 12809 ;; *************** function _USBDeviceInit *****************
 12810 ;; Defined at:
 12811 ;;		line 277 in file "usb_device.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;		None
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  i               1    8[COMRAM] unsigned char 
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12829 ;;Total ram usage:        1 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    1
 12832 ;; This function calls:
 12833 ;;		_memset
 12834 ;; This function is called by:
 12835 ;;		_USBDeviceTasks
 12836 ;;		_main
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text66
 12841  003376                     __ptext66:
 12842                           	opt stack 0
 12843  003376                     _USBDeviceInit:
 12844                           	opt stack 28
 12845                           
 12846                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 12847                           
 12848                           ; BSR set to: 0
 12849                           ;incstack = 0
 12850  003376  98A0               	bcf	4000,4,c	;volatile
 12851                           
 12852                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 12853  003378  0E00               	movlw	0
 12854  00337A  6E63               	movwf	3939,c	;volatile
 12855                           
 12856                           ;usb_device.c: 291: {UIR = 0;};
 12857  00337C  0E00               	movlw	0
 12858  00337E  6E62               	movwf	3938,c	;volatile
 12859                           
 12860                           ;usb_device.c: 294: UEP0 = 0;
 12861  003380  0E00               	movlw	0
 12862  003382  010F               	movlb	15	; () banked
 12863  003384  6F26               	movwf	38,b	;volatile
 12864                           
 12865                           ; BSR set to: 15
 12866                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 12867  003386  0E27               	movlw	39
 12868  003388  6E01               	movwf	memset@p1,c
 12869  00338A  0E0F               	movlw	15
 12870  00338C  6E02               	movwf	memset@p1+1,c
 12871  00338E  0E00               	movlw	0
 12872  003390  6E04               	movwf	memset@c+1,c
 12873  003392  0E00               	movlw	0
 12874  003394  6E03               	movwf	memset@c,c
 12875  003396  0E00               	movlw	0
 12876  003398  6E06               	movwf	memset@n+1,c
 12877  00339A  0E02               	movlw	2
 12878  00339C  6E05               	movwf	memset@n,c
 12879  00339E  ECDA  F036         	call	_memset	;wreg free
 12880                           
 12881                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12882  0033A2  0E16               	movlw	22
 12883  0033A4  010F               	movlb	15	; () banked
 12884  0033A6  6F39               	movwf	57,b	;volatile
 12885                           
 12886                           ; BSR set to: 15
 12887  0033A8  0E9F               	movlw	159
 12888  0033AA  6F37               	movwf	55,b	;volatile
 12889                           
 12890                           ; BSR set to: 15
 12891  0033AC  0E7B               	movlw	123
 12892  0033AE  6F36               	movwf	54,b	;volatile
 12893                           
 12894                           ; BSR set to: 15
 12895                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 12896  0033B0  0E00               	movlw	0
 12897  0033B2  6E09               	movwf	USBDeviceInit@i,c
 12898  0033B4                     l13318:
 12899                           
 12900                           ; BSR set to: 15
 12901  0033B4  0E0B               	movlw	11
 12902  0033B6  6409               	cpfsgt	USBDeviceInit@i,c
 12903  0033B8  D001               	goto	l139
 12904  0033BA  D00E               	goto	u10650
 12905  0033BC                     l139:
 12906                           
 12907                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 12908                           
 12909                           ; BSR set to: 15
 12910  0033BC  5009               	movf	USBDeviceInit@i,w,c
 12911  0033BE  0D04               	mullw	4
 12912  0033C0  0E00               	movlw	0
 12913  0033C2  24F3               	addwf	prodl,w,c
 12914  0033C4  6ED9               	movwf	fsr2l,c
 12915  0033C6  0E0D               	movlw	13
 12916  0033C8  20F4               	addwfc	prodh,w,c
 12917  0033CA  6EDA               	movwf	fsr2h,c
 12918  0033CC  6ADE               	clrf	postinc2,c
 12919  0033CE  6ADE               	clrf	postinc2,c
 12920  0033D0  6ADE               	clrf	postinc2,c
 12921  0033D2  6ADD               	clrf	postdec2,c
 12922  0033D4  2A09               	incf	USBDeviceInit@i,f,c
 12923  0033D6  D7EE               	goto	l13318
 12924  0033D8                     u10650:
 12925                           
 12926                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 12927  0033D8  8C65               	bsf	3941,6,c	;volatile
 12928                           
 12929                           ;usb_device.c: 316: UADDR = 0x00;
 12930  0033DA  0E00               	movlw	0
 12931  0033DC  010F               	movlb	15	; () banked
 12932  0033DE  6F38               	movwf	56,b	;volatile
 12933                           
 12934                           ; BSR set to: 15
 12935                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 12936  0033E0  9865               	bcf	3941,4,c	;volatile
 12937                           
 12938                           ; BSR set to: 15
 12939                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 12940  0033E2  9C65               	bcf	3941,6,c	;volatile
 12941  0033E4                     
 12942                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 12943                           
 12944                           ; BSR set to: 15
 12945  0033E4  9662               	bcf	3938,3,c	;volatile
 12946                           
 12947                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 12948  0033E6  0E00               	movlw	0
 12949  0033E8  0100               	movlb	0	; () banked
 12950  0033EA  6F70               	movwf	(_inPipes+3)& (0+255),b
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 12954  0033EC  0E00               	movlw	0
 12955  0033EE  0101               	movlb	1	; () banked
 12956  0033F0  6F34               	movwf	(_outPipes+3)& (0+255),b
 12957                           
 12958                           ; BSR set to: 1
 12959                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 12960  0033F2  0E00               	movlw	0
 12961  0033F4  6F36               	movwf	(_outPipes+5)& (0+255),b
 12962  0033F6  0E00               	movlw	0
 12963  0033F8  6F35               	movwf	(_outPipes+4)& (0+255),b
 12964                           
 12965                           ; BSR set to: 1
 12966                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 12967  0033FA  B662               	btfsc	3938,3,c	;volatile
 12968  0033FC  D7F3               	goto	l141
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 12972                           
 12973                           ; BSR set to: 1
 12974  0033FE  0E01               	movlw	1
 12975  003400  0100               	movlb	0	; () banked
 12976  003402  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12977                           
 12978                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 12979  003404  0E01               	movlw	1
 12980  003406  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12981                           
 12982                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 12983  003408  0E00               	movlw	0
 12984  00340A  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12985                           
 12986                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 12987  00340C  0E00               	movlw	0
 12988  00340E  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12989                           
 12990                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 12991  003410  0E00               	movlw	0
 12992  003412  6FAA               	movwf	_USBBusIsSuspended& (0+255),b
 12993                           
 12994                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 12995  003414  0E00               	movlw	0
 12996  003416  6E09               	movwf	USBDeviceInit@i,c
 12997  003418                     l13346:
 12998                           
 12999                           ; BSR set to: 0
 13000  003418  0E02               	movlw	2
 13001  00341A  6409               	cpfsgt	USBDeviceInit@i,c
 13002  00341C  D001               	goto	l143
 13003  00341E  D02E               	goto	u10680
 13004  003420                     l143:
 13005                           
 13006                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13007                           
 13008                           ; BSR set to: 0
 13009  003420  5009               	movf	USBDeviceInit@i,w,c
 13010  003422  0D02               	mullw	2
 13011  003424  0E73               	movlw	low _pBDTEntryIn
 13012  003426  24F3               	addwf	prodl,w,c
 13013  003428  6ED9               	movwf	fsr2l,c
 13014  00342A  0E00               	movlw	high _pBDTEntryIn
 13015  00342C  20F4               	addwfc	prodh,w,c
 13016  00342E  6EDA               	movwf	fsr2h,c
 13017  003430  0E00               	movlw	0
 13018  003432  6EDE               	movwf	postinc2,c
 13019  003434  0E00               	movlw	0
 13020  003436  6EDD               	movwf	postdec2,c
 13021                           
 13022                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13023  003438  5009               	movf	USBDeviceInit@i,w,c
 13024  00343A  0D02               	mullw	2
 13025  00343C  0E79               	movlw	low _pBDTEntryOut
 13026  00343E  24F3               	addwf	prodl,w,c
 13027  003440  6ED9               	movwf	fsr2l,c
 13028  003442  0E00               	movlw	high _pBDTEntryOut
 13029  003444  20F4               	addwfc	prodh,w,c
 13030  003446  6EDA               	movwf	fsr2h,c
 13031  003448  0E00               	movlw	0
 13032  00344A  6EDE               	movwf	postinc2,c
 13033  00344C  0E00               	movlw	0
 13034  00344E  6EDD               	movwf	postdec2,c
 13035                           
 13036                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13037  003450  5009               	movf	USBDeviceInit@i,w,c
 13038  003452  0D01               	mullw	1
 13039  003454  0E5A               	movlw	low _ep_data_in
 13040  003456  24F3               	addwf	prodl,w,c
 13041  003458  6ED9               	movwf	fsr2l,c
 13042  00345A  0E01               	movlw	high _ep_data_in
 13043  00345C  20F4               	addwfc	prodh,w,c
 13044  00345E  6EDA               	movwf	fsr2h,c
 13045  003460  0E00               	movlw	0
 13046  003462  6EDF               	movwf	indf2,c
 13047                           
 13048                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13049  003464  5009               	movf	USBDeviceInit@i,w,c
 13050  003466  0D01               	mullw	1
 13051  003468  0E57               	movlw	low _ep_data_out
 13052  00346A  24F3               	addwf	prodl,w,c
 13053  00346C  6ED9               	movwf	fsr2l,c
 13054  00346E  0E01               	movlw	high _ep_data_out
 13055  003470  20F4               	addwfc	prodh,w,c
 13056  003472  6EDA               	movwf	fsr2h,c
 13057  003474  0E00               	movlw	0
 13058  003476  6EDF               	movwf	indf2,c
 13059  003478  2A09               	incf	USBDeviceInit@i,f,c
 13060  00347A  D7CE               	goto	l13346
 13061  00347C                     u10680:
 13062                           
 13063                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13064  00347C  0E08               	movlw	8
 13065  00347E  0100               	movlb	0	; () banked
 13066  003480  6F73               	movwf	_pBDTEntryIn& (0+255),b
 13067  003482  0E0D               	movlw	13
 13068  003484  6F74               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13072  003486  0E16               	movlw	22
 13073  003488  010F               	movlb	15	; () banked
 13074  00348A  6F26               	movwf	38,b	;volatile
 13075                           
 13076                           ; BSR set to: 15
 13077                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13078  00348C  0E0D               	movlw	13
 13079  00348E  010D               	movlb	13	; () banked
 13080  003490  6F03               	movwf	3,b	;volatile
 13081  003492  0E30               	movlw	48
 13082  003494  6F02               	movwf	2,b	;volatile
 13083                           
 13084                           ; BSR set to: 13
 13085                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13086  003496  0E08               	movlw	8
 13087  003498  6F01               	movwf	1,b	;volatile
 13088                           
 13089                           ; BSR set to: 13
 13090                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13091  00349A  0E04               	movlw	4
 13092  00349C  6F00               	movwf	0,b	;volatile
 13093                           
 13094                           ; BSR set to: 13
 13095                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13096  00349E  8F00               	bsf	0,7,b	;volatile
 13097                           
 13098                           ; BSR set to: 13
 13099                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13100  0034A0  0E00               	movlw	0
 13101  0034A2  0100               	movlb	0	; () banked
 13102  0034A4  6FB5               	movwf	_USBActiveConfiguration& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;usb_device.c: 366: USB1msTickCount = 0;
 13106  0034A6  0E00               	movlw	0
 13107  0034A8  0101               	movlb	1	; () banked
 13108  0034AA  6F4D               	movwf	_USB1msTickCount& (0+255),b
 13109  0034AC  0E00               	movlw	0
 13110  0034AE  6F4E               	movwf	(_USB1msTickCount+1)& (0+255),b
 13111  0034B0  0E00               	movlw	0
 13112  0034B2  6F4F               	movwf	(_USB1msTickCount+2)& (0+255),b
 13113  0034B4  0E00               	movlw	0
 13114  0034B6  6F50               	movwf	(_USB1msTickCount+3)& (0+255),b
 13115                           
 13116                           ; BSR set to: 1
 13117                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13118  0034B8  0E00               	movlw	0
 13119  0034BA  0100               	movlb	0	; () banked
 13120  0034BC  6FA1               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13124  0034BE  0E00               	movlw	0
 13125  0034C0  6E5F               	movwf	_USBDeviceState,c
 13126                           
 13127                           ; BSR set to: 0
 13128  0034C2  0012               	return		;funcret
 13129  0034C4                     __end_of_USBDeviceInit:
 13130                           	opt stack 0
 13131                           tblptru	equ	0xFF8
 13132                           tblptrh	equ	0xFF7
 13133                           tblptrl	equ	0xFF6
 13134                           tablat	equ	0xFF5
 13135                           prodh	equ	0xFF4
 13136                           prodl	equ	0xFF3
 13137                           intcon	equ	0xFF2
 13138                           intcon2	equ	0xFF1
 13139                           intcon3	equ	0xFF0
 13140                           postinc0	equ	0xFEE
 13141                           wreg	equ	0xFE8
 13142                           indf1	equ	0xFE7
 13143                           postdec1	equ	0xFE5
 13144                           plusw1	equ	0xFE3
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           indf2	equ	0xFDF
 13148                           postinc2	equ	0xFDE
 13149                           postdec2	equ	0xFDD
 13150                           plusw2	equ	0xFDB
 13151                           fsr2h	equ	0xFDA
 13152                           fsr2l	equ	0xFD9
 13153                           status	equ	0xFD8
 13154                           
 13155 ;; *************** function _USBCtrlEPService *****************
 13156 ;; Defined at:
 13157 ;;		line 2374 in file "usb_device.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;		None
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;		None
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : 0/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13175 ;;Total ram usage:        2 bytes
 13176 ;; Hardware stack levels used:    1
 13177 ;; Hardware stack levels required when called:    7
 13178 ;; This function calls:
 13179 ;;		_USBCtrlTrfInHandler
 13180 ;;		_USBCtrlTrfOutHandler
 13181 ;;		_USBCtrlTrfSetupHandler
 13182 ;;		_memcpy
 13183 ;; This function is called by:
 13184 ;;		_USBDeviceTasks
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           	psect	text67
 13189  00504A                     __ptext67:
 13190                           	opt stack 0
 13191  00504A                     _USBCtrlEPService:
 13192                           	opt stack 22
 13193                           
 13194                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;incstack = 0
 13198  00504A  0E2D               	movlw	45
 13199  00504C  0100               	movlb	0	; () banked
 13200  00504E  6FA7               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13204  005050  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13205  005054  0EFD               	movlw	253
 13206  005056  161E               	andwf	??_USBCtrlEPService,f,c
 13207  005058  A4D8               	btfss	status,2,c
 13208  00505A  D044               	goto	l309
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13212  00505C  C0B4  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13213  005060  90D8               	bcf	status,0,c
 13214  005062  321E               	rrcf	??_USBCtrlEPService,f,c
 13215  005064  0E3F               	movlw	63
 13216  005066  161E               	andwf	??_USBCtrlEPService,f,c
 13217  005068  501E               	movf	??_USBCtrlEPService,w,c
 13218  00506A  0D04               	mullw	4
 13219  00506C  0E00               	movlw	0
 13220  00506E  24F3               	addwf	prodl,w,c
 13221  005070  6F93               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13222  005072  0E0D               	movlw	13
 13223  005074  20F4               	addwfc	prodh,w,c
 13224  005076  6F94               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13228  005078  C093  F091         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13229  00507C  C094  F092         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13230                           
 13231                           ; BSR set to: 0
 13232                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13233  005080  0E04               	movlw	4
 13234  005082  1991               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13235  005084  6F91               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13236  005086  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13237  005088  6F92               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13241  00508A  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13242  00508E  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13243  005092  30DF               	rrcf	223,w,c
 13244  005094  32E8               	rrcf	wreg,f,c
 13245  005096  0B0F               	andlw	15
 13246  005098  0A0D               	xorlw	13
 13247  00509A  A4D8               	btfss	status,2,c
 13248  00509C  D020               	goto	l310
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13252  00509E  0E30               	movlw	48
 13253  0050A0  6E01               	movwf	memcpy@d1,c
 13254  0050A2  0E0D               	movlw	13
 13255  0050A4  6E02               	movwf	memcpy@d1+1,c
 13256  0050A6  EE20 F002          	lfsr	2,2
 13257  0050AA  5193               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13258  0050AC  26D9               	addwf	fsr2l,f,c
 13259  0050AE  5194               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13260  0050B0  22DA               	addwfc	fsr2h,f,c
 13261  0050B2  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13262  0050B6  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13263  0050BA  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13264  0050BE  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13265  0050C2  5003               	movf	memcpy@s1,w,c
 13266  0050C4  1004               	iorwf	memcpy@s1+1,w,c
 13267  0050C6  A4D8               	btfss	status,2,c
 13268  0050C8  0E20               	movlw	32
 13269  0050CA  6E05               	movwf	memcpy@s1+2,c
 13270  0050CC  0E00               	movlw	0
 13271  0050CE  6E07               	movwf	memcpy@n+1,c
 13272  0050D0  0E08               	movlw	8
 13273  0050D2  6E06               	movwf	memcpy@n,c
 13274  0050D4  EC1C  F030         	call	_memcpy	;wreg free
 13275                           
 13276                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13277  0050D8  EC3C  F02C         	call	_USBCtrlTrfSetupHandler	;wreg free
 13278                           
 13279                           ;usb_device.c: 2411: }
 13280  0050DC  0012               	return	
 13281  0050DE                     l310:
 13282                           
 13283                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13284  0050DE  EC45  F031         	call	_USBCtrlTrfOutHandler	;wreg free
 13285                           
 13286                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13287  0050E2  0012               	return	
 13288  0050E4                     l309:
 13289                           
 13290                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13291  0050E4  0100               	movlb	0	; () banked
 13292  0050E6  51B4               	movf	_USTATcopy& (0+255),w,b
 13293  0050E8  0BFD               	andlw	253
 13294  0050EA  0A04               	xorlw	4
 13295  0050EC  A4D8               	btfss	status,2,c
 13296  0050EE  0012               	return	
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13300  0050F0  ECF0  F025         	call	_USBCtrlTrfInHandler	;wreg free
 13301  0050F4  0012               	return	
 13302  0050F6                     __end_of_USBCtrlEPService:
 13303                           	opt stack 0
 13304                           tblptru	equ	0xFF8
 13305                           tblptrh	equ	0xFF7
 13306                           tblptrl	equ	0xFF6
 13307                           tablat	equ	0xFF5
 13308                           prodh	equ	0xFF4
 13309                           prodl	equ	0xFF3
 13310                           intcon	equ	0xFF2
 13311                           intcon2	equ	0xFF1
 13312                           intcon3	equ	0xFF0
 13313                           postinc0	equ	0xFEE
 13314                           wreg	equ	0xFE8
 13315                           indf1	equ	0xFE7
 13316                           postdec1	equ	0xFE5
 13317                           plusw1	equ	0xFE3
 13318                           fsr1h	equ	0xFE2
 13319                           fsr1l	equ	0xFE1
 13320                           indf2	equ	0xFDF
 13321                           postinc2	equ	0xFDE
 13322                           postdec2	equ	0xFDD
 13323                           plusw2	equ	0xFDB
 13324                           fsr2h	equ	0xFDA
 13325                           fsr2l	equ	0xFD9
 13326                           status	equ	0xFD8
 13327                           
 13328 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13329 ;; Defined at:
 13330 ;;		line 2467 in file "usb_device.c"
 13331 ;; Parameters:    Size  Location     Type
 13332 ;;		None
 13333 ;; Auto vars:     Size  Location     Type
 13334 ;;		None
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      void 
 13337 ;; Registers used:
 13338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13348 ;;Total ram usage:        0 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    6
 13351 ;; This function calls:
 13352 ;;		_USBCheckStdRequest
 13353 ;;		_USBCtrlEPServiceComplete
 13354 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13355 ;; This function is called by:
 13356 ;;		_USBCtrlEPService
 13357 ;; This function uses a non-reentrant model
 13358 ;;
 13359                           
 13360                           	psect	text68
 13361  005878                     __ptext68:
 13362                           	opt stack 0
 13363  005878                     _USBCtrlTrfSetupHandler:
 13364                           	opt stack 22
 13365                           
 13366                           ;usb_device.c: 2472: shortPacketStatus = 0;
 13367                           
 13368                           ;incstack = 0
 13369  005878  0E00               	movlw	0
 13370  00587A  0100               	movlb	0	; () banked
 13371  00587C  6FAD               	movwf	_shortPacketStatus& (0+255),b
 13372                           
 13373                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 13374  00587E  0E00               	movlw	0
 13375  005880  6FA6               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 13376                           
 13377                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 13378  005882  0E00               	movlw	0
 13379  005884  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13380                           
 13381                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 13382  005886  0E00               	movlw	0
 13383  005888  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13384                           
 13385                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 13386  00588A  0E00               	movlw	0
 13387  00588C  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13388                           
 13389                           ;usb_device.c: 2477: controlTransferState = 0;
 13390  00588E  0E00               	movlw	0
 13391  005890  6FAC               	movwf	_controlTransferState& (0+255),b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13395  005892  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13396  005896  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13397  00589A  0E7F               	movlw	127
 13398  00589C  16DF               	andwf	indf2,f,c
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13402  00589E  0E04               	movlw	4
 13403  0058A0  1973               	xorwf	_pBDTEntryIn& (0+255),w,b
 13404  0058A2  6F73               	movwf	_pBDTEntryIn& (0+255),b
 13405  0058A4  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13406  0058A6  6F74               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13407                           
 13408                           ; BSR set to: 0
 13409                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13410  0058A8  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13411  0058AC  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13412  0058B0  0E7F               	movlw	127
 13413  0058B2  16DF               	andwf	indf2,f,c
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13417  0058B4  0E04               	movlw	4
 13418  0058B6  1973               	xorwf	_pBDTEntryIn& (0+255),w,b
 13419  0058B8  6F73               	movwf	_pBDTEntryIn& (0+255),b
 13420  0058BA  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13421  0058BC  6F74               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13422                           
 13423                           ; BSR set to: 0
 13424                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13425  0058BE  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13426  0058C2  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13427  0058C6  0E7F               	movlw	127
 13428  0058C8  16DF               	andwf	indf2,f,c
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 13432  0058CA  0E00               	movlw	0
 13433  0058CC  6F70               	movwf	(_inPipes+3)& (0+255),b
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 13437  0058CE  0E00               	movlw	0
 13438  0058D0  6F72               	movwf	(_inPipes+5)& (0+255),b
 13439  0058D2  0E00               	movlw	0
 13440  0058D4  6F71               	movwf	(_inPipes+4)& (0+255),b
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 13444  0058D6  0E00               	movlw	0
 13445  0058D8  0101               	movlb	1	; () banked
 13446  0058DA  6F34               	movwf	(_outPipes+3)& (0+255),b
 13447                           
 13448                           ; BSR set to: 1
 13449                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 13450  0058DC  0E00               	movlw	0
 13451  0058DE  6F36               	movwf	(_outPipes+5)& (0+255),b
 13452  0058E0  0E00               	movlw	0
 13453  0058E2  6F35               	movwf	(_outPipes+4)& (0+255),b
 13454                           
 13455                           ; BSR set to: 1
 13456                           ;usb_device.c: 2502: USBCheckStdRequest();
 13457  0058E4  ECC2  F020         	call	_USBCheckStdRequest	;wreg free
 13458                           
 13459                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13460  0058E8  0E00               	movlw	0
 13461  0058EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13462  0058EC  0E03               	movlw	3
 13463  0058EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13464  0058F0  0E00               	movlw	0
 13465  0058F2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13466  0058F4  0E00               	movlw	0
 13467  0058F6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13468  0058F8  0E00               	movlw	0
 13469  0058FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13470  0058FC  0E00               	movlw	0
 13471  0058FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13472  005900  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13473                           
 13474                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 13475  005904  ECC5  F01F         	call	_USBCtrlEPServiceComplete	;wreg free
 13476  005908  0012               	return		;funcret
 13477  00590A                     __end_of_USBCtrlTrfSetupHandler:
 13478                           	opt stack 0
 13479                           tblptru	equ	0xFF8
 13480                           tblptrh	equ	0xFF7
 13481                           tblptrl	equ	0xFF6
 13482                           tablat	equ	0xFF5
 13483                           prodh	equ	0xFF4
 13484                           prodl	equ	0xFF3
 13485                           intcon	equ	0xFF2
 13486                           intcon2	equ	0xFF1
 13487                           intcon3	equ	0xFF0
 13488                           postinc0	equ	0xFEE
 13489                           wreg	equ	0xFE8
 13490                           indf1	equ	0xFE7
 13491                           postdec1	equ	0xFE5
 13492                           plusw1	equ	0xFE3
 13493                           fsr1h	equ	0xFE2
 13494                           fsr1l	equ	0xFE1
 13495                           indf2	equ	0xFDF
 13496                           postinc2	equ	0xFDE
 13497                           postdec2	equ	0xFDD
 13498                           plusw2	equ	0xFDB
 13499                           fsr2h	equ	0xFDA
 13500                           fsr2l	equ	0xFD9
 13501                           status	equ	0xFD8
 13502                           
 13503 ;; *************** function _USBCtrlEPServiceComplete *****************
 13504 ;; Defined at:
 13505 ;;		line 1618 in file "usb_device.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;		None
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;		None
 13510 ;; Return value:  Size  Location     Type
 13511 ;;                  1    wreg      void 
 13512 ;; Registers used:
 13513 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13514 ;; Tracked objects:
 13515 ;;		On entry : 0/0
 13516 ;;		On exit  : 0/0
 13517 ;;		Unchanged: 0/0
 13518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;Total ram usage:        0 bytes
 13524 ;; Hardware stack levels used:    1
 13525 ;; Hardware stack levels required when called:    2
 13526 ;; This function calls:
 13527 ;;		_USBCtrlEPAllowDataStage
 13528 ;;		_USBCtrlEPAllowStatusStage
 13529 ;; This function is called by:
 13530 ;;		_USBCtrlTrfSetupHandler
 13531 ;; This function uses a non-reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text69
 13535  003F8A                     __ptext69:
 13536                           	opt stack 0
 13537  003F8A                     _USBCtrlEPServiceComplete:
 13538                           	opt stack 25
 13539                           
 13540                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 13541                           
 13542                           ;incstack = 0
 13543  003F8A  9865               	bcf	3941,4,c	;volatile
 13544                           
 13545                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 13546  003F8C  0100               	movlb	0	; () banked
 13547  003F8E  BF70               	btfsc	(_inPipes+3)& (0+255),7,b
 13548  003F90  D03C               	goto	l219
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 13552  003F92  0101               	movlb	1	; () banked
 13553  003F94  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 13554  003F96  D00D               	goto	l220
 13555                           
 13556                           ; BSR set to: 1
 13557                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 13558  003F98  0E02               	movlw	2
 13559  003F9A  0100               	movlb	0	; () banked
 13560  003F9C  6FAC               	movwf	_controlTransferState& (0+255),b
 13561                           
 13562                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 13563  003F9E  51A2               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 13564  003FA0  B4D8               	btfsc	status,2,c
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 13568  003FA2  EC0B  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 13569                           
 13570                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 13571  003FA6  0E00               	movlw	0
 13572  003FA8  0100               	movlb	0	; () banked
 13573  003FAA  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 13577  003FAC  0E00               	movlw	0
 13578  003FAE  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13579                           
 13580                           ;usb_device.c: 1654: }
 13581  003FB0  0012               	return	
 13582  003FB2                     l220:
 13583                           
 13584                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 13585                           
 13586                           ; BSR set to: 0
 13587  003FB2  0100               	movlb	0	; () banked
 13588  003FB4  EE20 F001          	lfsr	2,1
 13589  003FB8  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13590  003FBA  26D9               	addwf	fsr2l,f,c
 13591  003FBC  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13592  003FBE  22DA               	addwfc	fsr2h,f,c
 13593  003FC0  0E08               	movlw	8
 13594  003FC2  6EDF               	movwf	indf2,c
 13595                           
 13596                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13597  003FC4  EE20 F002          	lfsr	2,2
 13598  003FC8  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13599  003FCA  26D9               	addwf	fsr2l,f,c
 13600  003FCC  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13601  003FCE  22DA               	addwfc	fsr2h,f,c
 13602  003FD0  0E30               	movlw	48
 13603  003FD2  6EDE               	movwf	postinc2,c
 13604  003FD4  0E0D               	movlw	13
 13605  003FD6  6EDD               	movwf	postdec2,c
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13609  003FD8  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13610  003FDC  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13611  003FE0  0E0C               	movlw	12
 13612  003FE2  6EDF               	movwf	indf2,c
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13616  003FE4  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13617  003FE8  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13618  003FEC  0E00               	movlw	0
 13619  003FEE  8EDB               	bsf	plusw2,7,c
 13620                           
 13621                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 13622  003FF0  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13623  003FF4  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13624  003FF8  0E04               	movlw	4
 13625  003FFA  6EDF               	movwf	indf2,c
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13629  003FFC  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13630  004000  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13631  004004  0E00               	movlw	0
 13632  004006  8EDB               	bsf	plusw2,7,c
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13636  004008  0012               	return	
 13637  00400A                     l219:
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 13641  00400A  010D               	movlb	13	; () banked
 13642  00400C  AF30               	btfss	48,7,b	;volatile
 13643  00400E  D012               	goto	l224
 13644                           
 13645                           ; BSR set to: 13
 13646                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 13647  004010  0E01               	movlw	1
 13648  004012  0100               	movlb	0	; () banked
 13649  004014  6FAC               	movwf	_controlTransferState& (0+255),b
 13650                           
 13651                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 13652  004016  51A3               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 13653  004018  B4D8               	btfsc	status,2,c
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 13657  00401A  EC0B  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 13658                           
 13659                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 13660  00401E  0E00               	movlw	0
 13661  004020  0100               	movlb	0	; () banked
 13662  004022  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 13666  004024  0E00               	movlw	0
 13667  004026  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 13671  004028  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13672  00402A  A4D8               	btfss	status,2,c
 13673  00402C  0012               	return	
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 13677  00402E  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13678                           
 13679                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 13680  004032  0012               	return	
 13681  004034                     l224:
 13682                           
 13683                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 13684  004034  0E02               	movlw	2
 13685  004036  0100               	movlb	0	; () banked
 13686  004038  6FAC               	movwf	_controlTransferState& (0+255),b
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13690  00403A  EE20 F001          	lfsr	2,1
 13691  00403E  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13692  004040  26D9               	addwf	fsr2l,f,c
 13693  004042  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13694  004044  22DA               	addwfc	fsr2h,f,c
 13695  004046  0E08               	movlw	8
 13696  004048  6EDF               	movwf	indf2,c
 13697                           
 13698                           ; BSR set to: 0
 13699                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13700  00404A  EE20 F002          	lfsr	2,2
 13701  00404E  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13702  004050  26D9               	addwf	fsr2l,f,c
 13703  004052  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13704  004054  22DA               	addwfc	fsr2h,f,c
 13705  004056  0E30               	movlw	48
 13706  004058  6EDE               	movwf	postinc2,c
 13707  00405A  0E0D               	movlw	13
 13708  00405C  6EDD               	movwf	postdec2,c
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13712  00405E  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13713  004062  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13714  004066  0E04               	movlw	4
 13715  004068  6EDF               	movwf	indf2,c
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13719  00406A  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13720  00406E  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13721  004072  0E00               	movlw	0
 13722  004074  8EDB               	bsf	plusw2,7,c
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13726  004076  0E00               	movlw	0
 13727  004078  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 13731  00407A  0E00               	movlw	0
 13732  00407C  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 13736  00407E  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13737  004080  A4D8               	btfss	status,2,c
 13738  004082  0012               	return	
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 13742  004084  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13743  004088  0012               	return	
 13744  00408A                     __end_of_USBCtrlEPServiceComplete:
 13745                           	opt stack 0
 13746                           tblptru	equ	0xFF8
 13747                           tblptrh	equ	0xFF7
 13748                           tblptrl	equ	0xFF6
 13749                           tablat	equ	0xFF5
 13750                           prodh	equ	0xFF4
 13751                           prodl	equ	0xFF3
 13752                           intcon	equ	0xFF2
 13753                           intcon2	equ	0xFF1
 13754                           intcon3	equ	0xFF0
 13755                           postinc0	equ	0xFEE
 13756                           wreg	equ	0xFE8
 13757                           indf1	equ	0xFE7
 13758                           postdec1	equ	0xFE5
 13759                           plusw1	equ	0xFE3
 13760                           fsr1h	equ	0xFE2
 13761                           fsr1l	equ	0xFE1
 13762                           indf2	equ	0xFDF
 13763                           postinc2	equ	0xFDE
 13764                           postdec2	equ	0xFDD
 13765                           plusw2	equ	0xFDB
 13766                           fsr2h	equ	0xFDA
 13767                           fsr2l	equ	0xFD9
 13768                           status	equ	0xFD8
 13769                           
 13770 ;; *************** function _USBCtrlEPAllowDataStage *****************
 13771 ;; Defined at:
 13772 ;;		line 1490 in file "usb_device.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;		None
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;		None
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  1    wreg      void 
 13779 ;; Registers used:
 13780 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13790 ;;Total ram usage:        0 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    1
 13793 ;; This function calls:
 13794 ;;		_USBCtrlTrfTxService
 13795 ;; This function is called by:
 13796 ;;		_USBCtrlEPServiceComplete
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           	psect	text70
 13801  005616                     __ptext70:
 13802                           	opt stack 0
 13803  005616                     _USBCtrlEPAllowDataStage:
 13804                           	opt stack 25
 13805                           
 13806                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 13807                           
 13808                           ;incstack = 0
 13809  005616  0E00               	movlw	0
 13810  005618  0100               	movlb	0	; () banked
 13811  00561A  6FA3               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13812                           
 13813                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 13814  00561C  0E00               	movlw	0
 13815  00561E  6FA2               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13816                           
 13817                           ; BSR set to: 0
 13818                           ;usb_device.c: 1495: if(controlTransferState == 2)
 13819  005620  0E02               	movlw	2
 13820  005622  19AC               	xorwf	_controlTransferState& (0+255),w,b
 13821  005624  A4D8               	btfss	status,2,c
 13822  005626  D01F               	goto	l208
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 13826  005628  EE20 F001          	lfsr	2,1
 13827  00562C  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13828  00562E  26D9               	addwf	fsr2l,f,c
 13829  005630  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13830  005632  22DA               	addwfc	fsr2h,f,c
 13831  005634  0E08               	movlw	8
 13832  005636  6EDF               	movwf	indf2,c
 13833                           
 13834                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 13835  005638  EE20 F002          	lfsr	2,2
 13836  00563C  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13837  00563E  26D9               	addwf	fsr2l,f,c
 13838  005640  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13839  005642  22DA               	addwfc	fsr2h,f,c
 13840  005644  0E38               	movlw	56
 13841  005646  6EDE               	movwf	postinc2,c
 13842  005648  0E0D               	movlw	13
 13843  00564A  6EDD               	movwf	postdec2,c
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 13847  00564C  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13848  005650  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13849  005654  0E48               	movlw	72
 13850  005656  6EDF               	movwf	indf2,c
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13854  005658  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13855  00565C  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13856  005660  0E00               	movlw	0
 13857  005662  8EDB               	bsf	plusw2,7,c
 13858                           
 13859                           ;usb_device.c: 1502: }
 13860  005664  0012               	return	
 13861  005666                     l208:
 13862                           
 13863                           ; BSR set to: 0
 13864                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 13865                           
 13866                           ; BSR set to: 0
 13867  005666  5171               	movf	(_inPipes+4)& (0+255),w,b
 13868  005668  010D               	movlb	13	; () banked
 13869  00566A  5D36               	subwf	54,w,b	;volatile
 13870  00566C  0100               	movlb	0	; () banked
 13871  00566E  5172               	movf	(_inPipes+5)& (0+255),w,b
 13872  005670  010D               	movlb	13	; () banked
 13873  005672  5937               	subwfb	55,w,b	;volatile
 13874  005674  B0D8               	btfsc	status,0,c
 13875  005676  D004               	goto	l210
 13876                           
 13877                           ; BSR set to: 13
 13878                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 13879  005678  CD36 F071          	movff	3382,_inPipes+4	;volatile
 13880  00567C  CD37 F072          	movff	3383,_inPipes+5	;volatile
 13881  005680                     l210:
 13882                           
 13883                           ; BSR set to: 13
 13884                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 13885                           
 13886                           ; BSR set to: 13
 13887  005680  EC1F  F025         	call	_USBCtrlTrfTxService	;wreg free
 13888                           
 13889                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 13890  005684  0100               	movlb	0	; () banked
 13891  005686  EE20 F002          	lfsr	2,2
 13892  00568A  5173               	movf	_pBDTEntryIn& (0+255),w,b
 13893  00568C  26D9               	addwf	fsr2l,f,c
 13894  00568E  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13895  005690  22DA               	addwfc	fsr2h,f,c
 13896  005692  0E38               	movlw	56
 13897  005694  6EDE               	movwf	postinc2,c
 13898  005696  0E0D               	movlw	13
 13899  005698  6EDD               	movwf	postdec2,c
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 13903  00569A  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13904  00569E  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13905  0056A2  0E48               	movlw	72
 13906  0056A4  6EDF               	movwf	indf2,c
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13910  0056A6  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 13911  0056AA  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13912  0056AE  0E00               	movlw	0
 13913  0056B0  8EDB               	bsf	plusw2,7,c
 13914  0056B2  0012               	return	
 13915  0056B4                     __end_of_USBCtrlEPAllowDataStage:
 13916                           	opt stack 0
 13917                           tblptru	equ	0xFF8
 13918                           tblptrh	equ	0xFF7
 13919                           tblptrl	equ	0xFF6
 13920                           tablat	equ	0xFF5
 13921                           prodh	equ	0xFF4
 13922                           prodl	equ	0xFF3
 13923                           intcon	equ	0xFF2
 13924                           intcon2	equ	0xFF1
 13925                           intcon3	equ	0xFF0
 13926                           postinc0	equ	0xFEE
 13927                           wreg	equ	0xFE8
 13928                           indf1	equ	0xFE7
 13929                           postdec1	equ	0xFE5
 13930                           plusw1	equ	0xFE3
 13931                           fsr1h	equ	0xFE2
 13932                           fsr1l	equ	0xFE1
 13933                           indf2	equ	0xFDF
 13934                           postinc2	equ	0xFDE
 13935                           postdec2	equ	0xFDD
 13936                           plusw2	equ	0xFDB
 13937                           fsr2h	equ	0xFDA
 13938                           fsr2l	equ	0xFD9
 13939                           status	equ	0xFD8
 13940                           
 13941 ;; *************** function _USBCheckStdRequest *****************
 13942 ;; Defined at:
 13943 ;;		line 2688 in file "usb_device.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;		None
 13946 ;; Auto vars:     Size  Location     Type
 13947 ;;		None
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  1    wreg      void 
 13950 ;; Registers used:
 13951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13961 ;;Total ram usage:        0 bytes
 13962 ;; Hardware stack levels used:    1
 13963 ;; Hardware stack levels required when called:    5
 13964 ;; This function calls:
 13965 ;;		_USBStdFeatureReqHandler
 13966 ;;		_USBStdGetDscHandler
 13967 ;;		_USBStdGetStatusHandler
 13968 ;;		_USBStdSetCfgHandler
 13969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13970 ;; This function is called by:
 13971 ;;		_USBCtrlTrfSetupHandler
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text71
 13976  004184                     __ptext71:
 13977                           	opt stack 0
 13978  004184                     _USBCheckStdRequest:
 13979                           	opt stack 22
 13980                           
 13981                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;incstack = 0
 13985  004184  010D               	movlb	13	; () banked
 13986  004186  3930               	swapf	48,w,b	;volatile
 13987  004188  32E8               	rrcf	wreg,f,c
 13988  00418A  0B03               	andlw	3
 13989  00418C  0900               	iorlw	0
 13990  00418E  A4D8               	btfss	status,2,c
 13991  004190  0012               	return	
 13992  004192  D047               	goto	l343
 13993  004194                     l344:
 13994                           
 13995                           ; BSR set to: 13
 13996                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 13997  004194  0100               	movlb	0	; () banked
 13998  004196  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14002  004198  0E08               	movlw	8
 14003  00419A  6E5F               	movwf	_USBDeviceState,c
 14004                           
 14005                           ;usb_device.c: 2698: break;
 14006  00419C  0012               	return	
 14007  00419E                     
 14008                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14009                           
 14010                           ; BSR set to: 0
 14011  00419E  EC62  F01A         	call	_USBStdGetDscHandler	;wreg free
 14012                           
 14013                           ;usb_device.c: 2701: break;
 14014  0041A2  0012               	return	
 14015  0041A4                     
 14016                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14017  0041A4  ECF6  F022         	call	_USBStdSetCfgHandler	;wreg free
 14018                           
 14019                           ;usb_device.c: 2704: break;
 14020  0041A8  0012               	return	
 14021  0041AA                     
 14022                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14023  0041AA  0EB5               	movlw	low _USBActiveConfiguration
 14024  0041AC  0100               	movlb	0	; () banked
 14025  0041AE  6F6D               	movwf	_inPipes& (0+255),b
 14026  0041B0  0E00               	movlw	high _USBActiveConfiguration
 14027  0041B2  6F6E               	movwf	(_inPipes+1)& (0+255),b
 14028                           
 14029                           ; BSR set to: 0
 14030                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14031  0041B4  8170               	bsf	(_inPipes+3)& (0+255),0,b
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14035  0041B6  0E01               	movlw	1
 14036  0041B8  6F71               	movwf	(_inPipes+4)& (0+255),b
 14037                           
 14038                           ; BSR set to: 0
 14039                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14040  0041BA  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14041                           
 14042                           ;usb_device.c: 2710: break;
 14043  0041BC  0012               	return	
 14044  0041BE                     
 14045                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14046                           
 14047                           ; BSR set to: 0
 14048  0041BE  EC7B  F028         	call	_USBStdGetStatusHandler	;wreg free
 14049                           
 14050                           ;usb_device.c: 2713: break;
 14051  0041C2  0012               	return	
 14052  0041C4                     
 14053                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14054  0041C4  EC6B  F00A         	call	_USBStdFeatureReqHandler	;wreg free
 14055                           
 14056                           ;usb_device.c: 2717: break;
 14057  0041C8  0012               	return	
 14058  0041CA                     
 14059                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14060  0041CA  010D               	movlb	13	; () banked
 14061  0041CC  5134               	movf	52,w,b	;volatile
 14062  0041CE  0D01               	mullw	1
 14063  0041D0  0EE4               	movlw	low _USBAlternateInterface
 14064  0041D2  24F3               	addwf	prodl,w,c
 14065  0041D4  0100               	movlb	0	; () banked
 14066  0041D6  6F6D               	movwf	_inPipes& (0+255),b
 14067  0041D8  0E01               	movlw	high _USBAlternateInterface
 14068  0041DA  20F4               	addwfc	prodh,w,c
 14069  0041DC  6F6E               	movwf	(_inPipes+1)& (0+255),b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14073  0041DE  8170               	bsf	(_inPipes+3)& (0+255),0,b
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14077  0041E0  0E01               	movlw	1
 14078  0041E2  6F71               	movwf	(_inPipes+4)& (0+255),b
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14082  0041E4  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14083                           
 14084                           ;usb_device.c: 2723: break;
 14085  0041E6  0012               	return	
 14086  0041E8                     l353:
 14087                           
 14088                           ; BSR set to: 13
 14089                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14090  0041E8  0100               	movlb	0	; () banked
 14091  0041EA  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14095  0041EC  010D               	movlb	13	; () banked
 14096  0041EE  5134               	movf	52,w,b	;volatile
 14097  0041F0  0D01               	mullw	1
 14098  0041F2  0EE4               	movlw	low _USBAlternateInterface
 14099  0041F4  24F3               	addwf	prodl,w,c
 14100  0041F6  6ED9               	movwf	fsr2l,c
 14101  0041F8  0E01               	movlw	high _USBAlternateInterface
 14102  0041FA  20F4               	addwfc	prodh,w,c
 14103  0041FC  6EDA               	movwf	fsr2h,c
 14104  0041FE  CD32 FFDF          	movff	3378,indf2	;volatile
 14105                           
 14106                           ;usb_device.c: 2727: break;
 14107  004202  0012               	return	
 14108  004204                     
 14109                           ; BSR set to: 13
 14110                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14111                           
 14112                           ; BSR set to: 13
 14113  004204  0E00               	movlw	0
 14114  004206  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14115  004208  0E02               	movlw	2
 14116  00420A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14117  00420C  0E00               	movlw	0
 14118  00420E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14119  004210  0E00               	movlw	0
 14120  004212  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14121  004214  0E00               	movlw	0
 14122  004216  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14123  004218  0E00               	movlw	0
 14124  00421A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14125  00421C  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14126                           
 14127                           ;usb_device.c: 2734: }
 14128                           
 14129                           ;usb_device.c: 2733: break;
 14130                           
 14131                           ;usb_device.c: 2732: default:
 14132                           
 14133                           ;usb_device.c: 2731: case 12:
 14134                           
 14135                           ;usb_device.c: 2730: break;
 14136  004220  0012               	return	
 14137  004222                     l343:
 14138  004222  010D               	movlb	13	; () banked
 14139  004224  5131               	movf	49,w,b	;volatile
 14140                           
 14141                           ; Switch size 1, requested type "space"
 14142                           ; Number of cases is 11, Range of values is 0 to 12
 14143                           ; switch strategies available:
 14144                           ; Name         Instructions Cycles
 14145                           ; simple_byte           34    18 (average)
 14146                           ;	Chosen strategy is simple_byte
 14147  004226  0A00               	xorlw	0	; case 0
 14148  004228  B4D8               	btfsc	status,2,c
 14149  00422A  D7C9               	goto	l349
 14150  00422C  0A01               	xorlw	1	; case 1
 14151  00422E  B4D8               	btfsc	status,2,c
 14152  004230  D7C9               	goto	l350
 14153  004232  0A02               	xorlw	2	; case 3
 14154  004234  B4D8               	btfsc	status,2,c
 14155  004236  D7C6               	goto	l350
 14156  004238  0A06               	xorlw	6	; case 5
 14157  00423A  B4D8               	btfsc	status,2,c
 14158  00423C  D7AB               	goto	l344
 14159  00423E  0A03               	xorlw	3	; case 6
 14160  004240  B4D8               	btfsc	status,2,c
 14161  004242  D7AD               	goto	l346
 14162  004244  0A01               	xorlw	1	; case 7
 14163  004246  B4D8               	btfsc	status,2,c
 14164  004248  D7DD               	goto	l354
 14165  00424A  0A0F               	xorlw	15	; case 8
 14166  00424C  B4D8               	btfsc	status,2,c
 14167  00424E  D7AD               	goto	l348
 14168  004250  0A01               	xorlw	1	; case 9
 14169  004252  B4D8               	btfsc	status,2,c
 14170  004254  D7A7               	goto	l347
 14171  004256  0A03               	xorlw	3	; case 10
 14172  004258  B4D8               	btfsc	status,2,c
 14173  00425A  D7B7               	goto	l352
 14174  00425C  0A01               	xorlw	1	; case 11
 14175  00425E  B4D8               	btfsc	status,2,c
 14176  004260  D7C3               	goto	l353
 14177  004262  0A07               	xorlw	7	; case 12
 14178  004264  0012               	return	
 14179  004266                     __end_of_USBCheckStdRequest:
 14180                           	opt stack 0
 14181                           tblptru	equ	0xFF8
 14182                           tblptrh	equ	0xFF7
 14183                           tblptrl	equ	0xFF6
 14184                           tablat	equ	0xFF5
 14185                           prodh	equ	0xFF4
 14186                           prodl	equ	0xFF3
 14187                           intcon	equ	0xFF2
 14188                           intcon2	equ	0xFF1
 14189                           intcon3	equ	0xFF0
 14190                           postinc0	equ	0xFEE
 14191                           wreg	equ	0xFE8
 14192                           indf1	equ	0xFE7
 14193                           postdec1	equ	0xFE5
 14194                           plusw1	equ	0xFE3
 14195                           fsr1h	equ	0xFE2
 14196                           fsr1l	equ	0xFE1
 14197                           indf2	equ	0xFDF
 14198                           postinc2	equ	0xFDE
 14199                           postdec2	equ	0xFDD
 14200                           plusw2	equ	0xFDB
 14201                           fsr2h	equ	0xFDA
 14202                           fsr2l	equ	0xFD9
 14203                           status	equ	0xFD8
 14204                           
 14205 ;; *************** function _USBStdSetCfgHandler *****************
 14206 ;; Defined at:
 14207 ;;		line 1970 in file "usb_device.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;		None
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  i               1   23[COMRAM] unsigned char 
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      void 
 14214 ;; Registers used:
 14215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14225 ;;Total ram usage:        1 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    4
 14228 ;; This function calls:
 14229 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14230 ;;		_memset
 14231 ;; This function is called by:
 14232 ;;		_USBCheckStdRequest
 14233 ;; This function uses a non-reentrant model
 14234 ;;
 14235                           
 14236                           	psect	text72
 14237  0045EC                     __ptext72:
 14238                           	opt stack 0
 14239  0045EC                     _USBStdSetCfgHandler:
 14240                           	opt stack 22
 14241                           
 14242                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14243                           
 14244                           ;incstack = 0
 14245  0045EC  0100               	movlb	0	; () banked
 14246  0045EE  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14247                           
 14248                           ; BSR set to: 0
 14249                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14250  0045F0  0E27               	movlw	39
 14251  0045F2  6E01               	movwf	memset@p1,c
 14252  0045F4  0E0F               	movlw	15
 14253  0045F6  6E02               	movwf	memset@p1+1,c
 14254  0045F8  0E00               	movlw	0
 14255  0045FA  6E04               	movwf	memset@c+1,c
 14256  0045FC  0E00               	movlw	0
 14257  0045FE  6E03               	movwf	memset@c,c
 14258  004600  0E00               	movlw	0
 14259  004602  6E06               	movwf	memset@n+1,c
 14260  004604  0E02               	movlw	2
 14261  004606  6E05               	movwf	memset@n,c
 14262  004608  ECDA  F036         	call	_memset	;wreg free
 14263                           
 14264                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14265  00460C  0E00               	movlw	0
 14266  00460E  6E01               	movwf	memset@p1,c
 14267  004610  0E0D               	movlw	13
 14268  004612  6E02               	movwf	memset@p1+1,c
 14269  004614  0E00               	movlw	0
 14270  004616  6E04               	movwf	memset@c+1,c
 14271  004618  0E00               	movlw	0
 14272  00461A  6E03               	movwf	memset@c,c
 14273  00461C  0E00               	movlw	0
 14274  00461E  6E06               	movwf	memset@n+1,c
 14275  004620  0E30               	movlw	48
 14276  004622  6E05               	movwf	memset@n,c
 14277  004624  ECDA  F036         	call	_memset	;wreg free
 14278                           
 14279                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14280  004628  8C65               	bsf	3941,6,c	;volatile
 14281                           
 14282                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14283  00462A  0E00               	movlw	0
 14284  00462C  6E18               	movwf	USBStdSetCfgHandler@i,c
 14285  00462E                     l11698:
 14286  00462E  0E02               	movlw	2
 14287  004630  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14288  004632  D001               	goto	l260
 14289  004634  D016               	goto	u8740
 14290  004636                     l260:
 14291                           
 14292                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14293  004636  5018               	movf	USBStdSetCfgHandler@i,w,c
 14294  004638  0D01               	mullw	1
 14295  00463A  0E5A               	movlw	low _ep_data_in
 14296  00463C  24F3               	addwf	prodl,w,c
 14297  00463E  6ED9               	movwf	fsr2l,c
 14298  004640  0E01               	movlw	high _ep_data_in
 14299  004642  20F4               	addwfc	prodh,w,c
 14300  004644  6EDA               	movwf	fsr2h,c
 14301  004646  0E00               	movlw	0
 14302  004648  6EDF               	movwf	indf2,c
 14303                           
 14304                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14305  00464A  5018               	movf	USBStdSetCfgHandler@i,w,c
 14306  00464C  0D01               	mullw	1
 14307  00464E  0E57               	movlw	low _ep_data_out
 14308  004650  24F3               	addwf	prodl,w,c
 14309  004652  6ED9               	movwf	fsr2l,c
 14310  004654  0E01               	movlw	high _ep_data_out
 14311  004656  20F4               	addwfc	prodh,w,c
 14312  004658  6EDA               	movwf	fsr2h,c
 14313  00465A  0E00               	movlw	0
 14314  00465C  6EDF               	movwf	indf2,c
 14315  00465E  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14316  004660  D7E6               	goto	l11698
 14317  004662                     u8740:
 14318                           
 14319                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14320  004662  0EE4               	movlw	low _USBAlternateInterface
 14321  004664  6E01               	movwf	memset@p1,c
 14322  004666  0E01               	movlw	high _USBAlternateInterface
 14323  004668  6E02               	movwf	memset@p1+1,c
 14324  00466A  0E00               	movlw	0
 14325  00466C  6E04               	movwf	memset@c+1,c
 14326  00466E  0E00               	movlw	0
 14327  004670  6E03               	movwf	memset@c,c
 14328  004672  0E00               	movlw	0
 14329  004674  6E06               	movwf	memset@n+1,c
 14330  004676  0E02               	movlw	2
 14331  004678  6E05               	movwf	memset@n,c
 14332  00467A  ECDA  F036         	call	_memset	;wreg free
 14333                           
 14334                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 14335  00467E  9C65               	bcf	3941,6,c	;volatile
 14336                           
 14337                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14338  004680  0E08               	movlw	8
 14339  004682  0100               	movlb	0	; () banked
 14340  004684  6F73               	movwf	_pBDTEntryIn& (0+255),b
 14341  004686  0E0D               	movlw	13
 14342  004688  6F74               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14346  00468A  0E00               	movlw	0
 14347  00468C  6F93               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 14348  00468E  0E0D               	movlw	13
 14349  004690  6F94               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14353  004692  C093  F091         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14354  004696  C094  F092         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14358  00469A  CD32 F0B5          	movff	3378,_USBActiveConfiguration	;volatile
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 14362  00469E  51B5               	movf	_USBActiveConfiguration& (0+255),w,b
 14363  0046A0  A4D8               	btfss	status,2,c
 14364  0046A2  D003               	goto	l262
 14365                           
 14366                           ; BSR set to: 0
 14367                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 14368  0046A4  0E10               	movlw	16
 14369  0046A6  6E5F               	movwf	_USBDeviceState,c
 14370                           
 14371                           ;usb_device.c: 2015: }
 14372  0046A8  0012               	return	
 14373  0046AA                     l262:
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 14377                           
 14378                           ; BSR set to: 0
 14379  0046AA  0E00               	movlw	0
 14380  0046AC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14381  0046AE  0E01               	movlw	1
 14382  0046B0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14383  0046B2  0EB5               	movlw	low _USBActiveConfiguration
 14384  0046B4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14385  0046B6  0E00               	movlw	high _USBActiveConfiguration
 14386  0046B8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14387  0046BA  0E00               	movlw	0
 14388  0046BC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14389  0046BE  0E01               	movlw	1
 14390  0046C0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14391  0046C2  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14392                           
 14393                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 14394  0046C6  0E20               	movlw	32
 14395  0046C8  6E5F               	movwf	_USBDeviceState,c
 14396  0046CA  0012               	return	
 14397  0046CC                     __end_of_USBStdSetCfgHandler:
 14398                           	opt stack 0
 14399                           tblptru	equ	0xFF8
 14400                           tblptrh	equ	0xFF7
 14401                           tblptrl	equ	0xFF6
 14402                           tablat	equ	0xFF5
 14403                           prodh	equ	0xFF4
 14404                           prodl	equ	0xFF3
 14405                           intcon	equ	0xFF2
 14406                           intcon2	equ	0xFF1
 14407                           intcon3	equ	0xFF0
 14408                           postinc0	equ	0xFEE
 14409                           wreg	equ	0xFE8
 14410                           indf1	equ	0xFE7
 14411                           postdec1	equ	0xFE5
 14412                           plusw1	equ	0xFE3
 14413                           fsr1h	equ	0xFE2
 14414                           fsr1l	equ	0xFE1
 14415                           indf2	equ	0xFDF
 14416                           postinc2	equ	0xFDE
 14417                           postdec2	equ	0xFDD
 14418                           plusw2	equ	0xFDB
 14419                           fsr2h	equ	0xFDA
 14420                           fsr2l	equ	0xFD9
 14421                           status	equ	0xFD8
 14422                           
 14423 ;; *************** function _memset *****************
 14424 ;; Defined at:
 14425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  p1              2    0[COMRAM] PTR void 
 14428 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14429 ;;  c               2    2[COMRAM] int 
 14430 ;;  n               2    4[COMRAM] unsigned int 
 14431 ;; Auto vars:     Size  Location     Type
 14432 ;;  p               2    6[COMRAM] PTR unsigned char 
 14433 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  2    0[COMRAM] PTR void 
 14436 ;; Registers used:
 14437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14443 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14446 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14447 ;;Total ram usage:        8 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; This function calls:
 14450 ;;		Nothing
 14451 ;; This function is called by:
 14452 ;;		_USBDeviceInit
 14453 ;;		_USBStdSetCfgHandler
 14454 ;; This function uses a non-reentrant model
 14455 ;;
 14456                           
 14457                           	psect	text73
 14458  006DB4                     __ptext73:
 14459                           	opt stack 0
 14460  006DB4                     _memset:
 14461                           	opt stack 28
 14462                           
 14463                           ;incstack = 0
 14464  006DB4  C001  F007         	movff	memset@p1,memset@p
 14465  006DB8  C002  F008         	movff	memset@p1+1,memset@p+1
 14466  006DBC  D008               	goto	l3496
 14467  006DBE                     l10462:
 14468  006DBE  C007  FFD9         	movff	memset@p,fsr2l
 14469  006DC2  C008  FFDA         	movff	memset@p+1,fsr2h
 14470  006DC6  C003  FFDF         	movff	memset@c,indf2
 14471  006DCA  4A07               	infsnz	memset@p,f,c
 14472  006DCC  2A08               	incf	memset@p+1,f,c
 14473  006DCE                     l3496:
 14474  006DCE  0605               	decf	memset@n,f,c
 14475  006DD0  A0D8               	btfss	status,0,c
 14476  006DD2  0606               	decf	memset@n+1,f,c
 14477  006DD4  2805               	incf	memset@n,w,c
 14478  006DD6  E1F3               	bnz	l10462
 14479  006DD8  2806               	incf	memset@n+1,w,c
 14480  006DDA  B4D8               	btfsc	status,2,c
 14481  006DDC  0012               	return	
 14482  006DDE  D7EF               	goto	l3497
 14483  006DE0                     __end_of_memset:
 14484                           	opt stack 0
 14485                           tblptru	equ	0xFF8
 14486                           tblptrh	equ	0xFF7
 14487                           tblptrl	equ	0xFF6
 14488                           tablat	equ	0xFF5
 14489                           prodh	equ	0xFF4
 14490                           prodl	equ	0xFF3
 14491                           intcon	equ	0xFF2
 14492                           intcon2	equ	0xFF1
 14493                           intcon3	equ	0xFF0
 14494                           postinc0	equ	0xFEE
 14495                           wreg	equ	0xFE8
 14496                           indf1	equ	0xFE7
 14497                           postdec1	equ	0xFE5
 14498                           plusw1	equ	0xFE3
 14499                           fsr1h	equ	0xFE2
 14500                           fsr1l	equ	0xFE1
 14501                           indf2	equ	0xFDF
 14502                           postinc2	equ	0xFDE
 14503                           postdec2	equ	0xFDD
 14504                           plusw2	equ	0xFDB
 14505                           fsr2h	equ	0xFDA
 14506                           fsr2l	equ	0xFD9
 14507                           status	equ	0xFD8
 14508                           
 14509 ;; *************** function _USBStdGetStatusHandler *****************
 14510 ;; Defined at:
 14511 ;;		line 2131 in file "usb_device.c"
 14512 ;; Parameters:    Size  Location     Type
 14513 ;;		None
 14514 ;; Auto vars:     Size  Location     Type
 14515 ;;  p               2    1[COMRAM] PTR struct __BDT
 14516 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14517 ;; Return value:  Size  Location     Type
 14518 ;;                  1    wreg      void 
 14519 ;; Registers used:
 14520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14521 ;; Tracked objects:
 14522 ;;		On entry : 0/0
 14523 ;;		On exit  : 0/0
 14524 ;;		Unchanged: 0/0
 14525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14530 ;;Total ram usage:        3 bytes
 14531 ;; Hardware stack levels used:    1
 14532 ;; This function calls:
 14533 ;;		Nothing
 14534 ;; This function is called by:
 14535 ;;		_USBCheckStdRequest
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           	psect	text74
 14540  0050F6                     __ptext74:
 14541                           	opt stack 0
 14542  0050F6                     _USBStdGetStatusHandler:
 14543                           	opt stack 26
 14544                           
 14545                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 14546                           
 14547                           ;incstack = 0
 14548  0050F6  0E00               	movlw	0
 14549  0050F8  010D               	movlb	13	; () banked
 14550  0050FA  6F38               	movwf	56,b	;volatile
 14551                           
 14552                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 14553  0050FC  0E00               	movlw	0
 14554  0050FE  6F39               	movwf	57,b	;volatile
 14555                           
 14556                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 14557  005100  D039               	goto	l281
 14558  005102                     l282:
 14559                           
 14560                           ; BSR set to: 13
 14561                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 14562  005102  0100               	movlb	0	; () banked
 14563  005104  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14564                           
 14565                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 14566                           
 14567                           ; BSR set to: 13
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 14571                           
 14572                           ;usb_device.c: 2144: if(0 == 1)
 14573  005106  0100               	movlb	0	; () banked
 14574  005108  05AB               	decf	_RemoteWakeup& (0+255),w,b
 14575  00510A  A4D8               	btfss	status,2,c
 14576  00510C  D03E               	goto	l285
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 14580  00510E  010D               	movlb	13	; () banked
 14581  005110  8338               	bsf	56,1,b	;volatile
 14582                           
 14583                           ; BSR set to: 13
 14584                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 14585  005112  D03B               	goto	l285
 14586  005114                     l286:
 14587                           
 14588                           ; BSR set to: 13
 14589                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 14590  005114  0100               	movlb	0	; () banked
 14591  005116  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14592                           
 14593                           ;usb_device.c: 2156: break;
 14594  005118  D038               	goto	l285
 14595  00511A                     l287:
 14596                           
 14597                           ; BSR set to: 13
 14598                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 14599  00511A  0100               	movlb	0	; () banked
 14600  00511C  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 14601                           
 14602                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 14603  00511E  010D               	movlb	13	; () banked
 14604  005120  BF34               	btfsc	52,7,b	;volatile
 14605  005122  D00A               	goto	l288
 14606                           
 14607                           ; BSR set to: 13
 14608                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14609  005124  5134               	movf	52,w,b	;volatile
 14610  005126  0B0F               	andlw	15
 14611  005128  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14612  00512A  5001               	movf	??_USBStdGetStatusHandler,w,c
 14613  00512C  0D02               	mullw	2
 14614  00512E  0E79               	movlw	low _pBDTEntryOut
 14615  005130  24F3               	addwf	prodl,w,c
 14616  005132  6ED9               	movwf	fsr2l,c
 14617  005134  0E00               	movlw	high _pBDTEntryOut
 14618  005136  D009               	goto	L7
 14619  005138                     l288:
 14620                           
 14621                           ; BSR set to: 13
 14622                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14623                           
 14624                           ; BSR set to: 13
 14625  005138  5134               	movf	52,w,b	;volatile
 14626  00513A  0B0F               	andlw	15
 14627  00513C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14628  00513E  5001               	movf	??_USBStdGetStatusHandler,w,c
 14629  005140  0D02               	mullw	2
 14630  005142  0E73               	movlw	low _pBDTEntryIn
 14631  005144  24F3               	addwf	prodl,w,c
 14632  005146  6ED9               	movwf	fsr2l,c
 14633  005148  0E00               	movlw	high _pBDTEntryIn
 14634  00514A                     L7:
 14635  00514A  20F4               	addwfc	prodh,w,c
 14636  00514C  6EDA               	movwf	fsr2h,c
 14637  00514E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14638  005152  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14639                           
 14640                           ; BSR set to: 13
 14641                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 14642                           
 14643                           ; BSR set to: 13
 14644  005156  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14645  00515A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14646  00515E  AEDF               	btfss	indf2,7,c
 14647  005160  D014               	goto	l285
 14648                           
 14649                           ; BSR set to: 13
 14650  005162  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14651  005166  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14652  00516A  A4DF               	btfss	indf2,2,c
 14653  00516C  D00E               	goto	l285
 14654                           
 14655                           ; BSR set to: 13
 14656                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 14657  00516E  0E01               	movlw	1
 14658  005170  6F38               	movwf	56,b	;volatile
 14659                           
 14660                           ; BSR set to: 13
 14661                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 14662                           
 14663                           ; BSR set to: 13
 14664                           ;usb_device.c: 2176: break;
 14665  005172  D00B               	goto	l285
 14666  005174                     l281:
 14667                           
 14668                           ; BSR set to: 13
 14669                           
 14670                           ; BSR set to: 13
 14671  005174  5130               	movf	48,w,b	;volatile
 14672  005176  0B1F               	andlw	31
 14673                           
 14674                           ; Switch size 1, requested type "space"
 14675                           ; Number of cases is 3, Range of values is 0 to 2
 14676                           ; switch strategies available:
 14677                           ; Name         Instructions Cycles
 14678                           ; simple_byte           10     6 (average)
 14679                           ;	Chosen strategy is simple_byte
 14680  005178  0A00               	xorlw	0	; case 0
 14681  00517A  B4D8               	btfsc	status,2,c
 14682  00517C  D7C2               	goto	l282
 14683  00517E  0A01               	xorlw	1	; case 1
 14684  005180  B4D8               	btfsc	status,2,c
 14685  005182  D7C8               	goto	l286
 14686  005184  0A03               	xorlw	3	; case 2
 14687  005186  B4D8               	btfsc	status,2,c
 14688  005188  D7C8               	goto	l287
 14689  00518A                     l285:
 14690                           
 14691                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14692  00518A  0100               	movlb	0	; () banked
 14693  00518C  AF70               	btfss	(_inPipes+3)& (0+255),7,b
 14694  00518E  0012               	return	
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14698  005190  0E38               	movlw	56
 14699  005192  6F6D               	movwf	_inPipes& (0+255),b
 14700  005194  0E0D               	movlw	13
 14701  005196  6F6E               	movwf	(_inPipes+1)& (0+255),b
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14705  005198  8170               	bsf	(_inPipes+3)& (0+255),0,b
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14709  00519A  0E02               	movlw	2
 14710  00519C  6F71               	movwf	(_inPipes+4)& (0+255),b
 14711  00519E  0012               	return	
 14712  0051A0                     __end_of_USBStdGetStatusHandler:
 14713                           	opt stack 0
 14714                           tblptru	equ	0xFF8
 14715                           tblptrh	equ	0xFF7
 14716                           tblptrl	equ	0xFF6
 14717                           tablat	equ	0xFF5
 14718                           prodh	equ	0xFF4
 14719                           prodl	equ	0xFF3
 14720                           intcon	equ	0xFF2
 14721                           intcon2	equ	0xFF1
 14722                           intcon3	equ	0xFF0
 14723                           postinc0	equ	0xFEE
 14724                           wreg	equ	0xFE8
 14725                           indf1	equ	0xFE7
 14726                           postdec1	equ	0xFE5
 14727                           plusw1	equ	0xFE3
 14728                           fsr1h	equ	0xFE2
 14729                           fsr1l	equ	0xFE1
 14730                           indf2	equ	0xFDF
 14731                           postinc2	equ	0xFDE
 14732                           postdec2	equ	0xFDD
 14733                           plusw2	equ	0xFDB
 14734                           fsr2h	equ	0xFDA
 14735                           fsr2l	equ	0xFD9
 14736                           status	equ	0xFD8
 14737                           
 14738 ;; *************** function _USBStdGetDscHandler *****************
 14739 ;; Defined at:
 14740 ;;		line 2045 in file "usb_device.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;		None
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;		None
 14745 ;; Return value:  Size  Location     Type
 14746 ;;                  1    wreg      void 
 14747 ;; Registers used:
 14748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 14749 ;; Tracked objects:
 14750 ;;		On entry : 0/0
 14751 ;;		On exit  : 0/0
 14752 ;;		Unchanged: 0/0
 14753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14757 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14758 ;;Total ram usage:        2 bytes
 14759 ;; Hardware stack levels used:    1
 14760 ;; This function calls:
 14761 ;;		Nothing
 14762 ;; This function is called by:
 14763 ;;		_USBCheckStdRequest
 14764 ;; This function uses a non-reentrant model
 14765 ;;
 14766                           
 14767                           	psect	text75
 14768  0034C4                     __ptext75:
 14769                           	opt stack 0
 14770  0034C4                     _USBStdGetDscHandler:
 14771                           	opt stack 26
 14772                           
 14773                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 14774                           
 14775                           ; BSR set to: 0
 14776                           ;incstack = 0
 14777  0034C4  0E80               	movlw	128
 14778  0034C6  010D               	movlb	13	; () banked
 14779  0034C8  1930               	xorwf	48,w,b	;volatile
 14780  0034CA  A4D8               	btfss	status,2,c
 14781  0034CC  0012               	return	
 14782                           
 14783                           ; BSR set to: 13
 14784                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 14785  0034CE  0EC0               	movlw	192
 14786  0034D0  0100               	movlb	0	; () banked
 14787  0034D2  6F70               	movwf	(_inPipes+3)& (0+255),b
 14788                           
 14789                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 14790  0034D4  D088               	goto	l268
 14791  0034D6                     
 14792                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 14793                           
 14794                           ; BSR set to: 0
 14795  0034D6  0EA4               	movlw	low _device_dsc
 14796  0034D8  0100               	movlb	0	; () banked
 14797  0034DA  6F6D               	movwf	_inPipes& (0+255),b
 14798  0034DC  0E8F               	movlw	high _device_dsc
 14799  0034DE  6F6E               	movwf	(_inPipes+1)& (0+255),b
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 14803  0034E0  0E00               	movlw	0
 14804  0034E2  6F72               	movwf	(_inPipes+5)& (0+255),b
 14805  0034E4  0E12               	movlw	18
 14806  0034E6  6F71               	movwf	(_inPipes+4)& (0+255),b
 14807                           
 14808                           ;usb_device.c: 2060: break;
 14809  0034E8  0012               	return	
 14810  0034EA                     
 14811                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 14812                           
 14813                           ; BSR set to: 0
 14814  0034EA  010D               	movlb	13	; () banked
 14815  0034EC  5132               	movf	50,w,b	;volatile
 14816  0034EE  A4D8               	btfss	status,2,c
 14817  0034F0  D043               	goto	l272
 14818                           
 14819                           ; BSR set to: 13
 14820                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 14821  0034F2  5132               	movf	50,w,b	;volatile
 14822  0034F4  0D02               	mullw	2
 14823  0034F6  0EA3               	movlw	low _USB_CD_Ptr
 14824  0034F8  24F3               	addwf	prodl,w,c
 14825  0034FA  6EF6               	movwf	tblptrl,c
 14826  0034FC  0E8E               	movlw	high _USB_CD_Ptr
 14827  0034FE  20F4               	addwfc	prodh,w,c
 14828  003500  6EF7               	movwf	tblptrh,c
 14829  003502                     	if	1	;There are 3 active tblptr bytes
 14830  003502  6AF8               	clrf	tblptru,c
 14831  003504  0E00               	movlw	low (__mediumconst shr (0+16))
 14832  003506  22F8               	addwfc	tblptru,f,c
 14833  003508                     	endif
 14834  003508  0009               	tblrd		*+
 14835  00350A  CFF5 F06D          	movff	tablat,_inPipes
 14836  00350E  000A               	tblrd		*-
 14837  003510  CFF5 F06E          	movff	tablat,_inPipes+1
 14838                           
 14839                           ; BSR set to: 13
 14840                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 14841  003514  0E02               	movlw	2
 14842  003516  0100               	movlb	0	; () banked
 14843  003518  256D               	addwf	_inPipes& (0+255),w,b
 14844  00351A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14845  00351C  0E00               	movlw	0
 14846  00351E  216E               	addwfc	(_inPipes+1)& (0+255),w,b
 14847  003520  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14848  003522  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14849  003526  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14850  00352A  6AF8               	clrf	tblptru,c
 14851  00352C  0E0E               	movlw	(high __ramtop+-1)
 14852  00352E  64F7               	cpfsgt	tblptrh,c
 14853  003530  D003               	bra	u8787
 14854  003532  0008               	tblrd		*
 14855  003534  50F5               	movf	tablat,w,c
 14856  003536  D005               	bra	u8780
 14857  003538                     u8787:
 14858  003538  CFF6 FFE9          	movff	tblptrl,fsr0l
 14859  00353C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14860  003540  50EF               	movf	indf0,w,c
 14861  003542                     u8780:
 14862  003542  0100               	movlb	0	; () banked
 14863  003544  6F71               	movwf	(_inPipes+4)& (0+255),b
 14864                           
 14865                           ; BSR set to: 0
 14866                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 14867  003546  0E03               	movlw	3
 14868  003548  256D               	addwf	_inPipes& (0+255),w,b
 14869  00354A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14870  00354C  0E00               	movlw	0
 14871  00354E  216E               	addwfc	(_inPipes+1)& (0+255),w,b
 14872  003550  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 14873  003552  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 14874  003556  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 14875  00355A  6AF8               	clrf	tblptru,c
 14876  00355C  0E0E               	movlw	(high __ramtop+-1)
 14877  00355E  64F7               	cpfsgt	tblptrh,c
 14878  003560  D003               	bra	u8797
 14879  003562  0008               	tblrd		*
 14880  003564  50F5               	movf	tablat,w,c
 14881  003566  D005               	bra	u8790
 14882  003568                     u8797:
 14883  003568  CFF6 FFE9          	movff	tblptrl,fsr0l
 14884  00356C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14885  003570  50EF               	movf	indf0,w,c
 14886  003572                     u8790:
 14887  003572  0100               	movlb	0	; () banked
 14888  003574  6F72               	movwf	(_inPipes+5)& (0+255),b
 14889                           
 14890                           ;usb_device.c: 2078: }
 14891  003576  0012               	return	
 14892  003578                     l272:
 14893                           
 14894                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 14895                           
 14896                           ; BSR set to: 0
 14897  003578  0E00               	movlw	0
 14898  00357A  0100               	movlb	0	; () banked
 14899  00357C  6F70               	movwf	(_inPipes+3)& (0+255),b
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 14903  00357E  0012               	return	
 14904  003580                     
 14905                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 14906                           
 14907                           ; BSR set to: 0
 14908  003580  0E04               	movlw	4
 14909  003582  010D               	movlb	13	; () banked
 14910  003584  6132               	cpfslt	50,b	;volatile
 14911  003586  D027               	goto	l275
 14912                           
 14913                           ; BSR set to: 13
 14914                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 14915  003588  5132               	movf	50,w,b	;volatile
 14916  00358A  0D02               	mullw	2
 14917  00358C  0E79               	movlw	low _USB_SD_Ptr
 14918  00358E  24F3               	addwf	prodl,w,c
 14919  003590  6EF6               	movwf	tblptrl,c
 14920  003592  0E8E               	movlw	high _USB_SD_Ptr
 14921  003594  20F4               	addwfc	prodh,w,c
 14922  003596  6EF7               	movwf	tblptrh,c
 14923  003598                     	if	1	;There are 3 active tblptr bytes
 14924  003598  6AF8               	clrf	tblptru,c
 14925  00359A  0E00               	movlw	low (__mediumconst shr (0+16))
 14926  00359C  22F8               	addwfc	tblptru,f,c
 14927  00359E                     	endif
 14928  00359E  0009               	tblrd		*+
 14929  0035A0  CFF5 F06D          	movff	tablat,_inPipes
 14930  0035A4  000A               	tblrd		*-
 14931  0035A6  CFF5 F06E          	movff	tablat,_inPipes+1
 14932                           
 14933                           ; BSR set to: 13
 14934                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 14935  0035AA  C06D  FFF6         	movff	_inPipes,tblptrl
 14936  0035AE  C06E  FFF7         	movff	_inPipes+1,tblptrh
 14937  0035B2  6AF8               	clrf	tblptru,c
 14938  0035B4  0E0E               	movlw	(high __ramtop+-1)
 14939  0035B6  64F7               	cpfsgt	tblptrh,c
 14940  0035B8  D003               	bra	u8817
 14941  0035BA  0008               	tblrd		*
 14942  0035BC  50F5               	movf	tablat,w,c
 14943  0035BE  D005               	bra	u8810
 14944  0035C0                     u8817:
 14945  0035C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 14946  0035C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 14947  0035C8  50EF               	movf	indf0,w,c
 14948  0035CA                     u8810:
 14949  0035CA  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 14950  0035CC  5001               	movf	??_USBStdGetDscHandler,w,c
 14951  0035CE  0100               	movlb	0	; () banked
 14952  0035D0  6F71               	movwf	(_inPipes+4)& (0+255),b
 14953  0035D2  6B72               	clrf	(_inPipes+5)& (0+255),b
 14954                           
 14955                           ;usb_device.c: 2094: }
 14956  0035D4  0012               	return	
 14957  0035D6                     l275:
 14958                           
 14959                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 14960                           
 14961                           ; BSR set to: 0
 14962  0035D6  0E00               	movlw	0
 14963  0035D8  0100               	movlb	0	; () banked
 14964  0035DA  6F70               	movwf	(_inPipes+3)& (0+255),b
 14965                           
 14966                           ; BSR set to: 0
 14967                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 14968  0035DC  0012               	return	
 14969  0035DE                     
 14970                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 14971                           
 14972                           ; BSR set to: 0
 14973  0035DE  0E00               	movlw	0
 14974  0035E0  0100               	movlb	0	; () banked
 14975  0035E2  6F70               	movwf	(_inPipes+3)& (0+255),b
 14976                           
 14977                           ; BSR set to: 0
 14978                           ;usb_device.c: 2112: }
 14979                           
 14980                           ;usb_device.c: 2111: break;
 14981  0035E4  0012               	return	
 14982  0035E6                     l268:
 14983                           
 14984                           ; BSR set to: 0
 14985                           
 14986                           ; BSR set to: 0
 14987  0035E6  010D               	movlb	13	; () banked
 14988  0035E8  5133               	movf	51,w,b	;volatile
 14989                           
 14990                           ; Switch size 1, requested type "space"
 14991                           ; Number of cases is 3, Range of values is 1 to 3
 14992                           ; switch strategies available:
 14993                           ; Name         Instructions Cycles
 14994                           ; simple_byte           10     6 (average)
 14995                           ;	Chosen strategy is simple_byte
 14996  0035EA  0A01               	xorlw	1	; case 1
 14997  0035EC  B4D8               	btfsc	status,2,c
 14998  0035EE  D773               	goto	l269
 14999  0035F0  0A03               	xorlw	3	; case 2
 15000  0035F2  B4D8               	btfsc	status,2,c
 15001  0035F4  D77A               	goto	l271
 15002  0035F6  0A01               	xorlw	1	; case 3
 15003  0035F8  B4D8               	btfsc	status,2,c
 15004  0035FA  D7C2               	goto	l274
 15005  0035FC  D7F0               	goto	l277
 15006  0035FE                     __end_of_USBStdGetDscHandler:
 15007                           	opt stack 0
 15008                           tblptru	equ	0xFF8
 15009                           tblptrh	equ	0xFF7
 15010                           tblptrl	equ	0xFF6
 15011                           tablat	equ	0xFF5
 15012                           prodh	equ	0xFF4
 15013                           prodl	equ	0xFF3
 15014                           intcon	equ	0xFF2
 15015                           intcon2	equ	0xFF1
 15016                           intcon3	equ	0xFF0
 15017                           indf0	equ	0xFEF
 15018                           postinc0	equ	0xFEE
 15019                           fsr0h	equ	0xFEA
 15020                           fsr0l	equ	0xFE9
 15021                           wreg	equ	0xFE8
 15022                           indf1	equ	0xFE7
 15023                           postdec1	equ	0xFE5
 15024                           plusw1	equ	0xFE3
 15025                           fsr1h	equ	0xFE2
 15026                           fsr1l	equ	0xFE1
 15027                           indf2	equ	0xFDF
 15028                           postinc2	equ	0xFDE
 15029                           postdec2	equ	0xFDD
 15030                           plusw2	equ	0xFDB
 15031                           fsr2h	equ	0xFDA
 15032                           fsr2l	equ	0xFD9
 15033                           status	equ	0xFD8
 15034                           
 15035 ;; *************** function _USBStdFeatureReqHandler *****************
 15036 ;; Defined at:
 15037 ;;		line 2756 in file "usb_device.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;		None
 15040 ;; Auto vars:     Size  Location     Type
 15041 ;;  p               2   27[COMRAM] PTR struct __BDT
 15042 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15043 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15044 ;;		 -> UEP0(1), 
 15045 ;;  current_ep_d    1   26[COMRAM] struct .
 15046 ;; Return value:  Size  Location     Type
 15047 ;;                  1    wreg      void 
 15048 ;; Registers used:
 15049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15050 ;; Tracked objects:
 15051 ;;		On entry : 0/0
 15052 ;;		On exit  : 0/0
 15053 ;;		Unchanged: 0/0
 15054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15056 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15058 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15059 ;;Total ram usage:        6 bytes
 15060 ;; Hardware stack levels used:    1
 15061 ;; Hardware stack levels required when called:    4
 15062 ;; This function calls:
 15063 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15064 ;; This function is called by:
 15065 ;;		_USBCheckStdRequest
 15066 ;; This function uses a non-reentrant model
 15067 ;;
 15068                           
 15069                           	psect	text76
 15070  0014D6                     __ptext76:
 15071                           	opt stack 0
 15072  0014D6                     _USBStdFeatureReqHandler:
 15073                           	opt stack 22
 15074                           
 15075                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15076                           
 15077                           ;incstack = 0
 15078  0014D6  010D               	movlb	13	; () banked
 15079  0014D8  0532               	decf	50,w,b	;volatile
 15080  0014DA  A4D8               	btfss	status,2,c
 15081  0014DC  D011               	goto	l361
 15082                           
 15083                           ; BSR set to: 13
 15084  0014DE  5130               	movf	48,w,b	;volatile
 15085  0014E0  0B1F               	andlw	31
 15086  0014E2  0900               	iorlw	0
 15087  0014E4  A4D8               	btfss	status,2,c
 15088  0014E6  D00C               	goto	l361
 15089                           
 15090                           ; BSR set to: 13
 15091                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15092  0014E8  0100               	movlb	0	; () banked
 15093  0014EA  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15097  0014EC  0E03               	movlw	3
 15098  0014EE  010D               	movlb	13	; () banked
 15099  0014F0  1931               	xorwf	49,w,b	;volatile
 15100  0014F2  A4D8               	btfss	status,2,c
 15101  0014F4  D002               	goto	l360
 15102                           
 15103                           ; BSR set to: 13
 15104                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15105  0014F6  0E01               	movlw	1
 15106  0014F8  D001               	goto	L8
 15107  0014FA                     l360:
 15108                           
 15109                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15110                           
 15111                           ; BSR set to: 0
 15112  0014FA  0E00               	movlw	0
 15113  0014FC                     L8:
 15114  0014FC  0100               	movlb	0	; () banked
 15115  0014FE  6FAB               	movwf	_RemoteWakeup& (0+255),b
 15116  001500                     l361:
 15117                           
 15118                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15119                           
 15120                           ; BSR set to: 0
 15121  001500  010D               	movlb	13	; () banked
 15122  001502  5132               	movf	50,w,b	;volatile
 15123  001504  A4D8               	btfss	status,2,c
 15124  001506  0012               	return	
 15125                           
 15126                           ; BSR set to: 13
 15127  001508  5130               	movf	48,w,b	;volatile
 15128  00150A  0B1F               	andlw	31
 15129  00150C  0A02               	xorlw	2
 15130  00150E  A4D8               	btfss	status,2,c
 15131  001510  0012               	return	
 15132                           
 15133                           ; BSR set to: 13
 15134  001512  5134               	movf	52,w,b	;volatile
 15135  001514  0B0F               	andlw	15
 15136  001516  0900               	iorlw	0
 15137  001518  B4D8               	btfsc	status,2,c
 15138  00151A  0012               	return	
 15139                           
 15140                           ; BSR set to: 13
 15141  00151C  5134               	movf	52,w,b	;volatile
 15142  00151E  0B0F               	andlw	15
 15143  001520  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15144  001522  0E03               	movlw	3
 15145  001524  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15146  001526  0012               	return	
 15147                           
 15148                           ; BSR set to: 13
 15149  001528  0E20               	movlw	32
 15150  00152A  185F               	xorwf	_USBDeviceState,w,c
 15151  00152C  A4D8               	btfss	status,2,c
 15152  00152E  0012               	return	
 15153                           
 15154                           ; BSR set to: 13
 15155                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15156  001530  0100               	movlb	0	; () banked
 15157  001532  8F70               	bsf	(_inPipes+3)& (0+255),7,b
 15158                           
 15159                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15160  001534  010D               	movlb	13	; () banked
 15161  001536  BF34               	btfsc	52,7,b	;volatile
 15162  001538  D019               	goto	l363
 15163                           
 15164                           ; BSR set to: 13
 15165                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15166  00153A  5134               	movf	52,w,b	;volatile
 15167  00153C  0B0F               	andlw	15
 15168  00153E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15169  001540  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15170  001542  0D02               	mullw	2
 15171  001544  0E79               	movlw	low _pBDTEntryOut
 15172  001546  24F3               	addwf	prodl,w,c
 15173  001548  6ED9               	movwf	fsr2l,c
 15174  00154A  0E00               	movlw	high _pBDTEntryOut
 15175  00154C  20F4               	addwfc	prodh,w,c
 15176  00154E  6EDA               	movwf	fsr2h,c
 15177  001550  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15178  001554  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15179                           
 15180                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15181  001558  5134               	movf	52,w,b	;volatile
 15182  00155A  0B0F               	andlw	15
 15183  00155C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15184  00155E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15185  001560  0D01               	mullw	1
 15186  001562  0E57               	movlw	low _ep_data_out
 15187  001564  24F3               	addwf	prodl,w,c
 15188  001566  6ED9               	movwf	fsr2l,c
 15189  001568  0E01               	movlw	high _ep_data_out
 15190  00156A  D018               	goto	L9
 15191  00156C                     l363:
 15192                           
 15193                           ; BSR set to: 13
 15194                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15195                           
 15196                           ; BSR set to: 13
 15197  00156C  5134               	movf	52,w,b	;volatile
 15198  00156E  0B0F               	andlw	15
 15199  001570  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15200  001572  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15201  001574  0D02               	mullw	2
 15202  001576  0E73               	movlw	low _pBDTEntryIn
 15203  001578  24F3               	addwf	prodl,w,c
 15204  00157A  6ED9               	movwf	fsr2l,c
 15205  00157C  0E00               	movlw	high _pBDTEntryIn
 15206  00157E  20F4               	addwfc	prodh,w,c
 15207  001580  6EDA               	movwf	fsr2h,c
 15208  001582  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15209  001586  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15210                           
 15211                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15212  00158A  5134               	movf	52,w,b	;volatile
 15213  00158C  0B0F               	andlw	15
 15214  00158E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15215  001590  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15216  001592  0D01               	mullw	1
 15217  001594  0E5A               	movlw	low _ep_data_in
 15218  001596  24F3               	addwf	prodl,w,c
 15219  001598  6ED9               	movwf	fsr2l,c
 15220  00159A  0E01               	movlw	high _ep_data_in
 15221  00159C                     L9:
 15222  00159C  20F4               	addwfc	prodh,w,c
 15223  00159E  6EDA               	movwf	fsr2h,c
 15224  0015A0  50DF               	movf	indf2,w,c
 15225  0015A2  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15226                           
 15227                           ; BSR set to: 13
 15228                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15229                           
 15230                           ; BSR set to: 13
 15231  0015A4  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15232  0015A6  D006               	goto	l365
 15233                           
 15234                           ; BSR set to: 13
 15235                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15236  0015A8  0EFB               	movlw	251
 15237  0015AA  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15238  0015AC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15239  0015AE  0EFF               	movlw	255
 15240  0015B0  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15241  0015B2  D004               	goto	L10
 15242  0015B4                     l365:
 15243                           
 15244                           ; BSR set to: 13
 15245                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15246                           
 15247                           ; BSR set to: 13
 15248  0015B4  0E04               	movlw	4
 15249  0015B6  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15250  0015B8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15251  0015BA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15252  0015BC                     L10:
 15253  0015BC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15254                           
 15255                           ; BSR set to: 13
 15256                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15257                           
 15258                           ; BSR set to: 13
 15259  0015BE  BF34               	btfsc	52,7,b	;volatile
 15260  0015C0  D00A               	goto	l367
 15261                           
 15262                           ; BSR set to: 13
 15263                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15264  0015C2  5134               	movf	52,w,b	;volatile
 15265  0015C4  0B0F               	andlw	15
 15266  0015C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15267  0015C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15268  0015CA  0D02               	mullw	2
 15269  0015CC  0E79               	movlw	low _pBDTEntryOut
 15270  0015CE  24F3               	addwf	prodl,w,c
 15271  0015D0  6ED9               	movwf	fsr2l,c
 15272  0015D2  0E00               	movlw	high _pBDTEntryOut
 15273  0015D4  D009               	goto	L11
 15274  0015D6                     l367:
 15275                           
 15276                           ; BSR set to: 13
 15277                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15278                           
 15279                           ; BSR set to: 13
 15280  0015D6  5134               	movf	52,w,b	;volatile
 15281  0015D8  0B0F               	andlw	15
 15282  0015DA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15283  0015DC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15284  0015DE  0D02               	mullw	2
 15285  0015E0  0E73               	movlw	low _pBDTEntryIn
 15286  0015E2  24F3               	addwf	prodl,w,c
 15287  0015E4  6ED9               	movwf	fsr2l,c
 15288  0015E6  0E00               	movlw	high _pBDTEntryIn
 15289  0015E8                     L11:
 15290  0015E8  20F4               	addwfc	prodh,w,c
 15291  0015EA  6EDA               	movwf	fsr2h,c
 15292  0015EC  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15293  0015F0  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15294                           
 15295                           ; BSR set to: 13
 15296                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15297                           
 15298                           ; BSR set to: 13
 15299  0015F4  0E03               	movlw	3
 15300  0015F6  1931               	xorwf	49,w,b	;volatile
 15301  0015F8  A4D8               	btfss	status,2,c
 15302  0015FA  D02D               	goto	l369
 15303                           
 15304                           ; BSR set to: 13
 15305                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15306  0015FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15307  001600  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15308  001604  AEDF               	btfss	indf2,7,c
 15309  001606  D01A               	goto	l372
 15310                           
 15311                           ; BSR set to: 13
 15312                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15313  001608  BF34               	btfsc	52,7,b	;volatile
 15314  00160A  D00A               	goto	l371
 15315                           
 15316                           ; BSR set to: 13
 15317                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15318  00160C  5134               	movf	52,w,b	;volatile
 15319  00160E  0B0F               	andlw	15
 15320  001610  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15321  001612  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15322  001614  0D01               	mullw	1
 15323  001616  0E57               	movlw	low _ep_data_out
 15324  001618  24F3               	addwf	prodl,w,c
 15325  00161A  6ED9               	movwf	fsr2l,c
 15326  00161C  0E01               	movlw	high _ep_data_out
 15327  00161E  D00A               	goto	L12
 15328  001620                     l371:
 15329                           
 15330                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15331                           
 15332                           ; BSR set to: 1
 15333  001620  010D               	movlb	13	; () banked
 15334  001622  5134               	movf	52,w,b	;volatile
 15335  001624  0B0F               	andlw	15
 15336  001626  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15337  001628  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15338  00162A  0D01               	mullw	1
 15339  00162C  0E5A               	movlw	low _ep_data_in
 15340  00162E  24F3               	addwf	prodl,w,c
 15341  001630  6ED9               	movwf	fsr2l,c
 15342  001632  0E01               	movlw	high _ep_data_in
 15343  001634                     L12:
 15344  001634  20F4               	addwfc	prodh,w,c
 15345  001636  6EDA               	movwf	fsr2h,c
 15346  001638  0101               	movlb	1	; () banked
 15347  00163A  82DF               	bsf	indf2,1,c
 15348  00163C                     l372:
 15349                           
 15350                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 15351                           
 15352                           ; BSR set to: 1
 15353                           
 15354                           ; BSR set to: 1
 15355  00163C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15356  001640  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15357  001644  0E00               	movlw	0
 15358  001646  84DB               	bsf	plusw2,2,c
 15359                           
 15360                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 15361  001648  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15362  00164C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15363  001650  0E00               	movlw	0
 15364  001652  8EDB               	bsf	plusw2,7,c
 15365                           
 15366                           ;usb_device.c: 2878: }
 15367  001654  0012               	return	
 15368  001656                     l369:
 15369                           
 15370                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 15371  001656  0E04               	movlw	4
 15372  001658  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15373  00165A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15374  00165C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15375  00165E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15376                           
 15377                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 15378  001660  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15379  001664  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15380  001668  AEDF               	btfss	indf2,7,c
 15381  00166A  D01B               	goto	l374
 15382                           
 15383                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 15384  00166C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15385  001670  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15386  001674  0E7F               	movlw	127
 15387  001676  16DF               	andwf	indf2,f,c
 15388                           
 15389                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 15390  001678  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15391  00167C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15392  001680  0E00               	movlw	0
 15393  001682  8CDB               	bsf	plusw2,6,c
 15394                           
 15395                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15396  001684  0E00               	movlw	0
 15397  001686  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15398  001688  0E05               	movlw	5
 15399  00168A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15400  00168C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15401  001690  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15402  001694  0E00               	movlw	0
 15403  001696  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15404  001698  0E02               	movlw	2
 15405  00169A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15406  00169C  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15407                           
 15408                           ;usb_device.c: 2893: }
 15409  0016A0  D006               	goto	l375
 15410  0016A2                     l374:
 15411                           
 15412                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 15413  0016A2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15414  0016A6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15415  0016AA  0E00               	movlw	0
 15416  0016AC  8CDB               	bsf	plusw2,6,c
 15417  0016AE                     l375:
 15418                           
 15419                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 15420  0016AE  0E04               	movlw	4
 15421  0016B0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15422  0016B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15423  0016B4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15424  0016B6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15425                           
 15426                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15427  0016B8  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15428  0016BA  D006               	goto	u9030
 15429  0016BC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15430  0016C0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15431  0016C4  AEDF               	btfss	indf2,7,c
 15432  0016C6  D030               	goto	l376
 15433  0016C8                     u9030:
 15434                           
 15435                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 15436  0016C8  010D               	movlb	13	; () banked
 15437  0016CA  BF34               	btfsc	52,7,b	;volatile
 15438  0016CC  D00A               	goto	l379
 15439                           
 15440                           ; BSR set to: 13
 15441                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 15442  0016CE  5134               	movf	52,w,b	;volatile
 15443  0016D0  0B0F               	andlw	15
 15444  0016D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15445  0016D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15446  0016D6  0D01               	mullw	1
 15447  0016D8  0E57               	movlw	low _ep_data_out
 15448  0016DA  24F3               	addwf	prodl,w,c
 15449  0016DC  6ED9               	movwf	fsr2l,c
 15450  0016DE  0E01               	movlw	high _ep_data_out
 15451  0016E0  D00A               	goto	L13
 15452  0016E2                     l379:
 15453                           
 15454                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 15455                           
 15456                           ; BSR set to: 1
 15457  0016E2  010D               	movlb	13	; () banked
 15458  0016E4  5134               	movf	52,w,b	;volatile
 15459  0016E6  0B0F               	andlw	15
 15460  0016E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15461  0016EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15462  0016EC  0D01               	mullw	1
 15463  0016EE  0E5A               	movlw	low _ep_data_in
 15464  0016F0  24F3               	addwf	prodl,w,c
 15465  0016F2  6ED9               	movwf	fsr2l,c
 15466  0016F4  0E01               	movlw	high _ep_data_in
 15467  0016F6                     L13:
 15468  0016F6  20F4               	addwfc	prodh,w,c
 15469  0016F8  6EDA               	movwf	fsr2h,c
 15470  0016FA  0101               	movlb	1	; () banked
 15471  0016FC  92DF               	bcf	indf2,1,c
 15472                           
 15473                           ; BSR set to: 1
 15474                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15475                           
 15476                           ; BSR set to: 1
 15477  0016FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15478  001702  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15479  001706  0E3B               	movlw	59
 15480  001708  16DF               	andwf	indf2,f,c
 15481                           
 15482                           ; BSR set to: 1
 15483                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15484  00170A  0E00               	movlw	0
 15485  00170C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15486  00170E  0E05               	movlw	5
 15487  001710  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15488  001712  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15489  001716  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15490  00171A  0E00               	movlw	0
 15491  00171C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15492  00171E  0E02               	movlw	2
 15493  001720  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15494  001722  EC5A  F02D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15495                           
 15496                           ;usb_device.c: 2923: }
 15497  001726  D006               	goto	l381
 15498  001728                     l376:
 15499                           
 15500                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 15501  001728  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15502  00172C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15503  001730  0E3B               	movlw	59
 15504  001732  16DF               	andwf	indf2,f,c
 15505  001734                     l381:
 15506                           
 15507                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 15508  001734  010D               	movlb	13	; () banked
 15509  001736  5134               	movf	52,w,b	;volatile
 15510  001738  0B0F               	andlw	15
 15511  00173A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15512  00173C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15513  00173E  0D01               	mullw	1
 15514  001740  0E26               	movlw	38
 15515  001742  24F3               	addwf	prodl,w,c
 15516  001744  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 15517  001746  0E0F               	movlw	15
 15518  001748  20F4               	addwfc	prodh,w,c
 15519  00174A  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15520                           
 15521                           ; BSR set to: 13
 15522                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 15523  00174C  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15524  001750  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15525  001754  0EFE               	movlw	254
 15526  001756  16DF               	andwf	indf2,f,c
 15527                           
 15528                           ; BSR set to: 13
 15529  001758  0012               	return	
 15530  00175A                     __end_of_USBStdFeatureReqHandler:
 15531                           	opt stack 0
 15532                           tblptru	equ	0xFF8
 15533                           tblptrh	equ	0xFF7
 15534                           tblptrl	equ	0xFF6
 15535                           tablat	equ	0xFF5
 15536                           prodh	equ	0xFF4
 15537                           prodl	equ	0xFF3
 15538                           intcon	equ	0xFF2
 15539                           intcon2	equ	0xFF1
 15540                           intcon3	equ	0xFF0
 15541                           indf0	equ	0xFEF
 15542                           postinc0	equ	0xFEE
 15543                           fsr0h	equ	0xFEA
 15544                           fsr0l	equ	0xFE9
 15545                           wreg	equ	0xFE8
 15546                           indf1	equ	0xFE7
 15547                           postdec1	equ	0xFE5
 15548                           plusw1	equ	0xFE3
 15549                           fsr1h	equ	0xFE2
 15550                           fsr1l	equ	0xFE1
 15551                           indf2	equ	0xFDF
 15552                           postinc2	equ	0xFDE
 15553                           postdec2	equ	0xFDD
 15554                           plusw2	equ	0xFDB
 15555                           fsr2h	equ	0xFDA
 15556                           fsr2l	equ	0xFD9
 15557                           status	equ	0xFD8
 15558                           
 15559 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15560 ;; Defined at:
 15561 ;;		line 54 in file "usb_events.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;  event           2   15[COMRAM] enum E6832
 15564 ;;  pdata           2   17[COMRAM] PTR void 
 15565 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15566 ;;		 -> BDT(48), 
 15567 ;;  size            2   19[COMRAM] unsigned int 
 15568 ;; Auto vars:     Size  Location     Type
 15569 ;;		None
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      unsigned char 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15579 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15583 ;;Total ram usage:        8 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    3
 15586 ;; This function calls:
 15587 ;;		_APP_DeviceCustomHIDInitialize
 15588 ;;		_APP_DeviceMSDInitialize
 15589 ;;		_MSDTransferTerminated
 15590 ;;		_SYSTEM_Initialize
 15591 ;;		_USBCheckHIDRequest
 15592 ;;		_USBCheckMSDRequest
 15593 ;; This function is called by:
 15594 ;;		_USBDeviceTasks
 15595 ;;		_USBStdSetCfgHandler
 15596 ;;		_USBSuspend
 15597 ;;		_USBWakeFromSuspend
 15598 ;;		_USBCtrlTrfSetupHandler
 15599 ;;		_USBCheckStdRequest
 15600 ;;		_USBStdFeatureReqHandler
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text77
 15605  005AB4                     __ptext77:
 15606                           	opt stack 0
 15607  005AB4                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15608                           	opt stack 26
 15609                           
 15610                           ;usb_events.c: 56: switch((int)event)
 15611                           
 15612                           ;incstack = 0
 15613  005AB4  D019               	goto	l800
 15614  005AB6                     
 15615                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 15616  005AB6  0E01               	movlw	1
 15617  005AB8  EC27  F033         	call	_SYSTEM_Initialize
 15618                           
 15619                           ;usb_events.c: 79: break;
 15620  005ABC  0012               	return	
 15621  005ABE                     
 15622                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 15623  005ABE  0E02               	movlw	2
 15624  005AC0  EC27  F033         	call	_SYSTEM_Initialize
 15625                           
 15626                           ;usb_events.c: 90: break;
 15627  005AC4  0012               	return	
 15628  005AC6                     
 15629                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15630  005AC6  EC04  F036         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15631                           
 15632                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15633  005ACA  ECAD  F038         	call	_APP_DeviceMSDInitialize	;wreg free
 15634                           
 15635                           ;usb_events.c: 100: break;
 15636                           
 15637                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15638                           
 15639                           ;usb_events.c: 97: break;
 15640  005ACE  0012               	return	
 15641  005AD0                     
 15642                           ;usb_events.c: 105: USBCheckHIDRequest();
 15643  005AD0  EC33  F021         	call	_USBCheckHIDRequest	;wreg free
 15644                           
 15645                           ;usb_events.c: 108: USBCheckMSDRequest();
 15646  005AD4  ECB6  F026         	call	_USBCheckMSDRequest	;wreg free
 15647                           
 15648                           ;usb_events.c: 112: break;
 15649                           
 15650                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 15651                           
 15652                           ;usb_events.c: 109: break;
 15653  005AD8  0012               	return	
 15654  005ADA                     
 15655                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 15656  005ADA  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 15657  005ADE  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 15658  005AE2  EC50  F032         	call	_MSDTransferTerminated	;wreg free
 15659                           
 15660                           ;usb_events.c: 129: }
 15661                           
 15662                           ;usb_events.c: 128: break;
 15663                           
 15664                           ;usb_events.c: 127: default:
 15665                           
 15666                           ;usb_events.c: 125: break;
 15667  005AE6  0012               	return	
 15668  005AE8                     l800:
 15669  005AE8  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15670  005AEC  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15671                           
 15672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15673                           ; Switch size 1, requested type "space"
 15674                           ; Number of cases is 2, Range of values is 0 to 127
 15675                           ; switch strategies available:
 15676                           ; Name         Instructions Cycles
 15677                           ; simple_byte            7     4 (average)
 15678                           ;	Chosen strategy is simple_byte
 15679  005AF0  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15680  005AF2  0A00               	xorlw	0	; case 0
 15681  005AF4  B4D8               	btfsc	status,2,c
 15682  005AF6  D004               	goto	l15294
 15683  005AF8  0A7F               	xorlw	127	; case 127
 15684  005AFA  A4D8               	btfss	status,2,c
 15685  005AFC  0012               	return	
 15686  005AFE  D01A               	goto	l15296
 15687  005B00                     l15294:
 15688                           
 15689                           ; Switch size 1, requested type "space"
 15690                           ; Number of cases is 8, Range of values is 1 to 117
 15691                           ; switch strategies available:
 15692                           ; Name         Instructions Cycles
 15693                           ; simple_byte           25    13 (average)
 15694                           ;	Chosen strategy is simple_byte
 15695  005B00  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15696  005B02  0A01               	xorlw	1	; case 1
 15697  005B04  B4D8               	btfsc	status,2,c
 15698  005B06  D7DF               	goto	l806
 15699  005B08  0A03               	xorlw	3	; case 2
 15700  005B0A  B4D8               	btfsc	status,2,c
 15701  005B0C  0012               	return	
 15702  005B0E  0A01               	xorlw	1	; case 3
 15703  005B10  B4D8               	btfsc	status,2,c
 15704  005B12  D7DE               	goto	l808
 15705  005B14  0A06               	xorlw	6	; case 5
 15706  005B16  B4D8               	btfsc	status,2,c
 15707  005B18  D7E0               	goto	l810
 15708  005B1A  0A77               	xorlw	119	; case 114
 15709  005B1C  B4D8               	btfsc	status,2,c
 15710  005B1E  0012               	return	
 15711  005B20  0A01               	xorlw	1	; case 115
 15712  005B22  B4D8               	btfsc	status,2,c
 15713  005B24  0012               	return	
 15714  005B26  0A07               	xorlw	7	; case 116
 15715  005B28  B4D8               	btfsc	status,2,c
 15716  005B2A  D7C9               	goto	l805
 15717  005B2C  0A01               	xorlw	1	; case 117
 15718  005B2E  A4D8               	btfss	status,2,c
 15719  005B30  0012               	return	
 15720  005B32  D7C1               	goto	l804
 15721  005B34                     l15296:
 15722                           
 15723                           ; Switch size 1, requested type "space"
 15724                           ; Number of cases is 1, Range of values is 255 to 255
 15725                           ; switch strategies available:
 15726                           ; Name         Instructions Cycles
 15727                           ; simple_byte            4     3 (average)
 15728                           ;	Chosen strategy is simple_byte
 15729  005B34  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15730  005B36  0AFF               	xorlw	255	; case 255
 15731  005B38  0012               	return	
 15732  005B3A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 15733                           	opt stack 0
 15734                           tblptru	equ	0xFF8
 15735                           tblptrh	equ	0xFF7
 15736                           tblptrl	equ	0xFF6
 15737                           tablat	equ	0xFF5
 15738                           prodh	equ	0xFF4
 15739                           prodl	equ	0xFF3
 15740                           intcon	equ	0xFF2
 15741                           intcon2	equ	0xFF1
 15742                           intcon3	equ	0xFF0
 15743                           indf0	equ	0xFEF
 15744                           postinc0	equ	0xFEE
 15745                           fsr0h	equ	0xFEA
 15746                           fsr0l	equ	0xFE9
 15747                           wreg	equ	0xFE8
 15748                           indf1	equ	0xFE7
 15749                           postdec1	equ	0xFE5
 15750                           plusw1	equ	0xFE3
 15751                           fsr1h	equ	0xFE2
 15752                           fsr1l	equ	0xFE1
 15753                           indf2	equ	0xFDF
 15754                           postinc2	equ	0xFDE
 15755                           postdec2	equ	0xFDD
 15756                           plusw2	equ	0xFDB
 15757                           fsr2h	equ	0xFDA
 15758                           fsr2l	equ	0xFD9
 15759                           status	equ	0xFD8
 15760                           
 15761 ;; *************** function _USBCheckMSDRequest *****************
 15762 ;; Defined at:
 15763 ;;		line 218 in file "usb_device_msd.c"
 15764 ;; Parameters:    Size  Location     Type
 15765 ;;		None
 15766 ;; Auto vars:     Size  Location     Type
 15767 ;;		None
 15768 ;; Return value:  Size  Location     Type
 15769 ;;                  1    wreg      void 
 15770 ;; Registers used:
 15771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15780 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15781 ;;Total ram usage:        4 bytes
 15782 ;; Hardware stack levels used:    1
 15783 ;; Hardware stack levels required when called:    1
 15784 ;; This function calls:
 15785 ;;		_USBTransferOnePacket
 15786 ;; This function is called by:
 15787 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15788 ;; This function uses a non-reentrant model
 15789 ;;
 15790                           
 15791                           	psect	text78
 15792  004D6C                     __ptext78:
 15793                           	opt stack 0
 15794  004D6C                     _USBCheckMSDRequest:
 15795                           	opt stack 27
 15796                           
 15797                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 15798                           
 15799                           ;incstack = 0
 15800  004D6C  010D               	movlb	13	; () banked
 15801  004D6E  5130               	movf	48,w,b	;volatile
 15802  004D70  0B1F               	andlw	31
 15803  004D72  06E8               	decf	wreg,f,c
 15804  004D74  A4D8               	btfss	status,2,c
 15805  004D76  0012               	return	
 15806                           
 15807                           ; BSR set to: 13
 15808                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 15809                           
 15810                           ; BSR set to: 13
 15811                           
 15812                           ; BSR set to: 13
 15813                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 15814  004D78  5134               	movf	52,w,b	;volatile
 15815  004D7A  A4D8               	btfss	status,2,c
 15816  004D7C  0012               	return	
 15817  004D7E  D04E               	goto	l529
 15818  004D80                     
 15819                           ; BSR set to: 13
 15820                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 15821                           
 15822                           ; BSR set to: 13
 15823  004D80  5132               	movf	50,w,b	;volatile
 15824  004D82  1133               	iorwf	51,w,b	;volatile
 15825  004D84  A4D8               	btfss	status,2,c
 15826  004D86  0012               	return	
 15827                           
 15828                           ; BSR set to: 13
 15829  004D88  5136               	movf	54,w,b	;volatile
 15830  004D8A  1137               	iorwf	55,w,b	;volatile
 15831  004D8C  A4D8               	btfss	status,2,c
 15832  004D8E  0012               	return	
 15833                           
 15834                           ; BSR set to: 13
 15835                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 15836                           
 15837                           ; BSR set to: 13
 15838                           
 15839                           ; BSR set to: 13
 15840                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 15841  004D90  0E00               	movlw	0
 15842  004D92  0100               	movlb	0	; () banked
 15843  004D94  6FA0               	movwf	_MSD_State& (0+255),b
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 15847  004D96  699F               	setf	_MSDCommandState& (0+255),b
 15848                           
 15849                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 15850  004D98  0E00               	movlw	0
 15851  004D9A  6F9E               	movwf	_MSDReadState& (0+255),b
 15852                           
 15853                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 15854  004D9C  0E00               	movlw	0
 15855  004D9E  6F9D               	movwf	_MSDWriteState& (0+255),b
 15856                           
 15857                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 15858  004DA0  0E01               	movlw	1
 15859  004DA2  6F99               	movwf	_MSDCBWValid& (0+255),b
 15860                           
 15861                           ; BSR set to: 0
 15862                           
 15863                           ; BSR set to: 0
 15864                           
 15865                           ; BSR set to: 0
 15866                           
 15867                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 15868  004DA4  C07D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 15869  004DA8  C07E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 15870                           
 15871                           ; BSR set to: 0
 15872  004DAC  500C               	movf	_USBCheckMSDRequest$2319,w,c
 15873  004DAE  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 15874  004DB0  B4D8               	btfsc	status,2,c
 15875  004DB2  D00A               	goto	u7300
 15876                           
 15877                           ; BSR set to: 0
 15878                           
 15879                           ; BSR set to: 0
 15880                           
 15881                           ; BSR set to: 0
 15882                           
 15883                           ; BSR set to: 0
 15884  004DB4  C07D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 15885  004DB8  C07E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 15886                           
 15887                           ; BSR set to: 0
 15888                           
 15889                           ; BSR set to: 0
 15890  004DBC  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 15891  004DC0  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 15892  004DC4  BEDF               	btfsc	indf2,7,c
 15893  004DC6  D00F               	goto	l534
 15894  004DC8                     u7300:
 15895                           
 15896                           ; BSR set to: 0
 15897                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 15898                           
 15899                           ; BSR set to: 0
 15900  004DC8  0E00               	movlw	0
 15901  004DCA  6E01               	movwf	USBTransferOnePacket@dir,c
 15902  004DCC  0E40               	movlw	64
 15903  004DCE  6E02               	movwf	USBTransferOnePacket@data,c
 15904  004DD0  0E0D               	movlw	13
 15905  004DD2  6E03               	movwf	USBTransferOnePacket@data+1,c
 15906  004DD4  0E40               	movlw	64
 15907  004DD6  6E04               	movwf	USBTransferOnePacket@len,c
 15908  004DD8  0E02               	movlw	2
 15909  004DDA  ECC4  F01E         	call	_USBTransferOnePacket
 15910  004DDE  C001  F08F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15911  004DE2  C002  F090         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15912  004DE6                     l534:
 15913                           
 15914                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 15915  004DE6  0E80               	movlw	128
 15916  004DE8  0100               	movlb	0	; () banked
 15917  004DEA  6F70               	movwf	(_inPipes+3)& (0+255),b
 15918                           
 15919                           ;usb_device_msd.c: 263: break;
 15920  004DEC  0012               	return	
 15921  004DEE                     
 15922                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 15923                           
 15924                           ; BSR set to: 0
 15925  004DEE  010D               	movlb	13	; () banked
 15926  004DF0  5132               	movf	50,w,b	;volatile
 15927  004DF2  1133               	iorwf	51,w,b	;volatile
 15928  004DF4  A4D8               	btfss	status,2,c
 15929  004DF6  0012               	return	
 15930                           
 15931                           ; BSR set to: 13
 15932  004DF8  0536               	decf	54,w,b	;volatile
 15933  004DFA  1137               	iorwf	55,w,b	;volatile
 15934  004DFC  A4D8               	btfss	status,2,c
 15935  004DFE  0012               	return	
 15936                           
 15937                           ; BSR set to: 13
 15938                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 15939                           
 15940                           ; BSR set to: 13
 15941                           
 15942                           ; BSR set to: 13
 15943                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 15944  004E00  0E00               	movlw	0
 15945  004E02  6F38               	movwf	56,b	;volatile
 15946                           
 15947                           ; BSR set to: 13
 15948                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15949  004E04  0E38               	movlw	56
 15950  004E06  0100               	movlb	0	; () banked
 15951  004E08  6F6D               	movwf	_inPipes& (0+255),b
 15952  004E0A  0E0D               	movlw	13
 15953  004E0C  6F6E               	movwf	(_inPipes+1)& (0+255),b
 15954                           
 15955                           ; BSR set to: 0
 15956  004E0E  0E00               	movlw	0
 15957  004E10  6F72               	movwf	(_inPipes+5)& (0+255),b
 15958  004E12  0E01               	movlw	1
 15959  004E14  6F71               	movwf	(_inPipes+4)& (0+255),b
 15960                           
 15961                           ; BSR set to: 0
 15962  004E16  0EC1               	movlw	193
 15963  004E18  6F70               	movwf	(_inPipes+3)& (0+255),b
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;usb_device_msd.c: 278: }
 15967                           
 15968                           ;usb_device_msd.c: 277: break;
 15969  004E1A  0012               	return	
 15970  004E1C                     l529:
 15971                           
 15972                           ; BSR set to: 0
 15973  004E1C  010D               	movlb	13	; () banked
 15974  004E1E  5131               	movf	49,w,b	;volatile
 15975                           
 15976                           ; Switch size 1, requested type "space"
 15977                           ; Number of cases is 2, Range of values is 254 to 255
 15978                           ; switch strategies available:
 15979                           ; Name         Instructions Cycles
 15980                           ; simple_byte            7     4 (average)
 15981                           ;	Chosen strategy is simple_byte
 15982  004E20  0AFE               	xorlw	254	; case 254
 15983  004E22  B4D8               	btfsc	status,2,c
 15984  004E24  D7E4               	goto	l546
 15985  004E26  0A01               	xorlw	1	; case 255
 15986  004E28  A4D8               	btfss	status,2,c
 15987  004E2A  0012               	return	
 15988  004E2C  D7A9               	goto	l530
 15989  004E2E                     __end_of_USBCheckMSDRequest:
 15990                           	opt stack 0
 15991                           tblptru	equ	0xFF8
 15992                           tblptrh	equ	0xFF7
 15993                           tblptrl	equ	0xFF6
 15994                           tablat	equ	0xFF5
 15995                           prodh	equ	0xFF4
 15996                           prodl	equ	0xFF3
 15997                           intcon	equ	0xFF2
 15998                           intcon2	equ	0xFF1
 15999                           intcon3	equ	0xFF0
 16000                           indf0	equ	0xFEF
 16001                           postinc0	equ	0xFEE
 16002                           fsr0h	equ	0xFEA
 16003                           fsr0l	equ	0xFE9
 16004                           wreg	equ	0xFE8
 16005                           indf1	equ	0xFE7
 16006                           postdec1	equ	0xFE5
 16007                           plusw1	equ	0xFE3
 16008                           fsr1h	equ	0xFE2
 16009                           fsr1l	equ	0xFE1
 16010                           indf2	equ	0xFDF
 16011                           postinc2	equ	0xFDE
 16012                           postdec2	equ	0xFDD
 16013                           plusw2	equ	0xFDB
 16014                           fsr2h	equ	0xFDA
 16015                           fsr2l	equ	0xFD9
 16016                           status	equ	0xFD8
 16017                           
 16018 ;; *************** function _USBCheckHIDRequest *****************
 16019 ;; Defined at:
 16020 ;;		line 153 in file "usb_device_hid.c"
 16021 ;; Parameters:    Size  Location     Type
 16022 ;;		None
 16023 ;; Auto vars:     Size  Location     Type
 16024 ;;		None
 16025 ;; Return value:  Size  Location     Type
 16026 ;;                  1    wreg      void 
 16027 ;; Registers used:
 16028 ;;		wreg, status,2, status,0
 16029 ;; Tracked objects:
 16030 ;;		On entry : 0/0
 16031 ;;		On exit  : 0/0
 16032 ;;		Unchanged: 0/0
 16033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16038 ;;Total ram usage:        0 bytes
 16039 ;; Hardware stack levels used:    1
 16040 ;; This function calls:
 16041 ;;		Nothing
 16042 ;; This function is called by:
 16043 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047                           	psect	text79
 16048  004266                     __ptext79:
 16049                           	opt stack 0
 16050  004266                     _USBCheckHIDRequest:
 16051                           	opt stack 28
 16052                           
 16053                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16054                           
 16055                           ;incstack = 0
 16056  004266  010D               	movlb	13	; () banked
 16057  004268  5130               	movf	48,w,b	;volatile
 16058  00426A  0B1F               	andlw	31
 16059  00426C  06E8               	decf	wreg,f,c
 16060  00426E  A4D8               	btfss	status,2,c
 16061  004270  0012               	return	
 16062                           
 16063                           ; BSR set to: 13
 16064                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16065                           
 16066                           ; BSR set to: 13
 16067                           
 16068                           ; BSR set to: 13
 16069  004272  5134               	movf	52,w,b	;volatile
 16070  004274  A4D8               	btfss	status,2,c
 16071  004276  0012               	return	
 16072                           
 16073                           ; BSR set to: 13
 16074                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16075                           
 16076                           ; BSR set to: 13
 16077                           
 16078                           ; BSR set to: 13
 16079  004278  0E06               	movlw	6
 16080  00427A  1931               	xorwf	49,w,b	;volatile
 16081  00427C  B4D8               	btfsc	status,2,c
 16082  00427E  D01A               	goto	l411
 16083  004280  D022               	goto	l414
 16084  004282                     
 16085                           ; BSR set to: 13
 16086                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16087                           
 16088                           ; BSR set to: 13
 16089  004282  0100               	movlb	0	; () banked
 16090  004284  05B5               	decf	_USBActiveConfiguration& (0+255),w,b
 16091  004286  A4D8               	btfss	status,2,c
 16092  004288  D01E               	goto	l414
 16093                           
 16094                           ; BSR set to: 0
 16095                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16096  00428A  0EB9               	movlw	low (_configDescriptor1+18)
 16097  00428C  6F6D               	movwf	_inPipes& (0+255),b
 16098  00428E  0E8E               	movlw	high (_configDescriptor1+18)
 16099  004290  6F6E               	movwf	(_inPipes+1)& (0+255),b
 16100                           
 16101                           ; BSR set to: 0
 16102  004292  0E00               	movlw	0
 16103  004294  6F72               	movwf	(_inPipes+5)& (0+255),b
 16104  004296  0E09               	movlw	9
 16105  004298  D00B               	goto	L14
 16106  00429A                     l10096:
 16107                           
 16108                           ; BSR set to: 0
 16109  00429A  0EC0               	movlw	192
 16110  00429C  6F70               	movwf	(_inPipes+3)& (0+255),b
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16114  00429E  D013               	goto	l414
 16115  0042A0                     
 16116                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16117                           
 16118                           ; BSR set to: 0
 16119  0042A0  0E6D               	movlw	low _hid_rpt01
 16120  0042A2  0100               	movlb	0	; () banked
 16121  0042A4  6F6D               	movwf	_inPipes& (0+255),b
 16122  0042A6  0E8F               	movlw	high _hid_rpt01
 16123  0042A8  6F6E               	movwf	(_inPipes+1)& (0+255),b
 16124                           
 16125                           ; BSR set to: 0
 16126  0042AA  0E00               	movlw	0
 16127  0042AC  6F72               	movwf	(_inPipes+5)& (0+255),b
 16128  0042AE  0E1D               	movlw	29
 16129  0042B0                     L14:
 16130  0042B0  6F71               	movwf	(_inPipes+4)& (0+255),b
 16131  0042B2  D7F3               	goto	l10096
 16132  0042B4                     l411:
 16133                           
 16134                           ; BSR set to: 0
 16135  0042B4  010D               	movlb	13	; () banked
 16136  0042B6  5133               	movf	51,w,b	;volatile
 16137                           
 16138                           ; Switch size 1, requested type "space"
 16139                           ; Number of cases is 3, Range of values is 33 to 35
 16140                           ; switch strategies available:
 16141                           ; Name         Instructions Cycles
 16142                           ; simple_byte           10     6 (average)
 16143                           ;	Chosen strategy is simple_byte
 16144  0042B8  0A21               	xorlw	33	; case 33
 16145  0042BA  B4D8               	btfsc	status,2,c
 16146  0042BC  D7E2               	goto	l412
 16147  0042BE  0A03               	xorlw	3	; case 34
 16148  0042C0  B4D8               	btfsc	status,2,c
 16149  0042C2  D7EE               	goto	l415
 16150  0042C4  0A01               	xorlw	1	; case 35
 16151  0042C6                     l414:
 16152                           
 16153                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16154                           
 16155                           ; BSR set to: 13
 16156                           
 16157                           ; BSR set to: 13
 16158  0042C6  010D               	movlb	13	; () banked
 16159  0042C8  3930               	swapf	48,w,b	;volatile
 16160  0042CA  32E8               	rrcf	wreg,f,c
 16161  0042CC  0B03               	andlw	3
 16162  0042CE  06E8               	decf	wreg,f,c
 16163  0042D0  A4D8               	btfss	status,2,c
 16164  0042D2  0012               	return	
 16165  0042D4  D024               	goto	l418
 16166  0042D6                     
 16167                           ; BSR set to: 13
 16168                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16169                           
 16170                           ; BSR set to: 13
 16171  0042D6  0EB3               	movlw	low _idle_rate
 16172  0042D8  0100               	movlb	0	; () banked
 16173  0042DA  6F6D               	movwf	_inPipes& (0+255),b
 16174  0042DC  0E00               	movlw	high _idle_rate
 16175  0042DE  6F6E               	movwf	(_inPipes+1)& (0+255),b
 16176                           
 16177                           ; BSR set to: 0
 16178  0042E0  0E00               	movlw	0
 16179  0042E2  6F72               	movwf	(_inPipes+5)& (0+255),b
 16180  0042E4  0E01               	movlw	1
 16181  0042E6  6F71               	movwf	(_inPipes+4)& (0+255),b
 16182                           
 16183                           ; BSR set to: 0
 16184  0042E8  0EC1               	movlw	193
 16185  0042EA  6F70               	movwf	(_inPipes+3)& (0+255),b
 16186                           
 16187                           ;usb_device_hid.c: 223: break;
 16188  0042EC  0012               	return	
 16189  0042EE                     
 16190                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16191                           
 16192                           ; BSR set to: 0
 16193  0042EE  0E80               	movlw	128
 16194  0042F0  0100               	movlb	0	; () banked
 16195  0042F2  6F70               	movwf	(_inPipes+3)& (0+255),b
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16199  0042F4  CD33 F0B3          	movff	3379,_idle_rate	;volatile
 16200                           
 16201                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16202  0042F8  0012               	return	
 16203  0042FA                     
 16204                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16205                           
 16206                           ; BSR set to: 0
 16207  0042FA  0EB2               	movlw	low _active_protocol
 16208  0042FC  0100               	movlb	0	; () banked
 16209  0042FE  6F6D               	movwf	_inPipes& (0+255),b
 16210  004300  0E00               	movlw	high _active_protocol
 16211  004302  6F6E               	movwf	(_inPipes+1)& (0+255),b
 16212                           
 16213                           ; BSR set to: 0
 16214  004304  0E00               	movlw	0
 16215  004306  6F72               	movwf	(_inPipes+5)& (0+255),b
 16216  004308  0E01               	movlw	1
 16217  00430A  6F71               	movwf	(_inPipes+4)& (0+255),b
 16218                           
 16219                           ; BSR set to: 0
 16220  00430C  0E81               	movlw	129
 16221  00430E  6F70               	movwf	(_inPipes+3)& (0+255),b
 16222                           
 16223                           ;usb_device_hid.c: 234: break;
 16224  004310  0012               	return	
 16225  004312                     
 16226                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16227                           
 16228                           ; BSR set to: 0
 16229  004312  0E80               	movlw	128
 16230  004314  0100               	movlb	0	; () banked
 16231  004316  6F70               	movwf	(_inPipes+3)& (0+255),b
 16232                           
 16233                           ; BSR set to: 0
 16234                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16235  004318  CD32 F0B2          	movff	3378,_active_protocol	;volatile
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;usb_device_hid.c: 239: }
 16239                           
 16240                           ;usb_device_hid.c: 238: break;
 16241  00431C  0012               	return	
 16242  00431E                     l418:
 16243                           
 16244                           ; BSR set to: 0
 16245  00431E  010D               	movlb	13	; () banked
 16246  004320  5131               	movf	49,w,b	;volatile
 16247                           
 16248                           ; Switch size 1, requested type "space"
 16249                           ; Number of cases is 6, Range of values is 1 to 11
 16250                           ; switch strategies available:
 16251                           ; Name         Instructions Cycles
 16252                           ; simple_byte           19    10 (average)
 16253                           ;	Chosen strategy is simple_byte
 16254  004322  0A01               	xorlw	1	; case 1
 16255  004324  B4D8               	btfsc	status,2,c
 16256  004326  0012               	return	
 16257  004328  0A03               	xorlw	3	; case 2
 16258  00432A  B4D8               	btfsc	status,2,c
 16259  00432C  D7D4               	goto	l422
 16260  00432E  0A01               	xorlw	1	; case 3
 16261  004330  B4D8               	btfsc	status,2,c
 16262  004332  D7E3               	goto	l424
 16263  004334  0A0A               	xorlw	10	; case 9
 16264  004336  B4D8               	btfsc	status,2,c
 16265  004338  0012               	return	
 16266  00433A  0A03               	xorlw	3	; case 10
 16267  00433C  B4D8               	btfsc	status,2,c
 16268  00433E  D7D7               	goto	l423
 16269  004340  0A01               	xorlw	1	; case 11
 16270  004342  A4D8               	btfss	status,2,c
 16271  004344  0012               	return	
 16272  004346  D7E5               	goto	l425
 16273  004348                     __end_of_USBCheckHIDRequest:
 16274                           	opt stack 0
 16275                           tblptru	equ	0xFF8
 16276                           tblptrh	equ	0xFF7
 16277                           tblptrl	equ	0xFF6
 16278                           tablat	equ	0xFF5
 16279                           prodh	equ	0xFF4
 16280                           prodl	equ	0xFF3
 16281                           intcon	equ	0xFF2
 16282                           intcon2	equ	0xFF1
 16283                           intcon3	equ	0xFF0
 16284                           indf0	equ	0xFEF
 16285                           postinc0	equ	0xFEE
 16286                           fsr0h	equ	0xFEA
 16287                           fsr0l	equ	0xFE9
 16288                           wreg	equ	0xFE8
 16289                           indf1	equ	0xFE7
 16290                           postdec1	equ	0xFE5
 16291                           plusw1	equ	0xFE3
 16292                           fsr1h	equ	0xFE2
 16293                           fsr1l	equ	0xFE1
 16294                           indf2	equ	0xFDF
 16295                           postinc2	equ	0xFDE
 16296                           postdec2	equ	0xFDD
 16297                           plusw2	equ	0xFDB
 16298                           fsr2h	equ	0xFDA
 16299                           fsr2l	equ	0xFD9
 16300                           status	equ	0xFD8
 16301                           
 16302 ;; *************** function _SYSTEM_Initialize *****************
 16303 ;; Defined at:
 16304 ;;		line 37 in file "system.c"
 16305 ;; Parameters:    Size  Location     Type
 16306 ;;  state           1    wreg     enum E6623
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;  state           1    4[COMRAM] enum E6623
 16309 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16310 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16311 ;; Return value:  Size  Location     Type
 16312 ;;                  1    wreg      void 
 16313 ;; Registers used:
 16314 ;;		wreg, status,2, status,0
 16315 ;; Tracked objects:
 16316 ;;		On entry : 0/0
 16317 ;;		On exit  : 0/0
 16318 ;;		Unchanged: 0/0
 16319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16321 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16324 ;;Total ram usage:        5 bytes
 16325 ;; Hardware stack levels used:    1
 16326 ;; This function calls:
 16327 ;;		Nothing
 16328 ;; This function is called by:
 16329 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16330 ;;		_main
 16331 ;; This function uses a non-reentrant model
 16332 ;;
 16333                           
 16334                           	psect	text80
 16335  00664E                     __ptext80:
 16336                           	opt stack 0
 16337  00664E                     _SYSTEM_Initialize:
 16338                           	opt stack 28
 16339                           
 16340                           ;incstack = 0
 16341                           ;SYSTEM_Initialize@state stored from wreg
 16342  00664E  6E05               	movwf	SYSTEM_Initialize@state,c
 16343                           
 16344                           ;system.c: 39: switch(state)
 16345  006650  D01D               	goto	l892
 16346  006652                     
 16347                           ;system.c: 48: {;system.c: 49: unsigned int pll_startup_counter = 600;
 16348  006652  0E02               	movlw	2
 16349  006654  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 16350  006656  0E58               	movlw	88
 16351  006658  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 16352                           
 16353                           ;system.c: 50: OSCTUNEbits.PLLEN = 1;
 16354  00665A  8C9B               	bsf	3995,6,c	;volatile
 16355  00665C                     l10282:
 16356  00665C  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 16357  00665E  A0D8               	btfss	status,0,c
 16358  006660  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 16359  006662  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 16360  006664  E1FB               	bnz	l10282
 16361  006666  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 16362  006668  B4D8               	btfsc	status,2,c
 16363  00666A  0012               	return	
 16364  00666C  D7F7               	goto	l895
 16365  00666E                     
 16366                           ;system.c: 76: OSCCON = 0x70;
 16367  00666E  0E70               	movlw	112
 16368  006670  6ED3               	movwf	4051,c	;volatile
 16369                           
 16370                           ;system.c: 82: {;system.c: 83: unsigned int pll_startup_counter = 800;
 16371  006672  0E03               	movlw	3
 16372  006674  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2866+1,c
 16373  006676  0E20               	movlw	32
 16374  006678  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2866,c
 16375  00667A                     l10286:
 16376  00667A  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2866,f,c
 16377  00667C  A0D8               	btfss	status,0,c
 16378  00667E  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2866+1,f,c
 16379  006680  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2866,w,c
 16380  006682  E1FB               	bnz	l10286
 16381  006684  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2866+1,w,c
 16382  006686  B4D8               	btfsc	status,2,c
 16383  006688  0012               	return	
 16384  00668A  D7F7               	goto	l901
 16385  00668C                     l892:
 16386  00668C  5005               	movf	SYSTEM_Initialize@state,w,c
 16387                           
 16388                           ; Switch size 1, requested type "space"
 16389                           ; Number of cases is 3, Range of values is 0 to 2
 16390                           ; switch strategies available:
 16391                           ; Name         Instructions Cycles
 16392                           ; simple_byte           10     6 (average)
 16393                           ;	Chosen strategy is simple_byte
 16394  00668E  0A00               	xorlw	0	; case 0
 16395  006690  B4D8               	btfsc	status,2,c
 16396  006692  D7DF               	goto	l893
 16397  006694  0A01               	xorlw	1	; case 1
 16398  006696  B4D8               	btfsc	status,2,c
 16399  006698  0012               	return	
 16400  00669A  0A03               	xorlw	3	; case 2
 16401  00669C  A4D8               	btfss	status,2,c
 16402  00669E  0012               	return	
 16403  0066A0  D7E6               	goto	l899
 16404  0066A2                     __end_of_SYSTEM_Initialize:
 16405                           	opt stack 0
 16406                           tblptru	equ	0xFF8
 16407                           tblptrh	equ	0xFF7
 16408                           tblptrl	equ	0xFF6
 16409                           tablat	equ	0xFF5
 16410                           prodh	equ	0xFF4
 16411                           prodl	equ	0xFF3
 16412                           intcon	equ	0xFF2
 16413                           intcon2	equ	0xFF1
 16414                           intcon3	equ	0xFF0
 16415                           indf0	equ	0xFEF
 16416                           postinc0	equ	0xFEE
 16417                           fsr0h	equ	0xFEA
 16418                           fsr0l	equ	0xFE9
 16419                           wreg	equ	0xFE8
 16420                           indf1	equ	0xFE7
 16421                           postdec1	equ	0xFE5
 16422                           plusw1	equ	0xFE3
 16423                           fsr1h	equ	0xFE2
 16424                           fsr1l	equ	0xFE1
 16425                           indf2	equ	0xFDF
 16426                           postinc2	equ	0xFDE
 16427                           postdec2	equ	0xFDD
 16428                           plusw2	equ	0xFDB
 16429                           fsr2h	equ	0xFDA
 16430                           fsr2l	equ	0xFD9
 16431                           status	equ	0xFD8
 16432                           
 16433 ;; *************** function _MSDTransferTerminated *****************
 16434 ;; Defined at:
 16435 ;;		line 1674 in file "usb_device_msd.c"
 16436 ;; Parameters:    Size  Location     Type
 16437 ;;  handle          2   11[COMRAM] PTR void 
 16438 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16439 ;;		 -> BDT(48), 
 16440 ;; Auto vars:     Size  Location     Type
 16441 ;;		None
 16442 ;; Return value:  Size  Location     Type
 16443 ;;                  1    wreg      void 
 16444 ;; Registers used:
 16445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16446 ;; Tracked objects:
 16447 ;;		On entry : 0/0
 16448 ;;		On exit  : 0/0
 16449 ;;		Unchanged: 0/0
 16450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16454 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16455 ;;Total ram usage:        4 bytes
 16456 ;; Hardware stack levels used:    1
 16457 ;; Hardware stack levels required when called:    1
 16458 ;; This function calls:
 16459 ;;		_USBStallEndpoint
 16460 ;;		_USBTransferOnePacket
 16461 ;; This function is called by:
 16462 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           	psect	text81
 16467  0064A0                     __ptext81:
 16468                           	opt stack 0
 16469  0064A0                     _MSDTransferTerminated:
 16470                           	opt stack 27
 16471                           
 16472                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 16473                           
 16474                           ;incstack = 0
 16475  0064A0  0100               	movlb	0	; () banked
 16476  0064A2  5199               	movf	_MSDCBWValid& (0+255),w,b
 16477  0064A4  A4D8               	btfss	status,2,c
 16478  0064A6  D00B               	goto	l764
 16479                           
 16480                           ; BSR set to: 0
 16481                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 16482  0064A8  0E01               	movlw	1
 16483  0064AA  6E01               	movwf	USBStallEndpoint@dir,c
 16484  0064AC  0E02               	movlw	2
 16485  0064AE  EC3A  F01D         	call	_USBStallEndpoint
 16486                           
 16487                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 16488  0064B2  0E00               	movlw	0
 16489  0064B4  6E01               	movwf	USBStallEndpoint@dir,c
 16490  0064B6  0E02               	movlw	2
 16491  0064B8  EC3A  F01D         	call	_USBStallEndpoint
 16492                           
 16493                           ;usb_device_msd.c: 1681: }
 16494  0064BC  0012               	return	
 16495  0064BE                     l764:
 16496  0064BE  C07D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 16497  0064C2  C07E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 16498  0064C6  500E               	movf	_MSDTransferTerminated$2407,w,c
 16499  0064C8  180C               	xorwf	MSDTransferTerminated@handle,w,c
 16500  0064CA  E114               	bnz	l767
 16501  0064CC  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 16502  0064CE  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 16503  0064D0  A4D8               	btfss	status,2,c
 16504  0064D2  0012               	return	
 16505                           
 16506                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 16507  0064D4  0E00               	movlw	0
 16508  0064D6  6E01               	movwf	USBTransferOnePacket@dir,c
 16509  0064D8  0E40               	movlw	64
 16510  0064DA  6E02               	movwf	USBTransferOnePacket@data,c
 16511  0064DC  0E0D               	movlw	13
 16512  0064DE  6E03               	movwf	USBTransferOnePacket@data+1,c
 16513  0064E0  0E40               	movlw	64
 16514  0064E2  6E04               	movwf	USBTransferOnePacket@len,c
 16515  0064E4  0E02               	movlw	2
 16516  0064E6  ECC4  F01E         	call	_USBTransferOnePacket
 16517  0064EA  C001  F08F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16518  0064EE  C002  F090         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16519  0064F2  0012               	return	
 16520  0064F4                     l767:
 16521  0064F4  0012               	return		;funcret
 16522  0064F6                     __end_of_MSDTransferTerminated:
 16523                           	opt stack 0
 16524                           tblptru	equ	0xFF8
 16525                           tblptrh	equ	0xFF7
 16526                           tblptrl	equ	0xFF6
 16527                           tablat	equ	0xFF5
 16528                           prodh	equ	0xFF4
 16529                           prodl	equ	0xFF3
 16530                           intcon	equ	0xFF2
 16531                           intcon2	equ	0xFF1
 16532                           intcon3	equ	0xFF0
 16533                           indf0	equ	0xFEF
 16534                           postinc0	equ	0xFEE
 16535                           fsr0h	equ	0xFEA
 16536                           fsr0l	equ	0xFE9
 16537                           wreg	equ	0xFE8
 16538                           indf1	equ	0xFE7
 16539                           postdec1	equ	0xFE5
 16540                           plusw1	equ	0xFE3
 16541                           fsr1h	equ	0xFE2
 16542                           fsr1l	equ	0xFE1
 16543                           indf2	equ	0xFDF
 16544                           postinc2	equ	0xFDE
 16545                           postdec2	equ	0xFDD
 16546                           plusw2	equ	0xFDB
 16547                           fsr2h	equ	0xFDA
 16548                           fsr2l	equ	0xFD9
 16549                           status	equ	0xFD8
 16550                           
 16551 ;; *************** function _APP_DeviceMSDInitialize *****************
 16552 ;; Defined at:
 16553 ;;		line 84 in file "app_device_msd.c"
 16554 ;; Parameters:    Size  Location     Type
 16555 ;;		None
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;		None
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  1    wreg      void 
 16560 ;; Registers used:
 16561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/0
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16571 ;;Total ram usage:        0 bytes
 16572 ;; Hardware stack levels used:    1
 16573 ;; Hardware stack levels required when called:    2
 16574 ;; This function calls:
 16575 ;;		_USBEnableEndpoint
 16576 ;;		_USBMSDInit
 16577 ;; This function is called by:
 16578 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           	psect	text82
 16583  00715A                     __ptext82:
 16584                           	opt stack 0
 16585  00715A                     _APP_DeviceMSDInitialize:
 16586                           	opt stack 26
 16587                           
 16588                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 16589                           
 16590                           ;incstack = 0
 16591  00715A  0E1E               	movlw	30
 16592  00715C  6E09               	movwf	USBEnableEndpoint@options,c
 16593  00715E  0E02               	movlw	2
 16594  007160  EC3F  F035         	call	_USBEnableEndpoint
 16595                           
 16596                           ;app_device_msd.c: 93: USBMSDInit();
 16597  007164  ECBE  F01D         	call	_USBMSDInit	;wreg free
 16598  007168  0012               	return		;funcret
 16599  00716A                     __end_of_APP_DeviceMSDInitialize:
 16600                           	opt stack 0
 16601                           tblptru	equ	0xFF8
 16602                           tblptrh	equ	0xFF7
 16603                           tblptrl	equ	0xFF6
 16604                           tablat	equ	0xFF5
 16605                           prodh	equ	0xFF4
 16606                           prodl	equ	0xFF3
 16607                           intcon	equ	0xFF2
 16608                           intcon2	equ	0xFF1
 16609                           intcon3	equ	0xFF0
 16610                           indf0	equ	0xFEF
 16611                           postinc0	equ	0xFEE
 16612                           fsr0h	equ	0xFEA
 16613                           fsr0l	equ	0xFE9
 16614                           wreg	equ	0xFE8
 16615                           indf1	equ	0xFE7
 16616                           postdec1	equ	0xFE5
 16617                           plusw1	equ	0xFE3
 16618                           fsr1h	equ	0xFE2
 16619                           fsr1l	equ	0xFE1
 16620                           indf2	equ	0xFDF
 16621                           postinc2	equ	0xFDE
 16622                           postdec2	equ	0xFDD
 16623                           plusw2	equ	0xFDB
 16624                           fsr2h	equ	0xFDA
 16625                           fsr2l	equ	0xFD9
 16626                           status	equ	0xFD8
 16627                           
 16628 ;; *************** function _USBMSDInit *****************
 16629 ;; Defined at:
 16630 ;;		line 142 in file "usb_device_msd.c"
 16631 ;; Parameters:    Size  Location     Type
 16632 ;;		None
 16633 ;; Auto vars:     Size  Location     Type
 16634 ;;		None
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  1    wreg      void 
 16637 ;; Registers used:
 16638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16646 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16648 ;;Total ram usage:        3 bytes
 16649 ;; Hardware stack levels used:    1
 16650 ;; Hardware stack levels required when called:    1
 16651 ;; This function calls:
 16652 ;;		_ExternalFlash_MediaDetect
 16653 ;;		_ExternalFlash_MediaInitialize
 16654 ;;		_ResetSenseData
 16655 ;;		_USBTransferOnePacket
 16656 ;; This function is called by:
 16657 ;;		_APP_DeviceMSDInitialize
 16658 ;; This function uses a non-reentrant model
 16659 ;;
 16660                           
 16661                           	psect	text83
 16662  003B7C                     __ptext83:
 16663                           	opt stack 0
 16664  003B7C                     _USBMSDInit:
 16665                           	opt stack 26
 16666                           
 16667                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 16668                           
 16669                           ;incstack = 0
 16670  003B7C  0E00               	movlw	0
 16671  003B7E  6E01               	movwf	USBTransferOnePacket@dir,c
 16672  003B80  0E40               	movlw	64
 16673  003B82  6E02               	movwf	USBTransferOnePacket@data,c
 16674  003B84  0E0D               	movlw	13
 16675  003B86  6E03               	movwf	USBTransferOnePacket@data+1,c
 16676  003B88  0E40               	movlw	64
 16677  003B8A  6E04               	movwf	USBTransferOnePacket@len,c
 16678  003B8C  0E02               	movlw	2
 16679  003B8E  ECC4  F01E         	call	_USBTransferOnePacket
 16680  003B92  C001  F08F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16681  003B96  C002  F090         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16682  003B9A  C077  F08D         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 16683  003B9E  C078  F08E         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 16684                           
 16685                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16686  003BA2  0E00               	movlw	0
 16687  003BA4  0100               	movlb	0	; () banked
 16688  003BA6  6FA0               	movwf	_MSD_State& (0+255),b
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16692  003BA8  699F               	setf	_MSDCommandState& (0+255),b
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16696  003BAA  0E00               	movlw	0
 16697  003BAC  6F9E               	movwf	_MSDReadState& (0+255),b
 16698                           
 16699                           ; BSR set to: 0
 16700                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16701  003BAE  0E00               	movlw	0
 16702  003BB0  6F9D               	movwf	_MSDWriteState& (0+255),b
 16703                           
 16704                           ; BSR set to: 0
 16705                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16706  003BB2  0E00               	movlw	0
 16707  003BB4  6F9A               	movwf	_MSDHostNoData& (0+255),b
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16711  003BB6  0E00               	movlw	0
 16712  003BB8  0101               	movlb	1	; () banked
 16713  003BBA  6F49               	movwf	_gblNumBLKS& (0+255),b
 16714  003BBC  0E00               	movlw	0
 16715  003BBE  6F4A               	movwf	(_gblNumBLKS+1)& (0+255),b
 16716  003BC0  0E00               	movlw	0
 16717  003BC2  6F4B               	movwf	(_gblNumBLKS+2)& (0+255),b
 16718  003BC4  0E00               	movlw	0
 16719  003BC6  6F4C               	movwf	(_gblNumBLKS+3)& (0+255),b
 16720                           
 16721                           ; BSR set to: 1
 16722                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16723  003BC8  0E00               	movlw	0
 16724  003BCA  6F45               	movwf	_gblBLKLen& (0+255),b
 16725  003BCC  0E00               	movlw	0
 16726  003BCE  6F46               	movwf	(_gblBLKLen+1)& (0+255),b
 16727  003BD0  0E00               	movlw	0
 16728  003BD2  6F47               	movwf	(_gblBLKLen+2)& (0+255),b
 16729  003BD4  0E00               	movlw	0
 16730  003BD6  6F48               	movwf	(_gblBLKLen+3)& (0+255),b
 16731                           
 16732                           ; BSR set to: 1
 16733                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 16734  003BD8  0E01               	movlw	1
 16735  003BDA  0100               	movlb	0	; () banked
 16736  003BDC  6F99               	movwf	_MSDCBWValid& (0+255),b
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 16740  003BDE  0E00               	movlw	0
 16741  003BE0  0101               	movlb	1	; () banked
 16742  003BE2  6F6E               	movwf	(_gblMediaPresent+1)& (0+255),b
 16743  003BE4  0E00               	movlw	0
 16744  003BE6  6F6D               	movwf	_gblMediaPresent& (0+255),b
 16745                           
 16746                           ; BSR set to: 1
 16747                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 16748  003BE8  0E00               	movlw	0
 16749  003BEA  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 16750  003BEC  D046               	goto	l518
 16751  003BEE                     
 16752                           ; BSR set to: 1
 16753                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 16754                           
 16755                           ; BSR set to: 1
 16756  003BEE  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16757  003BF0  0D01               	mullw	1
 16758  003BF2  0E9B               	movlw	low _SoftDetach
 16759  003BF4  24F3               	addwf	prodl,w,c
 16760  003BF6  6ED9               	movwf	fsr2l,c
 16761  003BF8  0E00               	movlw	high _SoftDetach
 16762  003BFA  20F4               	addwfc	prodh,w,c
 16763  003BFC  6EDA               	movwf	fsr2h,c
 16764  003BFE  0E00               	movlw	0
 16765  003C00  6EDF               	movwf	indf2,c
 16766                           
 16767                           ; BSR set to: 1
 16768                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 16769  003C02  C1F4  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 16770  003C06  C1F5  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 16771  003C0A  D801               	call	u6998
 16772  003C0C  D009               	goto	u6999
 16773  003C0E                     u6998:
 16774  003C0E  0005               	push	
 16775  003C10  6EFA               	movwf	pclath,c
 16776  003C12  51EC               	movf	(_LUN+6)& (0+255),w,b
 16777  003C14  6EFD               	movwf	tosl,c
 16778  003C16  51ED               	movf	(_LUN+7)& (0+255),w,b
 16779  003C18  6EFE               	movwf	tosh,c
 16780  003C1A  6AFF               	clrf	tosu,c
 16781  003C1C  50FA               	movf	pclath,w,c
 16782  003C1E  0012               	return		;indir
 16783  003C20                     u6999:
 16784  003C20  0900               	iorlw	0
 16785  003C22  B4D8               	btfsc	status,2,c
 16786  003C24  D026               	goto	l521
 16787                           
 16788                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 16789  003C26  C1F4  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 16790  003C2A  C1F5  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 16791  003C2E  D801               	call	u7018
 16792  003C30  D00A               	goto	u7019
 16793  003C32                     u7018:
 16794  003C32  0005               	push	
 16795  003C34  6EFA               	movwf	pclath,c
 16796  003C36  0101               	movlb	1	; () banked
 16797  003C38  51E6               	movf	_LUN& (0+255),w,b
 16798  003C3A  6EFD               	movwf	tosl,c
 16799  003C3C  51E7               	movf	(_LUN+1)& (0+255),w,b
 16800  003C3E  6EFE               	movwf	tosh,c
 16801  003C40  6AFF               	clrf	tosu,c
 16802  003C42  50FA               	movf	pclath,w,c
 16803  003C44  0012               	return		;indir
 16804  003C46                     u7019:
 16805  003C46  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 16806  003C48  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 16807  003C4A  B4D8               	btfsc	status,2,c
 16808  003C4C  D012               	goto	l521
 16809                           
 16810                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 16811  003C4E  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 16812  003C52  0E01               	movlw	1
 16813  003C54  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 16814  003C56  0E00               	movlw	0
 16815  003C58  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 16816  003C5A  2A0C               	incf	??_USBMSDInit,f,c
 16817  003C5C  D003               	goto	u7034
 16818  003C5E                     u7035:
 16819  003C5E  90D8               	bcf	status,0,c
 16820  003C60  360D               	rlcf	??_USBMSDInit+1,f,c
 16821  003C62  360E               	rlcf	??_USBMSDInit+2,f,c
 16822  003C64                     u7034:
 16823  003C64  2E0C               	decfsz	??_USBMSDInit,f,c
 16824  003C66  D7FB               	goto	u7035
 16825  003C68  500D               	movf	??_USBMSDInit+1,w,c
 16826  003C6A  0101               	movlb	1	; () banked
 16827  003C6C  136D               	iorwf	_gblMediaPresent& (0+255),f,b
 16828  003C6E  500E               	movf	??_USBMSDInit+2,w,c
 16829  003C70  136E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 16830  003C72                     l521:
 16831                           
 16832                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 16833                           
 16834                           ; BSR set to: 1
 16835                           
 16836                           ; BSR set to: 1
 16837  003C72  ECE4  F030         	call	_ResetSenseData	;wreg free
 16838  003C76  0101               	movlb	1	; () banked
 16839  003C78  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 16840  003C7A                     l518:
 16841                           
 16842                           ; BSR set to: 1
 16843                           
 16844                           ; BSR set to: 1
 16845  003C7A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 16846  003C7C  A4D8               	btfss	status,2,c
 16847  003C7E  0012               	return	
 16848  003C80  D7B6               	goto	l519
 16849  003C82                     __end_of_USBMSDInit:
 16850                           	opt stack 0
 16851                           tosu	equ	0xFFF
 16852                           tosh	equ	0xFFE
 16853                           tosl	equ	0xFFD
 16854                           pclath	equ	0xFFA
 16855                           tblptru	equ	0xFF8
 16856                           tblptrh	equ	0xFF7
 16857                           tblptrl	equ	0xFF6
 16858                           tablat	equ	0xFF5
 16859                           prodh	equ	0xFF4
 16860                           prodl	equ	0xFF3
 16861                           intcon	equ	0xFF2
 16862                           intcon2	equ	0xFF1
 16863                           intcon3	equ	0xFF0
 16864                           indf0	equ	0xFEF
 16865                           postinc0	equ	0xFEE
 16866                           fsr0h	equ	0xFEA
 16867                           fsr0l	equ	0xFE9
 16868                           wreg	equ	0xFE8
 16869                           indf1	equ	0xFE7
 16870                           postdec1	equ	0xFE5
 16871                           plusw1	equ	0xFE3
 16872                           fsr1h	equ	0xFE2
 16873                           fsr1l	equ	0xFE1
 16874                           indf2	equ	0xFDF
 16875                           postinc2	equ	0xFDE
 16876                           postdec2	equ	0xFDD
 16877                           plusw2	equ	0xFDB
 16878                           fsr2h	equ	0xFDA
 16879                           fsr2l	equ	0xFD9
 16880                           status	equ	0xFD8
 16881                           
 16882 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 16883 ;; Defined at:
 16884 ;;		line 46 in file "app_device_custom_hid.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;		None
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      void 
 16891 ;; Registers used:
 16892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16893 ;; Tracked objects:
 16894 ;;		On entry : 0/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16902 ;;Total ram usage:        0 bytes
 16903 ;; Hardware stack levels used:    1
 16904 ;; Hardware stack levels required when called:    2
 16905 ;; This function calls:
 16906 ;;		_USBEnableEndpoint
 16907 ;;		_USBTransferOnePacket
 16908 ;; This function is called by:
 16909 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16910 ;; This function uses a non-reentrant model
 16911 ;;
 16912                           
 16913                           	psect	text84
 16914  006C08                     __ptext84:
 16915                           	opt stack 0
 16916  006C08                     _APP_DeviceCustomHIDInitialize:
 16917                           	opt stack 26
 16918                           
 16919                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 16920                           
 16921                           ; BSR set to: 1
 16922                           ;incstack = 0
 16923  006C08  0E00               	movlw	0
 16924  006C0A  0101               	movlb	1	; () banked
 16925  006C0C  6F69               	movwf	_USBInHandle& (0+255),b
 16926  006C0E  0E00               	movlw	0
 16927  006C10  6F6A               	movwf	(_USBInHandle+1)& (0+255),b
 16928                           
 16929                           ; BSR set to: 1
 16930                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 16931  006C12  0E1E               	movlw	30
 16932  006C14  6E09               	movwf	USBEnableEndpoint@options,c
 16933  006C16  0E01               	movlw	1
 16934  006C18  EC3F  F035         	call	_USBEnableEndpoint
 16935                           
 16936                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 16937  006C1C  0E00               	movlw	0
 16938  006C1E  6E01               	movwf	USBTransferOnePacket@dir,c
 16939  006C20  0E40               	movlw	low _ReceivedDataBuffer
 16940  006C22  6E02               	movwf	USBTransferOnePacket@data,c
 16941  006C24  0E02               	movlw	high _ReceivedDataBuffer
 16942  006C26  6E03               	movwf	USBTransferOnePacket@data+1,c
 16943  006C28  0E40               	movlw	64
 16944  006C2A  6E04               	movwf	USBTransferOnePacket@len,c
 16945  006C2C  0E01               	movlw	1
 16946  006C2E  ECC4  F01E         	call	_USBTransferOnePacket
 16947  006C32  C001  F16B         	movff	?_USBTransferOnePacket,_USBOutHandle
 16948  006C36  C002  F16C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 16949  006C3A  0012               	return		;funcret
 16950  006C3C                     __end_of_APP_DeviceCustomHIDInitialize:
 16951                           	opt stack 0
 16952                           tosu	equ	0xFFF
 16953                           tosh	equ	0xFFE
 16954                           tosl	equ	0xFFD
 16955                           pclath	equ	0xFFA
 16956                           tblptru	equ	0xFF8
 16957                           tblptrh	equ	0xFF7
 16958                           tblptrl	equ	0xFF6
 16959                           tablat	equ	0xFF5
 16960                           prodh	equ	0xFF4
 16961                           prodl	equ	0xFF3
 16962                           intcon	equ	0xFF2
 16963                           intcon2	equ	0xFF1
 16964                           intcon3	equ	0xFF0
 16965                           indf0	equ	0xFEF
 16966                           postinc0	equ	0xFEE
 16967                           fsr0h	equ	0xFEA
 16968                           fsr0l	equ	0xFE9
 16969                           wreg	equ	0xFE8
 16970                           indf1	equ	0xFE7
 16971                           postdec1	equ	0xFE5
 16972                           plusw1	equ	0xFE3
 16973                           fsr1h	equ	0xFE2
 16974                           fsr1l	equ	0xFE1
 16975                           indf2	equ	0xFDF
 16976                           postinc2	equ	0xFDE
 16977                           postdec2	equ	0xFDD
 16978                           plusw2	equ	0xFDB
 16979                           fsr2h	equ	0xFDA
 16980                           fsr2l	equ	0xFD9
 16981                           status	equ	0xFD8
 16982                           
 16983 ;; *************** function _USBEnableEndpoint *****************
 16984 ;; Defined at:
 16985 ;;		line 878 in file "usb_device.c"
 16986 ;; Parameters:    Size  Location     Type
 16987 ;;  ep              1    wreg     unsigned char 
 16988 ;;  options         1    8[COMRAM] unsigned char 
 16989 ;; Auto vars:     Size  Location     Type
 16990 ;;  ep              1   11[COMRAM] unsigned char 
 16991 ;;  p               2    9[COMRAM] PTR unsigned char 
 16992 ;;		 -> UEP0(1), 
 16993 ;; Return value:  Size  Location     Type
 16994 ;;                  1    wreg      void 
 16995 ;; Registers used:
 16996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16997 ;; Tracked objects:
 16998 ;;		On entry : 0/0
 16999 ;;		On exit  : 0/0
 17000 ;;		Unchanged: 0/0
 17001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17003 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17005 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17006 ;;Total ram usage:        4 bytes
 17007 ;; Hardware stack levels used:    1
 17008 ;; Hardware stack levels required when called:    1
 17009 ;; This function calls:
 17010 ;;		_USBConfigureEndpoint
 17011 ;; This function is called by:
 17012 ;;		_APP_DeviceCustomHIDInitialize
 17013 ;;		_APP_DeviceMSDInitialize
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           	psect	text85
 17018  006A7E                     __ptext85:
 17019                           	opt stack 0
 17020  006A7E                     _USBEnableEndpoint:
 17021                           	opt stack 26
 17022                           
 17023                           ;incstack = 0
 17024                           ;USBEnableEndpoint@ep stored from wreg
 17025  006A7E  6E0C               	movwf	USBEnableEndpoint@ep,c
 17026                           
 17027                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17028  006A80  A409               	btfss	USBEnableEndpoint@options,2,c
 17029  006A82  D005               	goto	l178
 17030                           
 17031                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17032  006A84  0E00               	movlw	0
 17033  006A86  6E01               	movwf	USBConfigureEndpoint@direction,c
 17034  006A88  500C               	movf	USBEnableEndpoint@ep,w,c
 17035  006A8A  ECA8  F02B         	call	_USBConfigureEndpoint
 17036  006A8E                     l178:
 17037                           
 17038                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17039  006A8E  A209               	btfss	USBEnableEndpoint@options,1,c
 17040  006A90  D005               	goto	l179
 17041                           
 17042                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17043  006A92  0E01               	movlw	1
 17044  006A94  6E01               	movwf	USBConfigureEndpoint@direction,c
 17045  006A96  500C               	movf	USBEnableEndpoint@ep,w,c
 17046  006A98  ECA8  F02B         	call	_USBConfigureEndpoint
 17047  006A9C                     l179:
 17048                           
 17049                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17050  006A9C  500C               	movf	USBEnableEndpoint@ep,w,c
 17051  006A9E  0D01               	mullw	1
 17052  006AA0  0E26               	movlw	38
 17053  006AA2  24F3               	addwf	prodl,w,c
 17054  006AA4  6E0A               	movwf	USBEnableEndpoint@p,c
 17055  006AA6  0E0F               	movlw	15
 17056  006AA8  20F4               	addwfc	prodh,w,c
 17057  006AAA  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17058                           
 17059                           ;usb_device.c: 901: *p = options;
 17060  006AAC  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17061  006AB0  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17062  006AB4  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17063  006AB8  0012               	return		;funcret
 17064  006ABA                     __end_of_USBEnableEndpoint:
 17065                           	opt stack 0
 17066                           tosu	equ	0xFFF
 17067                           tosh	equ	0xFFE
 17068                           tosl	equ	0xFFD
 17069                           pclath	equ	0xFFA
 17070                           tblptru	equ	0xFF8
 17071                           tblptrh	equ	0xFF7
 17072                           tblptrl	equ	0xFF6
 17073                           tablat	equ	0xFF5
 17074                           prodh	equ	0xFF4
 17075                           prodl	equ	0xFF3
 17076                           intcon	equ	0xFF2
 17077                           intcon2	equ	0xFF1
 17078                           intcon3	equ	0xFF0
 17079                           indf0	equ	0xFEF
 17080                           postinc0	equ	0xFEE
 17081                           fsr0h	equ	0xFEA
 17082                           fsr0l	equ	0xFE9
 17083                           wreg	equ	0xFE8
 17084                           indf1	equ	0xFE7
 17085                           postdec1	equ	0xFE5
 17086                           plusw1	equ	0xFE3
 17087                           fsr1h	equ	0xFE2
 17088                           fsr1l	equ	0xFE1
 17089                           indf2	equ	0xFDF
 17090                           postinc2	equ	0xFDE
 17091                           postdec2	equ	0xFDD
 17092                           plusw2	equ	0xFDB
 17093                           fsr2h	equ	0xFDA
 17094                           fsr2l	equ	0xFD9
 17095                           status	equ	0xFD8
 17096                           
 17097 ;; *************** function _USBConfigureEndpoint *****************
 17098 ;; Defined at:
 17099 ;;		line 1545 in file "usb_device.c"
 17100 ;; Parameters:    Size  Location     Type
 17101 ;;  EPNum           1    wreg     unsigned char 
 17102 ;;  direction       1    0[COMRAM] unsigned char 
 17103 ;; Auto vars:     Size  Location     Type
 17104 ;;  EPNum           1    5[COMRAM] unsigned char 
 17105 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17106 ;;		 -> BDT(48), 
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  1    wreg      void 
 17109 ;; Registers used:
 17110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17117 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17119 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17120 ;;Total ram usage:        8 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; This function calls:
 17123 ;;		Nothing
 17124 ;; This function is called by:
 17125 ;;		_USBEnableEndpoint
 17126 ;; This function uses a non-reentrant model
 17127 ;;
 17128                           
 17129                           	psect	text86
 17130  005750                     __ptext86:
 17131                           	opt stack 0
 17132  005750                     _USBConfigureEndpoint:
 17133                           	opt stack 26
 17134                           
 17135                           ;incstack = 0
 17136                           ;USBConfigureEndpoint@EPNum stored from wreg
 17137  005750  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17138                           
 17139                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17140  005752  0E00               	movlw	0
 17141  005754  6E07               	movwf	USBConfigureEndpoint@handle,c
 17142  005756  0E0D               	movlw	13
 17143  005758  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17144                           
 17145                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17146  00575A  5001               	movf	USBConfigureEndpoint@direction,w,c
 17147  00575C  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17148  00575E  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17149  005760  90D8               	bcf	status,0,c
 17150  005762  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17151  005764  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17152  005766  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17153  005768  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17154  00576A  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17155  00576C  90D8               	bcf	status,0,c
 17156  00576E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17157  005770  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17158  005772  90D8               	bcf	status,0,c
 17159  005774  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17160  005776  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17161  005778  5002               	movf	??_USBConfigureEndpoint,w,c
 17162  00577A  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17163  00577C  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17164  00577E  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17165  005780  90D8               	bcf	status,0,c
 17166  005782  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17167  005784  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17168  005786  90D8               	bcf	status,0,c
 17169  005788  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17170  00578A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17171  00578C  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17172  00578E  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17173  005790  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17174  005792  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17175                           
 17176                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17177  005794  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17178  005798  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17179  00579C  9EDF               	bcf	indf2,7,c
 17180                           
 17181                           ;usb_device.c: 1559: if(direction == 0)
 17182  00579E  5001               	movf	USBConfigureEndpoint@direction,w,c
 17183  0057A0  A4D8               	btfss	status,2,c
 17184  0057A2  D007               	goto	l214
 17185                           
 17186                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17187  0057A4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17188  0057A6  0D02               	mullw	2
 17189  0057A8  0E79               	movlw	low _pBDTEntryOut
 17190  0057AA  24F3               	addwf	prodl,w,c
 17191  0057AC  6ED9               	movwf	fsr2l,c
 17192  0057AE  0E00               	movlw	high _pBDTEntryOut
 17193  0057B0  D006               	goto	L15
 17194  0057B2                     l214:
 17195                           
 17196                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17197  0057B2  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17198  0057B4  0D02               	mullw	2
 17199  0057B6  0E73               	movlw	low _pBDTEntryIn
 17200  0057B8  24F3               	addwf	prodl,w,c
 17201  0057BA  6ED9               	movwf	fsr2l,c
 17202  0057BC  0E00               	movlw	high _pBDTEntryIn
 17203  0057BE                     L15:
 17204  0057BE  20F4               	addwfc	prodh,w,c
 17205  0057C0  6EDA               	movwf	fsr2h,c
 17206  0057C2  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17207  0057C6  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17208                           
 17209                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17210  0057CA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17211  0057CE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17212  0057D2  9CDF               	bcf	indf2,6,c
 17213                           
 17214                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17215  0057D4  EE20 F004          	lfsr	2,4
 17216  0057D8  5007               	movf	USBConfigureEndpoint@handle,w,c
 17217  0057DA  26D9               	addwf	fsr2l,f,c
 17218  0057DC  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17219  0057DE  22DA               	addwfc	fsr2h,f,c
 17220  0057E0  8CDF               	bsf	indf2,6,c
 17221  0057E2  0012               	return		;funcret
 17222  0057E4                     __end_of_USBConfigureEndpoint:
 17223                           	opt stack 0
 17224                           tosu	equ	0xFFF
 17225                           tosh	equ	0xFFE
 17226                           tosl	equ	0xFFD
 17227                           pclath	equ	0xFFA
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           intcon	equ	0xFF2
 17235                           intcon2	equ	0xFF1
 17236                           intcon3	equ	0xFF0
 17237                           indf0	equ	0xFEF
 17238                           postinc0	equ	0xFEE
 17239                           fsr0h	equ	0xFEA
 17240                           fsr0l	equ	0xFE9
 17241                           wreg	equ	0xFE8
 17242                           indf1	equ	0xFE7
 17243                           postdec1	equ	0xFE5
 17244                           plusw1	equ	0xFE3
 17245                           fsr1h	equ	0xFE2
 17246                           fsr1l	equ	0xFE1
 17247                           indf2	equ	0xFDF
 17248                           postinc2	equ	0xFDE
 17249                           postdec2	equ	0xFDD
 17250                           plusw2	equ	0xFDB
 17251                           fsr2h	equ	0xFDA
 17252                           fsr2l	equ	0xFD9
 17253                           status	equ	0xFD8
 17254                           
 17255 ;; *************** function _USBCtrlTrfOutHandler *****************
 17256 ;; Defined at:
 17257 ;;		line 2540 in file "usb_device.c"
 17258 ;; Parameters:    Size  Location     Type
 17259 ;;		None
 17260 ;; Auto vars:     Size  Location     Type
 17261 ;;		None
 17262 ;; Return value:  Size  Location     Type
 17263 ;;                  1    wreg      void 
 17264 ;; Registers used:
 17265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17266 ;; Tracked objects:
 17267 ;;		On entry : 0/0
 17268 ;;		On exit  : 0/0
 17269 ;;		Unchanged: 0/0
 17270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17275 ;;Total ram usage:        0 bytes
 17276 ;; Hardware stack levels used:    1
 17277 ;; Hardware stack levels required when called:    2
 17278 ;; This function calls:
 17279 ;;		_USBCtrlTrfRxService
 17280 ;; This function is called by:
 17281 ;;		_USBCtrlEPService
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           	psect	text87
 17286  00628A                     __ptext87:
 17287                           	opt stack 0
 17288  00628A                     _USBCtrlTrfOutHandler:
 17289                           	opt stack 26
 17290                           
 17291                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17292                           
 17293                           ;incstack = 0
 17294  00628A  0E02               	movlw	2
 17295  00628C  0100               	movlb	0	; () banked
 17296  00628E  19AC               	xorwf	_controlTransferState& (0+255),w,b
 17297  006290  A4D8               	btfss	status,2,c
 17298  006292  D003               	goto	l320
 17299                           
 17300                           ; BSR set to: 0
 17301                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17302  006294  EC25  F01C         	call	_USBCtrlTrfRxService	;wreg free
 17303                           
 17304                           ;usb_device.c: 2545: }
 17305  006298  0012               	return	
 17306  00629A                     l320:
 17307                           
 17308                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17309  00629A  0E00               	movlw	0
 17310  00629C  0100               	movlb	0	; () banked
 17311  00629E  6FAC               	movwf	_controlTransferState& (0+255),b
 17312                           
 17313                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17314  0062A0  51A8               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17315  0062A2  A4D8               	btfss	status,2,c
 17316  0062A4  D01F               	goto	l322
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17320  0062A6  EE20 F001          	lfsr	2,1
 17321  0062AA  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17322  0062AC  26D9               	addwf	fsr2l,f,c
 17323  0062AE  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17324  0062B0  22DA               	addwfc	fsr2h,f,c
 17325  0062B2  0E08               	movlw	8
 17326  0062B4  6EDF               	movwf	indf2,c
 17327                           
 17328                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17329  0062B6  EE20 F002          	lfsr	2,2
 17330  0062BA  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17331  0062BC  26D9               	addwf	fsr2l,f,c
 17332  0062BE  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17333  0062C0  22DA               	addwfc	fsr2h,f,c
 17334  0062C2  0E30               	movlw	48
 17335  0062C4  6EDE               	movwf	postinc2,c
 17336  0062C6  0E0D               	movlw	13
 17337  0062C8  6EDD               	movwf	postdec2,c
 17338                           
 17339                           ; BSR set to: 0
 17340                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17341  0062CA  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17342  0062CE  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17343  0062D2  0E0C               	movlw	12
 17344  0062D4  6EDF               	movwf	indf2,c
 17345                           
 17346                           ; BSR set to: 0
 17347                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17348  0062D6  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17349  0062DA  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17350  0062DE  0E00               	movlw	0
 17351  0062E0  8EDB               	bsf	plusw2,7,c
 17352                           
 17353                           ;usb_device.c: 2563: }
 17354  0062E2  0012               	return	
 17355  0062E4                     l322:
 17356                           
 17357                           ; BSR set to: 0
 17358                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 17359                           
 17360                           ; BSR set to: 0
 17361  0062E4  0E00               	movlw	0
 17362  0062E6  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17363                           
 17364                           ; BSR set to: 0
 17365  0062E8  0012               	return	
 17366  0062EA                     __end_of_USBCtrlTrfOutHandler:
 17367                           	opt stack 0
 17368                           tosu	equ	0xFFF
 17369                           tosh	equ	0xFFE
 17370                           tosl	equ	0xFFD
 17371                           pclath	equ	0xFFA
 17372                           tblptru	equ	0xFF8
 17373                           tblptrh	equ	0xFF7
 17374                           tblptrl	equ	0xFF6
 17375                           tablat	equ	0xFF5
 17376                           prodh	equ	0xFF4
 17377                           prodl	equ	0xFF3
 17378                           intcon	equ	0xFF2
 17379                           intcon2	equ	0xFF1
 17380                           intcon3	equ	0xFF0
 17381                           indf0	equ	0xFEF
 17382                           postinc0	equ	0xFEE
 17383                           fsr0h	equ	0xFEA
 17384                           fsr0l	equ	0xFE9
 17385                           wreg	equ	0xFE8
 17386                           indf1	equ	0xFE7
 17387                           postdec1	equ	0xFE5
 17388                           plusw1	equ	0xFE3
 17389                           fsr1h	equ	0xFE2
 17390                           fsr1l	equ	0xFE1
 17391                           indf2	equ	0xFDF
 17392                           postinc2	equ	0xFDE
 17393                           postdec2	equ	0xFDD
 17394                           plusw2	equ	0xFDB
 17395                           fsr2h	equ	0xFDA
 17396                           fsr2l	equ	0xFD9
 17397                           status	equ	0xFD8
 17398                           
 17399 ;; *************** function _USBCtrlTrfRxService *****************
 17400 ;; Defined at:
 17401 ;;		line 1854 in file "usb_device.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;		None
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17406 ;;  i               1    0[COMRAM] unsigned char 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  1    wreg      void 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17420 ;;Total ram usage:        2 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:    1
 17423 ;; This function calls:
 17424 ;;		_USBCtrlEPAllowStatusStage
 17425 ;; This function is called by:
 17426 ;;		_USBCtrlTrfOutHandler
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           	psect	text88
 17431  00384A                     __ptext88:
 17432                           	opt stack 0
 17433  00384A                     _USBCtrlTrfRxService:
 17434                           	opt stack 26
 17435                           
 17436                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17437                           
 17438                           ;incstack = 0
 17439  00384A  0100               	movlb	0	; () banked
 17440  00384C  EE20 F001          	lfsr	2,1
 17441  003850  5193               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17442  003852  26D9               	addwf	fsr2l,f,c
 17443  003854  5194               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17444  003856  22DA               	addwfc	fsr2h,f,c
 17445  003858  50DF               	movf	indf2,w,c
 17446  00385A  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 17450  00385C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17451  00385E  0101               	movlb	1	; () banked
 17452  003860  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 17453  003862  0E00               	movlw	0
 17454  003864  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 17455  003866  A0D8               	btfss	status,0,c
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 17459  003868  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 17460                           
 17461                           ; BSR set to: 1
 17462                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 17463                           
 17464                           ; BSR set to: 1
 17465  00386C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17466  00386E  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 17467  003870  0E00               	movlw	0
 17468  003872  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 17469                           
 17470                           ; BSR set to: 1
 17471                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 17472  003874  0E00               	movlw	0
 17473  003876  6E01               	movwf	USBCtrlTrfRxService@i,c
 17474  003878  D011               	goto	l248
 17475  00387A                     
 17476                           ; BSR set to: 1
 17477                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17478                           
 17479                           ; BSR set to: 1
 17480  00387A  5001               	movf	USBCtrlTrfRxService@i,w,c
 17481  00387C  0D01               	mullw	1
 17482  00387E  0E38               	movlw	56
 17483  003880  24F3               	addwf	prodl,w,c
 17484  003882  6ED9               	movwf	fsr2l,c
 17485  003884  0E0D               	movlw	13
 17486  003886  20F4               	addwfc	prodh,w,c
 17487  003888  6EDA               	movwf	fsr2h,c
 17488  00388A  C131  FFE1         	movff	_outPipes,fsr1l
 17489  00388E  C132  FFE2         	movff	_outPipes+1,fsr1h
 17490  003892  CFDF FFE7          	movff	indf2,indf1
 17491                           
 17492                           ; BSR set to: 1
 17493  003896  4B31               	infsnz	_outPipes& (0+255),f,b
 17494  003898  2B32               	incf	(_outPipes+1)& (0+255),f,b
 17495                           
 17496                           ; BSR set to: 1
 17497  00389A  2A01               	incf	USBCtrlTrfRxService@i,f,c
 17498  00389C                     l248:
 17499                           
 17500                           ; BSR set to: 1
 17501                           
 17502                           ; BSR set to: 1
 17503  00389C  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17504  00389E  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 17505  0038A0  A0D8               	btfss	status,0,c
 17506  0038A2  D7EB               	goto	l249
 17507                           
 17508                           ; BSR set to: 1
 17509                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 17510                           
 17511                           ; BSR set to: 1
 17512  0038A4  5135               	movf	(_outPipes+4)& (0+255),w,b
 17513  0038A6  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 17514  0038A8  B4D8               	btfsc	status,2,c
 17515  0038AA  D033               	goto	l251
 17516                           
 17517                           ; BSR set to: 1
 17518                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 17519  0038AC  0100               	movlb	0	; () banked
 17520  0038AE  EE20 F001          	lfsr	2,1
 17521  0038B2  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17522  0038B4  26D9               	addwf	fsr2l,f,c
 17523  0038B6  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17524  0038B8  22DA               	addwfc	fsr2h,f,c
 17525  0038BA  0E08               	movlw	8
 17526  0038BC  6EDF               	movwf	indf2,c
 17527                           
 17528                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17529  0038BE  EE20 F002          	lfsr	2,2
 17530  0038C2  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17531  0038C4  26D9               	addwf	fsr2l,f,c
 17532  0038C6  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17533  0038C8  22DA               	addwfc	fsr2h,f,c
 17534  0038CA  0E38               	movlw	56
 17535  0038CC  6EDE               	movwf	postinc2,c
 17536  0038CE  0E0D               	movlw	13
 17537  0038D0  6EDD               	movwf	postdec2,c
 17538                           
 17539                           ; BSR set to: 0
 17540                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17541  0038D2  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17542  0038D6  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17543  0038DA  BCDF               	btfsc	indf2,6,c
 17544  0038DC  D00D               	goto	l252
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 17548  0038DE  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17549  0038E2  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17550  0038E6  0E48               	movlw	72
 17551  0038E8  6EDF               	movwf	indf2,c
 17552                           
 17553                           ; BSR set to: 0
 17554                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17555  0038EA  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17556  0038EE  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17557  0038F2  0E00               	movlw	0
 17558  0038F4  8EDB               	bsf	plusw2,7,c
 17559                           
 17560                           ;usb_device.c: 1891: }
 17561  0038F6  0012               	return	
 17562  0038F8                     l252:
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 17566                           
 17567                           ; BSR set to: 0
 17568  0038F8  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17569  0038FC  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17570  003900  0E08               	movlw	8
 17571  003902  6EDF               	movwf	indf2,c
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17575  003904  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17576  003908  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17577  00390C  0E00               	movlw	0
 17578  00390E  8EDB               	bsf	plusw2,7,c
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 17582  003910  0012               	return	
 17583  003912                     l251:
 17584                           
 17585                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17586                           
 17587                           ; BSR set to: 0
 17588  003912  0100               	movlb	0	; () banked
 17589  003914  EE20 F001          	lfsr	2,1
 17590  003918  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17591  00391A  26D9               	addwf	fsr2l,f,c
 17592  00391C  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17593  00391E  22DA               	addwfc	fsr2h,f,c
 17594  003920  0E08               	movlw	8
 17595  003922  6EDF               	movwf	indf2,c
 17596                           
 17597                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17598  003924  EE20 F002          	lfsr	2,2
 17599  003928  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17600  00392A  26D9               	addwf	fsr2l,f,c
 17601  00392C  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17602  00392E  22DA               	addwfc	fsr2h,f,c
 17603  003930  0E30               	movlw	48
 17604  003932  6EDE               	movwf	postinc2,c
 17605  003934  0E0D               	movlw	13
 17606  003936  6EDD               	movwf	postdec2,c
 17607                           
 17608                           ; BSR set to: 0
 17609                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17610  003938  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17611  00393C  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17612  003940  0E04               	movlw	4
 17613  003942  6EDF               	movwf	indf2,c
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17617  003944  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17618  003948  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17619  00394C  0E00               	movlw	0
 17620  00394E  8EDB               	bsf	plusw2,7,c
 17621                           
 17622                           ; BSR set to: 0
 17623                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17624                           
 17625                           ; BSR set to: 0
 17626  003950  0101               	movlb	1	; () banked
 17627  003952  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17628                           
 17629                           ; BSR set to: 1
 17630                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17631  003954  0100               	movlb	0	; () banked
 17632  003956  51A6               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17633  003958  A4D8               	btfss	status,2,c
 17634  00395A  0012               	return	
 17635                           
 17636                           ; BSR set to: 0
 17637                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17638  00395C  EC54  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17639  003960  0012               	return	
 17640  003962                     __end_of_USBCtrlTrfRxService:
 17641                           	opt stack 0
 17642                           tosu	equ	0xFFF
 17643                           tosh	equ	0xFFE
 17644                           tosl	equ	0xFFD
 17645                           pclath	equ	0xFFA
 17646                           tblptru	equ	0xFF8
 17647                           tblptrh	equ	0xFF7
 17648                           tblptrl	equ	0xFF6
 17649                           tablat	equ	0xFF5
 17650                           prodh	equ	0xFF4
 17651                           prodl	equ	0xFF3
 17652                           intcon	equ	0xFF2
 17653                           intcon2	equ	0xFF1
 17654                           intcon3	equ	0xFF0
 17655                           indf0	equ	0xFEF
 17656                           postinc0	equ	0xFEE
 17657                           fsr0h	equ	0xFEA
 17658                           fsr0l	equ	0xFE9
 17659                           wreg	equ	0xFE8
 17660                           indf1	equ	0xFE7
 17661                           postdec1	equ	0xFE5
 17662                           plusw1	equ	0xFE3
 17663                           fsr1h	equ	0xFE2
 17664                           fsr1l	equ	0xFE1
 17665                           indf2	equ	0xFDF
 17666                           postinc2	equ	0xFDE
 17667                           postdec2	equ	0xFDD
 17668                           plusw2	equ	0xFDB
 17669                           fsr2h	equ	0xFDA
 17670                           fsr2l	equ	0xFD9
 17671                           status	equ	0xFD8
 17672                           
 17673 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 17674 ;; Defined at:
 17675 ;;		line 1418 in file "usb_device.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;		None
 17678 ;; Auto vars:     Size  Location     Type
 17679 ;;		None
 17680 ;; Return value:  Size  Location     Type
 17681 ;;                  1    wreg      void 
 17682 ;; Registers used:
 17683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17684 ;; Tracked objects:
 17685 ;;		On entry : 0/0
 17686 ;;		On exit  : 0/0
 17687 ;;		Unchanged: 0/0
 17688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17693 ;;Total ram usage:        0 bytes
 17694 ;; Hardware stack levels used:    1
 17695 ;; This function calls:
 17696 ;;		Nothing
 17697 ;; This function is called by:
 17698 ;;		_USBDeviceTasks
 17699 ;;		_USBCtrlEPServiceComplete
 17700 ;;		_USBCtrlTrfRxService
 17701 ;; This function uses a non-reentrant model
 17702 ;;
 17703                           
 17704                           	psect	text89
 17705  004CA8                     __ptext89:
 17706                           	opt stack 0
 17707  004CA8                     _USBCtrlEPAllowStatusStage:
 17708                           	opt stack 26
 17709                           
 17710                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17711                           
 17712                           ;incstack = 0
 17713  004CA8  0100               	movlb	0	; () banked
 17714  004CAA  51A5               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17715  004CAC  A4D8               	btfss	status,2,c
 17716  004CAE  0012               	return	
 17717                           
 17718                           ; BSR set to: 0
 17719                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17720  004CB0  0E01               	movlw	1
 17721  004CB2  6FA5               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17722                           
 17723                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17724  004CB4  51A4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17725  004CB6  A4D8               	btfss	status,2,c
 17726  004CB8  0012               	return	
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 17730  004CBA  0E01               	movlw	1
 17731  004CBC  6FA4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17732                           
 17733                           ; BSR set to: 0
 17734                           ;usb_device.c: 1434: if(controlTransferState == 2)
 17735  004CBE  0E02               	movlw	2
 17736  004CC0  19AC               	xorwf	_controlTransferState& (0+255),w,b
 17737  004CC2  A4D8               	btfss	status,2,c
 17738  004CC4  D015               	goto	l202
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 17742  004CC6  EE20 F001          	lfsr	2,1
 17743  004CCA  5173               	movf	_pBDTEntryIn& (0+255),w,b
 17744  004CCC  26D9               	addwf	fsr2l,f,c
 17745  004CCE  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17746  004CD0  22DA               	addwfc	fsr2h,f,c
 17747  004CD2  0E00               	movlw	0
 17748  004CD4  6EDF               	movwf	indf2,c
 17749                           
 17750                           ; BSR set to: 0
 17751                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 17752  004CD6  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 17753  004CDA  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17754  004CDE  0E48               	movlw	72
 17755  004CE0  6EDF               	movwf	indf2,c
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17759  004CE2  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 17760  004CE6  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17761  004CEA  0E00               	movlw	0
 17762  004CEC  8EDB               	bsf	plusw2,7,c
 17763                           
 17764                           ;usb_device.c: 1439: }
 17765  004CEE  0012               	return	
 17766  004CF0                     l202:
 17767                           
 17768                           ; BSR set to: 0
 17769                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 17770                           
 17771                           ; BSR set to: 0
 17772  004CF0  05AC               	decf	_controlTransferState& (0+255),w,b
 17773  004CF2  A4D8               	btfss	status,2,c
 17774  004CF4  0012               	return	
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 17778  004CF6  0E00               	movlw	0
 17779  004CF8  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17780                           
 17781                           ; BSR set to: 0
 17782                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 17783  004CFA  EE20 F001          	lfsr	2,1
 17784  004CFE  5193               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17785  004D00  26D9               	addwf	fsr2l,f,c
 17786  004D02  5194               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17787  004D04  22DA               	addwfc	fsr2h,f,c
 17788  004D06  0E08               	movlw	8
 17789  004D08  6EDF               	movwf	indf2,c
 17790                           
 17791                           ; BSR set to: 0
 17792                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 17793  004D0A  EE20 F002          	lfsr	2,2
 17794  004D0E  5193               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17795  004D10  26D9               	addwf	fsr2l,f,c
 17796  004D12  5194               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17797  004D14  22DA               	addwfc	fsr2h,f,c
 17798  004D16  0E30               	movlw	48
 17799  004D18  6EDE               	movwf	postinc2,c
 17800  004D1A  0E0D               	movlw	13
 17801  004D1C  6EDD               	movwf	postdec2,c
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 17805  004D1E  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17806  004D22  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17807  004D26  0E04               	movlw	4
 17808  004D28  6EDF               	movwf	indf2,c
 17809                           
 17810                           ; BSR set to: 0
 17811                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17812  004D2A  C093  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17813  004D2E  C094  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17814  004D32  0E00               	movlw	0
 17815  004D34  8EDB               	bsf	plusw2,7,c
 17816                           
 17817                           ; BSR set to: 0
 17818                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 17819  004D36  0E01               	movlw	1
 17820  004D38  6FA8               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17821                           
 17822                           ; BSR set to: 0
 17823                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 17824  004D3A  EE20 F001          	lfsr	2,1
 17825  004D3E  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17826  004D40  26D9               	addwf	fsr2l,f,c
 17827  004D42  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17828  004D44  22DA               	addwfc	fsr2h,f,c
 17829  004D46  0E08               	movlw	8
 17830  004D48  6EDF               	movwf	indf2,c
 17831                           
 17832                           ; BSR set to: 0
 17833                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17834  004D4A  EE20 F002          	lfsr	2,2
 17835  004D4E  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17836  004D50  26D9               	addwf	fsr2l,f,c
 17837  004D52  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17838  004D54  22DA               	addwfc	fsr2h,f,c
 17839  004D56  0E30               	movlw	48
 17840  004D58  6EDE               	movwf	postinc2,c
 17841  004D5A  0E0D               	movlw	13
 17842  004D5C  6EDD               	movwf	postdec2,c
 17843                           
 17844                           ; BSR set to: 0
 17845                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 17846  004D5E  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17847  004D62  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17848  004D66  0E80               	movlw	128
 17849  004D68  6EDF               	movwf	indf2,c
 17850                           
 17851                           ; BSR set to: 0
 17852                           
 17853                           ; BSR set to: 0
 17854                           
 17855                           ; BSR set to: 0
 17856  004D6A  0012               	return	
 17857  004D6C                     __end_of_USBCtrlEPAllowStatusStage:
 17858                           	opt stack 0
 17859                           tosu	equ	0xFFF
 17860                           tosh	equ	0xFFE
 17861                           tosl	equ	0xFFD
 17862                           pclath	equ	0xFFA
 17863                           tblptru	equ	0xFF8
 17864                           tblptrh	equ	0xFF7
 17865                           tblptrl	equ	0xFF6
 17866                           tablat	equ	0xFF5
 17867                           prodh	equ	0xFF4
 17868                           prodl	equ	0xFF3
 17869                           intcon	equ	0xFF2
 17870                           intcon2	equ	0xFF1
 17871                           intcon3	equ	0xFF0
 17872                           indf0	equ	0xFEF
 17873                           postinc0	equ	0xFEE
 17874                           fsr0h	equ	0xFEA
 17875                           fsr0l	equ	0xFE9
 17876                           wreg	equ	0xFE8
 17877                           indf1	equ	0xFE7
 17878                           postdec1	equ	0xFE5
 17879                           plusw1	equ	0xFE3
 17880                           fsr1h	equ	0xFE2
 17881                           fsr1l	equ	0xFE1
 17882                           indf2	equ	0xFDF
 17883                           postinc2	equ	0xFDE
 17884                           postdec2	equ	0xFDD
 17885                           plusw2	equ	0xFDB
 17886                           fsr2h	equ	0xFDA
 17887                           fsr2l	equ	0xFD9
 17888                           status	equ	0xFD8
 17889                           
 17890 ;; *************** function _USBCtrlTrfInHandler *****************
 17891 ;; Defined at:
 17892 ;;		line 2594 in file "usb_device.c"
 17893 ;; Parameters:    Size  Location     Type
 17894 ;;		None
 17895 ;; Auto vars:     Size  Location     Type
 17896 ;;  lastDTS         1    1[COMRAM] unsigned char 
 17897 ;; Return value:  Size  Location     Type
 17898 ;;                  1    wreg      void 
 17899 ;; Registers used:
 17900 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17901 ;; Tracked objects:
 17902 ;;		On entry : 0/0
 17903 ;;		On exit  : 0/0
 17904 ;;		Unchanged: 0/0
 17905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17910 ;;Total ram usage:        1 bytes
 17911 ;; Hardware stack levels used:    1
 17912 ;; Hardware stack levels required when called:    1
 17913 ;; This function calls:
 17914 ;;		_USBCtrlTrfTxService
 17915 ;; This function is called by:
 17916 ;;		_USBCtrlEPService
 17917 ;; This function uses a non-reentrant model
 17918 ;;
 17919                           
 17920                           	psect	text90
 17921  004BE0                     __ptext90:
 17922                           	opt stack 0
 17923  004BE0                     _USBCtrlTrfInHandler:
 17924                           	opt stack 27
 17925                           
 17926                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;incstack = 0
 17930  004BE0  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 17931  004BE4  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17932  004BE8  0100               	movlb	0	; () banked
 17933  004BEA  0E00               	movlw	0
 17934  004BEC  BCDF               	btfsc	indf2,6,c
 17935  004BEE  0E01               	movlw	1
 17936  004BF0  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 17937                           
 17938                           ; BSR set to: 0
 17939                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17940  004BF2  0E04               	movlw	4
 17941  004BF4  1973               	xorwf	_pBDTEntryIn& (0+255),w,b
 17942  004BF6  6F73               	movwf	_pBDTEntryIn& (0+255),b
 17943  004BF8  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17944  004BFA  6F74               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17945                           
 17946                           ; BSR set to: 0
 17947                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 17948  004BFC  0E08               	movlw	8
 17949  004BFE  185F               	xorwf	_USBDeviceState,w,c
 17950  004C00  A4D8               	btfss	status,2,c
 17951  004C02  D00C               	goto	l329
 17952                           
 17953                           ; BSR set to: 0
 17954                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 17955  004C04  010D               	movlb	13	; () banked
 17956  004C06  5132               	movf	50,w,b	;volatile
 17957  004C08  0B7F               	andlw	127
 17958  004C0A  010F               	movlb	15	; () banked
 17959  004C0C  6F38               	movwf	56,b	;volatile
 17960                           
 17961                           ; BSR set to: 15
 17962                           ;usb_device.c: 2609: if(UADDR != 0u)
 17963  004C0E  5138               	movf	56,w,b	;volatile
 17964  004C10  B4D8               	btfsc	status,2,c
 17965  004C12  D002               	goto	l328
 17966                           
 17967                           ; BSR set to: 15
 17968                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 17969  004C14  0E10               	movlw	16
 17970  004C16  D001               	goto	L16
 17971  004C18                     l328:
 17972                           
 17973                           ; BSR set to: 15
 17974                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 17975                           
 17976                           ; BSR set to: 15
 17977  004C18  0E04               	movlw	4
 17978  004C1A                     L16:
 17979  004C1A  6E5F               	movwf	_USBDeviceState,c
 17980  004C1C                     l329:
 17981                           
 17982                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 17983                           
 17984                           ; BSR set to: 15
 17985                           
 17986                           ; BSR set to: 15
 17987  004C1C  0100               	movlb	0	; () banked
 17988  004C1E  05AC               	decf	_controlTransferState& (0+255),w,b
 17989  004C20  A4D8               	btfss	status,2,c
 17990  004C22  D03B               	goto	l330
 17991                           
 17992                           ; BSR set to: 0
 17993                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 17994  004C24  EE20 F002          	lfsr	2,2
 17995  004C28  5173               	movf	_pBDTEntryIn& (0+255),w,b
 17996  004C2A  26D9               	addwf	fsr2l,f,c
 17997  004C2C  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17998  004C2E  22DA               	addwfc	fsr2h,f,c
 17999  004C30  0E38               	movlw	56
 18000  004C32  6EDE               	movwf	postinc2,c
 18001  004C34  0E0D               	movlw	13
 18002  004C36  6EDD               	movwf	postdec2,c
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18006  004C38  EC1F  F025         	call	_USBCtrlTrfTxService	;wreg free
 18007                           
 18008                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18009  004C3C  0E02               	movlw	2
 18010  004C3E  0100               	movlb	0	; () banked
 18011  004C40  19AD               	xorwf	_shortPacketStatus& (0+255),w,b
 18012  004C42  A4D8               	btfss	status,2,c
 18013  004C44  D00D               	goto	l331
 18014                           
 18015                           ; BSR set to: 0
 18016                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18017  004C46  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18018  004C4A  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18019  004C4E  0E04               	movlw	4
 18020  004C50  6EDF               	movwf	indf2,c
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18024  004C52  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18025  004C56  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18026  004C5A  0E00               	movlw	0
 18027  004C5C  8EDB               	bsf	plusw2,7,c
 18028                           
 18029                           ;usb_device.c: 2635: }
 18030  004C5E  0012               	return	
 18031  004C60                     l331:
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18035                           
 18036                           ; BSR set to: 0
 18037  004C60  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18038  004C62  A4D8               	btfss	status,2,c
 18039  004C64  D00D               	goto	l333
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18043  004C66  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18044  004C6A  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18045  004C6E  0E48               	movlw	72
 18046  004C70  6EDF               	movwf	indf2,c
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18050  004C72  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18051  004C76  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18052  004C7A  0E00               	movlw	0
 18053  004C7C  8EDB               	bsf	plusw2,7,c
 18054                           
 18055                           ;usb_device.c: 2642: }
 18056  004C7E  0012               	return	
 18057  004C80                     l333:
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18061                           
 18062                           ; BSR set to: 0
 18063  004C80  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18064  004C84  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18065  004C88  0E08               	movlw	8
 18066  004C8A  6EDF               	movwf	indf2,c
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18070  004C8C  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 18071  004C90  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18072  004C94  0E00               	movlw	0
 18073  004C96  8EDB               	bsf	plusw2,7,c
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18077                           
 18078                           ; BSR set to: 0
 18079  004C98  0012               	return	
 18080  004C9A                     l330:
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18084  004C9A  0101               	movlb	1	; () banked
 18085  004C9C  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18086                           
 18087                           ; BSR set to: 1
 18088                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18089                           
 18090                           ; BSR set to: 1
 18091  004C9E  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18092                           
 18093                           ; BSR set to: 1
 18094                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18095                           
 18096                           ; BSR set to: 1
 18097  004CA0  0E00               	movlw	0
 18098  004CA2  0100               	movlb	0	; () banked
 18099  004CA4  6FAC               	movwf	_controlTransferState& (0+255),b
 18100  004CA6  0012               	return	
 18101  004CA8                     __end_of_USBCtrlTrfInHandler:
 18102                           	opt stack 0
 18103                           tosu	equ	0xFFF
 18104                           tosh	equ	0xFFE
 18105                           tosl	equ	0xFFD
 18106                           pclath	equ	0xFFA
 18107                           tblptru	equ	0xFF8
 18108                           tblptrh	equ	0xFF7
 18109                           tblptrl	equ	0xFF6
 18110                           tablat	equ	0xFF5
 18111                           prodh	equ	0xFF4
 18112                           prodl	equ	0xFF3
 18113                           intcon	equ	0xFF2
 18114                           intcon2	equ	0xFF1
 18115                           intcon3	equ	0xFF0
 18116                           indf0	equ	0xFEF
 18117                           postinc0	equ	0xFEE
 18118                           fsr0h	equ	0xFEA
 18119                           fsr0l	equ	0xFE9
 18120                           wreg	equ	0xFE8
 18121                           indf1	equ	0xFE7
 18122                           postdec1	equ	0xFE5
 18123                           plusw1	equ	0xFE3
 18124                           fsr1h	equ	0xFE2
 18125                           fsr1l	equ	0xFE1
 18126                           indf2	equ	0xFDF
 18127                           postinc2	equ	0xFDE
 18128                           postdec2	equ	0xFDD
 18129                           plusw2	equ	0xFDB
 18130                           fsr2h	equ	0xFDA
 18131                           fsr2l	equ	0xFD9
 18132                           status	equ	0xFD8
 18133                           
 18134 ;; *************** function _USBCtrlTrfTxService *****************
 18135 ;; Defined at:
 18136 ;;		line 1773 in file "usb_device.c"
 18137 ;; Parameters:    Size  Location     Type
 18138 ;;		None
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18141 ;; Return value:  Size  Location     Type
 18142 ;;                  1    wreg      void 
 18143 ;; Registers used:
 18144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18145 ;; Tracked objects:
 18146 ;;		On entry : 0/0
 18147 ;;		On exit  : 0/0
 18148 ;;		Unchanged: 0/0
 18149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18153 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18154 ;;Total ram usage:        1 bytes
 18155 ;; Hardware stack levels used:    1
 18156 ;; This function calls:
 18157 ;;		Nothing
 18158 ;; This function is called by:
 18159 ;;		_USBCtrlEPAllowDataStage
 18160 ;;		_USBCtrlTrfInHandler
 18161 ;; This function uses a non-reentrant model
 18162 ;;
 18163                           
 18164                           	psect	text91
 18165  004A3E                     __ptext91:
 18166                           	opt stack 0
 18167  004A3E                     _USBCtrlTrfTxService:
 18168                           	opt stack 25
 18169                           
 18170                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;incstack = 0
 18174  004A3E  0E08               	movlw	8
 18175  004A40  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18176                           
 18177                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18178  004A42  0100               	movlb	0	; () banked
 18179  004A44  5172               	movf	(_inPipes+5)& (0+255),w,b
 18180  004A46  E110               	bnz	l10510
 18181  004A48  0E08               	movlw	8
 18182  004A4A  5D71               	subwf	(_inPipes+4)& (0+255),w,b
 18183  004A4C  B0D8               	btfsc	status,0,c
 18184  004A4E  D00C               	goto	l235
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18188  004A50  C071  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18192  004A54  51AD               	movf	_shortPacketStatus& (0+255),w,b
 18193  004A56  A4D8               	btfss	status,2,c
 18194  004A58  D002               	goto	l233
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18198  004A5A  0E01               	movlw	1
 18199  004A5C  D004               	goto	L17
 18200  004A5E                     l233:
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18204                           
 18205                           ; BSR set to: 0
 18206  004A5E  05AD               	decf	_shortPacketStatus& (0+255),w,b
 18207  004A60  A4D8               	btfss	status,2,c
 18208  004A62  D002               	goto	l235
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18212  004A64  0E02               	movlw	2
 18213  004A66                     L17:
 18214  004A66  6FAD               	movwf	_shortPacketStatus& (0+255),b
 18215  004A68                     l235:
 18216  004A68                     l10510:
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18220  004A68  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18221  004A6A  5F71               	subwf	(_inPipes+4)& (0+255),f,b
 18222  004A6C  0E00               	movlw	0
 18223  004A6E  5B72               	subwfb	(_inPipes+5)& (0+255),f,b
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18227  004A70  EE20 F001          	lfsr	2,1
 18228  004A74  5173               	movf	_pBDTEntryIn& (0+255),w,b
 18229  004A76  26D9               	addwf	fsr2l,f,c
 18230  004A78  5174               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18231  004A7A  22DA               	addwfc	fsr2h,f,c
 18232  004A7C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18233                           
 18234                           ; BSR set to: 0
 18235                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18236  004A80  0E38               	movlw	56
 18237  004A82  0101               	movlb	1	; () banked
 18238  004A84  6F73               	movwf	_pDst& (0+255),b
 18239  004A86  0E0D               	movlw	13
 18240  004A88  6F74               	movwf	(_pDst+1)& (0+255),b
 18241                           
 18242                           ; BSR set to: 1
 18243                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18244  004A8A  0100               	movlb	0	; () banked
 18245  004A8C  A170               	btfss	(_inPipes+3)& (0+255),0,b
 18246  004A8E  D01D               	goto	l237
 18247  004A90  D03C               	goto	l241
 18248  004A92                     
 18249                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18250                           
 18251                           ; BSR set to: 0
 18252  004A92  C06D  FFF6         	movff	_inPipes,tblptrl
 18253  004A96  C06E  FFF7         	movff	_inPipes+1,tblptrh
 18254  004A9A  6AF8               	clrf	tblptru,c
 18255  004A9C  C173  FFD9         	movff	_pDst,fsr2l
 18256  004AA0  C174  FFDA         	movff	_pDst+1,fsr2h
 18257  004AA4  0E0E               	movlw	(high __ramtop+-1)
 18258  004AA6  64F7               	cpfsgt	tblptrh,c
 18259  004AA8  D003               	bra	u7777
 18260  004AAA  0008               	tblrd		*
 18261  004AAC  50F5               	movf	tablat,w,c
 18262  004AAE  D005               	bra	u7770
 18263  004AB0                     u7777:
 18264  004AB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18265  004AB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18266  004AB8  50EF               	movf	indf0,w,c
 18267  004ABA                     u7770:
 18268  004ABA  6EDF               	movwf	indf2,c
 18269  004ABC  0100               	movlb	0	; () banked
 18270  004ABE  4B6D               	infsnz	_inPipes& (0+255),f,b
 18271  004AC0  2B6E               	incf	(_inPipes+1)& (0+255),f,b
 18272                           
 18273                           ; BSR set to: 0
 18274  004AC2  0101               	movlb	1	; () banked
 18275  004AC4  4B73               	infsnz	_pDst& (0+255),f,b
 18276  004AC6  2B74               	incf	(_pDst+1)& (0+255),f,b
 18277                           
 18278                           ; BSR set to: 1
 18279                           ;usb_device.c: 1816: byteToSend--;
 18280  004AC8  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18281  004ACA                     l237:
 18282                           
 18283                           ; BSR set to: 1
 18284  004ACA  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18285  004ACC  B4D8               	btfsc	status,2,c
 18286  004ACE  0012               	return	
 18287  004AD0  D7E0               	goto	l238
 18288  004AD2                     
 18289                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18290  004AD2  C06D  FFF6         	movff	_inPipes,tblptrl
 18291  004AD6  C06E  FFF7         	movff	_inPipes+1,tblptrh
 18292  004ADA  6AF8               	clrf	tblptru,c
 18293  004ADC  C173  FFD9         	movff	_pDst,fsr2l
 18294  004AE0  C174  FFDA         	movff	_pDst+1,fsr2h
 18295  004AE4  0E0E               	movlw	(high __ramtop+-1)
 18296  004AE6  64F7               	cpfsgt	tblptrh,c
 18297  004AE8  D003               	bra	u7797
 18298  004AEA  0008               	tblrd		*
 18299  004AEC  50F5               	movf	tablat,w,c
 18300  004AEE  D005               	bra	u7790
 18301  004AF0                     u7797:
 18302  004AF0  CFF6 FFE9          	movff	tblptrl,fsr0l
 18303  004AF4  CFF7 FFEA          	movff	tblptrh,fsr0h
 18304  004AF8  50EF               	movf	indf0,w,c
 18305  004AFA                     u7790:
 18306  004AFA  6EDF               	movwf	indf2,c
 18307  004AFC  0100               	movlb	0	; () banked
 18308  004AFE  4B6D               	infsnz	_inPipes& (0+255),f,b
 18309  004B00  2B6E               	incf	(_inPipes+1)& (0+255),f,b
 18310                           
 18311                           ; BSR set to: 0
 18312  004B02  0101               	movlb	1	; () banked
 18313  004B04  4B73               	infsnz	_pDst& (0+255),f,b
 18314  004B06  2B74               	incf	(_pDst+1)& (0+255),f,b
 18315                           
 18316                           ; BSR set to: 1
 18317                           ;usb_device.c: 1824: byteToSend--;
 18318  004B08  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18319  004B0A                     l241:
 18320                           
 18321                           ; BSR set to: 1
 18322  004B0A  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18323  004B0C  B4D8               	btfsc	status,2,c
 18324  004B0E  0012               	return	
 18325  004B10  D7E0               	goto	l242
 18326  004B12                     __end_of_USBCtrlTrfTxService:
 18327                           	opt stack 0
 18328                           tosu	equ	0xFFF
 18329                           tosh	equ	0xFFE
 18330                           tosl	equ	0xFFD
 18331                           pclath	equ	0xFFA
 18332                           tblptru	equ	0xFF8
 18333                           tblptrh	equ	0xFF7
 18334                           tblptrl	equ	0xFF6
 18335                           tablat	equ	0xFF5
 18336                           prodh	equ	0xFF4
 18337                           prodl	equ	0xFF3
 18338                           intcon	equ	0xFF2
 18339                           intcon2	equ	0xFF1
 18340                           intcon3	equ	0xFF0
 18341                           indf0	equ	0xFEF
 18342                           postinc0	equ	0xFEE
 18343                           fsr0h	equ	0xFEA
 18344                           fsr0l	equ	0xFE9
 18345                           wreg	equ	0xFE8
 18346                           indf1	equ	0xFE7
 18347                           postdec1	equ	0xFE5
 18348                           plusw1	equ	0xFE3
 18349                           fsr1h	equ	0xFE2
 18350                           fsr1l	equ	0xFE1
 18351                           indf2	equ	0xFDF
 18352                           postinc2	equ	0xFDE
 18353                           postdec2	equ	0xFDD
 18354                           plusw2	equ	0xFDB
 18355                           fsr2h	equ	0xFDA
 18356                           fsr2l	equ	0xFD9
 18357                           status	equ	0xFD8
 18358                           
 18359 ;; *************** function _APP_DeviceMSDTasks *****************
 18360 ;; Defined at:
 18361 ;;		line 110 in file "app_device_msd.c"
 18362 ;; Parameters:    Size  Location     Type
 18363 ;;		None
 18364 ;; Auto vars:     Size  Location     Type
 18365 ;;		None
 18366 ;; Return value:  Size  Location     Type
 18367 ;;                  1    wreg      void 
 18368 ;; Registers used:
 18369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18370 ;; Tracked objects:
 18371 ;;		On entry : 0/0
 18372 ;;		On exit  : 0/0
 18373 ;;		Unchanged: 0/0
 18374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18379 ;;Total ram usage:        0 bytes
 18380 ;; Hardware stack levels used:    1
 18381 ;; Hardware stack levels required when called:   11
 18382 ;; This function calls:
 18383 ;;		_MSDTasks
 18384 ;; This function is called by:
 18385 ;;		_main
 18386 ;; This function uses a non-reentrant model
 18387 ;;
 18388                           
 18389                           	psect	text92
 18390  0070F2                     __ptext92:
 18391                           	opt stack 0
 18392  0070F2                     _APP_DeviceMSDTasks:
 18393                           	opt stack 19
 18394                           
 18395                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 18396                           
 18397                           ;incstack = 0
 18398  0070F2  0E20               	movlw	32
 18399  0070F4  605F               	cpfslt	_USBDeviceState,c
 18400  0070F6  D001               	goto	l974
 18401  0070F8  0012               	return	
 18402  0070FA                     l974:
 18403                           
 18404                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 18405  0070FA  B265               	btfsc	3941,1,c	;volatile
 18406  0070FC  0012               	return	
 18407                           
 18408                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 18409                           
 18410                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 18411  0070FE  ECDF  F00C         	call	_MSDTasks	;wreg free
 18412  007102  0012               	return		;funcret
 18413  007104                     __end_of_APP_DeviceMSDTasks:
 18414                           	opt stack 0
 18415                           tosu	equ	0xFFF
 18416                           tosh	equ	0xFFE
 18417                           tosl	equ	0xFFD
 18418                           pclath	equ	0xFFA
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           intcon	equ	0xFF2
 18426                           intcon2	equ	0xFF1
 18427                           intcon3	equ	0xFF0
 18428                           indf0	equ	0xFEF
 18429                           postinc0	equ	0xFEE
 18430                           fsr0h	equ	0xFEA
 18431                           fsr0l	equ	0xFE9
 18432                           wreg	equ	0xFE8
 18433                           indf1	equ	0xFE7
 18434                           postdec1	equ	0xFE5
 18435                           plusw1	equ	0xFE3
 18436                           fsr1h	equ	0xFE2
 18437                           fsr1l	equ	0xFE1
 18438                           indf2	equ	0xFDF
 18439                           postinc2	equ	0xFDE
 18440                           postdec2	equ	0xFDD
 18441                           plusw2	equ	0xFDB
 18442                           fsr2h	equ	0xFDA
 18443                           fsr2l	equ	0xFD9
 18444                           status	equ	0xFD8
 18445                           
 18446 ;; *************** function _MSDTasks *****************
 18447 ;; Defined at:
 18448 ;;		line 335 in file "usb_device_msd.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;		None
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;  i               1   81[COMRAM] unsigned char 
 18453 ;; Return value:  Size  Location     Type
 18454 ;;                  1    wreg      unsigned char 
 18455 ;; Registers used:
 18456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18465 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18466 ;;Total ram usage:        6 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:   10
 18469 ;; This function calls:
 18470 ;;		_MSDProcessCommand
 18471 ;;		_USBStallEndpoint
 18472 ;;		_USBTransferOnePacket
 18473 ;; This function is called by:
 18474 ;;		_APP_DeviceMSDTasks
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           	psect	text93
 18479  0019BE                     __ptext93:
 18480                           	opt stack 0
 18481  0019BE                     _MSDTasks:
 18482                           	opt stack 19
 18483                           
 18484                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 18485                           
 18486                           ;incstack = 0
 18487  0019BE  0E20               	movlw	32
 18488  0019C0  185F               	xorwf	_USBDeviceState,w,c
 18489  0019C2  A4D8               	btfss	status,2,c
 18490  0019C4  0012               	return	
 18491  0019C6  D118               	goto	l554
 18492  0019C8                     
 18493                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 18494  0019C8  0100               	movlb	0	; () banked
 18495  0019CA  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 18496  0019CC  1190               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18497  0019CE  B4D8               	btfsc	status,2,c
 18498  0019D0  D006               	goto	u10800
 18499                           
 18500                           ; BSR set to: 0
 18501  0019D2  C08F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18502  0019D6  C090  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18503  0019DA  BEDF               	btfsc	indf2,7,c
 18504  0019DC  0012               	return	
 18505  0019DE                     u10800:
 18506                           
 18507                           ; BSR set to: 0
 18508                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 18509                           
 18510                           ; BSR set to: 0
 18511  0019DE  0E00               	movlw	0
 18512  0019E0  6E52               	movwf	MSDTasks@i,c
 18513  0019E2                     l13456:
 18514                           
 18515                           ; BSR set to: 0
 18516  0019E2  0E1E               	movlw	30
 18517  0019E4  6452               	cpfsgt	MSDTasks@i,c
 18518  0019E6  D001               	goto	l559
 18519  0019E8  D014               	goto	u10820
 18520  0019EA                     l559:
 18521                           
 18522                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 18523                           
 18524                           ; BSR set to: 0
 18525  0019EA  5052               	movf	MSDTasks@i,w,c
 18526  0019EC  0D01               	mullw	1
 18527  0019EE  0E40               	movlw	64
 18528  0019F0  24F3               	addwf	prodl,w,c
 18529  0019F2  6ED9               	movwf	fsr2l,c
 18530  0019F4  0E0D               	movlw	13
 18531  0019F6  20F4               	addwfc	prodh,w,c
 18532  0019F8  6EDA               	movwf	fsr2h,c
 18533  0019FA  5052               	movf	MSDTasks@i,w,c
 18534  0019FC  0D01               	mullw	1
 18535  0019FE  0E00               	movlw	low _gblCBW
 18536  001A00  24F3               	addwf	prodl,w,c
 18537  001A02  6EE1               	movwf	fsr1l,c
 18538  001A04  0E01               	movlw	high _gblCBW
 18539  001A06  20F4               	addwfc	prodh,w,c
 18540  001A08  6EE2               	movwf	fsr1h,c
 18541  001A0A  CFDF FFE7          	movff	indf2,indf1
 18542  001A0E  2A52               	incf	MSDTasks@i,f,c
 18543  001A10  D7E8               	goto	l13456
 18544  001A12                     u10820:
 18545                           
 18546                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 18547  001A12  0100               	movlb	0	; () banked
 18548  001A14  EE20 F001          	lfsr	2,1
 18549  001A18  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 18550  001A1A  26D9               	addwf	fsr2l,f,c
 18551  001A1C  5190               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 18552  001A1E  22DA               	addwfc	fsr2h,f,c
 18553  001A20  0E1F               	movlw	31
 18554  001A22  18DE               	xorwf	postinc2,w,c
 18555  001A24  A4D8               	btfss	status,2,c
 18556  001A26  D072               	goto	l561
 18557                           
 18558                           ; BSR set to: 0
 18559  001A28  0E55               	movlw	85
 18560  001A2A  0101               	movlb	1	; () banked
 18561  001A2C  1900               	xorwf	_gblCBW& (0+255),w,b
 18562  001A2E  E16E               	bnz	l561
 18563  001A30  0E53               	movlw	83
 18564  001A32  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 18565  001A34  E16B               	bnz	l561
 18566  001A36  0E42               	movlw	66
 18567  001A38  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 18568  001A3A  E168               	bnz	l561
 18569  001A3C  0E43               	movlw	67
 18570  001A3E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 18571  001A40  A4D8               	btfss	status,2,c
 18572  001A42  D064               	goto	l561
 18573                           
 18574                           ; BSR set to: 1
 18575                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 18576  001A44  0E01               	movlw	1
 18577  001A46  0100               	movlb	0	; () banked
 18578  001A48  6F99               	movwf	_MSDCBWValid& (0+255),b
 18579                           
 18580                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 18581  001A4A  0101               	movlb	1	; () banked
 18582  001A4C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18583  001A4E  A4D8               	btfss	status,2,c
 18584  001A50  D052               	goto	l562
 18585                           
 18586                           ; BSR set to: 1
 18587  001A52  0E11               	movlw	17
 18588  001A54  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 18589  001A56  D04F               	goto	l562
 18590                           
 18591                           ; BSR set to: 1
 18592  001A58  510E               	movf	(_gblCBW+14)& (0+255),w,b
 18593  001A5A  B4D8               	btfsc	status,2,c
 18594  001A5C  D04C               	goto	l562
 18595                           
 18596                           ; BSR set to: 1
 18597  001A5E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 18598  001A62  0E3F               	movlw	63
 18599  001A64  164D               	andwf	??_MSDTasks,f,c
 18600  001A66  A4D8               	btfss	status,2,c
 18601  001A68  D046               	goto	l562
 18602                           
 18603                           ; BSR set to: 1
 18604                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 18605  001A6A  0E55               	movlw	85
 18606  001A6C  010D               	movlb	13	; () banked
 18607  001A6E  6F80               	movwf	128,b	;volatile
 18608  001A70  0E53               	movlw	83
 18609  001A72  6F81               	movwf	129,b	;volatile
 18610  001A74  0E42               	movlw	66
 18611  001A76  6F82               	movwf	130,b	;volatile
 18612  001A78  0E53               	movlw	83
 18613  001A7A  6F83               	movwf	131,b	;volatile
 18614                           
 18615                           ; BSR set to: 13
 18616                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18617  001A7C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18618  001A80  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18619  001A84  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18620  001A88  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18621                           
 18622                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18623  001A8C  0E00               	movlw	0
 18624  001A8E  6F88               	movwf	136,b	;volatile
 18625  001A90  0E00               	movlw	0
 18626  001A92  6F89               	movwf	137,b	;volatile
 18627  001A94  0E00               	movlw	0
 18628  001A96  6F8A               	movwf	138,b	;volatile
 18629  001A98  0E00               	movlw	0
 18630  001A9A  6F8B               	movwf	139,b	;volatile
 18631                           
 18632                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18633  001A9C  0E00               	movlw	0
 18634  001A9E  6F8C               	movwf	140,b	;volatile
 18635                           
 18636                           ; BSR set to: 13
 18637                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18638  001AA0  0100               	movlb	0	; () banked
 18639  001AA2  699F               	setf	_MSDCommandState& (0+255),b
 18640                           
 18641                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 18642  001AA4  0E00               	movlw	0
 18643  001AA6  6F9E               	movwf	_MSDReadState& (0+255),b
 18644                           
 18645                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 18646  001AA8  0E00               	movlw	0
 18647  001AAA  6F9D               	movwf	_MSDWriteState& (0+255),b
 18648                           
 18649                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 18650  001AAC  0E00               	movlw	0
 18651  001AAE  6F9C               	movwf	_MSDRetryAttempt& (0+255),b
 18652                           
 18653                           ; BSR set to: 0
 18654                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 18655  001AB0  0E03               	movlw	3
 18656  001AB2  0101               	movlb	1	; () banked
 18657  001AB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 18658  001AB6  B4D8               	btfsc	status,2,c
 18659  001AB8  D008               	goto	l563
 18660                           
 18661                           ; BSR set to: 1
 18662                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 18663  001ABA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 18664  001ABC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 18665  001ABE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 18666  001AC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 18667                           
 18668                           ; BSR set to: 1
 18669                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 18670  001AC2  0E00               	movlw	0
 18671  001AC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18672                           
 18673                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 18674  001AC6  0E00               	movlw	0
 18675  001AC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18676  001ACA                     l563:
 18677                           
 18678                           ; BSR set to: 1
 18679                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18680                           
 18681                           ; BSR set to: 1
 18682  001ACA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18683  001ACC  D002               	goto	l564
 18684                           
 18685                           ; BSR set to: 1
 18686                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18687  001ACE  0E01               	movlw	1
 18688  001AD0  D001               	goto	L18
 18689  001AD2                     l564:
 18690                           
 18691                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18692                           
 18693                           ; BSR set to: 0
 18694  001AD2  0E02               	movlw	2
 18695  001AD4                     L18:
 18696  001AD4  0100               	movlb	0	; () banked
 18697  001AD6  6FA0               	movwf	_MSD_State& (0+255),b
 18698                           
 18699                           ; BSR set to: 0
 18700                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18701                           
 18702                           ; BSR set to: 0
 18703  001AD8  0101               	movlb	1	; () banked
 18704  001ADA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18705  001ADC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18706  001ADE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18707  001AE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18708  001AE2  B4D8               	btfsc	status,2,c
 18709  001AE4  D002               	goto	l566
 18710                           
 18711                           ; BSR set to: 1
 18712                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18713  001AE6  0E00               	movlw	0
 18714  001AE8  D001               	goto	L19
 18715  001AEA                     l566:
 18716                           
 18717                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 18718                           
 18719                           ; BSR set to: 0
 18720  001AEA  0E01               	movlw	1
 18721  001AEC                     L19:
 18722  001AEC  0100               	movlb	0	; () banked
 18723  001AEE  6F9A               	movwf	_MSDHostNoData& (0+255),b
 18724                           
 18725                           ; BSR set to: 0
 18726                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 18727                           
 18728                           ; BSR set to: 0
 18729  001AF0  C10F  F09F         	movff	_gblCBW+15,_MSDCommandState
 18730                           
 18731                           ;usb_device_msd.c: 454: }
 18732  001AF4  0012               	return	
 18733  001AF6                     l562:
 18734                           
 18735                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 18736                           
 18737                           ; BSR set to: 0
 18738  001AF6  0E01               	movlw	1
 18739  001AF8  6E01               	movwf	USBStallEndpoint@dir,c
 18740  001AFA  0E02               	movlw	2
 18741  001AFC  EC3A  F01D         	call	_USBStallEndpoint
 18742                           
 18743                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 18744  001B00  0E00               	movlw	0
 18745  001B02  6E01               	movwf	USBStallEndpoint@dir,c
 18746  001B04  0E02               	movlw	2
 18747  001B06  EC3A  F01D         	call	_USBStallEndpoint
 18748                           
 18749                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 18750  001B0A  0012               	return	
 18751  001B0C                     l561:
 18752                           
 18753                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 18754  001B0C  0E01               	movlw	1
 18755  001B0E  6E01               	movwf	USBStallEndpoint@dir,c
 18756  001B10  0E02               	movlw	2
 18757  001B12  EC3A  F01D         	call	_USBStallEndpoint
 18758                           
 18759                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 18760  001B16  0E00               	movlw	0
 18761  001B18  6E01               	movwf	USBStallEndpoint@dir,c
 18762  001B1A  0E02               	movlw	2
 18763  001B1C  EC3A  F01D         	call	_USBStallEndpoint
 18764                           
 18765                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 18766  001B20  0E00               	movlw	0
 18767  001B22  0100               	movlb	0	; () banked
 18768  001B24  6F99               	movwf	_MSDCBWValid& (0+255),b
 18769                           
 18770                           ; BSR set to: 0
 18771                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 18772                           
 18773                           ; BSR set to: 0
 18774  001B26  0012               	return	
 18775  001B28                     
 18776                           ; BSR set to: 0
 18777                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 18778                           
 18779                           ; BSR set to: 0
 18780  001B28  ECB1  F01C         	call	_MSDProcessCommand	;wreg free
 18781  001B2C  0AFF               	xorlw	255
 18782  001B2E  A4D8               	btfss	status,2,c
 18783  001B30  0012               	return	
 18784                           
 18785                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 18786  001B32  0E03               	movlw	3
 18787  001B34  0100               	movlb	0	; () banked
 18788  001B36  6FA0               	movwf	_MSD_State& (0+255),b
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 18792  001B38  0012               	return	
 18793  001B3A                     
 18794                           ; BSR set to: 0
 18795                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 18796                           
 18797                           ; BSR set to: 0
 18798  001B3A  ECB1  F01C         	call	_MSDProcessCommand	;wreg free
 18799  001B3E  0AFF               	xorlw	255
 18800  001B40  A4D8               	btfss	status,2,c
 18801  001B42  0012               	return	
 18802                           
 18803                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 18804  001B44  010D               	movlb	13	; () banked
 18805  001B46  518C               	movf	140,w,b	;volatile
 18806  001B48  A4D8               	btfss	status,2,c
 18807  001B4A  D008               	goto	l575
 18808                           
 18809                           ; BSR set to: 13
 18810  001B4C  5188               	movf	136,w,b	;volatile
 18811  001B4E  1189               	iorwf	137,w,b	;volatile
 18812  001B50  118A               	iorwf	138,w,b	;volatile
 18813  001B52  118B               	iorwf	139,w,b	;volatile
 18814  001B54  B4D8               	btfsc	status,2,c
 18815  001B56  D002               	goto	l575
 18816                           
 18817                           ; BSR set to: 13
 18818                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 18819  001B58  0E02               	movlw	2
 18820  001B5A  6F8C               	movwf	140,b	;volatile
 18821  001B5C                     l575:
 18822                           
 18823                           ; BSR set to: 13
 18824                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 18825  001B5C  0E03               	movlw	3
 18826  001B5E  0100               	movlb	0	; () banked
 18827  001B60  6FA0               	movwf	_MSD_State& (0+255),b
 18828                           
 18829                           ; BSR set to: 0
 18830                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 18831  001B62  0012               	return	
 18832  001B64                     
 18833                           ; BSR set to: 0
 18834                           
 18835                           ; BSR set to: 0
 18836  001B64  C077  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 18837  001B68  C078  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 18838                           
 18839                           ; BSR set to: 0
 18840                           
 18841                           ; BSR set to: 0
 18842                           
 18843                           ; BSR set to: 0
 18844  001B6C  504E               	movf	_MSDTasks$2372,w,c
 18845  001B6E  104F               	iorwf	_MSDTasks$2372+1,w,c
 18846  001B70  B4D8               	btfsc	status,2,c
 18847  001B72  D00A               	goto	l577
 18848                           
 18849                           ; BSR set to: 0
 18850  001B74  C077  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 18851  001B78  C078  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 18852                           
 18853                           ; BSR set to: 0
 18854                           
 18855                           ; BSR set to: 0
 18856                           
 18857                           ; BSR set to: 0
 18858                           
 18859                           ; BSR set to: 0
 18860  001B7C  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 18861  001B80  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 18862  001B84  BEDF               	btfsc	indf2,7,c
 18863  001B86  0012               	return	
 18864  001B88                     l577:
 18865                           
 18866                           ; BSR set to: 0
 18867                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 18868                           
 18869                           ; BSR set to: 0
 18870  001B88  0E01               	movlw	1
 18871  001B8A  6E01               	movwf	USBTransferOnePacket@dir,c
 18872  001B8C  0E80               	movlw	128
 18873  001B8E  6E02               	movwf	USBTransferOnePacket@data,c
 18874  001B90  0E0D               	movlw	13
 18875  001B92  6E03               	movwf	USBTransferOnePacket@data+1,c
 18876  001B94  0E0D               	movlw	13
 18877  001B96  6E04               	movwf	USBTransferOnePacket@len,c
 18878  001B98  0E02               	movlw	2
 18879  001B9A  ECC4  F01E         	call	_USBTransferOnePacket
 18880  001B9E  C001  F08D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 18881  001BA2  C002  F08E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 18882                           
 18883                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 18884  001BA6  0100               	movlb	0	; () banked
 18885  001BA8  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 18886  001BAA  1190               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18887  001BAC  B4D8               	btfsc	status,2,c
 18888  001BAE  D006               	goto	u10990
 18889                           
 18890                           ; BSR set to: 0
 18891  001BB0  C08F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18892  001BB4  C090  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18893  001BB8  BEDF               	btfsc	indf2,7,c
 18894  001BBA  D00F               	goto	l586
 18895  001BBC                     u10990:
 18896                           
 18897                           ; BSR set to: 0
 18898                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 18899                           
 18900                           ; BSR set to: 0
 18901  001BBC  0E00               	movlw	0
 18902  001BBE  6E01               	movwf	USBTransferOnePacket@dir,c
 18903  001BC0  0E40               	movlw	64
 18904  001BC2  6E02               	movwf	USBTransferOnePacket@data,c
 18905  001BC4  0E0D               	movlw	13
 18906  001BC6  6E03               	movwf	USBTransferOnePacket@data+1,c
 18907  001BC8  0E40               	movlw	64
 18908  001BCA  6E04               	movwf	USBTransferOnePacket@len,c
 18909  001BCC  0E02               	movlw	2
 18910  001BCE  ECC4  F01E         	call	_USBTransferOnePacket
 18911  001BD2  C001  F08F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 18912  001BD6  C002  F090         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 18913  001BDA                     l586:
 18914                           
 18915                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 18916  001BDA  0E00               	movlw	0
 18917  001BDC  0100               	movlb	0	; () banked
 18918  001BDE  6FA0               	movwf	_MSD_State& (0+255),b
 18919                           
 18920                           ;usb_device_msd.c: 513: break;
 18921  001BE0  0012               	return	
 18922  001BE2                     
 18923                           ; BSR set to: 0
 18924                           ;usb_device_msd.c: 518: MSD_State=0x00;
 18925                           
 18926                           ; BSR set to: 0
 18927  001BE2  0E00               	movlw	0
 18928  001BE4  6FA0               	movwf	_MSD_State& (0+255),b
 18929                           
 18930                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 18931  001BE6  0E02               	movlw	2
 18932  001BE8  010D               	movlb	13	; () banked
 18933  001BEA  6F8C               	movwf	140,b	;volatile
 18934                           
 18935                           ; BSR set to: 13
 18936                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 18937  001BEC  0E00               	movlw	0
 18938  001BEE  6E01               	movwf	USBStallEndpoint@dir,c
 18939  001BF0  0E02               	movlw	2
 18940  001BF2  EC3A  F01D         	call	_USBStallEndpoint
 18941                           
 18942                           ;usb_device_msd.c: 521: }
 18943  001BF6  0012               	return	
 18944  001BF8                     l554:
 18945  001BF8  0100               	movlb	0	; () banked
 18946  001BFA  51A0               	movf	_MSD_State& (0+255),w,b
 18947                           
 18948                           ; Switch size 1, requested type "space"
 18949                           ; Number of cases is 4, Range of values is 0 to 3
 18950                           ; switch strategies available:
 18951                           ; Name         Instructions Cycles
 18952                           ; simple_byte           13     7 (average)
 18953                           ;	Chosen strategy is simple_byte
 18954  001BFC  0A00               	xorlw	0	; case 0
 18955  001BFE  B4D8               	btfsc	status,2,c
 18956  001C00  D6E3               	goto	l555
 18957  001C02  0A01               	xorlw	1	; case 1
 18958  001C04  B4D8               	btfsc	status,2,c
 18959  001C06  D790               	goto	l571
 18960  001C08  0A03               	xorlw	3	; case 2
 18961  001C0A  B4D8               	btfsc	status,2,c
 18962  001C0C  D796               	goto	l573
 18963  001C0E  0A01               	xorlw	1	; case 3
 18964  001C10  B4D8               	btfsc	status,2,c
 18965  001C12  D7A8               	goto	l576
 18966  001C14  D7E6               	goto	l589
 18967  001C16                     __end_of_MSDTasks:
 18968                           	opt stack 0
 18969                           tosu	equ	0xFFF
 18970                           tosh	equ	0xFFE
 18971                           tosl	equ	0xFFD
 18972                           pclath	equ	0xFFA
 18973                           tblptru	equ	0xFF8
 18974                           tblptrh	equ	0xFF7
 18975                           tblptrl	equ	0xFF6
 18976                           tablat	equ	0xFF5
 18977                           prodh	equ	0xFF4
 18978                           prodl	equ	0xFF3
 18979                           intcon	equ	0xFF2
 18980                           intcon2	equ	0xFF1
 18981                           intcon3	equ	0xFF0
 18982                           indf0	equ	0xFEF
 18983                           postinc0	equ	0xFEE
 18984                           fsr0h	equ	0xFEA
 18985                           fsr0l	equ	0xFE9
 18986                           wreg	equ	0xFE8
 18987                           indf1	equ	0xFE7
 18988                           postdec1	equ	0xFE5
 18989                           plusw1	equ	0xFE3
 18990                           fsr1h	equ	0xFE2
 18991                           fsr1l	equ	0xFE1
 18992                           indf2	equ	0xFDF
 18993                           postinc2	equ	0xFDE
 18994                           postdec2	equ	0xFDD
 18995                           plusw2	equ	0xFDB
 18996                           fsr2h	equ	0xFDA
 18997                           fsr2l	equ	0xFD9
 18998                           status	equ	0xFD8
 18999                           
 19000 ;; *************** function _MSDProcessCommand *****************
 19001 ;; Defined at:
 19002 ;;		line 553 in file "usb_device_msd.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;		None
 19005 ;; Auto vars:     Size  Location     Type
 19006 ;;		None
 19007 ;; Return value:  Size  Location     Type
 19008 ;;                  1    wreg      unsigned char 
 19009 ;; Registers used:
 19010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19011 ;; Tracked objects:
 19012 ;;		On entry : 0/0
 19013 ;;		On exit  : 0/0
 19014 ;;		Unchanged: 0/0
 19015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19018 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19019 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19020 ;;Total ram usage:        5 bytes
 19021 ;; Hardware stack levels used:    1
 19022 ;; Hardware stack levels required when called:    9
 19023 ;; This function calls:
 19024 ;;		_ExternalFlash_MediaDetect
 19025 ;;		_ExternalFlash_MediaInitialize
 19026 ;;		_MSDProcessCommandMediaAbsent
 19027 ;;		_MSDProcessCommandMediaPresent
 19028 ;; This function is called by:
 19029 ;;		_MSDTasks
 19030 ;; This function uses a non-reentrant model
 19031 ;;
 19032                           
 19033                           	psect	text94
 19034  003962                     __ptext94:
 19035                           	opt stack 0
 19036  003962                     _MSDProcessCommand:
 19037                           	opt stack 19
 19038                           
 19039                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19040                           
 19041                           ;incstack = 0
 19042  003962  C1F4  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19043  003966  C1F5  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19044  00396A  D801               	call	u9958
 19045  00396C  D00A               	goto	u9959
 19046  00396E                     u9958:
 19047  00396E  0005               	push	
 19048  003970  6EFA               	movwf	pclath,c
 19049  003972  0101               	movlb	1	; () banked
 19050  003974  51EC               	movf	(_LUN+6)& (0+255),w,b
 19051  003976  6EFD               	movwf	tosl,c
 19052  003978  51ED               	movf	(_LUN+7)& (0+255),w,b
 19053  00397A  6EFE               	movwf	tosh,c
 19054  00397C  6AFF               	clrf	tosu,c
 19055  00397E  50FA               	movf	pclath,w,c
 19056  003980  0012               	return		;indir
 19057  003982                     u9959:
 19058  003982  0900               	iorlw	0
 19059  003984  B4D8               	btfsc	status,2,c
 19060  003986  D00C               	goto	u9970
 19061  003988  0101               	movlb	1	; () banked
 19062  00398A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19063  00398C  0D01               	mullw	1
 19064  00398E  0E9B               	movlw	low _SoftDetach
 19065  003990  24F3               	addwf	prodl,w,c
 19066  003992  6ED9               	movwf	fsr2l,c
 19067  003994  0E00               	movlw	high _SoftDetach
 19068  003996  20F4               	addwfc	prodh,w,c
 19069  003998  6EDA               	movwf	fsr2h,c
 19070  00399A  04DE               	decf	postinc2,w,c
 19071  00399C  A4D8               	btfss	status,2,c
 19072  00399E  D019               	goto	l592
 19073  0039A0                     u9970:
 19074                           
 19075                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19076                           
 19077                           ; BSR set to: 1
 19078  0039A0  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19079  0039A4  0E01               	movlw	1
 19080  0039A6  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19081  0039A8  0E00               	movlw	0
 19082  0039AA  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19083  0039AC  2A48               	incf	??_MSDProcessCommand,f,c
 19084  0039AE  D003               	goto	u9984
 19085  0039B0                     u9985:
 19086  0039B0  90D8               	bcf	status,0,c
 19087  0039B2  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19088  0039B4  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19089  0039B6                     u9984:
 19090  0039B6  2E48               	decfsz	??_MSDProcessCommand,f,c
 19091  0039B8  D7FB               	goto	u9985
 19092  0039BA  1C49               	comf	??_MSDProcessCommand+1,w,c
 19093  0039BC  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19094  0039BE  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19095  0039C0  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19096  0039C2  504B               	movf	??_MSDProcessCommand+3,w,c
 19097  0039C4  0101               	movlb	1	; () banked
 19098  0039C6  176D               	andwf	_gblMediaPresent& (0+255),f,b
 19099  0039C8  504C               	movf	??_MSDProcessCommand+4,w,c
 19100  0039CA  176E               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19101                           
 19102                           ; BSR set to: 1
 19103                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19104  0039CC  ECB3  F030         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19105                           
 19106                           ;usb_device_msd.c: 563: }
 19107  0039D0  D04E               	goto	l599
 19108  0039D2                     l592:
 19109                           
 19110                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19111  0039D2  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19112  0039D6  0E01               	movlw	1
 19113  0039D8  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19114  0039DA  0E00               	movlw	0
 19115  0039DC  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19116  0039DE  2A48               	incf	??_MSDProcessCommand,f,c
 19117  0039E0  D003               	goto	u9994
 19118  0039E2                     u9995:
 19119  0039E2  90D8               	bcf	status,0,c
 19120  0039E4  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19121  0039E6  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19122  0039E8                     u9994:
 19123  0039E8  2E48               	decfsz	??_MSDProcessCommand,f,c
 19124  0039EA  D7FB               	goto	u9995
 19125  0039EC  0101               	movlb	1	; () banked
 19126  0039EE  516D               	movf	_gblMediaPresent& (0+255),w,b
 19127  0039F0  1649               	andwf	??_MSDProcessCommand+1,f,c
 19128  0039F2  516E               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19129  0039F4  164A               	andwf	??_MSDProcessCommand+2,f,c
 19130  0039F6  5049               	movf	??_MSDProcessCommand+1,w,c
 19131  0039F8  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19132  0039FA  A4D8               	btfss	status,2,c
 19133  0039FC  D036               	goto	l596
 19134                           
 19135                           ; BSR set to: 1
 19136                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19137  0039FE  C1F4  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19138  003A02  C1F5  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19139  003A06  D801               	call	u10018
 19140  003A08  D009               	goto	u10019
 19141  003A0A                     u10018:
 19142  003A0A  0005               	push	
 19143  003A0C  6EFA               	movwf	pclath,c
 19144  003A0E  51E6               	movf	_LUN& (0+255),w,b
 19145  003A10  6EFD               	movwf	tosl,c
 19146  003A12  51E7               	movf	(_LUN+1)& (0+255),w,b
 19147  003A14  6EFE               	movwf	tosh,c
 19148  003A16  6AFF               	clrf	tosu,c
 19149  003A18  50FA               	movf	pclath,w,c
 19150  003A1A  0012               	return		;indir
 19151  003A1C                     u10019:
 19152  003A1C  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19153  003A1E  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19154  003A20  B4D8               	btfsc	status,2,c
 19155  003A22  D020               	goto	l597
 19156                           
 19157                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19158  003A24  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19159  003A28  0E01               	movlw	1
 19160  003A2A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19161  003A2C  0E00               	movlw	0
 19162  003A2E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19163  003A30  2A48               	incf	??_MSDProcessCommand,f,c
 19164  003A32  D003               	goto	u10034
 19165  003A34                     u10035:
 19166  003A34  90D8               	bcf	status,0,c
 19167  003A36  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19168  003A38  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19169  003A3A                     u10034:
 19170  003A3A  2E48               	decfsz	??_MSDProcessCommand,f,c
 19171  003A3C  D7FB               	goto	u10035
 19172  003A3E  5049               	movf	??_MSDProcessCommand+1,w,c
 19173  003A40  0101               	movlb	1	; () banked
 19174  003A42  136D               	iorwf	_gblMediaPresent& (0+255),f,b
 19175  003A44  504A               	movf	??_MSDProcessCommand+2,w,c
 19176  003A46  136E               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19177                           
 19178                           ; BSR set to: 1
 19179                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19180  003A48  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19181  003A4A  0BF0               	andlw	-16
 19182  003A4C  0906               	iorlw	6
 19183  003A4E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19184                           
 19185                           ; BSR set to: 1
 19186                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19187  003A50  0E28               	movlw	40
 19188  003A52  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19189                           
 19190                           ; BSR set to: 1
 19191                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19192  003A54  0E00               	movlw	0
 19193  003A56  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19194                           
 19195                           ; BSR set to: 1
 19196                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19197  003A58  0E01               	movlw	1
 19198  003A5A  010D               	movlb	13	; () banked
 19199  003A5C  6F8C               	movwf	140,b	;volatile
 19200                           
 19201                           ; BSR set to: 13
 19202                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19203  003A5E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19204                           
 19205                           ;usb_device_msd.c: 589: }
 19206  003A62  D005               	goto	l599
 19207  003A64                     l597:
 19208                           
 19209                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19210  003A64  ECB3  F030         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19211                           
 19212                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19213  003A68  D002               	goto	l599
 19214  003A6A                     l596:
 19215                           
 19216                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19217  003A6A  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19218  003A6E                     l599:
 19219                           
 19220                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19221  003A6E  0100               	movlb	0	; () banked
 19222  003A70  519F               	movf	_MSDCommandState& (0+255),w,b
 19223  003A72  0012               	return	
 19224  003A74                     __end_of_MSDProcessCommand:
 19225                           	opt stack 0
 19226                           tosu	equ	0xFFF
 19227                           tosh	equ	0xFFE
 19228                           tosl	equ	0xFFD
 19229                           pclath	equ	0xFFA
 19230                           tblptru	equ	0xFF8
 19231                           tblptrh	equ	0xFF7
 19232                           tblptrl	equ	0xFF6
 19233                           tablat	equ	0xFF5
 19234                           prodh	equ	0xFF4
 19235                           prodl	equ	0xFF3
 19236                           intcon	equ	0xFF2
 19237                           intcon2	equ	0xFF1
 19238                           intcon3	equ	0xFF0
 19239                           indf0	equ	0xFEF
 19240                           postinc0	equ	0xFEE
 19241                           fsr0h	equ	0xFEA
 19242                           fsr0l	equ	0xFE9
 19243                           wreg	equ	0xFE8
 19244                           indf1	equ	0xFE7
 19245                           postdec1	equ	0xFE5
 19246                           plusw1	equ	0xFE3
 19247                           fsr1h	equ	0xFE2
 19248                           fsr1l	equ	0xFE1
 19249                           indf2	equ	0xFDF
 19250                           postinc2	equ	0xFDE
 19251                           postdec2	equ	0xFDD
 19252                           plusw2	equ	0xFDB
 19253                           fsr2h	equ	0xFDA
 19254                           fsr2l	equ	0xFD9
 19255                           status	equ	0xFD8
 19256                           
 19257 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19258 ;; Defined at:
 19259 ;;		line 635 in file "usb_device_msd.c"
 19260 ;; Parameters:    Size  Location     Type
 19261 ;;		None
 19262 ;; Auto vars:     Size  Location     Type
 19263 ;;		None
 19264 ;; Return value:  Size  Location     Type
 19265 ;;                  1    wreg      void 
 19266 ;; Registers used:
 19267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19268 ;; Tracked objects:
 19269 ;;		On entry : 0/0
 19270 ;;		On exit  : 0/0
 19271 ;;		Unchanged: 0/0
 19272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19277 ;;Total ram usage:        0 bytes
 19278 ;; Hardware stack levels used:    1
 19279 ;; Hardware stack levels required when called:    8
 19280 ;; This function calls:
 19281 ;;		_MSDErrorHandler
 19282 ;;		_MSDProcessCommandMediaPresent
 19283 ;;		_ResetSenseData
 19284 ;; This function is called by:
 19285 ;;		_MSDProcessCommand
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           	psect	text95
 19290  006166                     __ptext95:
 19291                           	opt stack 0
 19292  006166                     _MSDProcessCommandMediaAbsent:
 19293                           	opt stack 19
 19294                           
 19295                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;incstack = 0
 19299  006166  D01E               	goto	l603
 19300  006168                     
 19301                           ;usb_device_msd.c: 646: ResetSenseData();
 19302  006168  ECE4  F030         	call	_ResetSenseData	;wreg free
 19303                           
 19304                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19305  00616C  0101               	movlb	1	; () banked
 19306  00616E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19307  006170  0BF0               	andlw	-16
 19308  006172  0902               	iorlw	2
 19309  006174  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19310                           
 19311                           ; BSR set to: 1
 19312                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19313  006176  0E3A               	movlw	58
 19314  006178  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19315                           
 19316                           ; BSR set to: 1
 19317                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19318  00617A  0E00               	movlw	0
 19319  00617C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19320                           
 19321                           ; BSR set to: 1
 19322                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19323  00617E  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19324                           
 19325                           ;usb_device_msd.c: 655: break;
 19326  006182  0012               	return	
 19327  006184                     
 19328                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19329  006184  0E01               	movlw	1
 19330  006186  010D               	movlb	13	; () banked
 19331  006188  6F8C               	movwf	140,b	;volatile
 19332                           
 19333                           ; BSR set to: 13
 19334                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19335  00618A  0100               	movlb	0	; () banked
 19336  00618C  699F               	setf	_MSDCommandState& (0+255),b
 19337                           
 19338                           ;usb_device_msd.c: 665: break;
 19339  00618E  0012               	return	
 19340  006190                     
 19341                           ; BSR set to: 0
 19342                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19343                           
 19344                           ; BSR set to: 0
 19345  006190  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19346                           
 19347                           ;usb_device_msd.c: 671: break;
 19348  006194  0012               	return	
 19349  006196                     
 19350                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19351  006196  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19352                           
 19353                           ;usb_device_msd.c: 677: break;
 19354  00619A  0012               	return	
 19355  00619C                     
 19356                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 19357  00619C  0E7F               	movlw	127
 19358  00619E  EC41  F01E         	call	_MSDErrorHandler
 19359                           
 19360                           ;usb_device_msd.c: 685: }
 19361                           
 19362                           ;usb_device_msd.c: 684: break;
 19363  0061A2  0012               	return	
 19364  0061A4                     l603:
 19365  0061A4  0100               	movlb	0	; () banked
 19366  0061A6  519F               	movf	_MSDCommandState& (0+255),w,b
 19367                           
 19368                           ; Switch size 1, requested type "space"
 19369                           ; Number of cases is 5, Range of values is 0 to 253
 19370                           ; switch strategies available:
 19371                           ; Name         Instructions Cycles
 19372                           ; simple_byte           16     9 (average)
 19373                           ;	Chosen strategy is simple_byte
 19374  0061A8  0A00               	xorlw	0	; case 0
 19375  0061AA  B4D8               	btfsc	status,2,c
 19376  0061AC  D7EB               	goto	l606
 19377  0061AE  0A03               	xorlw	3	; case 3
 19378  0061B0  B4D8               	btfsc	status,2,c
 19379  0061B2  D7DA               	goto	l604
 19380  0061B4  0A11               	xorlw	17	; case 18
 19381  0061B6  B4D8               	btfsc	status,2,c
 19382  0061B8  D7EB               	goto	l608
 19383  0061BA  0A0C               	xorlw	12	; case 30
 19384  0061BC  B4D8               	btfsc	status,2,c
 19385  0061BE  D7E2               	goto	l606
 19386  0061C0  0AE3               	xorlw	227	; case 253
 19387  0061C2  B4D8               	btfsc	status,2,c
 19388  0061C4  D7E8               	goto	l609
 19389  0061C6  D7EA               	goto	l610
 19390  0061C8                     __end_of_MSDProcessCommandMediaAbsent:
 19391                           	opt stack 0
 19392                           tosu	equ	0xFFF
 19393                           tosh	equ	0xFFE
 19394                           tosl	equ	0xFFD
 19395                           pclath	equ	0xFFA
 19396                           tblptru	equ	0xFF8
 19397                           tblptrh	equ	0xFF7
 19398                           tblptrl	equ	0xFF6
 19399                           tablat	equ	0xFF5
 19400                           prodh	equ	0xFF4
 19401                           prodl	equ	0xFF3
 19402                           intcon	equ	0xFF2
 19403                           intcon2	equ	0xFF1
 19404                           intcon3	equ	0xFF0
 19405                           indf0	equ	0xFEF
 19406                           postinc0	equ	0xFEE
 19407                           fsr0h	equ	0xFEA
 19408                           fsr0l	equ	0xFE9
 19409                           wreg	equ	0xFE8
 19410                           indf1	equ	0xFE7
 19411                           postdec1	equ	0xFE5
 19412                           plusw1	equ	0xFE3
 19413                           fsr1h	equ	0xFE2
 19414                           fsr1l	equ	0xFE1
 19415                           indf2	equ	0xFDF
 19416                           postinc2	equ	0xFDE
 19417                           postdec2	equ	0xFDD
 19418                           plusw2	equ	0xFDB
 19419                           fsr2h	equ	0xFDA
 19420                           fsr2l	equ	0xFD9
 19421                           status	equ	0xFD8
 19422                           
 19423 ;; *************** function _MSDProcessCommandMediaPresent *****************
 19424 ;; Defined at:
 19425 ;;		line 712 in file "usb_device_msd.c"
 19426 ;; Parameters:    Size  Location     Type
 19427 ;;		None
 19428 ;; Auto vars:     Size  Location     Type
 19429 ;;  capacity        4   66[COMRAM] struct .
 19430 ;;  sectorSize      4   62[COMRAM] struct .
 19431 ;;  i               1   70[COMRAM] unsigned char 
 19432 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 19433 ;; Return value:  Size  Location     Type
 19434 ;;                  1    wreg      void 
 19435 ;; Registers used:
 19436 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19437 ;; Tracked objects:
 19438 ;;		On entry : 0/0
 19439 ;;		On exit  : 0/0
 19440 ;;		Unchanged: 0/0
 19441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19443 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19445 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19446 ;;Total ram usage:       14 bytes
 19447 ;; Hardware stack levels used:    1
 19448 ;; Hardware stack levels required when called:    7
 19449 ;; This function calls:
 19450 ;;		_ExternalFlash_CapacityRead
 19451 ;;		_ExternalFlash_SectorSizeRead
 19452 ;;		_ExternalFlash_WriteProtectStateGet
 19453 ;;		_MSDCheckForErrorCases
 19454 ;;		_MSDComputeDeviceInAndResidue
 19455 ;;		_MSDErrorHandler
 19456 ;;		_MSDReadHandler
 19457 ;;		_MSDWriteHandler
 19458 ;;		_ResetSenseData
 19459 ;;		_USBTransferOnePacket
 19460 ;;		_memcpy
 19461 ;; This function is called by:
 19462 ;;		_MSDProcessCommand
 19463 ;;		_MSDProcessCommandMediaAbsent
 19464 ;; This function uses a non-reentrant model
 19465 ;;
 19466                           
 19467                           	psect	text96
 19468  00049C                     __ptext96:
 19469                           	opt stack 0
 19470  00049C                     _MSDProcessCommandMediaPresent:
 19471                           	opt stack 20
 19472                           
 19473                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 19474                           
 19475                           ;incstack = 0
 19476  00049C  D1B9               	goto	l614
 19477  00049E                     
 19478                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 19479  00049E  EC04  F012         	call	_MSDReadHandler	;wreg free
 19480  0004A2  0900               	iorlw	0
 19481  0004A4  A4D8               	btfss	status,2,c
 19482  0004A6  0012               	return	
 19483                           
 19484                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 19485  0004A8  0100               	movlb	0	; () banked
 19486  0004AA  699F               	setf	_MSDCommandState& (0+255),b
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 19490  0004AC  0012               	return	
 19491  0004AE                     
 19492                           ; BSR set to: 0
 19493                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 19494                           
 19495                           ; BSR set to: 0
 19496  0004AE  EC0F  F009         	call	_MSDWriteHandler	;wreg free
 19497  0004B2  0900               	iorlw	0
 19498  0004B4  A4D8               	btfss	status,2,c
 19499  0004B6  0012               	return	
 19500                           
 19501                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 19502  0004B8  0100               	movlb	0	; () banked
 19503  0004BA  699F               	setf	_MSDCommandState& (0+255),b
 19504                           
 19505                           ; BSR set to: 0
 19506                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 19507  0004BC  0012               	return	
 19508  0004BE                     
 19509                           ; BSR set to: 0
 19510                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 19511                           
 19512                           ; BSR set to: 0
 19513  0004BE  059A               	decf	_MSDHostNoData& (0+255),w,b
 19514  0004C0  A4D8               	btfss	status,2,c
 19515  0004C2  D002               	goto	l621
 19516                           
 19517                           ; BSR set to: 0
 19518                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 19519  0004C4  699F               	setf	_MSDCommandState& (0+255),b
 19520                           
 19521                           ;usb_device_msd.c: 751: break;
 19522  0004C6  0012               	return	
 19523  0004C8                     l621:
 19524                           
 19525                           ; BSR set to: 0
 19526                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 19527  0004C8  C112  F08C         	movff	_gblCBW+18,_TransferLength+1
 19528                           
 19529                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 19530  0004CC  C113  F08B         	movff	_gblCBW+19,_TransferLength
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 19534  0004D0  C08B  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 19535  0004D4  C08C  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 19536  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 19537  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 19538  0004DC  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 19539  0004E0  0900               	iorlw	0
 19540  0004E2  A4D8               	btfss	status,2,c
 19541  0004E4  0012               	return	
 19542                           
 19543                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 19544                           
 19545                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 19546  0004E6  0E00               	movlw	0
 19547  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19548  0004EA  0E24               	movlw	36
 19549  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19550  0004EE  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19551                           
 19552                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 19553  0004F2  0E00               	movlw	0
 19554  0004F4  6E01               	movwf	memcpy@d1,c
 19555  0004F6  0E06               	movlw	6
 19556  0004F8  6E02               	movwf	memcpy@d1+1,c
 19557  0004FA  0E49               	movlw	low _inq_resp
 19558  0004FC  6E03               	movwf	memcpy@s1,c
 19559  0004FE  0E8F               	movlw	high _inq_resp
 19560  000500  6E04               	movwf	memcpy@s1+1,c
 19561  000502  5003               	movf	memcpy@s1,w,c
 19562  000504  1004               	iorwf	memcpy@s1+1,w,c
 19563  000506  A4D8               	btfss	status,2,c
 19564  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 19565  00050A  6E05               	movwf	memcpy@s1+2,c
 19566  00050C  0E00               	movlw	0
 19567  00050E  6E07               	movwf	memcpy@n+1,c
 19568  000510  0E24               	movlw	36
 19569  000512  6E06               	movwf	memcpy@n,c
 19570  000514  EC1C  F030         	call	_memcpy	;wreg free
 19571                           
 19572                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 19573  000518  0EFD               	movlw	253
 19574  00051A  0100               	movlb	0	; () banked
 19575  00051C  6F9F               	movwf	_MSDCommandState& (0+255),b
 19576                           
 19577                           ;usb_device_msd.c: 773: break;
 19578  00051E  0012               	return	
 19579  000520                     
 19580                           ; BSR set to: 0
 19581                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 19582                           
 19583                           ; BSR set to: 0
 19584  000520  C1F4  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 19585  000524  C1F5  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 19586  000528  D801               	call	u9098
 19587  00052A  D00A               	goto	u9099
 19588  00052C                     u9098:
 19589  00052C  0005               	push	
 19590  00052E  6EFA               	movwf	pclath,c
 19591  000530  0101               	movlb	1	; () banked
 19592  000532  51E8               	movf	(_LUN+2)& (0+255),w,b
 19593  000534  6EFD               	movwf	tosl,c
 19594  000536  51E9               	movf	(_LUN+3)& (0+255),w,b
 19595  000538  6EFE               	movwf	tosh,c
 19596  00053A  6AFF               	clrf	tosu,c
 19597  00053C  50FA               	movf	pclath,w,c
 19598  00053E  0012               	return		;indir
 19599  000540                     u9099:
 19600  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 19601  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 19602  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 19603  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 19604                           
 19605                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 19606  000550  C1F4  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 19607  000554  C1F5  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 19608  000558  D801               	call	u9108
 19609  00055A  D00A               	goto	u9109
 19610  00055C                     u9108:
 19611  00055C  0005               	push	
 19612  00055E  6EFA               	movwf	pclath,c
 19613  000560  0101               	movlb	1	; () banked
 19614  000562  51EA               	movf	(_LUN+4)& (0+255),w,b
 19615  000564  6EFD               	movwf	tosl,c
 19616  000566  51EB               	movf	(_LUN+5)& (0+255),w,b
 19617  000568  6EFE               	movwf	tosh,c
 19618  00056A  6AFF               	clrf	tosu,c
 19619  00056C  50FA               	movf	pclath,w,c
 19620  00056E  0012               	return		;indir
 19621  000570                     u9109:
 19622  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19623  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19624  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19625  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19626                           
 19627                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19628  00057C  EE26 F000          	lfsr	2,1536
 19629  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19630                           
 19631                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19632  000584  EE26 F001          	lfsr	2,1537	;volatile
 19633  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19634                           
 19635                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19636  00058C  EE26 F002          	lfsr	2,1538	;volatile
 19637  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19638                           
 19639                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 19640  000594  EE26 F003          	lfsr	2,1539	;volatile
 19641  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 19642                           
 19643                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 19644  00059C  EE26 F004          	lfsr	2,1540	;volatile
 19645  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 19646                           
 19647                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 19648  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 19649  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 19650                           
 19651                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 19652  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 19653  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 19654                           
 19655                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 19656  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 19657  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 19658                           
 19659                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 19660  0005BC  0E00               	movlw	0
 19661  0005BE  0100               	movlb	0	; () banked
 19662  0005C0  6F8C               	movwf	(_TransferLength+1)& (0+255),b
 19663  0005C2  0E08               	movlw	8
 19664  0005C4  6F8B               	movwf	_TransferLength& (0+255),b
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 19668  0005C6  0E00               	movlw	0
 19669  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19670  0005CA  0E08               	movlw	8
 19671  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19672  0005CE  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19673                           
 19674                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19675  0005D2  0EFD               	movlw	253
 19676  0005D4  0100               	movlb	0	; () banked
 19677  0005D6  6F9F               	movwf	_MSDCommandState& (0+255),b
 19678                           
 19679                           ;usb_device_msd.c: 802: break;
 19680  0005D8  0012               	return	
 19681  0005DA                     
 19682                           ; BSR set to: 0
 19683                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19684                           
 19685                           ; BSR set to: 0
 19686  0005DA  059A               	decf	_MSDHostNoData& (0+255),w,b
 19687  0005DC  A4D8               	btfss	status,2,c
 19688  0005DE  D002               	goto	l625
 19689                           
 19690                           ; BSR set to: 0
 19691                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19692  0005E0  699F               	setf	_MSDCommandState& (0+255),b
 19693                           
 19694                           ;usb_device_msd.c: 814: break;
 19695  0005E2  0012               	return	
 19696  0005E4                     l625:
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19700                           
 19701                           ; BSR set to: 0
 19702  0005E4  0E00               	movlw	0
 19703  0005E6  6F8C               	movwf	(_TransferLength+1)& (0+255),b
 19704  0005E8  0E12               	movlw	18
 19705  0005EA  6F8B               	movwf	_TransferLength& (0+255),b
 19706                           
 19707                           ; BSR set to: 0
 19708                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19709  0005EC  0E00               	movlw	0
 19710  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19711  0005F0  0E12               	movlw	18
 19712  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19713  0005F4  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19714                           
 19715                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 19716  0005F8  0E00               	movlw	0
 19717  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19718  0005FC                     l11930:
 19719  0005FC  0E11               	movlw	17
 19720  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 19721  000600  D001               	goto	l626
 19722  000602  D014               	goto	u9130
 19723  000604                     l626:
 19724                           
 19725                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 19726  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19727  000606  0D01               	mullw	1
 19728  000608  0E1F               	movlw	low _gblSenseData
 19729  00060A  24F3               	addwf	prodl,w,c
 19730  00060C  6ED9               	movwf	fsr2l,c
 19731  00060E  0E01               	movlw	high _gblSenseData
 19732  000610  20F4               	addwfc	prodh,w,c
 19733  000612  6EDA               	movwf	fsr2h,c
 19734  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19735  000616  0D01               	mullw	1
 19736  000618  0E00               	movlw	0
 19737  00061A  24F3               	addwf	prodl,w,c
 19738  00061C  6EE1               	movwf	fsr1l,c
 19739  00061E  0E06               	movlw	6
 19740  000620  20F4               	addwfc	prodh,w,c
 19741  000622  6EE2               	movwf	fsr1h,c
 19742  000624  CFDF FFE7          	movff	indf2,indf1
 19743  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19744  00062A  D7E8               	goto	l11930
 19745  00062C                     u9130:
 19746                           
 19747                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 19748  00062C  0EFD               	movlw	253
 19749  00062E  0100               	movlb	0	; () banked
 19750  000630  6F9F               	movwf	_MSDCommandState& (0+255),b
 19751                           
 19752                           ;usb_device_msd.c: 827: break;
 19753  000632  0012               	return	
 19754  000634                     l628:
 19755                           
 19756                           ; BSR set to: 0
 19757                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 19758  000634  0E03               	movlw	3
 19759  000636  CFE8 F600          	movff	wreg,1536
 19760                           
 19761                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 19762  00063A  0E00               	movlw	0
 19763  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 19764                           
 19765                           ; BSR set to: 0
 19766                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 19767  000640  C1F4  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19768  000644  C1F5  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19769  000648  D801               	call	u9148
 19770  00064A  D00A               	goto	u9149
 19771  00064C                     u9148:
 19772  00064C  0005               	push	
 19773  00064E  6EFA               	movwf	pclath,c
 19774  000650  0101               	movlb	1	; () banked
 19775  000652  51F0               	movf	(_LUN+10)& (0+255),w,b
 19776  000654  6EFD               	movwf	tosl,c
 19777  000656  51F1               	movf	(_LUN+11)& (0+255),w,b
 19778  000658  6EFE               	movwf	tosh,c
 19779  00065A  6AFF               	clrf	tosu,c
 19780  00065C  50FA               	movf	pclath,w,c
 19781  00065E  0012               	return		;indir
 19782  000660                     u9149:
 19783  000660  0900               	iorlw	0
 19784  000662  A4D8               	btfss	status,2,c
 19785  000664  D004               	goto	l630
 19786  000666  0E00               	movlw	0
 19787  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19788  00066A  0E00               	movlw	0
 19789  00066C  D003               	goto	L20
 19790  00066E                     l630:
 19791  00066E  0E00               	movlw	0
 19792  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 19793  000672  0E80               	movlw	128
 19794  000674                     L20:
 19795  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 19796  000676  EE26 F002          	lfsr	2,1538	;volatile
 19797  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 19798                           
 19799                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 19800  00067E  0E00               	movlw	0
 19801  000680  CFE8 F603          	movff	wreg,1539	;volatile
 19802                           
 19803                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 19804  000684  0E00               	movlw	0
 19805  000686  0100               	movlb	0	; () banked
 19806  000688  6F8C               	movwf	(_TransferLength+1)& (0+255),b
 19807  00068A  0E04               	movlw	4
 19808  00068C  6F8B               	movwf	_TransferLength& (0+255),b
 19809                           
 19810                           ; BSR set to: 0
 19811                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 19812  00068E  0E00               	movlw	0
 19813  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19814  000692  0E04               	movlw	4
 19815  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19816  000696  EC5A  F02B         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19817                           
 19818                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 19819  00069A  0EFD               	movlw	253
 19820  00069C  0100               	movlb	0	; () banked
 19821  00069E  6F9F               	movwf	_MSDCommandState& (0+255),b
 19822                           
 19823                           ;usb_device_msd.c: 839: break;
 19824  0006A0  0012               	return	
 19825  0006A2                     
 19826                           ; BSR set to: 0
 19827                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 19828                           
 19829                           ; BSR set to: 0
 19830  0006A2  0101               	movlb	1	; () banked
 19831  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19832  0006A6  0BF0               	andlw	-16
 19833  0006A8  0905               	iorlw	5
 19834  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19835                           
 19836                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 19837  0006AC  0E20               	movlw	32
 19838  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19839                           
 19840                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 19841  0006B0  0E00               	movlw	0
 19842  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19843                           
 19844                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 19845  0006B4  0E01               	movlw	1
 19846  0006B6  010D               	movlb	13	; () banked
 19847  0006B8  6F8C               	movwf	140,b	;volatile
 19848                           
 19849                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 19850  0006BA  0E00               	movlw	0
 19851  0006BC  6F88               	movwf	136,b	;volatile
 19852  0006BE  0E00               	movlw	0
 19853  0006C0  6F89               	movwf	137,b	;volatile
 19854  0006C2  0E00               	movlw	0
 19855  0006C4  6F8A               	movwf	138,b	;volatile
 19856  0006C6  0E00               	movlw	0
 19857  0006C8  6F8B               	movwf	139,b	;volatile
 19858                           
 19859                           ; BSR set to: 13
 19860                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 19861  0006CA  0100               	movlb	0	; () banked
 19862  0006CC  699F               	setf	_MSDCommandState& (0+255),b
 19863                           
 19864                           ;usb_device_msd.c: 848: break;
 19865  0006CE  0012               	return	
 19866  0006D0                     
 19867                           ; BSR set to: 0
 19868                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 19869                           
 19870                           ; BSR set to: 0
 19871  0006D0  0E00               	movlw	0
 19872  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 19873  0006D4  0E00               	movlw	0
 19874  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 19875  0006D8  0E00               	movlw	0
 19876  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 19877  0006DC  0E00               	movlw	0
 19878  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 19879  0006E0  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 19880  0006E4  0900               	iorlw	0
 19881  0006E6  A4D8               	btfss	status,2,c
 19882  0006E8  0012               	return	
 19883                           
 19884                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 19885                           
 19886                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 19887  0006EA  0101               	movlb	1	; () banked
 19888  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19889  0006EE  0B0F               	andlw	15
 19890  0006F0  0A06               	xorlw	6
 19891  0006F2  A4D8               	btfss	status,2,c
 19892  0006F4  D007               	goto	l636
 19893                           
 19894                           ; BSR set to: 1
 19895  0006F6  010D               	movlb	13	; () banked
 19896  0006F8  058C               	decf	140,w,b	;volatile
 19897  0006FA  A4D8               	btfss	status,2,c
 19898  0006FC  D003               	goto	l636
 19899                           
 19900                           ; BSR set to: 13
 19901                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 19902  0006FE  0100               	movlb	0	; () banked
 19903  000700  699F               	setf	_MSDCommandState& (0+255),b
 19904                           
 19905                           ;usb_device_msd.c: 870: }
 19906  000702  0012               	return	
 19907  000704                     l636:
 19908                           
 19909                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 19910                           
 19911                           ; BSR set to: 0
 19912  000704  ECE4  F030         	call	_ResetSenseData	;wreg free
 19913                           
 19914                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 19915  000708  0E00               	movlw	0
 19916  00070A  010D               	movlb	13	; () banked
 19917  00070C  6F88               	movwf	136,b	;volatile
 19918  00070E  0E00               	movlw	0
 19919  000710  6F89               	movwf	137,b	;volatile
 19920  000712  0E00               	movlw	0
 19921  000714  6F8A               	movwf	138,b	;volatile
 19922  000716  0E00               	movlw	0
 19923  000718  6F8B               	movwf	139,b	;volatile
 19924                           
 19925                           ; BSR set to: 13
 19926                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 19927  00071A  0100               	movlb	0	; () banked
 19928  00071C  699F               	setf	_MSDCommandState& (0+255),b
 19929                           
 19930                           ; BSR set to: 0
 19931                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 19932  00071E  0012               	return	
 19933  000720                     
 19934                           ; BSR set to: 0
 19935                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 19936                           
 19937                           ; BSR set to: 0
 19938                           
 19939                           ; BSR set to: 0
 19940  000720  0E00               	movlw	0
 19941  000722  010D               	movlb	13	; () banked
 19942  000724  6F88               	movwf	136,b	;volatile
 19943  000726  0E00               	movlw	0
 19944  000728  6F89               	movwf	137,b	;volatile
 19945  00072A  0E00               	movlw	0
 19946  00072C  6F8A               	movwf	138,b	;volatile
 19947  00072E  0E00               	movlw	0
 19948  000730  6F8B               	movwf	139,b	;volatile
 19949                           
 19950                           ; BSR set to: 13
 19951                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 19952  000732  0100               	movlb	0	; () banked
 19953  000734  699F               	setf	_MSDCommandState& (0+255),b
 19954                           
 19955                           ;usb_device_msd.c: 885: break;
 19956  000736  0012               	return	
 19957  000738                     
 19958                           ; BSR set to: 0
 19959                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 19960                           
 19961                           ; BSR set to: 0
 19962  000738  518D               	movf	_USBMSDInHandle& (0+255),w,b
 19963  00073A  118E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 19964  00073C  B4D8               	btfsc	status,2,c
 19965  00073E  D006               	goto	u9200
 19966                           
 19967                           ; BSR set to: 0
 19968  000740  C08D  FFD9         	movff	_USBMSDInHandle,fsr2l
 19969  000744  C08E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 19970  000748  BEDF               	btfsc	indf2,7,c
 19971  00074A  0012               	return	
 19972  00074C                     u9200:
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 19976                           
 19977                           ; BSR set to: 0
 19978  00074C  0101               	movlb	1	; () banked
 19979  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 19980  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19981  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19982  000754  E104               	bnz	u9210
 19983  000756  0E40               	movlw	64
 19984  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 19985  00075A  A0D8               	btfss	status,0,c
 19986  00075C  D009               	goto	l644
 19987  00075E                     u9210:
 19988                           
 19989                           ; BSR set to: 1
 19990                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 19991  00075E  0E40               	movlw	64
 19992  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 19993                           
 19994                           ; BSR set to: 1
 19995                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 19996  000762  0E40               	movlw	64
 19997  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19998  000766  0E00               	movlw	0
 19999  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20000  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20001  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20002                           
 20003                           ;usb_device_msd.c: 900: }
 20004  00076E  D00A               	goto	l645
 20005  000770                     l644:
 20006                           
 20007                           ; BSR set to: 1
 20008                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20009  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20010                           
 20011                           ; BSR set to: 1
 20012                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20013  000774  0E00               	movlw	0
 20014  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20015  000778  0E00               	movlw	0
 20016  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20017  00077C  0E00               	movlw	0
 20018  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20019  000780  0E00               	movlw	0
 20020  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20021  000784                     l645:
 20022                           
 20023                           ; BSR set to: 1
 20024                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20025                           
 20026                           ; BSR set to: 1
 20027  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20028  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20029  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20030  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20031  00078C  0100               	movlb	0	; () banked
 20032  00078E  5D8B               	subwf	_TransferLength& (0+255),w,b
 20033  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20034  000792  598C               	subwfb	(_TransferLength+1)& (0+255),w,b
 20035  000794  A0D8               	btfss	status,0,c
 20036  000796  D005               	goto	l646
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20040  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20041  00079A  5F8B               	subwf	_TransferLength& (0+255),f,b
 20042  00079C  0E00               	movlw	0
 20043  00079E  5B8C               	subwfb	(_TransferLength+1)& (0+255),f,b
 20044                           
 20045                           ;usb_device_msd.c: 918: }
 20046  0007A0  D01A               	goto	u9240
 20047  0007A2                     l646:
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20051                           
 20052                           ; BSR set to: 0
 20053  0007A2  0E00               	movlw	0
 20054  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20055  0007A6  D013               	goto	l648
 20056  0007A8                     
 20057                           ; BSR set to: 0
 20058                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20059                           
 20060                           ; BSR set to: 0
 20061  0007A8  518B               	movf	_TransferLength& (0+255),w,b
 20062  0007AA  118C               	iorwf	(_TransferLength+1)& (0+255),w,b
 20063  0007AC  B4D8               	btfsc	status,2,c
 20064  0007AE  D004               	goto	l650
 20065                           
 20066                           ; BSR set to: 0
 20067                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20068  0007B0  078B               	decf	_TransferLength& (0+255),f,b
 20069  0007B2  A0D8               	btfss	status,0,c
 20070  0007B4  078C               	decf	(_TransferLength+1)& (0+255),f,b
 20071                           
 20072                           ;usb_device_msd.c: 932: }
 20073  0007B6  D00A               	goto	l651
 20074  0007B8                     l650:
 20075                           
 20076                           ; BSR set to: 0
 20077                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20078                           
 20079                           ; BSR set to: 0
 20080  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20081  0007BA  0D01               	mullw	1
 20082  0007BC  0E00               	movlw	0
 20083  0007BE  24F3               	addwf	prodl,w,c
 20084  0007C0  6ED9               	movwf	fsr2l,c
 20085  0007C2  0E06               	movlw	6
 20086  0007C4  20F4               	addwfc	prodh,w,c
 20087  0007C6  6EDA               	movwf	fsr2h,c
 20088  0007C8  0E00               	movlw	0
 20089  0007CA  6EDF               	movwf	indf2,c
 20090  0007CC                     l651:
 20091                           
 20092                           ; BSR set to: 0
 20093                           
 20094                           ; BSR set to: 0
 20095  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20096  0007CE                     l648:
 20097                           
 20098                           ; BSR set to: 0
 20099                           
 20100                           ; BSR set to: 0
 20101  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20102  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20103  0007D2  A0D8               	btfss	status,0,c
 20104  0007D4  D7E9               	goto	l649
 20105  0007D6                     u9240:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20109                           
 20110                           ; BSR set to: 0
 20111                           
 20112                           ; BSR set to: 0
 20113  0007D6  0E01               	movlw	1
 20114  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20115  0007DA  0E00               	movlw	0
 20116  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20117  0007DE  0E06               	movlw	6
 20118  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20119  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20120  0007E6  0E02               	movlw	2
 20121  0007E8  ECC4  F01E         	call	_USBTransferOnePacket
 20122  0007EC  C001  F08D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20123  0007F0  C002  F08E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20124                           
 20125                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20126  0007F4  0101               	movlb	1	; () banked
 20127  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20128  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20129  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20130  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20131  0007FE  A4D8               	btfss	status,2,c
 20132  000800  0012               	return	
 20133                           
 20134                           ; BSR set to: 1
 20135                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20136  000802  0100               	movlb	0	; () banked
 20137  000804  699F               	setf	_MSDCommandState& (0+255),b
 20138                           
 20139                           ; BSR set to: 0
 20140                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20141                           
 20142                           ; BSR set to: 0
 20143                           
 20144                           ;usb_device_msd.c: 949: break;
 20145  000806  0012               	return	
 20146  000808                     
 20147                           ; BSR set to: 0
 20148                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20149                           
 20150                           ; BSR set to: 0
 20151                           
 20152                           ;usb_device_msd.c: 954: default:
 20153                           
 20154                           ; BSR set to: 0
 20155  000808  0E7F               	movlw	127
 20156  00080A  EC41  F01E         	call	_MSDErrorHandler
 20157                           
 20158                           ;usb_device_msd.c: 960: }
 20159                           
 20160                           ;usb_device_msd.c: 959: break;
 20161  00080E  0012               	return	
 20162  000810                     l614:
 20163  000810  0100               	movlb	0	; () banked
 20164  000812  519F               	movf	_MSDCommandState& (0+255),w,b
 20165                           
 20166                           ; Switch size 1, requested type "space"
 20167                           ; Number of cases is 12, Range of values is 0 to 254
 20168                           ; switch strategies available:
 20169                           ; Name         Instructions Cycles
 20170                           ; simple_byte           37    19 (average)
 20171                           ;	Chosen strategy is simple_byte
 20172  000814  0A00               	xorlw	0	; case 0
 20173  000816  B4D8               	btfsc	status,2,c
 20174  000818  D75B               	goto	l634
 20175  00081A  0A03               	xorlw	3	; case 3
 20176  00081C  B4D8               	btfsc	status,2,c
 20177  00081E  D6DD               	goto	l624
 20178  000820  0A11               	xorlw	17	; case 18
 20179  000822  B4D8               	btfsc	status,2,c
 20180  000824  D64C               	goto	l620
 20181  000826  0A08               	xorlw	8	; case 26
 20182  000828  B4D8               	btfsc	status,2,c
 20183  00082A  D704               	goto	l628
 20184  00082C  0A01               	xorlw	1	; case 27
 20185  00082E  B4D8               	btfsc	status,2,c
 20186  000830  D777               	goto	l638
 20187  000832  0A05               	xorlw	5	; case 30
 20188  000834  B4D8               	btfsc	status,2,c
 20189  000836  D735               	goto	l633
 20190  000838  0A3B               	xorlw	59	; case 37
 20191  00083A  B4D8               	btfsc	status,2,c
 20192  00083C  D671               	goto	l623
 20193  00083E  0A0D               	xorlw	13	; case 40
 20194  000840  B4D8               	btfsc	status,2,c
 20195  000842  D62D               	goto	l615
 20196  000844  0A02               	xorlw	2	; case 42
 20197  000846  B4D8               	btfsc	status,2,c
 20198  000848  D632               	goto	l618
 20199  00084A  0A05               	xorlw	5	; case 47
 20200  00084C  B4D8               	btfsc	status,2,c
 20201  00084E  D768               	goto	l638
 20202  000850  0AD2               	xorlw	210	; case 253
 20203  000852  B4D8               	btfsc	status,2,c
 20204  000854  D771               	goto	l640
 20205  000856  0A03               	xorlw	3	; case 254
 20206  000858  D7D7               	goto	l654
 20207  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20208                           	opt stack 0
 20209                           tosu	equ	0xFFF
 20210                           tosh	equ	0xFFE
 20211                           tosl	equ	0xFFD
 20212                           pclath	equ	0xFFA
 20213                           tblptru	equ	0xFF8
 20214                           tblptrh	equ	0xFF7
 20215                           tblptrl	equ	0xFF6
 20216                           tablat	equ	0xFF5
 20217                           prodh	equ	0xFF4
 20218                           prodl	equ	0xFF3
 20219                           intcon	equ	0xFF2
 20220                           intcon2	equ	0xFF1
 20221                           intcon3	equ	0xFF0
 20222                           indf0	equ	0xFEF
 20223                           postinc0	equ	0xFEE
 20224                           fsr0h	equ	0xFEA
 20225                           fsr0l	equ	0xFE9
 20226                           wreg	equ	0xFE8
 20227                           indf1	equ	0xFE7
 20228                           postdec1	equ	0xFE5
 20229                           plusw1	equ	0xFE3
 20230                           fsr1h	equ	0xFE2
 20231                           fsr1l	equ	0xFE1
 20232                           indf2	equ	0xFDF
 20233                           postinc2	equ	0xFDE
 20234                           postdec2	equ	0xFDD
 20235                           plusw2	equ	0xFDB
 20236                           fsr2h	equ	0xFDA
 20237                           fsr2l	equ	0xFD9
 20238                           status	equ	0xFD8
 20239                           
 20240 ;; *************** function _MSDWriteHandler *****************
 20241 ;; Defined at:
 20242 ;;		line 1188 in file "usb_device_msd.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;		None
 20245 ;; Auto vars:     Size  Location     Type
 20246 ;;		None
 20247 ;; Return value:  Size  Location     Type
 20248 ;;                  1    wreg      unsigned char 
 20249 ;; Registers used:
 20250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20251 ;; Tracked objects:
 20252 ;;		On entry : 0/0
 20253 ;;		On exit  : 0/0
 20254 ;;		Unchanged: 0/0
 20255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20258 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20260 ;;Total ram usage:        5 bytes
 20261 ;; Hardware stack levels used:    1
 20262 ;; Hardware stack levels required when called:    6
 20263 ;; This function calls:
 20264 ;;		_ExternalFlash_SectorWrite
 20265 ;;		_ExternalFlash_WriteProtectStateGet
 20266 ;;		_MSDCheckForErrorCases
 20267 ;;		_USBStallEndpoint
 20268 ;;		_USBTransferOnePacket
 20269 ;; This function is called by:
 20270 ;;		_MSDProcessCommandMediaPresent
 20271 ;; This function uses a non-reentrant model
 20272 ;;
 20273                           
 20274                           	psect	text97
 20275  00121E                     __ptext97:
 20276                           	opt stack 0
 20277  00121E                     _MSDWriteHandler:
 20278                           	opt stack 20
 20279                           
 20280                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20281                           
 20282                           ;incstack = 0
 20283  00121E  D146               	goto	l684
 20284  001220                     l685:
 20285                           
 20286                           ; BSR set to: 0
 20287                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20288  001220  C111  F08A         	movff	_gblCBW+17,_LBA+3
 20289                           
 20290                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20291  001224  C112  F089         	movff	_gblCBW+18,_LBA+2
 20292                           
 20293                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20294  001228  C113  F088         	movff	_gblCBW+19,_LBA+1
 20295                           
 20296                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20297  00122C  C114  F087         	movff	_gblCBW+20,_LBA
 20298                           
 20299                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20300  001230  C116  F08C         	movff	_gblCBW+22,_TransferLength+1
 20301                           
 20302                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20303  001234  C117  F08B         	movff	_gblCBW+23,_TransferLength
 20304                           
 20305                           ; BSR set to: 0
 20306                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20307  001238  518B               	movf	_TransferLength& (0+255),w,b
 20308  00123A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20309  00123C  518C               	movf	(_TransferLength+1)& (0+255),w,b
 20310  00123E  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20311  001240  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20312  001242  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20313  001244  0E09               	movlw	9
 20314  001246                     u7945:
 20315  001246  90D8               	bcf	status,0,c
 20316  001248  3630               	rlcf	??_MSDWriteHandler,f,c
 20317  00124A  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20318  00124C  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20319  00124E  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20320  001250  2EE8               	decfsz	wreg,f,c
 20321  001252  D7F9               	goto	u7945
 20322  001254  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20323  001258  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20324  00125C  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20325  001260  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20326  001264  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 20327  001268  0900               	iorlw	0
 20328  00126A  A4D8               	btfss	status,2,c
 20329  00126C  D131               	goto	l687
 20330                           
 20331                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20332                           
 20333                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20334  00126E  C1F4  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20335  001272  C1F5  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20336  001276  D801               	call	u7968
 20337  001278  D00A               	goto	u7969
 20338  00127A                     u7968:
 20339  00127A  0005               	push	
 20340  00127C  6EFA               	movwf	pclath,c
 20341  00127E  0101               	movlb	1	; () banked
 20342  001280  51F0               	movf	(_LUN+10)& (0+255),w,b
 20343  001282  6EFD               	movwf	tosl,c
 20344  001284  51F1               	movf	(_LUN+11)& (0+255),w,b
 20345  001286  6EFE               	movwf	tosh,c
 20346  001288  6AFF               	clrf	tosu,c
 20347  00128A  50FA               	movf	pclath,w,c
 20348  00128C  0012               	return		;indir
 20349  00128E                     u7969:
 20350  00128E  0900               	iorlw	0
 20351  001290  B4D8               	btfsc	status,2,c
 20352  001292  D016               	goto	l688
 20353                           
 20354                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20355  001294  0E01               	movlw	1
 20356  001296  010D               	movlb	13	; () banked
 20357  001298  6F8C               	movwf	140,b	;volatile
 20358                           
 20359                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 20360  00129A  0101               	movlb	1	; () banked
 20361  00129C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20362  00129E  0BF0               	andlw	-16
 20363  0012A0  0907               	iorlw	7
 20364  0012A2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20365                           
 20366                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 20367  0012A4  0E27               	movlw	39
 20368  0012A6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20369                           
 20370                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 20371  0012A8  0E00               	movlw	0
 20372  0012AA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20373                           
 20374                           ; BSR set to: 1
 20375                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 20376  0012AC  0E00               	movlw	0
 20377  0012AE  6E01               	movwf	USBStallEndpoint@dir,c
 20378  0012B0  0E02               	movlw	2
 20379  0012B2  EC3A  F01D         	call	_USBStallEndpoint
 20380                           
 20381                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 20382  0012B6  0E00               	movlw	0
 20383  0012B8  0100               	movlb	0	; () banked
 20384  0012BA  6F9D               	movwf	_MSDWriteState& (0+255),b
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;usb_device_msd.c: 1228: return MSDWriteState;
 20388  0012BC  519D               	movf	_MSDWriteState& (0+255),w,b
 20389                           
 20390                           ; BSR set to: 0
 20391  0012BE  0012               	return	
 20392  0012C0                     l688:
 20393                           
 20394                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 20395                           
 20396                           ; BSR set to: 0
 20397  0012C0  0E01               	movlw	1
 20398  0012C2  0100               	movlb	0	; () banked
 20399  0012C4  6FA0               	movwf	_MSD_State& (0+255),b
 20400  0012C6                     
 20401                           ; BSR set to: 0
 20402                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 20403                           
 20404                           ; BSR set to: 0
 20405  0012C6  518B               	movf	_TransferLength& (0+255),w,b
 20406  0012C8  118C               	iorwf	(_TransferLength+1)& (0+255),w,b
 20407  0012CA  A4D8               	btfss	status,2,c
 20408  0012CC  D002               	goto	l691
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 20412  0012CE  0E00               	movlw	0
 20413  0012D0  D056               	goto	L21
 20414  0012D2                     l691:
 20415                           
 20416                           ; BSR set to: 0
 20417                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 20418                           
 20419                           ; BSR set to: 0
 20420  0012D2  0E03               	movlw	3
 20421  0012D4  6F9D               	movwf	_MSDWriteState& (0+255),b
 20422                           
 20423                           ; BSR set to: 0
 20424                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 20425  0012D6  0E00               	movlw	0
 20426  0012D8  0101               	movlb	1	; () banked
 20427  0012DA  6F71               	movwf	_ptrNextData& (0+255),b
 20428  0012DC  0E06               	movlw	6
 20429  0012DE  6F72               	movwf	(_ptrNextData+1)& (0+255),b
 20430                           
 20431                           ; BSR set to: 1
 20432                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 20433  0012E0  0E00               	movlw	0
 20434  0012E2  010D               	movlb	13	; () banked
 20435  0012E4  6F88               	movwf	136,b	;volatile
 20436  0012E6  0E02               	movlw	2
 20437  0012E8  6F89               	movwf	137,b	;volatile
 20438  0012EA  0E00               	movlw	0
 20439  0012EC  6F8A               	movwf	138,b	;volatile
 20440  0012EE  0E00               	movlw	0
 20441  0012F0  6F8B               	movwf	139,b	;volatile
 20442  0012F2                     l692:
 20443                           
 20444                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 20445  0012F2  010D               	movlb	13	; () banked
 20446  0012F4  5188               	movf	136,w,b	;volatile
 20447  0012F6  1189               	iorwf	137,w,b	;volatile
 20448  0012F8  118A               	iorwf	138,w,b	;volatile
 20449  0012FA  118B               	iorwf	139,w,b	;volatile
 20450  0012FC  B4D8               	btfsc	status,2,c
 20451  0012FE  D01E               	goto	l693
 20452                           
 20453                           ; BSR set to: 13
 20454                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 20455  001300  0100               	movlb	0	; () banked
 20456  001302  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 20457  001304  1190               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20458  001306  B4D8               	btfsc	status,2,c
 20459  001308  D006               	goto	l694
 20460                           
 20461                           ; BSR set to: 0
 20462  00130A  C08F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20463  00130E  C090  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20464  001312  BEDF               	btfsc	indf2,7,c
 20465  001314  D0DD               	goto	l687
 20466  001316                     l694:
 20467                           
 20468                           ; BSR set to: 0
 20469                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 20470                           
 20471                           ; BSR set to: 0
 20472  001316  0E00               	movlw	0
 20473  001318  6E01               	movwf	USBTransferOnePacket@dir,c
 20474  00131A  C171  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20475  00131E  C172  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20476  001322  0E40               	movlw	64
 20477  001324  6E04               	movwf	USBTransferOnePacket@len,c
 20478  001326  0E02               	movlw	2
 20479  001328  ECC4  F01E         	call	_USBTransferOnePacket
 20480  00132C  C001  F08F         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20481  001330  C002  F090         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20482                           
 20483                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 20484  001334  0E04               	movlw	4
 20485  001336  0100               	movlb	0	; () banked
 20486  001338  6F9D               	movwf	_MSDWriteState& (0+255),b
 20487                           
 20488                           ;usb_device_msd.c: 1260: }
 20489  00133A  D023               	goto	l695
 20490  00133C                     l693:
 20491                           
 20492                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 20493                           
 20494                           ; BSR set to: 0
 20495  00133C  C1F4  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20496  001340  C1F5  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20497  001344  D801               	call	u8028
 20498  001346  D00A               	goto	u8029
 20499  001348                     u8028:
 20500  001348  0005               	push	
 20501  00134A  6EFA               	movwf	pclath,c
 20502  00134C  0101               	movlb	1	; () banked
 20503  00134E  51F0               	movf	(_LUN+10)& (0+255),w,b
 20504  001350  6EFD               	movwf	tosl,c
 20505  001352  51F1               	movf	(_LUN+11)& (0+255),w,b
 20506  001354  6EFE               	movwf	tosh,c
 20507  001356  6AFF               	clrf	tosu,c
 20508  001358  50FA               	movf	pclath,w,c
 20509  00135A  0012               	return		;indir
 20510  00135C                     u8029:
 20511  00135C  0900               	iorlw	0
 20512  00135E  B4D8               	btfsc	status,2,c
 20513  001360  D00C               	goto	l696
 20514                           
 20515                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 20516  001362  0E01               	movlw	1
 20517  001364  010D               	movlb	13	; () banked
 20518  001366  6F8C               	movwf	140,b	;volatile
 20519                           
 20520                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 20521  001368  0101               	movlb	1	; () banked
 20522  00136A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20523  00136C  0BF0               	andlw	-16
 20524  00136E  0902               	iorlw	2
 20525  001370  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20526                           
 20527                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 20528  001372  0E27               	movlw	39
 20529  001374  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20530                           
 20531                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 20532  001376  0E00               	movlw	0
 20533  001378  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20534  00137A                     l696:
 20535                           
 20536                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 20537  00137A  0E02               	movlw	2
 20538  00137C  D095               	goto	L23
 20539  00137E                     L21:
 20540  00137E  6F9D               	movwf	_MSDWriteState& (0+255),b
 20541                           
 20542                           ;usb_device_msd.c: 1280: break;
 20543  001380  D0A7               	goto	l687
 20544  001382                     l695:
 20545                           
 20546                           ; BSR set to: 0
 20547                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 20548                           
 20549                           ; BSR set to: 0
 20550                           
 20551                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 20552                           
 20553                           ; BSR set to: 0
 20554  001382  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 20555  001384  1190               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20556  001386  B4D8               	btfsc	status,2,c
 20557  001388  D006               	goto	l698
 20558                           
 20559                           ; BSR set to: 0
 20560  00138A  C08F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20561  00138E  C090  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20562  001392  BEDF               	btfsc	indf2,7,c
 20563  001394  D09D               	goto	l687
 20564  001396                     l698:
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 20568                           
 20569                           ; BSR set to: 0
 20570  001396  EE20 F001          	lfsr	2,1
 20571  00139A  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 20572  00139C  26D9               	addwf	fsr2l,f,c
 20573  00139E  5190               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20574  0013A0  22DA               	addwfc	fsr2h,f,c
 20575  0013A2  50DF               	movf	indf2,w,c
 20576  0013A4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20577  0013A6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20578  0013AA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20579  0013AC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20580  0013AE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20581  0013B0  5031               	movf	??_MSDWriteHandler+1,w,c
 20582  0013B2  0101               	movlb	1	; () banked
 20583  0013B4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20584  0013B6  5032               	movf	??_MSDWriteHandler+2,w,c
 20585  0013B8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20586  0013BA  5033               	movf	??_MSDWriteHandler+3,w,c
 20587  0013BC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20588  0013BE  5034               	movf	??_MSDWriteHandler+4,w,c
 20589  0013C0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20590                           
 20591                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 20592  0013C2  0100               	movlb	0	; () banked
 20593  0013C4  EE20 F001          	lfsr	2,1
 20594  0013C8  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 20595  0013CA  26D9               	addwf	fsr2l,f,c
 20596  0013CC  5190               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20597  0013CE  22DA               	addwfc	fsr2h,f,c
 20598  0013D0  50DF               	movf	indf2,w,c
 20599  0013D2  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20600  0013D4  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20601  0013D8  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20602  0013DA  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20603  0013DC  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20604  0013DE  5031               	movf	??_MSDWriteHandler+1,w,c
 20605  0013E0  010D               	movlb	13	; () banked
 20606  0013E2  5F88               	subwf	136,f,b	;volatile
 20607  0013E4  5032               	movf	??_MSDWriteHandler+2,w,c
 20608  0013E6  5B89               	subwfb	137,f,b	;volatile
 20609  0013E8  5033               	movf	??_MSDWriteHandler+3,w,c
 20610  0013EA  5B8A               	subwfb	138,f,b	;volatile
 20611  0013EC  5034               	movf	??_MSDWriteHandler+4,w,c
 20612  0013EE  5B8B               	subwfb	139,f,b	;volatile
 20613                           
 20614                           ; BSR set to: 13
 20615                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20616  0013F0  0E40               	movlw	64
 20617  0013F2  0101               	movlb	1	; () banked
 20618  0013F4  2771               	addwf	_ptrNextData& (0+255),f,b
 20619  0013F6  0E00               	movlw	0
 20620  0013F8  2372               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20621                           
 20622                           ; BSR set to: 1
 20623                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20624  0013FA  0E03               	movlw	3
 20625  0013FC  D055               	goto	L23
 20626  0013FE                     
 20627                           ; BSR set to: 0
 20628                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20629                           
 20630                           ; BSR set to: 0
 20631  0013FE  010D               	movlb	13	; () banked
 20632  001400  518C               	movf	140,w,b	;volatile
 20633  001402  A4D8               	btfss	status,2,c
 20634  001404  D03C               	goto	l703
 20635                           
 20636                           ; BSR set to: 13
 20637                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20638  001406  C1F4  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20639  00140A  C1F5  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 20640  00140E  C087  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 20641  001412  C088  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 20642  001416  C089  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 20643  00141A  C08A  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 20644  00141E  0E00               	movlw	0
 20645  001420  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 20646  001422  0E06               	movlw	6
 20647  001424  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 20648  001426  0100               	movlb	0	; () banked
 20649  001428  5187               	movf	_LBA& (0+255),w,b
 20650  00142A  1188               	iorwf	(_LBA+1)& (0+255),w,b
 20651  00142C  1189               	iorwf	(_LBA+2)& (0+255),w,b
 20652  00142E  118A               	iorwf	(_LBA+3)& (0+255),w,b
 20653  001430  A4D8               	btfss	status,2,c
 20654  001432  D002               	goto	u8070
 20655  001434  0E01               	movlw	1
 20656  001436  D001               	goto	u8080
 20657  001438                     u8070:
 20658  001438  0E00               	movlw	0
 20659  00143A                     u8080:
 20660  00143A  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 20661  00143C  D801               	call	u8098
 20662  00143E  D00A               	goto	u8099
 20663  001440                     u8098:
 20664  001440  0005               	push	
 20665  001442  6EFA               	movwf	pclath,c
 20666  001444  0101               	movlb	1	; () banked
 20667  001446  51F2               	movf	(_LUN+12)& (0+255),w,b
 20668  001448  6EFD               	movwf	tosl,c
 20669  00144A  51F3               	movf	(_LUN+13)& (0+255),w,b
 20670  00144C  6EFE               	movwf	tosh,c
 20671  00144E  6AFF               	clrf	tosu,c
 20672  001450  50FA               	movf	pclath,w,c
 20673  001452  0012               	return		;indir
 20674  001454                     u8099:
 20675  001454  06E8               	decf	wreg,f,c
 20676  001456  B4D8               	btfsc	status,2,c
 20677  001458  D012               	goto	l703
 20678                           
 20679                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20680  00145A  0E64               	movlw	100
 20681  00145C  0100               	movlb	0	; () banked
 20682  00145E  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 20683  001460  D002               	goto	l702
 20684                           
 20685                           ; BSR set to: 0
 20686                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20687  001462  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 20688                           
 20689                           ;usb_device_msd.c: 1314: break;
 20690  001464  D035               	goto	l687
 20691  001466                     l702:
 20692                           
 20693                           ; BSR set to: 0
 20694                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20695                           
 20696                           ; BSR set to: 0
 20697  001466  0E01               	movlw	1
 20698  001468  010D               	movlb	13	; () banked
 20699  00146A  6F8C               	movwf	140,b	;volatile
 20700                           
 20701                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20702  00146C  0101               	movlb	1	; () banked
 20703  00146E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20704  001470  0BF0               	andlw	-16
 20705  001472  0903               	iorlw	3
 20706  001474  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20707                           
 20708                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20709  001476  0E00               	movlw	0
 20710  001478  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20711                           
 20712                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20713  00147A  0E00               	movlw	0
 20714  00147C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20715  00147E                     l703:
 20716                           
 20717                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20718                           
 20719                           ; BSR set to: 1
 20720                           
 20721                           ; BSR set to: 1
 20722                           
 20723                           ; BSR set to: 1
 20724  00147E  0E01               	movlw	1
 20725  001480  0100               	movlb	0	; () banked
 20726  001482  2787               	addwf	_LBA& (0+255),f,b
 20727  001484  0E00               	movlw	0
 20728  001486  2388               	addwfc	(_LBA+1)& (0+255),f,b
 20729  001488  2389               	addwfc	(_LBA+2)& (0+255),f,b
 20730  00148A  238A               	addwfc	(_LBA+3)& (0+255),f,b
 20731                           
 20732                           ; BSR set to: 0
 20733                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 20734  00148C  078B               	decf	_TransferLength& (0+255),f,b
 20735  00148E  A0D8               	btfss	status,0,c
 20736  001490  078C               	decf	(_TransferLength+1)& (0+255),f,b
 20737                           
 20738                           ; BSR set to: 0
 20739                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 20740  001492  0E01               	movlw	1
 20741  001494  D774               	goto	L21
 20742  001496                     
 20743                           ; BSR set to: 0
 20744                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 20745                           
 20746                           ; BSR set to: 0
 20747  001496  0E02               	movlw	2
 20748  001498  010D               	movlb	13	; () banked
 20749  00149A  6F8C               	movwf	140,b	;volatile
 20750                           
 20751                           ; BSR set to: 13
 20752                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 20753  00149C  0E00               	movlw	0
 20754  00149E  6E01               	movwf	USBStallEndpoint@dir,c
 20755  0014A0  0E02               	movlw	2
 20756  0014A2  EC3A  F01D         	call	_USBStallEndpoint
 20757                           
 20758                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 20759  0014A6  0E00               	movlw	0
 20760  0014A8                     L23:
 20761  0014A8  0100               	movlb	0	; () banked
 20762  0014AA  D769               	goto	L21
 20763  0014AC                     l684:
 20764                           
 20765                           ; BSR set to: 0
 20766  0014AC  0100               	movlb	0	; () banked
 20767  0014AE  519D               	movf	_MSDWriteState& (0+255),w,b
 20768                           
 20769                           ; Switch size 1, requested type "space"
 20770                           ; Number of cases is 5, Range of values is 0 to 4
 20771                           ; switch strategies available:
 20772                           ; Name         Instructions Cycles
 20773                           ; simple_byte           16     9 (average)
 20774                           ;	Chosen strategy is simple_byte
 20775  0014B0  0A00               	xorlw	0	; case 0
 20776  0014B2  B4D8               	btfsc	status,2,c
 20777  0014B4  D6B5               	goto	l685
 20778  0014B6  0A01               	xorlw	1	; case 1
 20779  0014B8  B4D8               	btfsc	status,2,c
 20780  0014BA  D705               	goto	l690
 20781  0014BC  0A03               	xorlw	3	; case 2
 20782  0014BE  B4D8               	btfsc	status,2,c
 20783  0014C0  D79E               	goto	l699
 20784  0014C2  0A01               	xorlw	1	; case 3
 20785  0014C4  B4D8               	btfsc	status,2,c
 20786  0014C6  D715               	goto	l692
 20787  0014C8  0A07               	xorlw	7	; case 4
 20788  0014CA  B4D8               	btfsc	status,2,c
 20789  0014CC  D75A               	goto	l695
 20790  0014CE  D7E3               	goto	l704
 20791  0014D0                     l687:
 20792                           
 20793                           ;usb_device_msd.c: 1347: return MSDWriteState;
 20794                           
 20795                           ; BSR set to: 0
 20796  0014D0  0100               	movlb	0	; () banked
 20797  0014D2  519D               	movf	_MSDWriteState& (0+255),w,b
 20798  0014D4  0012               	return	
 20799  0014D6                     __end_of_MSDWriteHandler:
 20800                           	opt stack 0
 20801                           tosu	equ	0xFFF
 20802                           tosh	equ	0xFFE
 20803                           tosl	equ	0xFFD
 20804                           pclath	equ	0xFFA
 20805                           tblptru	equ	0xFF8
 20806                           tblptrh	equ	0xFF7
 20807                           tblptrl	equ	0xFF6
 20808                           tablat	equ	0xFF5
 20809                           prodh	equ	0xFF4
 20810                           prodl	equ	0xFF3
 20811                           intcon	equ	0xFF2
 20812                           intcon2	equ	0xFF1
 20813                           intcon3	equ	0xFF0
 20814                           indf0	equ	0xFEF
 20815                           postinc0	equ	0xFEE
 20816                           fsr0h	equ	0xFEA
 20817                           fsr0l	equ	0xFE9
 20818                           wreg	equ	0xFE8
 20819                           indf1	equ	0xFE7
 20820                           postdec1	equ	0xFE5
 20821                           plusw1	equ	0xFE3
 20822                           fsr1h	equ	0xFE2
 20823                           fsr1l	equ	0xFE1
 20824                           indf2	equ	0xFDF
 20825                           postinc2	equ	0xFDE
 20826                           postdec2	equ	0xFDD
 20827                           plusw2	equ	0xFDB
 20828                           fsr2h	equ	0xFDA
 20829                           fsr2l	equ	0xFD9
 20830                           status	equ	0xFD8
 20831                           
 20832 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 20833 ;; Defined at:
 20834 ;;		line 34 in file "external_flash.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;  config          2    0[COMRAM] PTR void 
 20837 ;;		 -> NULL(0), 
 20838 ;; Auto vars:     Size  Location     Type
 20839 ;;		None
 20840 ;; Return value:  Size  Location     Type
 20841 ;;                  1    wreg      unsigned char 
 20842 ;; Registers used:
 20843 ;;		wreg
 20844 ;; Tracked objects:
 20845 ;;		On entry : 0/0
 20846 ;;		On exit  : 0/0
 20847 ;;		Unchanged: 0/0
 20848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20853 ;;Total ram usage:        2 bytes
 20854 ;; Hardware stack levels used:    1
 20855 ;; This function calls:
 20856 ;;		Nothing
 20857 ;; This function is called by:
 20858 ;;		_MSDWriteHandler
 20859 ;;		_MSDProcessCommandMediaPresent
 20860 ;; This function uses a non-reentrant model
 20861 ;;
 20862                           
 20863                           	psect	text98
 20864  007256                     __ptext98:
 20865                           	opt stack 0
 20866  007256                     _ExternalFlash_WriteProtectStateGet:
 20867                           	opt stack 25
 20868                           
 20869                           ;external_flash.c: 37: return 0;
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;incstack = 0
 20873  007256  0E00               	movlw	0
 20874  007258  0012               	return	
 20875  00725A                     __end_of_ExternalFlash_WriteProtectStateGet:
 20876                           	opt stack 0
 20877                           tosu	equ	0xFFF
 20878                           tosh	equ	0xFFE
 20879                           tosl	equ	0xFFD
 20880                           pclath	equ	0xFFA
 20881                           tblptru	equ	0xFF8
 20882                           tblptrh	equ	0xFF7
 20883                           tblptrl	equ	0xFF6
 20884                           tablat	equ	0xFF5
 20885                           prodh	equ	0xFF4
 20886                           prodl	equ	0xFF3
 20887                           intcon	equ	0xFF2
 20888                           intcon2	equ	0xFF1
 20889                           intcon3	equ	0xFF0
 20890                           indf0	equ	0xFEF
 20891                           postinc0	equ	0xFEE
 20892                           fsr0h	equ	0xFEA
 20893                           fsr0l	equ	0xFE9
 20894                           wreg	equ	0xFE8
 20895                           indf1	equ	0xFE7
 20896                           postdec1	equ	0xFE5
 20897                           plusw1	equ	0xFE3
 20898                           fsr1h	equ	0xFE2
 20899                           fsr1l	equ	0xFE1
 20900                           indf2	equ	0xFDF
 20901                           postinc2	equ	0xFDE
 20902                           postdec2	equ	0xFDD
 20903                           plusw2	equ	0xFDB
 20904                           fsr2h	equ	0xFDA
 20905                           fsr2l	equ	0xFD9
 20906                           status	equ	0xFD8
 20907                           
 20908 ;; *************** function _ExternalFlash_SectorWrite *****************
 20909 ;; Defined at:
 20910 ;;		line 56 in file "external_flash.c"
 20911 ;; Parameters:    Size  Location     Type
 20912 ;;  config          2   36[COMRAM] PTR void 
 20913 ;;		 -> NULL(0), 
 20914 ;;  sector_addr     4   38[COMRAM] unsigned long 
 20915 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 20916 ;;		 -> msd_buffer(512), 
 20917 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 20918 ;; Auto vars:     Size  Location     Type
 20919 ;;  page            2   45[COMRAM] unsigned int 
 20920 ;; Return value:  Size  Location     Type
 20921 ;;                  1    wreg      unsigned char 
 20922 ;; Registers used:
 20923 ;;		wreg, status,2, status,0, cstack
 20924 ;; Tracked objects:
 20925 ;;		On entry : 0/0
 20926 ;;		On exit  : 0/0
 20927 ;;		Unchanged: 0/0
 20928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20929 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20930 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20932 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20933 ;;Total ram usage:       11 bytes
 20934 ;; Hardware stack levels used:    1
 20935 ;; Hardware stack levels required when called:    5
 20936 ;; This function calls:
 20937 ;;		_flash_sector_write
 20938 ;; This function is called by:
 20939 ;;		_MSDWriteHandler
 20940 ;; This function uses a non-reentrant model
 20941 ;;
 20942                           
 20943                           	psect	text99
 20944  006C3C                     __ptext99:
 20945                           	opt stack 0
 20946  006C3C                     _ExternalFlash_SectorWrite:
 20947                           	opt stack 20
 20948                           
 20949                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 20950                           
 20951                           ;incstack = 0
 20952  006C3C  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 20953  006C40  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 20954                           
 20955                           ;external_flash.c: 61: if(sector_addr >= 8192)
 20956  006C44  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 20957  006C46  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 20958  006C48  E104               	bnz	u7710
 20959  006C4A  0E20               	movlw	32
 20960  006C4C  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 20961  006C4E  A0D8               	btfss	status,0,c
 20962  006C50  D002               	goto	l1884
 20963  006C52                     u7710:
 20964                           
 20965                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 20966  006C52  0E00               	movlw	0
 20967  006C54  0012               	return	
 20968  006C56                     l1884:
 20969                           
 20970                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 20971  006C56  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 20972  006C5A  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 20973  006C5E  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 20974  006C62  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 20975  006C66  ECCA  F033         	call	_flash_sector_write	;wreg free
 20976                           
 20977                           ;external_flash.c: 69: return 1;
 20978  006C6A  0E01               	movlw	1
 20979  006C6C  0012               	return	
 20980  006C6E                     __end_of_ExternalFlash_SectorWrite:
 20981                           	opt stack 0
 20982                           tosu	equ	0xFFF
 20983                           tosh	equ	0xFFE
 20984                           tosl	equ	0xFFD
 20985                           pclath	equ	0xFFA
 20986                           tblptru	equ	0xFF8
 20987                           tblptrh	equ	0xFF7
 20988                           tblptrl	equ	0xFF6
 20989                           tablat	equ	0xFF5
 20990                           prodh	equ	0xFF4
 20991                           prodl	equ	0xFF3
 20992                           intcon	equ	0xFF2
 20993                           intcon2	equ	0xFF1
 20994                           intcon3	equ	0xFF0
 20995                           indf0	equ	0xFEF
 20996                           postinc0	equ	0xFEE
 20997                           fsr0h	equ	0xFEA
 20998                           fsr0l	equ	0xFE9
 20999                           wreg	equ	0xFE8
 21000                           indf1	equ	0xFE7
 21001                           postdec1	equ	0xFE5
 21002                           plusw1	equ	0xFE3
 21003                           fsr1h	equ	0xFE2
 21004                           fsr1l	equ	0xFE1
 21005                           indf2	equ	0xFDF
 21006                           postinc2	equ	0xFDE
 21007                           postdec2	equ	0xFDD
 21008                           plusw2	equ	0xFDB
 21009                           fsr2h	equ	0xFDA
 21010                           fsr2l	equ	0xFD9
 21011                           status	equ	0xFD8
 21012                           
 21013 ;; *************** function _MSDReadHandler *****************
 21014 ;; Defined at:
 21015 ;;		line 1038 in file "usb_device_msd.c"
 21016 ;; Parameters:    Size  Location     Type
 21017 ;;		None
 21018 ;; Auto vars:     Size  Location     Type
 21019 ;;		None
 21020 ;; Return value:  Size  Location     Type
 21021 ;;                  1    wreg      unsigned char 
 21022 ;; Registers used:
 21023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21024 ;; Tracked objects:
 21025 ;;		On entry : 0/0
 21026 ;;		On exit  : 0/0
 21027 ;;		Unchanged: 0/0
 21028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21031 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21033 ;;Total ram usage:        4 bytes
 21034 ;; Hardware stack levels used:    1
 21035 ;; Hardware stack levels required when called:    6
 21036 ;; This function calls:
 21037 ;;		_ExternalFlash_SectorRead
 21038 ;;		_MSDCheckForErrorCases
 21039 ;;		_USBStallEndpoint
 21040 ;;		_USBTransferOnePacket
 21041 ;; This function is called by:
 21042 ;;		_MSDProcessCommandMediaPresent
 21043 ;; This function uses a non-reentrant model
 21044 ;;
 21045                           
 21046                           	psect	text100
 21047  002408                     __ptext100:
 21048                           	opt stack 0
 21049  002408                     _MSDReadHandler:
 21050                           	opt stack 20
 21051                           
 21052                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21053                           
 21054                           ;incstack = 0
 21055  002408  D0D7               	goto	l665
 21056  00240A                     l666:
 21057                           
 21058                           ; BSR set to: 0
 21059                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21060  00240A  C111  F08A         	movff	_gblCBW+17,_LBA+3
 21061                           
 21062                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21063  00240E  C112  F089         	movff	_gblCBW+18,_LBA+2
 21064                           
 21065                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21066  002412  C113  F088         	movff	_gblCBW+19,_LBA+1
 21067                           
 21068                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21069  002416  C114  F087         	movff	_gblCBW+20,_LBA
 21070                           
 21071                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21072  00241A  C116  F08C         	movff	_gblCBW+22,_TransferLength+1
 21073                           
 21074                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21075  00241E  C117  F08B         	movff	_gblCBW+23,_TransferLength
 21076                           
 21077                           ; BSR set to: 0
 21078                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21079  002422  518B               	movf	_TransferLength& (0+255),w,b
 21080  002424  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21081  002426  518C               	movf	(_TransferLength+1)& (0+255),w,b
 21082  002428  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21083  00242A  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21084  00242C  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21085  00242E  0E09               	movlw	9
 21086  002430                     u7835:
 21087  002430  90D8               	bcf	status,0,c
 21088  002432  3636               	rlcf	??_MSDReadHandler,f,c
 21089  002434  3637               	rlcf	??_MSDReadHandler+1,f,c
 21090  002436  3638               	rlcf	??_MSDReadHandler+2,f,c
 21091  002438  3639               	rlcf	??_MSDReadHandler+3,f,c
 21092  00243A  2EE8               	decfsz	wreg,f,c
 21093  00243C  D7F9               	goto	u7835
 21094  00243E  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21095  002442  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21096  002446  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21097  00244A  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21098  00244E  ECA4  F021         	call	_MSDCheckForErrorCases	;wreg free
 21099  002452  0900               	iorlw	0
 21100  002454  A4D8               	btfss	status,2,c
 21101  002456  D0C2               	goto	l668
 21102                           
 21103                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21104                           
 21105                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21106  002458  0E01               	movlw	1
 21107  00245A  0100               	movlb	0	; () banked
 21108  00245C  6F9E               	movwf	_MSDReadState& (0+255),b
 21109  00245E                     
 21110                           ; BSR set to: 0
 21111                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21112                           
 21113                           ; BSR set to: 0
 21114  00245E  518B               	movf	_TransferLength& (0+255),w,b
 21115  002460  118C               	iorwf	(_TransferLength+1)& (0+255),w,b
 21116  002462  A4D8               	btfss	status,2,c
 21117  002464  D002               	goto	l670
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21121  002466  0E00               	movlw	0
 21122  002468  D046               	goto	L24
 21123  00246A                     l670:
 21124                           
 21125                           ; BSR set to: 0
 21126                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21127                           
 21128                           ; BSR set to: 0
 21129  00246A  078B               	decf	_TransferLength& (0+255),f,b
 21130  00246C  A0D8               	btfss	status,0,c
 21131  00246E  078C               	decf	(_TransferLength+1)& (0+255),f,b
 21132                           
 21133                           ; BSR set to: 0
 21134                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21135  002470  0E02               	movlw	2
 21136  002472  6F9E               	movwf	_MSDReadState& (0+255),b
 21137  002474                     
 21138                           ; BSR set to: 0
 21139                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21140                           
 21141                           ; BSR set to: 0
 21142  002474  518D               	movf	_USBMSDInHandle& (0+255),w,b
 21143  002476  118E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21144  002478  B4D8               	btfsc	status,2,c
 21145  00247A  D006               	goto	l672
 21146                           
 21147                           ; BSR set to: 0
 21148  00247C  C08D  FFD9         	movff	_USBMSDInHandle,fsr2l
 21149  002480  C08E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21150  002484  BEDF               	btfsc	indf2,7,c
 21151  002486  D0AA               	goto	l668
 21152  002488                     l672:
 21153                           
 21154                           ; BSR set to: 0
 21155                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21156                           
 21157                           ; BSR set to: 0
 21158  002488  C1F4  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21159  00248C  C1F5  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21160  002490  C087  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21161  002494  C088  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21162  002498  C089  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21163  00249C  C08A  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21164  0024A0  0E00               	movlw	0
 21165  0024A2  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21166  0024A4  0E06               	movlw	6
 21167  0024A6  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21168  0024A8  D801               	call	u7888
 21169  0024AA  D00A               	goto	u7889
 21170  0024AC                     u7888:
 21171  0024AC  0005               	push	
 21172  0024AE  6EFA               	movwf	pclath,c
 21173  0024B0  0101               	movlb	1	; () banked
 21174  0024B2  51EE               	movf	(_LUN+8)& (0+255),w,b
 21175  0024B4  6EFD               	movwf	tosl,c
 21176  0024B6  51EF               	movf	(_LUN+9)& (0+255),w,b
 21177  0024B8  6EFE               	movwf	tosh,c
 21178  0024BA  6AFF               	clrf	tosu,c
 21179  0024BC  50FA               	movf	pclath,w,c
 21180  0024BE  0012               	return		;indir
 21181  0024C0                     u7889:
 21182  0024C0  06E8               	decf	wreg,f,c
 21183  0024C2  B4D8               	btfsc	status,2,c
 21184  0024C4  D01A               	goto	l675
 21185                           
 21186                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21187  0024C6  0E64               	movlw	100
 21188  0024C8  0100               	movlb	0	; () banked
 21189  0024CA  619C               	cpfslt	_MSDRetryAttempt& (0+255),b
 21190  0024CC  D002               	goto	l674
 21191                           
 21192                           ; BSR set to: 0
 21193                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21194  0024CE  2B9C               	incf	_MSDRetryAttempt& (0+255),f,b
 21195                           
 21196                           ;usb_device_msd.c: 1088: break;
 21197  0024D0  D085               	goto	l668
 21198  0024D2                     l674:
 21199                           
 21200                           ; BSR set to: 0
 21201                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21202                           
 21203                           ; BSR set to: 0
 21204  0024D2  0E02               	movlw	2
 21205  0024D4  010D               	movlb	13	; () banked
 21206  0024D6  6F8C               	movwf	140,b	;volatile
 21207                           
 21208                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21209  0024D8  0101               	movlb	1	; () banked
 21210  0024DA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21211  0024DC  0BF0               	andlw	-16
 21212  0024DE  0903               	iorlw	3
 21213  0024E0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21214                           
 21215                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21216  0024E2  0E00               	movlw	0
 21217  0024E4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21218                           
 21219                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21220  0024E6  0E00               	movlw	0
 21221  0024E8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21222                           
 21223                           ; BSR set to: 1
 21224                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21225  0024EA  0E01               	movlw	1
 21226  0024EC  6E01               	movwf	USBStallEndpoint@dir,c
 21227  0024EE  0E02               	movlw	2
 21228  0024F0  EC3A  F01D         	call	_USBStallEndpoint
 21229  0024F4  D05E               	goto	l10620
 21230  0024F6                     L24:
 21231  0024F6  6F9E               	movwf	_MSDReadState& (0+255),b
 21232                           
 21233                           ;usb_device_msd.c: 1109: break;
 21234  0024F8  D071               	goto	l668
 21235  0024FA                     l675:
 21236                           
 21237                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21238                           
 21239                           ; BSR set to: 0
 21240                           
 21241                           ; BSR set to: 0
 21242  0024FA  0E01               	movlw	1
 21243  0024FC  0100               	movlb	0	; () banked
 21244  0024FE  2787               	addwf	_LBA& (0+255),f,b
 21245  002500  0E00               	movlw	0
 21246  002502  2388               	addwfc	(_LBA+1)& (0+255),f,b
 21247  002504  2389               	addwfc	(_LBA+2)& (0+255),f,b
 21248  002506  238A               	addwfc	(_LBA+3)& (0+255),f,b
 21249                           
 21250                           ; BSR set to: 0
 21251                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21252  002508  0E00               	movlw	0
 21253  00250A  010D               	movlb	13	; () banked
 21254  00250C  6F88               	movwf	136,b	;volatile
 21255  00250E  0E02               	movlw	2
 21256  002510  6F89               	movwf	137,b	;volatile
 21257  002512  0E00               	movlw	0
 21258  002514  6F8A               	movwf	138,b	;volatile
 21259  002516  0E00               	movlw	0
 21260  002518  6F8B               	movwf	139,b	;volatile
 21261                           
 21262                           ; BSR set to: 13
 21263                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21264  00251A  0E00               	movlw	0
 21265  00251C  0101               	movlb	1	; () banked
 21266  00251E  6F71               	movwf	_ptrNextData& (0+255),b
 21267  002520  0E06               	movlw	6
 21268  002522  6F72               	movwf	(_ptrNextData+1)& (0+255),b
 21269                           
 21270                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21271  002524  0E03               	movlw	3
 21272  002526  0100               	movlb	0	; () banked
 21273  002528  6F9E               	movwf	_MSDReadState& (0+255),b
 21274  00252A                     
 21275                           ; BSR set to: 0
 21276                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21277                           
 21278                           ; BSR set to: 0
 21279  00252A  010D               	movlb	13	; () banked
 21280  00252C  5188               	movf	136,w,b	;volatile
 21281  00252E  1189               	iorwf	137,w,b	;volatile
 21282  002530  118A               	iorwf	138,w,b	;volatile
 21283  002532  118B               	iorwf	139,w,b	;volatile
 21284  002534  A4D8               	btfss	status,2,c
 21285  002536  D002               	goto	l677
 21286                           
 21287                           ; BSR set to: 13
 21288                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21289  002538  0E01               	movlw	1
 21290  00253A  D03C               	goto	L26
 21291  00253C                     l677:
 21292                           
 21293                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21294                           
 21295                           ; BSR set to: 0
 21296  00253C  0E04               	movlw	4
 21297  00253E  0100               	movlb	0	; () banked
 21298  002540  6F9E               	movwf	_MSDReadState& (0+255),b
 21299  002542                     
 21300                           ; BSR set to: 0
 21301                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21302                           
 21303                           ; BSR set to: 0
 21304  002542  518D               	movf	_USBMSDInHandle& (0+255),w,b
 21305  002544  118E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21306  002546  B4D8               	btfsc	status,2,c
 21307  002548  D006               	goto	l679
 21308                           
 21309                           ; BSR set to: 0
 21310  00254A  C08D  FFD9         	movff	_USBMSDInHandle,fsr2l
 21311  00254E  C08E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21312  002552  BEDF               	btfsc	indf2,7,c
 21313  002554  D043               	goto	l668
 21314  002556                     l679:
 21315                           
 21316                           ; BSR set to: 0
 21317                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21318                           
 21319                           ; BSR set to: 0
 21320  002556  0E01               	movlw	1
 21321  002558  6E01               	movwf	USBTransferOnePacket@dir,c
 21322  00255A  C171  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21323  00255E  C172  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21324  002562  0E40               	movlw	64
 21325  002564  6E04               	movwf	USBTransferOnePacket@len,c
 21326  002566  0E02               	movlw	2
 21327  002568  ECC4  F01E         	call	_USBTransferOnePacket
 21328  00256C  C001  F08D         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21329  002570  C002  F08E         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21330                           
 21331                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21332  002574  0E03               	movlw	3
 21333  002576  0100               	movlb	0	; () banked
 21334  002578  6F9E               	movwf	_MSDReadState& (0+255),b
 21335                           
 21336                           ; BSR set to: 0
 21337                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21338  00257A  0E40               	movlw	64
 21339  00257C  0101               	movlb	1	; () banked
 21340  00257E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21341  002580  0E00               	movlw	0
 21342  002582  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21343  002584  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21344  002586  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21345                           
 21346                           ; BSR set to: 1
 21347                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21348  002588  0E40               	movlw	64
 21349  00258A  010D               	movlb	13	; () banked
 21350  00258C  5F88               	subwf	136,f,b	;volatile
 21351  00258E  0E00               	movlw	0
 21352  002590  5B89               	subwfb	137,f,b	;volatile
 21353  002592  5B8A               	subwfb	138,f,b	;volatile
 21354  002594  5B8B               	subwfb	139,f,b	;volatile
 21355                           
 21356                           ; BSR set to: 13
 21357                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21358  002596  0E40               	movlw	64
 21359  002598  0101               	movlb	1	; () banked
 21360  00259A  2771               	addwf	_ptrNextData& (0+255),f,b
 21361  00259C  0E00               	movlw	0
 21362  00259E  2372               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21363                           
 21364                           ;usb_device_msd.c: 1149: break;
 21365  0025A0  D01D               	goto	l668
 21366  0025A2                     
 21367                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 21368                           
 21369                           ; BSR set to: 1
 21370  0025A2  0E02               	movlw	2
 21371  0025A4  010D               	movlb	13	; () banked
 21372  0025A6  6F8C               	movwf	140,b	;volatile
 21373                           
 21374                           ; BSR set to: 13
 21375                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 21376  0025A8  0E01               	movlw	1
 21377  0025AA  6E01               	movwf	USBStallEndpoint@dir,c
 21378  0025AC  0E02               	movlw	2
 21379  0025AE  EC3A  F01D         	call	_USBStallEndpoint
 21380  0025B2                     l10620:
 21381                           
 21382                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 21383  0025B2  0E00               	movlw	0
 21384  0025B4                     L26:
 21385  0025B4  0100               	movlb	0	; () banked
 21386  0025B6  D79F               	goto	L24
 21387  0025B8                     l665:
 21388                           
 21389                           ; BSR set to: 0
 21390  0025B8  0100               	movlb	0	; () banked
 21391  0025BA  519E               	movf	_MSDReadState& (0+255),w,b
 21392                           
 21393                           ; Switch size 1, requested type "space"
 21394                           ; Number of cases is 5, Range of values is 0 to 4
 21395                           ; switch strategies available:
 21396                           ; Name         Instructions Cycles
 21397                           ; simple_byte           16     9 (average)
 21398                           ;	Chosen strategy is simple_byte
 21399  0025BC  0A00               	xorlw	0	; case 0
 21400  0025BE  B4D8               	btfsc	status,2,c
 21401  0025C0  D724               	goto	l666
 21402  0025C2  0A01               	xorlw	1	; case 1
 21403  0025C4  B4D8               	btfsc	status,2,c
 21404  0025C6  D74B               	goto	l669
 21405  0025C8  0A03               	xorlw	3	; case 2
 21406  0025CA  B4D8               	btfsc	status,2,c
 21407  0025CC  D753               	goto	l671
 21408  0025CE  0A01               	xorlw	1	; case 3
 21409  0025D0  B4D8               	btfsc	status,2,c
 21410  0025D2  D7AB               	goto	l676
 21411  0025D4  0A07               	xorlw	7	; case 4
 21412  0025D6  B4D8               	btfsc	status,2,c
 21413  0025D8  D7B4               	goto	l678
 21414  0025DA  D7E3               	goto	l680
 21415  0025DC                     l668:
 21416                           
 21417                           ;usb_device_msd.c: 1161: return MSDReadState;
 21418                           
 21419                           ; BSR set to: 0
 21420  0025DC  0100               	movlb	0	; () banked
 21421  0025DE  519E               	movf	_MSDReadState& (0+255),w,b
 21422  0025E0  0012               	return	
 21423  0025E2                     __end_of_MSDReadHandler:
 21424                           	opt stack 0
 21425                           tosu	equ	0xFFF
 21426                           tosh	equ	0xFFE
 21427                           tosl	equ	0xFFD
 21428                           pclath	equ	0xFFA
 21429                           tblptru	equ	0xFF8
 21430                           tblptrh	equ	0xFF7
 21431                           tblptrl	equ	0xFF6
 21432                           tablat	equ	0xFF5
 21433                           prodh	equ	0xFF4
 21434                           prodl	equ	0xFF3
 21435                           intcon	equ	0xFF2
 21436                           intcon2	equ	0xFF1
 21437                           intcon3	equ	0xFF0
 21438                           indf0	equ	0xFEF
 21439                           postinc0	equ	0xFEE
 21440                           fsr0h	equ	0xFEA
 21441                           fsr0l	equ	0xFE9
 21442                           wreg	equ	0xFE8
 21443                           indf1	equ	0xFE7
 21444                           postdec1	equ	0xFE5
 21445                           plusw1	equ	0xFE3
 21446                           fsr1h	equ	0xFE2
 21447                           fsr1l	equ	0xFE1
 21448                           indf2	equ	0xFDF
 21449                           postinc2	equ	0xFDE
 21450                           postdec2	equ	0xFDD
 21451                           plusw2	equ	0xFDB
 21452                           fsr2h	equ	0xFDA
 21453                           fsr2l	equ	0xFD9
 21454                           status	equ	0xFD8
 21455                           
 21456 ;; *************** function _MSDCheckForErrorCases *****************
 21457 ;; Defined at:
 21458 ;;		line 1434 in file "usb_device_msd.c"
 21459 ;; Parameters:    Size  Location     Type
 21460 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 21461 ;; Auto vars:     Size  Location     Type
 21462 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 21463 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 21464 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 21465 ;; Return value:  Size  Location     Type
 21466 ;;                  1    wreg      unsigned char 
 21467 ;; Registers used:
 21468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21469 ;; Tracked objects:
 21470 ;;		On entry : 0/0
 21471 ;;		On exit  : 0/0
 21472 ;;		Unchanged: 0/0
 21473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21475 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21477 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21478 ;;Total ram usage:        7 bytes
 21479 ;; Hardware stack levels used:    1
 21480 ;; Hardware stack levels required when called:    2
 21481 ;; This function calls:
 21482 ;;		_MSDErrorHandler
 21483 ;; This function is called by:
 21484 ;;		_MSDProcessCommandMediaPresent
 21485 ;;		_MSDReadHandler
 21486 ;;		_MSDWriteHandler
 21487 ;; This function uses a non-reentrant model
 21488 ;;
 21489                           
 21490                           	psect	text101
 21491  004348                     __ptext101:
 21492                           	opt stack 0
 21493  004348                     _MSDCheckForErrorCases:
 21494                           	opt stack 23
 21495                           
 21496                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 21497                           
 21498                           ; BSR set to: 0
 21499                           ;incstack = 0
 21500  004348  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21501  00434A  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21502  00434C  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21503  00434E  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21504  004350  A4D8               	btfss	status,2,c
 21505  004352  D002               	goto	l710
 21506                           
 21507                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 21508  004354  0E01               	movlw	1
 21509  004356  D001               	goto	L27
 21510  004358                     l710:
 21511                           
 21512                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 21513  004358  0E00               	movlw	0
 21514  00435A                     L27:
 21515  00435A  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 21516                           
 21517                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 21518  00435C  0100               	movlb	0	; () banked
 21519  00435E  059A               	decf	_MSDHostNoData& (0+255),w,b
 21520  004360  A4D8               	btfss	status,2,c
 21521  004362  D005               	goto	l712
 21522                           
 21523                           ; BSR set to: 0
 21524  004364  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21525  004366  A4D8               	btfss	status,2,c
 21526  004368  D002               	goto	l712
 21527                           
 21528                           ; BSR set to: 0
 21529                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 21530  00436A  0E00               	movlw	0
 21531                           
 21532                           ; BSR set to: 0
 21533  00436C  0012               	return	
 21534  00436E                     l712:
 21535                           
 21536                           ; BSR set to: 0
 21537                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 21538                           
 21539                           ; BSR set to: 0
 21540  00436E  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21541  004370  0101               	movlb	1	; () banked
 21542  004372  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 21543  004374  E11A               	bnz	l10214
 21544  004376  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21545  004378  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 21546  00437A  E117               	bnz	l10214
 21547  00437C  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21548  00437E  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 21549  004380  E114               	bnz	l10214
 21550  004382  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21551  004384  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 21552  004386  A4D8               	btfss	status,2,c
 21553  004388  D010               	goto	l718
 21554                           
 21555                           ; BSR set to: 1
 21556                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 21557  00438A  0100               	movlb	0	; () banked
 21558  00438C  05A0               	decf	_MSD_State& (0+255),w,b
 21559  00438E  A4D8               	btfss	status,2,c
 21560  004390  D006               	goto	l715
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 21564  004392  0E2A               	movlw	42
 21565  004394  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21566  004396  B4D8               	btfsc	status,2,c
 21567  004398  D008               	goto	l718
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 21571  00439A  0E00               	movlw	0
 21572                           
 21573                           ; BSR set to: 0
 21574  00439C  0012               	return	
 21575  00439E                     l715:
 21576                           
 21577                           ; BSR set to: 0
 21578                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 21579                           
 21580                           ; BSR set to: 0
 21581  00439E  0E2A               	movlw	42
 21582  0043A0  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21583  0043A2  A4D8               	btfss	status,2,c
 21584  0043A4  D002               	goto	l718
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 21588  0043A6  0E00               	movlw	0
 21589                           
 21590                           ; BSR set to: 0
 21591  0043A8  0012               	return	
 21592  0043AA                     l718:
 21593  0043AA                     l10214:
 21594                           
 21595                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 21596  0043AA  0101               	movlb	1	; () banked
 21597  0043AC  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21598  0043AE  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 21599  0043B0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21600  0043B2  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21601  0043B4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21602  0043B6  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21603  0043B8  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21604  0043BA  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21605  0043BC  B0D8               	btfsc	status,0,c
 21606  0043BE  D002               	goto	l719
 21607                           
 21608                           ; BSR set to: 1
 21609                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 21610  0043C0  0E01               	movlw	1
 21611  0043C2  D001               	goto	L28
 21612  0043C4                     l719:
 21613                           
 21614                           ; BSR set to: 1
 21615                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 21616                           
 21617                           ; BSR set to: 1
 21618  0043C4  0E00               	movlw	0
 21619  0043C6                     L28:
 21620  0043C6  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 21621                           
 21622                           ; BSR set to: 1
 21623                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 21624                           
 21625                           ; BSR set to: 1
 21626  0043C8  0E02               	movlw	2
 21627  0043CA  0100               	movlb	0	; () banked
 21628  0043CC  19A0               	xorwf	_MSD_State& (0+255),w,b
 21629  0043CE  A4D8               	btfss	status,2,c
 21630  0043D0  D014               	goto	l721
 21631                           
 21632                           ; BSR set to: 0
 21633                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 21634  0043D2  0E2A               	movlw	42
 21635  0043D4  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21636  0043D6  B4D8               	btfsc	status,2,c
 21637  0043D8  D005               	goto	l722
 21638                           
 21639                           ; BSR set to: 0
 21640  0043DA  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 21641  0043DC  A4D8               	btfss	status,2,c
 21642  0043DE  D002               	goto	l722
 21643  0043E0                     u7430:
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 21647  0043E0  0E05               	movlw	5
 21648  0043E2  D01D               	goto	L31
 21649  0043E4                     l722:
 21650                           
 21651                           ; BSR set to: 0
 21652                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 21653                           
 21654                           ; BSR set to: 0
 21655  0043E4  059A               	decf	_MSDHostNoData& (0+255),w,b
 21656  0043E6  B4D8               	btfsc	status,2,c
 21657  0043E8  D00F               	goto	u7480
 21658                           
 21659                           ; BSR set to: 0
 21660                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 21661                           
 21662                           ; BSR set to: 0
 21663                           
 21664                           ; BSR set to: 0
 21665                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 21666  0043EA  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21667  0043EC  B4D8               	btfsc	status,2,c
 21668  0043EE  D003               	goto	u7460
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 21672                           
 21673                           ; BSR set to: 0
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 21677  0043F0  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21678  0043F2  A4D8               	btfss	status,2,c
 21679  0043F4  D7F5               	goto	u7430
 21680  0043F6                     u7460:
 21681                           
 21682                           ; BSR set to: 0
 21683                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 21684  0043F6  0E04               	movlw	4
 21685  0043F8  D012               	goto	L31
 21686  0043FA                     l721:
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 21690                           
 21691                           ; BSR set to: 0
 21692  0043FA  0E2A               	movlw	42
 21693  0043FC  199F               	xorwf	_MSDCommandState& (0+255),w,b
 21694  0043FE  B4D8               	btfsc	status,2,c
 21695  004400  D00D               	goto	l737
 21696                           
 21697                           ; BSR set to: 0
 21698                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 21699                           
 21700                           ; BSR set to: 0
 21701                           
 21702                           ; BSR set to: 0
 21703                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 21704  004402  059A               	decf	_MSDHostNoData& (0+255),w,b
 21705  004404  A4D8               	btfss	status,2,c
 21706  004406  D002               	goto	l733
 21707  004408                     u7480:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 21711  004408  0E01               	movlw	1
 21712  00440A  D009               	goto	L31
 21713  00440C                     l733:
 21714                           
 21715                           ; BSR set to: 0
 21716                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 21717                           
 21718                           ; BSR set to: 0
 21719  00440C  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21720  00440E  B4D8               	btfsc	status,2,c
 21721  004410  D003               	goto	u7500
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 21725                           
 21726                           ; BSR set to: 0
 21727                           
 21728                           ; BSR set to: 0
 21729                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 21730  004412  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 21731  004414  A4D8               	btfss	status,2,c
 21732  004416  D002               	goto	l737
 21733  004418                     u7500:
 21734                           
 21735                           ; BSR set to: 0
 21736                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 21737  004418  0E02               	movlw	2
 21738  00441A  D001               	goto	L31
 21739  00441C                     l737:
 21740                           
 21741                           ; BSR set to: 0
 21742                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 21743                           
 21744                           ; BSR set to: 0
 21745  00441C  0E03               	movlw	3
 21746  00441E                     L31:
 21747  00441E  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 21748                           
 21749                           ; BSR set to: 0
 21750                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 21751                           
 21752                           ; BSR set to: 0
 21753                           
 21754                           ; BSR set to: 0
 21755                           
 21756                           ; BSR set to: 0
 21757                           
 21758                           ; BSR set to: 0
 21759                           
 21760                           ; BSR set to: 0
 21761  004420  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21762  004422  EC41  F01E         	call	_MSDErrorHandler
 21763                           
 21764                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 21765  004426  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 21766  004428  0012               	return	
 21767  00442A                     __end_of_MSDCheckForErrorCases:
 21768                           	opt stack 0
 21769                           tosu	equ	0xFFF
 21770                           tosh	equ	0xFFE
 21771                           tosl	equ	0xFFD
 21772                           pclath	equ	0xFFA
 21773                           tblptru	equ	0xFF8
 21774                           tblptrh	equ	0xFF7
 21775                           tblptrl	equ	0xFF6
 21776                           tablat	equ	0xFF5
 21777                           prodh	equ	0xFF4
 21778                           prodl	equ	0xFF3
 21779                           intcon	equ	0xFF2
 21780                           intcon2	equ	0xFF1
 21781                           intcon3	equ	0xFF0
 21782                           indf0	equ	0xFEF
 21783                           postinc0	equ	0xFEE
 21784                           fsr0h	equ	0xFEA
 21785                           fsr0l	equ	0xFE9
 21786                           wreg	equ	0xFE8
 21787                           indf1	equ	0xFE7
 21788                           postdec1	equ	0xFE5
 21789                           plusw1	equ	0xFE3
 21790                           fsr1h	equ	0xFE2
 21791                           fsr1l	equ	0xFE1
 21792                           indf2	equ	0xFDF
 21793                           postinc2	equ	0xFDE
 21794                           postdec2	equ	0xFDD
 21795                           plusw2	equ	0xFDB
 21796                           fsr2h	equ	0xFDA
 21797                           fsr2l	equ	0xFD9
 21798                           status	equ	0xFD8
 21799                           
 21800 ;; *************** function _MSDErrorHandler *****************
 21801 ;; Defined at:
 21802 ;;		line 1577 in file "usb_device_msd.c"
 21803 ;; Parameters:    Size  Location     Type
 21804 ;;  ErrorCase       1    wreg     unsigned char 
 21805 ;; Auto vars:     Size  Location     Type
 21806 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 21807 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 21808 ;; Return value:  Size  Location     Type
 21809 ;;                  1    wreg      void 
 21810 ;; Registers used:
 21811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21812 ;; Tracked objects:
 21813 ;;		On entry : 0/0
 21814 ;;		On exit  : 0/0
 21815 ;;		Unchanged: 0/0
 21816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21821 ;;Total ram usage:        2 bytes
 21822 ;; Hardware stack levels used:    1
 21823 ;; Hardware stack levels required when called:    1
 21824 ;; This function calls:
 21825 ;;		_ResetSenseData
 21826 ;;		_USBStallEndpoint
 21827 ;; This function is called by:
 21828 ;;		_MSDProcessCommandMediaAbsent
 21829 ;;		_MSDProcessCommandMediaPresent
 21830 ;;		_MSDCheckForErrorCases
 21831 ;; This function uses a non-reentrant model
 21832 ;;
 21833                           
 21834                           	psect	text102
 21835  003C82                     __ptext102:
 21836                           	opt stack 0
 21837  003C82                     _MSDErrorHandler:
 21838                           	opt stack 23
 21839                           
 21840                           ;incstack = 0
 21841                           ;MSDErrorHandler@ErrorCase stored from wreg
 21842  003C82  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 21843                           
 21844                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 21845  003C84  0100               	movlb	0	; () banked
 21846  003C86  518D               	movf	_USBMSDInHandle& (0+255),w,b
 21847  003C88  118E               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21848  003C8A  B4D8               	btfsc	status,2,c
 21849  003C8C  D006               	goto	u7060
 21850                           
 21851                           ; BSR set to: 0
 21852  003C8E  C08D  FFD9         	movff	_USBMSDInHandle,fsr2l
 21853  003C92  C08E  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21854  003C96  BEDF               	btfsc	indf2,7,c
 21855  003C98  0012               	return	
 21856  003C9A                     u7060:
 21857                           
 21858                           ; BSR set to: 0
 21859                           
 21860                           ; BSR set to: 0
 21861  003C9A  518F               	movf	_USBMSDOutHandle& (0+255),w,b
 21862  003C9C  1190               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21863  003C9E  B4D8               	btfsc	status,2,c
 21864  003CA0  D006               	goto	l741
 21865                           
 21866                           ; BSR set to: 0
 21867  003CA2  C08F  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21868  003CA6  C090  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21869  003CAA  BEDF               	btfsc	indf2,7,c
 21870  003CAC  0012               	return	
 21871  003CAE                     l741:
 21872                           
 21873                           ; BSR set to: 0
 21874                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 21875  003CAE  C0A0  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 21876                           
 21877                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 21878  003CB2  699F               	setf	_MSDCommandState& (0+255),b
 21879                           
 21880                           ; BSR set to: 0
 21881                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 21882  003CB4  0E00               	movlw	0
 21883  003CB6  6F9E               	movwf	_MSDReadState& (0+255),b
 21884                           
 21885                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 21886  003CB8  0E00               	movlw	0
 21887  003CBA  6F9D               	movwf	_MSDWriteState& (0+255),b
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 21891  003CBC  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 21892  003CC0  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 21893  003CC4  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 21894  003CC8  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 21895                           
 21896                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 21897  003CCC  0E01               	movlw	1
 21898  003CCE  010D               	movlb	13	; () banked
 21899  003CD0  6F8C               	movwf	140,b	;volatile
 21900                           
 21901                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 21902  003CD2  0E03               	movlw	3
 21903  003CD4  0100               	movlb	0	; () banked
 21904  003CD6  6FA0               	movwf	_MSD_State& (0+255),b
 21905                           
 21906                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 21907  003CD8  D043               	goto	l747
 21908  003CDA                     
 21909                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 21910                           
 21911                           ; BSR set to: 0
 21912  003CDA  0E02               	movlw	2
 21913  003CDC  010D               	movlb	13	; () banked
 21914  003CDE  6F8C               	movwf	140,b	;volatile
 21915                           
 21916                           ;usb_device_msd.c: 1607: break;
 21917  003CE0  0012               	return	
 21918  003CE2                     
 21919                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 21920                           
 21921                           ; BSR set to: 13
 21922  003CE2  0E01               	movlw	1
 21923  003CE4  6E01               	movwf	USBStallEndpoint@dir,c
 21924  003CE6  0E02               	movlw	2
 21925  003CE8  EC3A  F01D         	call	_USBStallEndpoint
 21926                           
 21927                           ;usb_device_msd.c: 1611: break;
 21928  003CEC  0012               	return	
 21929  003CEE                     
 21930                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 21931  003CEE  0E02               	movlw	2
 21932  003CF0  010D               	movlb	13	; () banked
 21933  003CF2  6F8C               	movwf	140,b	;volatile
 21934                           
 21935                           ; BSR set to: 13
 21936                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 21937  003CF4  0E01               	movlw	1
 21938  003CF6  6E01               	movwf	USBStallEndpoint@dir,c
 21939  003CF8  0E02               	movlw	2
 21940  003CFA  EC3A  F01D         	call	_USBStallEndpoint
 21941                           
 21942                           ;usb_device_msd.c: 1616: break;
 21943  003CFE  0012               	return	
 21944  003D00                     
 21945                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 21946  003D00  0E00               	movlw	0
 21947  003D02  6E01               	movwf	USBStallEndpoint@dir,c
 21948  003D04  0E02               	movlw	2
 21949  003D06  EC3A  F01D         	call	_USBStallEndpoint
 21950                           
 21951                           ;usb_device_msd.c: 1620: break;
 21952  003D0A  0012               	return	
 21953  003D0C                     
 21954                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 21955  003D0C  0E02               	movlw	2
 21956  003D0E  010D               	movlb	13	; () banked
 21957  003D10  6F8C               	movwf	140,b	;volatile
 21958                           
 21959                           ; BSR set to: 13
 21960                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 21961  003D12  0E00               	movlw	0
 21962  003D14  6E01               	movwf	USBStallEndpoint@dir,c
 21963  003D16  0E02               	movlw	2
 21964  003D18  EC3A  F01D         	call	_USBStallEndpoint
 21965                           
 21966                           ;usb_device_msd.c: 1625: break;
 21967  003D1C  0012               	return	
 21968  003D1E                     
 21969                           ;usb_device_msd.c: 1628: ResetSenseData();
 21970  003D1E  ECE4  F030         	call	_ResetSenseData	;wreg free
 21971                           
 21972                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 21973  003D22  0101               	movlb	1	; () banked
 21974  003D24  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21975  003D26  0BF0               	andlw	-16
 21976  003D28  0905               	iorlw	5
 21977  003D2A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21978                           
 21979                           ; BSR set to: 1
 21980                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 21981  003D2C  0E20               	movlw	32
 21982  003D2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 21986  003D30  0E00               	movlw	0
 21987  003D32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21988                           
 21989                           ; BSR set to: 1
 21990                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 21991  003D34  0E02               	movlw	2
 21992  003D36  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 21993  003D38  A4D8               	btfss	status,2,c
 21994  003D3A  D00C               	goto	l755
 21995                           
 21996                           ; BSR set to: 1
 21997  003D3C  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21998  003D3E  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 21999  003D40  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22000  003D42  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22001  003D44  B4D8               	btfsc	status,2,c
 22002  003D46  D006               	goto	l755
 22003                           
 22004                           ; BSR set to: 1
 22005                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22006  003D48  0E00               	movlw	0
 22007  003D4A  6E01               	movwf	USBStallEndpoint@dir,c
 22008  003D4C  0E02               	movlw	2
 22009  003D4E  EC3A  F01D         	call	_USBStallEndpoint
 22010                           
 22011                           ;usb_device_msd.c: 1636: }
 22012  003D52  0012               	return	
 22013  003D54                     l755:
 22014                           
 22015                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22016  003D54  0E01               	movlw	1
 22017  003D56  6E01               	movwf	USBStallEndpoint@dir,c
 22018  003D58  0E02               	movlw	2
 22019  003D5A  EC3A  F01D         	call	_USBStallEndpoint
 22020                           
 22021                           ;usb_device_msd.c: 1644: }
 22022                           
 22023                           ;usb_device_msd.c: 1643: break;
 22024                           
 22025                           ;usb_device_msd.c: 1642: default:
 22026                           
 22027                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22028  003D5E  0012               	return	
 22029  003D60                     l747:
 22030  003D60  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22031                           
 22032                           ; Switch size 1, requested type "space"
 22033                           ; Number of cases is 6, Range of values is 1 to 127
 22034                           ; switch strategies available:
 22035                           ; Name         Instructions Cycles
 22036                           ; simple_byte           19    10 (average)
 22037                           ;	Chosen strategy is simple_byte
 22038  003D62  0A01               	xorlw	1	; case 1
 22039  003D64  B4D8               	btfsc	status,2,c
 22040  003D66  D7B9               	goto	l748
 22041  003D68  0A03               	xorlw	3	; case 2
 22042  003D6A  B4D8               	btfsc	status,2,c
 22043  003D6C  D7BA               	goto	l750
 22044  003D6E  0A01               	xorlw	1	; case 3
 22045  003D70  B4D8               	btfsc	status,2,c
 22046  003D72  D7BD               	goto	l751
 22047  003D74  0A07               	xorlw	7	; case 4
 22048  003D76  B4D8               	btfsc	status,2,c
 22049  003D78  D7C3               	goto	l752
 22050  003D7A  0A01               	xorlw	1	; case 5
 22051  003D7C  B4D8               	btfsc	status,2,c
 22052  003D7E  D7C6               	goto	l753
 22053  003D80  0A7A               	xorlw	122	; case 127
 22054  003D82  A4D8               	btfss	status,2,c
 22055  003D84  0012               	return	
 22056  003D86  D7CB               	goto	l754
 22057  003D88                     __end_of_MSDErrorHandler:
 22058                           	opt stack 0
 22059                           tosu	equ	0xFFF
 22060                           tosh	equ	0xFFE
 22061                           tosl	equ	0xFFD
 22062                           pclath	equ	0xFFA
 22063                           tblptru	equ	0xFF8
 22064                           tblptrh	equ	0xFF7
 22065                           tblptrl	equ	0xFF6
 22066                           tablat	equ	0xFF5
 22067                           prodh	equ	0xFF4
 22068                           prodl	equ	0xFF3
 22069                           intcon	equ	0xFF2
 22070                           intcon2	equ	0xFF1
 22071                           intcon3	equ	0xFF0
 22072                           indf0	equ	0xFEF
 22073                           postinc0	equ	0xFEE
 22074                           fsr0h	equ	0xFEA
 22075                           fsr0l	equ	0xFE9
 22076                           wreg	equ	0xFE8
 22077                           indf1	equ	0xFE7
 22078                           postdec1	equ	0xFE5
 22079                           plusw1	equ	0xFE3
 22080                           fsr1h	equ	0xFE2
 22081                           fsr1l	equ	0xFE1
 22082                           indf2	equ	0xFDF
 22083                           postinc2	equ	0xFDE
 22084                           postdec2	equ	0xFDD
 22085                           plusw2	equ	0xFDB
 22086                           fsr2h	equ	0xFDA
 22087                           fsr2l	equ	0xFD9
 22088                           status	equ	0xFD8
 22089                           
 22090 ;; *************** function _USBStallEndpoint *****************
 22091 ;; Defined at:
 22092 ;;		line 1073 in file "usb_device.c"
 22093 ;; Parameters:    Size  Location     Type
 22094 ;;  ep              1    wreg     unsigned char 
 22095 ;;  dir             1    0[COMRAM] unsigned char 
 22096 ;; Auto vars:     Size  Location     Type
 22097 ;;  ep              1    5[COMRAM] unsigned char 
 22098 ;;  p               2    6[COMRAM] PTR struct __BDT
 22099 ;;		 -> BDT(48), 
 22100 ;; Return value:  Size  Location     Type
 22101 ;;                  1    wreg      void 
 22102 ;; Registers used:
 22103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22104 ;; Tracked objects:
 22105 ;;		On entry : 0/0
 22106 ;;		On exit  : 0/0
 22107 ;;		Unchanged: 0/0
 22108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22110 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22111 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22113 ;;Total ram usage:        8 bytes
 22114 ;; Hardware stack levels used:    1
 22115 ;; This function calls:
 22116 ;;		Nothing
 22117 ;; This function is called by:
 22118 ;;		_MSDTasks
 22119 ;;		_MSDReadHandler
 22120 ;;		_MSDWriteHandler
 22121 ;;		_MSDErrorHandler
 22122 ;;		_MSDTransferTerminated
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           	psect	text103
 22127  003A74                     __ptext103:
 22128                           	opt stack 0
 22129  003A74                     _USBStallEndpoint:
 22130                           	opt stack 27
 22131                           
 22132                           ;incstack = 0
 22133                           ;USBStallEndpoint@ep stored from wreg
 22134  003A74  6E06               	movwf	USBStallEndpoint@ep,c
 22135                           
 22136                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22137  003A76  5006               	movf	USBStallEndpoint@ep,w,c
 22138  003A78  A4D8               	btfss	status,2,c
 22139  003A7A  D02C               	goto	l191
 22140                           
 22141                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22142  003A7C  0100               	movlb	0	; () banked
 22143  003A7E  EE20 F001          	lfsr	2,1
 22144  003A82  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22145  003A84  26D9               	addwf	fsr2l,f,c
 22146  003A86  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22147  003A88  22DA               	addwfc	fsr2h,f,c
 22148  003A8A  0E08               	movlw	8
 22149  003A8C  6EDF               	movwf	indf2,c
 22150                           
 22151                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22152  003A8E  EE20 F002          	lfsr	2,2
 22153  003A92  5191               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22154  003A94  26D9               	addwf	fsr2l,f,c
 22155  003A96  5192               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22156  003A98  22DA               	addwfc	fsr2h,f,c
 22157  003A9A  0E30               	movlw	48
 22158  003A9C  6EDE               	movwf	postinc2,c
 22159  003A9E  0E0D               	movlw	13
 22160  003AA0  6EDD               	movwf	postdec2,c
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22164  003AA2  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22165  003AA6  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22166  003AAA  0E0C               	movlw	12
 22167  003AAC  6EDF               	movwf	indf2,c
 22168                           
 22169                           ; BSR set to: 0
 22170                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22171  003AAE  C091  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22172  003AB2  C092  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22173  003AB6  0E00               	movlw	0
 22174  003AB8  8EDB               	bsf	plusw2,7,c
 22175                           
 22176                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22177  003ABA  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 22178  003ABE  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22179  003AC2  0E04               	movlw	4
 22180  003AC4  6EDF               	movwf	indf2,c
 22181                           
 22182                           ; BSR set to: 0
 22183                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22184  003AC6  C073  FFD9         	movff	_pBDTEntryIn,fsr2l
 22185  003ACA  C074  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22186  003ACE  0E00               	movlw	0
 22187  003AD0  8EDB               	bsf	plusw2,7,c
 22188                           
 22189                           ;usb_device.c: 1089: }
 22190  003AD2  0012               	return	
 22191  003AD4                     l191:
 22192                           
 22193                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22194                           
 22195                           ; BSR set to: 0
 22196  003AD4  5001               	movf	USBStallEndpoint@dir,w,c
 22197  003AD6  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22198  003AD8  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22199  003ADA  90D8               	bcf	status,0,c
 22200  003ADC  3602               	rlcf	??_USBStallEndpoint,f,c
 22201  003ADE  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22202  003AE0  5006               	movf	USBStallEndpoint@ep,w,c
 22203  003AE2  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22204  003AE4  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22205  003AE6  90D8               	bcf	status,0,c
 22206  003AE8  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22207  003AEA  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22208  003AEC  90D8               	bcf	status,0,c
 22209  003AEE  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22210  003AF0  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22211  003AF2  5002               	movf	??_USBStallEndpoint,w,c
 22212  003AF4  2604               	addwf	??_USBStallEndpoint+2,f,c
 22213  003AF6  5003               	movf	??_USBStallEndpoint+1,w,c
 22214  003AF8  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22215  003AFA  90D8               	bcf	status,0,c
 22216  003AFC  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22217  003AFE  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22218  003B00  90D8               	bcf	status,0,c
 22219  003B02  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22220  003B04  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22221  003B06  0E00               	movlw	0
 22222  003B08  2404               	addwf	??_USBStallEndpoint+2,w,c
 22223  003B0A  6E07               	movwf	USBStallEndpoint@p,c
 22224  003B0C  0E0D               	movlw	13
 22225  003B0E  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22226  003B10  6E08               	movwf	USBStallEndpoint@p+1,c
 22227                           
 22228                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22229  003B12  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22230  003B16  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22231  003B1A  0E00               	movlw	0
 22232  003B1C  84DB               	bsf	plusw2,2,c
 22233                           
 22234                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22235  003B1E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22236  003B22  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22237  003B26  0E00               	movlw	0
 22238  003B28  8EDB               	bsf	plusw2,7,c
 22239                           
 22240                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22241  003B2A  5006               	movf	USBStallEndpoint@ep,w,c
 22242  003B2C  0D04               	mullw	4
 22243  003B2E  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22244  003B32  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22245  003B36  5001               	movf	USBStallEndpoint@dir,w,c
 22246  003B38  0D02               	mullw	2
 22247  003B3A  50F3               	movf	prodl,w,c
 22248  003B3C  2602               	addwf	??_USBStallEndpoint,f,c
 22249  003B3E  50F4               	movf	prodh,w,c
 22250  003B40  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22251  003B42  90D8               	bcf	status,0,c
 22252  003B44  3602               	rlcf	??_USBStallEndpoint,f,c
 22253  003B46  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22254  003B48  90D8               	bcf	status,0,c
 22255  003B4A  3602               	rlcf	??_USBStallEndpoint,f,c
 22256  003B4C  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22257  003B4E  0E04               	movlw	4
 22258  003B50  2602               	addwf	??_USBStallEndpoint,f,c
 22259  003B52  0E00               	movlw	0
 22260  003B54  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22261  003B56  0E00               	movlw	0
 22262  003B58  2402               	addwf	??_USBStallEndpoint,w,c
 22263  003B5A  6E07               	movwf	USBStallEndpoint@p,c
 22264  003B5C  0E0D               	movlw	13
 22265  003B5E  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22266  003B60  6E08               	movwf	USBStallEndpoint@p+1,c
 22267                           
 22268                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22269  003B62  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22270  003B66  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22271  003B6A  0E00               	movlw	0
 22272  003B6C  84DB               	bsf	plusw2,2,c
 22273                           
 22274                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22275  003B6E  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22276  003B72  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22277  003B76  0E00               	movlw	0
 22278  003B78  8EDB               	bsf	plusw2,7,c
 22279  003B7A  0012               	return	
 22280  003B7C                     __end_of_USBStallEndpoint:
 22281                           	opt stack 0
 22282                           tosu	equ	0xFFF
 22283                           tosh	equ	0xFFE
 22284                           tosl	equ	0xFFD
 22285                           pclath	equ	0xFFA
 22286                           tblptru	equ	0xFF8
 22287                           tblptrh	equ	0xFF7
 22288                           tblptrl	equ	0xFF6
 22289                           tablat	equ	0xFF5
 22290                           prodh	equ	0xFF4
 22291                           prodl	equ	0xFF3
 22292                           intcon	equ	0xFF2
 22293                           intcon2	equ	0xFF1
 22294                           intcon3	equ	0xFF0
 22295                           indf0	equ	0xFEF
 22296                           postinc0	equ	0xFEE
 22297                           fsr0h	equ	0xFEA
 22298                           fsr0l	equ	0xFE9
 22299                           wreg	equ	0xFE8
 22300                           indf1	equ	0xFE7
 22301                           postdec1	equ	0xFE5
 22302                           plusw1	equ	0xFE3
 22303                           fsr1h	equ	0xFE2
 22304                           fsr1l	equ	0xFE1
 22305                           indf2	equ	0xFDF
 22306                           postinc2	equ	0xFDE
 22307                           postdec2	equ	0xFDD
 22308                           plusw2	equ	0xFDB
 22309                           fsr2h	equ	0xFDA
 22310                           fsr2l	equ	0xFD9
 22311                           status	equ	0xFD8
 22312                           
 22313 ;; *************** function _ResetSenseData *****************
 22314 ;; Defined at:
 22315 ;;		line 1373 in file "usb_device_msd.c"
 22316 ;; Parameters:    Size  Location     Type
 22317 ;;		None
 22318 ;; Auto vars:     Size  Location     Type
 22319 ;;		None
 22320 ;; Return value:  Size  Location     Type
 22321 ;;                  1    wreg      void 
 22322 ;; Registers used:
 22323 ;;		wreg, status,2
 22324 ;; Tracked objects:
 22325 ;;		On entry : 0/0
 22326 ;;		On exit  : 0/0
 22327 ;;		Unchanged: 0/0
 22328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22333 ;;Total ram usage:        0 bytes
 22334 ;; Hardware stack levels used:    1
 22335 ;; This function calls:
 22336 ;;		Nothing
 22337 ;; This function is called by:
 22338 ;;		_USBMSDInit
 22339 ;;		_MSDProcessCommandMediaAbsent
 22340 ;;		_MSDProcessCommandMediaPresent
 22341 ;;		_MSDErrorHandler
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345                           	psect	text104
 22346  0061C8                     __ptext104:
 22347                           	opt stack 0
 22348  0061C8                     _ResetSenseData:
 22349                           	opt stack 26
 22350                           
 22351                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22352                           
 22353                           ;incstack = 0
 22354  0061C8  0101               	movlb	1	; () banked
 22355  0061CA  911F               	bcf	_gblSenseData& (0+255),0,b
 22356  0061CC  931F               	bcf	_gblSenseData& (0+255),1,b
 22357  0061CE  951F               	bcf	_gblSenseData& (0+255),2,b
 22358  0061D0  971F               	bcf	_gblSenseData& (0+255),3,b
 22359  0061D2  891F               	bsf	_gblSenseData& (0+255),4,b
 22360  0061D4  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22361  0061D6  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22362                           
 22363                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22364  0061D8  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22365                           
 22366                           ; BSR set to: 1
 22367                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 22368  0061DA  0E00               	movlw	0
 22369  0061DC  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 22370                           
 22371                           ; BSR set to: 1
 22372                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 22373  0061DE  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22374  0061E0  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22375  0061E2  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22376  0061E4  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22377                           
 22378                           ; BSR set to: 1
 22379                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 22380  0061E6  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 22381                           
 22382                           ; BSR set to: 1
 22383                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 22384  0061E8  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 22388  0061EA  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 22389                           
 22390                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 22391  0061EC  0E00               	movlw	0
 22392  0061EE  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 22393                           
 22394                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 22395  0061F0  0E00               	movlw	0
 22396  0061F2  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 22397                           
 22398                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 22399  0061F4  0E00               	movlw	0
 22400  0061F6  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 22401                           
 22402                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 22403  0061F8  0E00               	movlw	0
 22404  0061FA  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 22405                           
 22406                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 22407  0061FC  0E0A               	movlw	10
 22408  0061FE  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 22409                           
 22410                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 22411  006200  0E00               	movlw	0
 22412  006202  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 22413  006204  0E00               	movlw	0
 22414  006206  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 22415  006208  0E00               	movlw	0
 22416  00620A  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 22417  00620C  0E00               	movlw	0
 22418  00620E  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 22419                           
 22420                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 22421  006210  0E00               	movlw	0
 22422  006212  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22423                           
 22424                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 22425  006214  0E00               	movlw	0
 22426  006216  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22427                           
 22428                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 22429  006218  0E00               	movlw	0
 22430  00621A  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 22431                           
 22432                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 22433  00621C  0E00               	movlw	0
 22434  00621E  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 22435                           
 22436                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 22437  006220  0E00               	movlw	0
 22438  006222  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 22439                           
 22440                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 22441  006224  0E00               	movlw	0
 22442  006226  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 22443                           
 22444                           ; BSR set to: 1
 22445  006228  0012               	return		;funcret
 22446  00622A                     __end_of_ResetSenseData:
 22447                           	opt stack 0
 22448                           tosu	equ	0xFFF
 22449                           tosh	equ	0xFFE
 22450                           tosl	equ	0xFFD
 22451                           pclath	equ	0xFFA
 22452                           tblptru	equ	0xFF8
 22453                           tblptrh	equ	0xFF7
 22454                           tblptrl	equ	0xFF6
 22455                           tablat	equ	0xFF5
 22456                           prodh	equ	0xFF4
 22457                           prodl	equ	0xFF3
 22458                           intcon	equ	0xFF2
 22459                           intcon2	equ	0xFF1
 22460                           intcon3	equ	0xFF0
 22461                           indf0	equ	0xFEF
 22462                           postinc0	equ	0xFEE
 22463                           fsr0h	equ	0xFEA
 22464                           fsr0l	equ	0xFE9
 22465                           wreg	equ	0xFE8
 22466                           indf1	equ	0xFE7
 22467                           postdec1	equ	0xFE5
 22468                           plusw1	equ	0xFE3
 22469                           fsr1h	equ	0xFE2
 22470                           fsr1l	equ	0xFE1
 22471                           indf2	equ	0xFDF
 22472                           postinc2	equ	0xFDE
 22473                           postdec2	equ	0xFDD
 22474                           plusw2	equ	0xFDB
 22475                           fsr2h	equ	0xFDA
 22476                           fsr2l	equ	0xFD9
 22477                           status	equ	0xFD8
 22478                           
 22479 ;; *************** function _ExternalFlash_SectorRead *****************
 22480 ;; Defined at:
 22481 ;;		line 40 in file "external_flash.c"
 22482 ;; Parameters:    Size  Location     Type
 22483 ;;  config          2   43[COMRAM] PTR void 
 22484 ;;		 -> NULL(0), 
 22485 ;;  sector_addr     4   45[COMRAM] unsigned long 
 22486 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 22487 ;;		 -> msd_buffer(512), 
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;  page            2   51[COMRAM] unsigned int 
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1    wreg      unsigned char 
 22492 ;; Registers used:
 22493 ;;		wreg, status,2, status,0, cstack
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/0
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22499 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22502 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22503 ;;Total ram usage:       10 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:    5
 22506 ;; This function calls:
 22507 ;;		_flash_sector_read
 22508 ;; This function is called by:
 22509 ;;		_MSDReadHandler
 22510 ;; This function uses a non-reentrant model
 22511 ;;
 22512                           
 22513                           	psect	text105
 22514  006C6E                     __ptext105:
 22515                           	opt stack 0
 22516  006C6E                     _ExternalFlash_SectorRead:
 22517                           	opt stack 20
 22518                           
 22519                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 22520                           
 22521                           ; BSR set to: 1
 22522                           ;incstack = 0
 22523  006C6E  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 22524  006C72  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 22525                           
 22526                           ;external_flash.c: 45: if(sector_addr >= 8192)
 22527  006C76  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 22528  006C78  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 22529  006C7A  E104               	bnz	u7700
 22530  006C7C  0E20               	movlw	32
 22531  006C7E  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 22532  006C80  A0D8               	btfss	status,0,c
 22533  006C82  D002               	goto	l1880
 22534  006C84                     u7700:
 22535                           
 22536                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 22537  006C84  0E00               	movlw	0
 22538  006C86  0012               	return	
 22539  006C88                     l1880:
 22540                           
 22541                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 22542  006C88  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 22543  006C8C  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 22544  006C90  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 22545  006C94  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 22546  006C98  EC69  F037         	call	_flash_sector_read	;wreg free
 22547                           
 22548                           ;external_flash.c: 53: return 1;
 22549  006C9C  0E01               	movlw	1
 22550  006C9E  0012               	return	
 22551  006CA0                     __end_of_ExternalFlash_SectorRead:
 22552                           	opt stack 0
 22553                           tosu	equ	0xFFF
 22554                           tosh	equ	0xFFE
 22555                           tosl	equ	0xFFD
 22556                           pclath	equ	0xFFA
 22557                           tblptru	equ	0xFF8
 22558                           tblptrh	equ	0xFF7
 22559                           tblptrl	equ	0xFF6
 22560                           tablat	equ	0xFF5
 22561                           prodh	equ	0xFF4
 22562                           prodl	equ	0xFF3
 22563                           intcon	equ	0xFF2
 22564                           intcon2	equ	0xFF1
 22565                           intcon3	equ	0xFF0
 22566                           indf0	equ	0xFEF
 22567                           postinc0	equ	0xFEE
 22568                           fsr0h	equ	0xFEA
 22569                           fsr0l	equ	0xFE9
 22570                           wreg	equ	0xFE8
 22571                           indf1	equ	0xFE7
 22572                           postdec1	equ	0xFE5
 22573                           plusw1	equ	0xFE3
 22574                           fsr1h	equ	0xFE2
 22575                           fsr1l	equ	0xFE1
 22576                           indf2	equ	0xFDF
 22577                           postinc2	equ	0xFDE
 22578                           postdec2	equ	0xFDD
 22579                           plusw2	equ	0xFDB
 22580                           fsr2h	equ	0xFDA
 22581                           fsr2l	equ	0xFD9
 22582                           status	equ	0xFD8
 22583                           
 22584 ;; *************** function _flash_sector_read *****************
 22585 ;; Defined at:
 22586 ;;		line 426 in file "flash.c"
 22587 ;; Parameters:    Size  Location     Type
 22588 ;;  page            2   39[COMRAM] unsigned int 
 22589 ;;  data            2   41[COMRAM] PTR unsigned char 
 22590 ;;		 -> buffer(512), msd_buffer(512), 
 22591 ;; Auto vars:     Size  Location     Type
 22592 ;;		None
 22593 ;; Return value:  Size  Location     Type
 22594 ;;                  1    wreg      void 
 22595 ;; Registers used:
 22596 ;;		wreg, status,2, status,0, cstack
 22597 ;; Tracked objects:
 22598 ;;		On entry : 0/0
 22599 ;;		On exit  : 0/0
 22600 ;;		Unchanged: 0/0
 22601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22606 ;;Total ram usage:        4 bytes
 22607 ;; Hardware stack levels used:    1
 22608 ;; Hardware stack levels required when called:    4
 22609 ;; This function calls:
 22610 ;;		__flash_partial_read
 22611 ;; This function is called by:
 22612 ;;		_ExternalFlash_SectorRead
 22613 ;;		__find_nth_cluster
 22614 ;;		_fat_find_file
 22615 ;;		_fat_get_format_status
 22616 ;;		__get_available_cluster
 22617 ;;		__make_cluster_chain
 22618 ;; This function uses a non-reentrant model
 22619 ;;
 22620                           
 22621                           	psect	text106
 22622  006ED2                     __ptext106:
 22623                           	opt stack 0
 22624  006ED2                     _flash_sector_read:
 22625                           	opt stack 23
 22626                           
 22627                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 22628                           
 22629                           ;incstack = 0
 22630  006ED2  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 22631  006ED6  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 22632  006EDA  0E00               	movlw	0
 22633  006EDC  6E17               	movwf	__flash_partial_read@start+1,c
 22634  006EDE  0E00               	movlw	0
 22635  006EE0  6E16               	movwf	__flash_partial_read@start,c
 22636  006EE2  0E02               	movlw	2
 22637  006EE4  6E19               	movwf	__flash_partial_read@length+1,c
 22638  006EE6  0E00               	movlw	0
 22639  006EE8  6E18               	movwf	__flash_partial_read@length,c
 22640  006EEA  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 22641  006EEE  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 22642  006EF2  EC5D  F02E         	call	__flash_partial_read	;wreg free
 22643  006EF6  0012               	return		;funcret
 22644  006EF8                     __end_of_flash_sector_read:
 22645                           	opt stack 0
 22646                           tosu	equ	0xFFF
 22647                           tosh	equ	0xFFE
 22648                           tosl	equ	0xFFD
 22649                           pclath	equ	0xFFA
 22650                           tblptru	equ	0xFF8
 22651                           tblptrh	equ	0xFF7
 22652                           tblptrl	equ	0xFF6
 22653                           tablat	equ	0xFF5
 22654                           prodh	equ	0xFF4
 22655                           prodl	equ	0xFF3
 22656                           intcon	equ	0xFF2
 22657                           intcon2	equ	0xFF1
 22658                           intcon3	equ	0xFF0
 22659                           indf0	equ	0xFEF
 22660                           postinc0	equ	0xFEE
 22661                           fsr0h	equ	0xFEA
 22662                           fsr0l	equ	0xFE9
 22663                           wreg	equ	0xFE8
 22664                           indf1	equ	0xFE7
 22665                           postdec1	equ	0xFE5
 22666                           plusw1	equ	0xFE3
 22667                           fsr1h	equ	0xFE2
 22668                           fsr1l	equ	0xFE1
 22669                           indf2	equ	0xFDF
 22670                           postinc2	equ	0xFDE
 22671                           postdec2	equ	0xFDD
 22672                           plusw2	equ	0xFDB
 22673                           fsr2h	equ	0xFDA
 22674                           fsr2l	equ	0xFD9
 22675                           status	equ	0xFD8
 22676                           
 22677 ;; *************** function __flash_partial_read *****************
 22678 ;; Defined at:
 22679 ;;		line 309 in file "flash.c"
 22680 ;; Parameters:    Size  Location     Type
 22681 ;;  page            2   19[COMRAM] unsigned int 
 22682 ;;  start           2   21[COMRAM] unsigned int 
 22683 ;;  length          2   23[COMRAM] unsigned int 
 22684 ;;  data            2   25[COMRAM] PTR unsigned char 
 22685 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 22686 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 22687 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 22688 ;;		 -> msd_buffer(512), 
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;  command         4   31[COMRAM] unsigned char [4]
 22691 ;;  address         4   35[COMRAM] unsigned long 
 22692 ;; Return value:  Size  Location     Type
 22693 ;;                  1    wreg      void 
 22694 ;; Registers used:
 22695 ;;		wreg, status,2, status,0, cstack
 22696 ;; Tracked objects:
 22697 ;;		On entry : 0/0
 22698 ;;		On exit  : 0/0
 22699 ;;		Unchanged: 0/0
 22700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22702 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22703 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22704 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22705 ;;Total ram usage:       20 bytes
 22706 ;; Hardware stack levels used:    1
 22707 ;; Hardware stack levels required when called:    3
 22708 ;; This function calls:
 22709 ;;		__flash_is_busy
 22710 ;;		_spi_tx_rx
 22711 ;; This function is called by:
 22712 ;;		_flash_sector_read
 22713 ;;		_flash_partial_read
 22714 ;; This function uses a non-reentrant model
 22715 ;;
 22716                           
 22717                           	psect	text107
 22718  005CBA                     __ptext107:
 22719                           	opt stack 0
 22720  005CBA                     __flash_partial_read:
 22721                           	opt stack 23
 22722                           
 22723                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 22724                           
 22725                           ;incstack = 0
 22726  005CBA  ECD7  F037         	call	__flash_is_busy	;wreg free
 22727  005CBE  0900               	iorlw	0
 22728  005CC0  A4D8               	btfss	status,2,c
 22729  005CC2  D7FB               	goto	__flash_partial_read
 22730                           
 22731                           ;flash.c: 318: address = page;
 22732  005CC4  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 22733  005CC8  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 22734  005CCC  6A26               	clrf	__flash_partial_read@address+2,c
 22735  005CCE  6A27               	clrf	__flash_partial_read@address+3,c
 22736                           
 22737                           ;flash.c: 319: address <<= 9;
 22738  005CD0  0E09               	movlw	9
 22739  005CD2                     u6935:
 22740  005CD2  90D8               	bcf	status,0,c
 22741  005CD4  3624               	rlcf	__flash_partial_read@address,f,c
 22742  005CD6  3625               	rlcf	__flash_partial_read@address+1,f,c
 22743  005CD8  3626               	rlcf	__flash_partial_read@address+2,f,c
 22744  005CDA  3627               	rlcf	__flash_partial_read@address+3,f,c
 22745  005CDC  2EE8               	decfsz	wreg,f,c
 22746  005CDE  D7F9               	goto	u6935
 22747                           
 22748                           ;flash.c: 320: address |= start;
 22749  005CE0  5016               	movf	__flash_partial_read@start,w,c
 22750  005CE2  6E1C               	movwf	??__flash_partial_read& (0+255),c
 22751  005CE4  5017               	movf	__flash_partial_read@start+1,w,c
 22752  005CE6  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 22753  005CE8  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 22754  005CEA  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 22755  005CEC  501C               	movf	??__flash_partial_read,w,c
 22756  005CEE  1224               	iorwf	__flash_partial_read@address,f,c
 22757  005CF0  501D               	movf	??__flash_partial_read+1,w,c
 22758  005CF2  1225               	iorwf	__flash_partial_read@address+1,f,c
 22759  005CF4  501E               	movf	??__flash_partial_read+2,w,c
 22760  005CF6  1226               	iorwf	__flash_partial_read@address+2,f,c
 22761  005CF8  501F               	movf	??__flash_partial_read+3,w,c
 22762  005CFA  1227               	iorwf	__flash_partial_read@address+3,f,c
 22763                           
 22764                           ;flash.c: 323: command[0] = 0x03;
 22765  005CFC  0E03               	movlw	3
 22766  005CFE  6E20               	movwf	__flash_partial_read@command,c
 22767                           
 22768                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 22769  005D00  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 22770                           
 22771                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 22772  005D04  5025               	movf	__flash_partial_read@address+1,w,c
 22773  005D06  6E22               	movwf	__flash_partial_read@command+2,c
 22774                           
 22775                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 22776  005D08  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 22777                           
 22778                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 22779  005D0C  0E20               	movlw	low __flash_partial_read@command
 22780  005D0E  6E01               	movwf	spi_tx_rx@command,c
 22781  005D10  0E00               	movlw	high __flash_partial_read@command
 22782  005D12  6E02               	movwf	spi_tx_rx@command+1,c
 22783  005D14  0E00               	movlw	0
 22784  005D16  6E04               	movwf	spi_tx_rx@command_length+1,c
 22785  005D18  0E04               	movlw	4
 22786  005D1A  6E03               	movwf	spi_tx_rx@command_length,c
 22787  005D1C  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 22788  005D20  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 22789  005D24  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 22790  005D28  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 22791  005D2C  ECF2  F02B         	call	_spi_tx_rx	;wreg free
 22792  005D30  0012               	return		;funcret
 22793  005D32                     __end_of__flash_partial_read:
 22794                           	opt stack 0
 22795                           tosu	equ	0xFFF
 22796                           tosh	equ	0xFFE
 22797                           tosl	equ	0xFFD
 22798                           pclath	equ	0xFFA
 22799                           tblptru	equ	0xFF8
 22800                           tblptrh	equ	0xFF7
 22801                           tblptrl	equ	0xFF6
 22802                           tablat	equ	0xFF5
 22803                           prodh	equ	0xFF4
 22804                           prodl	equ	0xFF3
 22805                           intcon	equ	0xFF2
 22806                           intcon2	equ	0xFF1
 22807                           intcon3	equ	0xFF0
 22808                           indf0	equ	0xFEF
 22809                           postinc0	equ	0xFEE
 22810                           fsr0h	equ	0xFEA
 22811                           fsr0l	equ	0xFE9
 22812                           wreg	equ	0xFE8
 22813                           indf1	equ	0xFE7
 22814                           postdec1	equ	0xFE5
 22815                           plusw1	equ	0xFE3
 22816                           fsr1h	equ	0xFE2
 22817                           fsr1l	equ	0xFE1
 22818                           indf2	equ	0xFDF
 22819                           postinc2	equ	0xFDE
 22820                           postdec2	equ	0xFDD
 22821                           plusw2	equ	0xFDB
 22822                           fsr2h	equ	0xFDA
 22823                           fsr2l	equ	0xFD9
 22824                           status	equ	0xFD8
 22825                           
 22826 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 22827 ;; Defined at:
 22828 ;;		line 993 in file "usb_device_msd.c"
 22829 ;; Parameters:    Size  Location     Type
 22830 ;;  DiExpected      2    0[COMRAM] unsigned int 
 22831 ;; Auto vars:     Size  Location     Type
 22832 ;;		None
 22833 ;; Return value:  Size  Location     Type
 22834 ;;                  1    wreg      void 
 22835 ;; Registers used:
 22836 ;;		wreg, status,2, status,0
 22837 ;; Tracked objects:
 22838 ;;		On entry : 0/0
 22839 ;;		On exit  : 0/0
 22840 ;;		Unchanged: 0/0
 22841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22845 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22846 ;;Total ram usage:        6 bytes
 22847 ;; Hardware stack levels used:    1
 22848 ;; This function calls:
 22849 ;;		Nothing
 22850 ;; This function is called by:
 22851 ;;		_MSDProcessCommandMediaPresent
 22852 ;; This function uses a non-reentrant model
 22853 ;;
 22854                           
 22855                           	psect	text108
 22856  0056B4                     __ptext108:
 22857                           	opt stack 0
 22858  0056B4                     _MSDComputeDeviceInAndResidue:
 22859                           	opt stack 26
 22860                           
 22861                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 22862                           
 22863                           ;incstack = 0
 22864  0056B4  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22865  0056B6  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22866  0056B8  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22867  0056BA  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22868  0056BC  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22869  0056BE  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22870  0056C0  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 22871  0056C2  0101               	movlb	1	; () banked
 22872  0056C4  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 22873  0056C6  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 22874  0056C8  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 22875  0056CA  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 22876  0056CC  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 22877  0056CE  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 22878  0056D0  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 22879  0056D2  B0D8               	btfsc	status,0,c
 22880  0056D4  D00E               	goto	l659
 22881                           
 22882                           ; BSR set to: 1
 22883                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 22884  0056D6  0E00               	movlw	0
 22885  0056D8  010D               	movlb	13	; () banked
 22886  0056DA  6F88               	movwf	136,b	;volatile
 22887  0056DC  0E00               	movlw	0
 22888  0056DE  6F89               	movwf	137,b	;volatile
 22889  0056E0  0E00               	movlw	0
 22890  0056E2  6F8A               	movwf	138,b	;volatile
 22891  0056E4  0E00               	movlw	0
 22892  0056E6  6F8B               	movwf	139,b	;volatile
 22893                           
 22894                           ; BSR set to: 13
 22895                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 22896  0056E8  C108  F08B         	movff	_gblCBW+8,_TransferLength
 22897  0056EC  C109  F08C         	movff	_gblCBW+9,_TransferLength+1
 22898                           
 22899                           ;usb_device_msd.c: 1002: }
 22900  0056F0  0012               	return	
 22901  0056F2                     l659:
 22902                           
 22903                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 22904                           
 22905                           ; BSR set to: 13
 22906  0056F2  0100               	movlb	0	; () banked
 22907  0056F4  518B               	movf	_TransferLength& (0+255),w,b
 22908  0056F6  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 22909  0056F8  518C               	movf	(_TransferLength+1)& (0+255),w,b
 22910  0056FA  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 22911  0056FC  B0D8               	btfsc	status,0,c
 22912  0056FE  D004               	goto	l661
 22913                           
 22914                           ; BSR set to: 0
 22915                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 22916  005700  C001  F08B         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 22917  005704  C002  F08C         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 22918  005708                     l661:
 22919                           
 22920                           ; BSR set to: 0
 22921                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 22922                           
 22923                           ; BSR set to: 0
 22924  005708  518B               	movf	_TransferLength& (0+255),w,b
 22925  00570A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 22926  00570C  518C               	movf	(_TransferLength+1)& (0+255),w,b
 22927  00570E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 22928  005710  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 22929  005712  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 22930  005714  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 22931  005716  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 22932  005718  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 22933  00571A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 22934  00571C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 22935  00571E  0E00               	movlw	0
 22936  005720  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 22937  005722  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 22938  005724  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 22939  005726  0101               	movlb	1	; () banked
 22940  005728  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22941  00572A  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 22942  00572C  010D               	movlb	13	; () banked
 22943  00572E  6F88               	movwf	136,b	;volatile
 22944  005730  0101               	movlb	1	; () banked
 22945  005732  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22946  005734  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 22947  005736  010D               	movlb	13	; () banked
 22948  005738  6F89               	movwf	137,b	;volatile
 22949  00573A  0101               	movlb	1	; () banked
 22950  00573C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22951  00573E  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 22952  005740  010D               	movlb	13	; () banked
 22953  005742  6F8A               	movwf	138,b	;volatile
 22954  005744  0101               	movlb	1	; () banked
 22955  005746  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22956  005748  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 22957  00574A  010D               	movlb	13	; () banked
 22958  00574C  6F8B               	movwf	139,b	;volatile
 22959  00574E  0012               	return	
 22960  005750                     __end_of_MSDComputeDeviceInAndResidue:
 22961                           	opt stack 0
 22962                           tosu	equ	0xFFF
 22963                           tosh	equ	0xFFE
 22964                           tosl	equ	0xFFD
 22965                           pclath	equ	0xFFA
 22966                           tblptru	equ	0xFF8
 22967                           tblptrh	equ	0xFF7
 22968                           tblptrl	equ	0xFF6
 22969                           tablat	equ	0xFF5
 22970                           prodh	equ	0xFF4
 22971                           prodl	equ	0xFF3
 22972                           intcon	equ	0xFF2
 22973                           intcon2	equ	0xFF1
 22974                           intcon3	equ	0xFF0
 22975                           indf0	equ	0xFEF
 22976                           postinc0	equ	0xFEE
 22977                           fsr0h	equ	0xFEA
 22978                           fsr0l	equ	0xFE9
 22979                           wreg	equ	0xFE8
 22980                           indf1	equ	0xFE7
 22981                           postdec1	equ	0xFE5
 22982                           plusw1	equ	0xFE3
 22983                           fsr1h	equ	0xFE2
 22984                           fsr1l	equ	0xFE1
 22985                           indf2	equ	0xFDF
 22986                           postinc2	equ	0xFDE
 22987                           postdec2	equ	0xFDD
 22988                           plusw2	equ	0xFDB
 22989                           fsr2h	equ	0xFDA
 22990                           fsr2l	equ	0xFD9
 22991                           status	equ	0xFD8
 22992                           
 22993 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 22994 ;; Defined at:
 22995 ;;		line 18 in file "external_flash.c"
 22996 ;; Parameters:    Size  Location     Type
 22997 ;;  config          2    0[COMRAM] PTR void 
 22998 ;;		 -> NULL(0), 
 22999 ;; Auto vars:     Size  Location     Type
 23000 ;;		None
 23001 ;; Return value:  Size  Location     Type
 23002 ;;                  2    0[COMRAM] unsigned int 
 23003 ;; Registers used:
 23004 ;;		wreg, status,2
 23005 ;; Tracked objects:
 23006 ;;		On entry : 0/0
 23007 ;;		On exit  : 0/0
 23008 ;;		Unchanged: 0/0
 23009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23014 ;;Total ram usage:        2 bytes
 23015 ;; Hardware stack levels used:    1
 23016 ;; This function calls:
 23017 ;;		Nothing
 23018 ;; This function is called by:
 23019 ;;		_MSDProcessCommandMediaPresent
 23020 ;; This function uses a non-reentrant model
 23021 ;;
 23022                           
 23023                           	psect	text109
 23024  0071D4                     __ptext109:
 23025                           	opt stack 0
 23026  0071D4                     _ExternalFlash_SectorSizeRead:
 23027                           	opt stack 26
 23028                           
 23029                           ;external_flash.c: 20: return 512;
 23030                           
 23031                           ; BSR set to: 13
 23032                           ;incstack = 0
 23033  0071D4  0E02               	movlw	2
 23034  0071D6  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23035  0071D8  0E00               	movlw	0
 23036  0071DA  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23037  0071DC  0012               	return	
 23038  0071DE                     __end_of_ExternalFlash_SectorSizeRead:
 23039                           	opt stack 0
 23040                           tosu	equ	0xFFF
 23041                           tosh	equ	0xFFE
 23042                           tosl	equ	0xFFD
 23043                           pclath	equ	0xFFA
 23044                           tblptru	equ	0xFF8
 23045                           tblptrh	equ	0xFF7
 23046                           tblptrl	equ	0xFF6
 23047                           tablat	equ	0xFF5
 23048                           prodh	equ	0xFF4
 23049                           prodl	equ	0xFF3
 23050                           intcon	equ	0xFF2
 23051                           intcon2	equ	0xFF1
 23052                           intcon3	equ	0xFF0
 23053                           indf0	equ	0xFEF
 23054                           postinc0	equ	0xFEE
 23055                           fsr0h	equ	0xFEA
 23056                           fsr0l	equ	0xFE9
 23057                           wreg	equ	0xFE8
 23058                           indf1	equ	0xFE7
 23059                           postdec1	equ	0xFE5
 23060                           plusw1	equ	0xFE3
 23061                           fsr1h	equ	0xFE2
 23062                           fsr1l	equ	0xFE1
 23063                           indf2	equ	0xFDF
 23064                           postinc2	equ	0xFDE
 23065                           postdec2	equ	0xFDD
 23066                           plusw2	equ	0xFDB
 23067                           fsr2h	equ	0xFDA
 23068                           fsr2l	equ	0xFD9
 23069                           status	equ	0xFD8
 23070                           
 23071 ;; *************** function _ExternalFlash_CapacityRead *****************
 23072 ;; Defined at:
 23073 ;;		line 23 in file "external_flash.c"
 23074 ;; Parameters:    Size  Location     Type
 23075 ;;  config          2    0[COMRAM] PTR void 
 23076 ;;		 -> NULL(0), 
 23077 ;; Auto vars:     Size  Location     Type
 23078 ;;		None
 23079 ;; Return value:  Size  Location     Type
 23080 ;;                  4    0[COMRAM] unsigned long 
 23081 ;; Registers used:
 23082 ;;		wreg, status,2
 23083 ;; Tracked objects:
 23084 ;;		On entry : 0/0
 23085 ;;		On exit  : 0/0
 23086 ;;		Unchanged: 0/0
 23087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23092 ;;Total ram usage:        4 bytes
 23093 ;; Hardware stack levels used:    1
 23094 ;; This function calls:
 23095 ;;		Nothing
 23096 ;; This function is called by:
 23097 ;;		_MSDProcessCommandMediaPresent
 23098 ;; This function uses a non-reentrant model
 23099 ;;
 23100                           
 23101                           	psect	text110
 23102  007104                     __ptext110:
 23103                           	opt stack 0
 23104  007104                     _ExternalFlash_CapacityRead:
 23105                           	opt stack 26
 23106                           
 23107                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23108                           
 23109                           ;incstack = 0
 23110  007104  0EFF               	movlw	255
 23111  007106  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23112  007108  0E1F               	movlw	31
 23113  00710A  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23114  00710C  0E00               	movlw	0
 23115  00710E  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23116  007110  0E00               	movlw	0
 23117  007112  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23118  007114  0012               	return	
 23119  007116                     __end_of_ExternalFlash_CapacityRead:
 23120                           	opt stack 0
 23121                           tosu	equ	0xFFF
 23122                           tosh	equ	0xFFE
 23123                           tosl	equ	0xFFD
 23124                           pclath	equ	0xFFA
 23125                           tblptru	equ	0xFF8
 23126                           tblptrh	equ	0xFF7
 23127                           tblptrl	equ	0xFF6
 23128                           tablat	equ	0xFF5
 23129                           prodh	equ	0xFF4
 23130                           prodl	equ	0xFF3
 23131                           intcon	equ	0xFF2
 23132                           intcon2	equ	0xFF1
 23133                           intcon3	equ	0xFF0
 23134                           indf0	equ	0xFEF
 23135                           postinc0	equ	0xFEE
 23136                           fsr0h	equ	0xFEA
 23137                           fsr0l	equ	0xFE9
 23138                           wreg	equ	0xFE8
 23139                           indf1	equ	0xFE7
 23140                           postdec1	equ	0xFE5
 23141                           plusw1	equ	0xFE3
 23142                           fsr1h	equ	0xFE2
 23143                           fsr1l	equ	0xFE1
 23144                           indf2	equ	0xFDF
 23145                           postinc2	equ	0xFDE
 23146                           postdec2	equ	0xFDD
 23147                           plusw2	equ	0xFDB
 23148                           fsr2h	equ	0xFDA
 23149                           fsr2l	equ	0xFD9
 23150                           status	equ	0xFD8
 23151                           
 23152 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23153 ;; Defined at:
 23154 ;;		line 10 in file "external_flash.c"
 23155 ;; Parameters:    Size  Location     Type
 23156 ;;  config          2    0[COMRAM] PTR void 
 23157 ;;		 -> NULL(0), 
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;		None
 23160 ;; Return value:  Size  Location     Type
 23161 ;;                  2    0[COMRAM] PTR struct .
 23162 ;; Registers used:
 23163 ;;		wreg, status,2, status,0
 23164 ;; Tracked objects:
 23165 ;;		On entry : 0/0
 23166 ;;		On exit  : 0/0
 23167 ;;		Unchanged: 0/0
 23168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23172 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;Total ram usage:        2 bytes
 23174 ;; Hardware stack levels used:    1
 23175 ;; This function calls:
 23176 ;;		Nothing
 23177 ;; This function is called by:
 23178 ;;		_USBMSDInit
 23179 ;;		_MSDProcessCommand
 23180 ;; This function uses a non-reentrant model
 23181 ;;
 23182                           
 23183                           	psect	text111
 23184  007028                     __ptext111:
 23185                           	opt stack 0
 23186  007028                     _ExternalFlash_MediaInitialize:
 23187                           	opt stack 26
 23188                           
 23189                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23190                           
 23191                           ;incstack = 0
 23192  007028  0101               	movlb	1	; () banked
 23193  00702A  81E0               	bsf	(_mediaInformation+1)& (0+255),0,b
 23194                           
 23195                           ; BSR set to: 1
 23196                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23197  00702C  0E02               	movlw	2
 23198  00702E  6FE2               	movwf	(_mediaInformation+3)& (0+255),b
 23199  007030  0E00               	movlw	0
 23200  007032  6FE1               	movwf	(_mediaInformation+2)& (0+255),b
 23201                           
 23202                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23203  007034  0E00               	movlw	0
 23204  007036  6FDF               	movwf	_mediaInformation& (0+255),b
 23205                           
 23206                           ; BSR set to: 1
 23207                           ;external_flash.c: 15: return &mediaInformation;
 23208  007038  0EDF               	movlw	low _mediaInformation
 23209  00703A  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23210  00703C  0E01               	movlw	high _mediaInformation
 23211  00703E  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23212  007040  0012               	return	
 23213  007042                     __end_of_ExternalFlash_MediaInitialize:
 23214                           	opt stack 0
 23215                           tosu	equ	0xFFF
 23216                           tosh	equ	0xFFE
 23217                           tosl	equ	0xFFD
 23218                           pclath	equ	0xFFA
 23219                           tblptru	equ	0xFF8
 23220                           tblptrh	equ	0xFF7
 23221                           tblptrl	equ	0xFF6
 23222                           tablat	equ	0xFF5
 23223                           prodh	equ	0xFF4
 23224                           prodl	equ	0xFF3
 23225                           intcon	equ	0xFF2
 23226                           intcon2	equ	0xFF1
 23227                           intcon3	equ	0xFF0
 23228                           indf0	equ	0xFEF
 23229                           postinc0	equ	0xFEE
 23230                           fsr0h	equ	0xFEA
 23231                           fsr0l	equ	0xFE9
 23232                           wreg	equ	0xFE8
 23233                           indf1	equ	0xFE7
 23234                           postdec1	equ	0xFE5
 23235                           plusw1	equ	0xFE3
 23236                           fsr1h	equ	0xFE2
 23237                           fsr1l	equ	0xFE1
 23238                           indf2	equ	0xFDF
 23239                           postinc2	equ	0xFDE
 23240                           postdec2	equ	0xFDD
 23241                           plusw2	equ	0xFDB
 23242                           fsr2h	equ	0xFDA
 23243                           fsr2l	equ	0xFD9
 23244                           status	equ	0xFD8
 23245                           
 23246 ;; *************** function _ExternalFlash_MediaDetect *****************
 23247 ;; Defined at:
 23248 ;;		line 29 in file "external_flash.c"
 23249 ;; Parameters:    Size  Location     Type
 23250 ;;  config          2    0[COMRAM] PTR void 
 23251 ;;		 -> NULL(0), 
 23252 ;; Auto vars:     Size  Location     Type
 23253 ;;		None
 23254 ;; Return value:  Size  Location     Type
 23255 ;;                  1    wreg      unsigned char 
 23256 ;; Registers used:
 23257 ;;		wreg
 23258 ;; Tracked objects:
 23259 ;;		On entry : 0/0
 23260 ;;		On exit  : 0/0
 23261 ;;		Unchanged: 0/0
 23262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23266 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23267 ;;Total ram usage:        2 bytes
 23268 ;; Hardware stack levels used:    1
 23269 ;; This function calls:
 23270 ;;		Nothing
 23271 ;; This function is called by:
 23272 ;;		_USBMSDInit
 23273 ;;		_MSDProcessCommand
 23274 ;; This function uses a non-reentrant model
 23275 ;;
 23276                           
 23277                           	psect	text112
 23278  00725A                     __ptext112:
 23279                           	opt stack 0
 23280  00725A                     _ExternalFlash_MediaDetect:
 23281                           	opt stack 26
 23282                           
 23283                           ;external_flash.c: 31: return 1;
 23284                           
 23285                           ; BSR set to: 1
 23286                           ;incstack = 0
 23287  00725A  0E01               	movlw	1
 23288  00725C  0012               	return	
 23289  00725E                     __end_of_ExternalFlash_MediaDetect:
 23290                           	opt stack 0
 23291                           tosu	equ	0xFFF
 23292                           tosh	equ	0xFFE
 23293                           tosl	equ	0xFFD
 23294                           pclath	equ	0xFFA
 23295                           tblptru	equ	0xFF8
 23296                           tblptrh	equ	0xFF7
 23297                           tblptrl	equ	0xFF6
 23298                           tablat	equ	0xFF5
 23299                           prodh	equ	0xFF4
 23300                           prodl	equ	0xFF3
 23301                           intcon	equ	0xFF2
 23302                           intcon2	equ	0xFF1
 23303                           intcon3	equ	0xFF0
 23304                           indf0	equ	0xFEF
 23305                           postinc0	equ	0xFEE
 23306                           fsr0h	equ	0xFEA
 23307                           fsr0l	equ	0xFE9
 23308                           wreg	equ	0xFE8
 23309                           indf1	equ	0xFE7
 23310                           postdec1	equ	0xFE5
 23311                           plusw1	equ	0xFE3
 23312                           fsr1h	equ	0xFE2
 23313                           fsr1l	equ	0xFE1
 23314                           indf2	equ	0xFDF
 23315                           postinc2	equ	0xFDE
 23316                           postdec2	equ	0xFDD
 23317                           plusw2	equ	0xFDB
 23318                           fsr2h	equ	0xFDA
 23319                           fsr2l	equ	0xFD9
 23320                           status	equ	0xFD8
 23321                           
 23322 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23323 ;; Defined at:
 23324 ;;		line 73 in file "app_device_custom_hid.c"
 23325 ;; Parameters:    Size  Location     Type
 23326 ;;		None
 23327 ;; Auto vars:     Size  Location     Type
 23328 ;;  idx             1    0        unsigned char 
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  1    wreg      void 
 23331 ;; Registers used:
 23332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23342 ;;Total ram usage:        0 bytes
 23343 ;; Hardware stack levels used:    1
 23344 ;; Hardware stack levels required when called:    9
 23345 ;; This function calls:
 23346 ;;		_USBTransferOnePacket
 23347 ;;		_api_parse
 23348 ;;		_api_prepare
 23349 ;; This function is called by:
 23350 ;;		_main
 23351 ;; This function uses a non-reentrant model
 23352 ;;
 23353                           
 23354                           	psect	text113
 23355  0054D8                     __ptext113:
 23356                           	opt stack 0
 23357  0054D8                     _APP_DeviceCustomHIDTasks:
 23358                           	opt stack 21
 23359                           
 23360                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23361                           
 23362                           ;incstack = 0
 23363  0054D8  0E20               	movlw	32
 23364  0054DA  605F               	cpfslt	_USBDeviceState,c
 23365  0054DC  D001               	goto	l932
 23366  0054DE  0012               	return	
 23367  0054E0                     l932:
 23368                           
 23369                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 23370  0054E0  B265               	btfsc	3941,1,c	;volatile
 23371  0054E2  0012               	return	
 23372                           
 23373                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23374                           
 23375                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 23376  0054E4  0101               	movlb	1	; () banked
 23377  0054E6  516B               	movf	_USBOutHandle& (0+255),w,b
 23378  0054E8  116C               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 23379  0054EA  B4D8               	btfsc	status,2,c
 23380  0054EC  D006               	goto	u11880
 23381                           
 23382                           ; BSR set to: 1
 23383  0054EE  C16B  FFD9         	movff	_USBOutHandle,fsr2l
 23384  0054F2  C16C  FFDA         	movff	_USBOutHandle+1,fsr2h
 23385  0054F6  BEDF               	btfsc	indf2,7,c
 23386  0054F8  0012               	return	
 23387  0054FA                     u11880:
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 23391                           
 23392                           ; BSR set to: 1
 23393  0054FA  5169               	movf	_USBInHandle& (0+255),w,b
 23394  0054FC  116A               	iorwf	(_USBInHandle+1)& (0+255),w,b
 23395  0054FE  B4D8               	btfsc	status,2,c
 23396  005500  D006               	goto	u11900
 23397                           
 23398                           ; BSR set to: 1
 23399  005502  C169  FFD9         	movff	_USBInHandle,fsr2l
 23400  005506  C16A  FFDA         	movff	_USBInHandle+1,fsr2h
 23401  00550A  BEDF               	btfsc	indf2,7,c
 23402  00550C  D019               	goto	l938
 23403  00550E                     u11900:
 23404                           
 23405                           ; BSR set to: 1
 23406                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 23407                           
 23408                           ; BSR set to: 1
 23409  00550E  0E40               	movlw	low _ReceivedDataBuffer
 23410  005510  6E17               	movwf	api_prepare@inBuffer,c
 23411  005512  0E02               	movlw	high _ReceivedDataBuffer
 23412  005514  6E18               	movwf	api_prepare@inBuffer+1,c
 23413  005516  0E00               	movlw	low _ToSendDataBuffer
 23414  005518  6E19               	movwf	api_prepare@outBuffer,c
 23415  00551A  0E02               	movlw	high _ToSendDataBuffer
 23416  00551C  6E1A               	movwf	api_prepare@outBuffer+1,c
 23417  00551E  EC66  F023         	call	_api_prepare	;wreg free
 23418                           
 23419                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 23420  005522  0E01               	movlw	1
 23421  005524  6E01               	movwf	USBTransferOnePacket@dir,c
 23422  005526  0E00               	movlw	low _ToSendDataBuffer
 23423  005528  6E02               	movwf	USBTransferOnePacket@data,c
 23424  00552A  0E02               	movlw	high _ToSendDataBuffer
 23425  00552C  6E03               	movwf	USBTransferOnePacket@data+1,c
 23426  00552E  0E40               	movlw	64
 23427  005530  6E04               	movwf	USBTransferOnePacket@len,c
 23428  005532  0E01               	movlw	1
 23429  005534  ECC4  F01E         	call	_USBTransferOnePacket
 23430  005538  C001  F169         	movff	?_USBTransferOnePacket,_USBInHandle
 23431  00553C  C002  F16A         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 23432  005540                     l938:
 23433                           
 23434                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 23435  005540  0E40               	movlw	low _ReceivedDataBuffer
 23436  005542  6E36               	movwf	api_parse@inBuffer,c
 23437  005544  0E02               	movlw	high _ReceivedDataBuffer
 23438  005546  6E37               	movwf	api_parse@inBuffer+1,c
 23439  005548  0E40               	movlw	64
 23440  00554A  6E38               	movwf	api_parse@receivedDataLength,c
 23441  00554C  0E00               	movlw	low _ToSendDataBuffer
 23442  00554E  6E39               	movwf	api_parse@outBuffer,c
 23443  005550  0E02               	movlw	high _ToSendDataBuffer
 23444  005552  6E3A               	movwf	api_parse@outBuffer+1,c
 23445  005554  EC93  F01B         	call	_api_parse	;wreg free
 23446                           
 23447                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 23448  005558  0E00               	movlw	0
 23449  00555A  6E01               	movwf	USBTransferOnePacket@dir,c
 23450  00555C  0E40               	movlw	low _ReceivedDataBuffer
 23451  00555E  6E02               	movwf	USBTransferOnePacket@data,c
 23452  005560  0E02               	movlw	high _ReceivedDataBuffer
 23453  005562  6E03               	movwf	USBTransferOnePacket@data+1,c
 23454  005564  0E40               	movlw	64
 23455  005566  6E04               	movwf	USBTransferOnePacket@len,c
 23456  005568  0E01               	movlw	1
 23457  00556A  ECC4  F01E         	call	_USBTransferOnePacket
 23458  00556E  C001  F16B         	movff	?_USBTransferOnePacket,_USBOutHandle
 23459  005572  C002  F16C         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 23460  005576  0012               	return	
 23461  005578                     __end_of_APP_DeviceCustomHIDTasks:
 23462                           	opt stack 0
 23463                           tosu	equ	0xFFF
 23464                           tosh	equ	0xFFE
 23465                           tosl	equ	0xFFD
 23466                           pclath	equ	0xFFA
 23467                           tblptru	equ	0xFF8
 23468                           tblptrh	equ	0xFF7
 23469                           tblptrl	equ	0xFF6
 23470                           tablat	equ	0xFF5
 23471                           prodh	equ	0xFF4
 23472                           prodl	equ	0xFF3
 23473                           intcon	equ	0xFF2
 23474                           intcon2	equ	0xFF1
 23475                           intcon3	equ	0xFF0
 23476                           indf0	equ	0xFEF
 23477                           postinc0	equ	0xFEE
 23478                           fsr0h	equ	0xFEA
 23479                           fsr0l	equ	0xFE9
 23480                           wreg	equ	0xFE8
 23481                           indf1	equ	0xFE7
 23482                           postdec1	equ	0xFE5
 23483                           plusw1	equ	0xFE3
 23484                           fsr1h	equ	0xFE2
 23485                           fsr1l	equ	0xFE1
 23486                           indf2	equ	0xFDF
 23487                           postinc2	equ	0xFDE
 23488                           postdec2	equ	0xFDD
 23489                           plusw2	equ	0xFDB
 23490                           fsr2h	equ	0xFDA
 23491                           fsr2l	equ	0xFD9
 23492                           status	equ	0xFD8
 23493                           
 23494 ;; *************** function _api_prepare *****************
 23495 ;; Defined at:
 23496 ;;		line 34 in file "api.c"
 23497 ;; Parameters:    Size  Location     Type
 23498 ;;  inBuffer        2   22[COMRAM] PTR unsigned char 
 23499 ;;		 -> ReceivedDataBuffer(64), 
 23500 ;;  outBuffer       2   24[COMRAM] PTR unsigned char 
 23501 ;;		 -> ToSendDataBuffer(64), 
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;  command         1   26[COMRAM] enum E6715
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  1    wreg      void 
 23506 ;; Registers used:
 23507 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23508 ;; Tracked objects:
 23509 ;;		On entry : 0/0
 23510 ;;		On exit  : 0/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23516 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23517 ;;Total ram usage:        5 bytes
 23518 ;; Hardware stack levels used:    1
 23519 ;; Hardware stack levels required when called:    5
 23520 ;; This function calls:
 23521 ;;		__fill_buffer_get_bootloader_details
 23522 ;;		__fill_buffer_get_display
 23523 ;;		__fill_buffer_get_status
 23524 ;;		_memcpy
 23525 ;; This function is called by:
 23526 ;;		_APP_DeviceCustomHIDTasks
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text114
 23531  0046CC                     __ptext114:
 23532                           	opt stack 0
 23533  0046CC                     _api_prepare:
 23534                           	opt stack 24
 23535                           
 23536                           ;api.c: 36: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 23537                           
 23538                           ;incstack = 0
 23539  0046CC  C017  FFD9         	movff	api_prepare@inBuffer,fsr2l
 23540  0046D0  C018  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 23541  0046D4  50DF               	movf	indf2,w,c
 23542  0046D6  6E1B               	movwf	api_prepare@command,c
 23543                           
 23544                           ;api.c: 38: if(command>0x7F)
 23545  0046D8  0E7F               	movlw	127
 23546  0046DA  641B               	cpfsgt	api_prepare@command,c
 23547  0046DC  D052               	goto	l2648
 23548                           
 23549                           ;api.c: 45: outBuffer[0] = 0x99;
 23550                           
 23551                           ;api.c: 41: {;api.c: 44: default:
 23552                           
 23553                           ;api.c: 39: {;api.c: 40: switch(command)
 23554  0046DE  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 23555  0046E2  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 23556  0046E6  0E99               	movlw	153
 23557  0046E8  6EDF               	movwf	indf2,c
 23558                           
 23559                           ;api.c: 46: outBuffer[1] = 0x99;
 23560  0046EA  EE20 F001          	lfsr	2,1
 23561  0046EE  5019               	movf	api_prepare@outBuffer,w,c
 23562  0046F0  26D9               	addwf	fsr2l,f,c
 23563  0046F2  501A               	movf	api_prepare@outBuffer+1,w,c
 23564  0046F4  22DA               	addwfc	fsr2h,f,c
 23565  0046F6  0E99               	movlw	153
 23566  0046F8  6EDF               	movwf	indf2,c
 23567                           
 23568                           ;api.c: 47: }
 23569  0046FA  0012               	return	
 23570  0046FC                     
 23571                           ;api.c: 60: _fill_buffer_get_status(outBuffer);
 23572  0046FC  C019  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23573  004700  C01A  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23574  004704  EC15  F022         	call	__fill_buffer_get_status	;wreg free
 23575                           
 23576                           ;api.c: 61: break;
 23577  004708  0012               	return	
 23578  00470A                     
 23579                           ;api.c: 65: _fill_buffer_get_display(outBuffer, 0);
 23580  00470A  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23581  00470E  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23582  004712  0E00               	movlw	0
 23583  004714  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23584  004716  EC73  F027         	call	__fill_buffer_get_display	;wreg free
 23585                           
 23586                           ;api.c: 66: break;
 23587  00471A  0012               	return	
 23588  00471C                     
 23589                           ;api.c: 70: _fill_buffer_get_display(outBuffer, 1);
 23590  00471C  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23591  004720  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23592  004724  0E01               	movlw	1
 23593  004726  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23594  004728  EC73  F027         	call	__fill_buffer_get_display	;wreg free
 23595                           
 23596                           ;api.c: 71: break;
 23597  00472C  0012               	return	
 23598  00472E                     
 23599                           ;api.c: 75: _fill_buffer_get_bootloader_details(outBuffer);
 23600  00472E  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 23601  004732  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 23602  004736  EC1E  F010         	call	__fill_buffer_get_bootloader_details	;wreg free
 23603                           
 23604                           ;api.c: 76: break;
 23605  00473A  0012               	return	
 23606  00473C                     
 23607                           ;api.c: 80: memcpy(outBuffer, inBuffer, 64);
 23608  00473C  C019  F001         	movff	api_prepare@outBuffer,memcpy@d1
 23609  004740  C01A  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 23610  004744  C017  F003         	movff	api_prepare@inBuffer,memcpy@s1
 23611  004748  C018  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 23612  00474C  5003               	movf	memcpy@s1,w,c
 23613  00474E  1004               	iorwf	memcpy@s1+1,w,c
 23614  004750  A4D8               	btfss	status,2,c
 23615  004752  0E20               	movlw	32
 23616  004754  6E05               	movwf	memcpy@s1+2,c
 23617  004756  0E00               	movlw	0
 23618  004758  6E07               	movwf	memcpy@n+1,c
 23619  00475A  0E40               	movlw	64
 23620  00475C  6E06               	movwf	memcpy@n,c
 23621  00475E  EC1C  F030         	call	_memcpy	;wreg free
 23622                           
 23623                           ;api.c: 81: break;
 23624  004762  0012               	return	
 23625  004764                     
 23626                           ;api.c: 84: outBuffer[0] = 0x99;
 23627  004764  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 23628  004768  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 23629  00476C  0E99               	movlw	153
 23630  00476E  6EDF               	movwf	indf2,c
 23631                           
 23632                           ;api.c: 85: outBuffer[1] = 0x99;
 23633  004770  EE20 F001          	lfsr	2,1
 23634  004774  5019               	movf	api_prepare@outBuffer,w,c
 23635  004776  26D9               	addwf	fsr2l,f,c
 23636  004778  501A               	movf	api_prepare@outBuffer+1,w,c
 23637  00477A  22DA               	addwfc	fsr2h,f,c
 23638  00477C  0E99               	movlw	153
 23639  00477E  6EDF               	movwf	indf2,c
 23640                           
 23641                           ;api.c: 86: }
 23642  004780  0012               	return	
 23643  004782                     l2648:
 23644  004782  501B               	movf	api_prepare@command,w,c
 23645                           
 23646                           ; Switch size 1, requested type "space"
 23647                           ; Number of cases is 6, Range of values is 0 to 32
 23648                           ; switch strategies available:
 23649                           ; Name         Instructions Cycles
 23650                           ; simple_byte           19    10 (average)
 23651                           ;	Chosen strategy is simple_byte
 23652  004784  0A00               	xorlw	0	; case 0
 23653  004786  B4D8               	btfsc	status,2,c
 23654  004788  0012               	return	
 23655  00478A  0A10               	xorlw	16	; case 16
 23656  00478C  B4D8               	btfsc	status,2,c
 23657  00478E  D7B6               	goto	l2651
 23658  004790  0A01               	xorlw	1	; case 17
 23659  004792  B4D8               	btfsc	status,2,c
 23660  004794  D7BA               	goto	l2652
 23661  004796  0A03               	xorlw	3	; case 18
 23662  004798  B4D8               	btfsc	status,2,c
 23663  00479A  D7C0               	goto	l2653
 23664  00479C  0A01               	xorlw	1	; case 19
 23665  00479E  B4D8               	btfsc	status,2,c
 23666  0047A0  D7C6               	goto	l2654
 23667  0047A2  0A33               	xorlw	51	; case 32
 23668  0047A4  B4D8               	btfsc	status,2,c
 23669  0047A6  D7CA               	goto	l2655
 23670  0047A8  D7DD               	goto	l2656
 23671  0047AA                     __end_of_api_prepare:
 23672                           	opt stack 0
 23673                           tosu	equ	0xFFF
 23674                           tosh	equ	0xFFE
 23675                           tosl	equ	0xFFD
 23676                           pclath	equ	0xFFA
 23677                           tblptru	equ	0xFF8
 23678                           tblptrh	equ	0xFF7
 23679                           tblptrl	equ	0xFF6
 23680                           tablat	equ	0xFF5
 23681                           prodh	equ	0xFF4
 23682                           prodl	equ	0xFF3
 23683                           intcon	equ	0xFF2
 23684                           intcon2	equ	0xFF1
 23685                           intcon3	equ	0xFF0
 23686                           indf0	equ	0xFEF
 23687                           postinc0	equ	0xFEE
 23688                           fsr0h	equ	0xFEA
 23689                           fsr0l	equ	0xFE9
 23690                           wreg	equ	0xFE8
 23691                           indf1	equ	0xFE7
 23692                           postdec1	equ	0xFE5
 23693                           plusw1	equ	0xFE3
 23694                           fsr1h	equ	0xFE2
 23695                           fsr1l	equ	0xFE1
 23696                           indf2	equ	0xFDF
 23697                           postinc2	equ	0xFDE
 23698                           postdec2	equ	0xFDD
 23699                           plusw2	equ	0xFDB
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704 ;; *************** function _memcpy *****************
 23705 ;; Defined at:
 23706 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;  d1              2    0[COMRAM] PTR void 
 23709 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 23710 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 23711 ;;  s1              3    2[COMRAM] PTR const void 
 23712 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 23713 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 23714 ;;  n               2    5[COMRAM] unsigned int 
 23715 ;; Auto vars:     Size  Location     Type
 23716 ;;  s               3    7[COMRAM] PTR const unsigned char 
 23717 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 23718 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 23719 ;;  d               2   10[COMRAM] PTR unsigned char 
 23720 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 23721 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 23722 ;;  tmp             1   12[COMRAM] unsigned char 
 23723 ;; Return value:  Size  Location     Type
 23724 ;;                  2    0[COMRAM] PTR void 
 23725 ;; Registers used:
 23726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 23727 ;; Tracked objects:
 23728 ;;		On entry : 0/0
 23729 ;;		On exit  : 0/0
 23730 ;;		Unchanged: 0/0
 23731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23732 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23733 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23735 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23736 ;;Total ram usage:       13 bytes
 23737 ;; Hardware stack levels used:    1
 23738 ;; This function calls:
 23739 ;;		Nothing
 23740 ;; This function is called by:
 23741 ;;		_USBCtrlEPService
 23742 ;;		_MSDProcessCommandMediaPresent
 23743 ;;		__flash_set_page_size
 23744 ;;		_internalFlash_read
 23745 ;;		_api_prepare
 23746 ;;		_fat_create_file
 23747 ;; This function uses a non-reentrant model
 23748 ;;
 23749                           
 23750                           	psect	text115
 23751  006038                     __ptext115:
 23752                           	opt stack 0
 23753  006038                     _memcpy:
 23754                           	opt stack 27
 23755                           
 23756                           ;incstack = 0
 23757  006038  C003  F008         	movff	memcpy@s1,memcpy@s
 23758  00603C  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 23759  006040  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 23760  006044  C001  F00B         	movff	memcpy@d1,memcpy@d
 23761  006048  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 23762  00604C  D01F               	goto	l3490
 23763  00604E                     l10542:
 23764  00604E  C008  FFF6         	movff	memcpy@s,tblptrl
 23765  006052  C009  FFF7         	movff	memcpy@s+1,tblptrh
 23766  006056  C00A  FFF8         	movff	memcpy@s+2,tblptru
 23767  00605A  BAF8               	btfsc	tblptru,5,c
 23768  00605C  D003               	bra	u7817
 23769  00605E  0008               	tblrd		*
 23770  006060  50F5               	movf	tablat,w,c
 23771  006062  D005               	bra	u7810
 23772  006064                     u7817:
 23773  006064  CFF6 FFE9          	movff	tblptrl,fsr0l
 23774  006068  CFF7 FFEA          	movff	tblptrh,fsr0h
 23775  00606C  50EF               	movf	indf0,w,c
 23776  00606E                     u7810:
 23777  00606E  6E0D               	movwf	memcpy@tmp,c
 23778  006070  0E01               	movlw	1
 23779  006072  2608               	addwf	memcpy@s,f,c
 23780  006074  0E00               	movlw	0
 23781  006076  2209               	addwfc	memcpy@s+1,f,c
 23782  006078  0E00               	movlw	0
 23783  00607A  220A               	addwfc	memcpy@s+2,f,c
 23784  00607C  C00B  FFD9         	movff	memcpy@d,fsr2l
 23785  006080  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 23786  006084  C00D  FFDF         	movff	memcpy@tmp,indf2
 23787  006088  4A0B               	infsnz	memcpy@d,f,c
 23788  00608A  2A0C               	incf	memcpy@d+1,f,c
 23789  00608C                     l3490:
 23790  00608C  0606               	decf	memcpy@n,f,c
 23791  00608E  A0D8               	btfss	status,0,c
 23792  006090  0607               	decf	memcpy@n+1,f,c
 23793  006092  2806               	incf	memcpy@n,w,c
 23794  006094  E1DC               	bnz	l10542
 23795  006096  2807               	incf	memcpy@n+1,w,c
 23796  006098  B4D8               	btfsc	status,2,c
 23797  00609A  0012               	return	
 23798  00609C  D7D8               	goto	l3491
 23799  00609E                     __end_of_memcpy:
 23800                           	opt stack 0
 23801                           tosu	equ	0xFFF
 23802                           tosh	equ	0xFFE
 23803                           tosl	equ	0xFFD
 23804                           pclath	equ	0xFFA
 23805                           tblptru	equ	0xFF8
 23806                           tblptrh	equ	0xFF7
 23807                           tblptrl	equ	0xFF6
 23808                           tablat	equ	0xFF5
 23809                           prodh	equ	0xFF4
 23810                           prodl	equ	0xFF3
 23811                           intcon	equ	0xFF2
 23812                           intcon2	equ	0xFF1
 23813                           intcon3	equ	0xFF0
 23814                           indf0	equ	0xFEF
 23815                           postinc0	equ	0xFEE
 23816                           fsr0h	equ	0xFEA
 23817                           fsr0l	equ	0xFE9
 23818                           wreg	equ	0xFE8
 23819                           indf1	equ	0xFE7
 23820                           postdec1	equ	0xFE5
 23821                           plusw1	equ	0xFE3
 23822                           fsr1h	equ	0xFE2
 23823                           fsr1l	equ	0xFE1
 23824                           indf2	equ	0xFDF
 23825                           postinc2	equ	0xFDE
 23826                           postdec2	equ	0xFDD
 23827                           plusw2	equ	0xFDB
 23828                           fsr2h	equ	0xFDA
 23829                           fsr2l	equ	0xFD9
 23830                           status	equ	0xFD8
 23831                           
 23832 ;; *************** function __fill_buffer_get_status *****************
 23833 ;; Defined at:
 23834 ;;		line 167 in file "api.c"
 23835 ;; Parameters:    Size  Location     Type
 23836 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23837 ;;		 -> ToSendDataBuffer(64), 
 23838 ;; Auto vars:     Size  Location     Type
 23839 ;;		None
 23840 ;; Return value:  Size  Location     Type
 23841 ;;                  1    wreg      void 
 23842 ;; Registers used:
 23843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23844 ;; Tracked objects:
 23845 ;;		On entry : 0/0
 23846 ;;		On exit  : 0/0
 23847 ;;		Unchanged: 0/0
 23848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23849 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23852 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23853 ;;Total ram usage:        2 bytes
 23854 ;; Hardware stack levels used:    1
 23855 ;; Hardware stack levels required when called:    4
 23856 ;; This function calls:
 23857 ;;		_flash_is_busy
 23858 ;;		_ui_get_status
 23859 ;; This function is called by:
 23860 ;;		_api_prepare
 23861 ;; This function uses a non-reentrant model
 23862 ;;
 23863                           
 23864                           	psect	text116
 23865  00442A                     __ptext116:
 23866                           	opt stack 0
 23867  00442A                     __fill_buffer_get_status:
 23868                           	opt stack 24
 23869                           
 23870                           ;api.c: 170: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23871                           
 23872                           ;incstack = 0
 23873  00442A  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23874  00442E  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23875  004432  0E10               	movlw	16
 23876  004434  6EDF               	movwf	indf2,c
 23877                           
 23878                           ;api.c: 173: outBuffer[1] = 0x4B16 >> 8;
 23879  004436  EE20 F001          	lfsr	2,1
 23880  00443A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23881  00443C  26D9               	addwf	fsr2l,f,c
 23882  00443E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23883  004440  22DA               	addwfc	fsr2h,f,c
 23884  004442  0E4B               	movlw	75
 23885  004444  6EDF               	movwf	indf2,c
 23886                           
 23887                           ;api.c: 174: outBuffer[2] = (uint8_t) 0x4B16;
 23888  004446  EE20 F002          	lfsr	2,2
 23889  00444A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23890  00444C  26D9               	addwf	fsr2l,f,c
 23891  00444E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23892  004450  22DA               	addwfc	fsr2h,f,c
 23893  004452  0E16               	movlw	22
 23894  004454  6EDF               	movwf	indf2,c
 23895                           
 23896                           ;api.c: 177: outBuffer[3] = (uint8_t) flash_is_busy();
 23897  004456  EE20 F003          	lfsr	2,3
 23898  00445A  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23899  00445C  26D9               	addwf	fsr2l,f,c
 23900  00445E  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23901  004460  22DA               	addwfc	fsr2h,f,c
 23902  004462  ECEF  F038         	call	_flash_is_busy	;wreg free
 23903  004466  6EDF               	movwf	indf2,c
 23904                           
 23905                           ;api.c: 180: outBuffer[4] = 0x00;
 23906  004468  EE20 F004          	lfsr	2,4
 23907  00446C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23908  00446E  26D9               	addwf	fsr2l,f,c
 23909  004470  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23910  004472  22DA               	addwfc	fsr2h,f,c
 23911  004474  0E00               	movlw	0
 23912  004476  6EDF               	movwf	indf2,c
 23913                           
 23914                           ;api.c: 181: outBuffer[5] = 0x05;
 23915  004478  EE20 F005          	lfsr	2,5
 23916  00447C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23917  00447E  26D9               	addwf	fsr2l,f,c
 23918  004480  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23919  004482  22DA               	addwfc	fsr2h,f,c
 23920  004484  0E05               	movlw	5
 23921  004486  6EDF               	movwf	indf2,c
 23922                           
 23923                           ;api.c: 182: outBuffer[6] = 0x00;
 23924  004488  EE20 F006          	lfsr	2,6
 23925  00448C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23926  00448E  26D9               	addwf	fsr2l,f,c
 23927  004490  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23928  004492  22DA               	addwfc	fsr2h,f,c
 23929  004494  0E00               	movlw	0
 23930  004496  6EDF               	movwf	indf2,c
 23931                           
 23932                           ;api.c: 185: outBuffer[7] = ui_get_status();
 23933  004498  EE20 F007          	lfsr	2,7
 23934  00449C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23935  00449E  26D9               	addwf	fsr2l,f,c
 23936  0044A0  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23937  0044A2  22DA               	addwfc	fsr2h,f,c
 23938  0044A4  EC25  F039         	call	_ui_get_status	;wreg free
 23939  0044A8  6EDF               	movwf	indf2,c
 23940                           
 23941                           ;api.c: 188: outBuffer[8] = os.encoderCount;
 23942  0044AA  EE20 F008          	lfsr	2,8
 23943  0044AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23944  0044B0  26D9               	addwf	fsr2l,f,c
 23945  0044B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23946  0044B4  22DA               	addwfc	fsr2h,f,c
 23947  0044B6  C060  FFDF         	movff	_os,indf2
 23948                           
 23949                           ;api.c: 189: outBuffer[9] = os.buttonCount;
 23950  0044BA  EE20 F009          	lfsr	2,9
 23951  0044BE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23952  0044C0  26D9               	addwf	fsr2l,f,c
 23953  0044C2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23954  0044C4  22DA               	addwfc	fsr2h,f,c
 23955  0044C6  C061  FFDF         	movff	_os+1,indf2
 23956                           
 23957                           ;api.c: 190: outBuffer[10] = os.timeSlot;
 23958  0044CA  EE20 F00A          	lfsr	2,10
 23959  0044CE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23960  0044D0  26D9               	addwf	fsr2l,f,c
 23961  0044D2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23962  0044D4  22DA               	addwfc	fsr2h,f,c
 23963  0044D6  C062  FFDF         	movff	_os+2,indf2
 23964                           
 23965                           ;api.c: 191: outBuffer[11] = os.done;
 23966  0044DA  EE20 F00B          	lfsr	2,11
 23967  0044DE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23968  0044E0  26D9               	addwf	fsr2l,f,c
 23969  0044E2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23970  0044E4  22DA               	addwfc	fsr2h,f,c
 23971  0044E6  C063  FFDF         	movff	_os+3,indf2
 23972                           
 23973                           ;api.c: 192: outBuffer[12] = os.bootloader_mode;
 23974  0044EA  EE20 F00C          	lfsr	2,12
 23975  0044EE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23976  0044F0  26D9               	addwf	fsr2l,f,c
 23977  0044F2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23978  0044F4  22DA               	addwfc	fsr2h,f,c
 23979  0044F6  C064  FFDF         	movff	_os+4,indf2
 23980                           
 23981                           ;api.c: 193: outBuffer[13] = os.display_mode;
 23982  0044FA  EE20 F00D          	lfsr	2,13
 23983  0044FE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23984  004500  26D9               	addwf	fsr2l,f,c
 23985  004502  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23986  004504  22DA               	addwfc	fsr2h,f,c
 23987  004506  C065  FFDF         	movff	_os+5,indf2
 23988  00450A  0012               	return		;funcret
 23989  00450C                     __end_of__fill_buffer_get_status:
 23990                           	opt stack 0
 23991                           tosu	equ	0xFFF
 23992                           tosh	equ	0xFFE
 23993                           tosl	equ	0xFFD
 23994                           pclath	equ	0xFFA
 23995                           tblptru	equ	0xFF8
 23996                           tblptrh	equ	0xFF7
 23997                           tblptrl	equ	0xFF6
 23998                           tablat	equ	0xFF5
 23999                           prodh	equ	0xFF4
 24000                           prodl	equ	0xFF3
 24001                           intcon	equ	0xFF2
 24002                           intcon2	equ	0xFF1
 24003                           intcon3	equ	0xFF0
 24004                           indf0	equ	0xFEF
 24005                           postinc0	equ	0xFEE
 24006                           fsr0h	equ	0xFEA
 24007                           fsr0l	equ	0xFE9
 24008                           wreg	equ	0xFE8
 24009                           indf1	equ	0xFE7
 24010                           postdec1	equ	0xFE5
 24011                           plusw1	equ	0xFE3
 24012                           fsr1h	equ	0xFE2
 24013                           fsr1l	equ	0xFE1
 24014                           indf2	equ	0xFDF
 24015                           postinc2	equ	0xFDE
 24016                           postdec2	equ	0xFDD
 24017                           plusw2	equ	0xFDB
 24018                           fsr2h	equ	0xFDA
 24019                           fsr2l	equ	0xFD9
 24020                           status	equ	0xFD8
 24021                           
 24022 ;; *************** function _flash_is_busy *****************
 24023 ;; Defined at:
 24024 ;;		line 373 in file "flash.c"
 24025 ;; Parameters:    Size  Location     Type
 24026 ;;		None
 24027 ;; Auto vars:     Size  Location     Type
 24028 ;;  result          1   19[COMRAM] unsigned char 
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1    wreg      unsigned char 
 24031 ;; Registers used:
 24032 ;;		wreg, status,2, status,0, cstack
 24033 ;; Tracked objects:
 24034 ;;		On entry : 0/0
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24042 ;;Total ram usage:        1 bytes
 24043 ;; Hardware stack levels used:    1
 24044 ;; Hardware stack levels required when called:    3
 24045 ;; This function calls:
 24046 ;;		__flash_is_busy
 24047 ;; This function is called by:
 24048 ;;		__fill_buffer_get_status
 24049 ;; This function uses a non-reentrant model
 24050 ;;
 24051                           
 24052                           	psect	text117
 24053  0071DE                     __ptext117:
 24054                           	opt stack 0
 24055  0071DE                     _flash_is_busy:
 24056                           	opt stack 24
 24057                           
 24058                           ;flash.c: 375: uint8_t result;;flash.c: 378: result = _flash_is_busy();
 24059                           
 24060                           ;incstack = 0
 24061  0071DE  ECD7  F037         	call	__flash_is_busy	;wreg free
 24062  0071E2  6E14               	movwf	flash_is_busy@result,c
 24063                           
 24064                           ;flash.c: 381: return result;
 24065  0071E4  5014               	movf	flash_is_busy@result,w,c
 24066  0071E6  0012               	return	
 24067  0071E8                     __end_of_flash_is_busy:
 24068                           	opt stack 0
 24069                           tosu	equ	0xFFF
 24070                           tosh	equ	0xFFE
 24071                           tosl	equ	0xFFD
 24072                           pclath	equ	0xFFA
 24073                           tblptru	equ	0xFF8
 24074                           tblptrh	equ	0xFF7
 24075                           tblptrl	equ	0xFF6
 24076                           tablat	equ	0xFF5
 24077                           prodh	equ	0xFF4
 24078                           prodl	equ	0xFF3
 24079                           intcon	equ	0xFF2
 24080                           intcon2	equ	0xFF1
 24081                           intcon3	equ	0xFF0
 24082                           indf0	equ	0xFEF
 24083                           postinc0	equ	0xFEE
 24084                           fsr0h	equ	0xFEA
 24085                           fsr0l	equ	0xFE9
 24086                           wreg	equ	0xFE8
 24087                           indf1	equ	0xFE7
 24088                           postdec1	equ	0xFE5
 24089                           plusw1	equ	0xFE3
 24090                           fsr1h	equ	0xFE2
 24091                           fsr1l	equ	0xFE1
 24092                           indf2	equ	0xFDF
 24093                           postinc2	equ	0xFDE
 24094                           postdec2	equ	0xFDD
 24095                           plusw2	equ	0xFDB
 24096                           fsr2h	equ	0xFDA
 24097                           fsr2l	equ	0xFD9
 24098                           status	equ	0xFD8
 24099                           
 24100 ;; *************** function __fill_buffer_get_display *****************
 24101 ;; Defined at:
 24102 ;;		line 197 in file "api.c"
 24103 ;; Parameters:    Size  Location     Type
 24104 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24105 ;;		 -> ToSendDataBuffer(64), 
 24106 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24107 ;; Auto vars:     Size  Location     Type
 24108 ;;  position        1   15[COMRAM] unsigned char 
 24109 ;;  start_line      1   14[COMRAM] unsigned char 
 24110 ;;  line            1   13[COMRAM] unsigned char 
 24111 ;;  cntr            1   12[COMRAM] unsigned char 
 24112 ;; Return value:  Size  Location     Type
 24113 ;;                  1    wreg      void 
 24114 ;; Registers used:
 24115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24116 ;; Tracked objects:
 24117 ;;		On entry : 0/0
 24118 ;;		On exit  : 0/0
 24119 ;;		Unchanged: 0/0
 24120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24121 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24122 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24123 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24124 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24125 ;;Total ram usage:       12 bytes
 24126 ;; Hardware stack levels used:    1
 24127 ;; Hardware stack levels required when called:    1
 24128 ;; This function calls:
 24129 ;;		_display_get_character
 24130 ;; This function is called by:
 24131 ;;		_api_prepare
 24132 ;; This function uses a non-reentrant model
 24133 ;;
 24134                           
 24135                           	psect	text118
 24136  004EE6                     __ptext118:
 24137                           	opt stack 0
 24138  004EE6                     __fill_buffer_get_display:
 24139                           	opt stack 27
 24140                           
 24141                           ;api.c: 199: uint8_t cntr;;api.c: 200: uint8_t line;;api.c: 201: uint8_t start_line;;api
      +                          .c: 202: uint8_t position;;api.c: 205: if(secondHalf)
 24142                           
 24143                           ;incstack = 0
 24144  004EE6  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24145  004EE8  B4D8               	btfsc	status,2,c
 24146  004EEA  D006               	goto	l2679
 24147                           
 24148                           ;api.c: 206: {;api.c: 207: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24149  004EEC  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24150  004EF0  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24151  004EF4  0E12               	movlw	18
 24152  004EF6  D005               	goto	L32
 24153  004EF8                     l2679:
 24154                           
 24155                           ;api.c: 209: else;api.c: 210: {;api.c: 211: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24156  004EF8  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24157  004EFC  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24158  004F00  0E11               	movlw	17
 24159  004F02                     L32:
 24160  004F02  6EDF               	movwf	indf2,c
 24161                           
 24162                           ;api.c: 212: };api.c: 215: outBuffer[1] = 0x4B16 >> 8;
 24163  004F04  EE20 F001          	lfsr	2,1
 24164  004F08  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24165  004F0A  26D9               	addwf	fsr2l,f,c
 24166  004F0C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24167  004F0E  22DA               	addwfc	fsr2h,f,c
 24168  004F10  0E4B               	movlw	75
 24169  004F12  6EDF               	movwf	indf2,c
 24170                           
 24171                           ;api.c: 216: outBuffer[2] = (uint8_t) 0x4B16;
 24172  004F14  EE20 F002          	lfsr	2,2
 24173  004F18  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24174  004F1A  26D9               	addwf	fsr2l,f,c
 24175  004F1C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24176  004F1E  22DA               	addwfc	fsr2h,f,c
 24177  004F20  0E16               	movlw	22
 24178  004F22  6EDF               	movwf	indf2,c
 24179                           
 24180                           ;api.c: 219: cntr = 3;
 24181  004F24  0E03               	movlw	3
 24182  004F26  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24183                           
 24184                           ;api.c: 220: if(secondHalf)
 24185  004F28  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24186  004F2A  B4D8               	btfsc	status,2,c
 24187  004F2C  D002               	goto	l2681
 24188                           
 24189                           ;api.c: 221: {;api.c: 222: start_line = 2;
 24190  004F2E  0E02               	movlw	2
 24191  004F30  D001               	goto	L33
 24192  004F32                     l2681:
 24193                           
 24194                           ;api.c: 224: else;api.c: 225: {;api.c: 226: start_line = 0;
 24195  004F32  0E00               	movlw	0
 24196  004F34                     L33:
 24197  004F34  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24198                           
 24199                           ;api.c: 227: };api.c: 228: for(line=start_line; line<start_line+2; ++line)
 24200  004F36  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24201  004F3A  D01A               	goto	l2683
 24202  004F3C                     
 24203                           ;api.c: 229: {;api.c: 230: for(position=0; position<20; ++position)
 24204  004F3C  0E00               	movlw	0
 24205  004F3E  6E10               	movwf	__fill_buffer_get_display@position,c
 24206  004F40                     l13180:
 24207  004F40  0E13               	movlw	19
 24208  004F42  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24209  004F44  D001               	goto	l2685
 24210  004F46  D013               	goto	u10600
 24211  004F48                     l2685:
 24212                           
 24213                           ;api.c: 231: {;api.c: 232: outBuffer[cntr] = display_get_character(line, position);
 24214  004F48  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24215  004F4C  500E               	movf	__fill_buffer_get_display@line,w,c
 24216  004F4E  EC06  F037         	call	_display_get_character
 24217  004F52  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24218  004F54  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24219  004F56  0D01               	mullw	1
 24220  004F58  50F3               	movf	prodl,w,c
 24221  004F5A  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24222  004F5C  6ED9               	movwf	fsr2l,c
 24223  004F5E  50F4               	movf	prodh,w,c
 24224  004F60  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24225  004F62  6EDA               	movwf	fsr2h,c
 24226  004F64  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24227                           
 24228                           ;api.c: 233: ++cntr;
 24229  004F68  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24230  004F6A  2A10               	incf	__fill_buffer_get_display@position,f,c
 24231  004F6C  D7E9               	goto	l13180
 24232  004F6E                     u10600:
 24233  004F6E  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24234  004F70                     l2683:
 24235  004F70  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24236  004F72  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24237  004F74  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24238  004F76  0E02               	movlw	2
 24239  004F78  2608               	addwf	??__fill_buffer_get_display,f,c
 24240  004F7A  0E00               	movlw	0
 24241  004F7C  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24242  004F7E  500E               	movf	__fill_buffer_get_display@line,w,c
 24243  004F80  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24244  004F82  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24245  004F84  5008               	movf	??__fill_buffer_get_display,w,c
 24246  004F86  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24247  004F88  500B               	movf	??__fill_buffer_get_display+3,w,c
 24248  004F8A  0A80               	xorlw	128
 24249  004F8C  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24250  004F8E  5009               	movf	??__fill_buffer_get_display+1,w,c
 24251  004F90  0A80               	xorlw	128
 24252  004F92  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24253  004F94  B0D8               	btfsc	status,0,c
 24254  004F96  0012               	return	
 24255  004F98  D7D1               	goto	l2684
 24256  004F9A                     __end_of__fill_buffer_get_display:
 24257                           	opt stack 0
 24258                           tosu	equ	0xFFF
 24259                           tosh	equ	0xFFE
 24260                           tosl	equ	0xFFD
 24261                           pclath	equ	0xFFA
 24262                           tblptru	equ	0xFF8
 24263                           tblptrh	equ	0xFF7
 24264                           tblptrl	equ	0xFF6
 24265                           tablat	equ	0xFF5
 24266                           prodh	equ	0xFF4
 24267                           prodl	equ	0xFF3
 24268                           intcon	equ	0xFF2
 24269                           intcon2	equ	0xFF1
 24270                           intcon3	equ	0xFF0
 24271                           indf0	equ	0xFEF
 24272                           postinc0	equ	0xFEE
 24273                           fsr0h	equ	0xFEA
 24274                           fsr0l	equ	0xFE9
 24275                           wreg	equ	0xFE8
 24276                           indf1	equ	0xFE7
 24277                           postdec1	equ	0xFE5
 24278                           plusw1	equ	0xFE3
 24279                           fsr1h	equ	0xFE2
 24280                           fsr1l	equ	0xFE1
 24281                           indf2	equ	0xFDF
 24282                           postinc2	equ	0xFDE
 24283                           postdec2	equ	0xFDD
 24284                           plusw2	equ	0xFDB
 24285                           fsr2h	equ	0xFDA
 24286                           fsr2l	equ	0xFD9
 24287                           status	equ	0xFD8
 24288                           
 24289 ;; *************** function _display_get_character *****************
 24290 ;; Defined at:
 24291 ;;		line 76 in file "display.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;  line            1    wreg     unsigned char 
 24294 ;;  position        1    0[COMRAM] unsigned char 
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;  line            1    3[COMRAM] unsigned char 
 24297 ;; Return value:  Size  Location     Type
 24298 ;;                  1    wreg      unsigned char 
 24299 ;; Registers used:
 24300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24301 ;; Tracked objects:
 24302 ;;		On entry : 0/0
 24303 ;;		On exit  : 0/0
 24304 ;;		Unchanged: 0/0
 24305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24306 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24310 ;;Total ram usage:        4 bytes
 24311 ;; Hardware stack levels used:    1
 24312 ;; This function calls:
 24313 ;;		Nothing
 24314 ;; This function is called by:
 24315 ;;		__fill_buffer_get_display
 24316 ;; This function uses a non-reentrant model
 24317 ;;
 24318                           
 24319                           	psect	text119
 24320  006E0C                     __ptext119:
 24321                           	opt stack 0
 24322  006E0C                     _display_get_character:
 24323                           	opt stack 27
 24324                           
 24325                           ;incstack = 0
 24326                           ;display_get_character@line stored from wreg
 24327  006E0C  6E04               	movwf	display_get_character@line,c
 24328                           
 24329                           ;display.c: 78: return display_content[line][position];
 24330  006E0E  5004               	movf	display_get_character@line,w,c
 24331  006E10  0D14               	mullw	20
 24332  006E12  0E78               	movlw	low _display_content
 24333  006E14  6E02               	movwf	??_display_get_character& (0+255),c
 24334  006E16  0E01               	movlw	high _display_content
 24335  006E18  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24336  006E1A  50F3               	movf	prodl,w,c
 24337  006E1C  2602               	addwf	??_display_get_character,f,c
 24338  006E1E  50F4               	movf	prodh,w,c
 24339  006E20  2203               	addwfc	??_display_get_character+1,f,c
 24340  006E22  5001               	movf	display_get_character@position,w,c
 24341  006E24  0D01               	mullw	1
 24342  006E26  50F3               	movf	prodl,w,c
 24343  006E28  2402               	addwf	??_display_get_character,w,c
 24344  006E2A  6ED9               	movwf	fsr2l,c
 24345  006E2C  50F4               	movf	prodh,w,c
 24346  006E2E  2003               	addwfc	??_display_get_character+1,w,c
 24347  006E30  6EDA               	movwf	fsr2h,c
 24348  006E32  50DF               	movf	indf2,w,c
 24349  006E34  0012               	return	
 24350  006E36                     __end_of_display_get_character:
 24351                           	opt stack 0
 24352                           tosu	equ	0xFFF
 24353                           tosh	equ	0xFFE
 24354                           tosl	equ	0xFFD
 24355                           pclath	equ	0xFFA
 24356                           tblptru	equ	0xFF8
 24357                           tblptrh	equ	0xFF7
 24358                           tblptrl	equ	0xFF6
 24359                           tablat	equ	0xFF5
 24360                           prodh	equ	0xFF4
 24361                           prodl	equ	0xFF3
 24362                           intcon	equ	0xFF2
 24363                           intcon2	equ	0xFF1
 24364                           intcon3	equ	0xFF0
 24365                           indf0	equ	0xFEF
 24366                           postinc0	equ	0xFEE
 24367                           fsr0h	equ	0xFEA
 24368                           fsr0l	equ	0xFE9
 24369                           wreg	equ	0xFE8
 24370                           indf1	equ	0xFE7
 24371                           postdec1	equ	0xFE5
 24372                           plusw1	equ	0xFE3
 24373                           fsr1h	equ	0xFE2
 24374                           fsr1l	equ	0xFE1
 24375                           indf2	equ	0xFDF
 24376                           postinc2	equ	0xFDE
 24377                           postdec2	equ	0xFDD
 24378                           plusw2	equ	0xFDB
 24379                           fsr2h	equ	0xFDA
 24380                           fsr2l	equ	0xFD9
 24381                           status	equ	0xFD8
 24382                           
 24383 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24384 ;; Defined at:
 24385 ;;		line 238 in file "api.c"
 24386 ;; Parameters:    Size  Location     Type
 24387 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24388 ;;		 -> ToSendDataBuffer(64), 
 24389 ;; Auto vars:     Size  Location     Type
 24390 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24391 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24392 ;;  cntr            1   10[COMRAM] unsigned char 
 24393 ;;  data_length     1    9[COMRAM] unsigned char 
 24394 ;; Return value:  Size  Location     Type
 24395 ;;                  1    wreg      void 
 24396 ;; Registers used:
 24397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24398 ;; Tracked objects:
 24399 ;;		On entry : 0/0
 24400 ;;		On exit  : 0/0
 24401 ;;		Unchanged: 0/0
 24402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24404 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24405 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24406 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24407 ;;Total ram usage:       13 bytes
 24408 ;; Hardware stack levels used:    1
 24409 ;; Hardware stack levels required when called:    1
 24410 ;; This function calls:
 24411 ;;		_bootloader_get_entries
 24412 ;;		_bootloader_get_error
 24413 ;;		_bootloader_get_file_size
 24414 ;;		_bootloader_get_flashPagesWritten
 24415 ;;		_bootloader_get_rec_address
 24416 ;;		_bootloader_get_rec_checksum
 24417 ;;		_bootloader_get_rec_checksumCheck
 24418 ;;		_bootloader_get_rec_data
 24419 ;;		_bootloader_get_rec_dataLength
 24420 ;;		_bootloader_get_rec_recordType
 24421 ;;		_bootloader_get_total_entries
 24422 ;; This function is called by:
 24423 ;;		_api_prepare
 24424 ;; This function uses a non-reentrant model
 24425 ;;
 24426                           
 24427                           	psect	text120
 24428  00203C                     __ptext120:
 24429                           	opt stack 0
 24430  00203C                     __fill_buffer_get_bootloader_details:
 24431                           	opt stack 27
 24432                           
 24433                           ;api.c: 240: uint8_t cntr;;api.c: 241: uint8_t data_length;;api.c: 242: uint16_t buffer_
      +                          small;;api.c: 243: uint32_t buffer_large;;api.c: 246: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24434                           
 24435                           ;incstack = 0
 24436  00203C  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24437  002040  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24438  002044  0E13               	movlw	19
 24439  002046  6EDF               	movwf	indf2,c
 24440                           
 24441                           ;api.c: 249: outBuffer[1] = ((unsigned char)(((0x4B16)>>8)&0xFF));
 24442  002048  EE20 F001          	lfsr	2,1
 24443  00204C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24444  00204E  26D9               	addwf	fsr2l,f,c
 24445  002050  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24446  002052  22DA               	addwfc	fsr2h,f,c
 24447  002054  0E4B               	movlw	75
 24448  002056  6EDF               	movwf	indf2,c
 24449                           
 24450                           ;api.c: 250: outBuffer[2] = ((unsigned char)((0x4B16)&0xFF));
 24451  002058  EE20 F002          	lfsr	2,2
 24452  00205C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24453  00205E  26D9               	addwf	fsr2l,f,c
 24454  002060  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24455  002062  22DA               	addwfc	fsr2h,f,c
 24456  002064  0E16               	movlw	22
 24457  002066  6EDF               	movwf	indf2,c
 24458                           
 24459                           ;api.c: 253: buffer_large = bootloader_get_file_size();
 24460  002068  EC8B  F038         	call	_bootloader_get_file_size	;wreg free
 24461  00206C  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24462  002070  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24463  002074  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24464  002078  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24465                           
 24466                           ;api.c: 254: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24467  00207C  EE20 F003          	lfsr	2,3
 24468  002080  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24469  002082  26D9               	addwf	fsr2l,f,c
 24470  002084  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24471  002086  22DA               	addwfc	fsr2h,f,c
 24472  002088  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24473  00208A  6EDF               	movwf	indf2,c
 24474                           
 24475                           ;api.c: 255: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24476  00208C  EE20 F004          	lfsr	2,4
 24477  002090  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24478  002092  26D9               	addwf	fsr2l,f,c
 24479  002094  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24480  002096  22DA               	addwfc	fsr2h,f,c
 24481  002098  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24482                           
 24483                           ;api.c: 256: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24484  00209C  EE20 F005          	lfsr	2,5
 24485  0020A0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24486  0020A2  26D9               	addwf	fsr2l,f,c
 24487  0020A4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24488  0020A6  22DA               	addwfc	fsr2h,f,c
 24489  0020A8  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24490  0020AA  6EDF               	movwf	indf2,c
 24491                           
 24492                           ;api.c: 257: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24493  0020AC  EE20 F006          	lfsr	2,6
 24494  0020B0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24495  0020B2  26D9               	addwf	fsr2l,f,c
 24496  0020B4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24497  0020B6  22DA               	addwfc	fsr2h,f,c
 24498  0020B8  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24499                           
 24500                           ;api.c: 259: buffer_small = bootloader_get_entries();
 24501  0020BC  ECFE  F038         	call	_bootloader_get_entries	;wreg free
 24502  0020C0  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24503  0020C4  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24504                           
 24505                           ;api.c: 260: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24506  0020C8  EE20 F007          	lfsr	2,7
 24507  0020CC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24508  0020CE  26D9               	addwf	fsr2l,f,c
 24509  0020D0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24510  0020D2  22DA               	addwfc	fsr2h,f,c
 24511  0020D4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24512  0020D6  6EDF               	movwf	indf2,c
 24513                           
 24514                           ;api.c: 261: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24515  0020D8  EE20 F008          	lfsr	2,8
 24516  0020DC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24517  0020DE  26D9               	addwf	fsr2l,f,c
 24518  0020E0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24519  0020E2  22DA               	addwfc	fsr2h,f,c
 24520  0020E4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24521                           
 24522                           ;api.c: 263: buffer_small = bootloader_get_total_entries();
 24523  0020E8  EC08  F039         	call	_bootloader_get_total_entries	;wreg free
 24524  0020EC  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24525  0020F0  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24526                           
 24527                           ;api.c: 264: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24528  0020F4  EE20 F009          	lfsr	2,9
 24529  0020F8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24530  0020FA  26D9               	addwf	fsr2l,f,c
 24531  0020FC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24532  0020FE  22DA               	addwfc	fsr2h,f,c
 24533  002100  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24534  002102  6EDF               	movwf	indf2,c
 24535                           
 24536                           ;api.c: 265: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24537  002104  EE20 F00A          	lfsr	2,10
 24538  002108  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24539  00210A  26D9               	addwf	fsr2l,f,c
 24540  00210C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24541  00210E  22DA               	addwfc	fsr2h,f,c
 24542  002110  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24543                           
 24544                           ;api.c: 267: outBuffer[11] = (uint8_t) bootloader_get_error();
 24545  002114  EE20 F00B          	lfsr	2,11
 24546  002118  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24547  00211A  26D9               	addwf	fsr2l,f,c
 24548  00211C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24549  00211E  22DA               	addwfc	fsr2h,f,c
 24550  002120  EC28  F039         	call	_bootloader_get_error	;wreg free
 24551  002124  6EDF               	movwf	indf2,c
 24552                           
 24553                           ;api.c: 269: buffer_small = bootloader_get_flashPagesWritten();
 24554  002126  EC03  F039         	call	_bootloader_get_flashPagesWritten	;wreg free
 24555  00212A  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24556  00212E  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24557                           
 24558                           ;api.c: 270: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24559  002132  EE20 F00C          	lfsr	2,12
 24560  002136  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24561  002138  26D9               	addwf	fsr2l,f,c
 24562  00213A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24563  00213C  22DA               	addwfc	fsr2h,f,c
 24564  00213E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24565  002140  6EDF               	movwf	indf2,c
 24566                           
 24567                           ;api.c: 271: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24568  002142  EE20 F00D          	lfsr	2,13
 24569  002146  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24570  002148  26D9               	addwf	fsr2l,f,c
 24571  00214A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24572  00214C  22DA               	addwfc	fsr2h,f,c
 24573  00214E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24574                           
 24575                           ;api.c: 274: buffer_small = bootloader_get_rec_dataLength();
 24576  002152  ECF4  F038         	call	_bootloader_get_rec_dataLength	;wreg free
 24577  002156  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24578  00215A  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24579                           
 24580                           ;api.c: 275: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24581  00215E  EE20 F00E          	lfsr	2,14
 24582  002162  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24583  002164  26D9               	addwf	fsr2l,f,c
 24584  002166  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24585  002168  22DA               	addwfc	fsr2h,f,c
 24586  00216A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24587  00216C  6EDF               	movwf	indf2,c
 24588                           
 24589                           ;api.c: 276: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24590  00216E  EE20 F00F          	lfsr	2,15
 24591  002172  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24592  002174  26D9               	addwf	fsr2l,f,c
 24593  002176  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24594  002178  22DA               	addwfc	fsr2h,f,c
 24595  00217A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24596                           
 24597                           ;api.c: 278: buffer_small = bootloader_get_rec_address();
 24598  00217E  ECF9  F038         	call	_bootloader_get_rec_address	;wreg free
 24599  002182  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24600  002186  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24601                           
 24602                           ;api.c: 279: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24603  00218A  EE20 F010          	lfsr	2,16
 24604  00218E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24605  002190  26D9               	addwf	fsr2l,f,c
 24606  002192  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24607  002194  22DA               	addwfc	fsr2h,f,c
 24608  002196  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24609  002198  6EDF               	movwf	indf2,c
 24610                           
 24611                           ;api.c: 280: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24612  00219A  EE20 F011          	lfsr	2,17
 24613  00219E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24614  0021A0  26D9               	addwf	fsr2l,f,c
 24615  0021A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24616  0021A4  22DA               	addwfc	fsr2h,f,c
 24617  0021A6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24618                           
 24619                           ;api.c: 282: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24620  0021AA  EE20 F012          	lfsr	2,18
 24621  0021AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24622  0021B0  26D9               	addwf	fsr2l,f,c
 24623  0021B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24624  0021B4  22DA               	addwfc	fsr2h,f,c
 24625  0021B6  EC1C  F039         	call	_bootloader_get_rec_recordType	;wreg free
 24626  0021BA  6EDF               	movwf	indf2,c
 24627                           
 24628                           ;api.c: 283: outBuffer[19] = bootloader_get_rec_checksum();
 24629  0021BC  EE20 F013          	lfsr	2,19
 24630  0021C0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24631  0021C2  26D9               	addwf	fsr2l,f,c
 24632  0021C4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24633  0021C6  22DA               	addwfc	fsr2h,f,c
 24634  0021C8  EC22  F039         	call	_bootloader_get_rec_checksum	;wreg free
 24635  0021CC  6EDF               	movwf	indf2,c
 24636                           
 24637                           ;api.c: 284: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24638  0021CE  EE20 F014          	lfsr	2,20
 24639  0021D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24640  0021D4  26D9               	addwf	fsr2l,f,c
 24641  0021D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24642  0021D8  22DA               	addwfc	fsr2h,f,c
 24643  0021DA  EC1F  F039         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24644  0021DE  6EDF               	movwf	indf2,c
 24645                           
 24646                           ;api.c: 286: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24647  0021E0  ECF4  F038         	call	_bootloader_get_rec_dataLength	;wreg free
 24648  0021E4  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24649  0021E6  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24650                           
 24651                           ;api.c: 287: if(data_length>43)
 24652  0021E8  0E2B               	movlw	43
 24653  0021EA  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24654  0021EC  D002               	goto	l2691
 24655                           
 24656                           ;api.c: 288: {;api.c: 290: data_length = 43;
 24657  0021EE  0E2B               	movlw	43
 24658  0021F0  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24659  0021F2                     l2691:
 24660                           
 24661                           ;api.c: 291: };api.c: 292: for(cntr=0; cntr<data_length; ++cntr)
 24662  0021F2  0E00               	movlw	0
 24663  0021F4  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24664  0021F6  D014               	goto	l2692
 24665  0021F8                     
 24666                           ;api.c: 293: {;api.c: 294: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24667  0021F8  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24668  0021FA  EC52  F038         	call	_bootloader_get_rec_data
 24669  0021FE  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24670  002200  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24671  002202  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24672  002204  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24673  002206  0E15               	movlw	21
 24674  002208  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24675  00220A  0E00               	movlw	0
 24676  00220C  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24677  00220E  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24678  002210  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24679  002212  6ED9               	movwf	fsr2l,c
 24680  002214  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 24681  002216  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24682  002218  6EDA               	movwf	fsr2h,c
 24683  00221A  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 24684  00221E  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 24685  002220                     l2692:
 24686  002220  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 24687  002222  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 24688  002224  B0D8               	btfsc	status,0,c
 24689  002226  0012               	return	
 24690  002228  D7E7               	goto	l2693
 24691  00222A                     __end_of__fill_buffer_get_bootloader_details:
 24692                           	opt stack 0
 24693                           tosu	equ	0xFFF
 24694                           tosh	equ	0xFFE
 24695                           tosl	equ	0xFFD
 24696                           pclath	equ	0xFFA
 24697                           tblptru	equ	0xFF8
 24698                           tblptrh	equ	0xFF7
 24699                           tblptrl	equ	0xFF6
 24700                           tablat	equ	0xFF5
 24701                           prodh	equ	0xFF4
 24702                           prodl	equ	0xFF3
 24703                           intcon	equ	0xFF2
 24704                           intcon2	equ	0xFF1
 24705                           intcon3	equ	0xFF0
 24706                           indf0	equ	0xFEF
 24707                           postinc0	equ	0xFEE
 24708                           fsr0h	equ	0xFEA
 24709                           fsr0l	equ	0xFE9
 24710                           wreg	equ	0xFE8
 24711                           indf1	equ	0xFE7
 24712                           postdec1	equ	0xFE5
 24713                           plusw1	equ	0xFE3
 24714                           fsr1h	equ	0xFE2
 24715                           fsr1l	equ	0xFE1
 24716                           indf2	equ	0xFDF
 24717                           postinc2	equ	0xFDE
 24718                           postdec2	equ	0xFDD
 24719                           plusw2	equ	0xFDB
 24720                           fsr2h	equ	0xFDA
 24721                           fsr2l	equ	0xFD9
 24722                           status	equ	0xFD8
 24723                           
 24724 ;; *************** function _bootloader_get_rec_recordType *****************
 24725 ;; Defined at:
 24726 ;;		line 494 in file "bootloader.c"
 24727 ;; Parameters:    Size  Location     Type
 24728 ;;		None
 24729 ;; Auto vars:     Size  Location     Type
 24730 ;;		None
 24731 ;; Return value:  Size  Location     Type
 24732 ;;                  1    wreg      enum E6768
 24733 ;; Registers used:
 24734 ;;		wreg, status,2
 24735 ;; Tracked objects:
 24736 ;;		On entry : 0/0
 24737 ;;		On exit  : 0/0
 24738 ;;		Unchanged: 0/0
 24739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24744 ;;Total ram usage:        0 bytes
 24745 ;; Hardware stack levels used:    1
 24746 ;; This function calls:
 24747 ;;		Nothing
 24748 ;; This function is called by:
 24749 ;;		__fill_buffer_get_bootloader_details
 24750 ;; This function uses a non-reentrant model
 24751 ;;
 24752                           
 24753                           	psect	text121
 24754  007238                     __ptext121:
 24755                           	opt stack 0
 24756  007238                     _bootloader_get_rec_recordType:
 24757                           	opt stack 27
 24758                           
 24759                           ;bootloader.c: 496: return hex_file_entry.recordType;
 24760                           
 24761                           ;incstack = 0
 24762  007238  0101               	movlb	1	; () banked
 24763  00723A  51CC               	movf	(_hex_file_entry+4)& (0+255),w,b
 24764  00723C  0012               	return	
 24765  00723E                     __end_of_bootloader_get_rec_recordType:
 24766                           	opt stack 0
 24767                           tosu	equ	0xFFF
 24768                           tosh	equ	0xFFE
 24769                           tosl	equ	0xFFD
 24770                           pclath	equ	0xFFA
 24771                           tblptru	equ	0xFF8
 24772                           tblptrh	equ	0xFF7
 24773                           tblptrl	equ	0xFF6
 24774                           tablat	equ	0xFF5
 24775                           prodh	equ	0xFF4
 24776                           prodl	equ	0xFF3
 24777                           intcon	equ	0xFF2
 24778                           intcon2	equ	0xFF1
 24779                           intcon3	equ	0xFF0
 24780                           indf0	equ	0xFEF
 24781                           postinc0	equ	0xFEE
 24782                           fsr0h	equ	0xFEA
 24783                           fsr0l	equ	0xFE9
 24784                           wreg	equ	0xFE8
 24785                           indf1	equ	0xFE7
 24786                           postdec1	equ	0xFE5
 24787                           plusw1	equ	0xFE3
 24788                           fsr1h	equ	0xFE2
 24789                           fsr1l	equ	0xFE1
 24790                           indf2	equ	0xFDF
 24791                           postinc2	equ	0xFDE
 24792                           postdec2	equ	0xFDD
 24793                           plusw2	equ	0xFDB
 24794                           fsr2h	equ	0xFDA
 24795                           fsr2l	equ	0xFD9
 24796                           status	equ	0xFD8
 24797                           
 24798 ;; *************** function _bootloader_get_rec_dataLength *****************
 24799 ;; Defined at:
 24800 ;;		line 483 in file "bootloader.c"
 24801 ;; Parameters:    Size  Location     Type
 24802 ;;		None
 24803 ;; Auto vars:     Size  Location     Type
 24804 ;;		None
 24805 ;; Return value:  Size  Location     Type
 24806 ;;                  2    0[COMRAM] unsigned int 
 24807 ;; Registers used:
 24808 ;;		None
 24809 ;; Tracked objects:
 24810 ;;		On entry : 0/0
 24811 ;;		On exit  : 0/0
 24812 ;;		Unchanged: 0/0
 24813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24817 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24818 ;;Total ram usage:        2 bytes
 24819 ;; Hardware stack levels used:    1
 24820 ;; This function calls:
 24821 ;;		Nothing
 24822 ;; This function is called by:
 24823 ;;		__fill_buffer_get_bootloader_details
 24824 ;; This function uses a non-reentrant model
 24825 ;;
 24826                           
 24827                           	psect	text122
 24828  0071E8                     __ptext122:
 24829                           	opt stack 0
 24830  0071E8                     _bootloader_get_rec_dataLength:
 24831                           	opt stack 27
 24832                           
 24833                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 24834                           
 24835                           ; BSR set to: 1
 24836                           ;incstack = 0
 24837  0071E8  C1C8  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 24838  0071EC  C1C9  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 24839  0071F0  0012               	return		;funcret
 24840  0071F2                     __end_of_bootloader_get_rec_dataLength:
 24841                           	opt stack 0
 24842                           tosu	equ	0xFFF
 24843                           tosh	equ	0xFFE
 24844                           tosl	equ	0xFFD
 24845                           pclath	equ	0xFFA
 24846                           tblptru	equ	0xFF8
 24847                           tblptrh	equ	0xFF7
 24848                           tblptrl	equ	0xFF6
 24849                           tablat	equ	0xFF5
 24850                           prodh	equ	0xFF4
 24851                           prodl	equ	0xFF3
 24852                           intcon	equ	0xFF2
 24853                           intcon2	equ	0xFF1
 24854                           intcon3	equ	0xFF0
 24855                           indf0	equ	0xFEF
 24856                           postinc0	equ	0xFEE
 24857                           fsr0h	equ	0xFEA
 24858                           fsr0l	equ	0xFE9
 24859                           wreg	equ	0xFE8
 24860                           indf1	equ	0xFE7
 24861                           postdec1	equ	0xFE5
 24862                           plusw1	equ	0xFE3
 24863                           fsr1h	equ	0xFE2
 24864                           fsr1l	equ	0xFE1
 24865                           indf2	equ	0xFDF
 24866                           postinc2	equ	0xFDE
 24867                           postdec2	equ	0xFDD
 24868                           plusw2	equ	0xFDB
 24869                           fsr2h	equ	0xFDA
 24870                           fsr2l	equ	0xFD9
 24871                           status	equ	0xFD8
 24872                           
 24873 ;; *************** function _bootloader_get_rec_data *****************
 24874 ;; Defined at:
 24875 ;;		line 499 in file "bootloader.c"
 24876 ;; Parameters:    Size  Location     Type
 24877 ;;  index           1    wreg     unsigned char 
 24878 ;; Auto vars:     Size  Location     Type
 24879 ;;  index           1    0[COMRAM] unsigned char 
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      unsigned char 
 24882 ;; Registers used:
 24883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24893 ;;Total ram usage:        1 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; This function calls:
 24896 ;;		Nothing
 24897 ;; This function is called by:
 24898 ;;		__fill_buffer_get_bootloader_details
 24899 ;; This function uses a non-reentrant model
 24900 ;;
 24901                           
 24902                           	psect	text123
 24903  0070A4                     __ptext123:
 24904                           	opt stack 0
 24905  0070A4                     _bootloader_get_rec_data:
 24906                           	opt stack 27
 24907                           
 24908                           ;incstack = 0
 24909                           ;bootloader_get_rec_data@index stored from wreg
 24910  0070A4  6E01               	movwf	bootloader_get_rec_data@index,c
 24911                           
 24912                           ;bootloader.c: 501: return hex_file_entry.data[index];
 24913  0070A6  5001               	movf	bootloader_get_rec_data@index,w,c
 24914  0070A8  0D01               	mullw	1
 24915  0070AA  0ECD               	movlw	low (_hex_file_entry+5)
 24916  0070AC  24F3               	addwf	prodl,w,c
 24917  0070AE  6ED9               	movwf	fsr2l,c
 24918  0070B0  0E01               	movlw	high (_hex_file_entry+5)
 24919  0070B2  20F4               	addwfc	prodh,w,c
 24920  0070B4  6EDA               	movwf	fsr2h,c
 24921  0070B6  50DF               	movf	indf2,w,c
 24922  0070B8  0012               	return	
 24923  0070BA                     __end_of_bootloader_get_rec_data:
 24924                           	opt stack 0
 24925                           tosu	equ	0xFFF
 24926                           tosh	equ	0xFFE
 24927                           tosl	equ	0xFFD
 24928                           pclath	equ	0xFFA
 24929                           tblptru	equ	0xFF8
 24930                           tblptrh	equ	0xFF7
 24931                           tblptrl	equ	0xFF6
 24932                           tablat	equ	0xFF5
 24933                           prodh	equ	0xFF4
 24934                           prodl	equ	0xFF3
 24935                           intcon	equ	0xFF2
 24936                           intcon2	equ	0xFF1
 24937                           intcon3	equ	0xFF0
 24938                           indf0	equ	0xFEF
 24939                           postinc0	equ	0xFEE
 24940                           fsr0h	equ	0xFEA
 24941                           fsr0l	equ	0xFE9
 24942                           wreg	equ	0xFE8
 24943                           indf1	equ	0xFE7
 24944                           postdec1	equ	0xFE5
 24945                           plusw1	equ	0xFE3
 24946                           fsr1h	equ	0xFE2
 24947                           fsr1l	equ	0xFE1
 24948                           indf2	equ	0xFDF
 24949                           postinc2	equ	0xFDE
 24950                           postdec2	equ	0xFDD
 24951                           plusw2	equ	0xFDB
 24952                           fsr2h	equ	0xFDA
 24953                           fsr2l	equ	0xFD9
 24954                           status	equ	0xFD8
 24955                           
 24956 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 24957 ;; Defined at:
 24958 ;;		line 509 in file "bootloader.c"
 24959 ;; Parameters:    Size  Location     Type
 24960 ;;		None
 24961 ;; Auto vars:     Size  Location     Type
 24962 ;;		None
 24963 ;; Return value:  Size  Location     Type
 24964 ;;                  1    wreg      unsigned char 
 24965 ;; Registers used:
 24966 ;;		wreg, status,2
 24967 ;; Tracked objects:
 24968 ;;		On entry : 0/0
 24969 ;;		On exit  : 0/0
 24970 ;;		Unchanged: 0/0
 24971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24976 ;;Total ram usage:        0 bytes
 24977 ;; Hardware stack levels used:    1
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;;		__fill_buffer_get_bootloader_details
 24982 ;; This function uses a non-reentrant model
 24983 ;;
 24984                           
 24985                           	psect	text124
 24986  00723E                     __ptext124:
 24987                           	opt stack 0
 24988  00723E                     _bootloader_get_rec_checksumCheck:
 24989                           	opt stack 27
 24990                           
 24991                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 24992                           
 24993                           ;incstack = 0
 24994  00723E  0101               	movlb	1	; () banked
 24995  007240  51DE               	movf	(_hex_file_entry+22)& (0+255),w,b
 24996  007242  0012               	return	
 24997  007244                     __end_of_bootloader_get_rec_checksumCheck:
 24998                           	opt stack 0
 24999                           tosu	equ	0xFFF
 25000                           tosh	equ	0xFFE
 25001                           tosl	equ	0xFFD
 25002                           pclath	equ	0xFFA
 25003                           tblptru	equ	0xFF8
 25004                           tblptrh	equ	0xFF7
 25005                           tblptrl	equ	0xFF6
 25006                           tablat	equ	0xFF5
 25007                           prodh	equ	0xFF4
 25008                           prodl	equ	0xFF3
 25009                           intcon	equ	0xFF2
 25010                           intcon2	equ	0xFF1
 25011                           intcon3	equ	0xFF0
 25012                           indf0	equ	0xFEF
 25013                           postinc0	equ	0xFEE
 25014                           fsr0h	equ	0xFEA
 25015                           fsr0l	equ	0xFE9
 25016                           wreg	equ	0xFE8
 25017                           indf1	equ	0xFE7
 25018                           postdec1	equ	0xFE5
 25019                           plusw1	equ	0xFE3
 25020                           fsr1h	equ	0xFE2
 25021                           fsr1l	equ	0xFE1
 25022                           indf2	equ	0xFDF
 25023                           postinc2	equ	0xFDE
 25024                           postdec2	equ	0xFDD
 25025                           plusw2	equ	0xFDB
 25026                           fsr2h	equ	0xFDA
 25027                           fsr2l	equ	0xFD9
 25028                           status	equ	0xFD8
 25029                           
 25030 ;; *************** function _bootloader_get_rec_checksum *****************
 25031 ;; Defined at:
 25032 ;;		line 504 in file "bootloader.c"
 25033 ;; Parameters:    Size  Location     Type
 25034 ;;		None
 25035 ;; Auto vars:     Size  Location     Type
 25036 ;;		None
 25037 ;; Return value:  Size  Location     Type
 25038 ;;                  1    wreg      unsigned char 
 25039 ;; Registers used:
 25040 ;;		wreg, status,2
 25041 ;; Tracked objects:
 25042 ;;		On entry : 0/0
 25043 ;;		On exit  : 0/0
 25044 ;;		Unchanged: 0/0
 25045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25050 ;;Total ram usage:        0 bytes
 25051 ;; Hardware stack levels used:    1
 25052 ;; This function calls:
 25053 ;;		Nothing
 25054 ;; This function is called by:
 25055 ;;		__fill_buffer_get_bootloader_details
 25056 ;; This function uses a non-reentrant model
 25057 ;;
 25058                           
 25059                           	psect	text125
 25060  007244                     __ptext125:
 25061                           	opt stack 0
 25062  007244                     _bootloader_get_rec_checksum:
 25063                           	opt stack 27
 25064                           
 25065                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25066                           
 25067                           ; BSR set to: 1
 25068                           ;incstack = 0
 25069  007244  0101               	movlb	1	; () banked
 25070  007246  51DD               	movf	(_hex_file_entry+21)& (0+255),w,b
 25071  007248  0012               	return	
 25072  00724A                     __end_of_bootloader_get_rec_checksum:
 25073                           	opt stack 0
 25074                           tosu	equ	0xFFF
 25075                           tosh	equ	0xFFE
 25076                           tosl	equ	0xFFD
 25077                           pclath	equ	0xFFA
 25078                           tblptru	equ	0xFF8
 25079                           tblptrh	equ	0xFF7
 25080                           tblptrl	equ	0xFF6
 25081                           tablat	equ	0xFF5
 25082                           prodh	equ	0xFF4
 25083                           prodl	equ	0xFF3
 25084                           intcon	equ	0xFF2
 25085                           intcon2	equ	0xFF1
 25086                           intcon3	equ	0xFF0
 25087                           indf0	equ	0xFEF
 25088                           postinc0	equ	0xFEE
 25089                           fsr0h	equ	0xFEA
 25090                           fsr0l	equ	0xFE9
 25091                           wreg	equ	0xFE8
 25092                           indf1	equ	0xFE7
 25093                           postdec1	equ	0xFE5
 25094                           plusw1	equ	0xFE3
 25095                           fsr1h	equ	0xFE2
 25096                           fsr1l	equ	0xFE1
 25097                           indf2	equ	0xFDF
 25098                           postinc2	equ	0xFDE
 25099                           postdec2	equ	0xFDD
 25100                           plusw2	equ	0xFDB
 25101                           fsr2h	equ	0xFDA
 25102                           fsr2l	equ	0xFD9
 25103                           status	equ	0xFD8
 25104                           
 25105 ;; *************** function _api_parse *****************
 25106 ;; Defined at:
 25107 ;;		line 90 in file "api.c"
 25108 ;; Parameters:    Size  Location     Type
 25109 ;;  inBuffer        2   53[COMRAM] PTR unsigned char 
 25110 ;;		 -> ReceivedDataBuffer(64), 
 25111 ;;  receivedData    1   55[COMRAM] unsigned char 
 25112 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25113 ;;		 -> ToSendDataBuffer(64), 
 25114 ;; Auto vars:     Size  Location     Type
 25115 ;;  out_idx_ptr     2   60[COMRAM] PTR unsigned char 
 25116 ;;		 -> api_parse@out_idx(1), 
 25117 ;;  in_idx          1   63[COMRAM] unsigned char 
 25118 ;;  out_idx         1   62[COMRAM] unsigned char 
 25119 ;; Return value:  Size  Location     Type
 25120 ;;                  1    wreg      void 
 25121 ;; Registers used:
 25122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25123 ;; Tracked objects:
 25124 ;;		On entry : 0/0
 25125 ;;		On exit  : 0/0
 25126 ;;		Unchanged: 0/0
 25127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25128 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25131 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25132 ;;Total ram usage:       11 bytes
 25133 ;; Hardware stack levels used:    1
 25134 ;; Hardware stack levels required when called:    8
 25135 ;; This function calls:
 25136 ;;		__parse_command_long
 25137 ;;		__parse_command_short
 25138 ;; This function is called by:
 25139 ;;		_APP_DeviceCustomHIDTasks
 25140 ;; This function uses a non-reentrant model
 25141 ;;
 25142                           
 25143                           	psect	text126
 25144  003726                     __ptext126:
 25145                           	opt stack 0
 25146  003726                     _api_parse:
 25147                           	opt stack 21
 25148                           
 25149                           ;api.c: 94: uint8_t in_idx;;api.c: 95: uint8_t out_idx;;api.c: 96: uint8_t *out_idx_ptr;
      +                          ;api.c: 98: out_idx = 0;
 25150                           
 25151                           ; BSR set to: 1
 25152                           ;incstack = 0
 25153  003726  0E00               	movlw	0
 25154  003728  6E3F               	movwf	api_parse@out_idx,c
 25155                           
 25156                           ;api.c: 99: out_idx_ptr = &out_idx;
 25157  00372A  0E3F               	movlw	low api_parse@out_idx
 25158  00372C  6E3D               	movwf	api_parse@out_idx_ptr,c
 25159  00372E  0E00               	movlw	high api_parse@out_idx
 25160  003730  6E3E               	movwf	api_parse@out_idx_ptr+1,c
 25161                           
 25162                           ;api.c: 101: if(inBuffer[0]>0x7F)
 25163  003732  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25164  003736  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25165  00373A  0E7F               	movlw	127
 25166  00373C  64DF               	cpfsgt	indf2,c
 25167  00373E  D001               	goto	l2660
 25168  003740  0012               	return	
 25169  003742                     l2660:
 25170                           
 25171                           ;api.c: 106: };api.c: 108: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25172  003742  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25173  003746  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25174  00374A  0E20               	movlw	32
 25175  00374C  18DE               	xorwf	postinc2,w,c
 25176  00374E  B4D8               	btfsc	status,2,c
 25177  003750  0012               	return	
 25178                           
 25179                           ;api.c: 113: };api.c: 115: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 25180                           
 25181                           ;api.c: 109: {;api.c: 112: return;
 25182  003752  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25183  003756  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25184  00375A  50DF               	movf	indf2,w,c
 25185  00375C  A4D8               	btfss	status,2,c
 25186  00375E  D018               	goto	l2663
 25187                           
 25188                           ;api.c: 116: {;api.c: 118: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 25189  003760  C039  FFD9         	movff	api_parse@outBuffer,fsr2l
 25190  003764  C03A  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 25191  003768  0E00               	movlw	0
 25192  00376A  6EDF               	movwf	indf2,c
 25193                           
 25194                           ;api.c: 121: outBuffer[1] = 0x4B16 >> 8;
 25195  00376C  EE20 F001          	lfsr	2,1
 25196  003770  5039               	movf	api_parse@outBuffer,w,c
 25197  003772  26D9               	addwf	fsr2l,f,c
 25198  003774  503A               	movf	api_parse@outBuffer+1,w,c
 25199  003776  22DA               	addwfc	fsr2h,f,c
 25200  003778  0E4B               	movlw	75
 25201  00377A  6EDF               	movwf	indf2,c
 25202                           
 25203                           ;api.c: 122: outBuffer[2] = (uint8_t) 0x4B16;
 25204  00377C  EE20 F002          	lfsr	2,2
 25205  003780  5039               	movf	api_parse@outBuffer,w,c
 25206  003782  26D9               	addwf	fsr2l,f,c
 25207  003784  503A               	movf	api_parse@outBuffer+1,w,c
 25208  003786  22DA               	addwfc	fsr2h,f,c
 25209  003788  0E16               	movlw	22
 25210  00378A  6EDF               	movwf	indf2,c
 25211                           
 25212                           ;api.c: 125: out_idx = 3;
 25213  00378C  0E03               	movlw	3
 25214  00378E  6E3F               	movwf	api_parse@out_idx,c
 25215  003790                     l2663:
 25216                           
 25217                           ;api.c: 126: };api.c: 128: in_idx = 1;
 25218  003790  0E01               	movlw	1
 25219  003792  6E40               	movwf	api_parse@in_idx,c
 25220                           
 25221                           ;api.c: 129: while(in_idx<receivedDataLength)
 25222  003794  D055               	goto	l2669
 25223  003796                     
 25224                           ;api.c: 130: {;api.c: 132: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 25225  003796  5040               	movf	api_parse@in_idx,w,c
 25226  003798  0D01               	mullw	1
 25227  00379A  50F3               	movf	prodl,w,c
 25228  00379C  2436               	addwf	api_parse@inBuffer,w,c
 25229  00379E  6ED9               	movwf	fsr2l,c
 25230  0037A0  50F4               	movf	prodh,w,c
 25231  0037A2  2037               	addwfc	api_parse@inBuffer+1,w,c
 25232  0037A4  6EDA               	movwf	fsr2h,c
 25233  0037A6  0E99               	movlw	153
 25234  0037A8  18DE               	xorwf	postinc2,w,c
 25235  0037AA  B4D8               	btfsc	status,2,c
 25236  0037AC  0012               	return	
 25237  0037AE  D02D               	goto	l2667
 25238  0037B0                     
 25239                           ;api.c: 140: _parse_command_short(inBuffer[in_idx]);
 25240  0037B0  5040               	movf	api_parse@in_idx,w,c
 25241  0037B2  0D01               	mullw	1
 25242  0037B4  50F3               	movf	prodl,w,c
 25243  0037B6  2436               	addwf	api_parse@inBuffer,w,c
 25244  0037B8  6ED9               	movwf	fsr2l,c
 25245  0037BA  50F4               	movf	prodh,w,c
 25246  0037BC  2037               	addwfc	api_parse@inBuffer+1,w,c
 25247  0037BE  6EDA               	movwf	fsr2h,c
 25248  0037C0  50DF               	movf	indf2,w,c
 25249  0037C2  EC85  F02C         	call	__parse_command_short
 25250  0037C6  D00B               	goto	l13624
 25251  0037C8                     
 25252                           ;api.c: 145: _parse_command_short(inBuffer[in_idx]);
 25253  0037C8  5040               	movf	api_parse@in_idx,w,c
 25254  0037CA  0D01               	mullw	1
 25255  0037CC  50F3               	movf	prodl,w,c
 25256  0037CE  2436               	addwf	api_parse@inBuffer,w,c
 25257  0037D0  6ED9               	movwf	fsr2l,c
 25258  0037D2  50F4               	movf	prodh,w,c
 25259  0037D4  2037               	addwfc	api_parse@inBuffer+1,w,c
 25260  0037D6  6EDA               	movwf	fsr2h,c
 25261  0037D8  50DF               	movf	indf2,w,c
 25262  0037DA  EC85  F02C         	call	__parse_command_short
 25263  0037DE                     l13624:
 25264                           
 25265                           ;api.c: 146: ++in_idx;
 25266  0037DE  2A40               	incf	api_parse@in_idx,f,c
 25267                           
 25268                           ;api.c: 147: break;
 25269  0037E0  D02F               	goto	l2669
 25270  0037E2                     
 25271                           ;api.c: 150: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 25272  0037E2  5040               	movf	api_parse@in_idx,w,c
 25273  0037E4  0D01               	mullw	1
 25274  0037E6  50F3               	movf	prodl,w,c
 25275  0037E8  2436               	addwf	api_parse@inBuffer,w,c
 25276  0037EA  6E2F               	movwf	__parse_command_long@data,c
 25277  0037EC  50F4               	movf	prodh,w,c
 25278  0037EE  2037               	addwfc	api_parse@inBuffer+1,w,c
 25279  0037F0  6E30               	movwf	__parse_command_long@data+1,c
 25280  0037F2  C039  F031         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 25281  0037F6  C03A  F032         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 25282  0037FA  C03D  F033         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 25283  0037FE  C03E  F034         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 25284  003802  EC7A  F035         	call	__parse_command_long	;wreg free
 25285  003806  2640               	addwf	api_parse@in_idx,f,c
 25286                           
 25287                           ;api.c: 151: break;
 25288  003808  D01B               	goto	l2669
 25289  00380A                     l2667:
 25290  00380A  5040               	movf	api_parse@in_idx,w,c
 25291  00380C  0D01               	mullw	1
 25292  00380E  50F3               	movf	prodl,w,c
 25293  003810  2436               	addwf	api_parse@inBuffer,w,c
 25294  003812  6ED9               	movwf	fsr2l,c
 25295  003814  50F4               	movf	prodh,w,c
 25296  003816  2037               	addwfc	api_parse@inBuffer+1,w,c
 25297  003818  6EDA               	movwf	fsr2h,c
 25298  00381A  50DF               	movf	indf2,w,c
 25299  00381C  0BF0               	andlw	240
 25300  00381E  6E3B               	movwf	??_api_parse& (0+255),c
 25301  003820  6A3C               	clrf	(??_api_parse+1)& (0+255),c
 25302                           
 25303                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25304                           ; Switch size 1, requested type "space"
 25305                           ; Number of cases is 1, Range of values is 0 to 0
 25306                           ; switch strategies available:
 25307                           ; Name         Instructions Cycles
 25308                           ; simple_byte            4     3 (average)
 25309                           ;	Chosen strategy is simple_byte
 25310  003822  503C               	movf	??_api_parse+1,w,c
 25311  003824  0A00               	xorlw	0	; case 0
 25312  003826  A4D8               	btfss	status,2,c
 25313  003828  0012               	return	
 25314                           
 25315                           ; Switch size 1, requested type "space"
 25316                           ; Number of cases is 3, Range of values is 32 to 80
 25317                           ; switch strategies available:
 25318                           ; Name         Instructions Cycles
 25319                           ; simple_byte           10     6 (average)
 25320                           ;	Chosen strategy is simple_byte
 25321  00382A  503B               	movf	??_api_parse,w,c
 25322  00382C  0A20               	xorlw	32	; case 32
 25323  00382E  B4D8               	btfsc	status,2,c
 25324  003830  D7BF               	goto	l2668
 25325  003832  0A10               	xorlw	16	; case 48
 25326  003834  B4D8               	btfsc	status,2,c
 25327  003836  D7C8               	goto	l2670
 25328  003838  0A60               	xorlw	96	; case 80
 25329  00383A  A4D8               	btfss	status,2,c
 25330  00383C  0012               	return	
 25331  00383E  D7D1               	goto	l2671
 25332  003840                     l2669:
 25333  003840  5038               	movf	api_parse@receivedDataLength,w,c
 25334  003842  5C40               	subwf	api_parse@in_idx,w,c
 25335  003844  B0D8               	btfsc	status,0,c
 25336  003846  0012               	return	
 25337  003848  D7A6               	goto	l2665
 25338  00384A                     __end_of_api_parse:
 25339                           	opt stack 0
 25340                           tosu	equ	0xFFF
 25341                           tosh	equ	0xFFE
 25342                           tosl	equ	0xFFD
 25343                           pclath	equ	0xFFA
 25344                           tblptru	equ	0xFF8
 25345                           tblptrh	equ	0xFF7
 25346                           tblptrl	equ	0xFF6
 25347                           tablat	equ	0xFF5
 25348                           prodh	equ	0xFF4
 25349                           prodl	equ	0xFF3
 25350                           intcon	equ	0xFF2
 25351                           intcon2	equ	0xFF1
 25352                           intcon3	equ	0xFF0
 25353                           indf0	equ	0xFEF
 25354                           postinc0	equ	0xFEE
 25355                           fsr0h	equ	0xFEA
 25356                           fsr0l	equ	0xFE9
 25357                           wreg	equ	0xFE8
 25358                           indf1	equ	0xFE7
 25359                           postdec1	equ	0xFE5
 25360                           plusw1	equ	0xFE3
 25361                           fsr1h	equ	0xFE2
 25362                           fsr1l	equ	0xFE1
 25363                           indf2	equ	0xFDF
 25364                           postinc2	equ	0xFDE
 25365                           postdec2	equ	0xFDD
 25366                           plusw2	equ	0xFDB
 25367                           fsr2h	equ	0xFDA
 25368                           fsr2l	equ	0xFD9
 25369                           status	equ	0xFD8
 25370                           
 25371 ;; *************** function __parse_command_short *****************
 25372 ;; Defined at:
 25373 ;;		line 298 in file "api.c"
 25374 ;; Parameters:    Size  Location     Type
 25375 ;;  cmd             1    wreg     unsigned char 
 25376 ;; Auto vars:     Size  Location     Type
 25377 ;;  cmd             1   35[COMRAM] unsigned char 
 25378 ;; Return value:  Size  Location     Type
 25379 ;;                  1    wreg      void 
 25380 ;; Registers used:
 25381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25382 ;; Tracked objects:
 25383 ;;		On entry : 0/0
 25384 ;;		On exit  : 0/0
 25385 ;;		Unchanged: 0/0
 25386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25391 ;;Total ram usage:        1 bytes
 25392 ;; Hardware stack levels used:    1
 25393 ;; Hardware stack levels required when called:    7
 25394 ;; This function calls:
 25395 ;;		_i2c_eeprom_writeByte
 25396 ;;		_reboot
 25397 ;;		_system_delay_ms
 25398 ;; This function is called by:
 25399 ;;		_api_parse
 25400 ;; This function uses a non-reentrant model
 25401 ;;
 25402                           
 25403                           	psect	text127
 25404  00590A                     __ptext127:
 25405                           	opt stack 0
 25406  00590A                     __parse_command_short:
 25407                           	opt stack 21
 25408                           
 25409                           ;incstack = 0
 25410                           ;__parse_command_short@cmd stored from wreg
 25411  00590A  6E24               	movwf	__parse_command_short@cmd,c
 25412                           
 25413                           ;api.c: 300: switch(cmd)
 25414  00590C  D033               	goto	l2698
 25415  00590E                     
 25416                           ;api.c: 303: i2c_eeprom_writeByte(0x100, 0x00);
 25417  00590E  0E01               	movlw	1
 25418  005910  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25419  005912  0E00               	movlw	0
 25420  005914  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25421  005916  0E00               	movlw	0
 25422  005918  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25423  00591A  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
 25424                           
 25425                           ;api.c: 304: system_delay_ms(10);
 25426  00591E  0E0A               	movlw	10
 25427  005920  ECA2  F037         	call	_system_delay_ms
 25428                           
 25429                           ;api.c: 305: reboot();
 25430  005924  EC21  F038         	call	_reboot	;wreg free
 25431                           
 25432                           ;api.c: 306: break;
 25433  005928  0012               	return	
 25434  00592A                     
 25435                           ;api.c: 309: i2c_eeprom_writeByte(0x100, 0x94);
 25436  00592A  0E01               	movlw	1
 25437  00592C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25438  00592E  0E00               	movlw	0
 25439  005930  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25440  005932  0E94               	movlw	148
 25441  005934  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25442  005936  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
 25443                           
 25444                           ;api.c: 310: system_delay_ms(10);
 25445  00593A  0E0A               	movlw	10
 25446  00593C  ECA2  F037         	call	_system_delay_ms
 25447                           
 25448                           ;api.c: 311: reboot();
 25449  005940  EC21  F038         	call	_reboot	;wreg free
 25450                           
 25451                           ;api.c: 312: break;
 25452  005944  0012               	return	
 25453  005946                     
 25454                           ;api.c: 315: i2c_eeprom_writeByte(0x100, 0x78);
 25455  005946  0E01               	movlw	1
 25456  005948  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25457  00594A  0E00               	movlw	0
 25458  00594C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25459  00594E  0E78               	movlw	120
 25460  005950  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25461  005952  EC01  F035         	call	_i2c_eeprom_writeByte	;wreg free
 25462                           
 25463                           ;api.c: 316: system_delay_ms(10);
 25464  005956  0E0A               	movlw	10
 25465  005958  ECA2  F037         	call	_system_delay_ms
 25466                           
 25467                           ;api.c: 317: reboot();
 25468  00595C  EC21  F038         	call	_reboot	;wreg free
 25469                           
 25470                           ;api.c: 318: break;
 25471  005960  0012               	return	
 25472  005962                     
 25473                           ;api.c: 321: --os.encoderCount;
 25474  005962  0100               	movlb	0	; () banked
 25475  005964  0760               	decf	_os& (0+255),f,b
 25476                           
 25477                           ;api.c: 322: break;
 25478  005966  0012               	return	
 25479  005968                     
 25480                           ;api.c: 325: ++os.encoderCount;
 25481                           
 25482                           ; BSR set to: 0
 25483  005968  0100               	movlb	0	; () banked
 25484  00596A  2B60               	incf	_os& (0+255),f,b
 25485                           
 25486                           ;api.c: 326: break;
 25487  00596C  0012               	return	
 25488  00596E                     
 25489                           ;api.c: 329: ++os.buttonCount;
 25490                           
 25491                           ; BSR set to: 0
 25492  00596E  0100               	movlb	0	; () banked
 25493  005970  2B61               	incf	(_os+1)& (0+255),f,b
 25494                           
 25495                           ; BSR set to: 0
 25496                           ;api.c: 331: }
 25497                           
 25498                           ;api.c: 330: break;
 25499  005972  0012               	return	
 25500  005974                     l2698:
 25501                           
 25502                           ; BSR set to: 0
 25503  005974  5024               	movf	__parse_command_short@cmd,w,c
 25504                           
 25505                           ; Switch size 1, requested type "space"
 25506                           ; Number of cases is 6, Range of values is 32 to 62
 25507                           ; switch strategies available:
 25508                           ; Name         Instructions Cycles
 25509                           ; simple_byte           19    10 (average)
 25510                           ;	Chosen strategy is simple_byte
 25511  005976  0A20               	xorlw	32	; case 32
 25512  005978  B4D8               	btfsc	status,2,c
 25513  00597A  D7C9               	goto	l2699
 25514  00597C  0A01               	xorlw	1	; case 33
 25515  00597E  B4D8               	btfsc	status,2,c
 25516  005980  D7D4               	goto	l2701
 25517  005982  0A03               	xorlw	3	; case 34
 25518  005984  B4D8               	btfsc	status,2,c
 25519  005986  D7DF               	goto	l2702
 25520  005988  0A1E               	xorlw	30	; case 60
 25521  00598A  B4D8               	btfsc	status,2,c
 25522  00598C  D7EA               	goto	l2703
 25523  00598E  0A01               	xorlw	1	; case 61
 25524  005990  B4D8               	btfsc	status,2,c
 25525  005992  D7EA               	goto	l2704
 25526  005994  0A03               	xorlw	3	; case 62
 25527  005996  A4D8               	btfss	status,2,c
 25528  005998  0012               	return	
 25529  00599A  D7E9               	goto	l2705
 25530  00599C                     __end_of__parse_command_short:
 25531                           	opt stack 0
 25532                           tosu	equ	0xFFF
 25533                           tosh	equ	0xFFE
 25534                           tosl	equ	0xFFD
 25535                           pclath	equ	0xFFA
 25536                           tblptru	equ	0xFF8
 25537                           tblptrh	equ	0xFF7
 25538                           tblptrl	equ	0xFF6
 25539                           tablat	equ	0xFF5
 25540                           prodh	equ	0xFF4
 25541                           prodl	equ	0xFF3
 25542                           intcon	equ	0xFF2
 25543                           intcon2	equ	0xFF1
 25544                           intcon3	equ	0xFF0
 25545                           indf0	equ	0xFEF
 25546                           postinc0	equ	0xFEE
 25547                           fsr0h	equ	0xFEA
 25548                           fsr0l	equ	0xFE9
 25549                           wreg	equ	0xFE8
 25550                           indf1	equ	0xFE7
 25551                           postdec1	equ	0xFE5
 25552                           plusw1	equ	0xFE3
 25553                           fsr1h	equ	0xFE2
 25554                           fsr1l	equ	0xFE1
 25555                           indf2	equ	0xFDF
 25556                           postinc2	equ	0xFDE
 25557                           postdec2	equ	0xFDD
 25558                           plusw2	equ	0xFDB
 25559                           fsr2h	equ	0xFDA
 25560                           fsr2l	equ	0xFD9
 25561                           status	equ	0xFD8
 25562                           
 25563 ;; *************** function _system_delay_ms *****************
 25564 ;; Defined at:
 25565 ;;		line 64 in file "os.c"
 25566 ;; Parameters:    Size  Location     Type
 25567 ;;  ms              1    wreg     unsigned char 
 25568 ;; Auto vars:     Size  Location     Type
 25569 ;;  ms              1    1[COMRAM] unsigned char 
 25570 ;;  cntr            1    2[COMRAM] unsigned char 
 25571 ;; Return value:  Size  Location     Type
 25572 ;;                  1    wreg      void 
 25573 ;; Registers used:
 25574 ;;		wreg, status,2, status,0, cstack
 25575 ;; Tracked objects:
 25576 ;;		On entry : 0/0
 25577 ;;		On exit  : 0/0
 25578 ;;		Unchanged: 0/0
 25579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25583 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25584 ;;Total ram usage:        3 bytes
 25585 ;; Hardware stack levels used:    1
 25586 ;; This function calls:
 25587 ;;		Nothing
 25588 ;; This function is called by:
 25589 ;;		_system_minimal_init
 25590 ;;		__ui_encoder
 25591 ;;		__parse_command_short
 25592 ;;		_i2c_digipot_set_defaults
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	text128
 25597  006F44                     __ptext128:
 25598                           	opt stack 0
 25599  006F44                     _system_delay_ms:
 25600                           	opt stack 28
 25601                           
 25602                           ;incstack = 0
 25603                           ;system_delay_ms@ms stored from wreg
 25604  006F44  6E02               	movwf	system_delay_ms@ms,c
 25605                           
 25606                           ;os.c: 66: uint8_t cntr;;os.c: 67: for(cntr=0; cntr<ms; ++cntr)
 25607  006F46  0E00               	movlw	0
 25608  006F48  6E03               	movwf	system_delay_ms@cntr,c
 25609  006F4A  D009               	goto	l1048
 25610  006F4C                     
 25611                           ;os.c: 68: {;os.c: 69: _delay((unsigned long)((6)*(8000000/4000.0)));
 25612  006F4C  0E10               	movlw	16
 25613  006F4E  6E01               	movwf	??_system_delay_ms& (0+255),c
 25614  006F50  0E94               	movlw	148
 25615  006F52                     u12987:
 25616  006F52  2EE8               	decfsz	wreg,f,c
 25617  006F54  D7FE               	bra	u12987
 25618  006F56  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 25619  006F58  D7FC               	bra	u12987
 25620  006F5A  D000               	nop2	
 25621  006F5C  2A03               	incf	system_delay_ms@cntr,f,c
 25622  006F5E                     l1048:
 25623  006F5E  5002               	movf	system_delay_ms@ms,w,c
 25624  006F60  5C03               	subwf	system_delay_ms@cntr,w,c
 25625  006F62  B0D8               	btfsc	status,0,c
 25626  006F64  0012               	return	
 25627  006F66  D7F2               	goto	l1049
 25628  006F68                     __end_of_system_delay_ms:
 25629                           	opt stack 0
 25630                           tosu	equ	0xFFF
 25631                           tosh	equ	0xFFE
 25632                           tosl	equ	0xFFD
 25633                           pclath	equ	0xFFA
 25634                           tblptru	equ	0xFF8
 25635                           tblptrh	equ	0xFF7
 25636                           tblptrl	equ	0xFF6
 25637                           tablat	equ	0xFF5
 25638                           prodh	equ	0xFF4
 25639                           prodl	equ	0xFF3
 25640                           intcon	equ	0xFF2
 25641                           intcon2	equ	0xFF1
 25642                           intcon3	equ	0xFF0
 25643                           indf0	equ	0xFEF
 25644                           postinc0	equ	0xFEE
 25645                           fsr0h	equ	0xFEA
 25646                           fsr0l	equ	0xFE9
 25647                           wreg	equ	0xFE8
 25648                           indf1	equ	0xFE7
 25649                           postdec1	equ	0xFE5
 25650                           plusw1	equ	0xFE3
 25651                           fsr1h	equ	0xFE2
 25652                           fsr1l	equ	0xFE1
 25653                           indf2	equ	0xFDF
 25654                           postinc2	equ	0xFDE
 25655                           postdec2	equ	0xFDD
 25656                           plusw2	equ	0xFDB
 25657                           fsr2h	equ	0xFDA
 25658                           fsr2l	equ	0xFD9
 25659                           status	equ	0xFD8
 25660                           
 25661 ;; *************** function _reboot *****************
 25662 ;; Defined at:
 25663 ;;		line 235 in file "os.c"
 25664 ;; Parameters:    Size  Location     Type
 25665 ;;		None
 25666 ;; Auto vars:     Size  Location     Type
 25667 ;;		None
 25668 ;; Return value:  Size  Location     Type
 25669 ;;                  1    wreg      void 
 25670 ;; Registers used:
 25671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25672 ;; Tracked objects:
 25673 ;;		On entry : 0/0
 25674 ;;		On exit  : 0/0
 25675 ;;		Unchanged: 0/0
 25676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25681 ;;Total ram usage:        0 bytes
 25682 ;; Hardware stack levels used:    1
 25683 ;; Hardware stack levels required when called:    6
 25684 ;; This function calls:
 25685 ;;		_display_prepare
 25686 ;;		_display_update
 25687 ;;		_ui_get_status
 25688 ;; This function is called by:
 25689 ;;		__ui_encoder
 25690 ;;		__parse_command_short
 25691 ;; This function uses a non-reentrant model
 25692 ;;
 25693                           
 25694                           	psect	text129
 25695  007042                     __ptext129:
 25696                           	opt stack 0
 25697  007042                     _reboot:
 25698                           	opt stack 22
 25699                           
 25700                           ;os.c: 238: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 25701                           
 25702                           ;incstack = 0
 25703  007042  0E80               	movlw	128
 25704  007044  0100               	movlb	0	; () banked
 25705  007046  6F65               	movwf	(_os+5)& (0+255),b
 25706                           
 25707                           ; BSR set to: 0
 25708                           ;os.c: 239: display_prepare(os.display_mode);
 25709  007048  5165               	movf	(_os+5)& (0+255),w,b
 25710  00704A  ECD5  F023         	call	_display_prepare
 25711                           
 25712                           ;os.c: 240: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 25713  00704E  EC25  F039         	call	_ui_get_status	;wreg free
 25714  007052  0A05               	xorlw	5
 25715  007054  B4D8               	btfsc	status,2,c
 25716                           
 25717                           ;os.c: 241: {;os.c: 242: display_update();
 25718  007056  ECB3  F02F         	call	_display_update	;wreg free
 25719  00705A                     
 25720                           ;os.c: 243: };os.c: 246: while(1);
 25721  00705A  D7FF               	goto	l1075
 25722  00705C                     __end_of_reboot:
 25723                           	opt stack 0
 25724                           tosu	equ	0xFFF
 25725                           tosh	equ	0xFFE
 25726                           tosl	equ	0xFFD
 25727                           pclath	equ	0xFFA
 25728                           tblptru	equ	0xFF8
 25729                           tblptrh	equ	0xFF7
 25730                           tblptrl	equ	0xFF6
 25731                           tablat	equ	0xFF5
 25732                           prodh	equ	0xFF4
 25733                           prodl	equ	0xFF3
 25734                           intcon	equ	0xFF2
 25735                           intcon2	equ	0xFF1
 25736                           intcon3	equ	0xFF0
 25737                           indf0	equ	0xFEF
 25738                           postinc0	equ	0xFEE
 25739                           fsr0h	equ	0xFEA
 25740                           fsr0l	equ	0xFE9
 25741                           wreg	equ	0xFE8
 25742                           indf1	equ	0xFE7
 25743                           postdec1	equ	0xFE5
 25744                           plusw1	equ	0xFE3
 25745                           fsr1h	equ	0xFE2
 25746                           fsr1l	equ	0xFE1
 25747                           indf2	equ	0xFDF
 25748                           postinc2	equ	0xFDE
 25749                           postdec2	equ	0xFDD
 25750                           plusw2	equ	0xFDB
 25751                           fsr2h	equ	0xFDA
 25752                           fsr2l	equ	0xFD9
 25753                           status	equ	0xFD8
 25754                           
 25755 ;; *************** function _ui_get_status *****************
 25756 ;; Defined at:
 25757 ;;		line 105 in file "ui.c"
 25758 ;; Parameters:    Size  Location     Type
 25759 ;;		None
 25760 ;; Auto vars:     Size  Location     Type
 25761 ;;		None
 25762 ;; Return value:  Size  Location     Type
 25763 ;;                  1    wreg      enum E7924
 25764 ;; Registers used:
 25765 ;;		wreg, status,2
 25766 ;; Tracked objects:
 25767 ;;		On entry : 0/0
 25768 ;;		On exit  : 0/0
 25769 ;;		Unchanged: 0/0
 25770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25775 ;;Total ram usage:        0 bytes
 25776 ;; Hardware stack levels used:    1
 25777 ;; This function calls:
 25778 ;;		Nothing
 25779 ;; This function is called by:
 25780 ;;		_main
 25781 ;;		_reboot
 25782 ;;		__fill_buffer_get_status
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           
 25786                           	psect	text130
 25787  00724A                     __ptext130:
 25788                           	opt stack 0
 25789  00724A                     _ui_get_status:
 25790                           	opt stack 27
 25791                           
 25792                           ;ui.c: 107: return userInterfaceStatus;
 25793                           
 25794                           ;incstack = 0
 25795  00724A  0100               	movlb	0	; () banked
 25796  00724C  5198               	movf	_userInterfaceStatus& (0+255),w,b
 25797  00724E  0012               	return	
 25798  007250                     __end_of_ui_get_status:
 25799                           	opt stack 0
 25800                           tosu	equ	0xFFF
 25801                           tosh	equ	0xFFE
 25802                           tosl	equ	0xFFD
 25803                           pclath	equ	0xFFA
 25804                           tblptru	equ	0xFF8
 25805                           tblptrh	equ	0xFF7
 25806                           tblptrl	equ	0xFF6
 25807                           tablat	equ	0xFF5
 25808                           prodh	equ	0xFF4
 25809                           prodl	equ	0xFF3
 25810                           intcon	equ	0xFF2
 25811                           intcon2	equ	0xFF1
 25812                           intcon3	equ	0xFF0
 25813                           indf0	equ	0xFEF
 25814                           postinc0	equ	0xFEE
 25815                           fsr0h	equ	0xFEA
 25816                           fsr0l	equ	0xFE9
 25817                           wreg	equ	0xFE8
 25818                           indf1	equ	0xFE7
 25819                           postdec1	equ	0xFE5
 25820                           plusw1	equ	0xFE3
 25821                           fsr1h	equ	0xFE2
 25822                           fsr1l	equ	0xFE1
 25823                           indf2	equ	0xFDF
 25824                           postinc2	equ	0xFDE
 25825                           postdec2	equ	0xFDD
 25826                           plusw2	equ	0xFDB
 25827                           fsr2h	equ	0xFDA
 25828                           fsr2l	equ	0xFD9
 25829                           status	equ	0xFD8
 25830                           
 25831 ;; *************** function _display_update *****************
 25832 ;; Defined at:
 25833 ;;		line 567 in file "display.c"
 25834 ;; Parameters:    Size  Location     Type
 25835 ;;		None
 25836 ;; Auto vars:     Size  Location     Type
 25837 ;;		None
 25838 ;; Return value:  Size  Location     Type
 25839 ;;                  1    wreg      void 
 25840 ;; Registers used:
 25841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25842 ;; Tracked objects:
 25843 ;;		On entry : 0/0
 25844 ;;		On exit  : 0/0
 25845 ;;		Unchanged: 0/0
 25846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25851 ;;Total ram usage:        0 bytes
 25852 ;; Hardware stack levels used:    1
 25853 ;; Hardware stack levels required when called:    4
 25854 ;; This function calls:
 25855 ;;		_i2c_display_cursor
 25856 ;;		_i2c_display_write_fixed
 25857 ;; This function is called by:
 25858 ;;		_main
 25859 ;;		_reboot
 25860 ;; This function uses a non-reentrant model
 25861 ;;
 25862                           
 25863                           	psect	text131
 25864  005F66                     __ptext131:
 25865                           	opt stack 0
 25866  005F66                     _display_update:
 25867                           	opt stack 23
 25868                           
 25869                           ;display.c: 569: i2c_display_cursor(0, 0);
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;incstack = 0
 25873  005F66  0E00               	movlw	0
 25874  005F68  6E0E               	movwf	i2c_display_cursor@position,c
 25875  005F6A  0E00               	movlw	0
 25876  005F6C  ECB4  F037         	call	_i2c_display_cursor
 25877                           
 25878                           ;display.c: 570: i2c_display_write_fixed(&display_content[0][0], 20);
 25879  005F70  0E78               	movlw	low _display_content
 25880  005F72  6E06               	movwf	i2c_display_write_fixed@data,c
 25881  005F74  0E01               	movlw	high _display_content
 25882  005F76  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25883  005F78  0E14               	movlw	20
 25884  005F7A  6E08               	movwf	i2c_display_write_fixed@length,c
 25885  005F7C  EC7B  F032         	call	_i2c_display_write_fixed	;wreg free
 25886                           
 25887                           ;display.c: 571: i2c_display_cursor(1, 0);
 25888  005F80  0E00               	movlw	0
 25889  005F82  6E0E               	movwf	i2c_display_cursor@position,c
 25890  005F84  0E01               	movlw	1
 25891  005F86  ECB4  F037         	call	_i2c_display_cursor
 25892                           
 25893                           ;display.c: 572: i2c_display_write_fixed(&display_content[1][0], 20);
 25894  005F8A  0E8C               	movlw	low (_display_content+20)
 25895  005F8C  6E06               	movwf	i2c_display_write_fixed@data,c
 25896  005F8E  0E01               	movlw	high (_display_content+20)
 25897  005F90  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25898  005F92  0E14               	movlw	20
 25899  005F94  6E08               	movwf	i2c_display_write_fixed@length,c
 25900  005F96  EC7B  F032         	call	_i2c_display_write_fixed	;wreg free
 25901                           
 25902                           ;display.c: 573: i2c_display_cursor(2, 0);
 25903  005F9A  0E00               	movlw	0
 25904  005F9C  6E0E               	movwf	i2c_display_cursor@position,c
 25905  005F9E  0E02               	movlw	2
 25906  005FA0  ECB4  F037         	call	_i2c_display_cursor
 25907                           
 25908                           ;display.c: 574: i2c_display_write_fixed(&display_content[2][0], 20);
 25909  005FA4  0EA0               	movlw	low (_display_content+40)
 25910  005FA6  6E06               	movwf	i2c_display_write_fixed@data,c
 25911  005FA8  0E01               	movlw	high (_display_content+40)
 25912  005FAA  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25913  005FAC  0E14               	movlw	20
 25914  005FAE  6E08               	movwf	i2c_display_write_fixed@length,c
 25915  005FB0  EC7B  F032         	call	_i2c_display_write_fixed	;wreg free
 25916                           
 25917                           ;display.c: 575: i2c_display_cursor(3, 0);
 25918  005FB4  0E00               	movlw	0
 25919  005FB6  6E0E               	movwf	i2c_display_cursor@position,c
 25920  005FB8  0E03               	movlw	3
 25921  005FBA  ECB4  F037         	call	_i2c_display_cursor
 25922                           
 25923                           ;display.c: 576: i2c_display_write_fixed(&display_content[3][0], 20);
 25924  005FBE  0EB4               	movlw	low (_display_content+60)
 25925  005FC0  6E06               	movwf	i2c_display_write_fixed@data,c
 25926  005FC2  0E01               	movlw	high (_display_content+60)
 25927  005FC4  6E07               	movwf	i2c_display_write_fixed@data+1,c
 25928  005FC6  0E14               	movlw	20
 25929  005FC8  6E08               	movwf	i2c_display_write_fixed@length,c
 25930  005FCA  EC7B  F032         	call	_i2c_display_write_fixed	;wreg free
 25931  005FCE  0012               	return		;funcret
 25932  005FD0                     __end_of_display_update:
 25933                           	opt stack 0
 25934                           tosu	equ	0xFFF
 25935                           tosh	equ	0xFFE
 25936                           tosl	equ	0xFFD
 25937                           pclath	equ	0xFFA
 25938                           tblptru	equ	0xFF8
 25939                           tblptrh	equ	0xFF7
 25940                           tblptrl	equ	0xFF6
 25941                           tablat	equ	0xFF5
 25942                           prodh	equ	0xFF4
 25943                           prodl	equ	0xFF3
 25944                           intcon	equ	0xFF2
 25945                           intcon2	equ	0xFF1
 25946                           intcon3	equ	0xFF0
 25947                           indf0	equ	0xFEF
 25948                           postinc0	equ	0xFEE
 25949                           fsr0h	equ	0xFEA
 25950                           fsr0l	equ	0xFE9
 25951                           wreg	equ	0xFE8
 25952                           indf1	equ	0xFE7
 25953                           postdec1	equ	0xFE5
 25954                           plusw1	equ	0xFE3
 25955                           fsr1h	equ	0xFE2
 25956                           fsr1l	equ	0xFE1
 25957                           indf2	equ	0xFDF
 25958                           postinc2	equ	0xFDE
 25959                           postdec2	equ	0xFDD
 25960                           plusw2	equ	0xFDB
 25961                           fsr2h	equ	0xFDA
 25962                           fsr2l	equ	0xFD9
 25963                           status	equ	0xFD8
 25964                           
 25965 ;; *************** function _i2c_display_write_fixed *****************
 25966 ;; Defined at:
 25967 ;;		line 278 in file "i2c.c"
 25968 ;; Parameters:    Size  Location     Type
 25969 ;;  data            2    5[COMRAM] PTR unsigned char 
 25970 ;;		 -> display_content(80), 
 25971 ;;  length          1    7[COMRAM] unsigned char 
 25972 ;; Auto vars:     Size  Location     Type
 25973 ;;  pos             1    8[COMRAM] unsigned char 
 25974 ;; Return value:  Size  Location     Type
 25975 ;;                  1    wreg      void 
 25976 ;; Registers used:
 25977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25978 ;; Tracked objects:
 25979 ;;		On entry : 0/0
 25980 ;;		On exit  : 0/0
 25981 ;;		Unchanged: 0/0
 25982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25983 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25987 ;;Total ram usage:        4 bytes
 25988 ;; Hardware stack levels used:    1
 25989 ;; Hardware stack levels required when called:    1
 25990 ;; This function calls:
 25991 ;;		__i2c_send
 25992 ;;		__i2c_start
 25993 ;;		__i2c_stop
 25994 ;;		__i2c_wait_idle
 25995 ;;		_i2c_set_frequency
 25996 ;; This function is called by:
 25997 ;;		_display_update
 25998 ;; This function uses a non-reentrant model
 25999 ;;
 26000                           
 26001                           	psect	text132
 26002  0064F6                     __ptext132:
 26003                           	opt stack 0
 26004  0064F6                     _i2c_display_write_fixed:
 26005                           	opt stack 25
 26006                           
 26007                           ;i2c.c: 280: uint8_t pos;;i2c.c: 283: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26008                           
 26009                           ;incstack = 0
 26010  0064F6  0E02               	movlw	2
 26011  0064F8  ECF0  F036         	call	_i2c_set_frequency
 26012                           
 26013                           ;i2c.c: 285: _i2c_wait_idle();
 26014  0064FC  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 26015                           
 26016                           ;i2c.c: 286: _i2c_start();
 26017  006500  EC11  F039         	call	__i2c_start	;wreg free
 26018                           
 26019                           ;i2c.c: 287: _i2c_wait_idle();
 26020  006504  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 26021                           
 26022                           ;i2c.c: 288: _i2c_send(0b01111000);
 26023  006508  0E78               	movlw	120
 26024  00650A  EC15  F039         	call	__i2c_send
 26025                           
 26026                           ;i2c.c: 289: _i2c_wait_idle();
 26027  00650E  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 26028                           
 26029                           ;i2c.c: 290: _i2c_send(0b01000000);
 26030  006512  0E40               	movlw	64
 26031  006514  EC15  F039         	call	__i2c_send
 26032                           
 26033                           ;i2c.c: 291: _i2c_wait_idle();
 26034  006518  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 26035                           
 26036                           ;i2c.c: 294: for(pos=0; pos<length; ++pos)
 26037  00651C  0E00               	movlw	0
 26038  00651E  6E09               	movwf	i2c_display_write_fixed@pos,c
 26039  006520  D00E               	goto	l1190
 26040  006522                     
 26041                           ;i2c.c: 295: {;i2c.c: 296: _i2c_send(data[pos]);
 26042  006522  5009               	movf	i2c_display_write_fixed@pos,w,c
 26043  006524  0D01               	mullw	1
 26044  006526  50F3               	movf	prodl,w,c
 26045  006528  2406               	addwf	i2c_display_write_fixed@data,w,c
 26046  00652A  6ED9               	movwf	fsr2l,c
 26047  00652C  50F4               	movf	prodh,w,c
 26048  00652E  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26049  006530  6EDA               	movwf	fsr2h,c
 26050  006532  50DF               	movf	indf2,w,c
 26051  006534  EC15  F039         	call	__i2c_send
 26052                           
 26053                           ;i2c.c: 297: _i2c_wait_idle();
 26054  006538  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 26055  00653C  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26056  00653E                     l1190:
 26057  00653E  5008               	movf	i2c_display_write_fixed@length,w,c
 26058  006540  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26059  006542  A0D8               	btfss	status,0,c
 26060  006544  D7EE               	goto	l1191
 26061                           
 26062                           ;i2c.c: 298: };i2c.c: 300: _i2c_stop();
 26063  006546  EC0D  F039         	call	__i2c_stop	;wreg free
 26064  00654A  0012               	return		;funcret
 26065  00654C                     __end_of_i2c_display_write_fixed:
 26066                           	opt stack 0
 26067                           tosu	equ	0xFFF
 26068                           tosh	equ	0xFFE
 26069                           tosl	equ	0xFFD
 26070                           pclath	equ	0xFFA
 26071                           tblptru	equ	0xFF8
 26072                           tblptrh	equ	0xFF7
 26073                           tblptrl	equ	0xFF6
 26074                           tablat	equ	0xFF5
 26075                           prodh	equ	0xFF4
 26076                           prodl	equ	0xFF3
 26077                           intcon	equ	0xFF2
 26078                           intcon2	equ	0xFF1
 26079                           intcon3	equ	0xFF0
 26080                           indf0	equ	0xFEF
 26081                           postinc0	equ	0xFEE
 26082                           fsr0h	equ	0xFEA
 26083                           fsr0l	equ	0xFE9
 26084                           wreg	equ	0xFE8
 26085                           indf1	equ	0xFE7
 26086                           postdec1	equ	0xFE5
 26087                           plusw1	equ	0xFE3
 26088                           fsr1h	equ	0xFE2
 26089                           fsr1l	equ	0xFE1
 26090                           indf2	equ	0xFDF
 26091                           postinc2	equ	0xFDE
 26092                           postdec2	equ	0xFDD
 26093                           plusw2	equ	0xFDB
 26094                           fsr2h	equ	0xFDA
 26095                           fsr2l	equ	0xFD9
 26096                           status	equ	0xFD8
 26097                           
 26098 ;; *************** function _i2c_display_cursor *****************
 26099 ;; Defined at:
 26100 ;;		line 238 in file "i2c.c"
 26101 ;; Parameters:    Size  Location     Type
 26102 ;;  line            1    wreg     unsigned char 
 26103 ;;  position        1   13[COMRAM] unsigned char 
 26104 ;; Auto vars:     Size  Location     Type
 26105 ;;  line            1   14[COMRAM] unsigned char 
 26106 ;;  address         1   15[COMRAM] unsigned char 
 26107 ;; Return value:  Size  Location     Type
 26108 ;;                  1    wreg      void 
 26109 ;; Registers used:
 26110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26111 ;; Tracked objects:
 26112 ;;		On entry : 0/0
 26113 ;;		On exit  : 0/0
 26114 ;;		Unchanged: 0/0
 26115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26119 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26120 ;;Total ram usage:        3 bytes
 26121 ;; Hardware stack levels used:    1
 26122 ;; Hardware stack levels required when called:    3
 26123 ;; This function calls:
 26124 ;;		__ic2_display_set_address
 26125 ;;		_i2c_set_frequency
 26126 ;; This function is called by:
 26127 ;;		_display_update
 26128 ;; This function uses a non-reentrant model
 26129 ;;
 26130                           
 26131                           	psect	text133
 26132  006F68                     __ptext133:
 26133                           	opt stack 0
 26134  006F68                     _i2c_display_cursor:
 26135                           	opt stack 23
 26136                           
 26137                           ;incstack = 0
 26138                           ;i2c_display_cursor@line stored from wreg
 26139  006F68  6E0F               	movwf	i2c_display_cursor@line,c
 26140                           
 26141                           ;i2c.c: 240: uint8_t address;;i2c.c: 243: line &= 0b11;
 26142  006F6A  0E03               	movlw	3
 26143  006F6C  160F               	andwf	i2c_display_cursor@line,f,c
 26144                           
 26145                           ;i2c.c: 244: address = line<<5;
 26146  006F6E  380F               	swapf	i2c_display_cursor@line,w,c
 26147  006F70  46E8               	rlncf	wreg,f,c
 26148  006F72  0BE0               	andlw	224
 26149  006F74  6E10               	movwf	i2c_display_cursor@address,c
 26150                           
 26151                           ;i2c.c: 245: position &= 0b11111;
 26152  006F76  0E1F               	movlw	31
 26153  006F78  160E               	andwf	i2c_display_cursor@position,f,c
 26154                           
 26155                           ;i2c.c: 246: address |= position;
 26156  006F7A  500E               	movf	i2c_display_cursor@position,w,c
 26157  006F7C  1210               	iorwf	i2c_display_cursor@address,f,c
 26158                           
 26159                           ;i2c.c: 249: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26160  006F7E  0E02               	movlw	2
 26161  006F80  ECF0  F036         	call	_i2c_set_frequency
 26162                           
 26163                           ;i2c.c: 252: _ic2_display_set_address(address);
 26164  006F84  5010               	movf	i2c_display_cursor@address,w,c
 26165  006F86  EC7C  F037         	call	__ic2_display_set_address
 26166  006F8A  0012               	return		;funcret
 26167  006F8C                     __end_of_i2c_display_cursor:
 26168                           	opt stack 0
 26169                           tosu	equ	0xFFF
 26170                           tosh	equ	0xFFE
 26171                           tosl	equ	0xFFD
 26172                           pclath	equ	0xFFA
 26173                           tblptru	equ	0xFF8
 26174                           tblptrh	equ	0xFF7
 26175                           tblptrl	equ	0xFF6
 26176                           tablat	equ	0xFF5
 26177                           prodh	equ	0xFF4
 26178                           prodl	equ	0xFF3
 26179                           intcon	equ	0xFF2
 26180                           intcon2	equ	0xFF1
 26181                           intcon3	equ	0xFF0
 26182                           indf0	equ	0xFEF
 26183                           postinc0	equ	0xFEE
 26184                           fsr0h	equ	0xFEA
 26185                           fsr0l	equ	0xFE9
 26186                           wreg	equ	0xFE8
 26187                           indf1	equ	0xFE7
 26188                           postdec1	equ	0xFE5
 26189                           plusw1	equ	0xFE3
 26190                           fsr1h	equ	0xFE2
 26191                           fsr1l	equ	0xFE1
 26192                           indf2	equ	0xFDF
 26193                           postinc2	equ	0xFDE
 26194                           postdec2	equ	0xFDD
 26195                           plusw2	equ	0xFDB
 26196                           fsr2h	equ	0xFDA
 26197                           fsr2l	equ	0xFD9
 26198                           status	equ	0xFD8
 26199                           
 26200 ;; *************** function __ic2_display_set_address *****************
 26201 ;; Defined at:
 26202 ;;		line 202 in file "i2c.c"
 26203 ;; Parameters:    Size  Location     Type
 26204 ;;  address         1    wreg     unsigned char 
 26205 ;; Auto vars:     Size  Location     Type
 26206 ;;  address         1   10[COMRAM] unsigned char 
 26207 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26208 ;; Return value:  Size  Location     Type
 26209 ;;                  1    wreg      void 
 26210 ;; Registers used:
 26211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26212 ;; Tracked objects:
 26213 ;;		On entry : 0/0
 26214 ;;		On exit  : 0/0
 26215 ;;		Unchanged: 0/0
 26216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26218 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26221 ;;Total ram usage:        3 bytes
 26222 ;; Hardware stack levels used:    1
 26223 ;; Hardware stack levels required when called:    2
 26224 ;; This function calls:
 26225 ;;		__i2c_write
 26226 ;;		_i2c_set_frequency
 26227 ;; This function is called by:
 26228 ;;		_i2c_display_cursor
 26229 ;; This function uses a non-reentrant model
 26230 ;;
 26231                           
 26232                           	psect	text134
 26233  006EF8                     __ptext134:
 26234                           	opt stack 0
 26235  006EF8                     __ic2_display_set_address:
 26236                           	opt stack 23
 26237                           
 26238                           ;incstack = 0
 26239                           ;__ic2_display_set_address@address stored from wreg
 26240  006EF8  6E0B               	movwf	__ic2_display_set_address@address,c
 26241                           
 26242                           ;i2c.c: 204: uint8_t data_array[2];;i2c.c: 205: data_array[0] = 0b00000000;
 26243  006EFA  0E00               	movlw	0
 26244  006EFC  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26245                           
 26246                           ;i2c.c: 206: data_array[1] = 0b10000000 | address;
 26247  006EFE  500B               	movf	__ic2_display_set_address@address,w,c
 26248  006F00  0980               	iorlw	128
 26249  006F02  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26250                           
 26251                           ;i2c.c: 209: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26252  006F04  0E02               	movlw	2
 26253  006F06  ECF0  F036         	call	_i2c_set_frequency
 26254                           
 26255                           ;i2c.c: 212: _i2c_write(0b01111000, &data_array[0], 2);
 26256  006F0A  0E0C               	movlw	low __ic2_display_set_address@data_array
 26257  006F0C  6E06               	movwf	__i2c_write@data,c
 26258  006F0E  0E00               	movlw	high __ic2_display_set_address@data_array
 26259  006F10  6E07               	movwf	__i2c_write@data+1,c
 26260  006F12  0E02               	movlw	2
 26261  006F14  6E08               	movwf	__i2c_write@length,c
 26262  006F16  0E78               	movlw	120
 26263  006F18  EC13  F034         	call	__i2c_write
 26264  006F1C  0012               	return		;funcret
 26265  006F1E                     __end_of__ic2_display_set_address:
 26266                           	opt stack 0
 26267                           tosu	equ	0xFFF
 26268                           tosh	equ	0xFFE
 26269                           tosl	equ	0xFFD
 26270                           pclath	equ	0xFFA
 26271                           tblptru	equ	0xFF8
 26272                           tblptrh	equ	0xFF7
 26273                           tblptrl	equ	0xFF6
 26274                           tablat	equ	0xFF5
 26275                           prodh	equ	0xFF4
 26276                           prodl	equ	0xFF3
 26277                           intcon	equ	0xFF2
 26278                           intcon2	equ	0xFF1
 26279                           intcon3	equ	0xFF0
 26280                           indf0	equ	0xFEF
 26281                           postinc0	equ	0xFEE
 26282                           fsr0h	equ	0xFEA
 26283                           fsr0l	equ	0xFE9
 26284                           wreg	equ	0xFE8
 26285                           indf1	equ	0xFE7
 26286                           postdec1	equ	0xFE5
 26287                           plusw1	equ	0xFE3
 26288                           fsr1h	equ	0xFE2
 26289                           fsr1l	equ	0xFE1
 26290                           indf2	equ	0xFDF
 26291                           postinc2	equ	0xFDE
 26292                           postdec2	equ	0xFDD
 26293                           plusw2	equ	0xFDB
 26294                           fsr2h	equ	0xFDA
 26295                           fsr2l	equ	0xFD9
 26296                           status	equ	0xFD8
 26297                           
 26298 ;; *************** function _display_prepare *****************
 26299 ;; Defined at:
 26300 ;;		line 272 in file "display.c"
 26301 ;; Parameters:    Size  Location     Type
 26302 ;;  mode            1    wreg     unsigned char 
 26303 ;; Auto vars:     Size  Location     Type
 26304 ;;  mode            1   34[COMRAM] unsigned char 
 26305 ;; Return value:  Size  Location     Type
 26306 ;;                  1    wreg      void 
 26307 ;; Registers used:
 26308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26309 ;; Tracked objects:
 26310 ;;		On entry : 0/0
 26311 ;;		On exit  : 0/0
 26312 ;;		Unchanged: 0/0
 26313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26317 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26318 ;;Total ram usage:        3 bytes
 26319 ;; Hardware stack levels used:    1
 26320 ;; Hardware stack levels required when called:    5
 26321 ;; This function calls:
 26322 ;;		__display_checked
 26323 ;;		__display_clear
 26324 ;;		__display_done
 26325 ;;		__display_failed
 26326 ;;		__display_found
 26327 ;;		__display_programming
 26328 ;;		__display_rebooting
 26329 ;;		__display_search
 26330 ;;		__display_start
 26331 ;;		__display_suspended
 26332 ;;		__display_verify
 26333 ;; This function is called by:
 26334 ;;		_main
 26335 ;;		_reboot
 26336 ;; This function uses a non-reentrant model
 26337 ;;
 26338                           
 26339                           	psect	text135
 26340  0047AA                     __ptext135:
 26341                           	opt stack 0
 26342  0047AA                     _display_prepare:
 26343                           	opt stack 22
 26344                           
 26345                           ;incstack = 0
 26346                           ;display_prepare@mode stored from wreg
 26347  0047AA  6E23               	movwf	display_prepare@mode,c
 26348                           
 26349                           ;display.c: 274: _display_clear();
 26350  0047AC  ECEF  F033         	call	__display_clear	;wreg free
 26351                           
 26352                           ;display.c: 276: switch(mode&0xF0)
 26353  0047B0  D01E               	goto	l1516
 26354  0047B2                     
 26355                           ;display.c: 279: _display_start();
 26356  0047B2  ECF1  F012         	call	__display_start	;wreg free
 26357                           
 26358                           ;display.c: 280: break;
 26359  0047B6  D04D               	goto	l1528
 26360  0047B8                     
 26361                           ;display.c: 283: _display_search();
 26362  0047B8  EC12  F019         	call	__display_search	;wreg free
 26363                           
 26364                           ;display.c: 284: break;
 26365  0047BC  D04A               	goto	l1528
 26366  0047BE                     
 26367                           ;display.c: 287: _display_found();
 26368  0047BE  EC15  F011         	call	__display_found	;wreg free
 26369                           
 26370                           ;display.c: 288: break;
 26371  0047C2  D047               	goto	l1528
 26372  0047C4                     
 26373                           ;display.c: 291: _display_verify();
 26374  0047C4  ECFF  F01A         	call	__display_verify	;wreg free
 26375                           
 26376                           ;display.c: 292: break;
 26377  0047C8  D044               	goto	l1528
 26378  0047CA                     
 26379                           ;display.c: 295: _display_checked();
 26380  0047CA  EC8D  F015         	call	__display_checked	;wreg free
 26381                           
 26382                           ;display.c: 296: break;
 26383  0047CE  D041               	goto	l1528
 26384  0047D0                     
 26385                           ;display.c: 299: _display_failed();
 26386  0047D0  EC96  F007         	call	__display_failed	;wreg free
 26387                           
 26388                           ;display.c: 300: break;
 26389  0047D4  D03E               	goto	l1528
 26390  0047D6                     
 26391                           ;display.c: 303: _display_programming();
 26392  0047D6  ECDD  F013         	call	__display_programming	;wreg free
 26393                           
 26394                           ;display.c: 304: break;
 26395  0047DA  D03B               	goto	l1528
 26396  0047DC                     
 26397                           ;display.c: 307: _display_done();
 26398  0047DC  EC04  F017         	call	__display_done	;wreg free
 26399                           
 26400                           ;display.c: 308: break;
 26401  0047E0  D038               	goto	l1528
 26402  0047E2                     
 26403                           ;display.c: 311: _display_rebooting();
 26404  0047E2  ECA6  F032         	call	__display_rebooting	;wreg free
 26405                           
 26406                           ;display.c: 312: break;
 26407  0047E6  D035               	goto	l1528
 26408  0047E8                     
 26409                           ;display.c: 315: _display_suspended();
 26410  0047E8  EC69  F018         	call	__display_suspended	;wreg free
 26411                           
 26412                           ;display.c: 317: }
 26413                           
 26414                           ;display.c: 316: break;
 26415  0047EC  D032               	goto	l1528
 26416  0047EE                     l1516:
 26417  0047EE  5023               	movf	display_prepare@mode,w,c
 26418  0047F0  0BF0               	andlw	240
 26419  0047F2  6E21               	movwf	??_display_prepare& (0+255),c
 26420  0047F4  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 26421                           
 26422                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26423                           ; Switch size 1, requested type "space"
 26424                           ; Number of cases is 1, Range of values is 0 to 0
 26425                           ; switch strategies available:
 26426                           ; Name         Instructions Cycles
 26427                           ; simple_byte            4     3 (average)
 26428                           ;	Chosen strategy is simple_byte
 26429  0047F6  5022               	movf	??_display_prepare+1,w,c
 26430  0047F8  0A00               	xorlw	0	; case 0
 26431  0047FA  A4D8               	btfss	status,2,c
 26432  0047FC  D02A               	goto	l1528
 26433                           
 26434                           ; Switch size 1, requested type "space"
 26435                           ; Number of cases is 10, Range of values is 0 to 144
 26436                           ; switch strategies available:
 26437                           ; Name         Instructions Cycles
 26438                           ; simple_byte           31    16 (average)
 26439                           ;	Chosen strategy is simple_byte
 26440  0047FE  5021               	movf	??_display_prepare,w,c
 26441  004800  0A00               	xorlw	0	; case 0
 26442  004802  B4D8               	btfsc	status,2,c
 26443  004804  D7D6               	goto	l1517
 26444  004806  0A10               	xorlw	16	; case 16
 26445  004808  B4D8               	btfsc	status,2,c
 26446  00480A  D7D6               	goto	l1519
 26447  00480C  0A30               	xorlw	48	; case 32
 26448  00480E  B4D8               	btfsc	status,2,c
 26449  004810  D7D6               	goto	l1520
 26450  004812  0A10               	xorlw	16	; case 48
 26451  004814  B4D8               	btfsc	status,2,c
 26452  004816  D7D6               	goto	l1521
 26453  004818  0A70               	xorlw	112	; case 64
 26454  00481A  B4D8               	btfsc	status,2,c
 26455  00481C  D7D6               	goto	l1522
 26456  00481E  0A10               	xorlw	16	; case 80
 26457  004820  B4D8               	btfsc	status,2,c
 26458  004822  D7D6               	goto	l1523
 26459  004824  0A30               	xorlw	48	; case 96
 26460  004826  B4D8               	btfsc	status,2,c
 26461  004828  D7D6               	goto	l1524
 26462  00482A  0A10               	xorlw	16	; case 112
 26463  00482C  B4D8               	btfsc	status,2,c
 26464  00482E  D7D6               	goto	l1525
 26465  004830  0AF0               	xorlw	240	; case 128
 26466  004832  B4D8               	btfsc	status,2,c
 26467  004834  D7D6               	goto	l1526
 26468  004836  0A10               	xorlw	16	; case 144
 26469  004838  B4D8               	btfsc	status,2,c
 26470  00483A  D7D6               	goto	l1527
 26471                           
 26472                           ;display.c: 320: switch((os.timeSlot>>5)&0b11)
 26473  00483C  D00A               	goto	l1528
 26474  00483E                     
 26475                           ;display.c: 323: display_content[0][17] = '.';
 26476  00483E  0E2E               	movlw	46
 26477  004840  0101               	movlb	1	; () banked
 26478  004842  6F89               	movwf	(_display_content+17)& (0+255),b
 26479  004844                     l1530:
 26480                           
 26481                           ;display.c: 326: display_content[0][16] = '.';
 26482  004844  0E2E               	movlw	46
 26483  004846  0101               	movlb	1	; () banked
 26484  004848  6F88               	movwf	(_display_content+16)& (0+255),b
 26485  00484A                     l1531:
 26486                           
 26487                           ;display.c: 329: display_content[0][15] = '.';
 26488  00484A  0E2E               	movlw	46
 26489  00484C  0101               	movlb	1	; () banked
 26490  00484E  6F87               	movwf	(_display_content+15)& (0+255),b
 26491                           
 26492                           ;display.c: 331: }
 26493  004850  D015               	goto	l1532
 26494  004852                     l1528:
 26495                           
 26496                           ; BSR set to: 1
 26497  004852  0100               	movlb	0	; () banked
 26498  004854  3962               	swapf	(_os+2)& (0+255),w,b
 26499  004856  42E8               	rrncf	wreg,f,c
 26500  004858  0B07               	andlw	7
 26501  00485A  0B03               	andlw	3
 26502  00485C  6E21               	movwf	??_display_prepare& (0+255),c
 26503  00485E  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 26504                           
 26505                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26506                           ; Switch size 1, requested type "space"
 26507                           ; Number of cases is 1, Range of values is 0 to 0
 26508                           ; switch strategies available:
 26509                           ; Name         Instructions Cycles
 26510                           ; simple_byte            4     3 (average)
 26511                           ;	Chosen strategy is simple_byte
 26512  004860  5022               	movf	??_display_prepare+1,w,c
 26513  004862  0A00               	xorlw	0	; case 0
 26514  004864  A4D8               	btfss	status,2,c
 26515  004866  D00A               	goto	l1532
 26516                           
 26517                           ; BSR set to: 0
 26518                           ; Switch size 1, requested type "space"
 26519                           ; Number of cases is 3, Range of values is 1 to 3
 26520                           ; switch strategies available:
 26521                           ; Name         Instructions Cycles
 26522                           ; simple_byte           10     6 (average)
 26523                           ;	Chosen strategy is simple_byte
 26524  004868  5021               	movf	??_display_prepare,w,c
 26525  00486A  0A01               	xorlw	1	; case 1
 26526  00486C  B4D8               	btfsc	status,2,c
 26527  00486E  D7ED               	goto	l1531
 26528  004870  0A03               	xorlw	3	; case 2
 26529  004872  B4D8               	btfsc	status,2,c
 26530  004874  D7E7               	goto	l1530
 26531  004876  0A01               	xorlw	1	; case 3
 26532  004878  B4D8               	btfsc	status,2,c
 26533  00487A  D7E1               	goto	l1529
 26534  00487C                     l1532:
 26535                           
 26536                           ;display.c: 335: if(INTCONbits.GIE)
 26537  00487C  AEF2               	btfss	intcon,7,c	;volatile
 26538  00487E  0012               	return	
 26539                           
 26540                           ;display.c: 336: {;display.c: 337: display_content[0][18] = 'I';
 26541  004880  0E49               	movlw	73
 26542  004882  0101               	movlb	1	; () banked
 26543  004884  6F8A               	movwf	(_display_content+18)& (0+255),b
 26544  004886  0012               	return	
 26545  004888                     __end_of_display_prepare:
 26546                           	opt stack 0
 26547                           tosu	equ	0xFFF
 26548                           tosh	equ	0xFFE
 26549                           tosl	equ	0xFFD
 26550                           pclath	equ	0xFFA
 26551                           tblptru	equ	0xFF8
 26552                           tblptrh	equ	0xFF7
 26553                           tblptrl	equ	0xFF6
 26554                           tablat	equ	0xFF5
 26555                           prodh	equ	0xFF4
 26556                           prodl	equ	0xFF3
 26557                           intcon	equ	0xFF2
 26558                           intcon2	equ	0xFF1
 26559                           intcon3	equ	0xFF0
 26560                           indf0	equ	0xFEF
 26561                           postinc0	equ	0xFEE
 26562                           fsr0h	equ	0xFEA
 26563                           fsr0l	equ	0xFE9
 26564                           wreg	equ	0xFE8
 26565                           indf1	equ	0xFE7
 26566                           postdec1	equ	0xFE5
 26567                           plusw1	equ	0xFE3
 26568                           fsr1h	equ	0xFE2
 26569                           fsr1l	equ	0xFE1
 26570                           indf2	equ	0xFDF
 26571                           postinc2	equ	0xFDE
 26572                           postdec2	equ	0xFDD
 26573                           plusw2	equ	0xFDB
 26574                           fsr2h	equ	0xFDA
 26575                           fsr2l	equ	0xFD9
 26576                           status	equ	0xFD8
 26577                           
 26578 ;; *************** function __display_verify *****************
 26579 ;; Defined at:
 26580 ;;		line 407 in file "display.c"
 26581 ;; Parameters:    Size  Location     Type
 26582 ;;		None
 26583 ;; Auto vars:     Size  Location     Type
 26584 ;;  cntr            1   30[COMRAM] unsigned char 
 26585 ;;  start           1    0        unsigned char 
 26586 ;; Return value:  Size  Location     Type
 26587 ;;                  1    wreg      void 
 26588 ;; Registers used:
 26589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26590 ;; Tracked objects:
 26591 ;;		On entry : 0/0
 26592 ;;		On exit  : 0/0
 26593 ;;		Unchanged: 0/0
 26594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26597 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26598 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26599 ;;Total ram usage:        3 bytes
 26600 ;; Hardware stack levels used:    1
 26601 ;; Hardware stack levels required when called:    4
 26602 ;; This function calls:
 26603 ;;		__display_itoa_u16
 26604 ;;		_bootloader_get_entries
 26605 ;; This function is called by:
 26606 ;;		_display_prepare
 26607 ;; This function uses a non-reentrant model
 26608 ;;
 26609                           
 26610                           	psect	text136
 26611  0035FE                     __ptext136:
 26612                           	opt stack 0
 26613  0035FE                     __display_verify:
 26614                           	opt stack 22
 26615                           
 26616                           ;display.c: 409: uint8_t cntr;;display.c: 410: uint8_t start;;display.c: 411: cntr = 0;
 26617                           
 26618                           ;incstack = 0
 26619  0035FE  0E00               	movlw	0
 26620  003600  6E1F               	movwf	__display_verify@cntr,c
 26621                           
 26622                           ;display.c: 412: while(verify_line1[cntr])
 26623  003602  D017               	goto	l1585
 26624  003604                     
 26625                           ;display.c: 413: display_content[0][cntr] = verify_line1[cntr++];
 26626  003604  501F               	movf	__display_verify@cntr,w,c
 26627  003606  0D01               	mullw	1
 26628  003608  0EB8               	movlw	low _verify_line1
 26629  00360A  24F3               	addwf	prodl,w,c
 26630  00360C  6EF6               	movwf	tblptrl,c
 26631  00360E  0E8D               	movlw	high _verify_line1
 26632  003610  20F4               	addwfc	prodh,w,c
 26633  003612  6EF7               	movwf	tblptrh,c
 26634  003614                     	if	1	;There are 3 active tblptr bytes
 26635  003614  6AF8               	clrf	tblptru,c
 26636  003616  0E00               	movlw	low (__mediumconst shr (0+16))
 26637  003618  22F8               	addwfc	tblptru,f,c
 26638  00361A                     	endif
 26639  00361A  501F               	movf	__display_verify@cntr,w,c
 26640  00361C  0D01               	mullw	1
 26641  00361E  0E78               	movlw	low _display_content
 26642  003620  24F3               	addwf	prodl,w,c
 26643  003622  6ED9               	movwf	fsr2l,c
 26644  003624  0E01               	movlw	high _display_content
 26645  003626  20F4               	addwfc	prodh,w,c
 26646  003628  6EDA               	movwf	fsr2h,c
 26647  00362A  0008               	tblrd		*
 26648  00362C  CFF5 FFDF          	movff	tablat,indf2
 26649  003630  2A1F               	incf	__display_verify@cntr,f,c
 26650  003632                     l1585:
 26651  003632  501F               	movf	__display_verify@cntr,w,c
 26652  003634  0D01               	mullw	1
 26653  003636  0EB8               	movlw	low _verify_line1
 26654  003638  24F3               	addwf	prodl,w,c
 26655  00363A  6EF6               	movwf	tblptrl,c
 26656  00363C  0E8D               	movlw	high _verify_line1
 26657  00363E  20F4               	addwfc	prodh,w,c
 26658  003640  6EF7               	movwf	tblptrh,c
 26659  003642                     	if	1	;There are 3 active tblptr bytes
 26660  003642  6AF8               	clrf	tblptru,c
 26661  003644  0E00               	movlw	low (__mediumconst shr (0+16))
 26662  003646  22F8               	addwfc	tblptru,f,c
 26663  003648                     	endif
 26664  003648  0008               	tblrd		*
 26665  00364A  50F5               	movf	tablat,w,c
 26666  00364C  0900               	iorlw	0
 26667  00364E  A4D8               	btfss	status,2,c
 26668  003650  D7D9               	goto	l1586
 26669                           
 26670                           ;display.c: 414: cntr = 0;
 26671  003652  0E00               	movlw	0
 26672  003654  6E1F               	movwf	__display_verify@cntr,c
 26673                           
 26674                           ;display.c: 415: while(verify_line2[cntr])
 26675  003656  D017               	goto	l1588
 26676  003658                     
 26677                           ;display.c: 416: display_content[1][cntr] = verify_line2[cntr++];
 26678  003658  501F               	movf	__display_verify@cntr,w,c
 26679  00365A  0D01               	mullw	1
 26680  00365C  0E40               	movlw	low _verify_line2
 26681  00365E  24F3               	addwf	prodl,w,c
 26682  003660  6EF6               	movwf	tblptrl,c
 26683  003662  0E8E               	movlw	high _verify_line2
 26684  003664  20F4               	addwfc	prodh,w,c
 26685  003666  6EF7               	movwf	tblptrh,c
 26686  003668                     	if	1	;There are 3 active tblptr bytes
 26687  003668  6AF8               	clrf	tblptru,c
 26688  00366A  0E00               	movlw	low (__mediumconst shr (0+16))
 26689  00366C  22F8               	addwfc	tblptru,f,c
 26690  00366E                     	endif
 26691  00366E  501F               	movf	__display_verify@cntr,w,c
 26692  003670  0D01               	mullw	1
 26693  003672  0E8C               	movlw	low (_display_content+20)
 26694  003674  24F3               	addwf	prodl,w,c
 26695  003676  6ED9               	movwf	fsr2l,c
 26696  003678  0E01               	movlw	high (_display_content+20)
 26697  00367A  20F4               	addwfc	prodh,w,c
 26698  00367C  6EDA               	movwf	fsr2h,c
 26699  00367E  0008               	tblrd		*
 26700  003680  CFF5 FFDF          	movff	tablat,indf2
 26701  003684  2A1F               	incf	__display_verify@cntr,f,c
 26702  003686                     l1588:
 26703  003686  501F               	movf	__display_verify@cntr,w,c
 26704  003688  0D01               	mullw	1
 26705  00368A  0E40               	movlw	low _verify_line2
 26706  00368C  24F3               	addwf	prodl,w,c
 26707  00368E  6EF6               	movwf	tblptrl,c
 26708  003690  0E8E               	movlw	high _verify_line2
 26709  003692  20F4               	addwfc	prodh,w,c
 26710  003694  6EF7               	movwf	tblptrh,c
 26711  003696                     	if	1	;There are 3 active tblptr bytes
 26712  003696  6AF8               	clrf	tblptru,c
 26713  003698  0E00               	movlw	low (__mediumconst shr (0+16))
 26714  00369A  22F8               	addwfc	tblptru,f,c
 26715  00369C                     	endif
 26716  00369C  0008               	tblrd		*
 26717  00369E  50F5               	movf	tablat,w,c
 26718  0036A0  0900               	iorlw	0
 26719  0036A2  A4D8               	btfss	status,2,c
 26720  0036A4  D7D9               	goto	l1589
 26721                           
 26722                           ;display.c: 417: cntr = 0;
 26723  0036A6  0E00               	movlw	0
 26724  0036A8  6E1F               	movwf	__display_verify@cntr,c
 26725                           
 26726                           ;display.c: 418: while(verify_line3[cntr])
 26727  0036AA  D017               	goto	l1591
 26728  0036AC                     
 26729                           ;display.c: 419: display_content[2][cntr] = verify_line3[cntr++];
 26730  0036AC  501F               	movf	__display_verify@cntr,w,c
 26731  0036AE  0D01               	mullw	1
 26732  0036B0  0E88               	movlw	low _verify_line3
 26733  0036B2  24F3               	addwf	prodl,w,c
 26734  0036B4  6EF6               	movwf	tblptrl,c
 26735  0036B6  0E8E               	movlw	high _verify_line3
 26736  0036B8  20F4               	addwfc	prodh,w,c
 26737  0036BA  6EF7               	movwf	tblptrh,c
 26738  0036BC                     	if	1	;There are 3 active tblptr bytes
 26739  0036BC  6AF8               	clrf	tblptru,c
 26740  0036BE  0E00               	movlw	low (__mediumconst shr (0+16))
 26741  0036C0  22F8               	addwfc	tblptru,f,c
 26742  0036C2                     	endif
 26743  0036C2  501F               	movf	__display_verify@cntr,w,c
 26744  0036C4  0D01               	mullw	1
 26745  0036C6  0EA0               	movlw	low (_display_content+40)
 26746  0036C8  24F3               	addwf	prodl,w,c
 26747  0036CA  6ED9               	movwf	fsr2l,c
 26748  0036CC  0E01               	movlw	high (_display_content+40)
 26749  0036CE  20F4               	addwfc	prodh,w,c
 26750  0036D0  6EDA               	movwf	fsr2h,c
 26751  0036D2  0008               	tblrd		*
 26752  0036D4  CFF5 FFDF          	movff	tablat,indf2
 26753  0036D8  2A1F               	incf	__display_verify@cntr,f,c
 26754  0036DA                     l1591:
 26755  0036DA  501F               	movf	__display_verify@cntr,w,c
 26756  0036DC  0D01               	mullw	1
 26757  0036DE  0E88               	movlw	low _verify_line3
 26758  0036E0  24F3               	addwf	prodl,w,c
 26759  0036E2  6EF6               	movwf	tblptrl,c
 26760  0036E4  0E8E               	movlw	high _verify_line3
 26761  0036E6  20F4               	addwfc	prodh,w,c
 26762  0036E8  6EF7               	movwf	tblptrh,c
 26763  0036EA                     	if	1	;There are 3 active tblptr bytes
 26764  0036EA  6AF8               	clrf	tblptru,c
 26765  0036EC  0E00               	movlw	low (__mediumconst shr (0+16))
 26766  0036EE  22F8               	addwfc	tblptru,f,c
 26767  0036F0                     	endif
 26768  0036F0  0008               	tblrd		*
 26769  0036F2  50F5               	movf	tablat,w,c
 26770  0036F4  0900               	iorlw	0
 26771  0036F6  A4D8               	btfss	status,2,c
 26772  0036F8  D7D9               	goto	l1592
 26773                           
 26774                           ;display.c: 420: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 26775  0036FA  ECFE  F038         	call	_bootloader_get_entries	;wreg free
 26776  0036FE  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 26777  003702  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 26778  003706  501F               	movf	__display_verify@cntr,w,c
 26779  003708  6E1D               	movwf	??__display_verify& (0+255),c
 26780  00370A  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 26781  00370C  0E01               	movlw	1
 26782  00370E  261D               	addwf	??__display_verify,f,c
 26783  003710  0E00               	movlw	0
 26784  003712  221E               	addwfc	??__display_verify+1,f,c
 26785  003714  0EA0               	movlw	low (_display_content+40)
 26786  003716  241D               	addwf	??__display_verify,w,c
 26787  003718  6E1B               	movwf	__display_itoa_u16@text,c
 26788  00371A  0E01               	movlw	high (_display_content+40)
 26789  00371C  201E               	addwfc	??__display_verify+1,w,c
 26790  00371E  6E1C               	movwf	__display_itoa_u16@text+1,c
 26791  003720  ECCD  F027         	call	__display_itoa_u16	;wreg free
 26792  003724  0012               	return		;funcret
 26793  003726                     __end_of__display_verify:
 26794                           	opt stack 0
 26795                           tosu	equ	0xFFF
 26796                           tosh	equ	0xFFE
 26797                           tosl	equ	0xFFD
 26798                           pclath	equ	0xFFA
 26799                           tblptru	equ	0xFF8
 26800                           tblptrh	equ	0xFF7
 26801                           tblptrl	equ	0xFF6
 26802                           tablat	equ	0xFF5
 26803                           prodh	equ	0xFF4
 26804                           prodl	equ	0xFF3
 26805                           intcon	equ	0xFF2
 26806                           intcon2	equ	0xFF1
 26807                           intcon3	equ	0xFF0
 26808                           indf0	equ	0xFEF
 26809                           postinc0	equ	0xFEE
 26810                           fsr0h	equ	0xFEA
 26811                           fsr0l	equ	0xFE9
 26812                           wreg	equ	0xFE8
 26813                           indf1	equ	0xFE7
 26814                           postdec1	equ	0xFE5
 26815                           plusw1	equ	0xFE3
 26816                           fsr1h	equ	0xFE2
 26817                           fsr1l	equ	0xFE1
 26818                           indf2	equ	0xFDF
 26819                           postinc2	equ	0xFDE
 26820                           postdec2	equ	0xFDD
 26821                           plusw2	equ	0xFDB
 26822                           fsr2h	equ	0xFDA
 26823                           fsr2l	equ	0xFD9
 26824                           status	equ	0xFD8
 26825                           
 26826 ;; *************** function __display_suspended *****************
 26827 ;; Defined at:
 26828 ;;		line 545 in file "display.c"
 26829 ;; Parameters:    Size  Location     Type
 26830 ;;		None
 26831 ;; Auto vars:     Size  Location     Type
 26832 ;;  cntr            1    0[COMRAM] unsigned char 
 26833 ;; Return value:  Size  Location     Type
 26834 ;;                  1    wreg      void 
 26835 ;; Registers used:
 26836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26837 ;; Tracked objects:
 26838 ;;		On entry : 0/0
 26839 ;;		On exit  : 0/0
 26840 ;;		Unchanged: 0/0
 26841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26846 ;;Total ram usage:        1 bytes
 26847 ;; Hardware stack levels used:    1
 26848 ;; This function calls:
 26849 ;;		Nothing
 26850 ;; This function is called by:
 26851 ;;		_display_prepare
 26852 ;; This function uses a non-reentrant model
 26853 ;;
 26854                           
 26855                           	psect	text137
 26856  0030D2                     __ptext137:
 26857                           	opt stack 0
 26858  0030D2                     __display_suspended:
 26859                           	opt stack 26
 26860                           
 26861                           ;display.c: 547: uint8_t cntr;;display.c: 550: cntr = 0;
 26862                           
 26863                           ;incstack = 0
 26864  0030D2  0E00               	movlw	0
 26865  0030D4  6E01               	movwf	__display_suspended@cntr,c
 26866                           
 26867                           ;display.c: 551: while(suspended_line1[cntr])
 26868  0030D6  D017               	goto	l1682
 26869  0030D8                     
 26870                           ;display.c: 552: display_content[0][cntr] = suspended_line1[cntr++];
 26871  0030D8  5001               	movf	__display_suspended@cntr,w,c
 26872  0030DA  0D01               	mullw	1
 26873  0030DC  0E38               	movlw	low _suspended_line1
 26874  0030DE  24F3               	addwf	prodl,w,c
 26875  0030E0  6EF6               	movwf	tblptrl,c
 26876  0030E2  0E8D               	movlw	high _suspended_line1
 26877  0030E4  20F4               	addwfc	prodh,w,c
 26878  0030E6  6EF7               	movwf	tblptrh,c
 26879  0030E8                     	if	1	;There are 3 active tblptr bytes
 26880  0030E8  6AF8               	clrf	tblptru,c
 26881  0030EA  0E00               	movlw	low (__mediumconst shr (0+16))
 26882  0030EC  22F8               	addwfc	tblptru,f,c
 26883  0030EE                     	endif
 26884  0030EE  5001               	movf	__display_suspended@cntr,w,c
 26885  0030F0  0D01               	mullw	1
 26886  0030F2  0E78               	movlw	low _display_content
 26887  0030F4  24F3               	addwf	prodl,w,c
 26888  0030F6  6ED9               	movwf	fsr2l,c
 26889  0030F8  0E01               	movlw	high _display_content
 26890  0030FA  20F4               	addwfc	prodh,w,c
 26891  0030FC  6EDA               	movwf	fsr2h,c
 26892  0030FE  0008               	tblrd		*
 26893  003100  CFF5 FFDF          	movff	tablat,indf2
 26894  003104  2A01               	incf	__display_suspended@cntr,f,c
 26895  003106                     l1682:
 26896  003106  5001               	movf	__display_suspended@cntr,w,c
 26897  003108  0D01               	mullw	1
 26898  00310A  0E38               	movlw	low _suspended_line1
 26899  00310C  24F3               	addwf	prodl,w,c
 26900  00310E  6EF6               	movwf	tblptrl,c
 26901  003110  0E8D               	movlw	high _suspended_line1
 26902  003112  20F4               	addwfc	prodh,w,c
 26903  003114  6EF7               	movwf	tblptrh,c
 26904  003116                     	if	1	;There are 3 active tblptr bytes
 26905  003116  6AF8               	clrf	tblptru,c
 26906  003118  0E00               	movlw	low (__mediumconst shr (0+16))
 26907  00311A  22F8               	addwfc	tblptru,f,c
 26908  00311C                     	endif
 26909  00311C  0008               	tblrd		*
 26910  00311E  50F5               	movf	tablat,w,c
 26911  003120  0900               	iorlw	0
 26912  003122  A4D8               	btfss	status,2,c
 26913  003124  D7D9               	goto	l1683
 26914                           
 26915                           ;display.c: 554: cntr = 0;
 26916  003126  0E00               	movlw	0
 26917  003128  6E01               	movwf	__display_suspended@cntr,c
 26918                           
 26919                           ;display.c: 555: while(suspended_line2[cntr])
 26920  00312A  D017               	goto	l1685
 26921  00312C                     
 26922                           ;display.c: 556: display_content[1][cntr] = suspended_line2[cntr++];
 26923  00312C  5001               	movf	__display_suspended@cntr,w,c
 26924  00312E  0D01               	mullw	1
 26925  003130  0E4D               	movlw	low _suspended_line2
 26926  003132  24F3               	addwf	prodl,w,c
 26927  003134  6EF6               	movwf	tblptrl,c
 26928  003136  0E8E               	movlw	high _suspended_line2
 26929  003138  20F4               	addwfc	prodh,w,c
 26930  00313A  6EF7               	movwf	tblptrh,c
 26931  00313C                     	if	1	;There are 3 active tblptr bytes
 26932  00313C  6AF8               	clrf	tblptru,c
 26933  00313E  0E00               	movlw	low (__mediumconst shr (0+16))
 26934  003140  22F8               	addwfc	tblptru,f,c
 26935  003142                     	endif
 26936  003142  5001               	movf	__display_suspended@cntr,w,c
 26937  003144  0D01               	mullw	1
 26938  003146  0E8C               	movlw	low (_display_content+20)
 26939  003148  24F3               	addwf	prodl,w,c
 26940  00314A  6ED9               	movwf	fsr2l,c
 26941  00314C  0E01               	movlw	high (_display_content+20)
 26942  00314E  20F4               	addwfc	prodh,w,c
 26943  003150  6EDA               	movwf	fsr2h,c
 26944  003152  0008               	tblrd		*
 26945  003154  CFF5 FFDF          	movff	tablat,indf2
 26946  003158  2A01               	incf	__display_suspended@cntr,f,c
 26947  00315A                     l1685:
 26948  00315A  5001               	movf	__display_suspended@cntr,w,c
 26949  00315C  0D01               	mullw	1
 26950  00315E  0E4D               	movlw	low _suspended_line2
 26951  003160  24F3               	addwf	prodl,w,c
 26952  003162  6EF6               	movwf	tblptrl,c
 26953  003164  0E8E               	movlw	high _suspended_line2
 26954  003166  20F4               	addwfc	prodh,w,c
 26955  003168  6EF7               	movwf	tblptrh,c
 26956  00316A                     	if	1	;There are 3 active tblptr bytes
 26957  00316A  6AF8               	clrf	tblptru,c
 26958  00316C  0E00               	movlw	low (__mediumconst shr (0+16))
 26959  00316E  22F8               	addwfc	tblptru,f,c
 26960  003170                     	endif
 26961  003170  0008               	tblrd		*
 26962  003172  50F5               	movf	tablat,w,c
 26963  003174  0900               	iorlw	0
 26964  003176  A4D8               	btfss	status,2,c
 26965  003178  D7D9               	goto	l1686
 26966                           
 26967                           ;display.c: 558: cntr = 0;
 26968  00317A  0E00               	movlw	0
 26969  00317C  6E01               	movwf	__display_suspended@cntr,c
 26970                           
 26971                           ;display.c: 559: while(suspended_line3[cntr])
 26972  00317E  D017               	goto	l1688
 26973  003180                     
 26974                           ;display.c: 560: display_content[2][cntr] = suspended_line3[cntr++];
 26975  003180  5001               	movf	__display_suspended@cntr,w,c
 26976  003182  0D01               	mullw	1
 26977  003184  0EA5               	movlw	low _suspended_line3
 26978  003186  24F3               	addwf	prodl,w,c
 26979  003188  6EF6               	movwf	tblptrl,c
 26980  00318A  0E8E               	movlw	high _suspended_line3
 26981  00318C  20F4               	addwfc	prodh,w,c
 26982  00318E  6EF7               	movwf	tblptrh,c
 26983  003190                     	if	1	;There are 3 active tblptr bytes
 26984  003190  6AF8               	clrf	tblptru,c
 26985  003192  0E00               	movlw	low (__mediumconst shr (0+16))
 26986  003194  22F8               	addwfc	tblptru,f,c
 26987  003196                     	endif
 26988  003196  5001               	movf	__display_suspended@cntr,w,c
 26989  003198  0D01               	mullw	1
 26990  00319A  0EA0               	movlw	low (_display_content+40)
 26991  00319C  24F3               	addwf	prodl,w,c
 26992  00319E  6ED9               	movwf	fsr2l,c
 26993  0031A0  0E01               	movlw	high (_display_content+40)
 26994  0031A2  20F4               	addwfc	prodh,w,c
 26995  0031A4  6EDA               	movwf	fsr2h,c
 26996  0031A6  0008               	tblrd		*
 26997  0031A8  CFF5 FFDF          	movff	tablat,indf2
 26998  0031AC  2A01               	incf	__display_suspended@cntr,f,c
 26999  0031AE                     l1688:
 27000  0031AE  5001               	movf	__display_suspended@cntr,w,c
 27001  0031B0  0D01               	mullw	1
 27002  0031B2  0EA5               	movlw	low _suspended_line3
 27003  0031B4  24F3               	addwf	prodl,w,c
 27004  0031B6  6EF6               	movwf	tblptrl,c
 27005  0031B8  0E8E               	movlw	high _suspended_line3
 27006  0031BA  20F4               	addwfc	prodh,w,c
 27007  0031BC  6EF7               	movwf	tblptrh,c
 27008  0031BE                     	if	1	;There are 3 active tblptr bytes
 27009  0031BE  6AF8               	clrf	tblptru,c
 27010  0031C0  0E00               	movlw	low (__mediumconst shr (0+16))
 27011  0031C2  22F8               	addwfc	tblptru,f,c
 27012  0031C4                     	endif
 27013  0031C4  0008               	tblrd		*
 27014  0031C6  50F5               	movf	tablat,w,c
 27015  0031C8  0900               	iorlw	0
 27016  0031CA  A4D8               	btfss	status,2,c
 27017  0031CC  D7D9               	goto	l1689
 27018                           
 27019                           ;display.c: 562: cntr = 0;
 27020  0031CE  0E00               	movlw	0
 27021  0031D0  6E01               	movwf	__display_suspended@cntr,c
 27022                           
 27023                           ;display.c: 563: while(suspended_line4[cntr])
 27024  0031D2  D017               	goto	l1691
 27025  0031D4                     
 27026                           ;display.c: 564: display_content[3][cntr] = suspended_line4[cntr++];
 27027  0031D4  5001               	movf	__display_suspended@cntr,w,c
 27028  0031D6  0D01               	mullw	1
 27029  0031D8  0E28               	movlw	low _suspended_line4
 27030  0031DA  24F3               	addwf	prodl,w,c
 27031  0031DC  6EF6               	movwf	tblptrl,c
 27032  0031DE  0E8D               	movlw	high _suspended_line4
 27033  0031E0  20F4               	addwfc	prodh,w,c
 27034  0031E2  6EF7               	movwf	tblptrh,c
 27035  0031E4                     	if	1	;There are 3 active tblptr bytes
 27036  0031E4  6AF8               	clrf	tblptru,c
 27037  0031E6  0E00               	movlw	low (__mediumconst shr (0+16))
 27038  0031E8  22F8               	addwfc	tblptru,f,c
 27039  0031EA                     	endif
 27040  0031EA  5001               	movf	__display_suspended@cntr,w,c
 27041  0031EC  0D01               	mullw	1
 27042  0031EE  0EB4               	movlw	low (_display_content+60)
 27043  0031F0  24F3               	addwf	prodl,w,c
 27044  0031F2  6ED9               	movwf	fsr2l,c
 27045  0031F4  0E01               	movlw	high (_display_content+60)
 27046  0031F6  20F4               	addwfc	prodh,w,c
 27047  0031F8  6EDA               	movwf	fsr2h,c
 27048  0031FA  0008               	tblrd		*
 27049  0031FC  CFF5 FFDF          	movff	tablat,indf2
 27050  003200  2A01               	incf	__display_suspended@cntr,f,c
 27051  003202                     l1691:
 27052  003202  5001               	movf	__display_suspended@cntr,w,c
 27053  003204  0D01               	mullw	1
 27054  003206  0E28               	movlw	low _suspended_line4
 27055  003208  24F3               	addwf	prodl,w,c
 27056  00320A  6EF6               	movwf	tblptrl,c
 27057  00320C  0E8D               	movlw	high _suspended_line4
 27058  00320E  20F4               	addwfc	prodh,w,c
 27059  003210  6EF7               	movwf	tblptrh,c
 27060  003212                     	if	1	;There are 3 active tblptr bytes
 27061  003212  6AF8               	clrf	tblptru,c
 27062  003214  0E00               	movlw	low (__mediumconst shr (0+16))
 27063  003216  22F8               	addwfc	tblptru,f,c
 27064  003218                     	endif
 27065  003218  0008               	tblrd		*
 27066  00321A  50F5               	movf	tablat,w,c
 27067  00321C  0900               	iorlw	0
 27068  00321E  B4D8               	btfsc	status,2,c
 27069  003220  0012               	return	
 27070  003222  D7D8               	goto	l1692
 27071  003224                     __end_of__display_suspended:
 27072                           	opt stack 0
 27073                           tosu	equ	0xFFF
 27074                           tosh	equ	0xFFE
 27075                           tosl	equ	0xFFD
 27076                           pclath	equ	0xFFA
 27077                           tblptru	equ	0xFF8
 27078                           tblptrh	equ	0xFF7
 27079                           tblptrl	equ	0xFF6
 27080                           tablat	equ	0xFF5
 27081                           prodh	equ	0xFF4
 27082                           prodl	equ	0xFF3
 27083                           intcon	equ	0xFF2
 27084                           intcon2	equ	0xFF1
 27085                           intcon3	equ	0xFF0
 27086                           indf0	equ	0xFEF
 27087                           postinc0	equ	0xFEE
 27088                           fsr0h	equ	0xFEA
 27089                           fsr0l	equ	0xFE9
 27090                           wreg	equ	0xFE8
 27091                           indf1	equ	0xFE7
 27092                           postdec1	equ	0xFE5
 27093                           plusw1	equ	0xFE3
 27094                           fsr1h	equ	0xFE2
 27095                           fsr1l	equ	0xFE1
 27096                           indf2	equ	0xFDF
 27097                           postinc2	equ	0xFDE
 27098                           postdec2	equ	0xFDD
 27099                           plusw2	equ	0xFDB
 27100                           fsr2h	equ	0xFDA
 27101                           fsr2l	equ	0xFD9
 27102                           status	equ	0xFD8
 27103                           
 27104 ;; *************** function __display_start *****************
 27105 ;; Defined at:
 27106 ;;		line 341 in file "display.c"
 27107 ;; Parameters:    Size  Location     Type
 27108 ;;		None
 27109 ;; Auto vars:     Size  Location     Type
 27110 ;;  cntr            1   28[COMRAM] unsigned char 
 27111 ;; Return value:  Size  Location     Type
 27112 ;;                  1    wreg      void 
 27113 ;; Registers used:
 27114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27115 ;; Tracked objects:
 27116 ;;		On entry : 0/0
 27117 ;;		On exit  : 0/0
 27118 ;;		Unchanged: 0/0
 27119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27124 ;;Total ram usage:        1 bytes
 27125 ;; Hardware stack levels used:    1
 27126 ;; Hardware stack levels required when called:    4
 27127 ;; This function calls:
 27128 ;;		__display_itoa_u16
 27129 ;; This function is called by:
 27130 ;;		_display_prepare
 27131 ;; This function uses a non-reentrant model
 27132 ;;
 27133                           
 27134                           	psect	text138
 27135  0025E2                     __ptext138:
 27136                           	opt stack 0
 27137  0025E2                     __display_start:
 27138                           	opt stack 22
 27139                           
 27140                           ;display.c: 343: uint8_t cntr;;display.c: 344: cntr = 0;
 27141                           
 27142                           ;incstack = 0
 27143  0025E2  0E00               	movlw	0
 27144  0025E4  6E1D               	movwf	__display_start@cntr,c
 27145                           
 27146                           ;display.c: 345: while(start_line1[cntr])
 27147  0025E6  D017               	goto	l1537
 27148  0025E8                     
 27149                           ;display.c: 346: display_content[0][cntr] = start_line1[cntr++];
 27150  0025E8  501D               	movf	__display_start@cntr,w,c
 27151  0025EA  0D01               	mullw	1
 27152  0025EC  0EE8               	movlw	low _start_line1
 27153  0025EE  24F3               	addwf	prodl,w,c
 27154  0025F0  6EF6               	movwf	tblptrl,c
 27155  0025F2  0E8D               	movlw	high _start_line1
 27156  0025F4  20F4               	addwfc	prodh,w,c
 27157  0025F6  6EF7               	movwf	tblptrh,c
 27158  0025F8                     	if	1	;There are 3 active tblptr bytes
 27159  0025F8  6AF8               	clrf	tblptru,c
 27160  0025FA  0E00               	movlw	low (__mediumconst shr (0+16))
 27161  0025FC  22F8               	addwfc	tblptru,f,c
 27162  0025FE                     	endif
 27163  0025FE  501D               	movf	__display_start@cntr,w,c
 27164  002600  0D01               	mullw	1
 27165  002602  0E78               	movlw	low _display_content
 27166  002604  24F3               	addwf	prodl,w,c
 27167  002606  6ED9               	movwf	fsr2l,c
 27168  002608  0E01               	movlw	high _display_content
 27169  00260A  20F4               	addwfc	prodh,w,c
 27170  00260C  6EDA               	movwf	fsr2h,c
 27171  00260E  0008               	tblrd		*
 27172  002610  CFF5 FFDF          	movff	tablat,indf2
 27173  002614  2A1D               	incf	__display_start@cntr,f,c
 27174  002616                     l1537:
 27175  002616  501D               	movf	__display_start@cntr,w,c
 27176  002618  0D01               	mullw	1
 27177  00261A  0EE8               	movlw	low _start_line1
 27178  00261C  24F3               	addwf	prodl,w,c
 27179  00261E  6EF6               	movwf	tblptrl,c
 27180  002620  0E8D               	movlw	high _start_line1
 27181  002622  20F4               	addwfc	prodh,w,c
 27182  002624  6EF7               	movwf	tblptrh,c
 27183  002626                     	if	1	;There are 3 active tblptr bytes
 27184  002626  6AF8               	clrf	tblptru,c
 27185  002628  0E00               	movlw	low (__mediumconst shr (0+16))
 27186  00262A  22F8               	addwfc	tblptru,f,c
 27187  00262C                     	endif
 27188  00262C  0008               	tblrd		*
 27189  00262E  50F5               	movf	tablat,w,c
 27190  002630  0900               	iorlw	0
 27191  002632  A4D8               	btfss	status,2,c
 27192  002634  D7D9               	goto	l1538
 27193                           
 27194                           ;display.c: 347: cntr = 0;
 27195  002636  0E00               	movlw	0
 27196  002638  6E1D               	movwf	__display_start@cntr,c
 27197                           
 27198                           ;display.c: 348: while(start_line2[cntr])
 27199  00263A  D017               	goto	l1540
 27200  00263C                     
 27201                           ;display.c: 349: display_content[1][cntr] = start_line2[cntr++];
 27202  00263C  501D               	movf	__display_start@cntr,w,c
 27203  00263E  0D01               	mullw	1
 27204  002640  0E60               	movlw	low _start_line2
 27205  002642  24F3               	addwf	prodl,w,c
 27206  002644  6EF6               	movwf	tblptrl,c
 27207  002646  0E8E               	movlw	high _start_line2
 27208  002648  20F4               	addwfc	prodh,w,c
 27209  00264A  6EF7               	movwf	tblptrh,c
 27210  00264C                     	if	1	;There are 3 active tblptr bytes
 27211  00264C  6AF8               	clrf	tblptru,c
 27212  00264E  0E00               	movlw	low (__mediumconst shr (0+16))
 27213  002650  22F8               	addwfc	tblptru,f,c
 27214  002652                     	endif
 27215  002652  501D               	movf	__display_start@cntr,w,c
 27216  002654  0D01               	mullw	1
 27217  002656  0E8C               	movlw	low (_display_content+20)
 27218  002658  24F3               	addwf	prodl,w,c
 27219  00265A  6ED9               	movwf	fsr2l,c
 27220  00265C  0E01               	movlw	high (_display_content+20)
 27221  00265E  20F4               	addwfc	prodh,w,c
 27222  002660  6EDA               	movwf	fsr2h,c
 27223  002662  0008               	tblrd		*
 27224  002664  CFF5 FFDF          	movff	tablat,indf2
 27225  002668  2A1D               	incf	__display_start@cntr,f,c
 27226  00266A                     l1540:
 27227  00266A  501D               	movf	__display_start@cntr,w,c
 27228  00266C  0D01               	mullw	1
 27229  00266E  0E60               	movlw	low _start_line2
 27230  002670  24F3               	addwf	prodl,w,c
 27231  002672  6EF6               	movwf	tblptrl,c
 27232  002674  0E8E               	movlw	high _start_line2
 27233  002676  20F4               	addwfc	prodh,w,c
 27234  002678  6EF7               	movwf	tblptrh,c
 27235  00267A                     	if	1	;There are 3 active tblptr bytes
 27236  00267A  6AF8               	clrf	tblptru,c
 27237  00267C  0E00               	movlw	low (__mediumconst shr (0+16))
 27238  00267E  22F8               	addwfc	tblptru,f,c
 27239  002680                     	endif
 27240  002680  0008               	tblrd		*
 27241  002682  50F5               	movf	tablat,w,c
 27242  002684  0900               	iorlw	0
 27243  002686  A4D8               	btfss	status,2,c
 27244  002688  D7D9               	goto	l1541
 27245                           
 27246                           ;display.c: 350: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27247  00268A  0E00               	movlw	0
 27248  00268C  6E1A               	movwf	__display_itoa_u16@value+1,c
 27249  00268E  0E00               	movlw	0
 27250  002690  6E19               	movwf	__display_itoa_u16@value,c
 27251  002692  501D               	movf	__display_start@cntr,w,c
 27252  002694  0D01               	mullw	1
 27253  002696  0E8C               	movlw	low (_display_content+20)
 27254  002698  24F3               	addwf	prodl,w,c
 27255  00269A  6E1B               	movwf	__display_itoa_u16@text,c
 27256  00269C  0E01               	movlw	high (_display_content+20)
 27257  00269E  20F4               	addwfc	prodh,w,c
 27258  0026A0  6E1C               	movwf	__display_itoa_u16@text+1,c
 27259  0026A2  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27260  0026A6  261D               	addwf	__display_start@cntr,f,c
 27261                           
 27262                           ;display.c: 351: display_content[1][cntr++] = '.';
 27263  0026A8  501D               	movf	__display_start@cntr,w,c
 27264  0026AA  0D01               	mullw	1
 27265  0026AC  0E8C               	movlw	low (_display_content+20)
 27266  0026AE  24F3               	addwf	prodl,w,c
 27267  0026B0  6ED9               	movwf	fsr2l,c
 27268  0026B2  0E01               	movlw	high (_display_content+20)
 27269  0026B4  20F4               	addwfc	prodh,w,c
 27270  0026B6  6EDA               	movwf	fsr2h,c
 27271  0026B8  0E2E               	movlw	46
 27272  0026BA  6EDF               	movwf	indf2,c
 27273  0026BC  2A1D               	incf	__display_start@cntr,f,c
 27274                           
 27275                           ;display.c: 352: cntr += _display_itoa_u16(0x05, &display_content[1][cntr]);
 27276  0026BE  0E00               	movlw	0
 27277  0026C0  6E1A               	movwf	__display_itoa_u16@value+1,c
 27278  0026C2  0E05               	movlw	5
 27279  0026C4  6E19               	movwf	__display_itoa_u16@value,c
 27280  0026C6  501D               	movf	__display_start@cntr,w,c
 27281  0026C8  0D01               	mullw	1
 27282  0026CA  0E8C               	movlw	low (_display_content+20)
 27283  0026CC  24F3               	addwf	prodl,w,c
 27284  0026CE  6E1B               	movwf	__display_itoa_u16@text,c
 27285  0026D0  0E01               	movlw	high (_display_content+20)
 27286  0026D2  20F4               	addwfc	prodh,w,c
 27287  0026D4  6E1C               	movwf	__display_itoa_u16@text+1,c
 27288  0026D6  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27289  0026DA  261D               	addwf	__display_start@cntr,f,c
 27290                           
 27291                           ;display.c: 353: display_content[1][cntr++] = '.';
 27292  0026DC  501D               	movf	__display_start@cntr,w,c
 27293  0026DE  0D01               	mullw	1
 27294  0026E0  0E8C               	movlw	low (_display_content+20)
 27295  0026E2  24F3               	addwf	prodl,w,c
 27296  0026E4  6ED9               	movwf	fsr2l,c
 27297  0026E6  0E01               	movlw	high (_display_content+20)
 27298  0026E8  20F4               	addwfc	prodh,w,c
 27299  0026EA  6EDA               	movwf	fsr2h,c
 27300  0026EC  0E2E               	movlw	46
 27301  0026EE  6EDF               	movwf	indf2,c
 27302  0026F0  2A1D               	incf	__display_start@cntr,f,c
 27303                           
 27304                           ;display.c: 354: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27305  0026F2  0E00               	movlw	0
 27306  0026F4  6E1A               	movwf	__display_itoa_u16@value+1,c
 27307  0026F6  0E00               	movlw	0
 27308  0026F8  6E19               	movwf	__display_itoa_u16@value,c
 27309  0026FA  501D               	movf	__display_start@cntr,w,c
 27310  0026FC  0D01               	mullw	1
 27311  0026FE  0E8C               	movlw	low (_display_content+20)
 27312  002700  24F3               	addwf	prodl,w,c
 27313  002702  6E1B               	movwf	__display_itoa_u16@text,c
 27314  002704  0E01               	movlw	high (_display_content+20)
 27315  002706  20F4               	addwfc	prodh,w,c
 27316  002708  6E1C               	movwf	__display_itoa_u16@text+1,c
 27317  00270A  ECCD  F027         	call	__display_itoa_u16	;wreg free
 27318  00270E  261D               	addwf	__display_start@cntr,f,c
 27319                           
 27320                           ;display.c: 355: cntr = 0;
 27321  002710  0E00               	movlw	0
 27322  002712  6E1D               	movwf	__display_start@cntr,c
 27323                           
 27324                           ;display.c: 356: while(start_line3[cntr])
 27325  002714  D017               	goto	l1543
 27326  002716                     
 27327                           ;display.c: 357: display_content[2][cntr] = start_line3[cntr++];
 27328  002716  501D               	movf	__display_start@cntr,w,c
 27329  002718  0D01               	mullw	1
 27330  00271A  0EA6               	movlw	low _start_line3
 27331  00271C  24F3               	addwf	prodl,w,c
 27332  00271E  6EF6               	movwf	tblptrl,c
 27333  002720  0E8E               	movlw	high _start_line3
 27334  002722  20F4               	addwfc	prodh,w,c
 27335  002724  6EF7               	movwf	tblptrh,c
 27336  002726                     	if	1	;There are 3 active tblptr bytes
 27337  002726  6AF8               	clrf	tblptru,c
 27338  002728  0E00               	movlw	low (__mediumconst shr (0+16))
 27339  00272A  22F8               	addwfc	tblptru,f,c
 27340  00272C                     	endif
 27341  00272C  501D               	movf	__display_start@cntr,w,c
 27342  00272E  0D01               	mullw	1
 27343  002730  0EA0               	movlw	low (_display_content+40)
 27344  002732  24F3               	addwf	prodl,w,c
 27345  002734  6ED9               	movwf	fsr2l,c
 27346  002736  0E01               	movlw	high (_display_content+40)
 27347  002738  20F4               	addwfc	prodh,w,c
 27348  00273A  6EDA               	movwf	fsr2h,c
 27349  00273C  0008               	tblrd		*
 27350  00273E  CFF5 FFDF          	movff	tablat,indf2
 27351  002742  2A1D               	incf	__display_start@cntr,f,c
 27352  002744                     l1543:
 27353  002744  501D               	movf	__display_start@cntr,w,c
 27354  002746  0D01               	mullw	1
 27355  002748  0EA6               	movlw	low _start_line3
 27356  00274A  24F3               	addwf	prodl,w,c
 27357  00274C  6EF6               	movwf	tblptrl,c
 27358  00274E  0E8E               	movlw	high _start_line3
 27359  002750  20F4               	addwfc	prodh,w,c
 27360  002752  6EF7               	movwf	tblptrh,c
 27361  002754                     	if	1	;There are 3 active tblptr bytes
 27362  002754  6AF8               	clrf	tblptru,c
 27363  002756  0E00               	movlw	low (__mediumconst shr (0+16))
 27364  002758  22F8               	addwfc	tblptru,f,c
 27365  00275A                     	endif
 27366  00275A  0008               	tblrd		*
 27367  00275C  50F5               	movf	tablat,w,c
 27368  00275E  0900               	iorlw	0
 27369  002760  A4D8               	btfss	status,2,c
 27370  002762  D7D9               	goto	l1544
 27371                           
 27372                           ;display.c: 358: cntr = 0;
 27373  002764  0E00               	movlw	0
 27374  002766  6E1D               	movwf	__display_start@cntr,c
 27375                           
 27376                           ;display.c: 359: while(start_line4[cntr])
 27377  002768  D017               	goto	l1546
 27378  00276A                     
 27379                           ;display.c: 360: display_content[3][cntr] = start_line4[cntr++];
 27380  00276A  501D               	movf	__display_start@cntr,w,c
 27381  00276C  0D01               	mullw	1
 27382  00276E  0E16               	movlw	low _start_line4
 27383  002770  24F3               	addwf	prodl,w,c
 27384  002772  6EF6               	movwf	tblptrl,c
 27385  002774  0E8E               	movlw	high _start_line4
 27386  002776  20F4               	addwfc	prodh,w,c
 27387  002778  6EF7               	movwf	tblptrh,c
 27388  00277A                     	if	1	;There are 3 active tblptr bytes
 27389  00277A  6AF8               	clrf	tblptru,c
 27390  00277C  0E00               	movlw	low (__mediumconst shr (0+16))
 27391  00277E  22F8               	addwfc	tblptru,f,c
 27392  002780                     	endif
 27393  002780  501D               	movf	__display_start@cntr,w,c
 27394  002782  0D01               	mullw	1
 27395  002784  0EB4               	movlw	low (_display_content+60)
 27396  002786  24F3               	addwf	prodl,w,c
 27397  002788  6ED9               	movwf	fsr2l,c
 27398  00278A  0E01               	movlw	high (_display_content+60)
 27399  00278C  20F4               	addwfc	prodh,w,c
 27400  00278E  6EDA               	movwf	fsr2h,c
 27401  002790  0008               	tblrd		*
 27402  002792  CFF5 FFDF          	movff	tablat,indf2
 27403  002796  2A1D               	incf	__display_start@cntr,f,c
 27404  002798                     l1546:
 27405  002798  501D               	movf	__display_start@cntr,w,c
 27406  00279A  0D01               	mullw	1
 27407  00279C  0E16               	movlw	low _start_line4
 27408  00279E  24F3               	addwf	prodl,w,c
 27409  0027A0  6EF6               	movwf	tblptrl,c
 27410  0027A2  0E8E               	movlw	high _start_line4
 27411  0027A4  20F4               	addwfc	prodh,w,c
 27412  0027A6  6EF7               	movwf	tblptrh,c
 27413  0027A8                     	if	1	;There are 3 active tblptr bytes
 27414  0027A8  6AF8               	clrf	tblptru,c
 27415  0027AA  0E00               	movlw	low (__mediumconst shr (0+16))
 27416  0027AC  22F8               	addwfc	tblptru,f,c
 27417  0027AE                     	endif
 27418  0027AE  0008               	tblrd		*
 27419  0027B0  50F5               	movf	tablat,w,c
 27420  0027B2  0900               	iorlw	0
 27421  0027B4  B4D8               	btfsc	status,2,c
 27422  0027B6  0012               	return	
 27423  0027B8  D7D8               	goto	l1547
 27424  0027BA                     __end_of__display_start:
 27425                           	opt stack 0
 27426                           tosu	equ	0xFFF
 27427                           tosh	equ	0xFFE
 27428                           tosl	equ	0xFFD
 27429                           pclath	equ	0xFFA
 27430                           tblptru	equ	0xFF8
 27431                           tblptrh	equ	0xFF7
 27432                           tblptrl	equ	0xFF6
 27433                           tablat	equ	0xFF5
 27434                           prodh	equ	0xFF4
 27435                           prodl	equ	0xFF3
 27436                           intcon	equ	0xFF2
 27437                           intcon2	equ	0xFF1
 27438                           intcon3	equ	0xFF0
 27439                           indf0	equ	0xFEF
 27440                           postinc0	equ	0xFEE
 27441                           fsr0h	equ	0xFEA
 27442                           fsr0l	equ	0xFE9
 27443                           wreg	equ	0xFE8
 27444                           indf1	equ	0xFE7
 27445                           postdec1	equ	0xFE5
 27446                           plusw1	equ	0xFE3
 27447                           fsr1h	equ	0xFE2
 27448                           fsr1l	equ	0xFE1
 27449                           indf2	equ	0xFDF
 27450                           postinc2	equ	0xFDE
 27451                           postdec2	equ	0xFDD
 27452                           plusw2	equ	0xFDB
 27453                           fsr2h	equ	0xFDA
 27454                           fsr2l	equ	0xFD9
 27455                           status	equ	0xFD8
 27456                           
 27457 ;; *************** function __display_search *****************
 27458 ;; Defined at:
 27459 ;;		line 363 in file "display.c"
 27460 ;; Parameters:    Size  Location     Type
 27461 ;;		None
 27462 ;; Auto vars:     Size  Location     Type
 27463 ;;  cntr            1    0[COMRAM] unsigned char 
 27464 ;; Return value:  Size  Location     Type
 27465 ;;                  1    wreg      void 
 27466 ;; Registers used:
 27467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27468 ;; Tracked objects:
 27469 ;;		On entry : 0/0
 27470 ;;		On exit  : 0/0
 27471 ;;		Unchanged: 0/0
 27472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27477 ;;Total ram usage:        1 bytes
 27478 ;; Hardware stack levels used:    1
 27479 ;; This function calls:
 27480 ;;		Nothing
 27481 ;; This function is called by:
 27482 ;;		_display_prepare
 27483 ;; This function uses a non-reentrant model
 27484 ;;
 27485                           
 27486                           	psect	text139
 27487  003224                     __ptext139:
 27488                           	opt stack 0
 27489  003224                     __display_search:
 27490                           	opt stack 26
 27491                           
 27492                           ;display.c: 365: uint8_t cntr;;display.c: 366: cntr = 0;
 27493                           
 27494                           ;incstack = 0
 27495  003224  0E00               	movlw	0
 27496  003226  6E01               	movwf	__display_search@cntr,c
 27497                           
 27498                           ;display.c: 367: while(search_line1[cntr])
 27499  003228  D017               	goto	l1552
 27500  00322A                     
 27501                           ;display.c: 368: display_content[0][cntr] = search_line1[cntr++];
 27502  00322A  5001               	movf	__display_search@cntr,w,c
 27503  00322C  0D01               	mullw	1
 27504  00322E  0ED8               	movlw	low _search_line1
 27505  003230  24F3               	addwf	prodl,w,c
 27506  003232  6EF6               	movwf	tblptrl,c
 27507  003234  0E8D               	movlw	high _search_line1
 27508  003236  20F4               	addwfc	prodh,w,c
 27509  003238  6EF7               	movwf	tblptrh,c
 27510  00323A                     	if	1	;There are 3 active tblptr bytes
 27511  00323A  6AF8               	clrf	tblptru,c
 27512  00323C  0E00               	movlw	low (__mediumconst shr (0+16))
 27513  00323E  22F8               	addwfc	tblptru,f,c
 27514  003240                     	endif
 27515  003240  5001               	movf	__display_search@cntr,w,c
 27516  003242  0D01               	mullw	1
 27517  003244  0E78               	movlw	low _display_content
 27518  003246  24F3               	addwf	prodl,w,c
 27519  003248  6ED9               	movwf	fsr2l,c
 27520  00324A  0E01               	movlw	high _display_content
 27521  00324C  20F4               	addwfc	prodh,w,c
 27522  00324E  6EDA               	movwf	fsr2h,c
 27523  003250  0008               	tblrd		*
 27524  003252  CFF5 FFDF          	movff	tablat,indf2
 27525  003256  2A01               	incf	__display_search@cntr,f,c
 27526  003258                     l1552:
 27527  003258  5001               	movf	__display_search@cntr,w,c
 27528  00325A  0D01               	mullw	1
 27529  00325C  0ED8               	movlw	low _search_line1
 27530  00325E  24F3               	addwf	prodl,w,c
 27531  003260  6EF6               	movwf	tblptrl,c
 27532  003262  0E8D               	movlw	high _search_line1
 27533  003264  20F4               	addwfc	prodh,w,c
 27534  003266  6EF7               	movwf	tblptrh,c
 27535  003268                     	if	1	;There are 3 active tblptr bytes
 27536  003268  6AF8               	clrf	tblptru,c
 27537  00326A  0E00               	movlw	low (__mediumconst shr (0+16))
 27538  00326C  22F8               	addwfc	tblptru,f,c
 27539  00326E                     	endif
 27540  00326E  0008               	tblrd		*
 27541  003270  50F5               	movf	tablat,w,c
 27542  003272  0900               	iorlw	0
 27543  003274  A4D8               	btfss	status,2,c
 27544  003276  D7D9               	goto	l1553
 27545                           
 27546                           ;display.c: 369: cntr = 0;
 27547  003278  0E00               	movlw	0
 27548  00327A  6E01               	movwf	__display_search@cntr,c
 27549                           
 27550                           ;display.c: 370: while(search_line2[cntr])
 27551  00327C  D017               	goto	l1555
 27552  00327E                     
 27553                           ;display.c: 371: display_content[1][cntr] = search_line2[cntr++];
 27554  00327E  5001               	movf	__display_search@cntr,w,c
 27555  003280  0D01               	mullw	1
 27556  003282  0E17               	movlw	low _search_line2
 27557  003284  24F3               	addwf	prodl,w,c
 27558  003286  6EF6               	movwf	tblptrl,c
 27559  003288  0E8D               	movlw	high _search_line2
 27560  00328A  20F4               	addwfc	prodh,w,c
 27561  00328C  6EF7               	movwf	tblptrh,c
 27562  00328E                     	if	1	;There are 3 active tblptr bytes
 27563  00328E  6AF8               	clrf	tblptru,c
 27564  003290  0E00               	movlw	low (__mediumconst shr (0+16))
 27565  003292  22F8               	addwfc	tblptru,f,c
 27566  003294                     	endif
 27567  003294  5001               	movf	__display_search@cntr,w,c
 27568  003296  0D01               	mullw	1
 27569  003298  0E8C               	movlw	low (_display_content+20)
 27570  00329A  24F3               	addwf	prodl,w,c
 27571  00329C  6ED9               	movwf	fsr2l,c
 27572  00329E  0E01               	movlw	high (_display_content+20)
 27573  0032A0  20F4               	addwfc	prodh,w,c
 27574  0032A2  6EDA               	movwf	fsr2h,c
 27575  0032A4  0008               	tblrd		*
 27576  0032A6  CFF5 FFDF          	movff	tablat,indf2
 27577  0032AA  2A01               	incf	__display_search@cntr,f,c
 27578  0032AC                     l1555:
 27579  0032AC  5001               	movf	__display_search@cntr,w,c
 27580  0032AE  0D01               	mullw	1
 27581  0032B0  0E17               	movlw	low _search_line2
 27582  0032B2  24F3               	addwf	prodl,w,c
 27583  0032B4  6EF6               	movwf	tblptrl,c
 27584  0032B6  0E8D               	movlw	high _search_line2
 27585  0032B8  20F4               	addwfc	prodh,w,c
 27586  0032BA  6EF7               	movwf	tblptrh,c
 27587  0032BC                     	if	1	;There are 3 active tblptr bytes
 27588  0032BC  6AF8               	clrf	tblptru,c
 27589  0032BE  0E00               	movlw	low (__mediumconst shr (0+16))
 27590  0032C0  22F8               	addwfc	tblptru,f,c
 27591  0032C2                     	endif
 27592  0032C2  0008               	tblrd		*
 27593  0032C4  50F5               	movf	tablat,w,c
 27594  0032C6  0900               	iorlw	0
 27595  0032C8  A4D8               	btfss	status,2,c
 27596  0032CA  D7D9               	goto	l1556
 27597                           
 27598                           ;display.c: 372: cntr = 0;
 27599  0032CC  0E00               	movlw	0
 27600  0032CE  6E01               	movwf	__display_search@cntr,c
 27601                           
 27602                           ;display.c: 373: while(search_line3[cntr])
 27603  0032D0  D017               	goto	l1558
 27604  0032D2                     
 27605                           ;display.c: 374: display_content[2][cntr] = search_line3[cntr++];
 27606  0032D2  5001               	movf	__display_search@cntr,w,c
 27607  0032D4  0D01               	mullw	1
 27608  0032D6  0E96               	movlw	low _search_line3
 27609  0032D8  24F3               	addwf	prodl,w,c
 27610  0032DA  6EF6               	movwf	tblptrl,c
 27611  0032DC  0E8C               	movlw	high _search_line3
 27612  0032DE  20F4               	addwfc	prodh,w,c
 27613  0032E0  6EF7               	movwf	tblptrh,c
 27614  0032E2                     	if	1	;There are 3 active tblptr bytes
 27615  0032E2  6AF8               	clrf	tblptru,c
 27616  0032E4  0E00               	movlw	low (__mediumconst shr (0+16))
 27617  0032E6  22F8               	addwfc	tblptru,f,c
 27618  0032E8                     	endif
 27619  0032E8  5001               	movf	__display_search@cntr,w,c
 27620  0032EA  0D01               	mullw	1
 27621  0032EC  0EA0               	movlw	low (_display_content+40)
 27622  0032EE  24F3               	addwf	prodl,w,c
 27623  0032F0  6ED9               	movwf	fsr2l,c
 27624  0032F2  0E01               	movlw	high (_display_content+40)
 27625  0032F4  20F4               	addwfc	prodh,w,c
 27626  0032F6  6EDA               	movwf	fsr2h,c
 27627  0032F8  0008               	tblrd		*
 27628  0032FA  CFF5 FFDF          	movff	tablat,indf2
 27629  0032FE  2A01               	incf	__display_search@cntr,f,c
 27630  003300                     l1558:
 27631  003300  5001               	movf	__display_search@cntr,w,c
 27632  003302  0D01               	mullw	1
 27633  003304  0E96               	movlw	low _search_line3
 27634  003306  24F3               	addwf	prodl,w,c
 27635  003308  6EF6               	movwf	tblptrl,c
 27636  00330A  0E8C               	movlw	high _search_line3
 27637  00330C  20F4               	addwfc	prodh,w,c
 27638  00330E  6EF7               	movwf	tblptrh,c
 27639  003310                     	if	1	;There are 3 active tblptr bytes
 27640  003310  6AF8               	clrf	tblptru,c
 27641  003312  0E00               	movlw	low (__mediumconst shr (0+16))
 27642  003314  22F8               	addwfc	tblptru,f,c
 27643  003316                     	endif
 27644  003316  0008               	tblrd		*
 27645  003318  50F5               	movf	tablat,w,c
 27646  00331A  0900               	iorlw	0
 27647  00331C  A4D8               	btfss	status,2,c
 27648  00331E  D7D9               	goto	l1559
 27649                           
 27650                           ;display.c: 375: cntr = 0;
 27651  003320  0E00               	movlw	0
 27652  003322  6E01               	movwf	__display_search@cntr,c
 27653                           
 27654                           ;display.c: 376: while(search_line4[cntr])
 27655  003324  D017               	goto	l1561
 27656  003326                     
 27657                           ;display.c: 377: display_content[3][cntr] = search_line4[cntr++];
 27658  003326  5001               	movf	__display_search@cntr,w,c
 27659  003328  0D01               	mullw	1
 27660  00332A  0E57               	movlw	low _search_line4
 27661  00332C  24F3               	addwf	prodl,w,c
 27662  00332E  6EF6               	movwf	tblptrl,c
 27663  003330  0E8E               	movlw	high _search_line4
 27664  003332  20F4               	addwfc	prodh,w,c
 27665  003334  6EF7               	movwf	tblptrh,c
 27666  003336                     	if	1	;There are 3 active tblptr bytes
 27667  003336  6AF8               	clrf	tblptru,c
 27668  003338  0E00               	movlw	low (__mediumconst shr (0+16))
 27669  00333A  22F8               	addwfc	tblptru,f,c
 27670  00333C                     	endif
 27671  00333C  5001               	movf	__display_search@cntr,w,c
 27672  00333E  0D01               	mullw	1
 27673  003340  0EB4               	movlw	low (_display_content+60)
 27674  003342  24F3               	addwf	prodl,w,c
 27675  003344  6ED9               	movwf	fsr2l,c
 27676  003346  0E01               	movlw	high (_display_content+60)
 27677  003348  20F4               	addwfc	prodh,w,c
 27678  00334A  6EDA               	movwf	fsr2h,c
 27679  00334C  0008               	tblrd		*
 27680  00334E  CFF5 FFDF          	movff	tablat,indf2
 27681  003352  2A01               	incf	__display_search@cntr,f,c
 27682  003354                     l1561:
 27683  003354  5001               	movf	__display_search@cntr,w,c
 27684  003356  0D01               	mullw	1
 27685  003358  0E57               	movlw	low _search_line4
 27686  00335A  24F3               	addwf	prodl,w,c
 27687  00335C  6EF6               	movwf	tblptrl,c
 27688  00335E  0E8E               	movlw	high _search_line4
 27689  003360  20F4               	addwfc	prodh,w,c
 27690  003362  6EF7               	movwf	tblptrh,c
 27691  003364                     	if	1	;There are 3 active tblptr bytes
 27692  003364  6AF8               	clrf	tblptru,c
 27693  003366  0E00               	movlw	low (__mediumconst shr (0+16))
 27694  003368  22F8               	addwfc	tblptru,f,c
 27695  00336A                     	endif
 27696  00336A  0008               	tblrd		*
 27697  00336C  50F5               	movf	tablat,w,c
 27698  00336E  0900               	iorlw	0
 27699  003370  B4D8               	btfsc	status,2,c
 27700  003372  0012               	return	
 27701  003374  D7D8               	goto	l1562
 27702  003376                     __end_of__display_search:
 27703                           	opt stack 0
 27704                           tosu	equ	0xFFF
 27705                           tosh	equ	0xFFE
 27706                           tosl	equ	0xFFD
 27707                           pclath	equ	0xFFA
 27708                           tblptru	equ	0xFF8
 27709                           tblptrh	equ	0xFF7
 27710                           tblptrl	equ	0xFF6
 27711                           tablat	equ	0xFF5
 27712                           prodh	equ	0xFF4
 27713                           prodl	equ	0xFF3
 27714                           intcon	equ	0xFF2
 27715                           intcon2	equ	0xFF1
 27716                           intcon3	equ	0xFF0
 27717                           indf0	equ	0xFEF
 27718                           postinc0	equ	0xFEE
 27719                           fsr0h	equ	0xFEA
 27720                           fsr0l	equ	0xFE9
 27721                           wreg	equ	0xFE8
 27722                           indf1	equ	0xFE7
 27723                           postdec1	equ	0xFE5
 27724                           plusw1	equ	0xFE3
 27725                           fsr1h	equ	0xFE2
 27726                           fsr1l	equ	0xFE1
 27727                           indf2	equ	0xFDF
 27728                           postinc2	equ	0xFDE
 27729                           postdec2	equ	0xFDD
 27730                           plusw2	equ	0xFDB
 27731                           fsr2h	equ	0xFDA
 27732                           fsr2l	equ	0xFD9
 27733                           status	equ	0xFD8
 27734                           
 27735 ;; *************** function __display_rebooting *****************
 27736 ;; Defined at:
 27737 ;;		line 537 in file "display.c"
 27738 ;; Parameters:    Size  Location     Type
 27739 ;;		None
 27740 ;; Auto vars:     Size  Location     Type
 27741 ;;  cntr            1    0[COMRAM] unsigned char 
 27742 ;; Return value:  Size  Location     Type
 27743 ;;                  1    wreg      void 
 27744 ;; Registers used:
 27745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27746 ;; Tracked objects:
 27747 ;;		On entry : 0/0
 27748 ;;		On exit  : 0/0
 27749 ;;		Unchanged: 0/0
 27750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27755 ;;Total ram usage:        1 bytes
 27756 ;; Hardware stack levels used:    1
 27757 ;; This function calls:
 27758 ;;		Nothing
 27759 ;; This function is called by:
 27760 ;;		_display_prepare
 27761 ;; This function uses a non-reentrant model
 27762 ;;
 27763                           
 27764                           	psect	text140
 27765  00654C                     __ptext140:
 27766                           	opt stack 0
 27767  00654C                     __display_rebooting:
 27768                           	opt stack 26
 27769                           
 27770                           ;display.c: 539: uint8_t cntr;;display.c: 540: cntr = 0;
 27771                           
 27772                           ;incstack = 0
 27773  00654C  0E00               	movlw	0
 27774  00654E  6E01               	movwf	__display_rebooting@cntr,c
 27775                           
 27776                           ;display.c: 541: while(reboot_line1[cntr])
 27777  006550  D017               	goto	l1676
 27778  006552                     
 27779                           ;display.c: 542: display_content[0][cntr] = reboot_line1[cntr++];
 27780  006552  5001               	movf	__display_rebooting@cntr,w,c
 27781  006554  0D01               	mullw	1
 27782  006556  0E33               	movlw	low _reboot_line1
 27783  006558  24F3               	addwf	prodl,w,c
 27784  00655A  6EF6               	movwf	tblptrl,c
 27785  00655C  0E8E               	movlw	high _reboot_line1
 27786  00655E  20F4               	addwfc	prodh,w,c
 27787  006560  6EF7               	movwf	tblptrh,c
 27788  006562                     	if	1	;There are 3 active tblptr bytes
 27789  006562  6AF8               	clrf	tblptru,c
 27790  006564  0E00               	movlw	low (__mediumconst shr (0+16))
 27791  006566  22F8               	addwfc	tblptru,f,c
 27792  006568                     	endif
 27793  006568  5001               	movf	__display_rebooting@cntr,w,c
 27794  00656A  0D01               	mullw	1
 27795  00656C  0E78               	movlw	low _display_content
 27796  00656E  24F3               	addwf	prodl,w,c
 27797  006570  6ED9               	movwf	fsr2l,c
 27798  006572  0E01               	movlw	high _display_content
 27799  006574  20F4               	addwfc	prodh,w,c
 27800  006576  6EDA               	movwf	fsr2h,c
 27801  006578  0008               	tblrd		*
 27802  00657A  CFF5 FFDF          	movff	tablat,indf2
 27803  00657E  2A01               	incf	__display_rebooting@cntr,f,c
 27804  006580                     l1676:
 27805  006580  5001               	movf	__display_rebooting@cntr,w,c
 27806  006582  0D01               	mullw	1
 27807  006584  0E33               	movlw	low _reboot_line1
 27808  006586  24F3               	addwf	prodl,w,c
 27809  006588  6EF6               	movwf	tblptrl,c
 27810  00658A  0E8E               	movlw	high _reboot_line1
 27811  00658C  20F4               	addwfc	prodh,w,c
 27812  00658E  6EF7               	movwf	tblptrh,c
 27813  006590                     	if	1	;There are 3 active tblptr bytes
 27814  006590  6AF8               	clrf	tblptru,c
 27815  006592  0E00               	movlw	low (__mediumconst shr (0+16))
 27816  006594  22F8               	addwfc	tblptru,f,c
 27817  006596                     	endif
 27818  006596  0008               	tblrd		*
 27819  006598  50F5               	movf	tablat,w,c
 27820  00659A  0900               	iorlw	0
 27821  00659C  B4D8               	btfsc	status,2,c
 27822  00659E  0012               	return	
 27823  0065A0  D7D8               	goto	l1677
 27824  0065A2                     __end_of__display_rebooting:
 27825                           	opt stack 0
 27826                           tosu	equ	0xFFF
 27827                           tosh	equ	0xFFE
 27828                           tosl	equ	0xFFD
 27829                           pclath	equ	0xFFA
 27830                           tblptru	equ	0xFF8
 27831                           tblptrh	equ	0xFF7
 27832                           tblptrl	equ	0xFF6
 27833                           tablat	equ	0xFF5
 27834                           prodh	equ	0xFF4
 27835                           prodl	equ	0xFF3
 27836                           intcon	equ	0xFF2
 27837                           intcon2	equ	0xFF1
 27838                           intcon3	equ	0xFF0
 27839                           indf0	equ	0xFEF
 27840                           postinc0	equ	0xFEE
 27841                           fsr0h	equ	0xFEA
 27842                           fsr0l	equ	0xFE9
 27843                           wreg	equ	0xFE8
 27844                           indf1	equ	0xFE7
 27845                           postdec1	equ	0xFE5
 27846                           plusw1	equ	0xFE3
 27847                           fsr1h	equ	0xFE2
 27848                           fsr1l	equ	0xFE1
 27849                           indf2	equ	0xFDF
 27850                           postinc2	equ	0xFDE
 27851                           postdec2	equ	0xFDD
 27852                           plusw2	equ	0xFDB
 27853                           fsr2h	equ	0xFDA
 27854                           fsr2l	equ	0xFD9
 27855                           status	equ	0xFD8
 27856                           
 27857 ;; *************** function __display_programming *****************
 27858 ;; Defined at:
 27859 ;;		line 495 in file "display.c"
 27860 ;; Parameters:    Size  Location     Type
 27861 ;;		None
 27862 ;; Auto vars:     Size  Location     Type
 27863 ;;  cntr            1   28[COMRAM] unsigned char 
 27864 ;; Return value:  Size  Location     Type
 27865 ;;                  1    wreg      void 
 27866 ;; Registers used:
 27867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27868 ;; Tracked objects:
 27869 ;;		On entry : 0/0
 27870 ;;		On exit  : 0/0
 27871 ;;		Unchanged: 0/0
 27872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27877 ;;Total ram usage:        1 bytes
 27878 ;; Hardware stack levels used:    1
 27879 ;; Hardware stack levels required when called:    4
 27880 ;; This function calls:
 27881 ;;		__display_itoa_u16
 27882 ;;		_bootloader_get_entries
 27883 ;;		_bootloader_get_flashPagesWritten
 27884 ;;		_bootloader_get_total_entries
 27885 ;; This function is called by:
 27886 ;;		_display_prepare
 27887 ;; This function uses a non-reentrant model
 27888 ;;
 27889                           
 27890                           	psect	text141
 27891  0027BA                     __ptext141:
 27892                           	opt stack 0
 27893  0027BA                     __display_programming:
 27894                           	opt stack 22
 27895                           
 27896                           ;display.c: 497: uint8_t cntr;;display.c: 498: cntr = 0;
 27897                           
 27898                           ;incstack = 0
 27899  0027BA  0E00               	movlw	0
 27900  0027BC  6E1D               	movwf	__display_programming@cntr,c
 27901                           
 27902                           ;display.c: 499: while(programming_line1[cntr])
 27903  0027BE  D017               	goto	l1646
 27904  0027C0                     
 27905                           ;display.c: 500: display_content[0][cntr] = programming_line1[cntr++];
 27906  0027C0  501D               	movf	__display_programming@cntr,w,c
 27907  0027C2  0D01               	mullw	1
 27908  0027C4  0E88               	movlw	low _programming_line1
 27909  0027C6  24F3               	addwf	prodl,w,c
 27910  0027C8  6EF6               	movwf	tblptrl,c
 27911  0027CA  0E8D               	movlw	high _programming_line1
 27912  0027CC  20F4               	addwfc	prodh,w,c
 27913  0027CE  6EF7               	movwf	tblptrh,c
 27914  0027D0                     	if	1	;There are 3 active tblptr bytes
 27915  0027D0  6AF8               	clrf	tblptru,c
 27916  0027D2  0E00               	movlw	low (__mediumconst shr (0+16))
 27917  0027D4  22F8               	addwfc	tblptru,f,c
 27918  0027D6                     	endif
 27919  0027D6  501D               	movf	__display_programming@cntr,w,c
 27920  0027D8  0D01               	mullw	1
 27921  0027DA  0E78               	movlw	low _display_content
 27922  0027DC  24F3               	addwf	prodl,w,c
 27923  0027DE  6ED9               	movwf	fsr2l,c
 27924  0027E0  0E01               	movlw	high _display_content
 27925  0027E2  20F4               	addwfc	prodh,w,c
 27926  0027E4  6EDA               	movwf	fsr2h,c
 27927  0027E6  0008               	tblrd		*
 27928  0027E8  CFF5 FFDF          	movff	tablat,indf2
 27929  0027EC  2A1D               	incf	__display_programming@cntr,f,c
 27930  0027EE                     l1646:
 27931  0027EE  501D               	movf	__display_programming@cntr,w,c
 27932  0027F0  0D01               	mullw	1
 27933  0027F2  0E88               	movlw	low _programming_line1
 27934  0027F4  24F3               	addwf	prodl,w,c
 27935  0027F6  6EF6               	movwf	tblptrl,c
 27936  0027F8  0E8D               	movlw	high _programming_line1
 27937  0027FA  20F4               	addwfc	prodh,w,c
 27938  0027FC  6EF7               	movwf	tblptrh,c
 27939  0027FE                     	if	1	;There are 3 active tblptr bytes
 27940  0027FE  6AF8               	clrf	tblptru,c
 27941  002800  0E00               	movlw	low (__mediumconst shr (0+16))
 27942  002802  22F8               	addwfc	tblptru,f,c
 27943  002804                     	endif
 27944  002804  0008               	tblrd		*
 27945  002806  50F5               	movf	tablat,w,c
 27946  002808  0900               	iorlw	0
 27947  00280A  A4D8               	btfss	status,2,c
 27948  00280C  D7D9               	goto	l1647
 27949                           
 27950                           ;display.c: 502: cntr = 0;
 27951  00280E  0E00               	movlw	0
 27952  002810  6E1D               	movwf	__display_programming@cntr,c
 27953                           
 27954                           ;display.c: 503: while(programming_line2[cntr])
 27955  002812  D017               	goto	l1649
 27956  002814                     
 27957                           ;display.c: 504: display_content[1][cntr] = programming_line2[cntr++];
 27958  002814  501D               	movf	__display_programming@cntr,w,c
 27959  002816  0D01               	mullw	1
 27960  002818  0ED0               	movlw	low _programming_line2
 27961  00281A  24F3               	addwf	prodl,w,c
 27962  00281C  6EF6               	movwf	tblptrl,c
 27963  00281E  0E8C               	movlw	high _programming_line2
 27964  002820  20F4               	addwfc	prodh,w,c
 27965  002822  6EF7               	movwf	tblptrh,c
 27966  002824                     	if	1	;There are 3 active tblptr bytes
 27967  002824  6AF8               	clrf	tblptru,c
 27968  002826  0E00               	movlw	low (__mediumconst shr (0+16))
 27969  002828  22F8               	addwfc	tblptru,f,c
 27970  00282A                     	endif
 27971  00282A  501D               	movf	__display_programming@cntr,w,c
 27972  00282C  0D01               	mullw	1
 27973  00282E  0E8C               	movlw	low (_display_content+20)
 27974  002830  24F3               	addwf	prodl,w,c
 27975  002832  6ED9               	movwf	fsr2l,c
 27976  002834  0E01               	movlw	high (_display_content+20)
 27977  002836  20F4               	addwfc	prodh,w,c
 27978  002838  6EDA               	movwf	fsr2h,c
 27979  00283A  0008               	tblrd		*
 27980  00283C  CFF5 FFDF          	movff	tablat,indf2
 27981  002840  2A1D               	incf	__display_programming@cntr,f,c
 27982  002842                     l1649:
 27983  002842  501D               	movf	__display_programming@cntr,w,c
 27984  002844  0D01               	mullw	1
 27985  002846  0ED0               	movlw	low _programming_line2
 27986  002848  24F3               	addwf	prodl,w,c
 27987  00284A  6EF6               	movwf	tblptrl,c
 27988  00284C  0E8C               	movlw	high _programming_line2
 27989  00284E  20F4               	addwfc	prodh,w,c
 27990  002850  6EF7               	movwf	tblptrh,c
 27991  002852                     	if	1	;There are 3 active tblptr bytes
 27992  002852  6AF8               	clrf	tblptru,c
 27993  002854  0E00               	movlw	low (__mediumconst shr (0+16))
 27994  002856  22F8               	addwfc	tblptru,f,c
 27995  002858                     	endif
 27996  002858  0008               	tblrd		*
 27997  00285A  50F5               	movf	tablat,w,c
 27998  00285C  0900               	iorlw	0
 27999  00285E  A4D8               	btfss	status,2,c
 28000  002860  D7D9               	goto	l1650
 28001                           
 28002                           ;display.c: 506: cntr = 0;
 28003  002862  0E00               	movlw	0
 28004  002864  6E1D               	movwf	__display_programming@cntr,c
 28005                           
 28006                           ;display.c: 507: while(programming_line3[cntr])
 28007  002866  D017               	goto	l1652
 28008  002868                     
 28009                           ;display.c: 508: display_content[2][cntr] = programming_line3[cntr++];
 28010  002868  501D               	movf	__display_programming@cntr,w,c
 28011  00286A  0D01               	mullw	1
 28012  00286C  0E81               	movlw	low _programming_line3
 28013  00286E  24F3               	addwf	prodl,w,c
 28014  002870  6EF6               	movwf	tblptrl,c
 28015  002872  0E8E               	movlw	high _programming_line3
 28016  002874  20F4               	addwfc	prodh,w,c
 28017  002876  6EF7               	movwf	tblptrh,c
 28018  002878                     	if	1	;There are 3 active tblptr bytes
 28019  002878  6AF8               	clrf	tblptru,c
 28020  00287A  0E00               	movlw	low (__mediumconst shr (0+16))
 28021  00287C  22F8               	addwfc	tblptru,f,c
 28022  00287E                     	endif
 28023  00287E  501D               	movf	__display_programming@cntr,w,c
 28024  002880  0D01               	mullw	1
 28025  002882  0EA0               	movlw	low (_display_content+40)
 28026  002884  24F3               	addwf	prodl,w,c
 28027  002886  6ED9               	movwf	fsr2l,c
 28028  002888  0E01               	movlw	high (_display_content+40)
 28029  00288A  20F4               	addwfc	prodh,w,c
 28030  00288C  6EDA               	movwf	fsr2h,c
 28031  00288E  0008               	tblrd		*
 28032  002890  CFF5 FFDF          	movff	tablat,indf2
 28033  002894  2A1D               	incf	__display_programming@cntr,f,c
 28034  002896                     l1652:
 28035  002896  501D               	movf	__display_programming@cntr,w,c
 28036  002898  0D01               	mullw	1
 28037  00289A  0E81               	movlw	low _programming_line3
 28038  00289C  24F3               	addwf	prodl,w,c
 28039  00289E  6EF6               	movwf	tblptrl,c
 28040  0028A0  0E8E               	movlw	high _programming_line3
 28041  0028A2  20F4               	addwfc	prodh,w,c
 28042  0028A4  6EF7               	movwf	tblptrh,c
 28043  0028A6                     	if	1	;There are 3 active tblptr bytes
 28044  0028A6  6AF8               	clrf	tblptru,c
 28045  0028A8  0E00               	movlw	low (__mediumconst shr (0+16))
 28046  0028AA  22F8               	addwfc	tblptru,f,c
 28047  0028AC                     	endif
 28048  0028AC  0008               	tblrd		*
 28049  0028AE  50F5               	movf	tablat,w,c
 28050  0028B0  0900               	iorlw	0
 28051  0028B2  A4D8               	btfss	status,2,c
 28052  0028B4  D7D9               	goto	l1653
 28053                           
 28054                           ;display.c: 509: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28055  0028B6  ECFE  F038         	call	_bootloader_get_entries	;wreg free
 28056  0028BA  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28057  0028BE  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28058  0028C2  501D               	movf	__display_programming@cntr,w,c
 28059  0028C4  0D01               	mullw	1
 28060  0028C6  0EA0               	movlw	low (_display_content+40)
 28061  0028C8  24F3               	addwf	prodl,w,c
 28062  0028CA  6E1B               	movwf	__display_itoa_u16@text,c
 28063  0028CC  0E01               	movlw	high (_display_content+40)
 28064  0028CE  20F4               	addwfc	prodh,w,c
 28065  0028D0  6E1C               	movwf	__display_itoa_u16@text+1,c
 28066  0028D2  ECCD  F027         	call	__display_itoa_u16	;wreg free
 28067  0028D6  261D               	addwf	__display_programming@cntr,f,c
 28068                           
 28069                           ;display.c: 510: display_content[2][cntr++] = '/';
 28070  0028D8  501D               	movf	__display_programming@cntr,w,c
 28071  0028DA  0D01               	mullw	1
 28072  0028DC  0EA0               	movlw	low (_display_content+40)
 28073  0028DE  24F3               	addwf	prodl,w,c
 28074  0028E0  6ED9               	movwf	fsr2l,c
 28075  0028E2  0E01               	movlw	high (_display_content+40)
 28076  0028E4  20F4               	addwfc	prodh,w,c
 28077  0028E6  6EDA               	movwf	fsr2h,c
 28078  0028E8  0E2F               	movlw	47
 28079  0028EA  6EDF               	movwf	indf2,c
 28080  0028EC  2A1D               	incf	__display_programming@cntr,f,c
 28081                           
 28082                           ;display.c: 511: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28083  0028EE  EC08  F039         	call	_bootloader_get_total_entries	;wreg free
 28084  0028F2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28085  0028F6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28086  0028FA  501D               	movf	__display_programming@cntr,w,c
 28087  0028FC  0D01               	mullw	1
 28088  0028FE  0EA0               	movlw	low (_display_content+40)
 28089  002900  24F3               	addwf	prodl,w,c
 28090  002902  6E1B               	movwf	__display_itoa_u16@text,c
 28091  002904  0E01               	movlw	high (_display_content+40)
 28092  002906  20F4               	addwfc	prodh,w,c
 28093  002908  6E1C               	movwf	__display_itoa_u16@text+1,c
 28094  00290A  ECCD  F027         	call	__display_itoa_u16	;wreg free
 28095                           
 28096                           ;display.c: 513: cntr = 0;
 28097  00290E  0E00               	movlw	0
 28098  002910  6E1D               	movwf	__display_programming@cntr,c
 28099                           
 28100                           ;display.c: 514: while(programming_line4[cntr])
 28101  002912  D017               	goto	l1655
 28102  002914                     
 28103                           ;display.c: 515: display_content[3][cntr] = programming_line4[cntr++];
 28104  002914  501D               	movf	__display_programming@cntr,w,c
 28105  002916  0D01               	mullw	1
 28106  002918  0E78               	movlw	low _programming_line4
 28107  00291A  24F3               	addwf	prodl,w,c
 28108  00291C  6EF6               	movwf	tblptrl,c
 28109  00291E  0E8D               	movlw	high _programming_line4
 28110  002920  20F4               	addwfc	prodh,w,c
 28111  002922  6EF7               	movwf	tblptrh,c
 28112  002924                     	if	1	;There are 3 active tblptr bytes
 28113  002924  6AF8               	clrf	tblptru,c
 28114  002926  0E00               	movlw	low (__mediumconst shr (0+16))
 28115  002928  22F8               	addwfc	tblptru,f,c
 28116  00292A                     	endif
 28117  00292A  501D               	movf	__display_programming@cntr,w,c
 28118  00292C  0D01               	mullw	1
 28119  00292E  0EB4               	movlw	low (_display_content+60)
 28120  002930  24F3               	addwf	prodl,w,c
 28121  002932  6ED9               	movwf	fsr2l,c
 28122  002934  0E01               	movlw	high (_display_content+60)
 28123  002936  20F4               	addwfc	prodh,w,c
 28124  002938  6EDA               	movwf	fsr2h,c
 28125  00293A  0008               	tblrd		*
 28126  00293C  CFF5 FFDF          	movff	tablat,indf2
 28127  002940  2A1D               	incf	__display_programming@cntr,f,c
 28128  002942                     l1655:
 28129  002942  501D               	movf	__display_programming@cntr,w,c
 28130  002944  0D01               	mullw	1
 28131  002946  0E78               	movlw	low _programming_line4
 28132  002948  24F3               	addwf	prodl,w,c
 28133  00294A  6EF6               	movwf	tblptrl,c
 28134  00294C  0E8D               	movlw	high _programming_line4
 28135  00294E  20F4               	addwfc	prodh,w,c
 28136  002950  6EF7               	movwf	tblptrh,c
 28137  002952                     	if	1	;There are 3 active tblptr bytes
 28138  002952  6AF8               	clrf	tblptru,c
 28139  002954  0E00               	movlw	low (__mediumconst shr (0+16))
 28140  002956  22F8               	addwfc	tblptru,f,c
 28141  002958                     	endif
 28142  002958  0008               	tblrd		*
 28143  00295A  50F5               	movf	tablat,w,c
 28144  00295C  0900               	iorlw	0
 28145  00295E  A4D8               	btfss	status,2,c
 28146  002960  D7D9               	goto	l1656
 28147                           
 28148                           ;display.c: 516: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28149  002962  EC03  F039         	call	_bootloader_get_flashPagesWritten	;wreg free
 28150  002966  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28151  00296A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28152  00296E  501D               	movf	__display_programming@cntr,w,c
 28153  002970  0D01               	mullw	1
 28154  002972  0EB4               	movlw	low (_display_content+60)
 28155  002974  24F3               	addwf	prodl,w,c
 28156  002976  6E1B               	movwf	__display_itoa_u16@text,c
 28157  002978  0E01               	movlw	high (_display_content+60)
 28158  00297A  20F4               	addwfc	prodh,w,c
 28159  00297C  6E1C               	movwf	__display_itoa_u16@text+1,c
 28160  00297E  ECCD  F027         	call	__display_itoa_u16	;wreg free
 28161  002982  0012               	return		;funcret
 28162  002984                     __end_of__display_programming:
 28163                           	opt stack 0
 28164                           tosu	equ	0xFFF
 28165                           tosh	equ	0xFFE
 28166                           tosl	equ	0xFFD
 28167                           pclath	equ	0xFFA
 28168                           tblptru	equ	0xFF8
 28169                           tblptrh	equ	0xFF7
 28170                           tblptrl	equ	0xFF6
 28171                           tablat	equ	0xFF5
 28172                           prodh	equ	0xFF4
 28173                           prodl	equ	0xFF3
 28174                           intcon	equ	0xFF2
 28175                           intcon2	equ	0xFF1
 28176                           intcon3	equ	0xFF0
 28177                           indf0	equ	0xFEF
 28178                           postinc0	equ	0xFEE
 28179                           fsr0h	equ	0xFEA
 28180                           fsr0l	equ	0xFE9
 28181                           wreg	equ	0xFE8
 28182                           indf1	equ	0xFE7
 28183                           postdec1	equ	0xFE5
 28184                           plusw1	equ	0xFE3
 28185                           fsr1h	equ	0xFE2
 28186                           fsr1l	equ	0xFE1
 28187                           indf2	equ	0xFDF
 28188                           postinc2	equ	0xFDE
 28189                           postdec2	equ	0xFDD
 28190                           plusw2	equ	0xFDB
 28191                           fsr2h	equ	0xFDA
 28192                           fsr2l	equ	0xFD9
 28193                           status	equ	0xFD8
 28194                           
 28195 ;; *************** function __display_found *****************
 28196 ;; Defined at:
 28197 ;;		line 380 in file "display.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;		None
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;  cntr            1   24[COMRAM] unsigned char 
 28202 ;;  start           1   23[COMRAM] unsigned char 
 28203 ;; Return value:  Size  Location     Type
 28204 ;;                  1    wreg      void 
 28205 ;; Registers used:
 28206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28207 ;; Tracked objects:
 28208 ;;		On entry : 0/0
 28209 ;;		On exit  : 0/0
 28210 ;;		Unchanged: 0/0
 28211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28214 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28215 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28216 ;;Total ram usage:        4 bytes
 28217 ;; Hardware stack levels used:    1
 28218 ;; Hardware stack levels required when called:    2
 28219 ;; This function calls:
 28220 ;;		__display_itoa_u32
 28221 ;;		_bootloader_get_file_size
 28222 ;; This function is called by:
 28223 ;;		_display_prepare
 28224 ;; This function uses a non-reentrant model
 28225 ;;
 28226                           
 28227                           	psect	text142
 28228  00222A                     __ptext142:
 28229                           	opt stack 0
 28230  00222A                     __display_found:
 28231                           	opt stack 24
 28232                           
 28233                           ;display.c: 382: uint8_t cntr;;display.c: 383: uint8_t start;;display.c: 385: cntr = 0;
 28234                           
 28235                           ;incstack = 0
 28236  00222A  0E00               	movlw	0
 28237  00222C  6E19               	movwf	__display_found@cntr,c
 28238                           
 28239                           ;display.c: 386: while(found_line1[cntr])
 28240  00222E  D017               	goto	l1567
 28241  002230                     
 28242                           ;display.c: 387: display_content[0][cntr] = found_line1[cntr++];
 28243  002230  5019               	movf	__display_found@cntr,w,c
 28244  002232  0D01               	mullw	1
 28245  002234  0EC8               	movlw	low _found_line1
 28246  002236  24F3               	addwf	prodl,w,c
 28247  002238  6EF6               	movwf	tblptrl,c
 28248  00223A  0E8D               	movlw	high _found_line1
 28249  00223C  20F4               	addwfc	prodh,w,c
 28250  00223E  6EF7               	movwf	tblptrh,c
 28251  002240                     	if	1	;There are 3 active tblptr bytes
 28252  002240  6AF8               	clrf	tblptru,c
 28253  002242  0E00               	movlw	low (__mediumconst shr (0+16))
 28254  002244  22F8               	addwfc	tblptru,f,c
 28255  002246                     	endif
 28256  002246  5019               	movf	__display_found@cntr,w,c
 28257  002248  0D01               	mullw	1
 28258  00224A  0E78               	movlw	low _display_content
 28259  00224C  24F3               	addwf	prodl,w,c
 28260  00224E  6ED9               	movwf	fsr2l,c
 28261  002250  0E01               	movlw	high _display_content
 28262  002252  20F4               	addwfc	prodh,w,c
 28263  002254  6EDA               	movwf	fsr2h,c
 28264  002256  0008               	tblrd		*
 28265  002258  CFF5 FFDF          	movff	tablat,indf2
 28266  00225C  2A19               	incf	__display_found@cntr,f,c
 28267  00225E                     l1567:
 28268  00225E  5019               	movf	__display_found@cntr,w,c
 28269  002260  0D01               	mullw	1
 28270  002262  0EC8               	movlw	low _found_line1
 28271  002264  24F3               	addwf	prodl,w,c
 28272  002266  6EF6               	movwf	tblptrl,c
 28273  002268  0E8D               	movlw	high _found_line1
 28274  00226A  20F4               	addwfc	prodh,w,c
 28275  00226C  6EF7               	movwf	tblptrh,c
 28276  00226E                     	if	1	;There are 3 active tblptr bytes
 28277  00226E  6AF8               	clrf	tblptru,c
 28278  002270  0E00               	movlw	low (__mediumconst shr (0+16))
 28279  002272  22F8               	addwfc	tblptru,f,c
 28280  002274                     	endif
 28281  002274  0008               	tblrd		*
 28282  002276  50F5               	movf	tablat,w,c
 28283  002278  0900               	iorlw	0
 28284  00227A  A4D8               	btfss	status,2,c
 28285  00227C  D7D9               	goto	l1568
 28286                           
 28287                           ;display.c: 389: cntr = 0;
 28288  00227E  0E00               	movlw	0
 28289  002280  6E19               	movwf	__display_found@cntr,c
 28290                           
 28291                           ;display.c: 390: while(found_line2[cntr])
 28292  002282  D017               	goto	l1570
 28293  002284                     
 28294                           ;display.c: 391: display_content[1][cntr] = found_line2[cntr++];
 28295  002284  5019               	movf	__display_found@cntr,w,c
 28296  002286  0D01               	mullw	1
 28297  002288  0EBD               	movlw	low _found_line2
 28298  00228A  24F3               	addwf	prodl,w,c
 28299  00228C  6EF6               	movwf	tblptrl,c
 28300  00228E  0E8C               	movlw	high _found_line2
 28301  002290  20F4               	addwfc	prodh,w,c
 28302  002292  6EF7               	movwf	tblptrh,c
 28303  002294                     	if	1	;There are 3 active tblptr bytes
 28304  002294  6AF8               	clrf	tblptru,c
 28305  002296  0E00               	movlw	low (__mediumconst shr (0+16))
 28306  002298  22F8               	addwfc	tblptru,f,c
 28307  00229A                     	endif
 28308  00229A  5019               	movf	__display_found@cntr,w,c
 28309  00229C  0D01               	mullw	1
 28310  00229E  0E8C               	movlw	low (_display_content+20)
 28311  0022A0  24F3               	addwf	prodl,w,c
 28312  0022A2  6ED9               	movwf	fsr2l,c
 28313  0022A4  0E01               	movlw	high (_display_content+20)
 28314  0022A6  20F4               	addwfc	prodh,w,c
 28315  0022A8  6EDA               	movwf	fsr2h,c
 28316  0022AA  0008               	tblrd		*
 28317  0022AC  CFF5 FFDF          	movff	tablat,indf2
 28318  0022B0  2A19               	incf	__display_found@cntr,f,c
 28319  0022B2                     l1570:
 28320  0022B2  5019               	movf	__display_found@cntr,w,c
 28321  0022B4  0D01               	mullw	1
 28322  0022B6  0EBD               	movlw	low _found_line2
 28323  0022B8  24F3               	addwf	prodl,w,c
 28324  0022BA  6EF6               	movwf	tblptrl,c
 28325  0022BC  0E8C               	movlw	high _found_line2
 28326  0022BE  20F4               	addwfc	prodh,w,c
 28327  0022C0  6EF7               	movwf	tblptrh,c
 28328  0022C2                     	if	1	;There are 3 active tblptr bytes
 28329  0022C2  6AF8               	clrf	tblptru,c
 28330  0022C4  0E00               	movlw	low (__mediumconst shr (0+16))
 28331  0022C6  22F8               	addwfc	tblptru,f,c
 28332  0022C8                     	endif
 28333  0022C8  0008               	tblrd		*
 28334  0022CA  50F5               	movf	tablat,w,c
 28335  0022CC  0900               	iorlw	0
 28336  0022CE  A4D8               	btfss	status,2,c
 28337  0022D0  D7D9               	goto	l1571
 28338                           
 28339                           ;display.c: 393: cntr = 0;
 28340  0022D2  0E00               	movlw	0
 28341  0022D4  6E19               	movwf	__display_found@cntr,c
 28342                           
 28343                           ;display.c: 394: while(found_line3[cntr])
 28344  0022D6  D017               	goto	l1573
 28345  0022D8                     
 28346                           ;display.c: 395: display_content[2][cntr] = found_line3[cntr++];
 28347  0022D8  5019               	movf	__display_found@cntr,w,c
 28348  0022DA  0D01               	mullw	1
 28349  0022DC  0E96               	movlw	low _found_line3
 28350  0022DE  24F3               	addwf	prodl,w,c
 28351  0022E0  6EF6               	movwf	tblptrl,c
 28352  0022E2  0E8E               	movlw	high _found_line3
 28353  0022E4  20F4               	addwfc	prodh,w,c
 28354  0022E6  6EF7               	movwf	tblptrh,c
 28355  0022E8                     	if	1	;There are 3 active tblptr bytes
 28356  0022E8  6AF8               	clrf	tblptru,c
 28357  0022EA  0E00               	movlw	low (__mediumconst shr (0+16))
 28358  0022EC  22F8               	addwfc	tblptru,f,c
 28359  0022EE                     	endif
 28360  0022EE  5019               	movf	__display_found@cntr,w,c
 28361  0022F0  0D01               	mullw	1
 28362  0022F2  0EA0               	movlw	low (_display_content+40)
 28363  0022F4  24F3               	addwf	prodl,w,c
 28364  0022F6  6ED9               	movwf	fsr2l,c
 28365  0022F8  0E01               	movlw	high (_display_content+40)
 28366  0022FA  20F4               	addwfc	prodh,w,c
 28367  0022FC  6EDA               	movwf	fsr2h,c
 28368  0022FE  0008               	tblrd		*
 28369  002300  CFF5 FFDF          	movff	tablat,indf2
 28370  002304  2A19               	incf	__display_found@cntr,f,c
 28371  002306                     l1573:
 28372  002306  5019               	movf	__display_found@cntr,w,c
 28373  002308  0D01               	mullw	1
 28374  00230A  0E96               	movlw	low _found_line3
 28375  00230C  24F3               	addwf	prodl,w,c
 28376  00230E  6EF6               	movwf	tblptrl,c
 28377  002310  0E8E               	movlw	high _found_line3
 28378  002312  20F4               	addwfc	prodh,w,c
 28379  002314  6EF7               	movwf	tblptrh,c
 28380  002316                     	if	1	;There are 3 active tblptr bytes
 28381  002316  6AF8               	clrf	tblptru,c
 28382  002318  0E00               	movlw	low (__mediumconst shr (0+16))
 28383  00231A  22F8               	addwfc	tblptru,f,c
 28384  00231C                     	endif
 28385  00231C  0008               	tblrd		*
 28386  00231E  50F5               	movf	tablat,w,c
 28387  002320  0900               	iorlw	0
 28388  002322  A4D8               	btfss	status,2,c
 28389  002324  D7D9               	goto	l1574
 28390                           
 28391                           ;display.c: 396: start = cntr;
 28392  002326  C019  F018         	movff	__display_found@cntr,__display_found@start
 28393                           
 28394                           ;display.c: 397: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28395  00232A  EC8B  F038         	call	_bootloader_get_file_size	;wreg free
 28396  00232E  C001  F00E         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28397  002332  C002  F00F         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28398  002336  C003  F010         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28399  00233A  C004  F011         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28400  00233E  5019               	movf	__display_found@cntr,w,c
 28401  002340  0D01               	mullw	1
 28402  002342  0EA0               	movlw	low (_display_content+40)
 28403  002344  24F3               	addwf	prodl,w,c
 28404  002346  6E12               	movwf	__display_itoa_u32@text,c
 28405  002348  0E01               	movlw	high (_display_content+40)
 28406  00234A  20F4               	addwfc	prodh,w,c
 28407  00234C  6E13               	movwf	__display_itoa_u32@text+1,c
 28408  00234E  ECBD  F017         	call	__display_itoa_u32	;wreg free
 28409  002352  2618               	addwf	__display_found@start,f,c
 28410                           
 28411                           ;display.c: 398: cntr = 0;
 28412  002354  0E00               	movlw	0
 28413  002356  6E19               	movwf	__display_found@cntr,c
 28414                           
 28415                           ;display.c: 399: while(found_line3b[cntr])
 28416  002358  D01C               	goto	l1576
 28417  00235A                     
 28418                           ;display.c: 400: display_content[2][start+cntr] = found_line3b[cntr++];
 28419  00235A  5019               	movf	__display_found@cntr,w,c
 28420  00235C  0D01               	mullw	1
 28421  00235E  0E8F               	movlw	low _found_line3b
 28422  002360  24F3               	addwf	prodl,w,c
 28423  002362  6EF6               	movwf	tblptrl,c
 28424  002364  0E8E               	movlw	high _found_line3b
 28425  002366  20F4               	addwfc	prodh,w,c
 28426  002368  6EF7               	movwf	tblptrh,c
 28427  00236A                     	if	1	;There are 3 active tblptr bytes
 28428  00236A  6AF8               	clrf	tblptru,c
 28429  00236C  0E00               	movlw	low (__mediumconst shr (0+16))
 28430  00236E  22F8               	addwfc	tblptru,f,c
 28431  002370                     	endif
 28432  002370  5019               	movf	__display_found@cntr,w,c
 28433  002372  C018  F016         	movff	__display_found@start,??__display_found
 28434  002376  6A17               	clrf	(??__display_found+1)& (0+255),c
 28435  002378  2616               	addwf	??__display_found,f,c
 28436  00237A  0E00               	movlw	0
 28437  00237C  2217               	addwfc	??__display_found+1,f,c
 28438  00237E  0EA0               	movlw	low (_display_content+40)
 28439  002380  2416               	addwf	??__display_found,w,c
 28440  002382  6ED9               	movwf	fsr2l,c
 28441  002384  0E01               	movlw	high (_display_content+40)
 28442  002386  2017               	addwfc	??__display_found+1,w,c
 28443  002388  6EDA               	movwf	fsr2h,c
 28444  00238A  0008               	tblrd		*
 28445  00238C  CFF5 FFDF          	movff	tablat,indf2
 28446  002390  2A19               	incf	__display_found@cntr,f,c
 28447  002392                     l1576:
 28448  002392  5019               	movf	__display_found@cntr,w,c
 28449  002394  0D01               	mullw	1
 28450  002396  0E8F               	movlw	low _found_line3b
 28451  002398  24F3               	addwf	prodl,w,c
 28452  00239A  6EF6               	movwf	tblptrl,c
 28453  00239C  0E8E               	movlw	high _found_line3b
 28454  00239E  20F4               	addwfc	prodh,w,c
 28455  0023A0  6EF7               	movwf	tblptrh,c
 28456  0023A2                     	if	1	;There are 3 active tblptr bytes
 28457  0023A2  6AF8               	clrf	tblptru,c
 28458  0023A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28459  0023A6  22F8               	addwfc	tblptru,f,c
 28460  0023A8                     	endif
 28461  0023A8  0008               	tblrd		*
 28462  0023AA  50F5               	movf	tablat,w,c
 28463  0023AC  0900               	iorlw	0
 28464  0023AE  A4D8               	btfss	status,2,c
 28465  0023B0  D7D4               	goto	l1577
 28466                           
 28467                           ;display.c: 402: cntr = 0;
 28468  0023B2  0E00               	movlw	0
 28469  0023B4  6E19               	movwf	__display_found@cntr,c
 28470                           
 28471                           ;display.c: 403: while(found_line4[cntr])
 28472  0023B6  D017               	goto	l1579
 28473  0023B8                     
 28474                           ;display.c: 404: display_content[3][cntr] = found_line4[cntr++];
 28475  0023B8  5019               	movf	__display_found@cntr,w,c
 28476  0023BA  0D01               	mullw	1
 28477  0023BC  0EF4               	movlw	low _found_line4
 28478  0023BE  24F3               	addwf	prodl,w,c
 28479  0023C0  6EF6               	movwf	tblptrl,c
 28480  0023C2  0E8C               	movlw	high _found_line4
 28481  0023C4  20F4               	addwfc	prodh,w,c
 28482  0023C6  6EF7               	movwf	tblptrh,c
 28483  0023C8                     	if	1	;There are 3 active tblptr bytes
 28484  0023C8  6AF8               	clrf	tblptru,c
 28485  0023CA  0E00               	movlw	low (__mediumconst shr (0+16))
 28486  0023CC  22F8               	addwfc	tblptru,f,c
 28487  0023CE                     	endif
 28488  0023CE  5019               	movf	__display_found@cntr,w,c
 28489  0023D0  0D01               	mullw	1
 28490  0023D2  0EB4               	movlw	low (_display_content+60)
 28491  0023D4  24F3               	addwf	prodl,w,c
 28492  0023D6  6ED9               	movwf	fsr2l,c
 28493  0023D8  0E01               	movlw	high (_display_content+60)
 28494  0023DA  20F4               	addwfc	prodh,w,c
 28495  0023DC  6EDA               	movwf	fsr2h,c
 28496  0023DE  0008               	tblrd		*
 28497  0023E0  CFF5 FFDF          	movff	tablat,indf2
 28498  0023E4  2A19               	incf	__display_found@cntr,f,c
 28499  0023E6                     l1579:
 28500  0023E6  5019               	movf	__display_found@cntr,w,c
 28501  0023E8  0D01               	mullw	1
 28502  0023EA  0EF4               	movlw	low _found_line4
 28503  0023EC  24F3               	addwf	prodl,w,c
 28504  0023EE  6EF6               	movwf	tblptrl,c
 28505  0023F0  0E8C               	movlw	high _found_line4
 28506  0023F2  20F4               	addwfc	prodh,w,c
 28507  0023F4  6EF7               	movwf	tblptrh,c
 28508  0023F6                     	if	1	;There are 3 active tblptr bytes
 28509  0023F6  6AF8               	clrf	tblptru,c
 28510  0023F8  0E00               	movlw	low (__mediumconst shr (0+16))
 28511  0023FA  22F8               	addwfc	tblptru,f,c
 28512  0023FC                     	endif
 28513  0023FC  0008               	tblrd		*
 28514  0023FE  50F5               	movf	tablat,w,c
 28515  002400  0900               	iorlw	0
 28516  002402  B4D8               	btfsc	status,2,c
 28517  002404  0012               	return	
 28518  002406  D7D8               	goto	l1580
 28519  002408                     __end_of__display_found:
 28520                           	opt stack 0
 28521                           tosu	equ	0xFFF
 28522                           tosh	equ	0xFFE
 28523                           tosl	equ	0xFFD
 28524                           pclath	equ	0xFFA
 28525                           tblptru	equ	0xFF8
 28526                           tblptrh	equ	0xFF7
 28527                           tblptrl	equ	0xFF6
 28528                           tablat	equ	0xFF5
 28529                           prodh	equ	0xFF4
 28530                           prodl	equ	0xFF3
 28531                           intcon	equ	0xFF2
 28532                           intcon2	equ	0xFF1
 28533                           intcon3	equ	0xFF0
 28534                           indf0	equ	0xFEF
 28535                           postinc0	equ	0xFEE
 28536                           fsr0h	equ	0xFEA
 28537                           fsr0l	equ	0xFE9
 28538                           wreg	equ	0xFE8
 28539                           indf1	equ	0xFE7
 28540                           postdec1	equ	0xFE5
 28541                           plusw1	equ	0xFE3
 28542                           fsr1h	equ	0xFE2
 28543                           fsr1l	equ	0xFE1
 28544                           indf2	equ	0xFDF
 28545                           postinc2	equ	0xFDE
 28546                           postdec2	equ	0xFDD
 28547                           plusw2	equ	0xFDB
 28548                           fsr2h	equ	0xFDA
 28549                           fsr2l	equ	0xFD9
 28550                           status	equ	0xFD8
 28551                           
 28552 ;; *************** function _bootloader_get_file_size *****************
 28553 ;; Defined at:
 28554 ;;		line 463 in file "bootloader.c"
 28555 ;; Parameters:    Size  Location     Type
 28556 ;;		None
 28557 ;; Auto vars:     Size  Location     Type
 28558 ;;		None
 28559 ;; Return value:  Size  Location     Type
 28560 ;;                  4    0[COMRAM] unsigned long 
 28561 ;; Registers used:
 28562 ;;		None
 28563 ;; Tracked objects:
 28564 ;;		On entry : 0/0
 28565 ;;		On exit  : 0/0
 28566 ;;		Unchanged: 0/0
 28567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28572 ;;Total ram usage:        4 bytes
 28573 ;; Hardware stack levels used:    1
 28574 ;; This function calls:
 28575 ;;		Nothing
 28576 ;; This function is called by:
 28577 ;;		__display_found
 28578 ;;		__fill_buffer_get_bootloader_details
 28579 ;; This function uses a non-reentrant model
 28580 ;;
 28581                           
 28582                           	psect	text143
 28583  007116                     __ptext143:
 28584                           	opt stack 0
 28585  007116                     _bootloader_get_file_size:
 28586                           	opt stack 25
 28587                           
 28588                           ;bootloader.c: 465: return hex_file_size;
 28589                           
 28590                           ;incstack = 0
 28591  007116  C07F  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28592  00711A  C080  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28593  00711E  C081  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28594  007122  C082  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28595  007126  0012               	return		;funcret
 28596  007128                     __end_of_bootloader_get_file_size:
 28597                           	opt stack 0
 28598                           tosu	equ	0xFFF
 28599                           tosh	equ	0xFFE
 28600                           tosl	equ	0xFFD
 28601                           pclath	equ	0xFFA
 28602                           tblptru	equ	0xFF8
 28603                           tblptrh	equ	0xFF7
 28604                           tblptrl	equ	0xFF6
 28605                           tablat	equ	0xFF5
 28606                           prodh	equ	0xFF4
 28607                           prodl	equ	0xFF3
 28608                           intcon	equ	0xFF2
 28609                           intcon2	equ	0xFF1
 28610                           intcon3	equ	0xFF0
 28611                           indf0	equ	0xFEF
 28612                           postinc0	equ	0xFEE
 28613                           fsr0h	equ	0xFEA
 28614                           fsr0l	equ	0xFE9
 28615                           wreg	equ	0xFE8
 28616                           indf1	equ	0xFE7
 28617                           postdec1	equ	0xFE5
 28618                           plusw1	equ	0xFE3
 28619                           fsr1h	equ	0xFE2
 28620                           fsr1l	equ	0xFE1
 28621                           indf2	equ	0xFDF
 28622                           postinc2	equ	0xFDE
 28623                           postdec2	equ	0xFDD
 28624                           plusw2	equ	0xFDB
 28625                           fsr2h	equ	0xFDA
 28626                           fsr2l	equ	0xFD9
 28627                           status	equ	0xFD8
 28628                           
 28629 ;; *************** function __display_failed *****************
 28630 ;; Defined at:
 28631 ;;		line 445 in file "display.c"
 28632 ;; Parameters:    Size  Location     Type
 28633 ;;		None
 28634 ;; Auto vars:     Size  Location     Type
 28635 ;;  cntr            1   28[COMRAM] unsigned char 
 28636 ;;  start           1    0        unsigned char 
 28637 ;; Return value:  Size  Location     Type
 28638 ;;                  1    wreg      void 
 28639 ;; Registers used:
 28640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28641 ;; Tracked objects:
 28642 ;;		On entry : 0/0
 28643 ;;		On exit  : 0/0
 28644 ;;		Unchanged: 0/0
 28645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28650 ;;Total ram usage:        1 bytes
 28651 ;; Hardware stack levels used:    1
 28652 ;; Hardware stack levels required when called:    4
 28653 ;; This function calls:
 28654 ;;		__display_itoa_u16
 28655 ;;		__display_itoa_u32
 28656 ;;		_bootloader_get_entries
 28657 ;;		_bootloader_get_error
 28658 ;;		_bootloader_get_rec_address
 28659 ;; This function is called by:
 28660 ;;		_display_prepare
 28661 ;; This function uses a non-reentrant model
 28662 ;;
 28663                           
 28664                           	psect	text144
 28665  000F2C                     __ptext144:
 28666                           	opt stack 0
 28667  000F2C                     __display_failed:
 28668                           	opt stack 22
 28669                           
 28670                           ;display.c: 447: uint8_t cntr;;display.c: 448: uint8_t start;;display.c: 449: cntr = 0;
 28671                           
 28672                           ;incstack = 0
 28673  000F2C  0E00               	movlw	0
 28674  000F2E  6E1D               	movwf	__display_failed@cntr,c
 28675                           
 28676                           ;display.c: 450: while(failed_line1[cntr])
 28677  000F30  D017               	goto	l1612
 28678  000F32                     
 28679                           ;display.c: 451: display_content[0][cntr] = failed_line1[cntr++];
 28680  000F32  501D               	movf	__display_failed@cntr,w,c
 28681  000F34  0D01               	mullw	1
 28682  000F36  0E98               	movlw	low _failed_line1
 28683  000F38  24F3               	addwf	prodl,w,c
 28684  000F3A  6EF6               	movwf	tblptrl,c
 28685  000F3C  0E8D               	movlw	high _failed_line1
 28686  000F3E  20F4               	addwfc	prodh,w,c
 28687  000F40  6EF7               	movwf	tblptrh,c
 28688  000F42                     	if	1	;There are 3 active tblptr bytes
 28689  000F42  6AF8               	clrf	tblptru,c
 28690  000F44  0E00               	movlw	low (__mediumconst shr (0+16))
 28691  000F46  22F8               	addwfc	tblptru,f,c
 28692  000F48                     	endif
 28693  000F48  501D               	movf	__display_failed@cntr,w,c
 28694  000F4A  0D01               	mullw	1
 28695  000F4C  0E78               	movlw	low _display_content
 28696  000F4E  24F3               	addwf	prodl,w,c
 28697  000F50  6ED9               	movwf	fsr2l,c
 28698  000F52  0E01               	movlw	high _display_content
 28699  000F54  20F4               	addwfc	prodh,w,c
 28700  000F56  6EDA               	movwf	fsr2h,c
 28701  000F58  0008               	tblrd		*
 28702  000F5A  CFF5 FFDF          	movff	tablat,indf2
 28703  000F5E  2A1D               	incf	__display_failed@cntr,f,c
 28704  000F60                     l1612:
 28705  000F60  501D               	movf	__display_failed@cntr,w,c
 28706  000F62  0D01               	mullw	1
 28707  000F64  0E98               	movlw	low _failed_line1
 28708  000F66  24F3               	addwf	prodl,w,c
 28709  000F68  6EF6               	movwf	tblptrl,c
 28710  000F6A  0E8D               	movlw	high _failed_line1
 28711  000F6C  20F4               	addwfc	prodh,w,c
 28712  000F6E  6EF7               	movwf	tblptrh,c
 28713  000F70                     	if	1	;There are 3 active tblptr bytes
 28714  000F70  6AF8               	clrf	tblptru,c
 28715  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 28716  000F74  22F8               	addwfc	tblptru,f,c
 28717  000F76                     	endif
 28718  000F76  0008               	tblrd		*
 28719  000F78  50F5               	movf	tablat,w,c
 28720  000F7A  0900               	iorlw	0
 28721  000F7C  A4D8               	btfss	status,2,c
 28722  000F7E  D7D9               	goto	l1613
 28723                           
 28724                           ;display.c: 452: cntr = 0;
 28725  000F80  0E00               	movlw	0
 28726  000F82  6E1D               	movwf	__display_failed@cntr,c
 28727                           
 28728                           ;display.c: 453: while(failed_line2[cntr])
 28729  000F84  D017               	goto	l1615
 28730  000F86                     
 28731                           ;display.c: 454: display_content[1][cntr] = failed_line2[cntr++];
 28732  000F86  501D               	movf	__display_failed@cntr,w,c
 28733  000F88  0D01               	mullw	1
 28734  000F8A  0EE2               	movlw	low _failed_line2
 28735  000F8C  24F3               	addwf	prodl,w,c
 28736  000F8E  6EF6               	movwf	tblptrl,c
 28737  000F90  0E8C               	movlw	high _failed_line2
 28738  000F92  20F4               	addwfc	prodh,w,c
 28739  000F94  6EF7               	movwf	tblptrh,c
 28740  000F96                     	if	1	;There are 3 active tblptr bytes
 28741  000F96  6AF8               	clrf	tblptru,c
 28742  000F98  0E00               	movlw	low (__mediumconst shr (0+16))
 28743  000F9A  22F8               	addwfc	tblptru,f,c
 28744  000F9C                     	endif
 28745  000F9C  501D               	movf	__display_failed@cntr,w,c
 28746  000F9E  0D01               	mullw	1
 28747  000FA0  0E8C               	movlw	low (_display_content+20)
 28748  000FA2  24F3               	addwf	prodl,w,c
 28749  000FA4  6ED9               	movwf	fsr2l,c
 28750  000FA6  0E01               	movlw	high (_display_content+20)
 28751  000FA8  20F4               	addwfc	prodh,w,c
 28752  000FAA  6EDA               	movwf	fsr2h,c
 28753  000FAC  0008               	tblrd		*
 28754  000FAE  CFF5 FFDF          	movff	tablat,indf2
 28755  000FB2  2A1D               	incf	__display_failed@cntr,f,c
 28756  000FB4                     l1615:
 28757  000FB4  501D               	movf	__display_failed@cntr,w,c
 28758  000FB6  0D01               	mullw	1
 28759  000FB8  0EE2               	movlw	low _failed_line2
 28760  000FBA  24F3               	addwf	prodl,w,c
 28761  000FBC  6EF6               	movwf	tblptrl,c
 28762  000FBE  0E8C               	movlw	high _failed_line2
 28763  000FC0  20F4               	addwfc	prodh,w,c
 28764  000FC2  6EF7               	movwf	tblptrh,c
 28765  000FC4                     	if	1	;There are 3 active tblptr bytes
 28766  000FC4  6AF8               	clrf	tblptru,c
 28767  000FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 28768  000FC8  22F8               	addwfc	tblptru,f,c
 28769  000FCA                     	endif
 28770  000FCA  0008               	tblrd		*
 28771  000FCC  50F5               	movf	tablat,w,c
 28772  000FCE  0900               	iorlw	0
 28773  000FD0  A4D8               	btfss	status,2,c
 28774  000FD2  D7D9               	goto	l1616
 28775                           
 28776                           ;display.c: 456: cntr = 0;
 28777  000FD4  0E00               	movlw	0
 28778  000FD6  6E1D               	movwf	__display_failed@cntr,c
 28779                           
 28780                           ;display.c: 457: switch(bootloader_get_error())
 28781  000FD8  D0D6               	goto	l1618
 28782  000FDA                     
 28783                           ;display.c: 461: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28784  000FDA  501D               	movf	__display_failed@cntr,w,c
 28785  000FDC  0D01               	mullw	1
 28786  000FDE  0EAA               	movlw	low _failed_line3_startCode
 28787  000FE0  24F3               	addwf	prodl,w,c
 28788  000FE2  6EF6               	movwf	tblptrl,c
 28789  000FE4  0E8C               	movlw	high _failed_line3_startCode
 28790  000FE6  20F4               	addwfc	prodh,w,c
 28791  000FE8  6EF7               	movwf	tblptrh,c
 28792  000FEA                     	if	1	;There are 3 active tblptr bytes
 28793  000FEA  6AF8               	clrf	tblptru,c
 28794  000FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 28795  000FEE  22F8               	addwfc	tblptru,f,c
 28796  000FF0                     	endif
 28797  000FF0  501D               	movf	__display_failed@cntr,w,c
 28798  000FF2  0D01               	mullw	1
 28799  000FF4  0EA0               	movlw	low (_display_content+40)
 28800  000FF6  24F3               	addwf	prodl,w,c
 28801  000FF8  6ED9               	movwf	fsr2l,c
 28802  000FFA  0E01               	movlw	high (_display_content+40)
 28803  000FFC  20F4               	addwfc	prodh,w,c
 28804  000FFE  6EDA               	movwf	fsr2h,c
 28805  001000  0008               	tblrd		*
 28806  001002  CFF5 FFDF          	movff	tablat,indf2
 28807  001006  2A1D               	incf	__display_failed@cntr,f,c
 28808  001008  501D               	movf	__display_failed@cntr,w,c
 28809  00100A  0D01               	mullw	1
 28810  00100C  0EAA               	movlw	low _failed_line3_startCode
 28811  00100E  24F3               	addwf	prodl,w,c
 28812  001010  6EF6               	movwf	tblptrl,c
 28813  001012  0E8C               	movlw	high _failed_line3_startCode
 28814  001014  20F4               	addwfc	prodh,w,c
 28815  001016  6EF7               	movwf	tblptrh,c
 28816  001018                     	if	1	;There are 3 active tblptr bytes
 28817  001018  6AF8               	clrf	tblptru,c
 28818  00101A  0E00               	movlw	low (__mediumconst shr (0+16))
 28819  00101C  22F8               	addwfc	tblptru,f,c
 28820  00101E                     	endif
 28821  00101E  0008               	tblrd		*
 28822  001020  50F5               	movf	tablat,w,c
 28823  001022  0900               	iorlw	0
 28824  001024  B4D8               	btfsc	status,2,c
 28825  001026  D0C0               	goto	l1623
 28826  001028  D7D8               	goto	l1621
 28827  00102A                     
 28828                           ;display.c: 466: display_content[2][cntr] = failed_line3_checksum[cntr++];
 28829  00102A  501D               	movf	__display_failed@cntr,w,c
 28830  00102C  0D01               	mullw	1
 28831  00102E  0EF8               	movlw	low _failed_line3_checksum
 28832  001030  24F3               	addwf	prodl,w,c
 28833  001032  6EF6               	movwf	tblptrl,c
 28834  001034  0E8D               	movlw	high _failed_line3_checksum
 28835  001036  20F4               	addwfc	prodh,w,c
 28836  001038  6EF7               	movwf	tblptrh,c
 28837  00103A                     	if	1	;There are 3 active tblptr bytes
 28838  00103A  6AF8               	clrf	tblptru,c
 28839  00103C  0E00               	movlw	low (__mediumconst shr (0+16))
 28840  00103E  22F8               	addwfc	tblptru,f,c
 28841  001040                     	endif
 28842  001040  501D               	movf	__display_failed@cntr,w,c
 28843  001042  0D01               	mullw	1
 28844  001044  0EA0               	movlw	low (_display_content+40)
 28845  001046  24F3               	addwf	prodl,w,c
 28846  001048  6ED9               	movwf	fsr2l,c
 28847  00104A  0E01               	movlw	high (_display_content+40)
 28848  00104C  20F4               	addwfc	prodh,w,c
 28849  00104E  6EDA               	movwf	fsr2h,c
 28850  001050  0008               	tblrd		*
 28851  001052  CFF5 FFDF          	movff	tablat,indf2
 28852  001056  2A1D               	incf	__display_failed@cntr,f,c
 28853  001058  501D               	movf	__display_failed@cntr,w,c
 28854  00105A  0D01               	mullw	1
 28855  00105C  0EF8               	movlw	low _failed_line3_checksum
 28856  00105E  24F3               	addwf	prodl,w,c
 28857  001060  6EF6               	movwf	tblptrl,c
 28858  001062  0E8D               	movlw	high _failed_line3_checksum
 28859  001064  20F4               	addwfc	prodh,w,c
 28860  001066  6EF7               	movwf	tblptrh,c
 28861  001068                     	if	1	;There are 3 active tblptr bytes
 28862  001068  6AF8               	clrf	tblptru,c
 28863  00106A  0E00               	movlw	low (__mediumconst shr (0+16))
 28864  00106C  22F8               	addwfc	tblptru,f,c
 28865  00106E                     	endif
 28866  00106E  0008               	tblrd		*
 28867  001070  50F5               	movf	tablat,w,c
 28868  001072  0900               	iorlw	0
 28869  001074  B4D8               	btfsc	status,2,c
 28870  001076  D098               	goto	l1623
 28871  001078  D7D8               	goto	l1626
 28872  00107A                     
 28873                           ;display.c: 473: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 28874  00107A  501D               	movf	__display_failed@cntr,w,c
 28875  00107C  0D01               	mullw	1
 28876  00107E  0E07               	movlw	low _failed_line3_noNextRecord
 28877  001080  24F3               	addwf	prodl,w,c
 28878  001082  6EF6               	movwf	tblptrl,c
 28879  001084  0E8E               	movlw	high _failed_line3_noNextRecord
 28880  001086  20F4               	addwfc	prodh,w,c
 28881  001088  6EF7               	movwf	tblptrh,c
 28882  00108A                     	if	1	;There are 3 active tblptr bytes
 28883  00108A  6AF8               	clrf	tblptru,c
 28884  00108C  0E00               	movlw	low (__mediumconst shr (0+16))
 28885  00108E  22F8               	addwfc	tblptru,f,c
 28886  001090                     	endif
 28887  001090  501D               	movf	__display_failed@cntr,w,c
 28888  001092  0D01               	mullw	1
 28889  001094  0EA0               	movlw	low (_display_content+40)
 28890  001096  24F3               	addwf	prodl,w,c
 28891  001098  6ED9               	movwf	fsr2l,c
 28892  00109A  0E01               	movlw	high (_display_content+40)
 28893  00109C  20F4               	addwfc	prodh,w,c
 28894  00109E  6EDA               	movwf	fsr2h,c
 28895  0010A0  0008               	tblrd		*
 28896  0010A2  CFF5 FFDF          	movff	tablat,indf2
 28897  0010A6  2A1D               	incf	__display_failed@cntr,f,c
 28898  0010A8  501D               	movf	__display_failed@cntr,w,c
 28899  0010AA  0D01               	mullw	1
 28900  0010AC  0E07               	movlw	low _failed_line3_noNextRecord
 28901  0010AE  24F3               	addwf	prodl,w,c
 28902  0010B0  6EF6               	movwf	tblptrl,c
 28903  0010B2  0E8E               	movlw	high _failed_line3_noNextRecord
 28904  0010B4  20F4               	addwfc	prodh,w,c
 28905  0010B6  6EF7               	movwf	tblptrh,c
 28906  0010B8                     	if	1	;There are 3 active tblptr bytes
 28907  0010B8  6AF8               	clrf	tblptru,c
 28908  0010BA  0E00               	movlw	low (__mediumconst shr (0+16))
 28909  0010BC  22F8               	addwfc	tblptru,f,c
 28910  0010BE                     	endif
 28911  0010BE  0008               	tblrd		*
 28912  0010C0  50F5               	movf	tablat,w,c
 28913  0010C2  0900               	iorlw	0
 28914  0010C4  B4D8               	btfsc	status,2,c
 28915  0010C6  D070               	goto	l1623
 28916  0010C8  D7D8               	goto	l1630
 28917  0010CA                     
 28918                           ;display.c: 478: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 28919  0010CA  501D               	movf	__display_failed@cntr,w,c
 28920  0010CC  0D01               	mullw	1
 28921  0010CE  0E25               	movlw	low _failed_line3_dataTooLong
 28922  0010D0  24F3               	addwf	prodl,w,c
 28923  0010D2  6EF6               	movwf	tblptrl,c
 28924  0010D4  0E8E               	movlw	high _failed_line3_dataTooLong
 28925  0010D6  20F4               	addwfc	prodh,w,c
 28926  0010D8  6EF7               	movwf	tblptrh,c
 28927  0010DA                     	if	1	;There are 3 active tblptr bytes
 28928  0010DA  6AF8               	clrf	tblptru,c
 28929  0010DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28930  0010DE  22F8               	addwfc	tblptru,f,c
 28931  0010E0                     	endif
 28932  0010E0  501D               	movf	__display_failed@cntr,w,c
 28933  0010E2  0D01               	mullw	1
 28934  0010E4  0EA0               	movlw	low (_display_content+40)
 28935  0010E6  24F3               	addwf	prodl,w,c
 28936  0010E8  6ED9               	movwf	fsr2l,c
 28937  0010EA  0E01               	movlw	high (_display_content+40)
 28938  0010EC  20F4               	addwfc	prodh,w,c
 28939  0010EE  6EDA               	movwf	fsr2h,c
 28940  0010F0  0008               	tblrd		*
 28941  0010F2  CFF5 FFDF          	movff	tablat,indf2
 28942  0010F6  2A1D               	incf	__display_failed@cntr,f,c
 28943  0010F8  501D               	movf	__display_failed@cntr,w,c
 28944  0010FA  0D01               	mullw	1
 28945  0010FC  0E25               	movlw	low _failed_line3_dataTooLong
 28946  0010FE  24F3               	addwf	prodl,w,c
 28947  001100  6EF6               	movwf	tblptrl,c
 28948  001102  0E8E               	movlw	high _failed_line3_dataTooLong
 28949  001104  20F4               	addwfc	prodh,w,c
 28950  001106  6EF7               	movwf	tblptrh,c
 28951  001108                     	if	1	;There are 3 active tblptr bytes
 28952  001108  6AF8               	clrf	tblptru,c
 28953  00110A  0E00               	movlw	low (__mediumconst shr (0+16))
 28954  00110C  22F8               	addwfc	tblptru,f,c
 28955  00110E                     	endif
 28956  00110E  0008               	tblrd		*
 28957  001110  50F5               	movf	tablat,w,c
 28958  001112  0900               	iorlw	0
 28959  001114  B4D8               	btfsc	status,2,c
 28960  001116  D048               	goto	l1623
 28961  001118  D7D8               	goto	l1634
 28962  00111A                     
 28963                           ;display.c: 483: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 28964  00111A  501D               	movf	__display_failed@cntr,w,c
 28965  00111C  0D01               	mullw	1
 28966  00111E  0E82               	movlw	low _failed_line3_addressRange
 28967  001120  24F3               	addwf	prodl,w,c
 28968  001122  6EF6               	movwf	tblptrl,c
 28969  001124  0E8C               	movlw	high _failed_line3_addressRange
 28970  001126  20F4               	addwfc	prodh,w,c
 28971  001128  6EF7               	movwf	tblptrh,c
 28972  00112A                     	if	1	;There are 3 active tblptr bytes
 28973  00112A  6AF8               	clrf	tblptru,c
 28974  00112C  0E00               	movlw	low (__mediumconst shr (0+16))
 28975  00112E  22F8               	addwfc	tblptru,f,c
 28976  001130                     	endif
 28977  001130  501D               	movf	__display_failed@cntr,w,c
 28978  001132  0D01               	mullw	1
 28979  001134  0EA0               	movlw	low (_display_content+40)
 28980  001136  24F3               	addwf	prodl,w,c
 28981  001138  6ED9               	movwf	fsr2l,c
 28982  00113A  0E01               	movlw	high (_display_content+40)
 28983  00113C  20F4               	addwfc	prodh,w,c
 28984  00113E  6EDA               	movwf	fsr2h,c
 28985  001140  0008               	tblrd		*
 28986  001142  CFF5 FFDF          	movff	tablat,indf2
 28987  001146  2A1D               	incf	__display_failed@cntr,f,c
 28988  001148  501D               	movf	__display_failed@cntr,w,c
 28989  00114A  0D01               	mullw	1
 28990  00114C  0E82               	movlw	low _failed_line3_addressRange
 28991  00114E  24F3               	addwf	prodl,w,c
 28992  001150  6EF6               	movwf	tblptrl,c
 28993  001152  0E8C               	movlw	high _failed_line3_addressRange
 28994  001154  20F4               	addwfc	prodh,w,c
 28995  001156  6EF7               	movwf	tblptrh,c
 28996  001158                     	if	1	;There are 3 active tblptr bytes
 28997  001158  6AF8               	clrf	tblptru,c
 28998  00115A  0E00               	movlw	low (__mediumconst shr (0+16))
 28999  00115C  22F8               	addwfc	tblptru,f,c
 29000  00115E                     	endif
 29001  00115E  0008               	tblrd		*
 29002  001160  50F5               	movf	tablat,w,c
 29003  001162  0900               	iorlw	0
 29004  001164  A4D8               	btfss	status,2,c
 29005  001166  D7D9               	goto	l1638
 29006                           
 29007                           ;display.c: 484: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29008  001168  ECF9  F038         	call	_bootloader_get_rec_address	;wreg free
 29009  00116C  C001  F00E         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29010  001170  C002  F00F         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29011  001174  6A10               	clrf	__display_itoa_u32@value+2,c
 29012  001176  6A11               	clrf	__display_itoa_u32@value+3,c
 29013  001178  0EC2               	movlw	low (_display_content+74)
 29014  00117A  6E12               	movwf	__display_itoa_u32@text,c
 29015  00117C  0E01               	movlw	high (_display_content+74)
 29016  00117E  6E13               	movwf	__display_itoa_u32@text+1,c
 29017  001180  ECBD  F017         	call	__display_itoa_u32	;wreg free
 29018                           
 29019                           ;display.c: 487: }
 29020                           
 29021                           ;display.c: 485: break;
 29022  001184  D011               	goto	l1623
 29023  001186                     l1618:
 29024  001186  EC28  F039         	call	_bootloader_get_error	;wreg free
 29025                           
 29026                           ; Switch size 1, requested type "space"
 29027                           ; Number of cases is 5, Range of values is 11 to 15
 29028                           ; switch strategies available:
 29029                           ; Name         Instructions Cycles
 29030                           ; simple_byte           16     9 (average)
 29031                           ;	Chosen strategy is simple_byte
 29032  00118A  0A0B               	xorlw	11	; case 11
 29033  00118C  B4D8               	btfsc	status,2,c
 29034  00118E  D7DC               	goto	l1637
 29035  001190  0A07               	xorlw	7	; case 12
 29036  001192  B4D8               	btfsc	status,2,c
 29037  001194  D7B1               	goto	l1633
 29038  001196  0A01               	xorlw	1	; case 13
 29039  001198  B4D8               	btfsc	status,2,c
 29040  00119A  D786               	goto	l1629
 29041  00119C  0A03               	xorlw	3	; case 14
 29042  00119E  B4D8               	btfsc	status,2,c
 29043  0011A0  D75B               	goto	l1625
 29044  0011A2  0A01               	xorlw	1	; case 15
 29045  0011A4  B4D8               	btfsc	status,2,c
 29046  0011A6  D730               	goto	l1620
 29047  0011A8                     l1623:
 29048                           
 29049                           ;display.c: 489: cntr = 0;
 29050  0011A8  0E00               	movlw	0
 29051  0011AA  6E1D               	movwf	__display_failed@cntr,c
 29052                           
 29053                           ;display.c: 490: while(failed_line4[cntr])
 29054  0011AC  D017               	goto	l1640
 29055  0011AE                     
 29056                           ;display.c: 491: display_content[3][cntr] = failed_line4[cntr++];
 29057  0011AE  501D               	movf	__display_failed@cntr,w,c
 29058  0011B0  0D01               	mullw	1
 29059  0011B2  0E69               	movlw	low _failed_line4
 29060  0011B4  24F3               	addwf	prodl,w,c
 29061  0011B6  6EF6               	movwf	tblptrl,c
 29062  0011B8  0E8E               	movlw	high _failed_line4
 29063  0011BA  20F4               	addwfc	prodh,w,c
 29064  0011BC  6EF7               	movwf	tblptrh,c
 29065  0011BE                     	if	1	;There are 3 active tblptr bytes
 29066  0011BE  6AF8               	clrf	tblptru,c
 29067  0011C0  0E00               	movlw	low (__mediumconst shr (0+16))
 29068  0011C2  22F8               	addwfc	tblptru,f,c
 29069  0011C4                     	endif
 29070  0011C4  501D               	movf	__display_failed@cntr,w,c
 29071  0011C6  0D01               	mullw	1
 29072  0011C8  0EB4               	movlw	low (_display_content+60)
 29073  0011CA  24F3               	addwf	prodl,w,c
 29074  0011CC  6ED9               	movwf	fsr2l,c
 29075  0011CE  0E01               	movlw	high (_display_content+60)
 29076  0011D0  20F4               	addwfc	prodh,w,c
 29077  0011D2  6EDA               	movwf	fsr2h,c
 29078  0011D4  0008               	tblrd		*
 29079  0011D6  CFF5 FFDF          	movff	tablat,indf2
 29080  0011DA  2A1D               	incf	__display_failed@cntr,f,c
 29081  0011DC                     l1640:
 29082  0011DC  501D               	movf	__display_failed@cntr,w,c
 29083  0011DE  0D01               	mullw	1
 29084  0011E0  0E69               	movlw	low _failed_line4
 29085  0011E2  24F3               	addwf	prodl,w,c
 29086  0011E4  6EF6               	movwf	tblptrl,c
 29087  0011E6  0E8E               	movlw	high _failed_line4
 29088  0011E8  20F4               	addwfc	prodh,w,c
 29089  0011EA  6EF7               	movwf	tblptrh,c
 29090  0011EC                     	if	1	;There are 3 active tblptr bytes
 29091  0011EC  6AF8               	clrf	tblptru,c
 29092  0011EE  0E00               	movlw	low (__mediumconst shr (0+16))
 29093  0011F0  22F8               	addwfc	tblptru,f,c
 29094  0011F2                     	endif
 29095  0011F2  0008               	tblrd		*
 29096  0011F4  50F5               	movf	tablat,w,c
 29097  0011F6  0900               	iorlw	0
 29098  0011F8  A4D8               	btfss	status,2,c
 29099  0011FA  D7D9               	goto	l1641
 29100                           
 29101                           ;display.c: 492: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29102  0011FC  ECFE  F038         	call	_bootloader_get_entries	;wreg free
 29103  001200  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29104  001204  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29105  001208  501D               	movf	__display_failed@cntr,w,c
 29106  00120A  0D01               	mullw	1
 29107  00120C  0EB4               	movlw	low (_display_content+60)
 29108  00120E  24F3               	addwf	prodl,w,c
 29109  001210  6E1B               	movwf	__display_itoa_u16@text,c
 29110  001212  0E01               	movlw	high (_display_content+60)
 29111  001214  20F4               	addwfc	prodh,w,c
 29112  001216  6E1C               	movwf	__display_itoa_u16@text+1,c
 29113  001218  ECCD  F027         	call	__display_itoa_u16	;wreg free
 29114  00121C  0012               	return		;funcret
 29115  00121E                     __end_of__display_failed:
 29116                           	opt stack 0
 29117                           tosu	equ	0xFFF
 29118                           tosh	equ	0xFFE
 29119                           tosl	equ	0xFFD
 29120                           pclath	equ	0xFFA
 29121                           tblptru	equ	0xFF8
 29122                           tblptrh	equ	0xFF7
 29123                           tblptrl	equ	0xFF6
 29124                           tablat	equ	0xFF5
 29125                           prodh	equ	0xFF4
 29126                           prodl	equ	0xFF3
 29127                           intcon	equ	0xFF2
 29128                           intcon2	equ	0xFF1
 29129                           intcon3	equ	0xFF0
 29130                           indf0	equ	0xFEF
 29131                           postinc0	equ	0xFEE
 29132                           fsr0h	equ	0xFEA
 29133                           fsr0l	equ	0xFE9
 29134                           wreg	equ	0xFE8
 29135                           indf1	equ	0xFE7
 29136                           postdec1	equ	0xFE5
 29137                           plusw1	equ	0xFE3
 29138                           fsr1h	equ	0xFE2
 29139                           fsr1l	equ	0xFE1
 29140                           indf2	equ	0xFDF
 29141                           postinc2	equ	0xFDE
 29142                           postdec2	equ	0xFDD
 29143                           plusw2	equ	0xFDB
 29144                           fsr2h	equ	0xFDA
 29145                           fsr2l	equ	0xFD9
 29146                           status	equ	0xFD8
 29147                           
 29148 ;; *************** function _bootloader_get_rec_address *****************
 29149 ;; Defined at:
 29150 ;;		line 488 in file "bootloader.c"
 29151 ;; Parameters:    Size  Location     Type
 29152 ;;		None
 29153 ;; Auto vars:     Size  Location     Type
 29154 ;;		None
 29155 ;; Return value:  Size  Location     Type
 29156 ;;                  2    0[COMRAM] unsigned int 
 29157 ;; Registers used:
 29158 ;;		None
 29159 ;; Tracked objects:
 29160 ;;		On entry : 0/0
 29161 ;;		On exit  : 0/0
 29162 ;;		Unchanged: 0/0
 29163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29168 ;;Total ram usage:        2 bytes
 29169 ;; Hardware stack levels used:    1
 29170 ;; This function calls:
 29171 ;;		Nothing
 29172 ;; This function is called by:
 29173 ;;		__display_failed
 29174 ;;		__fill_buffer_get_bootloader_details
 29175 ;; This function uses a non-reentrant model
 29176 ;;
 29177                           
 29178                           	psect	text145
 29179  0071F2                     __ptext145:
 29180                           	opt stack 0
 29181  0071F2                     _bootloader_get_rec_address:
 29182                           	opt stack 25
 29183                           
 29184                           ;bootloader.c: 491: return hex_file_entry.address;
 29185                           
 29186                           ;incstack = 0
 29187  0071F2  C1CA  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29188  0071F6  C1CB  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29189  0071FA  0012               	return		;funcret
 29190  0071FC                     __end_of_bootloader_get_rec_address:
 29191                           	opt stack 0
 29192                           tosu	equ	0xFFF
 29193                           tosh	equ	0xFFE
 29194                           tosl	equ	0xFFD
 29195                           pclath	equ	0xFFA
 29196                           tblptru	equ	0xFF8
 29197                           tblptrh	equ	0xFF7
 29198                           tblptrl	equ	0xFF6
 29199                           tablat	equ	0xFF5
 29200                           prodh	equ	0xFF4
 29201                           prodl	equ	0xFF3
 29202                           intcon	equ	0xFF2
 29203                           intcon2	equ	0xFF1
 29204                           intcon3	equ	0xFF0
 29205                           indf0	equ	0xFEF
 29206                           postinc0	equ	0xFEE
 29207                           fsr0h	equ	0xFEA
 29208                           fsr0l	equ	0xFE9
 29209                           wreg	equ	0xFE8
 29210                           indf1	equ	0xFE7
 29211                           postdec1	equ	0xFE5
 29212                           plusw1	equ	0xFE3
 29213                           fsr1h	equ	0xFE2
 29214                           fsr1l	equ	0xFE1
 29215                           indf2	equ	0xFDF
 29216                           postinc2	equ	0xFDE
 29217                           postdec2	equ	0xFDD
 29218                           plusw2	equ	0xFDB
 29219                           fsr2h	equ	0xFDA
 29220                           fsr2l	equ	0xFD9
 29221                           status	equ	0xFD8
 29222                           
 29223 ;; *************** function _bootloader_get_error *****************
 29224 ;; Defined at:
 29225 ;;		line 478 in file "bootloader.c"
 29226 ;; Parameters:    Size  Location     Type
 29227 ;;		None
 29228 ;; Auto vars:     Size  Location     Type
 29229 ;;		None
 29230 ;; Return value:  Size  Location     Type
 29231 ;;                  1    wreg      enum E7010
 29232 ;; Registers used:
 29233 ;;		wreg, status,2
 29234 ;; Tracked objects:
 29235 ;;		On entry : 0/0
 29236 ;;		On exit  : 0/0
 29237 ;;		Unchanged: 0/0
 29238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29243 ;;Total ram usage:        0 bytes
 29244 ;; Hardware stack levels used:    1
 29245 ;; This function calls:
 29246 ;;		Nothing
 29247 ;; This function is called by:
 29248 ;;		__display_failed
 29249 ;;		__fill_buffer_get_bootloader_details
 29250 ;; This function uses a non-reentrant model
 29251 ;;
 29252                           
 29253                           	psect	text146
 29254  007250                     __ptext146:
 29255                           	opt stack 0
 29256  007250                     _bootloader_get_error:
 29257                           	opt stack 25
 29258                           
 29259                           ;bootloader.c: 480: return last_error;
 29260                           
 29261                           ;incstack = 0
 29262  007250  0100               	movlb	0	; () banked
 29263  007252  5196               	movf	_last_error& (0+255),w,b
 29264  007254  0012               	return	
 29265  007256                     __end_of_bootloader_get_error:
 29266                           	opt stack 0
 29267                           tosu	equ	0xFFF
 29268                           tosh	equ	0xFFE
 29269                           tosl	equ	0xFFD
 29270                           pclath	equ	0xFFA
 29271                           tblptru	equ	0xFF8
 29272                           tblptrh	equ	0xFF7
 29273                           tblptrl	equ	0xFF6
 29274                           tablat	equ	0xFF5
 29275                           prodh	equ	0xFF4
 29276                           prodl	equ	0xFF3
 29277                           intcon	equ	0xFF2
 29278                           intcon2	equ	0xFF1
 29279                           intcon3	equ	0xFF0
 29280                           indf0	equ	0xFEF
 29281                           postinc0	equ	0xFEE
 29282                           fsr0h	equ	0xFEA
 29283                           fsr0l	equ	0xFE9
 29284                           wreg	equ	0xFE8
 29285                           indf1	equ	0xFE7
 29286                           postdec1	equ	0xFE5
 29287                           plusw1	equ	0xFE3
 29288                           fsr1h	equ	0xFE2
 29289                           fsr1l	equ	0xFE1
 29290                           indf2	equ	0xFDF
 29291                           postinc2	equ	0xFDE
 29292                           postdec2	equ	0xFDD
 29293                           plusw2	equ	0xFDB
 29294                           fsr2h	equ	0xFDA
 29295                           fsr2l	equ	0xFD9
 29296                           status	equ	0xFD8
 29297                           
 29298 ;; *************** function _bootloader_get_entries *****************
 29299 ;; Defined at:
 29300 ;;		line 468 in file "bootloader.c"
 29301 ;; Parameters:    Size  Location     Type
 29302 ;;		None
 29303 ;; Auto vars:     Size  Location     Type
 29304 ;;		None
 29305 ;; Return value:  Size  Location     Type
 29306 ;;                  2    0[COMRAM] unsigned int 
 29307 ;; Registers used:
 29308 ;;		None
 29309 ;; Tracked objects:
 29310 ;;		On entry : 0/0
 29311 ;;		On exit  : 0/0
 29312 ;;		Unchanged: 0/0
 29313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29318 ;;Total ram usage:        2 bytes
 29319 ;; Hardware stack levels used:    1
 29320 ;; This function calls:
 29321 ;;		Nothing
 29322 ;; This function is called by:
 29323 ;;		__display_verify
 29324 ;;		__display_failed
 29325 ;;		__display_programming
 29326 ;;		__fill_buffer_get_bootloader_details
 29327 ;; This function uses a non-reentrant model
 29328 ;;
 29329                           
 29330                           	psect	text147
 29331  0071FC                     __ptext147:
 29332                           	opt stack 0
 29333  0071FC                     _bootloader_get_entries:
 29334                           	opt stack 25
 29335                           
 29336                           ;bootloader.c: 470: return hex_file_entries;
 29337                           
 29338                           ; BSR set to: 0
 29339                           ;incstack = 0
 29340  0071FC  C163  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29341  007200  C164  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29342  007204  0012               	return		;funcret
 29343  007206                     __end_of_bootloader_get_entries:
 29344                           	opt stack 0
 29345                           tosu	equ	0xFFF
 29346                           tosh	equ	0xFFE
 29347                           tosl	equ	0xFFD
 29348                           pclath	equ	0xFFA
 29349                           tblptru	equ	0xFF8
 29350                           tblptrh	equ	0xFF7
 29351                           tblptrl	equ	0xFF6
 29352                           tablat	equ	0xFF5
 29353                           prodh	equ	0xFF4
 29354                           prodl	equ	0xFF3
 29355                           intcon	equ	0xFF2
 29356                           intcon2	equ	0xFF1
 29357                           intcon3	equ	0xFF0
 29358                           indf0	equ	0xFEF
 29359                           postinc0	equ	0xFEE
 29360                           fsr0h	equ	0xFEA
 29361                           fsr0l	equ	0xFE9
 29362                           wreg	equ	0xFE8
 29363                           indf1	equ	0xFE7
 29364                           postdec1	equ	0xFE5
 29365                           plusw1	equ	0xFE3
 29366                           fsr1h	equ	0xFE2
 29367                           fsr1l	equ	0xFE1
 29368                           indf2	equ	0xFDF
 29369                           postinc2	equ	0xFDE
 29370                           postdec2	equ	0xFDD
 29371                           plusw2	equ	0xFDB
 29372                           fsr2h	equ	0xFDA
 29373                           fsr2l	equ	0xFD9
 29374                           status	equ	0xFD8
 29375                           
 29376 ;; *************** function __display_itoa_u32 *****************
 29377 ;; Defined at:
 29378 ;;		line 178 in file "display.c"
 29379 ;; Parameters:    Size  Location     Type
 29380 ;;  value           4   13[COMRAM] unsigned long 
 29381 ;;  text            2   17[COMRAM] PTR unsigned char 
 29382 ;;		 -> display_content(80), 
 29383 ;; Auto vars:     Size  Location     Type
 29384 ;;  number_of_di    1   20[COMRAM] unsigned char 
 29385 ;;  cntr            1   19[COMRAM] char 
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1    wreg      unsigned char 
 29388 ;; Registers used:
 29389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29390 ;; Tracked objects:
 29391 ;;		On entry : 0/0
 29392 ;;		On exit  : 0/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29399 ;;Total ram usage:        8 bytes
 29400 ;; Hardware stack levels used:    1
 29401 ;; Hardware stack levels required when called:    1
 29402 ;; This function calls:
 29403 ;;		___lldiv
 29404 ;;		___llmod
 29405 ;;		___wmul
 29406 ;; This function is called by:
 29407 ;;		__display_found
 29408 ;;		__display_failed
 29409 ;; This function uses a non-reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text148
 29413  002F7A                     __ptext148:
 29414                           	opt stack 0
 29415  002F7A                     __display_itoa_u32:
 29416                           	opt stack 24
 29417                           
 29418                           ;display.c: 180: uint8_t number_of_digits;;display.c: 181: int8_t cntr;;display.c: 184: 
      +                          if(value<10) {number_of_digits = 1;}
 29419                           
 29420                           ;incstack = 0
 29421  002F7A  5011               	movf	__display_itoa_u32@value+3,w,c
 29422  002F7C  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29423  002F7E  100F               	iorwf	__display_itoa_u32@value+1,w,c
 29424  002F80  E106               	bnz	l10362
 29425  002F82  0E0A               	movlw	10
 29426  002F84  5C0E               	subwf	__display_itoa_u32@value,w,c
 29427  002F86  B0D8               	btfsc	status,0,c
 29428  002F88  D002               	goto	l1471
 29429  002F8A  0E01               	movlw	1
 29430  002F8C  D059               	goto	L42
 29431  002F8E                     l1471:
 29432  002F8E                     l10362:
 29433                           
 29434                           ;display.c: 185: else if(value<100) {number_of_digits = 2;}
 29435  002F8E  5011               	movf	__display_itoa_u32@value+3,w,c
 29436  002F90  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29437  002F92  100F               	iorwf	__display_itoa_u32@value+1,w,c
 29438  002F94  E106               	bnz	l10366
 29439  002F96  0E64               	movlw	100
 29440  002F98  5C0E               	subwf	__display_itoa_u32@value,w,c
 29441  002F9A  B0D8               	btfsc	status,0,c
 29442  002F9C  D002               	goto	l1473
 29443  002F9E  0E02               	movlw	2
 29444  002FA0  D04F               	goto	L42
 29445  002FA2                     l1473:
 29446  002FA2                     l10366:
 29447                           
 29448                           ;display.c: 186: else if(value<1000) {number_of_digits = 3;}
 29449  002FA2  5011               	movf	__display_itoa_u32@value+3,w,c
 29450  002FA4  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29451  002FA6  E108               	bnz	l10370
 29452  002FA8  0EE8               	movlw	232
 29453  002FAA  5C0E               	subwf	__display_itoa_u32@value,w,c
 29454  002FAC  0E03               	movlw	3
 29455  002FAE  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29456  002FB0  B0D8               	btfsc	status,0,c
 29457  002FB2  D002               	goto	l1475
 29458  002FB4  0E03               	movlw	3
 29459  002FB6  D044               	goto	L42
 29460  002FB8                     l1475:
 29461  002FB8                     l10370:
 29462                           
 29463                           ;display.c: 187: else if(value<10000) {number_of_digits = 4;}
 29464  002FB8  5011               	movf	__display_itoa_u32@value+3,w,c
 29465  002FBA  1010               	iorwf	__display_itoa_u32@value+2,w,c
 29466  002FBC  E108               	bnz	l10374
 29467  002FBE  0E10               	movlw	16
 29468  002FC0  5C0E               	subwf	__display_itoa_u32@value,w,c
 29469  002FC2  0E27               	movlw	39
 29470  002FC4  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29471  002FC6  B0D8               	btfsc	status,0,c
 29472  002FC8  D002               	goto	l1477
 29473  002FCA  0E04               	movlw	4
 29474  002FCC  D039               	goto	L42
 29475  002FCE                     l1477:
 29476  002FCE                     l10374:
 29477                           
 29478                           ;display.c: 188: else if(value<100000) {number_of_digits = 5;}
 29479  002FCE  5011               	movf	__display_itoa_u32@value+3,w,c
 29480  002FD0  E10A               	bnz	l10378
 29481  002FD2  0EA0               	movlw	160
 29482  002FD4  5C0E               	subwf	__display_itoa_u32@value,w,c
 29483  002FD6  0E86               	movlw	134
 29484  002FD8  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29485  002FDA  0E01               	movlw	1
 29486  002FDC  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29487  002FDE  B0D8               	btfsc	status,0,c
 29488  002FE0  D002               	goto	l1479
 29489  002FE2  0E05               	movlw	5
 29490  002FE4  D02D               	goto	L42
 29491  002FE6                     l1479:
 29492  002FE6                     l10378:
 29493                           
 29494                           ;display.c: 189: else if(value<1000000) {number_of_digits = 6;}
 29495  002FE6  5011               	movf	__display_itoa_u32@value+3,w,c
 29496  002FE8  E10A               	bnz	l10382
 29497  002FEA  0E40               	movlw	64
 29498  002FEC  5C0E               	subwf	__display_itoa_u32@value,w,c
 29499  002FEE  0E42               	movlw	66
 29500  002FF0  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29501  002FF2  0E0F               	movlw	15
 29502  002FF4  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29503  002FF6  B0D8               	btfsc	status,0,c
 29504  002FF8  D002               	goto	l1481
 29505  002FFA  0E06               	movlw	6
 29506  002FFC  D021               	goto	L42
 29507  002FFE                     l1481:
 29508  002FFE                     l10382:
 29509                           
 29510                           ;display.c: 190: else if(value<10000000) {number_of_digits = 7;}
 29511  002FFE  5011               	movf	__display_itoa_u32@value+3,w,c
 29512  003000  E10A               	bnz	l10386
 29513  003002  0E80               	movlw	128
 29514  003004  5C0E               	subwf	__display_itoa_u32@value,w,c
 29515  003006  0E96               	movlw	150
 29516  003008  580F               	subwfb	__display_itoa_u32@value+1,w,c
 29517  00300A  0E98               	movlw	152
 29518  00300C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29519  00300E  B0D8               	btfsc	status,0,c
 29520  003010  D002               	goto	l1483
 29521  003012  0E07               	movlw	7
 29522  003014  D015               	goto	L42
 29523  003016                     l1483:
 29524  003016                     l10386:
 29525                           
 29526                           ;display.c: 191: else if(value<100000000) {number_of_digits = 8;}
 29527  003016  0EE1               	movlw	225
 29528  003018  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 29529  00301A  0EF5               	movlw	245
 29530  00301C  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29531  00301E  0E05               	movlw	5
 29532  003020  5811               	subwfb	__display_itoa_u32@value+3,w,c
 29533  003022  B0D8               	btfsc	status,0,c
 29534  003024  D002               	goto	l1485
 29535  003026  0E08               	movlw	8
 29536  003028  D00B               	goto	L42
 29537  00302A                     l1485:
 29538                           
 29539                           ;display.c: 192: else if(value<1000000000) {number_of_digits = 9;}
 29540  00302A  0ECA               	movlw	202
 29541  00302C  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 29542  00302E  0E9A               	movlw	154
 29543  003030  5810               	subwfb	__display_itoa_u32@value+2,w,c
 29544  003032  0E3B               	movlw	59
 29545  003034  5811               	subwfb	__display_itoa_u32@value+3,w,c
 29546  003036  B0D8               	btfsc	status,0,c
 29547  003038  D002               	goto	l1487
 29548  00303A  0E09               	movlw	9
 29549  00303C  D001               	goto	L42
 29550  00303E                     l1487:
 29551                           
 29552                           ;display.c: 193: else {number_of_digits = 10;}
 29553  00303E  0E0A               	movlw	10
 29554  003040                     L42:
 29555  003040  6E15               	movwf	__display_itoa_u32@number_of_digits,c
 29556                           
 29557                           ;display.c: 195: for(cntr=number_of_digits-1; cntr>=0; --cntr)
 29558  003042  0415               	decf	__display_itoa_u32@number_of_digits,w,c
 29559  003044  6E14               	movwf	__display_itoa_u32@cntr,c
 29560  003046                     l10398:
 29561  003046  BE14               	btfsc	__display_itoa_u32@cntr,7,c
 29562  003048  D042               	goto	u7690
 29563                           
 29564                           ;display.c: 196: {;display.c: 197: text[cntr] = (value%10) + 0x30;
 29565  00304A  5014               	movf	__display_itoa_u32@cntr,w,c
 29566  00304C  6E01               	movwf	___wmul@multiplier,c
 29567  00304E  6A02               	clrf	___wmul@multiplier+1,c
 29568  003050  BE01               	btfsc	___wmul@multiplier,7,c
 29569  003052  0602               	decf	___wmul@multiplier+1,f,c
 29570  003054  0E00               	movlw	0
 29571  003056  6E04               	movwf	___wmul@multiplicand+1,c
 29572  003058  0E01               	movlw	1
 29573  00305A  6E03               	movwf	___wmul@multiplicand,c
 29574  00305C  EC8F  F037         	call	___wmul	;wreg free
 29575  003060  5001               	movf	?___wmul,w,c
 29576  003062  2412               	addwf	__display_itoa_u32@text,w,c
 29577  003064  6ED9               	movwf	fsr2l,c
 29578  003066  5002               	movf	?___wmul+1,w,c
 29579  003068  2013               	addwfc	__display_itoa_u32@text+1,w,c
 29580  00306A  6EDA               	movwf	fsr2h,c
 29581  00306C  C00E  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29582  003070  C00F  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29583  003074  C010  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29584  003078  C011  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29585  00307C  0E0A               	movlw	10
 29586  00307E  6E05               	movwf	___llmod@divisor,c
 29587  003080  0E00               	movlw	0
 29588  003082  6E06               	movwf	___llmod@divisor+1,c
 29589  003084  0E00               	movlw	0
 29590  003086  6E07               	movwf	___llmod@divisor+2,c
 29591  003088  0E00               	movlw	0
 29592  00308A  6E08               	movwf	___llmod@divisor+3,c
 29593  00308C  EC4F  F030         	call	___llmod	;wreg free
 29594  003090  5001               	movf	?___llmod,w,c
 29595  003092  0F30               	addlw	48
 29596  003094  6EDF               	movwf	indf2,c
 29597                           
 29598                           ;display.c: 198: value /= 10;
 29599  003096  C00E  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29600  00309A  C00F  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29601  00309E  C010  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29602  0030A2  C011  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29603  0030A6  0E0A               	movlw	10
 29604  0030A8  6E05               	movwf	___lldiv@divisor,c
 29605  0030AA  0E00               	movlw	0
 29606  0030AC  6E06               	movwf	___lldiv@divisor+1,c
 29607  0030AE  0E00               	movlw	0
 29608  0030B0  6E07               	movwf	___lldiv@divisor+2,c
 29609  0030B2  0E00               	movlw	0
 29610  0030B4  6E08               	movwf	___lldiv@divisor+3,c
 29611  0030B6  ECDF  F02D         	call	___lldiv	;wreg free
 29612  0030BA  C001  F00E         	movff	?___lldiv,__display_itoa_u32@value
 29613  0030BE  C002  F00F         	movff	?___lldiv+1,__display_itoa_u32@value+1
 29614  0030C2  C003  F010         	movff	?___lldiv+2,__display_itoa_u32@value+2
 29615  0030C6  C004  F011         	movff	?___lldiv+3,__display_itoa_u32@value+3
 29616  0030CA  0614               	decf	__display_itoa_u32@cntr,f,c
 29617  0030CC  D7BC               	goto	l10398
 29618  0030CE                     u7690:
 29619                           
 29620                           ;display.c: 199: };display.c: 201: return number_of_digits;
 29621  0030CE  5015               	movf	__display_itoa_u32@number_of_digits,w,c
 29622  0030D0  0012               	return	
 29623  0030D2                     __end_of__display_itoa_u32:
 29624                           	opt stack 0
 29625                           tosu	equ	0xFFF
 29626                           tosh	equ	0xFFE
 29627                           tosl	equ	0xFFD
 29628                           pclath	equ	0xFFA
 29629                           tblptru	equ	0xFF8
 29630                           tblptrh	equ	0xFF7
 29631                           tblptrl	equ	0xFF6
 29632                           tablat	equ	0xFF5
 29633                           prodh	equ	0xFF4
 29634                           prodl	equ	0xFF3
 29635                           intcon	equ	0xFF2
 29636                           intcon2	equ	0xFF1
 29637                           intcon3	equ	0xFF0
 29638                           indf0	equ	0xFEF
 29639                           postinc0	equ	0xFEE
 29640                           fsr0h	equ	0xFEA
 29641                           fsr0l	equ	0xFE9
 29642                           wreg	equ	0xFE8
 29643                           indf1	equ	0xFE7
 29644                           postdec1	equ	0xFE5
 29645                           plusw1	equ	0xFE3
 29646                           fsr1h	equ	0xFE2
 29647                           fsr1l	equ	0xFE1
 29648                           indf2	equ	0xFDF
 29649                           postinc2	equ	0xFDE
 29650                           postdec2	equ	0xFDD
 29651                           plusw2	equ	0xFDB
 29652                           fsr2h	equ	0xFDA
 29653                           fsr2l	equ	0xFD9
 29654                           status	equ	0xFD8
 29655                           
 29656 ;; *************** function ___wmul *****************
 29657 ;; Defined at:
 29658 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;  multiplier      2    0[COMRAM] unsigned int 
 29661 ;;  multiplicand    2    2[COMRAM] unsigned int 
 29662 ;; Auto vars:     Size  Location     Type
 29663 ;;  product         2    4[COMRAM] unsigned int 
 29664 ;; Return value:  Size  Location     Type
 29665 ;;                  2    0[COMRAM] unsigned int 
 29666 ;; Registers used:
 29667 ;;		wreg, status,2, status,0, prodl, prodh
 29668 ;; Tracked objects:
 29669 ;;		On entry : 0/0
 29670 ;;		On exit  : 0/0
 29671 ;;		Unchanged: 0/0
 29672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29677 ;;Total ram usage:        6 bytes
 29678 ;; Hardware stack levels used:    1
 29679 ;; This function calls:
 29680 ;;		Nothing
 29681 ;; This function is called by:
 29682 ;;		__display_itoa_u32
 29683 ;; This function uses a non-reentrant model
 29684 ;;
 29685                           
 29686                           	psect	text149
 29687  006F1E                     __ptext149:
 29688                           	opt stack 0
 29689  006F1E                     ___wmul:
 29690                           	opt stack 24
 29691                           
 29692                           ;incstack = 0
 29693  006F1E  5001               	movf	___wmul@multiplier,w,c
 29694  006F20  0203               	mulwf	___wmul@multiplicand,c
 29695  006F22  CFF3 F005          	movff	prodl,___wmul@product
 29696  006F26  CFF4 F006          	movff	prodh,___wmul@product+1
 29697  006F2A  5001               	movf	___wmul@multiplier,w,c
 29698  006F2C  0204               	mulwf	___wmul@multiplicand+1,c
 29699  006F2E  50F3               	movf	prodl,w,c
 29700  006F30  2606               	addwf	___wmul@product+1,f,c
 29701  006F32  5002               	movf	___wmul@multiplier+1,w,c
 29702  006F34  0203               	mulwf	___wmul@multiplicand,c
 29703  006F36  50F3               	movf	prodl,w,c
 29704  006F38  2606               	addwf	___wmul@product+1,f,c
 29705  006F3A  C005  F001         	movff	___wmul@product,?___wmul
 29706  006F3E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 29707  006F42  0012               	return	
 29708  006F44                     __end_of___wmul:
 29709                           	opt stack 0
 29710                           tosu	equ	0xFFF
 29711                           tosh	equ	0xFFE
 29712                           tosl	equ	0xFFD
 29713                           pclath	equ	0xFFA
 29714                           tblptru	equ	0xFF8
 29715                           tblptrh	equ	0xFF7
 29716                           tblptrl	equ	0xFF6
 29717                           tablat	equ	0xFF5
 29718                           prodh	equ	0xFF4
 29719                           prodl	equ	0xFF3
 29720                           intcon	equ	0xFF2
 29721                           intcon2	equ	0xFF1
 29722                           intcon3	equ	0xFF0
 29723                           indf0	equ	0xFEF
 29724                           postinc0	equ	0xFEE
 29725                           fsr0h	equ	0xFEA
 29726                           fsr0l	equ	0xFE9
 29727                           wreg	equ	0xFE8
 29728                           indf1	equ	0xFE7
 29729                           postdec1	equ	0xFE5
 29730                           plusw1	equ	0xFE3
 29731                           fsr1h	equ	0xFE2
 29732                           fsr1l	equ	0xFE1
 29733                           indf2	equ	0xFDF
 29734                           postinc2	equ	0xFDE
 29735                           postdec2	equ	0xFDD
 29736                           plusw2	equ	0xFDB
 29737                           fsr2h	equ	0xFDA
 29738                           fsr2l	equ	0xFD9
 29739                           status	equ	0xFD8
 29740                           
 29741 ;; *************** function ___llmod *****************
 29742 ;; Defined at:
 29743 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 29744 ;; Parameters:    Size  Location     Type
 29745 ;;  dividend        4    0[COMRAM] unsigned long 
 29746 ;;  divisor         4    4[COMRAM] unsigned long 
 29747 ;; Auto vars:     Size  Location     Type
 29748 ;;  counter         1    8[COMRAM] unsigned char 
 29749 ;; Return value:  Size  Location     Type
 29750 ;;                  4    0[COMRAM] unsigned long 
 29751 ;; Registers used:
 29752 ;;		wreg, status,2, status,0
 29753 ;; Tracked objects:
 29754 ;;		On entry : 0/0
 29755 ;;		On exit  : 0/0
 29756 ;;		Unchanged: 0/0
 29757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29758 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29761 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29762 ;;Total ram usage:        9 bytes
 29763 ;; Hardware stack levels used:    1
 29764 ;; This function calls:
 29765 ;;		Nothing
 29766 ;; This function is called by:
 29767 ;;		__display_itoa_u32
 29768 ;; This function uses a non-reentrant model
 29769 ;;
 29770                           
 29771                           	psect	text150
 29772  00609E                     __ptext150:
 29773                           	opt stack 0
 29774  00609E                     ___llmod:
 29775                           	opt stack 24
 29776                           
 29777                           ;incstack = 0
 29778  00609E  5005               	movf	___llmod@divisor,w,c
 29779  0060A0  1006               	iorwf	___llmod@divisor+1,w,c
 29780  0060A2  1007               	iorwf	___llmod@divisor+2,w,c
 29781  0060A4  1008               	iorwf	___llmod@divisor+3,w,c
 29782  0060A6  B4D8               	btfsc	status,2,c
 29783  0060A8  D024               	goto	l3228
 29784  0060AA  0E01               	movlw	1
 29785  0060AC  6E09               	movwf	___llmod@counter,c
 29786  0060AE  D006               	goto	l3223
 29787  0060B0  90D8               	bcf	status,0,c
 29788  0060B2  3605               	rlcf	___llmod@divisor,f,c
 29789  0060B4  3606               	rlcf	___llmod@divisor+1,f,c
 29790  0060B6  3607               	rlcf	___llmod@divisor+2,f,c
 29791  0060B8  3608               	rlcf	___llmod@divisor+3,f,c
 29792  0060BA  2A09               	incf	___llmod@counter,f,c
 29793  0060BC                     l3223:
 29794  0060BC  AE08               	btfss	___llmod@divisor+3,7,c
 29795  0060BE  D7F8               	goto	l3224
 29796  0060C0                     u7180:
 29797  0060C0  5005               	movf	___llmod@divisor,w,c
 29798  0060C2  5C01               	subwf	___llmod@dividend,w,c
 29799  0060C4  5006               	movf	___llmod@divisor+1,w,c
 29800  0060C6  5802               	subwfb	___llmod@dividend+1,w,c
 29801  0060C8  5007               	movf	___llmod@divisor+2,w,c
 29802  0060CA  5803               	subwfb	___llmod@dividend+2,w,c
 29803  0060CC  5008               	movf	___llmod@divisor+3,w,c
 29804  0060CE  5804               	subwfb	___llmod@dividend+3,w,c
 29805  0060D0  A0D8               	btfss	status,0,c
 29806  0060D2  D008               	goto	l3227
 29807  0060D4  5005               	movf	___llmod@divisor,w,c
 29808  0060D6  5E01               	subwf	___llmod@dividend,f,c
 29809  0060D8  5006               	movf	___llmod@divisor+1,w,c
 29810  0060DA  5A02               	subwfb	___llmod@dividend+1,f,c
 29811  0060DC  5007               	movf	___llmod@divisor+2,w,c
 29812  0060DE  5A03               	subwfb	___llmod@dividend+2,f,c
 29813  0060E0  5008               	movf	___llmod@divisor+3,w,c
 29814  0060E2  5A04               	subwfb	___llmod@dividend+3,f,c
 29815  0060E4                     l3227:
 29816  0060E4  90D8               	bcf	status,0,c
 29817  0060E6  3208               	rrcf	___llmod@divisor+3,f,c
 29818  0060E8  3207               	rrcf	___llmod@divisor+2,f,c
 29819  0060EA  3206               	rrcf	___llmod@divisor+1,f,c
 29820  0060EC  3205               	rrcf	___llmod@divisor,f,c
 29821  0060EE  2E09               	decfsz	___llmod@counter,f,c
 29822  0060F0  D7E7               	goto	u7180
 29823  0060F2                     l3228:
 29824  0060F2  C001  F001         	movff	___llmod@dividend,?___llmod
 29825  0060F6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 29826  0060FA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 29827  0060FE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 29828  006102  0012               	return		;funcret
 29829  006104                     __end_of___llmod:
 29830                           	opt stack 0
 29831                           tosu	equ	0xFFF
 29832                           tosh	equ	0xFFE
 29833                           tosl	equ	0xFFD
 29834                           pclath	equ	0xFFA
 29835                           tblptru	equ	0xFF8
 29836                           tblptrh	equ	0xFF7
 29837                           tblptrl	equ	0xFF6
 29838                           tablat	equ	0xFF5
 29839                           prodh	equ	0xFF4
 29840                           prodl	equ	0xFF3
 29841                           intcon	equ	0xFF2
 29842                           intcon2	equ	0xFF1
 29843                           intcon3	equ	0xFF0
 29844                           indf0	equ	0xFEF
 29845                           postinc0	equ	0xFEE
 29846                           fsr0h	equ	0xFEA
 29847                           fsr0l	equ	0xFE9
 29848                           wreg	equ	0xFE8
 29849                           indf1	equ	0xFE7
 29850                           postdec1	equ	0xFE5
 29851                           plusw1	equ	0xFE3
 29852                           fsr1h	equ	0xFE2
 29853                           fsr1l	equ	0xFE1
 29854                           indf2	equ	0xFDF
 29855                           postinc2	equ	0xFDE
 29856                           postdec2	equ	0xFDD
 29857                           plusw2	equ	0xFDB
 29858                           fsr2h	equ	0xFDA
 29859                           fsr2l	equ	0xFD9
 29860                           status	equ	0xFD8
 29861                           
 29862 ;; *************** function ___lldiv *****************
 29863 ;; Defined at:
 29864 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 29865 ;; Parameters:    Size  Location     Type
 29866 ;;  dividend        4    0[COMRAM] unsigned long 
 29867 ;;  divisor         4    4[COMRAM] unsigned long 
 29868 ;; Auto vars:     Size  Location     Type
 29869 ;;  quotient        4    8[COMRAM] unsigned long 
 29870 ;;  counter         1   12[COMRAM] unsigned char 
 29871 ;; Return value:  Size  Location     Type
 29872 ;;                  4    0[COMRAM] unsigned long 
 29873 ;; Registers used:
 29874 ;;		wreg, status,2, status,0
 29875 ;; Tracked objects:
 29876 ;;		On entry : 0/0
 29877 ;;		On exit  : 0/0
 29878 ;;		Unchanged: 0/0
 29879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29881 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29883 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29884 ;;Total ram usage:       13 bytes
 29885 ;; Hardware stack levels used:    1
 29886 ;; This function calls:
 29887 ;;		Nothing
 29888 ;; This function is called by:
 29889 ;;		__display_itoa_u32
 29890 ;; This function uses a non-reentrant model
 29891 ;;
 29892                           
 29893                           	psect	text151
 29894  005BBE                     __ptext151:
 29895                           	opt stack 0
 29896  005BBE                     ___lldiv:
 29897                           	opt stack 24
 29898                           
 29899                           ;incstack = 0
 29900  005BBE  0E00               	movlw	0
 29901  005BC0  6E09               	movwf	___lldiv@quotient,c
 29902  005BC2  0E00               	movlw	0
 29903  005BC4  6E0A               	movwf	___lldiv@quotient+1,c
 29904  005BC6  0E00               	movlw	0
 29905  005BC8  6E0B               	movwf	___lldiv@quotient+2,c
 29906  005BCA  0E00               	movlw	0
 29907  005BCC  6E0C               	movwf	___lldiv@quotient+3,c
 29908  005BCE  5005               	movf	___lldiv@divisor,w,c
 29909  005BD0  1006               	iorwf	___lldiv@divisor+1,w,c
 29910  005BD2  1007               	iorwf	___lldiv@divisor+2,w,c
 29911  005BD4  1008               	iorwf	___lldiv@divisor+3,w,c
 29912  005BD6  B4D8               	btfsc	status,2,c
 29913  005BD8  D02A               	goto	l2847
 29914  005BDA  0E01               	movlw	1
 29915  005BDC  6E0D               	movwf	___lldiv@counter,c
 29916  005BDE  D006               	goto	l2842
 29917  005BE0  90D8               	bcf	status,0,c
 29918  005BE2  3605               	rlcf	___lldiv@divisor,f,c
 29919  005BE4  3606               	rlcf	___lldiv@divisor+1,f,c
 29920  005BE6  3607               	rlcf	___lldiv@divisor+2,f,c
 29921  005BE8  3608               	rlcf	___lldiv@divisor+3,f,c
 29922  005BEA  2A0D               	incf	___lldiv@counter,f,c
 29923  005BEC                     l2842:
 29924  005BEC  AE08               	btfss	___lldiv@divisor+3,7,c
 29925  005BEE  D7F8               	goto	l2843
 29926  005BF0                     u7150:
 29927  005BF0  90D8               	bcf	status,0,c
 29928  005BF2  3609               	rlcf	___lldiv@quotient,f,c
 29929  005BF4  360A               	rlcf	___lldiv@quotient+1,f,c
 29930  005BF6  360B               	rlcf	___lldiv@quotient+2,f,c
 29931  005BF8  360C               	rlcf	___lldiv@quotient+3,f,c
 29932  005BFA  5005               	movf	___lldiv@divisor,w,c
 29933  005BFC  5C01               	subwf	___lldiv@dividend,w,c
 29934  005BFE  5006               	movf	___lldiv@divisor+1,w,c
 29935  005C00  5802               	subwfb	___lldiv@dividend+1,w,c
 29936  005C02  5007               	movf	___lldiv@divisor+2,w,c
 29937  005C04  5803               	subwfb	___lldiv@dividend+2,w,c
 29938  005C06  5008               	movf	___lldiv@divisor+3,w,c
 29939  005C08  5804               	subwfb	___lldiv@dividend+3,w,c
 29940  005C0A  A0D8               	btfss	status,0,c
 29941  005C0C  D009               	goto	l2846
 29942  005C0E  5005               	movf	___lldiv@divisor,w,c
 29943  005C10  5E01               	subwf	___lldiv@dividend,f,c
 29944  005C12  5006               	movf	___lldiv@divisor+1,w,c
 29945  005C14  5A02               	subwfb	___lldiv@dividend+1,f,c
 29946  005C16  5007               	movf	___lldiv@divisor+2,w,c
 29947  005C18  5A03               	subwfb	___lldiv@dividend+2,f,c
 29948  005C1A  5008               	movf	___lldiv@divisor+3,w,c
 29949  005C1C  5A04               	subwfb	___lldiv@dividend+3,f,c
 29950  005C1E  8009               	bsf	___lldiv@quotient,0,c
 29951  005C20                     l2846:
 29952  005C20  90D8               	bcf	status,0,c
 29953  005C22  3208               	rrcf	___lldiv@divisor+3,f,c
 29954  005C24  3207               	rrcf	___lldiv@divisor+2,f,c
 29955  005C26  3206               	rrcf	___lldiv@divisor+1,f,c
 29956  005C28  3205               	rrcf	___lldiv@divisor,f,c
 29957  005C2A  2E0D               	decfsz	___lldiv@counter,f,c
 29958  005C2C  D7E1               	goto	u7150
 29959  005C2E                     l2847:
 29960  005C2E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 29961  005C32  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 29962  005C36  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 29963  005C3A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 29964  005C3E  0012               	return		;funcret
 29965  005C40                     __end_of___lldiv:
 29966                           	opt stack 0
 29967                           tosu	equ	0xFFF
 29968                           tosh	equ	0xFFE
 29969                           tosl	equ	0xFFD
 29970                           pclath	equ	0xFFA
 29971                           tblptru	equ	0xFF8
 29972                           tblptrh	equ	0xFF7
 29973                           tblptrl	equ	0xFF6
 29974                           tablat	equ	0xFF5
 29975                           prodh	equ	0xFF4
 29976                           prodl	equ	0xFF3
 29977                           intcon	equ	0xFF2
 29978                           intcon2	equ	0xFF1
 29979                           intcon3	equ	0xFF0
 29980                           indf0	equ	0xFEF
 29981                           postinc0	equ	0xFEE
 29982                           fsr0h	equ	0xFEA
 29983                           fsr0l	equ	0xFE9
 29984                           wreg	equ	0xFE8
 29985                           indf1	equ	0xFE7
 29986                           postdec1	equ	0xFE5
 29987                           plusw1	equ	0xFE3
 29988                           fsr1h	equ	0xFE2
 29989                           fsr1l	equ	0xFE1
 29990                           indf2	equ	0xFDF
 29991                           postinc2	equ	0xFDE
 29992                           postdec2	equ	0xFDD
 29993                           plusw2	equ	0xFDB
 29994                           fsr2h	equ	0xFDA
 29995                           fsr2l	equ	0xFD9
 29996                           status	equ	0xFD8
 29997                           
 29998 ;; *************** function __display_done *****************
 29999 ;; Defined at:
 30000 ;;		line 519 in file "display.c"
 30001 ;; Parameters:    Size  Location     Type
 30002 ;;		None
 30003 ;; Auto vars:     Size  Location     Type
 30004 ;;  cntr            1   28[COMRAM] unsigned char 
 30005 ;; Return value:  Size  Location     Type
 30006 ;;                  1    wreg      void 
 30007 ;; Registers used:
 30008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30009 ;; Tracked objects:
 30010 ;;		On entry : 0/0
 30011 ;;		On exit  : 0/0
 30012 ;;		Unchanged: 0/0
 30013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30018 ;;Total ram usage:        1 bytes
 30019 ;; Hardware stack levels used:    1
 30020 ;; Hardware stack levels required when called:    4
 30021 ;; This function calls:
 30022 ;;		__display_itoa_u16
 30023 ;;		_bootloader_get_flashPagesWritten
 30024 ;; This function is called by:
 30025 ;;		_display_prepare
 30026 ;; This function uses a non-reentrant model
 30027 ;;
 30028                           
 30029                           	psect	text152
 30030  002E08                     __ptext152:
 30031                           	opt stack 0
 30032  002E08                     __display_done:
 30033                           	opt stack 22
 30034                           
 30035                           ;display.c: 521: uint8_t cntr;;display.c: 522: cntr = 0;
 30036                           
 30037                           ;incstack = 0
 30038  002E08  0E00               	movlw	0
 30039  002E0A  6E1D               	movwf	__display_done@cntr,c
 30040                           
 30041                           ;display.c: 523: while(done_line1[cntr])
 30042  002E0C  D017               	goto	l1661
 30043  002E0E                     
 30044                           ;display.c: 524: display_content[0][cntr] = done_line1[cntr++];
 30045  002E0E  501D               	movf	__display_done@cntr,w,c
 30046  002E10  0D01               	mullw	1
 30047  002E12  0E68               	movlw	low _done_line1
 30048  002E14  24F3               	addwf	prodl,w,c
 30049  002E16  6EF6               	movwf	tblptrl,c
 30050  002E18  0E8D               	movlw	high _done_line1
 30051  002E1A  20F4               	addwfc	prodh,w,c
 30052  002E1C  6EF7               	movwf	tblptrh,c
 30053  002E1E                     	if	1	;There are 3 active tblptr bytes
 30054  002E1E  6AF8               	clrf	tblptru,c
 30055  002E20  0E00               	movlw	low (__mediumconst shr (0+16))
 30056  002E22  22F8               	addwfc	tblptru,f,c
 30057  002E24                     	endif
 30058  002E24  501D               	movf	__display_done@cntr,w,c
 30059  002E26  0D01               	mullw	1
 30060  002E28  0E78               	movlw	low _display_content
 30061  002E2A  24F3               	addwf	prodl,w,c
 30062  002E2C  6ED9               	movwf	fsr2l,c
 30063  002E2E  0E01               	movlw	high _display_content
 30064  002E30  20F4               	addwfc	prodh,w,c
 30065  002E32  6EDA               	movwf	fsr2h,c
 30066  002E34  0008               	tblrd		*
 30067  002E36  CFF5 FFDF          	movff	tablat,indf2
 30068  002E3A  2A1D               	incf	__display_done@cntr,f,c
 30069  002E3C                     l1661:
 30070  002E3C  501D               	movf	__display_done@cntr,w,c
 30071  002E3E  0D01               	mullw	1
 30072  002E40  0E68               	movlw	low _done_line1
 30073  002E42  24F3               	addwf	prodl,w,c
 30074  002E44  6EF6               	movwf	tblptrl,c
 30075  002E46  0E8D               	movlw	high _done_line1
 30076  002E48  20F4               	addwfc	prodh,w,c
 30077  002E4A  6EF7               	movwf	tblptrh,c
 30078  002E4C                     	if	1	;There are 3 active tblptr bytes
 30079  002E4C  6AF8               	clrf	tblptru,c
 30080  002E4E  0E00               	movlw	low (__mediumconst shr (0+16))
 30081  002E50  22F8               	addwfc	tblptru,f,c
 30082  002E52                     	endif
 30083  002E52  0008               	tblrd		*
 30084  002E54  50F5               	movf	tablat,w,c
 30085  002E56  0900               	iorlw	0
 30086  002E58  A4D8               	btfss	status,2,c
 30087  002E5A  D7D9               	goto	l1662
 30088                           
 30089                           ;display.c: 525: cntr = 0;
 30090  002E5C  0E00               	movlw	0
 30091  002E5E  6E1D               	movwf	__display_done@cntr,c
 30092                           
 30093                           ;display.c: 526: while(done_line2[cntr])
 30094  002E60  D017               	goto	l1664
 30095  002E62                     
 30096                           ;display.c: 527: display_content[1][cntr] = done_line2[cntr++];
 30097  002E62  501D               	movf	__display_done@cntr,w,c
 30098  002E64  0D01               	mullw	1
 30099  002E66  0E9D               	movlw	low _done_line2
 30100  002E68  24F3               	addwf	prodl,w,c
 30101  002E6A  6EF6               	movwf	tblptrl,c
 30102  002E6C  0E8E               	movlw	high _done_line2
 30103  002E6E  20F4               	addwfc	prodh,w,c
 30104  002E70  6EF7               	movwf	tblptrh,c
 30105  002E72                     	if	1	;There are 3 active tblptr bytes
 30106  002E72  6AF8               	clrf	tblptru,c
 30107  002E74  0E00               	movlw	low (__mediumconst shr (0+16))
 30108  002E76  22F8               	addwfc	tblptru,f,c
 30109  002E78                     	endif
 30110  002E78  501D               	movf	__display_done@cntr,w,c
 30111  002E7A  0D01               	mullw	1
 30112  002E7C  0E8C               	movlw	low (_display_content+20)
 30113  002E7E  24F3               	addwf	prodl,w,c
 30114  002E80  6ED9               	movwf	fsr2l,c
 30115  002E82  0E01               	movlw	high (_display_content+20)
 30116  002E84  20F4               	addwfc	prodh,w,c
 30117  002E86  6EDA               	movwf	fsr2h,c
 30118  002E88  0008               	tblrd		*
 30119  002E8A  CFF5 FFDF          	movff	tablat,indf2
 30120  002E8E  2A1D               	incf	__display_done@cntr,f,c
 30121  002E90                     l1664:
 30122  002E90  501D               	movf	__display_done@cntr,w,c
 30123  002E92  0D01               	mullw	1
 30124  002E94  0E9D               	movlw	low _done_line2
 30125  002E96  24F3               	addwf	prodl,w,c
 30126  002E98  6EF6               	movwf	tblptrl,c
 30127  002E9A  0E8E               	movlw	high _done_line2
 30128  002E9C  20F4               	addwfc	prodh,w,c
 30129  002E9E  6EF7               	movwf	tblptrh,c
 30130  002EA0                     	if	1	;There are 3 active tblptr bytes
 30131  002EA0  6AF8               	clrf	tblptru,c
 30132  002EA2  0E00               	movlw	low (__mediumconst shr (0+16))
 30133  002EA4  22F8               	addwfc	tblptru,f,c
 30134  002EA6                     	endif
 30135  002EA6  0008               	tblrd		*
 30136  002EA8  50F5               	movf	tablat,w,c
 30137  002EAA  0900               	iorlw	0
 30138  002EAC  A4D8               	btfss	status,2,c
 30139  002EAE  D7D9               	goto	l1665
 30140                           
 30141                           ;display.c: 528: cntr = 0;
 30142  002EB0  0E00               	movlw	0
 30143  002EB2  6E1D               	movwf	__display_done@cntr,c
 30144                           
 30145                           ;display.c: 529: while(done_line3[cntr])
 30146  002EB4  D017               	goto	l1667
 30147  002EB6                     
 30148                           ;display.c: 530: display_content[2][cntr] = done_line3[cntr++];
 30149  002EB6  501D               	movf	__display_done@cntr,w,c
 30150  002EB8  0D01               	mullw	1
 30151  002EBA  0E58               	movlw	low _done_line3
 30152  002EBC  24F3               	addwf	prodl,w,c
 30153  002EBE  6EF6               	movwf	tblptrl,c
 30154  002EC0  0E8D               	movlw	high _done_line3
 30155  002EC2  20F4               	addwfc	prodh,w,c
 30156  002EC4  6EF7               	movwf	tblptrh,c
 30157  002EC6                     	if	1	;There are 3 active tblptr bytes
 30158  002EC6  6AF8               	clrf	tblptru,c
 30159  002EC8  0E00               	movlw	low (__mediumconst shr (0+16))
 30160  002ECA  22F8               	addwfc	tblptru,f,c
 30161  002ECC                     	endif
 30162  002ECC  501D               	movf	__display_done@cntr,w,c
 30163  002ECE  0D01               	mullw	1
 30164  002ED0  0EA0               	movlw	low (_display_content+40)
 30165  002ED2  24F3               	addwf	prodl,w,c
 30166  002ED4  6ED9               	movwf	fsr2l,c
 30167  002ED6  0E01               	movlw	high (_display_content+40)
 30168  002ED8  20F4               	addwfc	prodh,w,c
 30169  002EDA  6EDA               	movwf	fsr2h,c
 30170  002EDC  0008               	tblrd		*
 30171  002EDE  CFF5 FFDF          	movff	tablat,indf2
 30172  002EE2  2A1D               	incf	__display_done@cntr,f,c
 30173  002EE4                     l1667:
 30174  002EE4  501D               	movf	__display_done@cntr,w,c
 30175  002EE6  0D01               	mullw	1
 30176  002EE8  0E58               	movlw	low _done_line3
 30177  002EEA  24F3               	addwf	prodl,w,c
 30178  002EEC  6EF6               	movwf	tblptrl,c
 30179  002EEE  0E8D               	movlw	high _done_line3
 30180  002EF0  20F4               	addwfc	prodh,w,c
 30181  002EF2  6EF7               	movwf	tblptrh,c
 30182  002EF4                     	if	1	;There are 3 active tblptr bytes
 30183  002EF4  6AF8               	clrf	tblptru,c
 30184  002EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 30185  002EF8  22F8               	addwfc	tblptru,f,c
 30186  002EFA                     	endif
 30187  002EFA  0008               	tblrd		*
 30188  002EFC  50F5               	movf	tablat,w,c
 30189  002EFE  0900               	iorlw	0
 30190  002F00  A4D8               	btfss	status,2,c
 30191  002F02  D7D9               	goto	l1668
 30192                           
 30193                           ;display.c: 531: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30194  002F04  EC03  F039         	call	_bootloader_get_flashPagesWritten	;wreg free
 30195  002F08  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30196  002F0C  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30197  002F10  501D               	movf	__display_done@cntr,w,c
 30198  002F12  0D01               	mullw	1
 30199  002F14  0EA0               	movlw	low (_display_content+40)
 30200  002F16  24F3               	addwf	prodl,w,c
 30201  002F18  6E1B               	movwf	__display_itoa_u16@text,c
 30202  002F1A  0E01               	movlw	high (_display_content+40)
 30203  002F1C  20F4               	addwfc	prodh,w,c
 30204  002F1E  6E1C               	movwf	__display_itoa_u16@text+1,c
 30205  002F20  ECCD  F027         	call	__display_itoa_u16	;wreg free
 30206                           
 30207                           ;display.c: 532: cntr = 0;
 30208  002F24  0E00               	movlw	0
 30209  002F26  6E1D               	movwf	__display_done@cntr,c
 30210                           
 30211                           ;display.c: 533: while(done_line4[cntr])
 30212  002F28  D017               	goto	l1670
 30213  002F2A                     
 30214                           ;display.c: 534: display_content[3][cntr] = done_line4[cntr++];
 30215  002F2A  501D               	movf	__display_done@cntr,w,c
 30216  002F2C  0D01               	mullw	1
 30217  002F2E  0E48               	movlw	low _done_line4
 30218  002F30  24F3               	addwf	prodl,w,c
 30219  002F32  6EF6               	movwf	tblptrl,c
 30220  002F34  0E8D               	movlw	high _done_line4
 30221  002F36  20F4               	addwfc	prodh,w,c
 30222  002F38  6EF7               	movwf	tblptrh,c
 30223  002F3A                     	if	1	;There are 3 active tblptr bytes
 30224  002F3A  6AF8               	clrf	tblptru,c
 30225  002F3C  0E00               	movlw	low (__mediumconst shr (0+16))
 30226  002F3E  22F8               	addwfc	tblptru,f,c
 30227  002F40                     	endif
 30228  002F40  501D               	movf	__display_done@cntr,w,c
 30229  002F42  0D01               	mullw	1
 30230  002F44  0EB4               	movlw	low (_display_content+60)
 30231  002F46  24F3               	addwf	prodl,w,c
 30232  002F48  6ED9               	movwf	fsr2l,c
 30233  002F4A  0E01               	movlw	high (_display_content+60)
 30234  002F4C  20F4               	addwfc	prodh,w,c
 30235  002F4E  6EDA               	movwf	fsr2h,c
 30236  002F50  0008               	tblrd		*
 30237  002F52  CFF5 FFDF          	movff	tablat,indf2
 30238  002F56  2A1D               	incf	__display_done@cntr,f,c
 30239  002F58                     l1670:
 30240  002F58  501D               	movf	__display_done@cntr,w,c
 30241  002F5A  0D01               	mullw	1
 30242  002F5C  0E48               	movlw	low _done_line4
 30243  002F5E  24F3               	addwf	prodl,w,c
 30244  002F60  6EF6               	movwf	tblptrl,c
 30245  002F62  0E8D               	movlw	high _done_line4
 30246  002F64  20F4               	addwfc	prodh,w,c
 30247  002F66  6EF7               	movwf	tblptrh,c
 30248  002F68                     	if	1	;There are 3 active tblptr bytes
 30249  002F68  6AF8               	clrf	tblptru,c
 30250  002F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 30251  002F6C  22F8               	addwfc	tblptru,f,c
 30252  002F6E                     	endif
 30253  002F6E  0008               	tblrd		*
 30254  002F70  50F5               	movf	tablat,w,c
 30255  002F72  0900               	iorlw	0
 30256  002F74  B4D8               	btfsc	status,2,c
 30257  002F76  0012               	return	
 30258  002F78  D7D8               	goto	l1671
 30259  002F7A                     __end_of__display_done:
 30260                           	opt stack 0
 30261                           tosu	equ	0xFFF
 30262                           tosh	equ	0xFFE
 30263                           tosl	equ	0xFFD
 30264                           pclath	equ	0xFFA
 30265                           tblptru	equ	0xFF8
 30266                           tblptrh	equ	0xFF7
 30267                           tblptrl	equ	0xFF6
 30268                           tablat	equ	0xFF5
 30269                           prodh	equ	0xFF4
 30270                           prodl	equ	0xFF3
 30271                           intcon	equ	0xFF2
 30272                           intcon2	equ	0xFF1
 30273                           intcon3	equ	0xFF0
 30274                           indf0	equ	0xFEF
 30275                           postinc0	equ	0xFEE
 30276                           fsr0h	equ	0xFEA
 30277                           fsr0l	equ	0xFE9
 30278                           wreg	equ	0xFE8
 30279                           indf1	equ	0xFE7
 30280                           postdec1	equ	0xFE5
 30281                           plusw1	equ	0xFE3
 30282                           fsr1h	equ	0xFE2
 30283                           fsr1l	equ	0xFE1
 30284                           indf2	equ	0xFDF
 30285                           postinc2	equ	0xFDE
 30286                           postdec2	equ	0xFDD
 30287                           plusw2	equ	0xFDB
 30288                           fsr2h	equ	0xFDA
 30289                           fsr2l	equ	0xFD9
 30290                           status	equ	0xFD8
 30291                           
 30292 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30293 ;; Defined at:
 30294 ;;		line 514 in file "bootloader.c"
 30295 ;; Parameters:    Size  Location     Type
 30296 ;;		None
 30297 ;; Auto vars:     Size  Location     Type
 30298 ;;		None
 30299 ;; Return value:  Size  Location     Type
 30300 ;;                  2    0[COMRAM] unsigned int 
 30301 ;; Registers used:
 30302 ;;		None
 30303 ;; Tracked objects:
 30304 ;;		On entry : 0/0
 30305 ;;		On exit  : 0/0
 30306 ;;		Unchanged: 0/0
 30307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30312 ;;Total ram usage:        2 bytes
 30313 ;; Hardware stack levels used:    1
 30314 ;; This function calls:
 30315 ;;		Nothing
 30316 ;; This function is called by:
 30317 ;;		__display_programming
 30318 ;;		__display_done
 30319 ;;		__fill_buffer_get_bootloader_details
 30320 ;; This function uses a non-reentrant model
 30321 ;;
 30322                           
 30323                           	psect	text153
 30324  007206                     __ptext153:
 30325                           	opt stack 0
 30326  007206                     _bootloader_get_flashPagesWritten:
 30327                           	opt stack 25
 30328                           
 30329                           ;bootloader.c: 516: return flash_pages_written;
 30330                           
 30331                           ;incstack = 0
 30332  007206  C15F  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30333  00720A  C160  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30334  00720E  0012               	return		;funcret
 30335  007210                     __end_of_bootloader_get_flashPagesWritten:
 30336                           	opt stack 0
 30337                           tosu	equ	0xFFF
 30338                           tosh	equ	0xFFE
 30339                           tosl	equ	0xFFD
 30340                           pclath	equ	0xFFA
 30341                           tblptru	equ	0xFF8
 30342                           tblptrh	equ	0xFF7
 30343                           tblptrl	equ	0xFF6
 30344                           tablat	equ	0xFF5
 30345                           prodh	equ	0xFF4
 30346                           prodl	equ	0xFF3
 30347                           intcon	equ	0xFF2
 30348                           intcon2	equ	0xFF1
 30349                           intcon3	equ	0xFF0
 30350                           indf0	equ	0xFEF
 30351                           postinc0	equ	0xFEE
 30352                           fsr0h	equ	0xFEA
 30353                           fsr0l	equ	0xFE9
 30354                           wreg	equ	0xFE8
 30355                           indf1	equ	0xFE7
 30356                           postdec1	equ	0xFE5
 30357                           plusw1	equ	0xFE3
 30358                           fsr1h	equ	0xFE2
 30359                           fsr1l	equ	0xFE1
 30360                           indf2	equ	0xFDF
 30361                           postinc2	equ	0xFDE
 30362                           postdec2	equ	0xFDD
 30363                           plusw2	equ	0xFDB
 30364                           fsr2h	equ	0xFDA
 30365                           fsr2l	equ	0xFD9
 30366                           status	equ	0xFD8
 30367                           
 30368 ;; *************** function __display_clear *****************
 30369 ;; Defined at:
 30370 ;;		line 81 in file "display.c"
 30371 ;; Parameters:    Size  Location     Type
 30372 ;;		None
 30373 ;; Auto vars:     Size  Location     Type
 30374 ;;  col             1    3[COMRAM] unsigned char 
 30375 ;;  row             1    2[COMRAM] unsigned char 
 30376 ;; Return value:  Size  Location     Type
 30377 ;;                  1    wreg      void 
 30378 ;; Registers used:
 30379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30380 ;; Tracked objects:
 30381 ;;		On entry : 0/0
 30382 ;;		On exit  : 0/0
 30383 ;;		Unchanged: 0/0
 30384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30389 ;;Total ram usage:        4 bytes
 30390 ;; Hardware stack levels used:    1
 30391 ;; This function calls:
 30392 ;;		Nothing
 30393 ;; This function is called by:
 30394 ;;		_display_prepare
 30395 ;; This function uses a non-reentrant model
 30396 ;;
 30397                           
 30398                           	psect	text154
 30399  0067DE                     __ptext154:
 30400                           	opt stack 0
 30401  0067DE                     __display_clear:
 30402                           	opt stack 26
 30403                           
 30404                           ;display.c: 83: uint8_t row;;display.c: 84: uint8_t col;;display.c: 85: for(row=0;row<4;
      +                          ++row)
 30405                           
 30406                           ;incstack = 0
 30407  0067DE  0E00               	movlw	0
 30408  0067E0  6E03               	movwf	__display_clear@row,c
 30409  0067E2                     l10764:
 30410  0067E2  0E03               	movlw	3
 30411  0067E4  6403               	cpfsgt	__display_clear@row,c
 30412  0067E6  D001               	goto	l1427
 30413  0067E8  0012               	return	
 30414  0067EA                     l1427:
 30415                           
 30416                           ;display.c: 86: {;display.c: 87: for(col=0;col<20;++col)
 30417  0067EA  0E00               	movlw	0
 30418  0067EC  6E04               	movwf	__display_clear@col,c
 30419  0067EE                     l10770:
 30420  0067EE  0E13               	movlw	19
 30421  0067F0  6404               	cpfsgt	__display_clear@col,c
 30422  0067F2  D001               	goto	l1429
 30423  0067F4  D016               	goto	u8170
 30424  0067F6                     l1429:
 30425                           
 30426                           ;display.c: 88: {;display.c: 89: display_content[row][col] = ' ';
 30427  0067F6  5003               	movf	__display_clear@row,w,c
 30428  0067F8  0D14               	mullw	20
 30429  0067FA  0E78               	movlw	low _display_content
 30430  0067FC  6E01               	movwf	??__display_clear& (0+255),c
 30431  0067FE  0E01               	movlw	high _display_content
 30432  006800  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30433  006802  50F3               	movf	prodl,w,c
 30434  006804  2601               	addwf	??__display_clear,f,c
 30435  006806  50F4               	movf	prodh,w,c
 30436  006808  2202               	addwfc	??__display_clear+1,f,c
 30437  00680A  5004               	movf	__display_clear@col,w,c
 30438  00680C  0D01               	mullw	1
 30439  00680E  50F3               	movf	prodl,w,c
 30440  006810  2401               	addwf	??__display_clear,w,c
 30441  006812  6ED9               	movwf	fsr2l,c
 30442  006814  50F4               	movf	prodh,w,c
 30443  006816  2002               	addwfc	??__display_clear+1,w,c
 30444  006818  6EDA               	movwf	fsr2h,c
 30445  00681A  0E20               	movlw	32
 30446  00681C  6EDF               	movwf	indf2,c
 30447  00681E  2A04               	incf	__display_clear@col,f,c
 30448  006820  D7E6               	goto	l10770
 30449  006822                     u8170:
 30450  006822  2A03               	incf	__display_clear@row,f,c
 30451  006824  D7DE               	goto	l10764
 30452  006826                     __end_of__display_clear:
 30453                           	opt stack 0
 30454                           tosu	equ	0xFFF
 30455                           tosh	equ	0xFFE
 30456                           tosl	equ	0xFFD
 30457                           pclath	equ	0xFFA
 30458                           tblptru	equ	0xFF8
 30459                           tblptrh	equ	0xFF7
 30460                           tblptrl	equ	0xFF6
 30461                           tablat	equ	0xFF5
 30462                           prodh	equ	0xFF4
 30463                           prodl	equ	0xFF3
 30464                           intcon	equ	0xFF2
 30465                           intcon2	equ	0xFF1
 30466                           intcon3	equ	0xFF0
 30467                           indf0	equ	0xFEF
 30468                           postinc0	equ	0xFEE
 30469                           fsr0h	equ	0xFEA
 30470                           fsr0l	equ	0xFE9
 30471                           wreg	equ	0xFE8
 30472                           indf1	equ	0xFE7
 30473                           postdec1	equ	0xFE5
 30474                           plusw1	equ	0xFE3
 30475                           fsr1h	equ	0xFE2
 30476                           fsr1l	equ	0xFE1
 30477                           indf2	equ	0xFDF
 30478                           postinc2	equ	0xFDE
 30479                           postdec2	equ	0xFDD
 30480                           plusw2	equ	0xFDB
 30481                           fsr2h	equ	0xFDA
 30482                           fsr2l	equ	0xFD9
 30483                           status	equ	0xFD8
 30484                           
 30485 ;; *************** function __display_checked *****************
 30486 ;; Defined at:
 30487 ;;		line 423 in file "display.c"
 30488 ;; Parameters:    Size  Location     Type
 30489 ;;		None
 30490 ;; Auto vars:     Size  Location     Type
 30491 ;;  cntr            1   31[COMRAM] unsigned char 
 30492 ;;  start           1   30[COMRAM] unsigned char 
 30493 ;; Return value:  Size  Location     Type
 30494 ;;                  1    wreg      void 
 30495 ;; Registers used:
 30496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30497 ;; Tracked objects:
 30498 ;;		On entry : 0/0
 30499 ;;		On exit  : 0/0
 30500 ;;		Unchanged: 0/0
 30501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30506 ;;Total ram usage:        4 bytes
 30507 ;; Hardware stack levels used:    1
 30508 ;; Hardware stack levels required when called:    4
 30509 ;; This function calls:
 30510 ;;		__display_itoa_u16
 30511 ;;		_bootloader_get_total_entries
 30512 ;; This function is called by:
 30513 ;;		_display_prepare
 30514 ;; This function uses a non-reentrant model
 30515 ;;
 30516                           
 30517                           	psect	text155
 30518  002B1A                     __ptext155:
 30519                           	opt stack 0
 30520  002B1A                     __display_checked:
 30521                           	opt stack 22
 30522                           
 30523                           ;display.c: 425: uint8_t cntr;;display.c: 426: uint8_t start;;display.c: 427: cntr = 0;
 30524                           
 30525                           ;incstack = 0
 30526  002B1A  0E00               	movlw	0
 30527  002B1C  6E20               	movwf	__display_checked@cntr,c
 30528                           
 30529                           ;display.c: 428: while(checked_line1[cntr])
 30530  002B1E  D017               	goto	l1597
 30531  002B20                     
 30532                           ;display.c: 429: display_content[0][cntr] = checked_line1[cntr++];
 30533  002B20  5020               	movf	__display_checked@cntr,w,c
 30534  002B22  0D01               	mullw	1
 30535  002B24  0EA8               	movlw	low _checked_line1
 30536  002B26  24F3               	addwf	prodl,w,c
 30537  002B28  6EF6               	movwf	tblptrl,c
 30538  002B2A  0E8D               	movlw	high _checked_line1
 30539  002B2C  20F4               	addwfc	prodh,w,c
 30540  002B2E  6EF7               	movwf	tblptrh,c
 30541  002B30                     	if	1	;There are 3 active tblptr bytes
 30542  002B30  6AF8               	clrf	tblptru,c
 30543  002B32  0E00               	movlw	low (__mediumconst shr (0+16))
 30544  002B34  22F8               	addwfc	tblptru,f,c
 30545  002B36                     	endif
 30546  002B36  5020               	movf	__display_checked@cntr,w,c
 30547  002B38  0D01               	mullw	1
 30548  002B3A  0E78               	movlw	low _display_content
 30549  002B3C  24F3               	addwf	prodl,w,c
 30550  002B3E  6ED9               	movwf	fsr2l,c
 30551  002B40  0E01               	movlw	high _display_content
 30552  002B42  20F4               	addwfc	prodh,w,c
 30553  002B44  6EDA               	movwf	fsr2h,c
 30554  002B46  0008               	tblrd		*
 30555  002B48  CFF5 FFDF          	movff	tablat,indf2
 30556  002B4C  2A20               	incf	__display_checked@cntr,f,c
 30557  002B4E                     l1597:
 30558  002B4E  5020               	movf	__display_checked@cntr,w,c
 30559  002B50  0D01               	mullw	1
 30560  002B52  0EA8               	movlw	low _checked_line1
 30561  002B54  24F3               	addwf	prodl,w,c
 30562  002B56  6EF6               	movwf	tblptrl,c
 30563  002B58  0E8D               	movlw	high _checked_line1
 30564  002B5A  20F4               	addwfc	prodh,w,c
 30565  002B5C  6EF7               	movwf	tblptrh,c
 30566  002B5E                     	if	1	;There are 3 active tblptr bytes
 30567  002B5E  6AF8               	clrf	tblptru,c
 30568  002B60  0E00               	movlw	low (__mediumconst shr (0+16))
 30569  002B62  22F8               	addwfc	tblptru,f,c
 30570  002B64                     	endif
 30571  002B64  0008               	tblrd		*
 30572  002B66  50F5               	movf	tablat,w,c
 30573  002B68  0900               	iorlw	0
 30574  002B6A  A4D8               	btfss	status,2,c
 30575  002B6C  D7D9               	goto	l1598
 30576                           
 30577                           ;display.c: 430: cntr = 0;
 30578  002B6E  0E00               	movlw	0
 30579  002B70  6E20               	movwf	__display_checked@cntr,c
 30580                           
 30581                           ;display.c: 431: while(checked_line2[cntr])
 30582  002B72  D017               	goto	l1600
 30583  002B74                     
 30584                           ;display.c: 432: display_content[1][cntr] = checked_line2[cntr++];
 30585  002B74  5020               	movf	__display_checked@cntr,w,c
 30586  002B76  0D01               	mullw	1
 30587  002B78  0E6D               	movlw	low _checked_line2
 30588  002B7A  24F3               	addwf	prodl,w,c
 30589  002B7C  6EF6               	movwf	tblptrl,c
 30590  002B7E  0E8C               	movlw	high _checked_line2
 30591  002B80  20F4               	addwfc	prodh,w,c
 30592  002B82  6EF7               	movwf	tblptrh,c
 30593  002B84                     	if	1	;There are 3 active tblptr bytes
 30594  002B84  6AF8               	clrf	tblptru,c
 30595  002B86  0E00               	movlw	low (__mediumconst shr (0+16))
 30596  002B88  22F8               	addwfc	tblptru,f,c
 30597  002B8A                     	endif
 30598  002B8A  5020               	movf	__display_checked@cntr,w,c
 30599  002B8C  0D01               	mullw	1
 30600  002B8E  0E8C               	movlw	low (_display_content+20)
 30601  002B90  24F3               	addwf	prodl,w,c
 30602  002B92  6ED9               	movwf	fsr2l,c
 30603  002B94  0E01               	movlw	high (_display_content+20)
 30604  002B96  20F4               	addwfc	prodh,w,c
 30605  002B98  6EDA               	movwf	fsr2h,c
 30606  002B9A  0008               	tblrd		*
 30607  002B9C  CFF5 FFDF          	movff	tablat,indf2
 30608  002BA0  2A20               	incf	__display_checked@cntr,f,c
 30609  002BA2                     l1600:
 30610  002BA2  5020               	movf	__display_checked@cntr,w,c
 30611  002BA4  0D01               	mullw	1
 30612  002BA6  0E6D               	movlw	low _checked_line2
 30613  002BA8  24F3               	addwf	prodl,w,c
 30614  002BAA  6EF6               	movwf	tblptrl,c
 30615  002BAC  0E8C               	movlw	high _checked_line2
 30616  002BAE  20F4               	addwfc	prodh,w,c
 30617  002BB0  6EF7               	movwf	tblptrh,c
 30618  002BB2                     	if	1	;There are 3 active tblptr bytes
 30619  002BB2  6AF8               	clrf	tblptru,c
 30620  002BB4  0E00               	movlw	low (__mediumconst shr (0+16))
 30621  002BB6  22F8               	addwfc	tblptru,f,c
 30622  002BB8                     	endif
 30623  002BB8  0008               	tblrd		*
 30624  002BBA  50F5               	movf	tablat,w,c
 30625  002BBC  0900               	iorlw	0
 30626  002BBE  A4D8               	btfss	status,2,c
 30627  002BC0  D7D9               	goto	l1601
 30628                           
 30629                           ;display.c: 434: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30630  002BC2  EC08  F039         	call	_bootloader_get_total_entries	;wreg free
 30631  002BC6  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30632  002BCA  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30633  002BCE  0EA0               	movlw	low (_display_content+40)
 30634  002BD0  6E1B               	movwf	__display_itoa_u16@text,c
 30635  002BD2  0E01               	movlw	high (_display_content+40)
 30636  002BD4  6E1C               	movwf	__display_itoa_u16@text+1,c
 30637  002BD6  ECCD  F027         	call	__display_itoa_u16	;wreg free
 30638  002BDA  6E1F               	movwf	__display_checked@start,c
 30639                           
 30640                           ;display.c: 435: start++;
 30641  002BDC  2A1F               	incf	__display_checked@start,f,c
 30642                           
 30643                           ;display.c: 436: cntr = 0;
 30644  002BDE  0E00               	movlw	0
 30645  002BE0  6E20               	movwf	__display_checked@cntr,c
 30646                           
 30647                           ;display.c: 437: while(checked_line3[cntr])
 30648  002BE2  D01C               	goto	l1603
 30649  002BE4                     
 30650                           ;display.c: 438: display_content[2][start+cntr] = checked_line3[cntr++];
 30651  002BE4  5020               	movf	__display_checked@cntr,w,c
 30652  002BE6  0D01               	mullw	1
 30653  002BE8  0E71               	movlw	low _checked_line3
 30654  002BEA  24F3               	addwf	prodl,w,c
 30655  002BEC  6EF6               	movwf	tblptrl,c
 30656  002BEE  0E8E               	movlw	high _checked_line3
 30657  002BF0  20F4               	addwfc	prodh,w,c
 30658  002BF2  6EF7               	movwf	tblptrh,c
 30659  002BF4                     	if	1	;There are 3 active tblptr bytes
 30660  002BF4  6AF8               	clrf	tblptru,c
 30661  002BF6  0E00               	movlw	low (__mediumconst shr (0+16))
 30662  002BF8  22F8               	addwfc	tblptru,f,c
 30663  002BFA                     	endif
 30664  002BFA  5020               	movf	__display_checked@cntr,w,c
 30665  002BFC  C01F  F01D         	movff	__display_checked@start,??__display_checked
 30666  002C00  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 30667  002C02  261D               	addwf	??__display_checked,f,c
 30668  002C04  0E00               	movlw	0
 30669  002C06  221E               	addwfc	??__display_checked+1,f,c
 30670  002C08  0EA0               	movlw	low (_display_content+40)
 30671  002C0A  241D               	addwf	??__display_checked,w,c
 30672  002C0C  6ED9               	movwf	fsr2l,c
 30673  002C0E  0E01               	movlw	high (_display_content+40)
 30674  002C10  201E               	addwfc	??__display_checked+1,w,c
 30675  002C12  6EDA               	movwf	fsr2h,c
 30676  002C14  0008               	tblrd		*
 30677  002C16  CFF5 FFDF          	movff	tablat,indf2
 30678  002C1A  2A20               	incf	__display_checked@cntr,f,c
 30679  002C1C                     l1603:
 30680  002C1C  5020               	movf	__display_checked@cntr,w,c
 30681  002C1E  0D01               	mullw	1
 30682  002C20  0E71               	movlw	low _checked_line3
 30683  002C22  24F3               	addwf	prodl,w,c
 30684  002C24  6EF6               	movwf	tblptrl,c
 30685  002C26  0E8E               	movlw	high _checked_line3
 30686  002C28  20F4               	addwfc	prodh,w,c
 30687  002C2A  6EF7               	movwf	tblptrh,c
 30688  002C2C                     	if	1	;There are 3 active tblptr bytes
 30689  002C2C  6AF8               	clrf	tblptru,c
 30690  002C2E  0E00               	movlw	low (__mediumconst shr (0+16))
 30691  002C30  22F8               	addwfc	tblptru,f,c
 30692  002C32                     	endif
 30693  002C32  0008               	tblrd		*
 30694  002C34  50F5               	movf	tablat,w,c
 30695  002C36  0900               	iorlw	0
 30696  002C38  A4D8               	btfss	status,2,c
 30697  002C3A  D7D4               	goto	l1604
 30698                           
 30699                           ;display.c: 440: cntr = 0;
 30700  002C3C  0E00               	movlw	0
 30701  002C3E  6E20               	movwf	__display_checked@cntr,c
 30702                           
 30703                           ;display.c: 441: while(checked_line4[cntr])
 30704  002C40  D017               	goto	l1606
 30705  002C42                     
 30706                           ;display.c: 442: display_content[3][cntr] = checked_line4[cntr++];
 30707  002C42  5020               	movf	__display_checked@cntr,w,c
 30708  002C44  0D01               	mullw	1
 30709  002C46  0E06               	movlw	low _checked_line4
 30710  002C48  24F3               	addwf	prodl,w,c
 30711  002C4A  6EF6               	movwf	tblptrl,c
 30712  002C4C  0E8D               	movlw	high _checked_line4
 30713  002C4E  20F4               	addwfc	prodh,w,c
 30714  002C50  6EF7               	movwf	tblptrh,c
 30715  002C52                     	if	1	;There are 3 active tblptr bytes
 30716  002C52  6AF8               	clrf	tblptru,c
 30717  002C54  0E00               	movlw	low (__mediumconst shr (0+16))
 30718  002C56  22F8               	addwfc	tblptru,f,c
 30719  002C58                     	endif
 30720  002C58  5020               	movf	__display_checked@cntr,w,c
 30721  002C5A  0D01               	mullw	1
 30722  002C5C  0EB4               	movlw	low (_display_content+60)
 30723  002C5E  24F3               	addwf	prodl,w,c
 30724  002C60  6ED9               	movwf	fsr2l,c
 30725  002C62  0E01               	movlw	high (_display_content+60)
 30726  002C64  20F4               	addwfc	prodh,w,c
 30727  002C66  6EDA               	movwf	fsr2h,c
 30728  002C68  0008               	tblrd		*
 30729  002C6A  CFF5 FFDF          	movff	tablat,indf2
 30730  002C6E  2A20               	incf	__display_checked@cntr,f,c
 30731  002C70                     l1606:
 30732  002C70  5020               	movf	__display_checked@cntr,w,c
 30733  002C72  0D01               	mullw	1
 30734  002C74  0E06               	movlw	low _checked_line4
 30735  002C76  24F3               	addwf	prodl,w,c
 30736  002C78  6EF6               	movwf	tblptrl,c
 30737  002C7A  0E8D               	movlw	high _checked_line4
 30738  002C7C  20F4               	addwfc	prodh,w,c
 30739  002C7E  6EF7               	movwf	tblptrh,c
 30740  002C80                     	if	1	;There are 3 active tblptr bytes
 30741  002C80  6AF8               	clrf	tblptru,c
 30742  002C82  0E00               	movlw	low (__mediumconst shr (0+16))
 30743  002C84  22F8               	addwfc	tblptru,f,c
 30744  002C86                     	endif
 30745  002C86  0008               	tblrd		*
 30746  002C88  50F5               	movf	tablat,w,c
 30747  002C8A  0900               	iorlw	0
 30748  002C8C  B4D8               	btfsc	status,2,c
 30749  002C8E  0012               	return	
 30750  002C90  D7D8               	goto	l1607
 30751  002C92                     __end_of__display_checked:
 30752                           	opt stack 0
 30753                           tosu	equ	0xFFF
 30754                           tosh	equ	0xFFE
 30755                           tosl	equ	0xFFD
 30756                           pclath	equ	0xFFA
 30757                           tblptru	equ	0xFF8
 30758                           tblptrh	equ	0xFF7
 30759                           tblptrl	equ	0xFF6
 30760                           tablat	equ	0xFF5
 30761                           prodh	equ	0xFF4
 30762                           prodl	equ	0xFF3
 30763                           intcon	equ	0xFF2
 30764                           intcon2	equ	0xFF1
 30765                           intcon3	equ	0xFF0
 30766                           indf0	equ	0xFEF
 30767                           postinc0	equ	0xFEE
 30768                           fsr0h	equ	0xFEA
 30769                           fsr0l	equ	0xFE9
 30770                           wreg	equ	0xFE8
 30771                           indf1	equ	0xFE7
 30772                           postdec1	equ	0xFE5
 30773                           plusw1	equ	0xFE3
 30774                           fsr1h	equ	0xFE2
 30775                           fsr1l	equ	0xFE1
 30776                           indf2	equ	0xFDF
 30777                           postinc2	equ	0xFDE
 30778                           postdec2	equ	0xFDD
 30779                           plusw2	equ	0xFDB
 30780                           fsr2h	equ	0xFDA
 30781                           fsr2l	equ	0xFD9
 30782                           status	equ	0xFD8
 30783                           
 30784 ;; *************** function _bootloader_get_total_entries *****************
 30785 ;; Defined at:
 30786 ;;		line 473 in file "bootloader.c"
 30787 ;; Parameters:    Size  Location     Type
 30788 ;;		None
 30789 ;; Auto vars:     Size  Location     Type
 30790 ;;		None
 30791 ;; Return value:  Size  Location     Type
 30792 ;;                  2    0[COMRAM] unsigned int 
 30793 ;; Registers used:
 30794 ;;		None
 30795 ;; Tracked objects:
 30796 ;;		On entry : 0/0
 30797 ;;		On exit  : 0/0
 30798 ;;		Unchanged: 0/0
 30799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30804 ;;Total ram usage:        2 bytes
 30805 ;; Hardware stack levels used:    1
 30806 ;; This function calls:
 30807 ;;		Nothing
 30808 ;; This function is called by:
 30809 ;;		__display_checked
 30810 ;;		__display_programming
 30811 ;;		__fill_buffer_get_bootloader_details
 30812 ;; This function uses a non-reentrant model
 30813 ;;
 30814                           
 30815                           	psect	text156
 30816  007210                     __ptext156:
 30817                           	opt stack 0
 30818  007210                     _bootloader_get_total_entries:
 30819                           	opt stack 25
 30820                           
 30821                           ;bootloader.c: 475: return total_hex_file_entries;
 30822                           
 30823                           ;incstack = 0
 30824  007210  C161  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30825  007214  C162  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30826  007218  0012               	return		;funcret
 30827  00721A                     __end_of_bootloader_get_total_entries:
 30828                           	opt stack 0
 30829                           tosu	equ	0xFFF
 30830                           tosh	equ	0xFFE
 30831                           tosl	equ	0xFFD
 30832                           pclath	equ	0xFFA
 30833                           tblptru	equ	0xFF8
 30834                           tblptrh	equ	0xFF7
 30835                           tblptrl	equ	0xFF6
 30836                           tablat	equ	0xFF5
 30837                           prodh	equ	0xFF4
 30838                           prodl	equ	0xFF3
 30839                           intcon	equ	0xFF2
 30840                           intcon2	equ	0xFF1
 30841                           intcon3	equ	0xFF0
 30842                           indf0	equ	0xFEF
 30843                           postinc0	equ	0xFEE
 30844                           fsr0h	equ	0xFEA
 30845                           fsr0l	equ	0xFE9
 30846                           wreg	equ	0xFE8
 30847                           indf1	equ	0xFE7
 30848                           postdec1	equ	0xFE5
 30849                           plusw1	equ	0xFE3
 30850                           fsr1h	equ	0xFE2
 30851                           fsr1l	equ	0xFE1
 30852                           indf2	equ	0xFDF
 30853                           postinc2	equ	0xFDE
 30854                           postdec2	equ	0xFDD
 30855                           plusw2	equ	0xFDB
 30856                           fsr2h	equ	0xFDA
 30857                           fsr2l	equ	0xFD9
 30858                           status	equ	0xFD8
 30859                           
 30860 ;; *************** function __display_itoa_u16 *****************
 30861 ;; Defined at:
 30862 ;;		line 94 in file "display.c"
 30863 ;; Parameters:    Size  Location     Type
 30864 ;;  value           2   24[COMRAM] unsigned int 
 30865 ;;  text            2   26[COMRAM] PTR unsigned char 
 30866 ;;		 -> display_content(80), 
 30867 ;; Auto vars:     Size  Location     Type
 30868 ;;		None
 30869 ;; Return value:  Size  Location     Type
 30870 ;;                  1    wreg      unsigned char 
 30871 ;; Registers used:
 30872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30873 ;; Tracked objects:
 30874 ;;		On entry : 0/0
 30875 ;;		On exit  : 0/0
 30876 ;;		Unchanged: 0/0
 30877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;Total ram usage:        4 bytes
 30883 ;; Hardware stack levels used:    1
 30884 ;; Hardware stack levels required when called:    3
 30885 ;; This function calls:
 30886 ;;		_itoa
 30887 ;; This function is called by:
 30888 ;;		__display_start
 30889 ;;		__display_verify
 30890 ;;		__display_checked
 30891 ;;		__display_failed
 30892 ;;		__display_programming
 30893 ;;		__display_done
 30894 ;; This function uses a non-reentrant model
 30895 ;;
 30896                           
 30897                           	psect	text157
 30898  004F9A                     __ptext157:
 30899                           	opt stack 0
 30900  004F9A                     __display_itoa_u16:
 30901                           	opt stack 22
 30902                           
 30903                           ;display.c: 96: itoa(text, value, 10);
 30904                           
 30905                           ;incstack = 0
 30906  004F9A  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 30907  004F9E  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 30908  004FA2  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 30909  004FA6  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 30910  004FAA  0E00               	movlw	0
 30911  004FAC  6E16               	movwf	itoa@base+1,c
 30912  004FAE  0E0A               	movlw	10
 30913  004FB0  6E15               	movwf	itoa@base,c
 30914  004FB2  ECBF  F034         	call	_itoa	;wreg free
 30915                           
 30916                           ;display.c: 97: if(value>9999)
 30917  004FB6  0E10               	movlw	16
 30918  004FB8  5C19               	subwf	__display_itoa_u16@value,w,c
 30919  004FBA  0E27               	movlw	39
 30920  004FBC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30921  004FBE  A0D8               	btfss	status,0,c
 30922  004FC0  D00A               	goto	l1434
 30923                           
 30924                           ;display.c: 98: {;display.c: 99: *(text+5) = ' ';
 30925  004FC2  EE20 F005          	lfsr	2,5
 30926  004FC6  501B               	movf	__display_itoa_u16@text,w,c
 30927  004FC8  26D9               	addwf	fsr2l,f,c
 30928  004FCA  501C               	movf	__display_itoa_u16@text+1,w,c
 30929  004FCC  22DA               	addwfc	fsr2h,f,c
 30930  004FCE  0E20               	movlw	32
 30931  004FD0  6EDF               	movwf	indf2,c
 30932                           
 30933                           ;display.c: 100: return 5;
 30934  004FD2  0E05               	movlw	5
 30935                           
 30936                           ;display.c: 101: }
 30937  004FD4  0012               	return	
 30938  004FD6                     l1434:
 30939                           
 30940                           ;display.c: 102: else if (value>999)
 30941  004FD6  0EE8               	movlw	232
 30942  004FD8  5C19               	subwf	__display_itoa_u16@value,w,c
 30943  004FDA  0E03               	movlw	3
 30944  004FDC  581A               	subwfb	__display_itoa_u16@value+1,w,c
 30945  004FDE  A0D8               	btfss	status,0,c
 30946  004FE0  D00A               	goto	l1437
 30947                           
 30948                           ;display.c: 103: {;display.c: 104: *(text+4) = ' ';
 30949  004FE2  EE20 F004          	lfsr	2,4
 30950  004FE6  501B               	movf	__display_itoa_u16@text,w,c
 30951  004FE8  26D9               	addwf	fsr2l,f,c
 30952  004FEA  501C               	movf	__display_itoa_u16@text+1,w,c
 30953  004FEC  22DA               	addwfc	fsr2h,f,c
 30954  004FEE  0E20               	movlw	32
 30955  004FF0  6EDF               	movwf	indf2,c
 30956                           
 30957                           ;display.c: 105: return 4;
 30958  004FF2  0E04               	movlw	4
 30959                           
 30960                           ;display.c: 106: }
 30961  004FF4  0012               	return	
 30962  004FF6                     l1437:
 30963                           
 30964                           ;display.c: 107: else if (value>99)
 30965  004FF6  501A               	movf	__display_itoa_u16@value+1,w,c
 30966  004FF8  E104               	bnz	u7570
 30967  004FFA  0E64               	movlw	100
 30968  004FFC  5C19               	subwf	__display_itoa_u16@value,w,c
 30969  004FFE  A0D8               	btfss	status,0,c
 30970  005000  D00A               	goto	l1439
 30971  005002                     u7570:
 30972                           
 30973                           ;display.c: 108: {;display.c: 109: *(text+3) = ' ';
 30974  005002  EE20 F003          	lfsr	2,3
 30975  005006  501B               	movf	__display_itoa_u16@text,w,c
 30976  005008  26D9               	addwf	fsr2l,f,c
 30977  00500A  501C               	movf	__display_itoa_u16@text+1,w,c
 30978  00500C  22DA               	addwfc	fsr2h,f,c
 30979  00500E  0E20               	movlw	32
 30980  005010  6EDF               	movwf	indf2,c
 30981                           
 30982                           ;display.c: 110: return 3;
 30983  005012  0E03               	movlw	3
 30984                           
 30985                           ;display.c: 111: }
 30986  005014  0012               	return	
 30987  005016                     l1439:
 30988                           
 30989                           ;display.c: 112: else if (value>9)
 30990  005016  501A               	movf	__display_itoa_u16@value+1,w,c
 30991  005018  E104               	bnz	u7580
 30992  00501A  0E0A               	movlw	10
 30993  00501C  5C19               	subwf	__display_itoa_u16@value,w,c
 30994  00501E  A0D8               	btfss	status,0,c
 30995  005020  D00A               	goto	l1441
 30996  005022                     u7580:
 30997                           
 30998                           ;display.c: 113: {;display.c: 114: *(text+2) = ' ';
 30999  005022  EE20 F002          	lfsr	2,2
 31000  005026  501B               	movf	__display_itoa_u16@text,w,c
 31001  005028  26D9               	addwf	fsr2l,f,c
 31002  00502A  501C               	movf	__display_itoa_u16@text+1,w,c
 31003  00502C  22DA               	addwfc	fsr2h,f,c
 31004  00502E  0E20               	movlw	32
 31005  005030  6EDF               	movwf	indf2,c
 31006                           
 31007                           ;display.c: 115: return 2;
 31008  005032  0E02               	movlw	2
 31009                           
 31010                           ;display.c: 116: }
 31011  005034  0012               	return	
 31012  005036                     l1441:
 31013                           
 31014                           ;display.c: 117: else;display.c: 118: {;display.c: 119: *(text+1) = ' ';
 31015  005036  EE20 F001          	lfsr	2,1
 31016  00503A  501B               	movf	__display_itoa_u16@text,w,c
 31017  00503C  26D9               	addwf	fsr2l,f,c
 31018  00503E  501C               	movf	__display_itoa_u16@text+1,w,c
 31019  005040  22DA               	addwfc	fsr2h,f,c
 31020  005042  0E20               	movlw	32
 31021  005044  6EDF               	movwf	indf2,c
 31022                           
 31023                           ;display.c: 120: return 1;
 31024  005046  0E01               	movlw	1
 31025  005048  0012               	return	
 31026  00504A                     __end_of__display_itoa_u16:
 31027                           	opt stack 0
 31028                           tosu	equ	0xFFF
 31029                           tosh	equ	0xFFE
 31030                           tosl	equ	0xFFD
 31031                           pclath	equ	0xFFA
 31032                           tblptru	equ	0xFF8
 31033                           tblptrh	equ	0xFF7
 31034                           tblptrl	equ	0xFF6
 31035                           tablat	equ	0xFF5
 31036                           prodh	equ	0xFF4
 31037                           prodl	equ	0xFF3
 31038                           intcon	equ	0xFF2
 31039                           intcon2	equ	0xFF1
 31040                           intcon3	equ	0xFF0
 31041                           indf0	equ	0xFEF
 31042                           postinc0	equ	0xFEE
 31043                           fsr0h	equ	0xFEA
 31044                           fsr0l	equ	0xFE9
 31045                           wreg	equ	0xFE8
 31046                           indf1	equ	0xFE7
 31047                           postdec1	equ	0xFE5
 31048                           plusw1	equ	0xFE3
 31049                           fsr1h	equ	0xFE2
 31050                           fsr1l	equ	0xFE1
 31051                           indf2	equ	0xFDF
 31052                           postinc2	equ	0xFDE
 31053                           postdec2	equ	0xFDD
 31054                           plusw2	equ	0xFDB
 31055                           fsr2h	equ	0xFDA
 31056                           fsr2l	equ	0xFD9
 31057                           status	equ	0xFD8
 31058                           
 31059 ;; *************** function _itoa *****************
 31060 ;; Defined at:
 31061 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31062 ;; Parameters:    Size  Location     Type
 31063 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31064 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31065 ;;  val             2   18[COMRAM] int 
 31066 ;;  base            2   20[COMRAM] int 
 31067 ;; Auto vars:     Size  Location     Type
 31068 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31069 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31070 ;; Return value:  Size  Location     Type
 31071 ;;                  2   16[COMRAM] PTR unsigned char 
 31072 ;; Registers used:
 31073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31074 ;; Tracked objects:
 31075 ;;		On entry : 0/0
 31076 ;;		On exit  : 0/0
 31077 ;;		Unchanged: 0/0
 31078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31079 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31080 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31082 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31083 ;;Total ram usage:        8 bytes
 31084 ;; Hardware stack levels used:    1
 31085 ;; Hardware stack levels required when called:    2
 31086 ;; This function calls:
 31087 ;;		_utoa
 31088 ;; This function is called by:
 31089 ;;		__display_itoa_u16
 31090 ;;		__display_itoa
 31091 ;; This function uses a non-reentrant model
 31092 ;;
 31093                           
 31094                           	psect	text158
 31095  00697E                     __ptext158:
 31096                           	opt stack 0
 31097  00697E                     _itoa:
 31098                           	opt stack 22
 31099                           
 31100                           ;incstack = 0
 31101  00697E  C011  F017         	movff	itoa@buf,itoa@cp
 31102  006982  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31103  006986  AE14               	btfss	itoa@val+1,7,c
 31104  006988  D00C               	goto	l3478
 31105  00698A  C011  FFD9         	movff	itoa@buf,fsr2l
 31106  00698E  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31107  006992  0E2D               	movlw	45
 31108  006994  6EDF               	movwf	indf2,c
 31109  006996  4A11               	infsnz	itoa@buf,f,c
 31110  006998  2A12               	incf	itoa@buf+1,f,c
 31111  00699A  6C13               	negf	itoa@val,c
 31112  00699C  1E14               	comf	itoa@val+1,f,c
 31113  00699E  B0D8               	btfsc	status,0,c
 31114  0069A0  2A14               	incf	itoa@val+1,f,c
 31115  0069A2                     l3478:
 31116  0069A2  C011  F008         	movff	itoa@buf,utoa@buf
 31117  0069A6  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31118  0069AA  C013  F00A         	movff	itoa@val,utoa@val
 31119  0069AE  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31120  0069B2  C015  F00C         	movff	itoa@base,utoa@base
 31121  0069B6  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31122  0069BA  ECCA  F029         	call	_utoa	;wreg free
 31123  0069BE  0012               	return	
 31124  0069C0                     __end_of_itoa:
 31125                           	opt stack 0
 31126                           tosu	equ	0xFFF
 31127                           tosh	equ	0xFFE
 31128                           tosl	equ	0xFFD
 31129                           pclath	equ	0xFFA
 31130                           tblptru	equ	0xFF8
 31131                           tblptrh	equ	0xFF7
 31132                           tblptrl	equ	0xFF6
 31133                           tablat	equ	0xFF5
 31134                           prodh	equ	0xFF4
 31135                           prodl	equ	0xFF3
 31136                           intcon	equ	0xFF2
 31137                           intcon2	equ	0xFF1
 31138                           intcon3	equ	0xFF0
 31139                           indf0	equ	0xFEF
 31140                           postinc0	equ	0xFEE
 31141                           fsr0h	equ	0xFEA
 31142                           fsr0l	equ	0xFE9
 31143                           wreg	equ	0xFE8
 31144                           indf1	equ	0xFE7
 31145                           postdec1	equ	0xFE5
 31146                           plusw1	equ	0xFE3
 31147                           fsr1h	equ	0xFE2
 31148                           fsr1l	equ	0xFE1
 31149                           indf2	equ	0xFDF
 31150                           postinc2	equ	0xFDE
 31151                           postdec2	equ	0xFDD
 31152                           plusw2	equ	0xFDB
 31153                           fsr2h	equ	0xFDA
 31154                           fsr2l	equ	0xFD9
 31155                           status	equ	0xFD8
 31156                           
 31157 ;; *************** function _utoa *****************
 31158 ;; Defined at:
 31159 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31160 ;; Parameters:    Size  Location     Type
 31161 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31162 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31163 ;;  val             2    9[COMRAM] unsigned int 
 31164 ;;  base            2   11[COMRAM] int 
 31165 ;; Auto vars:     Size  Location     Type
 31166 ;;  v               2   13[COMRAM] unsigned int 
 31167 ;;  c               1   15[COMRAM] unsigned char 
 31168 ;; Return value:  Size  Location     Type
 31169 ;;                  2    7[COMRAM] PTR unsigned char 
 31170 ;; Registers used:
 31171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31172 ;; Tracked objects:
 31173 ;;		On entry : 0/0
 31174 ;;		On exit  : 0/0
 31175 ;;		Unchanged: 0/0
 31176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31177 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31178 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31180 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31181 ;;Total ram usage:        9 bytes
 31182 ;; Hardware stack levels used:    1
 31183 ;; Hardware stack levels required when called:    1
 31184 ;; This function calls:
 31185 ;;		___lwdiv
 31186 ;;		___lwmod
 31187 ;; This function is called by:
 31188 ;;		_itoa
 31189 ;; This function uses a non-reentrant model
 31190 ;;
 31191                           
 31192                           	psect	text159
 31193  005394                     __ptext159:
 31194                           	opt stack 0
 31195  005394                     _utoa:
 31196                           	opt stack 22
 31197                           
 31198                           ;incstack = 0
 31199  005394  C00A  F00E         	movff	utoa@val,utoa@v
 31200  005398  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31201  00539C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31202  0053A0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31203  0053A4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31204  0053A8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31205  0053AC  EC51  F033         	call	___lwdiv	;wreg free
 31206  0053B0  C001  F00E         	movff	?___lwdiv,utoa@v
 31207  0053B4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31208  0053B8  4A08               	infsnz	utoa@buf,f,c
 31209  0053BA  2A09               	incf	utoa@buf+1,f,c
 31210  0053BC  500E               	movf	utoa@v,w,c
 31211  0053BE  100F               	iorwf	utoa@v+1,w,c
 31212  0053C0  A4D8               	btfss	status,2,c
 31213  0053C2  D7EC               	goto	l3482
 31214  0053C4  C008  FFD9         	movff	utoa@buf,fsr2l
 31215  0053C8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31216  0053CC  0E00               	movlw	0
 31217  0053CE  6EDF               	movwf	indf2,c
 31218  0053D0  0608               	decf	utoa@buf,f,c
 31219  0053D2  A0D8               	btfss	status,0,c
 31220  0053D4  0609               	decf	utoa@buf+1,f,c
 31221  0053D6  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31222  0053DA  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31223  0053DE  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31224  0053E2  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31225  0053E6  ECE0  F034         	call	___lwmod	;wreg free
 31226  0053EA  5001               	movf	?___lwmod,w,c
 31227  0053EC  6E10               	movwf	utoa@c,c
 31228  0053EE  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31229  0053F2  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31230  0053F6  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31231  0053FA  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31232  0053FE  EC51  F033         	call	___lwdiv	;wreg free
 31233  005402  C001  F00A         	movff	?___lwdiv,utoa@val
 31234  005406  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31235  00540A  0E09               	movlw	9
 31236  00540C  6410               	cpfsgt	utoa@c,c
 31237  00540E  D002               	goto	l3485
 31238  005410  0E07               	movlw	7
 31239  005412  2610               	addwf	utoa@c,f,c
 31240  005414                     l3485:
 31241  005414  0E30               	movlw	48
 31242  005416  2610               	addwf	utoa@c,f,c
 31243  005418  C008  FFD9         	movff	utoa@buf,fsr2l
 31244  00541C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31245  005420  C010  FFDF         	movff	utoa@c,indf2
 31246  005424  0608               	decf	utoa@buf,f,c
 31247  005426  A0D8               	btfss	status,0,c
 31248  005428  0609               	decf	utoa@buf+1,f,c
 31249  00542A  500A               	movf	utoa@val,w,c
 31250  00542C  100B               	iorwf	utoa@val+1,w,c
 31251  00542E  A4D8               	btfss	status,2,c
 31252  005430  D7D2               	goto	l3484
 31253                           
 31254                           ;	Return value of _utoa is never used
 31255  005432  4A08               	infsnz	utoa@buf,f,c
 31256  005434  2A09               	incf	utoa@buf+1,f,c
 31257  005436  0012               	return	
 31258  005438                     __end_of_utoa:
 31259                           	opt stack 0
 31260                           tosu	equ	0xFFF
 31261                           tosh	equ	0xFFE
 31262                           tosl	equ	0xFFD
 31263                           pclath	equ	0xFFA
 31264                           tblptru	equ	0xFF8
 31265                           tblptrh	equ	0xFF7
 31266                           tblptrl	equ	0xFF6
 31267                           tablat	equ	0xFF5
 31268                           prodh	equ	0xFF4
 31269                           prodl	equ	0xFF3
 31270                           intcon	equ	0xFF2
 31271                           intcon2	equ	0xFF1
 31272                           intcon3	equ	0xFF0
 31273                           indf0	equ	0xFEF
 31274                           postinc0	equ	0xFEE
 31275                           fsr0h	equ	0xFEA
 31276                           fsr0l	equ	0xFE9
 31277                           wreg	equ	0xFE8
 31278                           indf1	equ	0xFE7
 31279                           postdec1	equ	0xFE5
 31280                           plusw1	equ	0xFE3
 31281                           fsr1h	equ	0xFE2
 31282                           fsr1l	equ	0xFE1
 31283                           indf2	equ	0xFDF
 31284                           postinc2	equ	0xFDE
 31285                           postdec2	equ	0xFDD
 31286                           plusw2	equ	0xFDB
 31287                           fsr2h	equ	0xFDA
 31288                           fsr2l	equ	0xFD9
 31289                           status	equ	0xFD8
 31290                           
 31291 ;; *************** function ___lwmod *****************
 31292 ;; Defined at:
 31293 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31294 ;; Parameters:    Size  Location     Type
 31295 ;;  dividend        2    0[COMRAM] unsigned int 
 31296 ;;  divisor         2    2[COMRAM] unsigned int 
 31297 ;; Auto vars:     Size  Location     Type
 31298 ;;  counter         1    4[COMRAM] unsigned char 
 31299 ;; Return value:  Size  Location     Type
 31300 ;;                  2    0[COMRAM] unsigned int 
 31301 ;; Registers used:
 31302 ;;		wreg, status,2, status,0
 31303 ;; Tracked objects:
 31304 ;;		On entry : 0/0
 31305 ;;		On exit  : 0/0
 31306 ;;		Unchanged: 0/0
 31307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31311 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31312 ;;Total ram usage:        5 bytes
 31313 ;; Hardware stack levels used:    1
 31314 ;; This function calls:
 31315 ;;		Nothing
 31316 ;; This function is called by:
 31317 ;;		_utoa
 31318 ;; This function uses a non-reentrant model
 31319 ;;
 31320                           
 31321                           	psect	text160
 31322  0069C0                     __ptext160:
 31323                           	opt stack 0
 31324  0069C0                     ___lwmod:
 31325                           	opt stack 22
 31326                           
 31327                           ;incstack = 0
 31328  0069C0  5003               	movf	___lwmod@divisor,w,c
 31329  0069C2  1004               	iorwf	___lwmod@divisor+1,w,c
 31330  0069C4  B4D8               	btfsc	status,2,c
 31331  0069C6  D018               	goto	l3309
 31332  0069C8  0E01               	movlw	1
 31333  0069CA  6E05               	movwf	___lwmod@counter,c
 31334  0069CC  D004               	goto	l3304
 31335  0069CE  90D8               	bcf	status,0,c
 31336  0069D0  3603               	rlcf	___lwmod@divisor,f,c
 31337  0069D2  3604               	rlcf	___lwmod@divisor+1,f,c
 31338  0069D4  2A05               	incf	___lwmod@counter,f,c
 31339  0069D6                     l3304:
 31340  0069D6  AE04               	btfss	___lwmod@divisor+1,7,c
 31341  0069D8  D7FA               	goto	l3305
 31342  0069DA                     u6630:
 31343  0069DA  5003               	movf	___lwmod@divisor,w,c
 31344  0069DC  5C01               	subwf	___lwmod@dividend,w,c
 31345  0069DE  5004               	movf	___lwmod@divisor+1,w,c
 31346  0069E0  5802               	subwfb	___lwmod@dividend+1,w,c
 31347  0069E2  A0D8               	btfss	status,0,c
 31348  0069E4  D004               	goto	l3308
 31349  0069E6  5003               	movf	___lwmod@divisor,w,c
 31350  0069E8  5E01               	subwf	___lwmod@dividend,f,c
 31351  0069EA  5004               	movf	___lwmod@divisor+1,w,c
 31352  0069EC  5A02               	subwfb	___lwmod@dividend+1,f,c
 31353  0069EE                     l3308:
 31354  0069EE  90D8               	bcf	status,0,c
 31355  0069F0  3204               	rrcf	___lwmod@divisor+1,f,c
 31356  0069F2  3203               	rrcf	___lwmod@divisor,f,c
 31357  0069F4  2E05               	decfsz	___lwmod@counter,f,c
 31358  0069F6  D7F1               	goto	u6630
 31359  0069F8                     l3309:
 31360  0069F8  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31361  0069FC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31362  006A00  0012               	return		;funcret
 31363  006A02                     __end_of___lwmod:
 31364                           	opt stack 0
 31365                           tosu	equ	0xFFF
 31366                           tosh	equ	0xFFE
 31367                           tosl	equ	0xFFD
 31368                           pclath	equ	0xFFA
 31369                           tblptru	equ	0xFF8
 31370                           tblptrh	equ	0xFF7
 31371                           tblptrl	equ	0xFF6
 31372                           tablat	equ	0xFF5
 31373                           prodh	equ	0xFF4
 31374                           prodl	equ	0xFF3
 31375                           intcon	equ	0xFF2
 31376                           intcon2	equ	0xFF1
 31377                           intcon3	equ	0xFF0
 31378                           indf0	equ	0xFEF
 31379                           postinc0	equ	0xFEE
 31380                           fsr0h	equ	0xFEA
 31381                           fsr0l	equ	0xFE9
 31382                           wreg	equ	0xFE8
 31383                           indf1	equ	0xFE7
 31384                           postdec1	equ	0xFE5
 31385                           plusw1	equ	0xFE3
 31386                           fsr1h	equ	0xFE2
 31387                           fsr1l	equ	0xFE1
 31388                           indf2	equ	0xFDF
 31389                           postinc2	equ	0xFDE
 31390                           postdec2	equ	0xFDD
 31391                           plusw2	equ	0xFDB
 31392                           fsr2h	equ	0xFDA
 31393                           fsr2l	equ	0xFD9
 31394                           status	equ	0xFD8
 31395                           
 31396 ;; *************** function ___lwdiv *****************
 31397 ;; Defined at:
 31398 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31399 ;; Parameters:    Size  Location     Type
 31400 ;;  dividend        2    0[COMRAM] unsigned int 
 31401 ;;  divisor         2    2[COMRAM] unsigned int 
 31402 ;; Auto vars:     Size  Location     Type
 31403 ;;  quotient        2    4[COMRAM] unsigned int 
 31404 ;;  counter         1    6[COMRAM] unsigned char 
 31405 ;; Return value:  Size  Location     Type
 31406 ;;                  2    0[COMRAM] unsigned int 
 31407 ;; Registers used:
 31408 ;;		wreg, status,2, status,0
 31409 ;; Tracked objects:
 31410 ;;		On entry : 0/0
 31411 ;;		On exit  : 0/0
 31412 ;;		Unchanged: 0/0
 31413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31415 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31418 ;;Total ram usage:        7 bytes
 31419 ;; Hardware stack levels used:    1
 31420 ;; This function calls:
 31421 ;;		Nothing
 31422 ;; This function is called by:
 31423 ;;		_utoa
 31424 ;; This function uses a non-reentrant model
 31425 ;;
 31426                           
 31427                           	psect	text161
 31428  0066A2                     __ptext161:
 31429                           	opt stack 0
 31430  0066A2                     ___lwdiv:
 31431                           	opt stack 22
 31432                           
 31433                           ;incstack = 0
 31434  0066A2  0E00               	movlw	0
 31435  0066A4  6E06               	movwf	___lwdiv@quotient+1,c
 31436  0066A6  0E00               	movlw	0
 31437  0066A8  6E05               	movwf	___lwdiv@quotient,c
 31438  0066AA  5003               	movf	___lwdiv@divisor,w,c
 31439  0066AC  1004               	iorwf	___lwdiv@divisor+1,w,c
 31440  0066AE  B4D8               	btfsc	status,2,c
 31441  0066B0  D01C               	goto	l3299
 31442  0066B2  0E01               	movlw	1
 31443  0066B4  6E07               	movwf	___lwdiv@counter,c
 31444  0066B6  D004               	goto	l3294
 31445  0066B8  90D8               	bcf	status,0,c
 31446  0066BA  3603               	rlcf	___lwdiv@divisor,f,c
 31447  0066BC  3604               	rlcf	___lwdiv@divisor+1,f,c
 31448  0066BE  2A07               	incf	___lwdiv@counter,f,c
 31449  0066C0                     l3294:
 31450  0066C0  AE04               	btfss	___lwdiv@divisor+1,7,c
 31451  0066C2  D7FA               	goto	l3295
 31452  0066C4                     u6600:
 31453  0066C4  90D8               	bcf	status,0,c
 31454  0066C6  3605               	rlcf	___lwdiv@quotient,f,c
 31455  0066C8  3606               	rlcf	___lwdiv@quotient+1,f,c
 31456  0066CA  5003               	movf	___lwdiv@divisor,w,c
 31457  0066CC  5C01               	subwf	___lwdiv@dividend,w,c
 31458  0066CE  5004               	movf	___lwdiv@divisor+1,w,c
 31459  0066D0  5802               	subwfb	___lwdiv@dividend+1,w,c
 31460  0066D2  A0D8               	btfss	status,0,c
 31461  0066D4  D005               	goto	l3298
 31462  0066D6  5003               	movf	___lwdiv@divisor,w,c
 31463  0066D8  5E01               	subwf	___lwdiv@dividend,f,c
 31464  0066DA  5004               	movf	___lwdiv@divisor+1,w,c
 31465  0066DC  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31466  0066DE  8005               	bsf	___lwdiv@quotient,0,c
 31467  0066E0                     l3298:
 31468  0066E0  90D8               	bcf	status,0,c
 31469  0066E2  3204               	rrcf	___lwdiv@divisor+1,f,c
 31470  0066E4  3203               	rrcf	___lwdiv@divisor,f,c
 31471  0066E6  2E07               	decfsz	___lwdiv@counter,f,c
 31472  0066E8  D7ED               	goto	u6600
 31473  0066EA                     l3299:
 31474  0066EA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31475  0066EE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31476  0066F2  0012               	return		;funcret
 31477  0066F4                     __end_of___lwdiv:
 31478                           	opt stack 0
 31479                           tosu	equ	0xFFF
 31480                           tosh	equ	0xFFE
 31481                           tosl	equ	0xFFD
 31482                           pclath	equ	0xFFA
 31483                           tblptru	equ	0xFF8
 31484                           tblptrh	equ	0xFF7
 31485                           tblptrl	equ	0xFF6
 31486                           tablat	equ	0xFF5
 31487                           prodh	equ	0xFF4
 31488                           prodl	equ	0xFF3
 31489                           intcon	equ	0xFF2
 31490                           intcon2	equ	0xFF1
 31491                           intcon3	equ	0xFF0
 31492                           indf0	equ	0xFEF
 31493                           postinc0	equ	0xFEE
 31494                           fsr0h	equ	0xFEA
 31495                           fsr0l	equ	0xFE9
 31496                           wreg	equ	0xFE8
 31497                           indf1	equ	0xFE7
 31498                           postdec1	equ	0xFE5
 31499                           plusw1	equ	0xFE3
 31500                           fsr1h	equ	0xFE2
 31501                           fsr1l	equ	0xFE1
 31502                           indf2	equ	0xFDF
 31503                           postinc2	equ	0xFDE
 31504                           postdec2	equ	0xFDD
 31505                           plusw2	equ	0xFDB
 31506                           fsr2h	equ	0xFDA
 31507                           fsr2l	equ	0xFD9
 31508                           status	equ	0xFD8
 31509                           
 31510 ;; *************** function _i2c_eeprom_writeByte *****************
 31511 ;; Defined at:
 31512 ;;		line 380 in file "i2c.c"
 31513 ;; Parameters:    Size  Location     Type
 31514 ;;  address         2   10[COMRAM] unsigned int 
 31515 ;;  data            1   12[COMRAM] unsigned char 
 31516 ;; Auto vars:     Size  Location     Type
 31517 ;;  dat             2   16[COMRAM] unsigned char [2]
 31518 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31519 ;; Return value:  Size  Location     Type
 31520 ;;                  1    wreg      void 
 31521 ;; Registers used:
 31522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31523 ;; Tracked objects:
 31524 ;;		On entry : 0/0
 31525 ;;		On exit  : 0/0
 31526 ;;		Unchanged: 0/0
 31527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31528 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31529 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31530 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31531 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31532 ;;Total ram usage:        9 bytes
 31533 ;; Hardware stack levels used:    1
 31534 ;; Hardware stack levels required when called:    2
 31535 ;; This function calls:
 31536 ;;		__i2c_write
 31537 ;;		_i2c_set_frequency
 31538 ;; This function is called by:
 31539 ;;		__normal_mode
 31540 ;;		__ui_encoder
 31541 ;;		__parse_command_short
 31542 ;; This function uses a non-reentrant model
 31543 ;;
 31544                           
 31545                           	psect	text162
 31546  006A02                     __ptext162:
 31547                           	opt stack 0
 31548  006A02                     _i2c_eeprom_writeByte:
 31549                           	opt stack 26
 31550                           
 31551                           ;i2c.c: 382: uint8_t slave_address;;i2c.c: 383: uint8_t dat[2];;i2c.c: 385: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31552                           
 31553                           ;incstack = 0
 31554  006A02  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31555  006A06  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31556  006A0A  0E07               	movlw	7
 31557  006A0C  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31558  006A0E                     u9625:
 31559  006A0E  90D8               	bcf	status,0,c
 31560  006A10  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31561  006A12  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31562  006A14  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31563  006A16  D7FB               	goto	u9625
 31564  006A18  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31565  006A1A  0B0E               	andlw	14
 31566  006A1C  09A0               	iorlw	160
 31567  006A1E  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31568                           
 31569                           ;i2c.c: 386: dat[0] = address & 0xFF;
 31570  006A20  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31571                           
 31572                           ;i2c.c: 387: dat[1] = data;
 31573  006A24  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31574                           
 31575                           ;i2c.c: 390: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31576  006A28  0E02               	movlw	2
 31577  006A2A  ECF0  F036         	call	_i2c_set_frequency
 31578                           
 31579                           ;i2c.c: 392: _i2c_write(slave_address, &dat[0], 2);
 31580  006A2E  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31581  006A30  6E06               	movwf	__i2c_write@data,c
 31582  006A32  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31583  006A34  6E07               	movwf	__i2c_write@data+1,c
 31584  006A36  0E02               	movlw	2
 31585  006A38  6E08               	movwf	__i2c_write@length,c
 31586  006A3A  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31587  006A3C  EC13  F034         	call	__i2c_write
 31588  006A40  0012               	return		;funcret
 31589  006A42                     __end_of_i2c_eeprom_writeByte:
 31590                           	opt stack 0
 31591                           tosu	equ	0xFFF
 31592                           tosh	equ	0xFFE
 31593                           tosl	equ	0xFFD
 31594                           pclath	equ	0xFFA
 31595                           tblptru	equ	0xFF8
 31596                           tblptrh	equ	0xFF7
 31597                           tblptrl	equ	0xFF6
 31598                           tablat	equ	0xFF5
 31599                           prodh	equ	0xFF4
 31600                           prodl	equ	0xFF3
 31601                           intcon	equ	0xFF2
 31602                           intcon2	equ	0xFF1
 31603                           intcon3	equ	0xFF0
 31604                           indf0	equ	0xFEF
 31605                           postinc0	equ	0xFEE
 31606                           fsr0h	equ	0xFEA
 31607                           fsr0l	equ	0xFE9
 31608                           wreg	equ	0xFE8
 31609                           indf1	equ	0xFE7
 31610                           postdec1	equ	0xFE5
 31611                           plusw1	equ	0xFE3
 31612                           fsr1h	equ	0xFE2
 31613                           fsr1l	equ	0xFE1
 31614                           indf2	equ	0xFDF
 31615                           postinc2	equ	0xFDE
 31616                           postdec2	equ	0xFDD
 31617                           plusw2	equ	0xFDB
 31618                           fsr2h	equ	0xFDA
 31619                           fsr2l	equ	0xFD9
 31620                           status	equ	0xFD8
 31621                           
 31622 ;; *************** function _i2c_set_frequency *****************
 31623 ;; Defined at:
 31624 ;;		line 131 in file "i2c.c"
 31625 ;; Parameters:    Size  Location     Type
 31626 ;;  frequency       1    wreg     enum E6622
 31627 ;; Auto vars:     Size  Location     Type
 31628 ;;  frequency       1    0[COMRAM] enum E6622
 31629 ;; Return value:  Size  Location     Type
 31630 ;;                  1    wreg      void 
 31631 ;; Registers used:
 31632 ;;		wreg, status,2, status,0
 31633 ;; Tracked objects:
 31634 ;;		On entry : 0/0
 31635 ;;		On exit  : 0/0
 31636 ;;		Unchanged: 0/0
 31637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31642 ;;Total ram usage:        1 bytes
 31643 ;; Hardware stack levels used:    1
 31644 ;; This function calls:
 31645 ;;		Nothing
 31646 ;; This function is called by:
 31647 ;;		_i2c_init
 31648 ;;		__ic2_display_set_address
 31649 ;;		_i2c_display_send_init_sequence
 31650 ;;		_i2c_display_cursor
 31651 ;;		_i2c_display_write_fixed
 31652 ;;		_i2c_eeprom_writeByte
 31653 ;;		_i2c_eeprom_readByte
 31654 ;;		_i2c_display_write
 31655 ;;		_i2c_digipot_reset_on
 31656 ;;		_i2c_digipot_reset_off
 31657 ;;		_i2c_digipot_backlight
 31658 ;;		_i2c_digipot_set_defaults
 31659 ;;		_i2c_eeprom_write
 31660 ;;		_i2c_eeprom_read
 31661 ;; This function uses a non-reentrant model
 31662 ;;
 31663                           
 31664                           	psect	text163
 31665  006DE0                     __ptext163:
 31666                           	opt stack 0
 31667  006DE0                     _i2c_set_frequency:
 31668                           	opt stack 28
 31669                           
 31670                           ;incstack = 0
 31671                           ;i2c_set_frequency@frequency stored from wreg
 31672  006DE0  6E01               	movwf	i2c_set_frequency@frequency,c
 31673                           
 31674                           ;i2c.c: 133: switch(frequency)
 31675  006DE2  D007               	goto	l1153
 31676  006DE4                     
 31677                           ;i2c.c: 136: SSP1ADD = 119;
 31678  006DE4  0E77               	movlw	119
 31679  006DE6  D003               	goto	L44
 31680  006DE8                     
 31681                           ;i2c.c: 139: SSP1ADD = 59;
 31682  006DE8  0E3B               	movlw	59
 31683  006DEA  D001               	goto	L44
 31684  006DEC                     
 31685                           ;i2c.c: 142: SSP1ADD = 29;
 31686  006DEC  0E1D               	movlw	29
 31687  006DEE                     L44:
 31688  006DEE  6EC8               	movwf	4040,c	;volatile
 31689                           
 31690                           ;i2c.c: 144: }
 31691                           
 31692                           ;i2c.c: 143: break;
 31693  006DF0  D00A               	goto	l1155
 31694  006DF2                     l1153:
 31695  006DF2  5001               	movf	i2c_set_frequency@frequency,w,c
 31696                           
 31697                           ; Switch size 1, requested type "space"
 31698                           ; Number of cases is 3, Range of values is 0 to 2
 31699                           ; switch strategies available:
 31700                           ; Name         Instructions Cycles
 31701                           ; simple_byte           10     6 (average)
 31702                           ;	Chosen strategy is simple_byte
 31703  006DF4  0A00               	xorlw	0	; case 0
 31704  006DF6  B4D8               	btfsc	status,2,c
 31705  006DF8  D7F5               	goto	l1154
 31706  006DFA  0A01               	xorlw	1	; case 1
 31707  006DFC  B4D8               	btfsc	status,2,c
 31708  006DFE  D7F4               	goto	l1156
 31709  006E00  0A03               	xorlw	3	; case 2
 31710  006E02  B4D8               	btfsc	status,2,c
 31711  006E04  D7F3               	goto	l1157
 31712  006E06                     l1155:
 31713                           
 31714                           ;i2c.c: 146: i2c_frequency = frequency;
 31715  006E06  C001  F176         	movff	i2c_set_frequency@frequency,_i2c_frequency
 31716  006E0A  0012               	return		;funcret
 31717  006E0C                     __end_of_i2c_set_frequency:
 31718                           	opt stack 0
 31719                           tosu	equ	0xFFF
 31720                           tosh	equ	0xFFE
 31721                           tosl	equ	0xFFD
 31722                           pclath	equ	0xFFA
 31723                           tblptru	equ	0xFF8
 31724                           tblptrh	equ	0xFF7
 31725                           tblptrl	equ	0xFF6
 31726                           tablat	equ	0xFF5
 31727                           prodh	equ	0xFF4
 31728                           prodl	equ	0xFF3
 31729                           intcon	equ	0xFF2
 31730                           intcon2	equ	0xFF1
 31731                           intcon3	equ	0xFF0
 31732                           indf0	equ	0xFEF
 31733                           postinc0	equ	0xFEE
 31734                           fsr0h	equ	0xFEA
 31735                           fsr0l	equ	0xFE9
 31736                           wreg	equ	0xFE8
 31737                           indf1	equ	0xFE7
 31738                           postdec1	equ	0xFE5
 31739                           plusw1	equ	0xFE3
 31740                           fsr1h	equ	0xFE2
 31741                           fsr1l	equ	0xFE1
 31742                           indf2	equ	0xFDF
 31743                           postinc2	equ	0xFDE
 31744                           postdec2	equ	0xFDD
 31745                           plusw2	equ	0xFDB
 31746                           fsr2h	equ	0xFDA
 31747                           fsr2l	equ	0xFD9
 31748                           status	equ	0xFD8
 31749                           
 31750 ;; *************** function __i2c_write *****************
 31751 ;; Defined at:
 31752 ;;		line 150 in file "i2c.c"
 31753 ;; Parameters:    Size  Location     Type
 31754 ;;  slave_addres    1    wreg     unsigned char 
 31755 ;;  data            2    5[COMRAM] PTR unsigned char 
 31756 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 31757 ;;		 -> i2c_digipot_set_defaults@data_array(2), i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2)
      +, i2c_digipot_reset_on@data_array(2), 
 31758 ;;		 -> i2c_display_send_init_sequence@init_sequence(9), _ic2_display_set_address@data_array(2), 
 31759 ;;  length          1    7[COMRAM] unsigned char 
 31760 ;; Auto vars:     Size  Location     Type
 31761 ;;  slave_addres    1    8[COMRAM] unsigned char 
 31762 ;;  cntr            1    9[COMRAM] unsigned char 
 31763 ;; Return value:  Size  Location     Type
 31764 ;;                  1    wreg      void 
 31765 ;; Registers used:
 31766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31767 ;; Tracked objects:
 31768 ;;		On entry : 0/0
 31769 ;;		On exit  : 0/0
 31770 ;;		Unchanged: 0/0
 31771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31772 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31775 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31776 ;;Total ram usage:        5 bytes
 31777 ;; Hardware stack levels used:    1
 31778 ;; Hardware stack levels required when called:    1
 31779 ;; This function calls:
 31780 ;;		__i2c_send
 31781 ;;		__i2c_start
 31782 ;;		__i2c_stop
 31783 ;;		__i2c_wait_idle
 31784 ;; This function is called by:
 31785 ;;		__ic2_display_set_address
 31786 ;;		_i2c_display_send_init_sequence
 31787 ;;		_i2c_eeprom_writeByte
 31788 ;;		_i2c_eeprom_readByte
 31789 ;;		_i2c_digipot_reset_on
 31790 ;;		_i2c_digipot_reset_off
 31791 ;;		_i2c_digipot_backlight
 31792 ;;		_i2c_digipot_set_defaults
 31793 ;;		_i2c_eeprom_write
 31794 ;;		_i2c_eeprom_read
 31795 ;; This function uses a non-reentrant model
 31796 ;;
 31797                           
 31798                           	psect	text164
 31799  006826                     __ptext164:
 31800                           	opt stack 0
 31801  006826                     __i2c_write:
 31802                           	opt stack 27
 31803                           
 31804                           ;incstack = 0
 31805                           ;__i2c_write@slave_address stored from wreg
 31806  006826  6E09               	movwf	__i2c_write@slave_address,c
 31807                           
 31808                           ;i2c.c: 152: uint8_t cntr;;i2c.c: 154: _i2c_wait_idle();
 31809  006828  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31810                           
 31811                           ;i2c.c: 155: _i2c_start();
 31812  00682C  EC11  F039         	call	__i2c_start	;wreg free
 31813                           
 31814                           ;i2c.c: 156: _i2c_wait_idle();
 31815  006830  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31816                           
 31817                           ;i2c.c: 157: _i2c_send(slave_address);
 31818  006834  5009               	movf	__i2c_write@slave_address,w,c
 31819  006836  EC15  F039         	call	__i2c_send
 31820                           
 31821                           ;i2c.c: 158: _i2c_wait_idle();
 31822  00683A  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31823                           
 31824                           ;i2c.c: 160: for(cntr=0; cntr<length; ++cntr)
 31825  00683E  0E00               	movlw	0
 31826  006840  6E0A               	movwf	__i2c_write@cntr,c
 31827  006842  D00E               	goto	l1161
 31828  006844                     
 31829                           ;i2c.c: 161: {;i2c.c: 162: _i2c_send(data[cntr]);
 31830  006844  500A               	movf	__i2c_write@cntr,w,c
 31831  006846  0D01               	mullw	1
 31832  006848  50F3               	movf	prodl,w,c
 31833  00684A  2406               	addwf	__i2c_write@data,w,c
 31834  00684C  6ED9               	movwf	fsr2l,c
 31835  00684E  50F4               	movf	prodh,w,c
 31836  006850  2007               	addwfc	__i2c_write@data+1,w,c
 31837  006852  6EDA               	movwf	fsr2h,c
 31838  006854  50DF               	movf	indf2,w,c
 31839  006856  EC15  F039         	call	__i2c_send
 31840                           
 31841                           ;i2c.c: 163: _i2c_wait_idle();
 31842  00685A  ECA1  F031         	call	__i2c_wait_idle	;wreg free
 31843  00685E  2A0A               	incf	__i2c_write@cntr,f,c
 31844  006860                     l1161:
 31845  006860  5008               	movf	__i2c_write@length,w,c
 31846  006862  5C0A               	subwf	__i2c_write@cntr,w,c
 31847  006864  A0D8               	btfss	status,0,c
 31848  006866  D7EE               	goto	l1162
 31849                           
 31850                           ;i2c.c: 164: };i2c.c: 166: _i2c_stop();
 31851  006868  EC0D  F039         	call	__i2c_stop	;wreg free
 31852  00686C  0012               	return		;funcret
 31853  00686E                     __end_of__i2c_write:
 31854                           	opt stack 0
 31855                           tosu	equ	0xFFF
 31856                           tosh	equ	0xFFE
 31857                           tosl	equ	0xFFD
 31858                           pclath	equ	0xFFA
 31859                           tblptru	equ	0xFF8
 31860                           tblptrh	equ	0xFF7
 31861                           tblptrl	equ	0xFF6
 31862                           tablat	equ	0xFF5
 31863                           prodh	equ	0xFF4
 31864                           prodl	equ	0xFF3
 31865                           intcon	equ	0xFF2
 31866                           intcon2	equ	0xFF1
 31867                           intcon3	equ	0xFF0
 31868                           indf0	equ	0xFEF
 31869                           postinc0	equ	0xFEE
 31870                           fsr0h	equ	0xFEA
 31871                           fsr0l	equ	0xFE9
 31872                           wreg	equ	0xFE8
 31873                           indf1	equ	0xFE7
 31874                           postdec1	equ	0xFE5
 31875                           plusw1	equ	0xFE3
 31876                           fsr1h	equ	0xFE2
 31877                           fsr1l	equ	0xFE1
 31878                           indf2	equ	0xFDF
 31879                           postinc2	equ	0xFDE
 31880                           postdec2	equ	0xFDD
 31881                           plusw2	equ	0xFDB
 31882                           fsr2h	equ	0xFDA
 31883                           fsr2l	equ	0xFD9
 31884                           status	equ	0xFD8
 31885                           
 31886 ;; *************** function __i2c_wait_idle *****************
 31887 ;; Defined at:
 31888 ;;		line 56 in file "i2c.c"
 31889 ;; Parameters:    Size  Location     Type
 31890 ;;		None
 31891 ;; Auto vars:     Size  Location     Type
 31892 ;;		None
 31893 ;; Return value:  Size  Location     Type
 31894 ;;                  1    wreg      void 
 31895 ;; Registers used:
 31896 ;;		wreg, status,2, status,0
 31897 ;; Tracked objects:
 31898 ;;		On entry : 0/0
 31899 ;;		On exit  : 0/0
 31900 ;;		Unchanged: 0/0
 31901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31904 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31905 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31906 ;;Total ram usage:        5 bytes
 31907 ;; Hardware stack levels used:    1
 31908 ;; This function calls:
 31909 ;;		Nothing
 31910 ;; This function is called by:
 31911 ;;		__i2c_write
 31912 ;;		__i2c_read
 31913 ;;		_i2c_display_write_fixed
 31914 ;;		_i2c_display_write
 31915 ;; This function uses a non-reentrant model
 31916 ;;
 31917                           
 31918                           	psect	text165
 31919  006342                     __ptext165:
 31920                           	opt stack 0
 31921  006342                     __i2c_wait_idle:
 31922                           	opt stack 27
 31923                           
 31924                           ;i2c.c: 58: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 31925                           
 31926                           ;incstack = 0
 31927  006342  A4C7               	btfss	4039,2,c	;volatile
 31928  006344  D003               	goto	u6700
 31929  006346  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31930  006348  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 31931  00634A  D001               	goto	u6708
 31932  00634C                     u6700:
 31933  00634C  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 31934  00634E                     u6708:
 31935  00634E  A0C5               	btfss	4037,0,c	;volatile
 31936  006350  D003               	goto	u6710
 31937  006352  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31938  006354  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 31939  006356  D001               	goto	u6718
 31940  006358                     u6710:
 31941  006358  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 31942  00635A                     u6718:
 31943  00635A  A2C5               	btfss	4037,1,c	;volatile
 31944  00635C  D003               	goto	u6720
 31945  00635E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31946  006360  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 31947  006362  D001               	goto	u6728
 31948  006364                     u6720:
 31949  006364  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 31950  006366                     u6728:
 31951  006366  A4C5               	btfss	4037,2,c	;volatile
 31952  006368  D003               	goto	u6730
 31953  00636A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31954  00636C  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 31955  00636E  D001               	goto	u6738
 31956  006370                     u6730:
 31957  006370  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 31958  006372                     u6738:
 31959  006372  A6C5               	btfss	4037,3,c	;volatile
 31960  006374  D003               	goto	u6740
 31961  006376  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31962  006378  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 31963  00637A  D001               	goto	u6748
 31964  00637C                     u6740:
 31965  00637C  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 31966  00637E                     u6748:
 31967  00637E  A8C5               	btfss	4037,4,c	;volatile
 31968  006380  D002               	goto	u6750
 31969  006382  0E01               	movlw	1
 31970  006384  D001               	goto	u6756
 31971  006386                     u6750:
 31972  006386  0E00               	movlw	0
 31973  006388                     u6756:
 31974  006388  1005               	iorwf	??__i2c_wait_idle+4,w,c
 31975  00638A  1004               	iorwf	??__i2c_wait_idle+3,w,c
 31976  00638C  1003               	iorwf	??__i2c_wait_idle+2,w,c
 31977  00638E  1002               	iorwf	??__i2c_wait_idle+1,w,c
 31978  006390  1001               	iorwf	??__i2c_wait_idle,w,c
 31979  006392  0900               	iorlw	0
 31980  006394  B4D8               	btfsc	status,2,c
 31981  006396  0012               	return	
 31982  006398  D7D4               	goto	__i2c_wait_idle
 31983  00639A                     __end_of__i2c_wait_idle:
 31984                           	opt stack 0
 31985                           tosu	equ	0xFFF
 31986                           tosh	equ	0xFFE
 31987                           tosl	equ	0xFFD
 31988                           pclath	equ	0xFFA
 31989                           tblptru	equ	0xFF8
 31990                           tblptrh	equ	0xFF7
 31991                           tblptrl	equ	0xFF6
 31992                           tablat	equ	0xFF5
 31993                           prodh	equ	0xFF4
 31994                           prodl	equ	0xFF3
 31995                           intcon	equ	0xFF2
 31996                           intcon2	equ	0xFF1
 31997                           intcon3	equ	0xFF0
 31998                           indf0	equ	0xFEF
 31999                           postinc0	equ	0xFEE
 32000                           fsr0h	equ	0xFEA
 32001                           fsr0l	equ	0xFE9
 32002                           wreg	equ	0xFE8
 32003                           indf1	equ	0xFE7
 32004                           postdec1	equ	0xFE5
 32005                           plusw1	equ	0xFE3
 32006                           fsr1h	equ	0xFE2
 32007                           fsr1l	equ	0xFE1
 32008                           indf2	equ	0xFDF
 32009                           postinc2	equ	0xFDE
 32010                           postdec2	equ	0xFDD
 32011                           plusw2	equ	0xFDB
 32012                           fsr2h	equ	0xFDA
 32013                           fsr2l	equ	0xFD9
 32014                           status	equ	0xFD8
 32015                           
 32016 ;; *************** function __i2c_stop *****************
 32017 ;; Defined at:
 32018 ;;		line 83 in file "i2c.c"
 32019 ;; Parameters:    Size  Location     Type
 32020 ;;		None
 32021 ;; Auto vars:     Size  Location     Type
 32022 ;;		None
 32023 ;; Return value:  Size  Location     Type
 32024 ;;                  1    wreg      void 
 32025 ;; Registers used:
 32026 ;;		None
 32027 ;; Tracked objects:
 32028 ;;		On entry : 0/0
 32029 ;;		On exit  : 0/0
 32030 ;;		Unchanged: 0/0
 32031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32036 ;;Total ram usage:        0 bytes
 32037 ;; Hardware stack levels used:    1
 32038 ;; This function calls:
 32039 ;;		Nothing
 32040 ;; This function is called by:
 32041 ;;		__i2c_write
 32042 ;;		__i2c_read
 32043 ;;		_i2c_display_write_fixed
 32044 ;;		_i2c_display_write
 32045 ;; This function uses a non-reentrant model
 32046 ;;
 32047                           
 32048                           	psect	text166
 32049  00721A                     __ptext166:
 32050                           	opt stack 0
 32051  00721A                     __i2c_stop:
 32052                           	opt stack 27
 32053                           
 32054                           ;i2c.c: 85: SSP1CON2bits.PEN = 1;
 32055                           
 32056                           ;incstack = 0
 32057  00721A  84C5               	bsf	4037,2,c	;volatile
 32058  00721C  A4C5               	btfss	4037,2,c	;volatile
 32059  00721E  0012               	return	
 32060  007220  D7FD               	goto	l1127
 32061  007222                     __end_of__i2c_stop:
 32062                           	opt stack 0
 32063                           tosu	equ	0xFFF
 32064                           tosh	equ	0xFFE
 32065                           tosl	equ	0xFFD
 32066                           pclath	equ	0xFFA
 32067                           tblptru	equ	0xFF8
 32068                           tblptrh	equ	0xFF7
 32069                           tblptrl	equ	0xFF6
 32070                           tablat	equ	0xFF5
 32071                           prodh	equ	0xFF4
 32072                           prodl	equ	0xFF3
 32073                           intcon	equ	0xFF2
 32074                           intcon2	equ	0xFF1
 32075                           intcon3	equ	0xFF0
 32076                           indf0	equ	0xFEF
 32077                           postinc0	equ	0xFEE
 32078                           fsr0h	equ	0xFEA
 32079                           fsr0l	equ	0xFE9
 32080                           wreg	equ	0xFE8
 32081                           indf1	equ	0xFE7
 32082                           postdec1	equ	0xFE5
 32083                           plusw1	equ	0xFE3
 32084                           fsr1h	equ	0xFE2
 32085                           fsr1l	equ	0xFE1
 32086                           indf2	equ	0xFDF
 32087                           postinc2	equ	0xFDE
 32088                           postdec2	equ	0xFDD
 32089                           plusw2	equ	0xFDB
 32090                           fsr2h	equ	0xFDA
 32091                           fsr2l	equ	0xFD9
 32092                           status	equ	0xFD8
 32093                           
 32094 ;; *************** function __i2c_start *****************
 32095 ;; Defined at:
 32096 ;;		line 62 in file "i2c.c"
 32097 ;; Parameters:    Size  Location     Type
 32098 ;;		None
 32099 ;; Auto vars:     Size  Location     Type
 32100 ;;		None
 32101 ;; Return value:  Size  Location     Type
 32102 ;;                  1    wreg      void 
 32103 ;; Registers used:
 32104 ;;		None
 32105 ;; Tracked objects:
 32106 ;;		On entry : 0/0
 32107 ;;		On exit  : 0/0
 32108 ;;		Unchanged: 0/0
 32109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32114 ;;Total ram usage:        0 bytes
 32115 ;; Hardware stack levels used:    1
 32116 ;; This function calls:
 32117 ;;		Nothing
 32118 ;; This function is called by:
 32119 ;;		__i2c_write
 32120 ;;		__i2c_read
 32121 ;;		_i2c_display_write_fixed
 32122 ;;		_i2c_display_write
 32123 ;; This function uses a non-reentrant model
 32124 ;;
 32125                           
 32126                           	psect	text167
 32127  007222                     __ptext167:
 32128                           	opt stack 0
 32129  007222                     __i2c_start:
 32130                           	opt stack 27
 32131                           
 32132                           ;i2c.c: 64: SSP1CON2bits.SEN=1;
 32133                           
 32134                           ;incstack = 0
 32135  007222  80C5               	bsf	4037,0,c	;volatile
 32136  007224  A0C5               	btfss	4037,0,c	;volatile
 32137  007226  0012               	return	
 32138  007228  D7FD               	goto	l1112
 32139  00722A                     __end_of__i2c_start:
 32140                           	opt stack 0
 32141                           tosu	equ	0xFFF
 32142                           tosh	equ	0xFFE
 32143                           tosl	equ	0xFFD
 32144                           pclath	equ	0xFFA
 32145                           tblptru	equ	0xFF8
 32146                           tblptrh	equ	0xFF7
 32147                           tblptrl	equ	0xFF6
 32148                           tablat	equ	0xFF5
 32149                           prodh	equ	0xFF4
 32150                           prodl	equ	0xFF3
 32151                           intcon	equ	0xFF2
 32152                           intcon2	equ	0xFF1
 32153                           intcon3	equ	0xFF0
 32154                           indf0	equ	0xFEF
 32155                           postinc0	equ	0xFEE
 32156                           fsr0h	equ	0xFEA
 32157                           fsr0l	equ	0xFE9
 32158                           wreg	equ	0xFE8
 32159                           indf1	equ	0xFE7
 32160                           postdec1	equ	0xFE5
 32161                           plusw1	equ	0xFE3
 32162                           fsr1h	equ	0xFE2
 32163                           fsr1l	equ	0xFE1
 32164                           indf2	equ	0xFDF
 32165                           postinc2	equ	0xFDE
 32166                           postdec2	equ	0xFDD
 32167                           plusw2	equ	0xFDB
 32168                           fsr2h	equ	0xFDA
 32169                           fsr2l	equ	0xFD9
 32170                           status	equ	0xFD8
 32171                           
 32172 ;; *************** function __i2c_send *****************
 32173 ;; Defined at:
 32174 ;;		line 69 in file "i2c.c"
 32175 ;; Parameters:    Size  Location     Type
 32176 ;;  dat             1    wreg     unsigned char 
 32177 ;; Auto vars:     Size  Location     Type
 32178 ;;  dat             1    0[COMRAM] unsigned char 
 32179 ;; Return value:  Size  Location     Type
 32180 ;;                  1    wreg      void 
 32181 ;; Registers used:
 32182 ;;		wreg
 32183 ;; Tracked objects:
 32184 ;;		On entry : 0/0
 32185 ;;		On exit  : 0/0
 32186 ;;		Unchanged: 0/0
 32187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32192 ;;Total ram usage:        1 bytes
 32193 ;; Hardware stack levels used:    1
 32194 ;; This function calls:
 32195 ;;		Nothing
 32196 ;; This function is called by:
 32197 ;;		__i2c_write
 32198 ;;		__i2c_read
 32199 ;;		_i2c_display_write_fixed
 32200 ;;		_i2c_display_write
 32201 ;; This function uses a non-reentrant model
 32202 ;;
 32203                           
 32204                           	psect	text168
 32205  00722A                     __ptext168:
 32206                           	opt stack 0
 32207  00722A                     __i2c_send:
 32208                           	opt stack 27
 32209                           
 32210                           ;incstack = 0
 32211                           ;__i2c_send@dat stored from wreg
 32212  00722A  6E01               	movwf	__i2c_send@dat,c
 32213                           
 32214                           ;i2c.c: 71: SSP1BUF = dat;
 32215  00722C  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32216  007230  0012               	return		;funcret
 32217  007232                     __end_of__i2c_send:
 32218                           	opt stack 0
 32219                           tosu	equ	0xFFF
 32220                           tosh	equ	0xFFE
 32221                           tosl	equ	0xFFD
 32222                           pclath	equ	0xFFA
 32223                           tblptru	equ	0xFF8
 32224                           tblptrh	equ	0xFF7
 32225                           tblptrl	equ	0xFF6
 32226                           tablat	equ	0xFF5
 32227                           prodh	equ	0xFF4
 32228                           prodl	equ	0xFF3
 32229                           intcon	equ	0xFF2
 32230                           intcon2	equ	0xFF1
 32231                           intcon3	equ	0xFF0
 32232                           indf0	equ	0xFEF
 32233                           postinc0	equ	0xFEE
 32234                           fsr0h	equ	0xFEA
 32235                           fsr0l	equ	0xFE9
 32236                           wreg	equ	0xFE8
 32237                           indf1	equ	0xFE7
 32238                           postdec1	equ	0xFE5
 32239                           plusw1	equ	0xFE3
 32240                           fsr1h	equ	0xFE2
 32241                           fsr1l	equ	0xFE1
 32242                           indf2	equ	0xFDF
 32243                           postinc2	equ	0xFDE
 32244                           postdec2	equ	0xFDD
 32245                           plusw2	equ	0xFDB
 32246                           fsr2h	equ	0xFDA
 32247                           fsr2l	equ	0xFD9
 32248                           status	equ	0xFD8
 32249                           
 32250 ;; *************** function __parse_command_long *****************
 32251 ;; Defined at:
 32252 ;;		line 334 in file "api.c"
 32253 ;; Parameters:    Size  Location     Type
 32254 ;;  data            2   46[COMRAM] PTR unsigned char 
 32255 ;;		 -> ReceivedDataBuffer(64), 
 32256 ;;  out_buffer      2   48[COMRAM] PTR unsigned char 
 32257 ;;		 -> ToSendDataBuffer(64), 
 32258 ;;  out_idx_ptr     2   50[COMRAM] PTR unsigned char 
 32259 ;;		 -> api_parse@out_idx(1), 
 32260 ;; Auto vars:     Size  Location     Type
 32261 ;;  length          1   52[COMRAM] unsigned char 
 32262 ;; Return value:  Size  Location     Type
 32263 ;;                  1    wreg      unsigned char 
 32264 ;; Registers used:
 32265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32266 ;; Tracked objects:
 32267 ;;		On entry : 0/0
 32268 ;;		On exit  : 0/0
 32269 ;;		Unchanged: 0/0
 32270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32274 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32275 ;;Total ram usage:        7 bytes
 32276 ;; Hardware stack levels used:    1
 32277 ;; Hardware stack levels required when called:    7
 32278 ;; This function calls:
 32279 ;;		__parse_format_drive
 32280 ;; This function is called by:
 32281 ;;		_api_parse
 32282 ;; This function uses a non-reentrant model
 32283 ;;
 32284                           
 32285                           	psect	text169
 32286  006AF4                     __ptext169:
 32287                           	opt stack 0
 32288  006AF4                     __parse_command_long:
 32289                           	opt stack 21
 32290                           
 32291                           ;api.c: 336: uint8_t length = 65;
 32292                           
 32293                           ;incstack = 0
 32294  006AF4  0E41               	movlw	65
 32295  006AF6  6E35               	movwf	__parse_command_long@length,c
 32296                           
 32297                           ;api.c: 338: switch(data[0])
 32298  006AF8  D010               	goto	l2709
 32299  006AFA                     
 32300                           ;api.c: 341: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 32301  006AFA  C02F  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32302  006AFE  C030  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32303  006B02  C031  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 32304  006B06  C032  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 32305  006B0A  C033  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 32306  006B0E  C034  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 32307  006B12  ECD0  F028         	call	__parse_format_drive	;wreg free
 32308  006B16  6E35               	movwf	__parse_command_long@length,c
 32309                           
 32310                           ;api.c: 343: }
 32311                           
 32312                           ;api.c: 342: break;
 32313  006B18  D008               	goto	l2711
 32314  006B1A                     l2709:
 32315  006B1A  C02F  FFD9         	movff	__parse_command_long@data,fsr2l
 32316  006B1E  C030  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32317  006B22  50DF               	movf	indf2,w,c
 32318                           
 32319                           ; Switch size 1, requested type "space"
 32320                           ; Number of cases is 1, Range of values is 86 to 86
 32321                           ; switch strategies available:
 32322                           ; Name         Instructions Cycles
 32323                           ; simple_byte            4     3 (average)
 32324                           ;	Chosen strategy is simple_byte
 32325  006B24  0A56               	xorlw	86	; case 86
 32326  006B26  B4D8               	btfsc	status,2,c
 32327  006B28  D7E8               	goto	l2710
 32328  006B2A                     l2711:
 32329                           
 32330                           ;api.c: 345: return length;
 32331  006B2A  5035               	movf	__parse_command_long@length,w,c
 32332  006B2C  0012               	return	
 32333  006B2E                     __end_of__parse_command_long:
 32334                           	opt stack 0
 32335                           tosu	equ	0xFFF
 32336                           tosh	equ	0xFFE
 32337                           tosl	equ	0xFFD
 32338                           pclath	equ	0xFFA
 32339                           tblptru	equ	0xFF8
 32340                           tblptrh	equ	0xFF7
 32341                           tblptrl	equ	0xFF6
 32342                           tablat	equ	0xFF5
 32343                           prodh	equ	0xFF4
 32344                           prodl	equ	0xFF3
 32345                           intcon	equ	0xFF2
 32346                           intcon2	equ	0xFF1
 32347                           intcon3	equ	0xFF0
 32348                           indf0	equ	0xFEF
 32349                           postinc0	equ	0xFEE
 32350                           fsr0h	equ	0xFEA
 32351                           fsr0l	equ	0xFE9
 32352                           wreg	equ	0xFE8
 32353                           indf1	equ	0xFE7
 32354                           postdec1	equ	0xFE5
 32355                           plusw1	equ	0xFE3
 32356                           fsr1h	equ	0xFE2
 32357                           fsr1l	equ	0xFE1
 32358                           indf2	equ	0xFDF
 32359                           postinc2	equ	0xFDE
 32360                           postdec2	equ	0xFDD
 32361                           plusw2	equ	0xFDB
 32362                           fsr2h	equ	0xFDA
 32363                           fsr2l	equ	0xFD9
 32364                           status	equ	0xFD8
 32365                           
 32366 ;; *************** function __parse_format_drive *****************
 32367 ;; Defined at:
 32368 ;;		line 348 in file "api.c"
 32369 ;; Parameters:    Size  Location     Type
 32370 ;;  data            2   38[COMRAM] PTR unsigned char 
 32371 ;;		 -> ReceivedDataBuffer(64), 
 32372 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 32373 ;;		 -> ToSendDataBuffer(64), 
 32374 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 32375 ;;		 -> api_parse@out_idx(1), 
 32376 ;; Auto vars:     Size  Location     Type
 32377 ;;  return_value    1   45[COMRAM] unsigned char 
 32378 ;; Return value:  Size  Location     Type
 32379 ;;                  1    wreg      unsigned char 
 32380 ;; Registers used:
 32381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32382 ;; Tracked objects:
 32383 ;;		On entry : 0/0
 32384 ;;		On exit  : 0/0
 32385 ;;		Unchanged: 0/0
 32386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32387 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32390 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32391 ;;Total ram usage:        8 bytes
 32392 ;; Hardware stack levels used:    1
 32393 ;; Hardware stack levels required when called:    6
 32394 ;; This function calls:
 32395 ;;		_fat_format
 32396 ;; This function is called by:
 32397 ;;		__parse_command_long
 32398 ;; This function uses a non-reentrant model
 32399 ;;
 32400                           
 32401                           	psect	text170
 32402  0051A0                     __ptext170:
 32403                           	opt stack 0
 32404  0051A0                     __parse_format_drive:
 32405                           	opt stack 21
 32406                           
 32407                           ;api.c: 352: uint8_t return_value;;api.c: 354: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 32408                           
 32409                           ;incstack = 0
 32410  0051A0  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32411  0051A4  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32412  0051A8  0E56               	movlw	86
 32413  0051AA  18DE               	xorwf	postinc2,w,c
 32414  0051AC  A4D8               	btfss	status,2,c
 32415  0051AE  D014               	goto	u9840
 32416  0051B0  EE20 F001          	lfsr	2,1
 32417  0051B4  5027               	movf	__parse_format_drive@data,w,c
 32418  0051B6  26D9               	addwf	fsr2l,f,c
 32419  0051B8  5028               	movf	__parse_format_drive@data+1,w,c
 32420  0051BA  22DA               	addwfc	fsr2h,f,c
 32421  0051BC  0EDA               	movlw	218
 32422  0051BE  18DE               	xorwf	postinc2,w,c
 32423  0051C0  A4D8               	btfss	status,2,c
 32424  0051C2  D00A               	goto	u9840
 32425  0051C4  EE20 F002          	lfsr	2,2
 32426  0051C8  5027               	movf	__parse_format_drive@data,w,c
 32427  0051CA  26D9               	addwf	fsr2l,f,c
 32428  0051CC  5028               	movf	__parse_format_drive@data+1,w,c
 32429  0051CE  22DA               	addwfc	fsr2h,f,c
 32430  0051D0  0E22               	movlw	34
 32431  0051D2  18DE               	xorwf	postinc2,w,c
 32432  0051D4  B4D8               	btfsc	status,2,c
 32433  0051D6  D002               	goto	l2715
 32434  0051D8                     u9840:
 32435                           
 32436                           ;api.c: 355: {;api.c: 356: return 3;
 32437  0051D8  0E03               	movlw	3
 32438  0051DA  0012               	return	
 32439  0051DC                     l2715:
 32440                           
 32441                           ;api.c: 357: };api.c: 359: return_value = fat_format();
 32442  0051DC  EC1E  F00F         	call	_fat_format	;wreg free
 32443  0051E0  6E2E               	movwf	__parse_format_drive@return_value,c
 32444                           
 32445                           ;api.c: 362: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 32446  0051E2  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32447  0051E6  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32448  0051EA  50DF               	movf	indf2,w,c
 32449  0051EC  B4D8               	btfsc	status,2,c
 32450  0051EE  D02B               	goto	l2719
 32451  0051F0  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32452  0051F4  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32453  0051F8  0E3F               	movlw	63
 32454  0051FA  60DF               	cpfslt	indf2,c
 32455  0051FC  D024               	goto	l2719
 32456                           
 32457                           ;api.c: 363: {;api.c: 364: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 32458  0051FE  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32459  005202  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32460  005206  CFDF F02D          	movff	indf2,??__parse_format_drive
 32461  00520A  0E01               	movlw	1
 32462  00520C  26DF               	addwf	indf2,f,c
 32463  00520E  502D               	movf	??__parse_format_drive,w,c
 32464  005210  0D01               	mullw	1
 32465  005212  50F3               	movf	prodl,w,c
 32466  005214  2429               	addwf	__parse_format_drive@out_buffer,w,c
 32467  005216  6ED9               	movwf	fsr2l,c
 32468  005218  50F4               	movf	prodh,w,c
 32469  00521A  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 32470  00521C  6EDA               	movwf	fsr2h,c
 32471  00521E  0E56               	movlw	86
 32472  005220  6EDF               	movwf	indf2,c
 32473                           
 32474                           ;api.c: 365: out_buffer[(*out_idx_ptr)++] = return_value;
 32475  005222  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 32476  005226  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 32477  00522A  CFDF F02D          	movff	indf2,??__parse_format_drive
 32478  00522E  0E01               	movlw	1
 32479  005230  26DF               	addwf	indf2,f,c
 32480  005232  502D               	movf	??__parse_format_drive,w,c
 32481  005234  0D01               	mullw	1
 32482  005236  50F3               	movf	prodl,w,c
 32483  005238  2429               	addwf	__parse_format_drive@out_buffer,w,c
 32484  00523A  6ED9               	movwf	fsr2l,c
 32485  00523C  50F4               	movf	prodh,w,c
 32486  00523E  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 32487  005240  6EDA               	movwf	fsr2h,c
 32488  005242  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 32489  005246                     l2719:
 32490                           
 32491                           ;api.c: 366: };api.c: 368: return 3;
 32492  005246  0E03               	movlw	3
 32493  005248  0012               	return	
 32494  00524A                     __end_of__parse_format_drive:
 32495                           	opt stack 0
 32496                           tosu	equ	0xFFF
 32497                           tosh	equ	0xFFE
 32498                           tosl	equ	0xFFD
 32499                           pclath	equ	0xFFA
 32500                           tblptru	equ	0xFF8
 32501                           tblptrh	equ	0xFF7
 32502                           tblptrl	equ	0xFF6
 32503                           tablat	equ	0xFF5
 32504                           prodh	equ	0xFF4
 32505                           prodl	equ	0xFF3
 32506                           intcon	equ	0xFF2
 32507                           intcon2	equ	0xFF1
 32508                           intcon3	equ	0xFF0
 32509                           indf0	equ	0xFEF
 32510                           postinc0	equ	0xFEE
 32511                           fsr0h	equ	0xFEA
 32512                           fsr0l	equ	0xFE9
 32513                           wreg	equ	0xFE8
 32514                           indf1	equ	0xFE7
 32515                           postdec1	equ	0xFE5
 32516                           plusw1	equ	0xFE3
 32517                           fsr1h	equ	0xFE2
 32518                           fsr1l	equ	0xFE1
 32519                           indf2	equ	0xFDF
 32520                           postinc2	equ	0xFDE
 32521                           postdec2	equ	0xFDD
 32522                           plusw2	equ	0xFDB
 32523                           fsr2h	equ	0xFDA
 32524                           fsr2l	equ	0xFD9
 32525                           status	equ	0xFD8
 32526                           
 32527 ;; *************** function _fat_format *****************
 32528 ;; Defined at:
 32529 ;;		line 1320 in file "fat16.c"
 32530 ;; Parameters:    Size  Location     Type
 32531 ;;		None
 32532 ;; Auto vars:     Size  Location     Type
 32533 ;;  cntr            2   36[COMRAM] unsigned int 
 32534 ;; Return value:  Size  Location     Type
 32535 ;;                  1    wreg      unsigned char 
 32536 ;; Registers used:
 32537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32538 ;; Tracked objects:
 32539 ;;		On entry : 0/0
 32540 ;;		On exit  : 0/0
 32541 ;;		Unchanged: 0/0
 32542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32547 ;;Total ram usage:        2 bytes
 32548 ;; Hardware stack levels used:    1
 32549 ;; Hardware stack levels required when called:    5
 32550 ;; This function calls:
 32551 ;;		__get_data
 32552 ;;		__get_fat
 32553 ;;		__get_fbr
 32554 ;;		__get_mbr
 32555 ;;		__get_root
 32556 ;;		_flash_sector_write
 32557 ;; This function is called by:
 32558 ;;		_fat_init
 32559 ;;		__parse_format_drive
 32560 ;; This function uses a non-reentrant model
 32561 ;;
 32562                           
 32563                           	psect	text171
 32564  001E3C                     __ptext171:
 32565                           	opt stack 0
 32566  001E3C                     _fat_format:
 32567                           	opt stack 23
 32568                           
 32569                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 32570                           
 32571                           ;incstack = 0
 32572  001E3C  0E00               	movlw	0
 32573  001E3E  6E26               	movwf	fat_format@cntr+1,c
 32574  001E40  0E00               	movlw	0
 32575  001E42  6E25               	movwf	fat_format@cntr,c
 32576  001E44                     l12106:
 32577  001E44  0E02               	movlw	2
 32578  001E46  5C26               	subwf	fat_format@cntr+1,w,c
 32579  001E48  B0D8               	btfsc	status,0,c
 32580  001E4A  D010               	goto	u9290
 32581                           
 32582                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 32583  001E4C  0EC3               	movlw	low _buffer
 32584  001E4E  2425               	addwf	fat_format@cntr,w,c
 32585  001E50  6ED9               	movwf	fsr2l,c
 32586  001E52  0E02               	movlw	high _buffer
 32587  001E54  2026               	addwfc	fat_format@cntr+1,w,c
 32588  001E56  6EDA               	movwf	fsr2h,c
 32589  001E58  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 32590  001E5C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 32591  001E60  EC89  F025         	call	__get_mbr	;wreg free
 32592  001E64  6EDF               	movwf	indf2,c
 32593  001E66  4A25               	infsnz	fat_format@cntr,f,c
 32594  001E68  2A26               	incf	fat_format@cntr+1,f,c
 32595  001E6A  D7EC               	goto	l12106
 32596  001E6C                     u9290:
 32597                           
 32598                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 32599  001E6C  0E00               	movlw	0
 32600  001E6E  6E21               	movwf	flash_sector_write@page+1,c
 32601  001E70  0E00               	movlw	0
 32602  001E72  6E20               	movwf	flash_sector_write@page,c
 32603  001E74  0EC3               	movlw	low _buffer
 32604  001E76  6E22               	movwf	flash_sector_write@data,c
 32605  001E78  0E02               	movlw	high _buffer
 32606  001E7A  6E23               	movwf	flash_sector_write@data+1,c
 32607  001E7C  ECCA  F033         	call	_flash_sector_write	;wreg free
 32608                           
 32609                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 32610  001E80  0E00               	movlw	0
 32611  001E82  6E26               	movwf	fat_format@cntr+1,c
 32612  001E84  0E00               	movlw	0
 32613  001E86  6E25               	movwf	fat_format@cntr,c
 32614  001E88                     l12120:
 32615  001E88  0E02               	movlw	2
 32616  001E8A  5C26               	subwf	fat_format@cntr+1,w,c
 32617  001E8C  B0D8               	btfsc	status,0,c
 32618  001E8E  D010               	goto	u9310
 32619                           
 32620                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 32621  001E90  0EC3               	movlw	low _buffer
 32622  001E92  2425               	addwf	fat_format@cntr,w,c
 32623  001E94  6ED9               	movwf	fsr2l,c
 32624  001E96  0E02               	movlw	high _buffer
 32625  001E98  2026               	addwfc	fat_format@cntr+1,w,c
 32626  001E9A  6EDA               	movwf	fsr2h,c
 32627  001E9C  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 32628  001EA0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 32629  001EA4  ECAD  F00B         	call	__get_fbr	;wreg free
 32630  001EA8  6EDF               	movwf	indf2,c
 32631  001EAA  4A25               	infsnz	fat_format@cntr,f,c
 32632  001EAC  2A26               	incf	fat_format@cntr+1,f,c
 32633  001EAE  D7EC               	goto	l12120
 32634  001EB0                     u9310:
 32635                           
 32636                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 32637  001EB0  0E00               	movlw	0
 32638  001EB2  6E21               	movwf	flash_sector_write@page+1,c
 32639  001EB4  0E01               	movlw	1
 32640  001EB6  6E20               	movwf	flash_sector_write@page,c
 32641  001EB8  0EC3               	movlw	low _buffer
 32642  001EBA  6E22               	movwf	flash_sector_write@data,c
 32643  001EBC  0E02               	movlw	high _buffer
 32644  001EBE  6E23               	movwf	flash_sector_write@data+1,c
 32645  001EC0  ECCA  F033         	call	_flash_sector_write	;wreg free
 32646                           
 32647                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 32648  001EC4  0E00               	movlw	0
 32649  001EC6  6E26               	movwf	fat_format@cntr+1,c
 32650  001EC8  0E00               	movlw	0
 32651  001ECA  6E25               	movwf	fat_format@cntr,c
 32652  001ECC                     l12134:
 32653  001ECC  0E02               	movlw	2
 32654  001ECE  5C26               	subwf	fat_format@cntr+1,w,c
 32655  001ED0  B0D8               	btfsc	status,0,c
 32656  001ED2  D010               	goto	u9330
 32657                           
 32658                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 32659  001ED4  0EC3               	movlw	low _buffer
 32660  001ED6  2425               	addwf	fat_format@cntr,w,c
 32661  001ED8  6ED9               	movwf	fsr2l,c
 32662  001EDA  0E02               	movlw	high _buffer
 32663  001EDC  2026               	addwfc	fat_format@cntr+1,w,c
 32664  001EDE  6EDA               	movwf	fsr2h,c
 32665  001EE0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 32666  001EE4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 32667  001EE8  ECFC  F032         	call	__get_fat	;wreg free
 32668  001EEC  6EDF               	movwf	indf2,c
 32669  001EEE  4A25               	infsnz	fat_format@cntr,f,c
 32670  001EF0  2A26               	incf	fat_format@cntr+1,f,c
 32671  001EF2  D7EC               	goto	l12134
 32672  001EF4                     u9330:
 32673                           
 32674                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 32675  001EF4  0E00               	movlw	0
 32676  001EF6  6E21               	movwf	flash_sector_write@page+1,c
 32677  001EF8  0E02               	movlw	2
 32678  001EFA  6E20               	movwf	flash_sector_write@page,c
 32679  001EFC  0EC3               	movlw	low _buffer
 32680  001EFE  6E22               	movwf	flash_sector_write@data,c
 32681  001F00  0E02               	movlw	high _buffer
 32682  001F02  6E23               	movwf	flash_sector_write@data+1,c
 32683  001F04  ECCA  F033         	call	_flash_sector_write	;wreg free
 32684                           
 32685                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 32686  001F08  0E00               	movlw	0
 32687  001F0A  6E26               	movwf	fat_format@cntr+1,c
 32688  001F0C  0E00               	movlw	0
 32689  001F0E  6E25               	movwf	fat_format@cntr,c
 32690  001F10                     l12148:
 32691  001F10  0E02               	movlw	2
 32692  001F12  5C26               	subwf	fat_format@cntr+1,w,c
 32693  001F14  B0D8               	btfsc	status,0,c
 32694  001F16  D00B               	goto	u9350
 32695                           
 32696                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 32697  001F18  0EC3               	movlw	low _buffer
 32698  001F1A  2425               	addwf	fat_format@cntr,w,c
 32699  001F1C  6ED9               	movwf	fsr2l,c
 32700  001F1E  0E02               	movlw	high _buffer
 32701  001F20  2026               	addwfc	fat_format@cntr+1,w,c
 32702  001F22  6EDA               	movwf	fsr2h,c
 32703  001F24  0E00               	movlw	0
 32704  001F26  6EDF               	movwf	indf2,c
 32705  001F28  4A25               	infsnz	fat_format@cntr,f,c
 32706  001F2A  2A26               	incf	fat_format@cntr+1,f,c
 32707  001F2C  D7F1               	goto	l12148
 32708  001F2E                     u9350:
 32709                           
 32710                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 32711  001F2E  0E00               	movlw	0
 32712  001F30  6E26               	movwf	fat_format@cntr+1,c
 32713  001F32  0E03               	movlw	3
 32714  001F34  6E25               	movwf	fat_format@cntr,c
 32715  001F36                     l12160:
 32716  001F36  5026               	movf	fat_format@cntr+1,w,c
 32717  001F38  E111               	bnz	l12170
 32718  001F3A  0E22               	movlw	34
 32719  001F3C  5C25               	subwf	fat_format@cntr,w,c
 32720  001F3E  B0D8               	btfsc	status,0,c
 32721  001F40  D00D               	goto	u9370
 32722                           
 32723                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 32724  001F42  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32725  001F46  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32726  001F4A  0EC3               	movlw	low _buffer
 32727  001F4C  6E22               	movwf	flash_sector_write@data,c
 32728  001F4E  0E02               	movlw	high _buffer
 32729  001F50  6E23               	movwf	flash_sector_write@data+1,c
 32730  001F52  ECCA  F033         	call	_flash_sector_write	;wreg free
 32731  001F56  4A25               	infsnz	fat_format@cntr,f,c
 32732  001F58  2A26               	incf	fat_format@cntr+1,f,c
 32733  001F5A  D7ED               	goto	l12160
 32734  001F5C                     u9370:
 32735  001F5C                     l12170:
 32736                           
 32737                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 32738  001F5C  0E00               	movlw	0
 32739  001F5E  6E26               	movwf	fat_format@cntr+1,c
 32740  001F60  0E00               	movlw	0
 32741  001F62  6E25               	movwf	fat_format@cntr,c
 32742  001F64                     l12172:
 32743  001F64  0E02               	movlw	2
 32744  001F66  5C26               	subwf	fat_format@cntr+1,w,c
 32745  001F68  B0D8               	btfsc	status,0,c
 32746  001F6A  D010               	goto	u9390
 32747                           
 32748                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 32749  001F6C  0EC3               	movlw	low _buffer
 32750  001F6E  2425               	addwf	fat_format@cntr,w,c
 32751  001F70  6ED9               	movwf	fsr2l,c
 32752  001F72  0E02               	movlw	high _buffer
 32753  001F74  2026               	addwfc	fat_format@cntr+1,w,c
 32754  001F76  6EDA               	movwf	fsr2h,c
 32755  001F78  C025  F001         	movff	fat_format@cntr,__get_root@idx
 32756  001F7C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 32757  001F80  ECC2  F014         	call	__get_root	;wreg free
 32758  001F84  6EDF               	movwf	indf2,c
 32759  001F86  4A25               	infsnz	fat_format@cntr,f,c
 32760  001F88  2A26               	incf	fat_format@cntr+1,f,c
 32761  001F8A  D7EC               	goto	l12172
 32762  001F8C                     u9390:
 32763                           
 32764                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 32765  001F8C  0E00               	movlw	0
 32766  001F8E  6E21               	movwf	flash_sector_write@page+1,c
 32767  001F90  0E22               	movlw	34
 32768  001F92  6E20               	movwf	flash_sector_write@page,c
 32769  001F94  0EC3               	movlw	low _buffer
 32770  001F96  6E22               	movwf	flash_sector_write@data,c
 32771  001F98  0E02               	movlw	high _buffer
 32772  001F9A  6E23               	movwf	flash_sector_write@data+1,c
 32773  001F9C  ECCA  F033         	call	_flash_sector_write	;wreg free
 32774                           
 32775                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 32776  001FA0  0E00               	movlw	0
 32777  001FA2  6E26               	movwf	fat_format@cntr+1,c
 32778  001FA4  0E00               	movlw	0
 32779  001FA6  6E25               	movwf	fat_format@cntr,c
 32780  001FA8                     l12186:
 32781  001FA8  0E02               	movlw	2
 32782  001FAA  5C26               	subwf	fat_format@cntr+1,w,c
 32783  001FAC  B0D8               	btfsc	status,0,c
 32784  001FAE  D00B               	goto	u9410
 32785                           
 32786                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 32787  001FB0  0EC3               	movlw	low _buffer
 32788  001FB2  2425               	addwf	fat_format@cntr,w,c
 32789  001FB4  6ED9               	movwf	fsr2l,c
 32790  001FB6  0E02               	movlw	high _buffer
 32791  001FB8  2026               	addwfc	fat_format@cntr+1,w,c
 32792  001FBA  6EDA               	movwf	fsr2h,c
 32793  001FBC  0E00               	movlw	0
 32794  001FBE  6EDF               	movwf	indf2,c
 32795  001FC0  4A25               	infsnz	fat_format@cntr,f,c
 32796  001FC2  2A26               	incf	fat_format@cntr+1,f,c
 32797  001FC4  D7F1               	goto	l12186
 32798  001FC6                     u9410:
 32799                           
 32800                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 32801  001FC6  0E00               	movlw	0
 32802  001FC8  6E26               	movwf	fat_format@cntr+1,c
 32803  001FCA  0E23               	movlw	35
 32804  001FCC  6E25               	movwf	fat_format@cntr,c
 32805  001FCE                     l12198:
 32806  001FCE  5026               	movf	fat_format@cntr+1,w,c
 32807  001FD0  E111               	bnz	l12208
 32808  001FD2  0E26               	movlw	38
 32809  001FD4  5C25               	subwf	fat_format@cntr,w,c
 32810  001FD6  B0D8               	btfsc	status,0,c
 32811  001FD8  D00D               	goto	u9430
 32812                           
 32813                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 32814  001FDA  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 32815  001FDE  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 32816  001FE2  0EC3               	movlw	low _buffer
 32817  001FE4  6E22               	movwf	flash_sector_write@data,c
 32818  001FE6  0E02               	movlw	high _buffer
 32819  001FE8  6E23               	movwf	flash_sector_write@data+1,c
 32820  001FEA  ECCA  F033         	call	_flash_sector_write	;wreg free
 32821  001FEE  4A25               	infsnz	fat_format@cntr,f,c
 32822  001FF0  2A26               	incf	fat_format@cntr+1,f,c
 32823  001FF2  D7ED               	goto	l12198
 32824  001FF4                     u9430:
 32825  001FF4                     l12208:
 32826                           
 32827                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 32828  001FF4  0E00               	movlw	0
 32829  001FF6  6E26               	movwf	fat_format@cntr+1,c
 32830  001FF8  0E00               	movlw	0
 32831  001FFA  6E25               	movwf	fat_format@cntr,c
 32832  001FFC                     l12210:
 32833  001FFC  0E02               	movlw	2
 32834  001FFE  5C26               	subwf	fat_format@cntr+1,w,c
 32835  002000  B0D8               	btfsc	status,0,c
 32836  002002  D010               	goto	u9450
 32837                           
 32838                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 32839  002004  0EC3               	movlw	low _buffer
 32840  002006  2425               	addwf	fat_format@cntr,w,c
 32841  002008  6ED9               	movwf	fsr2l,c
 32842  00200A  0E02               	movlw	high _buffer
 32843  00200C  2026               	addwfc	fat_format@cntr+1,w,c
 32844  00200E  6EDA               	movwf	fsr2h,c
 32845  002010  C025  F001         	movff	fat_format@cntr,__get_data@idx
 32846  002014  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 32847  002018  EC2F  F037         	call	__get_data	;wreg free
 32848  00201C  6EDF               	movwf	indf2,c
 32849  00201E  4A25               	infsnz	fat_format@cntr,f,c
 32850  002020  2A26               	incf	fat_format@cntr+1,f,c
 32851  002022  D7EC               	goto	l12210
 32852  002024                     u9450:
 32853                           
 32854                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 32855  002024  0E00               	movlw	0
 32856  002026  6E21               	movwf	flash_sector_write@page+1,c
 32857  002028  0E26               	movlw	38
 32858  00202A  6E20               	movwf	flash_sector_write@page,c
 32859  00202C  0EC3               	movlw	low _buffer
 32860  00202E  6E22               	movwf	flash_sector_write@data,c
 32861  002030  0E02               	movlw	high _buffer
 32862  002032  6E23               	movwf	flash_sector_write@data+1,c
 32863  002034  ECCA  F033         	call	_flash_sector_write	;wreg free
 32864                           
 32865                           ;fat16.c: 1379: return 0x00;
 32866  002038  0E00               	movlw	0
 32867  00203A  0012               	return	
 32868  00203C                     __end_of_fat_format:
 32869                           	opt stack 0
 32870                           tosu	equ	0xFFF
 32871                           tosh	equ	0xFFE
 32872                           tosl	equ	0xFFD
 32873                           pclath	equ	0xFFA
 32874                           tblptru	equ	0xFF8
 32875                           tblptrh	equ	0xFF7
 32876                           tblptrl	equ	0xFF6
 32877                           tablat	equ	0xFF5
 32878                           prodh	equ	0xFF4
 32879                           prodl	equ	0xFF3
 32880                           intcon	equ	0xFF2
 32881                           intcon2	equ	0xFF1
 32882                           intcon3	equ	0xFF0
 32883                           indf0	equ	0xFEF
 32884                           postinc0	equ	0xFEE
 32885                           fsr0h	equ	0xFEA
 32886                           fsr0l	equ	0xFE9
 32887                           wreg	equ	0xFE8
 32888                           indf1	equ	0xFE7
 32889                           postdec1	equ	0xFE5
 32890                           plusw1	equ	0xFE3
 32891                           fsr1h	equ	0xFE2
 32892                           fsr1l	equ	0xFE1
 32893                           indf2	equ	0xFDF
 32894                           postinc2	equ	0xFDE
 32895                           postdec2	equ	0xFDD
 32896                           plusw2	equ	0xFDB
 32897                           fsr2h	equ	0xFDA
 32898                           fsr2l	equ	0xFD9
 32899                           status	equ	0xFD8
 32900                           
 32901 ;; *************** function _flash_sector_write *****************
 32902 ;; Defined at:
 32903 ;;		line 434 in file "flash.c"
 32904 ;; Parameters:    Size  Location     Type
 32905 ;;  page            2   31[COMRAM] unsigned int 
 32906 ;;  data            2   33[COMRAM] PTR unsigned char 
 32907 ;;		 -> buffer(512), msd_buffer(512), 
 32908 ;; Auto vars:     Size  Location     Type
 32909 ;;  match           1   35[COMRAM] enum E6902
 32910 ;; Return value:  Size  Location     Type
 32911 ;;                  1    wreg      void 
 32912 ;; Registers used:
 32913 ;;		wreg, status,2, status,0, cstack
 32914 ;; Tracked objects:
 32915 ;;		On entry : 0/0
 32916 ;;		On exit  : 0/0
 32917 ;;		Unchanged: 0/0
 32918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32922 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32923 ;;Total ram usage:        5 bytes
 32924 ;; Hardware stack levels used:    1
 32925 ;; Hardware stack levels required when called:    4
 32926 ;; This function calls:
 32927 ;;		__flash_compare_page_to_buffer
 32928 ;;		__flash_write_page_from_buffer
 32929 ;;		__flash_write_to_buffer
 32930 ;; This function is called by:
 32931 ;;		_ExternalFlash_SectorWrite
 32932 ;;		_fat_format
 32933 ;;		__make_cluster_chain
 32934 ;; This function uses a non-reentrant model
 32935 ;;
 32936                           
 32937                           	psect	text172
 32938  006794                     __ptext172:
 32939                           	opt stack 0
 32940  006794                     _flash_sector_write:
 32941                           	opt stack 23
 32942                           
 32943                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 32944                           
 32945                           ;incstack = 0
 32946  006794  0E00               	movlw	0
 32947  006796  6E15               	movwf	__flash_write_to_buffer@start+1,c
 32948  006798  0E00               	movlw	0
 32949  00679A  6E14               	movwf	__flash_write_to_buffer@start,c
 32950  00679C  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 32951  0067A0  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 32952  0067A4  0E02               	movlw	2
 32953  0067A6  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 32954  0067A8  0E00               	movlw	0
 32955  0067AA  6E18               	movwf	__flash_write_to_buffer@data_length,c
 32956  0067AC  0E00               	movlw	0
 32957  0067AE  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 32958  0067B0  ECA2  F033         	call	__flash_write_to_buffer	;wreg free
 32959                           
 32960                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 32961  0067B4  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 32962  0067B8  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 32963  0067BC  0E00               	movlw	0
 32964  0067BE  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 32965  0067C0  EC99  F02E         	call	__flash_compare_page_to_buffer	;wreg free
 32966  0067C4  6E24               	movwf	flash_sector_write@match,c
 32967                           
 32968                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 32969  0067C6  0424               	decf	flash_sector_write@match,w,c
 32970  0067C8  A4D8               	btfss	status,2,c
 32971  0067CA  0012               	return	
 32972                           
 32973                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 32974  0067CC  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 32975  0067D0  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 32976  0067D4  0E00               	movlw	0
 32977  0067D6  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 32978  0067D8  ECCD  F031         	call	__flash_write_page_from_buffer	;wreg free
 32979  0067DC  0012               	return	
 32980  0067DE                     __end_of_flash_sector_write:
 32981                           	opt stack 0
 32982                           tosu	equ	0xFFF
 32983                           tosh	equ	0xFFE
 32984                           tosl	equ	0xFFD
 32985                           pclath	equ	0xFFA
 32986                           tblptru	equ	0xFF8
 32987                           tblptrh	equ	0xFF7
 32988                           tblptrl	equ	0xFF6
 32989                           tablat	equ	0xFF5
 32990                           prodh	equ	0xFF4
 32991                           prodl	equ	0xFF3
 32992                           intcon	equ	0xFF2
 32993                           intcon2	equ	0xFF1
 32994                           intcon3	equ	0xFF0
 32995                           indf0	equ	0xFEF
 32996                           postinc0	equ	0xFEE
 32997                           fsr0h	equ	0xFEA
 32998                           fsr0l	equ	0xFE9
 32999                           wreg	equ	0xFE8
 33000                           indf1	equ	0xFE7
 33001                           postdec1	equ	0xFE5
 33002                           plusw1	equ	0xFE3
 33003                           fsr1h	equ	0xFE2
 33004                           fsr1l	equ	0xFE1
 33005                           indf2	equ	0xFDF
 33006                           postinc2	equ	0xFDE
 33007                           postdec2	equ	0xFDD
 33008                           plusw2	equ	0xFDB
 33009                           fsr2h	equ	0xFDA
 33010                           fsr2l	equ	0xFD9
 33011                           status	equ	0xFD8
 33012                           
 33013 ;; *************** function __flash_write_to_buffer *****************
 33014 ;; Defined at:
 33015 ;;		line 236 in file "flash.c"
 33016 ;; Parameters:    Size  Location     Type
 33017 ;;  start           2   19[COMRAM] unsigned int 
 33018 ;;  data            2   21[COMRAM] PTR unsigned char 
 33019 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33020 ;;		 -> buffer(512), msd_buffer(512), 
 33021 ;;  data_length     2   23[COMRAM] unsigned int 
 33022 ;;  buffer          1   25[COMRAM] enum E6898
 33023 ;; Auto vars:     Size  Location     Type
 33024 ;;  command         4   26[COMRAM] unsigned char [4]
 33025 ;; Return value:  Size  Location     Type
 33026 ;;                  1    wreg      void 
 33027 ;; Registers used:
 33028 ;;		wreg, status,2, status,0, cstack
 33029 ;; Tracked objects:
 33030 ;;		On entry : 0/0
 33031 ;;		On exit  : 0/0
 33032 ;;		Unchanged: 0/0
 33033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33034 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33037 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33038 ;;Total ram usage:       11 bytes
 33039 ;; Hardware stack levels used:    1
 33040 ;; Hardware stack levels required when called:    3
 33041 ;; This function calls:
 33042 ;;		__flash_is_busy
 33043 ;;		_spi_tx_tx
 33044 ;; This function is called by:
 33045 ;;		_flash_sector_write
 33046 ;;		_flash_partial_write
 33047 ;;		_flash_write_to_buffer
 33048 ;; This function uses a non-reentrant model
 33049 ;;
 33050                           
 33051                           	psect	text173
 33052  006744                     __ptext173:
 33053                           	opt stack 0
 33054  006744                     __flash_write_to_buffer:
 33055                           	opt stack 23
 33056                           
 33057                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 33058                           
 33059                           ;incstack = 0
 33060  006744  ECD7  F037         	call	__flash_is_busy	;wreg free
 33061  006748  0900               	iorlw	0
 33062  00674A  A4D8               	btfss	status,2,c
 33063  00674C  D7FB               	goto	__flash_write_to_buffer
 33064                           
 33065                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 33066  00674E  501A               	movf	__flash_write_to_buffer@buffer,w,c
 33067  006750  A4D8               	btfss	status,2,c
 33068  006752  D002               	goto	l1772
 33069                           
 33070                           ;flash.c: 245: command[0] = 0x84;
 33071  006754  0E84               	movlw	132
 33072  006756  6E1B               	movwf	__flash_write_to_buffer@command,c
 33073  006758                     l1772:
 33074                           
 33075                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 33076  006758  041A               	decf	__flash_write_to_buffer@buffer,w,c
 33077  00675A  A4D8               	btfss	status,2,c
 33078  00675C  D002               	goto	l1773
 33079                           
 33080                           ;flash.c: 247: command[0] = 0x87;
 33081  00675E  0E87               	movlw	135
 33082  006760  6E1B               	movwf	__flash_write_to_buffer@command,c
 33083  006762                     l1773:
 33084                           
 33085                           ;flash.c: 249: command[1] = 0x00;
 33086  006762  0E00               	movlw	0
 33087  006764  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 33088                           
 33089                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33090  006766  5015               	movf	__flash_write_to_buffer@start+1,w,c
 33091  006768  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 33092                           
 33093                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 33094  00676A  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33095                           
 33096                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 33097  00676E  0E1B               	movlw	low __flash_write_to_buffer@command
 33098  006770  6E01               	movwf	spi_tx_tx@command,c
 33099  006772  0E00               	movlw	high __flash_write_to_buffer@command
 33100  006774  6E02               	movwf	spi_tx_tx@command+1,c
 33101  006776  0E00               	movlw	0
 33102  006778  6E04               	movwf	spi_tx_tx@command_length+1,c
 33103  00677A  0E04               	movlw	4
 33104  00677C  6E03               	movwf	spi_tx_tx@command_length,c
 33105  00677E  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 33106  006782  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 33107  006786  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 33108  00678A  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 33109  00678E  EC14  F02D         	call	_spi_tx_tx	;wreg free
 33110  006792  0012               	return		;funcret
 33111  006794                     __end_of__flash_write_to_buffer:
 33112                           	opt stack 0
 33113                           tosu	equ	0xFFF
 33114                           tosh	equ	0xFFE
 33115                           tosl	equ	0xFFD
 33116                           pclath	equ	0xFFA
 33117                           tblptru	equ	0xFF8
 33118                           tblptrh	equ	0xFF7
 33119                           tblptrl	equ	0xFF6
 33120                           tablat	equ	0xFF5
 33121                           prodh	equ	0xFF4
 33122                           prodl	equ	0xFF3
 33123                           intcon	equ	0xFF2
 33124                           intcon2	equ	0xFF1
 33125                           intcon3	equ	0xFF0
 33126                           indf0	equ	0xFEF
 33127                           postinc0	equ	0xFEE
 33128                           fsr0h	equ	0xFEA
 33129                           fsr0l	equ	0xFE9
 33130                           wreg	equ	0xFE8
 33131                           indf1	equ	0xFE7
 33132                           postdec1	equ	0xFE5
 33133                           plusw1	equ	0xFE3
 33134                           fsr1h	equ	0xFE2
 33135                           fsr1l	equ	0xFE1
 33136                           indf2	equ	0xFDF
 33137                           postinc2	equ	0xFDE
 33138                           postdec2	equ	0xFDD
 33139                           plusw2	equ	0xFDB
 33140                           fsr2h	equ	0xFDA
 33141                           fsr2l	equ	0xFD9
 33142                           status	equ	0xFD8
 33143                           
 33144 ;; *************** function _spi_tx_tx *****************
 33145 ;; Defined at:
 33146 ;;		line 146 in file "spi.c"
 33147 ;; Parameters:    Size  Location     Type
 33148 ;;  command         2    0[COMRAM] PTR unsigned char 
 33149 ;;		 -> _flash_write_to_buffer@command(4), 
 33150 ;;  command_leng    2    2[COMRAM] unsigned int 
 33151 ;;  data            2    4[COMRAM] PTR unsigned char 
 33152 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33153 ;;		 -> buffer(512), msd_buffer(512), 
 33154 ;;  data_length     2    6[COMRAM] unsigned int 
 33155 ;; Auto vars:     Size  Location     Type
 33156 ;;		None
 33157 ;; Return value:  Size  Location     Type
 33158 ;;                  1    wreg      void 
 33159 ;; Registers used:
 33160 ;;		wreg, status,2, status,0
 33161 ;; Tracked objects:
 33162 ;;		On entry : 0/0
 33163 ;;		On exit  : 0/0
 33164 ;;		Unchanged: 0/0
 33165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33169 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33170 ;;Total ram usage:       12 bytes
 33171 ;; Hardware stack levels used:    1
 33172 ;; This function calls:
 33173 ;;		Nothing
 33174 ;; This function is called by:
 33175 ;;		__flash_write_to_buffer
 33176 ;; This function uses a non-reentrant model
 33177 ;;
 33178                           
 33179                           	psect	text174
 33180  005A28                     __ptext174:
 33181                           	opt stack 0
 33182  005A28                     _spi_tx_tx:
 33183                           	opt stack 25
 33184                           
 33185                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33186                           
 33187                           ;incstack = 0
 33188  005A28  9E88               	bcf	3976,7,c	;volatile
 33189                           
 33190                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33191  005A2A  9C88               	bcf	3976,6,c	;volatile
 33192                           
 33193                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33194  005A2C  8A88               	bsf	3976,5,c	;volatile
 33195                           
 33196                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33197  005A2E  9888               	bcf	3976,4,c	;volatile
 33198                           
 33199                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33200  005A30  9688               	bcf	3976,3,c	;volatile
 33201                           
 33202                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33203  005A32  8488               	bsf	3976,2,c	;volatile
 33204                           
 33205                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33206  005A34  9288               	bcf	3976,1,c	;volatile
 33207                           
 33208                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33209  005A36  9886               	bcf	3974,4,c	;volatile
 33210  005A38  9A86               	bcf	3974,5,c	;volatile
 33211  005A3A  9C86               	bcf	3974,6,c	;volatile
 33212  005A3C  9E86               	bcf	3974,7,c	;volatile
 33213                           
 33214                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33215  005A3E  9086               	bcf	3974,0,c	;volatile
 33216  005A40  9286               	bcf	3974,1,c	;volatile
 33217  005A42  9486               	bcf	3974,2,c	;volatile
 33218  005A44  9686               	bcf	3974,3,c	;volatile
 33219                           
 33220                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33221  005A46  5002               	movf	spi_tx_tx@command+1,w,c
 33222  005A48  6E6A               	movwf	3946,c	;volatile
 33223                           
 33224                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33225  005A4A  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33226                           
 33227                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33228  005A4E  0EFF               	movlw	255
 33229  005A50  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33230  005A52  0EFF               	movlw	255
 33231  005A54  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33232  005A56  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33233  005A5A  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33234  005A5E  5009               	movf	??_spi_tx_tx,w,c
 33235  005A60  260B               	addwf	??_spi_tx_tx+2,f,c
 33236  005A62  500A               	movf	??_spi_tx_tx+1,w,c
 33237  005A64  220C               	addwfc	??_spi_tx_tx+3,f,c
 33238  005A66  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33239  005A6A  6A0C               	clrf	??_spi_tx_tx+3,c
 33240  005A6C  500B               	movf	??_spi_tx_tx+2,w,c
 33241  005A6E  6E66               	movwf	3942,c	;volatile
 33242                           
 33243                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33244  005A70  0403               	decf	spi_tx_tx@command_length,w,c
 33245  005A72  6E67               	movwf	3943,c	;volatile
 33246                           
 33247                           ;spi.c: 174: LATDbits.LD7 = 0;
 33248  005A74  9E8C               	bcf	3980,7,c	;volatile
 33249                           
 33250                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33251  005A76  8088               	bsf	3976,0,c	;volatile
 33252  005A78  B088               	btfsc	3976,0,c	;volatile
 33253  005A7A  D7FE               	goto	l2797
 33254                           
 33255                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33256  005A7C  5006               	movf	spi_tx_tx@data+1,w,c
 33257  005A7E  6E6A               	movwf	3946,c	;volatile
 33258                           
 33259                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33260  005A80  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33261                           
 33262                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33263  005A84  0EFF               	movlw	255
 33264  005A86  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33265  005A88  0EFF               	movlw	255
 33266  005A8A  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33267  005A8C  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33268  005A90  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33269  005A94  5009               	movf	??_spi_tx_tx,w,c
 33270  005A96  260B               	addwf	??_spi_tx_tx+2,f,c
 33271  005A98  500A               	movf	??_spi_tx_tx+1,w,c
 33272  005A9A  220C               	addwfc	??_spi_tx_tx+3,f,c
 33273  005A9C  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33274  005AA0  6A0C               	clrf	??_spi_tx_tx+3,c
 33275  005AA2  500B               	movf	??_spi_tx_tx+2,w,c
 33276  005AA4  6E66               	movwf	3942,c	;volatile
 33277                           
 33278                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33279  005AA6  0407               	decf	spi_tx_tx@data_length,w,c
 33280  005AA8  6E67               	movwf	3943,c	;volatile
 33281                           
 33282                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33283  005AAA  8088               	bsf	3976,0,c	;volatile
 33284  005AAC  B088               	btfsc	3976,0,c	;volatile
 33285  005AAE  D7FE               	goto	l2800
 33286                           
 33287                           ;spi.c: 193: LATDbits.LD7 = 1;
 33288  005AB0  8E8C               	bsf	3980,7,c	;volatile
 33289  005AB2  0012               	return		;funcret
 33290  005AB4                     __end_of_spi_tx_tx:
 33291                           	opt stack 0
 33292                           tosu	equ	0xFFF
 33293                           tosh	equ	0xFFE
 33294                           tosl	equ	0xFFD
 33295                           pclath	equ	0xFFA
 33296                           tblptru	equ	0xFF8
 33297                           tblptrh	equ	0xFF7
 33298                           tblptrl	equ	0xFF6
 33299                           tablat	equ	0xFF5
 33300                           prodh	equ	0xFF4
 33301                           prodl	equ	0xFF3
 33302                           intcon	equ	0xFF2
 33303                           intcon2	equ	0xFF1
 33304                           intcon3	equ	0xFF0
 33305                           indf0	equ	0xFEF
 33306                           postinc0	equ	0xFEE
 33307                           fsr0h	equ	0xFEA
 33308                           fsr0l	equ	0xFE9
 33309                           wreg	equ	0xFE8
 33310                           indf1	equ	0xFE7
 33311                           postdec1	equ	0xFE5
 33312                           plusw1	equ	0xFE3
 33313                           fsr1h	equ	0xFE2
 33314                           fsr1l	equ	0xFE1
 33315                           indf2	equ	0xFDF
 33316                           postinc2	equ	0xFDE
 33317                           postdec2	equ	0xFDD
 33318                           plusw2	equ	0xFDB
 33319                           fsr2h	equ	0xFDA
 33320                           fsr2l	equ	0xFD9
 33321                           status	equ	0xFD8
 33322                           
 33323 ;; *************** function __flash_write_page_from_buffer *****************
 33324 ;; Defined at:
 33325 ;;		line 258 in file "flash.c"
 33326 ;; Parameters:    Size  Location     Type
 33327 ;;  page            2   19[COMRAM] unsigned int 
 33328 ;;  buffer          1   21[COMRAM] enum E6898
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;  command         4   25[COMRAM] unsigned char [4]
 33331 ;; Return value:  Size  Location     Type
 33332 ;;                  1    wreg      void 
 33333 ;; Registers used:
 33334 ;;		wreg, status,2, status,0, cstack
 33335 ;; Tracked objects:
 33336 ;;		On entry : 0/0
 33337 ;;		On exit  : 0/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33340 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33341 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33342 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33343 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33344 ;;Total ram usage:       10 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:    3
 33347 ;; This function calls:
 33348 ;;		__flash_is_busy
 33349 ;;		_spi_tx
 33350 ;; This function is called by:
 33351 ;;		_flash_sector_write
 33352 ;;		_flash_partial_write
 33353 ;;		_flash_write_page_from_buffer
 33354 ;; This function uses a non-reentrant model
 33355 ;;
 33356                           
 33357                           	psect	text175
 33358  00639A                     __ptext175:
 33359                           	opt stack 0
 33360  00639A                     __flash_write_page_from_buffer:
 33361                           	opt stack 23
 33362                           
 33363                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33364                           
 33365                           ;incstack = 0
 33366  00639A  ECD7  F037         	call	__flash_is_busy	;wreg free
 33367  00639E  0900               	iorlw	0
 33368  0063A0  A4D8               	btfss	status,2,c
 33369  0063A2  D7FB               	goto	__flash_write_page_from_buffer
 33370                           
 33371                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 33372  0063A4  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 33373  0063A6  A4D8               	btfss	status,2,c
 33374  0063A8  D002               	goto	l1780
 33375                           
 33376                           ;flash.c: 267: command[0] = 0x83;
 33377  0063AA  0E83               	movlw	131
 33378  0063AC  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33379  0063AE                     l1780:
 33380                           
 33381                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 33382  0063AE  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 33383  0063B0  A4D8               	btfss	status,2,c
 33384  0063B2  D002               	goto	l1781
 33385                           
 33386                           ;flash.c: 269: command[0] = 0x86;
 33387  0063B4  0E86               	movlw	134
 33388  0063B6  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33389  0063B8                     l1781:
 33390                           
 33391                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33392  0063B8  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33393  0063BC  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33394  0063C0  0E07               	movlw	7
 33395  0063C2  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 33396  0063C4                     u6915:
 33397  0063C4  90D8               	bcf	status,0,c
 33398  0063C6  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 33399  0063C8  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 33400  0063CA  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 33401  0063CC  D7FB               	goto	u6915
 33402  0063CE  5017               	movf	??__flash_write_page_from_buffer,w,c
 33403  0063D0  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 33404                           
 33405                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 33406  0063D2  5014               	movf	__flash_write_page_from_buffer@page,w,c
 33407  0063D4  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 33408  0063D6  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 33409                           
 33410                           ;flash.c: 273: command[3] = 0x00;
 33411  0063D8  0E00               	movlw	0
 33412  0063DA  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 33413                           
 33414                           ;flash.c: 276: spi_tx(command, 4);
 33415  0063DC  0E1A               	movlw	low __flash_write_page_from_buffer@command
 33416  0063DE  6E01               	movwf	spi_tx@data,c
 33417  0063E0  0E00               	movlw	high __flash_write_page_from_buffer@command
 33418  0063E2  6E02               	movwf	spi_tx@data+1,c
 33419  0063E4  0E00               	movlw	0
 33420  0063E6  6E04               	movwf	spi_tx@length+1,c
 33421  0063E8  0E04               	movlw	4
 33422  0063EA  6E03               	movwf	spi_tx@length,c
 33423  0063EC  ECF9  F031         	call	_spi_tx	;wreg free
 33424  0063F0  0012               	return		;funcret
 33425  0063F2                     __end_of__flash_write_page_from_buffer:
 33426                           	opt stack 0
 33427                           tosu	equ	0xFFF
 33428                           tosh	equ	0xFFE
 33429                           tosl	equ	0xFFD
 33430                           pclath	equ	0xFFA
 33431                           tblptru	equ	0xFF8
 33432                           tblptrh	equ	0xFF7
 33433                           tblptrl	equ	0xFF6
 33434                           tablat	equ	0xFF5
 33435                           prodh	equ	0xFF4
 33436                           prodl	equ	0xFF3
 33437                           intcon	equ	0xFF2
 33438                           intcon2	equ	0xFF1
 33439                           intcon3	equ	0xFF0
 33440                           indf0	equ	0xFEF
 33441                           postinc0	equ	0xFEE
 33442                           fsr0h	equ	0xFEA
 33443                           fsr0l	equ	0xFE9
 33444                           wreg	equ	0xFE8
 33445                           indf1	equ	0xFE7
 33446                           postdec1	equ	0xFE5
 33447                           plusw1	equ	0xFE3
 33448                           fsr1h	equ	0xFE2
 33449                           fsr1l	equ	0xFE1
 33450                           indf2	equ	0xFDF
 33451                           postinc2	equ	0xFDE
 33452                           postdec2	equ	0xFDD
 33453                           plusw2	equ	0xFDB
 33454                           fsr2h	equ	0xFDA
 33455                           fsr2l	equ	0xFD9
 33456                           status	equ	0xFD8
 33457                           
 33458 ;; *************** function __flash_compare_page_to_buffer *****************
 33459 ;; Defined at:
 33460 ;;		line 176 in file "flash.c"
 33461 ;; Parameters:    Size  Location     Type
 33462 ;;  page            2   19[COMRAM] unsigned int 
 33463 ;;  buffer          1   21[COMRAM] enum E6898
 33464 ;; Auto vars:     Size  Location     Type
 33465 ;;  command         4   27[COMRAM] unsigned char [4]
 33466 ;;  status          2   25[COMRAM] unsigned int 
 33467 ;; Return value:  Size  Location     Type
 33468 ;;                  1    wreg      enum E6902
 33469 ;; Registers used:
 33470 ;;		wreg, status,2, status,0, cstack
 33471 ;; Tracked objects:
 33472 ;;		On entry : 0/0
 33473 ;;		On exit  : 0/0
 33474 ;;		Unchanged: 0/0
 33475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33476 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33477 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33478 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33479 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33480 ;;Total ram usage:       12 bytes
 33481 ;; Hardware stack levels used:    1
 33482 ;; Hardware stack levels required when called:    3
 33483 ;; This function calls:
 33484 ;;		__flash_get_status
 33485 ;;		__flash_is_busy
 33486 ;;		_spi_tx
 33487 ;; This function is called by:
 33488 ;;		_flash_sector_write
 33489 ;;		_flash_partial_write
 33490 ;; This function uses a non-reentrant model
 33491 ;;
 33492                           
 33493                           	psect	text176
 33494  005D32                     __ptext176:
 33495                           	opt stack 0
 33496  005D32                     __flash_compare_page_to_buffer:
 33497                           	opt stack 23
 33498                           
 33499                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 33500                           
 33501                           ;incstack = 0
 33502  005D32  ECD7  F037         	call	__flash_is_busy	;wreg free
 33503  005D36  0900               	iorlw	0
 33504  005D38  A4D8               	btfss	status,2,c
 33505  005D3A  D7FB               	goto	__flash_compare_page_to_buffer
 33506                           
 33507                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 33508  005D3C  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 33509  005D3E  A4D8               	btfss	status,2,c
 33510  005D40  D002               	goto	l1753
 33511                           
 33512                           ;flash.c: 186: command[0] = 0x60;
 33513  005D42  0E60               	movlw	96
 33514  005D44  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 33515  005D46                     l1753:
 33516                           
 33517                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 33518  005D46  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 33519  005D48  A4D8               	btfss	status,2,c
 33520  005D4A  D002               	goto	l1754
 33521                           
 33522                           ;flash.c: 188: command[0] = 0x60;
 33523  005D4C  0E60               	movlw	96
 33524  005D4E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 33525  005D50                     l1754:
 33526                           
 33527                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33528  005D50  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 33529  005D54  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 33530  005D58  0E07               	movlw	7
 33531  005D5A  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 33532  005D5C                     u6825:
 33533  005D5C  90D8               	bcf	status,0,c
 33534  005D5E  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 33535  005D60  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 33536  005D62  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 33537  005D64  D7FB               	goto	u6825
 33538  005D66  5017               	movf	??__flash_compare_page_to_buffer,w,c
 33539  005D68  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 33540                           
 33541                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 33542  005D6A  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 33543  005D6C  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 33544  005D6E  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 33545                           
 33546                           ;flash.c: 192: command[3] = 0x00;
 33547  005D70  0E00               	movlw	0
 33548  005D72  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 33549                           
 33550                           ;flash.c: 195: spi_tx(command, 4);
 33551  005D74  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 33552  005D76  6E01               	movwf	spi_tx@data,c
 33553  005D78  0E00               	movlw	high __flash_compare_page_to_buffer@command
 33554  005D7A  6E02               	movwf	spi_tx@data+1,c
 33555  005D7C  0E00               	movlw	0
 33556  005D7E  6E04               	movwf	spi_tx@length+1,c
 33557  005D80  0E04               	movlw	4
 33558  005D82  6E03               	movwf	spi_tx@length,c
 33559  005D84  ECF9  F031         	call	_spi_tx	;wreg free
 33560  005D88  ECD7  F037         	call	__flash_is_busy	;wreg free
 33561  005D8C  0900               	iorlw	0
 33562  005D8E  A4D8               	btfss	status,2,c
 33563  005D90  D7FB               	goto	l1756
 33564                           
 33565                           ;flash.c: 201: status = _flash_get_status();
 33566  005D92  EC50  F036         	call	__flash_get_status	;wreg free
 33567  005D96  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 33568  005D9A  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 33569                           
 33570                           ;flash.c: 204: if(status & 0b0000000001000000)
 33571  005D9E  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 33572  005DA0  D002               	goto	l1758
 33573                           
 33574                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 33575  005DA2  0E01               	movlw	1
 33576                           
 33577                           ;flash.c: 208: }
 33578  005DA4  0012               	return	
 33579  005DA6                     l1758:
 33580                           
 33581                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 33582  005DA6  0E00               	movlw	0
 33583  005DA8  0012               	return	
 33584  005DAA                     __end_of__flash_compare_page_to_buffer:
 33585                           	opt stack 0
 33586                           tosu	equ	0xFFF
 33587                           tosh	equ	0xFFE
 33588                           tosl	equ	0xFFD
 33589                           pclath	equ	0xFFA
 33590                           tblptru	equ	0xFF8
 33591                           tblptrh	equ	0xFF7
 33592                           tblptrl	equ	0xFF6
 33593                           tablat	equ	0xFF5
 33594                           prodh	equ	0xFF4
 33595                           prodl	equ	0xFF3
 33596                           intcon	equ	0xFF2
 33597                           intcon2	equ	0xFF1
 33598                           intcon3	equ	0xFF0
 33599                           indf0	equ	0xFEF
 33600                           postinc0	equ	0xFEE
 33601                           fsr0h	equ	0xFEA
 33602                           fsr0l	equ	0xFE9
 33603                           wreg	equ	0xFE8
 33604                           indf1	equ	0xFE7
 33605                           postdec1	equ	0xFE5
 33606                           plusw1	equ	0xFE3
 33607                           fsr1h	equ	0xFE2
 33608                           fsr1l	equ	0xFE1
 33609                           indf2	equ	0xFDF
 33610                           postinc2	equ	0xFDE
 33611                           postdec2	equ	0xFDD
 33612                           plusw2	equ	0xFDB
 33613                           fsr2h	equ	0xFDA
 33614                           fsr2l	equ	0xFD9
 33615                           status	equ	0xFD8
 33616                           
 33617 ;; *************** function __flash_is_busy *****************
 33618 ;; Defined at:
 33619 ;;		line 281 in file "flash.c"
 33620 ;; Parameters:    Size  Location     Type
 33621 ;;		None
 33622 ;; Auto vars:     Size  Location     Type
 33623 ;;  status          2   17[COMRAM] unsigned int 
 33624 ;; Return value:  Size  Location     Type
 33625 ;;                  1    wreg      unsigned char 
 33626 ;; Registers used:
 33627 ;;		wreg, status,2, status,0, cstack
 33628 ;; Tracked objects:
 33629 ;;		On entry : 0/0
 33630 ;;		On exit  : 0/0
 33631 ;;		Unchanged: 0/0
 33632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33637 ;;Total ram usage:        2 bytes
 33638 ;; Hardware stack levels used:    1
 33639 ;; Hardware stack levels required when called:    2
 33640 ;; This function calls:
 33641 ;;		__flash_get_status
 33642 ;;		__flash_wakeup
 33643 ;; This function is called by:
 33644 ;;		__flash_set_page_size
 33645 ;;		__flash_compare_page_to_buffer
 33646 ;;		__flash_write_to_buffer
 33647 ;;		__flash_write_page_from_buffer
 33648 ;;		__flash_partial_read
 33649 ;;		_flash_is_busy
 33650 ;;		__flash_copy_page_to_buffer
 33651 ;;		__flash_erase_page
 33652 ;;		__flash_buffer_read
 33653 ;;		_flash_set_power_state
 33654 ;;		_flash_partial_write
 33655 ;; This function uses a non-reentrant model
 33656 ;;
 33657                           
 33658                           	psect	text177
 33659  006FAE                     __ptext177:
 33660                           	opt stack 0
 33661  006FAE                     __flash_is_busy:
 33662                           	opt stack 25
 33663                           
 33664                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 33665                           
 33666                           ;incstack = 0
 33667  006FAE  0100               	movlb	0	; () banked
 33668  006FB0  5197               	movf	_power_state& (0+255),w,b
 33669  006FB2  A4D8               	btfss	status,2,c
 33670                           
 33671                           ; BSR set to: 0
 33672                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 33673  006FB4  ECD1  F032         	call	__flash_wakeup	;wreg free
 33674                           
 33675                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 33676  006FB8  EC50  F036         	call	__flash_get_status	;wreg free
 33677  006FBC  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 33678  006FC0  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 33679                           
 33680                           ;flash.c: 295: if(status & 0b0000000010000000)
 33681  006FC4  AE12               	btfss	__flash_is_busy@status,7,c
 33682  006FC6  D002               	goto	l1786
 33683                           
 33684                           ;flash.c: 296: {;flash.c: 298: return 0;
 33685  006FC8  0E00               	movlw	0
 33686                           
 33687                           ;flash.c: 299: }
 33688  006FCA  0012               	return	
 33689  006FCC                     l1786:
 33690                           
 33691                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 33692  006FCC  0E01               	movlw	1
 33693  006FCE  0012               	return	
 33694  006FD0                     __end_of__flash_is_busy:
 33695                           	opt stack 0
 33696                           tosu	equ	0xFFF
 33697                           tosh	equ	0xFFE
 33698                           tosl	equ	0xFFD
 33699                           pclath	equ	0xFFA
 33700                           tblptru	equ	0xFF8
 33701                           tblptrh	equ	0xFF7
 33702                           tblptrl	equ	0xFF6
 33703                           tablat	equ	0xFF5
 33704                           prodh	equ	0xFF4
 33705                           prodl	equ	0xFF3
 33706                           intcon	equ	0xFF2
 33707                           intcon2	equ	0xFF1
 33708                           intcon3	equ	0xFF0
 33709                           indf0	equ	0xFEF
 33710                           postinc0	equ	0xFEE
 33711                           fsr0h	equ	0xFEA
 33712                           fsr0l	equ	0xFE9
 33713                           wreg	equ	0xFE8
 33714                           indf1	equ	0xFE7
 33715                           postdec1	equ	0xFE5
 33716                           plusw1	equ	0xFE3
 33717                           fsr1h	equ	0xFE2
 33718                           fsr1l	equ	0xFE1
 33719                           indf2	equ	0xFDF
 33720                           postinc2	equ	0xFDE
 33721                           postdec2	equ	0xFDD
 33722                           plusw2	equ	0xFDB
 33723                           fsr2h	equ	0xFDA
 33724                           fsr2l	equ	0xFD9
 33725                           status	equ	0xFD8
 33726                           
 33727 ;; *************** function __flash_wakeup *****************
 33728 ;; Defined at:
 33729 ;;		line 128 in file "flash.c"
 33730 ;; Parameters:    Size  Location     Type
 33731 ;;		None
 33732 ;; Auto vars:     Size  Location     Type
 33733 ;;  command         1    8[COMRAM] unsigned char 
 33734 ;; Return value:  Size  Location     Type
 33735 ;;                  1    wreg      void 
 33736 ;; Registers used:
 33737 ;;		wreg, status,2, status,0, cstack
 33738 ;; Tracked objects:
 33739 ;;		On entry : 0/0
 33740 ;;		On exit  : 0/0
 33741 ;;		Unchanged: 0/0
 33742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33747 ;;Total ram usage:        1 bytes
 33748 ;; Hardware stack levels used:    1
 33749 ;; Hardware stack levels required when called:    1
 33750 ;; This function calls:
 33751 ;;		_spi_tx
 33752 ;; This function is called by:
 33753 ;;		__flash_is_busy
 33754 ;;		_flash_set_power_state
 33755 ;; This function uses a non-reentrant model
 33756 ;;
 33757                           
 33758                           	psect	text178
 33759  0065A2                     __ptext178:
 33760                           	opt stack 0
 33761  0065A2                     __flash_wakeup:
 33762                           	opt stack 25
 33763                           
 33764                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 33765                           
 33766                           ;incstack = 0
 33767  0065A2  D021               	goto	l1735
 33768  0065A4                     
 33769                           ;flash.c: 135: command = 0xAB;
 33770  0065A4  0EAB               	movlw	171
 33771  0065A6  6E09               	movwf	__flash_wakeup@command,c
 33772                           
 33773                           ;flash.c: 136: spi_tx(&command, 1);
 33774  0065A8  0E09               	movlw	low __flash_wakeup@command
 33775  0065AA  6E01               	movwf	spi_tx@data,c
 33776  0065AC  0E00               	movlw	high __flash_wakeup@command
 33777  0065AE  6E02               	movwf	spi_tx@data+1,c
 33778  0065B0  0E00               	movlw	0
 33779  0065B2  6E04               	movwf	spi_tx@length+1,c
 33780  0065B4  0E01               	movlw	1
 33781  0065B6  6E03               	movwf	spi_tx@length,c
 33782  0065B8  ECF9  F031         	call	_spi_tx	;wreg free
 33783                           
 33784                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 33785  0065BC  0E17               	movlw	23
 33786  0065BE                     u12997:
 33787  0065BE  2EE8               	decfsz	wreg,f,c
 33788  0065C0  D7FE               	bra	u12997
 33789  0065C2  F000               	nop	
 33790                           
 33791                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 33792  0065C4  0E00               	movlw	0
 33793  0065C6  0100               	movlb	0	; () banked
 33794  0065C8  6F97               	movwf	_power_state& (0+255),b
 33795                           
 33796                           ;flash.c: 139: break;
 33797  0065CA  0012               	return	
 33798  0065CC                     l1738:
 33799                           
 33800                           ; BSR set to: 0
 33801                           ;flash.c: 144: LATDbits.LD7 = 0;
 33802  0065CC  9E8C               	bcf	3980,7,c	;volatile
 33803                           
 33804                           ; BSR set to: 0
 33805                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 33806  0065CE  0E0D               	movlw	13
 33807  0065D0                     u13007:
 33808  0065D0  2EE8               	decfsz	wreg,f,c
 33809  0065D2  D7FE               	bra	u13007
 33810  0065D4  F000               	nop	
 33811                           
 33812                           ;flash.c: 146: LATDbits.LD7 = 1;
 33813  0065D6  8E8C               	bsf	3980,7,c	;volatile
 33814                           
 33815                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 33816  0065D8  0E50               	movlw	80
 33817  0065DA                     u13017:
 33818  0065DA  2EE8               	decfsz	wreg,f,c
 33819  0065DC  D7FE               	bra	u13017
 33820                           
 33821                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 33822  0065DE  0E00               	movlw	0
 33823  0065E0  0100               	movlb	0	; () banked
 33824  0065E2  6F97               	movwf	_power_state& (0+255),b
 33825                           
 33826                           ; BSR set to: 0
 33827                           ;flash.c: 150: }
 33828                           
 33829                           ;flash.c: 149: break;
 33830  0065E4  0012               	return	
 33831  0065E6                     l1735:
 33832                           
 33833                           ; BSR set to: 0
 33834  0065E6  0100               	movlb	0	; () banked
 33835  0065E8  5197               	movf	_power_state& (0+255),w,b
 33836                           
 33837                           ; Switch size 1, requested type "space"
 33838                           ; Number of cases is 2, Range of values is 1 to 2
 33839                           ; switch strategies available:
 33840                           ; Name         Instructions Cycles
 33841                           ; simple_byte            7     4 (average)
 33842                           ;	Chosen strategy is simple_byte
 33843  0065EA  0A01               	xorlw	1	; case 1
 33844  0065EC  B4D8               	btfsc	status,2,c
 33845  0065EE  D7DA               	goto	l1736
 33846  0065F0  0A03               	xorlw	3	; case 2
 33847  0065F2  A4D8               	btfss	status,2,c
 33848  0065F4  0012               	return	
 33849  0065F6  D7EA               	goto	l1738
 33850  0065F8                     __end_of__flash_wakeup:
 33851                           	opt stack 0
 33852                           tosu	equ	0xFFF
 33853                           tosh	equ	0xFFE
 33854                           tosl	equ	0xFFD
 33855                           pclath	equ	0xFFA
 33856                           tblptru	equ	0xFF8
 33857                           tblptrh	equ	0xFF7
 33858                           tblptrl	equ	0xFF6
 33859                           tablat	equ	0xFF5
 33860                           prodh	equ	0xFF4
 33861                           prodl	equ	0xFF3
 33862                           intcon	equ	0xFF2
 33863                           intcon2	equ	0xFF1
 33864                           intcon3	equ	0xFF0
 33865                           indf0	equ	0xFEF
 33866                           postinc0	equ	0xFEE
 33867                           fsr0h	equ	0xFEA
 33868                           fsr0l	equ	0xFE9
 33869                           wreg	equ	0xFE8
 33870                           indf1	equ	0xFE7
 33871                           postdec1	equ	0xFE5
 33872                           plusw1	equ	0xFE3
 33873                           fsr1h	equ	0xFE2
 33874                           fsr1l	equ	0xFE1
 33875                           indf2	equ	0xFDF
 33876                           postinc2	equ	0xFDE
 33877                           postdec2	equ	0xFDD
 33878                           plusw2	equ	0xFDB
 33879                           fsr2h	equ	0xFDA
 33880                           fsr2l	equ	0xFD9
 33881                           status	equ	0xFD8
 33882                           
 33883 ;; *************** function _spi_tx *****************
 33884 ;; Defined at:
 33885 ;;		line 108 in file "spi.c"
 33886 ;; Parameters:    Size  Location     Type
 33887 ;;  data            2    0[COMRAM] PTR unsigned char 
 33888 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 33889 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 33890 ;;  length          2    2[COMRAM] unsigned int 
 33891 ;; Auto vars:     Size  Location     Type
 33892 ;;		None
 33893 ;; Return value:  Size  Location     Type
 33894 ;;                  1    wreg      void 
 33895 ;; Registers used:
 33896 ;;		wreg, status,2, status,0
 33897 ;; Tracked objects:
 33898 ;;		On entry : 0/0
 33899 ;;		On exit  : 0/0
 33900 ;;		Unchanged: 0/0
 33901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33906 ;;Total ram usage:        8 bytes
 33907 ;; Hardware stack levels used:    1
 33908 ;; This function calls:
 33909 ;;		Nothing
 33910 ;; This function is called by:
 33911 ;;		__flash_set_page_size
 33912 ;;		__flash_wakeup
 33913 ;;		__flash_compare_page_to_buffer
 33914 ;;		__flash_write_page_from_buffer
 33915 ;;		__flash_copy_page_to_buffer
 33916 ;;		__flash_erase_page
 33917 ;;		_flash_set_power_state
 33918 ;; This function uses a non-reentrant model
 33919 ;;
 33920                           
 33921                           	psect	text179
 33922  0063F2                     __ptext179:
 33923                           	opt stack 0
 33924  0063F2                     _spi_tx:
 33925                           	opt stack 27
 33926                           
 33927                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 33928                           
 33929                           ; BSR set to: 0
 33930                           ;incstack = 0
 33931  0063F2  9E88               	bcf	3976,7,c	;volatile
 33932                           
 33933                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 33934  0063F4  9C88               	bcf	3976,6,c	;volatile
 33935                           
 33936                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 33937  0063F6  8A88               	bsf	3976,5,c	;volatile
 33938                           
 33939                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 33940  0063F8  9888               	bcf	3976,4,c	;volatile
 33941                           
 33942                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 33943  0063FA  9688               	bcf	3976,3,c	;volatile
 33944                           
 33945                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 33946  0063FC  8488               	bsf	3976,2,c	;volatile
 33947                           
 33948                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 33949  0063FE  9288               	bcf	3976,1,c	;volatile
 33950                           
 33951                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 33952  006400  9886               	bcf	3974,4,c	;volatile
 33953  006402  9A86               	bcf	3974,5,c	;volatile
 33954  006404  9C86               	bcf	3974,6,c	;volatile
 33955  006406  9E86               	bcf	3974,7,c	;volatile
 33956                           
 33957                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 33958  006408  9086               	bcf	3974,0,c	;volatile
 33959  00640A  9286               	bcf	3974,1,c	;volatile
 33960  00640C  9486               	bcf	3974,2,c	;volatile
 33961  00640E  9686               	bcf	3974,3,c	;volatile
 33962                           
 33963                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33964  006410  5002               	movf	spi_tx@data+1,w,c
 33965  006412  6E6A               	movwf	3946,c	;volatile
 33966                           
 33967                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33968  006414  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 33969                           
 33970                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 33971  006418  0EFF               	movlw	255
 33972  00641A  6E05               	movwf	??_spi_tx& (0+255),c
 33973  00641C  0EFF               	movlw	255
 33974  00641E  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 33975  006420  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 33976  006424  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 33977  006428  5005               	movf	??_spi_tx,w,c
 33978  00642A  2607               	addwf	??_spi_tx+2,f,c
 33979  00642C  5006               	movf	??_spi_tx+1,w,c
 33980  00642E  2208               	addwfc	??_spi_tx+3,f,c
 33981  006430  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 33982  006434  6A08               	clrf	??_spi_tx+3,c
 33983  006436  5007               	movf	??_spi_tx+2,w,c
 33984  006438  6E66               	movwf	3942,c	;volatile
 33985                           
 33986                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 33987  00643A  0403               	decf	spi_tx@length,w,c
 33988  00643C  6E67               	movwf	3943,c	;volatile
 33989                           
 33990                           ;spi.c: 136: LATDbits.LD7 = 0;
 33991  00643E  9E8C               	bcf	3980,7,c	;volatile
 33992                           
 33993                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 33994  006440  8088               	bsf	3976,0,c	;volatile
 33995  006442  B088               	btfsc	3976,0,c	;volatile
 33996  006444  D7FE               	goto	l2791
 33997                           
 33998                           ;spi.c: 139: LATDbits.LD7 = 1;
 33999  006446  8E8C               	bsf	3980,7,c	;volatile
 34000  006448  0012               	return		;funcret
 34001  00644A                     __end_of_spi_tx:
 34002                           	opt stack 0
 34003                           tosu	equ	0xFFF
 34004                           tosh	equ	0xFFE
 34005                           tosl	equ	0xFFD
 34006                           pclath	equ	0xFFA
 34007                           tblptru	equ	0xFF8
 34008                           tblptrh	equ	0xFF7
 34009                           tblptrl	equ	0xFF6
 34010                           tablat	equ	0xFF5
 34011                           prodh	equ	0xFF4
 34012                           prodl	equ	0xFF3
 34013                           intcon	equ	0xFF2
 34014                           intcon2	equ	0xFF1
 34015                           intcon3	equ	0xFF0
 34016                           indf0	equ	0xFEF
 34017                           postinc0	equ	0xFEE
 34018                           fsr0h	equ	0xFEA
 34019                           fsr0l	equ	0xFE9
 34020                           wreg	equ	0xFE8
 34021                           indf1	equ	0xFE7
 34022                           postdec1	equ	0xFE5
 34023                           plusw1	equ	0xFE3
 34024                           fsr1h	equ	0xFE2
 34025                           fsr1l	equ	0xFE1
 34026                           indf2	equ	0xFDF
 34027                           postinc2	equ	0xFDE
 34028                           postdec2	equ	0xFDD
 34029                           plusw2	equ	0xFDB
 34030                           fsr2h	equ	0xFDA
 34031                           fsr2l	equ	0xFD9
 34032                           status	equ	0xFD8
 34033                           
 34034 ;; *************** function __flash_get_status *****************
 34035 ;; Defined at:
 34036 ;;		line 117 in file "flash.c"
 34037 ;; Parameters:    Size  Location     Type
 34038 ;;		None
 34039 ;; Auto vars:     Size  Location     Type
 34040 ;;  status          2   15[COMRAM] unsigned int 
 34041 ;;  command         1   14[COMRAM] unsigned char 
 34042 ;; Return value:  Size  Location     Type
 34043 ;;                  2   12[COMRAM] unsigned int 
 34044 ;; Registers used:
 34045 ;;		wreg, status,2, status,0, cstack
 34046 ;; Tracked objects:
 34047 ;;		On entry : 0/0
 34048 ;;		On exit  : 0/0
 34049 ;;		Unchanged: 0/0
 34050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34052 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34054 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34055 ;;Total ram usage:        5 bytes
 34056 ;; Hardware stack levels used:    1
 34057 ;; Hardware stack levels required when called:    1
 34058 ;; This function calls:
 34059 ;;		_spi_tx_rx
 34060 ;; This function is called by:
 34061 ;;		__flash_compare_page_to_buffer
 34062 ;;		__flash_is_busy
 34063 ;; This function uses a non-reentrant model
 34064 ;;
 34065                           
 34066                           	psect	text180
 34067  006CA0                     __ptext180:
 34068                           	opt stack 0
 34069  006CA0                     __flash_get_status:
 34070                           	opt stack 25
 34071                           
 34072                           ;flash.c: 121: uint8_t command = 0xD7;
 34073                           
 34074                           ;incstack = 0
 34075  006CA0  0ED7               	movlw	215
 34076  006CA2  6E0F               	movwf	__flash_get_status@command,c
 34077                           
 34078                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 34079  006CA4  0E0F               	movlw	low __flash_get_status@command
 34080  006CA6  6E01               	movwf	spi_tx_rx@command,c
 34081  006CA8  0E00               	movlw	high __flash_get_status@command
 34082  006CAA  6E02               	movwf	spi_tx_rx@command+1,c
 34083  006CAC  0E00               	movlw	0
 34084  006CAE  6E04               	movwf	spi_tx_rx@command_length+1,c
 34085  006CB0  0E01               	movlw	1
 34086  006CB2  6E03               	movwf	spi_tx_rx@command_length,c
 34087  006CB4  0E10               	movlw	low __flash_get_status@status
 34088  006CB6  6E05               	movwf	spi_tx_rx@data,c
 34089  006CB8  0E00               	movlw	high __flash_get_status@status
 34090  006CBA  6E06               	movwf	spi_tx_rx@data+1,c
 34091  006CBC  0E00               	movlw	0
 34092  006CBE  6E08               	movwf	spi_tx_rx@data_length+1,c
 34093  006CC0  0E02               	movlw	2
 34094  006CC2  6E07               	movwf	spi_tx_rx@data_length,c
 34095  006CC4  ECF2  F02B         	call	_spi_tx_rx	;wreg free
 34096                           
 34097                           ;flash.c: 124: return status;
 34098  006CC8  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 34099  006CCC  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 34100  006CD0  0012               	return	
 34101  006CD2                     __end_of__flash_get_status:
 34102                           	opt stack 0
 34103                           tosu	equ	0xFFF
 34104                           tosh	equ	0xFFE
 34105                           tosl	equ	0xFFD
 34106                           pclath	equ	0xFFA
 34107                           tblptru	equ	0xFF8
 34108                           tblptrh	equ	0xFF7
 34109                           tblptrl	equ	0xFF6
 34110                           tablat	equ	0xFF5
 34111                           prodh	equ	0xFF4
 34112                           prodl	equ	0xFF3
 34113                           intcon	equ	0xFF2
 34114                           intcon2	equ	0xFF1
 34115                           intcon3	equ	0xFF0
 34116                           indf0	equ	0xFEF
 34117                           postinc0	equ	0xFEE
 34118                           fsr0h	equ	0xFEA
 34119                           fsr0l	equ	0xFE9
 34120                           wreg	equ	0xFE8
 34121                           indf1	equ	0xFE7
 34122                           postdec1	equ	0xFE5
 34123                           plusw1	equ	0xFE3
 34124                           fsr1h	equ	0xFE2
 34125                           fsr1l	equ	0xFE1
 34126                           indf2	equ	0xFDF
 34127                           postinc2	equ	0xFDE
 34128                           postdec2	equ	0xFDD
 34129                           plusw2	equ	0xFDB
 34130                           fsr2h	equ	0xFDA
 34131                           fsr2l	equ	0xFD9
 34132                           status	equ	0xFD8
 34133                           
 34134 ;; *************** function _spi_tx_rx *****************
 34135 ;; Defined at:
 34136 ;;		line 199 in file "spi.c"
 34137 ;; Parameters:    Size  Location     Type
 34138 ;;  command         2    0[COMRAM] PTR unsigned char 
 34139 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 34140 ;;  command_leng    2    2[COMRAM] unsigned int 
 34141 ;;  data            2    4[COMRAM] PTR unsigned char 
 34142 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 34143 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 34144 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 34145 ;;		 -> _flash_get_status@status(2), msd_buffer(512), 
 34146 ;;  data_length     2    6[COMRAM] unsigned int 
 34147 ;; Auto vars:     Size  Location     Type
 34148 ;;		None
 34149 ;; Return value:  Size  Location     Type
 34150 ;;                  1    wreg      void 
 34151 ;; Registers used:
 34152 ;;		wreg, status,2, status,0
 34153 ;; Tracked objects:
 34154 ;;		On entry : 0/0
 34155 ;;		On exit  : 0/0
 34156 ;;		Unchanged: 0/0
 34157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34161 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34162 ;;Total ram usage:       12 bytes
 34163 ;; Hardware stack levels used:    1
 34164 ;; This function calls:
 34165 ;;		Nothing
 34166 ;; This function is called by:
 34167 ;;		__flash_get_status
 34168 ;;		__flash_partial_read
 34169 ;;		__flash_buffer_read
 34170 ;; This function uses a non-reentrant model
 34171 ;;
 34172                           
 34173                           	psect	text181
 34174  0057E4                     __ptext181:
 34175                           	opt stack 0
 34176  0057E4                     _spi_tx_rx:
 34177                           	opt stack 25
 34178                           
 34179                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 34180                           
 34181                           ;incstack = 0
 34182  0057E4  9E88               	bcf	3976,7,c	;volatile
 34183                           
 34184                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 34185  0057E6  9C88               	bcf	3976,6,c	;volatile
 34186                           
 34187                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 34188  0057E8  8A88               	bsf	3976,5,c	;volatile
 34189                           
 34190                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 34191  0057EA  9888               	bcf	3976,4,c	;volatile
 34192                           
 34193                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 34194  0057EC  9688               	bcf	3976,3,c	;volatile
 34195                           
 34196                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 34197  0057EE  8488               	bsf	3976,2,c	;volatile
 34198                           
 34199                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 34200  0057F0  9288               	bcf	3976,1,c	;volatile
 34201                           
 34202                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 34203  0057F2  9886               	bcf	3974,4,c	;volatile
 34204  0057F4  9A86               	bcf	3974,5,c	;volatile
 34205  0057F6  9C86               	bcf	3974,6,c	;volatile
 34206  0057F8  9E86               	bcf	3974,7,c	;volatile
 34207                           
 34208                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 34209  0057FA  9086               	bcf	3974,0,c	;volatile
 34210  0057FC  9286               	bcf	3974,1,c	;volatile
 34211  0057FE  9486               	bcf	3974,2,c	;volatile
 34212  005800  9686               	bcf	3974,3,c	;volatile
 34213                           
 34214                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34215  005802  5002               	movf	spi_tx_rx@command+1,w,c
 34216  005804  6E6A               	movwf	3946,c	;volatile
 34217                           
 34218                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34219  005806  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 34220                           
 34221                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34222  00580A  0EFF               	movlw	255
 34223  00580C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34224  00580E  0EFF               	movlw	255
 34225  005810  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34226  005812  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 34227  005816  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 34228  00581A  5009               	movf	??_spi_tx_rx,w,c
 34229  00581C  260B               	addwf	??_spi_tx_rx+2,f,c
 34230  00581E  500A               	movf	??_spi_tx_rx+1,w,c
 34231  005820  220C               	addwfc	??_spi_tx_rx+3,f,c
 34232  005822  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34233  005826  6A0C               	clrf	??_spi_tx_rx+3,c
 34234  005828  500B               	movf	??_spi_tx_rx+2,w,c
 34235  00582A  6E66               	movwf	3942,c	;volatile
 34236                           
 34237                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34238  00582C  0403               	decf	spi_tx_rx@command_length,w,c
 34239  00582E  6E67               	movwf	3943,c	;volatile
 34240                           
 34241                           ;spi.c: 227: LATDbits.LD7 = 0;
 34242  005830  9E8C               	bcf	3980,7,c	;volatile
 34243                           
 34244                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 34245  005832  8088               	bsf	3976,0,c	;volatile
 34246  005834  B088               	btfsc	3976,0,c	;volatile
 34247  005836  D7FE               	goto	l2806
 34248                           
 34249                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 34250  005838  9A88               	bcf	3976,5,c	;volatile
 34251                           
 34252                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 34253  00583A  8888               	bsf	3976,4,c	;volatile
 34254                           
 34255                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 34256  00583C  9688               	bcf	3976,3,c	;volatile
 34257                           
 34258                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 34259  00583E  9488               	bcf	3976,2,c	;volatile
 34260                           
 34261                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34262  005840  5006               	movf	spi_tx_rx@data+1,w,c
 34263  005842  6E68               	movwf	3944,c	;volatile
 34264                           
 34265                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34266  005844  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 34267                           
 34268                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34269  005848  0EFF               	movlw	255
 34270  00584A  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34271  00584C  0EFF               	movlw	255
 34272  00584E  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34273  005850  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 34274  005854  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 34275  005858  5009               	movf	??_spi_tx_rx,w,c
 34276  00585A  260B               	addwf	??_spi_tx_rx+2,f,c
 34277  00585C  500A               	movf	??_spi_tx_rx+1,w,c
 34278  00585E  220C               	addwfc	??_spi_tx_rx+3,f,c
 34279  005860  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34280  005864  6A0C               	clrf	??_spi_tx_rx+3,c
 34281  005866  500B               	movf	??_spi_tx_rx+2,w,c
 34282  005868  6E66               	movwf	3942,c	;volatile
 34283                           
 34284                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34285  00586A  0407               	decf	spi_tx_rx@data_length,w,c
 34286  00586C  6E67               	movwf	3943,c	;volatile
 34287                           
 34288                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 34289  00586E  8088               	bsf	3976,0,c	;volatile
 34290  005870  B088               	btfsc	3976,0,c	;volatile
 34291  005872  D7FE               	goto	l2809
 34292                           
 34293                           ;spi.c: 254: LATDbits.LD7 = 1;
 34294  005874  8E8C               	bsf	3980,7,c	;volatile
 34295  005876  0012               	return		;funcret
 34296  005878                     __end_of_spi_tx_rx:
 34297                           	opt stack 0
 34298                           tosu	equ	0xFFF
 34299                           tosh	equ	0xFFE
 34300                           tosl	equ	0xFFD
 34301                           pclath	equ	0xFFA
 34302                           tblptru	equ	0xFF8
 34303                           tblptrh	equ	0xFF7
 34304                           tblptrl	equ	0xFF6
 34305                           tablat	equ	0xFF5
 34306                           prodh	equ	0xFF4
 34307                           prodl	equ	0xFF3
 34308                           intcon	equ	0xFF2
 34309                           intcon2	equ	0xFF1
 34310                           intcon3	equ	0xFF0
 34311                           indf0	equ	0xFEF
 34312                           postinc0	equ	0xFEE
 34313                           fsr0h	equ	0xFEA
 34314                           fsr0l	equ	0xFE9
 34315                           wreg	equ	0xFE8
 34316                           indf1	equ	0xFE7
 34317                           postdec1	equ	0xFE5
 34318                           plusw1	equ	0xFE3
 34319                           fsr1h	equ	0xFE2
 34320                           fsr1l	equ	0xFE1
 34321                           indf2	equ	0xFDF
 34322                           postinc2	equ	0xFDE
 34323                           postdec2	equ	0xFDD
 34324                           plusw2	equ	0xFDB
 34325                           fsr2h	equ	0xFDA
 34326                           fsr2l	equ	0xFD9
 34327                           status	equ	0xFD8
 34328                           
 34329 ;; *************** function __get_root *****************
 34330 ;; Defined at:
 34331 ;;		line 1210 in file "fat16.c"
 34332 ;; Parameters:    Size  Location     Type
 34333 ;;  idx             2    0[COMRAM] unsigned int 
 34334 ;; Auto vars:     Size  Location     Type
 34335 ;;		None
 34336 ;; Return value:  Size  Location     Type
 34337 ;;                  1    wreg      unsigned char 
 34338 ;; Registers used:
 34339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34340 ;; Tracked objects:
 34341 ;;		On entry : 0/0
 34342 ;;		On exit  : 0/0
 34343 ;;		Unchanged: 0/0
 34344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34345 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34347 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34349 ;;Total ram usage:        6 bytes
 34350 ;; Hardware stack levels used:    1
 34351 ;; This function calls:
 34352 ;;		Nothing
 34353 ;; This function is called by:
 34354 ;;		_fat_format
 34355 ;; This function uses a non-reentrant model
 34356 ;;
 34357                           
 34358                           	psect	text182
 34359  002984                     __ptext182:
 34360                           	opt stack 0
 34361  002984                     __get_root:
 34362                           	opt stack 27
 34363                           
 34364                           ;fat16.c: 1212: if(idx < 0x20)
 34365                           
 34366                           ;incstack = 0
 34367  002984  5002               	movf	__get_root@idx+1,w,c
 34368  002986  E11D               	bnz	l11514
 34369  002988  0E20               	movlw	32
 34370  00298A  5C01               	subwf	__get_root@idx,w,c
 34371  00298C  B0D8               	btfsc	status,0,c
 34372  00298E  D019               	goto	l2212
 34373                           
 34374                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 34375  002990  5002               	movf	__get_root@idx+1,w,c
 34376  002992  E110               	bnz	l11508
 34377  002994  0E0B               	movlw	11
 34378  002996  5C01               	subwf	__get_root@idx,w,c
 34379  002998  B0D8               	btfsc	status,0,c
 34380  00299A  D00C               	goto	l2210
 34381                           
 34382                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
 34383  00299C  0EDC               	movlw	low STR_9
 34384  00299E  2401               	addwf	__get_root@idx,w,c
 34385  0029A0  6EF6               	movwf	tblptrl,c
 34386  0029A2  0E8F               	movlw	high STR_9
 34387  0029A4  2002               	addwfc	__get_root@idx+1,w,c
 34388  0029A6  6EF7               	movwf	tblptrh,c
 34389  0029A8                     	if	1	;There are 3 active tblptr bytes
 34390  0029A8  6AF8               	clrf	tblptru,c
 34391  0029AA  0E00               	movlw	low (__mediumconst shr (0+16))
 34392  0029AC  22F8               	addwfc	tblptru,f,c
 34393  0029AE                     	endif
 34394  0029AE  0008               	tblrd		*
 34395  0029B0  50F5               	movf	tablat,w,c
 34396  0029B2  0012               	return	
 34397  0029B4                     l2210:
 34398  0029B4                     l11508:
 34399                           
 34400                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 34401  0029B4  0E0B               	movlw	11
 34402  0029B6  1801               	xorwf	__get_root@idx,w,c
 34403  0029B8  1002               	iorwf	__get_root@idx+1,w,c
 34404  0029BA  A4D8               	btfss	status,2,c
 34405  0029BC  D002               	goto	l2212
 34406                           
 34407                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 34408  0029BE  0E08               	movlw	8
 34409  0029C0  0012               	return	
 34410  0029C2                     l2212:
 34411  0029C2                     l11514:
 34412                           
 34413                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 34414  0029C2  5002               	movf	__get_root@idx+1,w,c
 34415  0029C4  E103               	bnz	u8631
 34416  0029C6  0E40               	movlw	64
 34417  0029C8  5C01               	subwf	__get_root@idx,w,c
 34418  0029CA  B0D8               	btfsc	status,0,c
 34419  0029CC                     u8631:
 34420  0029CC  D0A4               	goto	l2238
 34421                           
 34422                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 34423  0029CE  0E20               	movlw	32
 34424  0029D0  5E01               	subwf	__get_root@idx,f,c
 34425  0029D2  0E00               	movlw	0
 34426  0029D4  5A02               	subwfb	__get_root@idx+1,f,c
 34427                           
 34428                           ;fat16.c: 1226: if(idx < 0+8)
 34429  0029D6  5002               	movf	__get_root@idx+1,w,c
 34430  0029D8  E110               	bnz	l11522
 34431  0029DA  0E08               	movlw	8
 34432  0029DC  5C01               	subwf	__get_root@idx,w,c
 34433  0029DE  B0D8               	btfsc	status,0,c
 34434  0029E0  D00C               	goto	l2214
 34435                           
 34436                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 34437  0029E2  0EE8               	movlw	low STR_10
 34438  0029E4  2401               	addwf	__get_root@idx,w,c
 34439  0029E6  6EF6               	movwf	tblptrl,c
 34440  0029E8  0E8F               	movlw	high STR_10
 34441  0029EA  2002               	addwfc	__get_root@idx+1,w,c
 34442  0029EC  6EF7               	movwf	tblptrh,c
 34443  0029EE                     	if	1	;There are 3 active tblptr bytes
 34444  0029EE  6AF8               	clrf	tblptru,c
 34445  0029F0  0E00               	movlw	low (__mediumconst shr (0+16))
 34446  0029F2  22F8               	addwfc	tblptru,f,c
 34447  0029F4                     	endif
 34448  0029F4  0008               	tblrd		*
 34449  0029F6  50F5               	movf	tablat,w,c
 34450  0029F8  0012               	return	
 34451  0029FA                     l2214:
 34452  0029FA                     l11522:
 34453                           
 34454                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 34455  0029FA  5002               	movf	__get_root@idx+1,w,c
 34456  0029FC  E146               	bnz	l11614
 34457  0029FE  0E0B               	movlw	11
 34458  002A00  5C01               	subwf	__get_root@idx,w,c
 34459  002A02  B0D8               	btfsc	status,0,c
 34460  002A04  D042               	goto	l2216
 34461                           
 34462                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 34463  002A06  0EF8               	movlw	248
 34464  002A08  6E03               	movwf	??__get_root& (0+255),c
 34465  002A0A  0EFF               	movlw	255
 34466  002A0C  6E04               	movwf	(??__get_root+1)& (0+255),c
 34467  002A0E  C001  F005         	movff	__get_root@idx,??__get_root+2
 34468  002A12  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 34469  002A16  5003               	movf	??__get_root,w,c
 34470  002A18  2605               	addwf	??__get_root+2,f,c
 34471  002A1A  5004               	movf	??__get_root+1,w,c
 34472  002A1C  2206               	addwfc	??__get_root+3,f,c
 34473  002A1E  0EFA               	movlw	low STR_11
 34474  002A20  2405               	addwf	??__get_root+2,w,c
 34475  002A22  6EF6               	movwf	tblptrl,c
 34476  002A24  0E8F               	movlw	high STR_11
 34477  002A26  2006               	addwfc	??__get_root+3,w,c
 34478  002A28  6EF7               	movwf	tblptrh,c
 34479  002A2A                     	if	1	;There are 3 active tblptr bytes
 34480  002A2A  6AF8               	clrf	tblptru,c
 34481  002A2C  0E00               	movlw	low (__mediumconst shr (0+16))
 34482  002A2E  22F8               	addwfc	tblptru,f,c
 34483  002A30                     	endif
 34484  002A30  0008               	tblrd		*
 34485  002A32  50F5               	movf	tablat,w,c
 34486  002A34  0012               	return	
 34487  002A36                     
 34488                           ;fat16.c: 1237: return 0x20;
 34489  002A36  0E20               	movlw	32
 34490  002A38  0012               	return	
 34491  002A3A                     
 34492                           ;fat16.c: 1239: return 0x06;
 34493  002A3A  0E06               	movlw	6
 34494  002A3C  0012               	return	
 34495  002A3E                     
 34496                           ;fat16.c: 1241: return 0x28;
 34497  002A3E  0E28               	movlw	40
 34498  002A40  0012               	return	
 34499  002A42                     
 34500                           ;fat16.c: 1243: return 0x78;
 34501  002A42  0E78               	movlw	120
 34502  002A44  0012               	return	
 34503  002A46                     
 34504                           ;fat16.c: 1245: return 0xDE;
 34505  002A46  0EDE               	movlw	222
 34506  002A48  0012               	return	
 34507  002A4A                     
 34508                           ;fat16.c: 1247: return 0x38;
 34509  002A4A  0E38               	movlw	56
 34510  002A4C  0012               	return	
 34511  002A4E                     
 34512                           ;fat16.c: 1249: return 0x5F;
 34513  002A4E  0E5F               	movlw	95
 34514  002A50  0012               	return	
 34515  002A52                     
 34516                           ;fat16.c: 1251: return 0x4B;
 34517  002A52  0E4B               	movlw	75
 34518  002A54  0012               	return	
 34519  002A56                     
 34520                           ;fat16.c: 1253: return 0x00;
 34521  002A56  0E00               	movlw	0
 34522  002A58  0012               	return	
 34523  002A5A                     
 34524                           ;fat16.c: 1255: return 0x00;
 34525  002A5A  0E00               	movlw	0
 34526  002A5C  0012               	return	
 34527  002A5E                     
 34528                           ;fat16.c: 1257: return 0x04;
 34529  002A5E  0E04               	movlw	4
 34530  002A60  0012               	return	
 34531  002A62                     
 34532                           ;fat16.c: 1259: return 0x77;
 34533  002A62  0E77               	movlw	119
 34534  002A64  0012               	return	
 34535  002A66                     
 34536                           ;fat16.c: 1261: return 0xDE;
 34537  002A66  0EDE               	movlw	222
 34538  002A68  0012               	return	
 34539  002A6A                     
 34540                           ;fat16.c: 1263: return 0x38;
 34541  002A6A  0E38               	movlw	56
 34542  002A6C  0012               	return	
 34543  002A6E                     
 34544                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 34545  002A6E  0E02               	movlw	2
 34546  002A70  0012               	return	
 34547  002A72                     
 34548                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 34549  002A72  0E00               	movlw	0
 34550  002A74  0012               	return	
 34551  002A76                     
 34552                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 34553  002A76  0E0C               	movlw	12
 34554  002A78  0012               	return	
 34555  002A7A                     
 34556                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 34557  002A7A  0E00               	movlw	0
 34558  002A7C  0012               	return	
 34559  002A7E                     
 34560                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 34561  002A7E  0E00               	movlw	0
 34562  002A80  0012               	return	
 34563  002A82                     
 34564                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34565  002A82  0E00               	movlw	0
 34566  002A84  0012               	return	
 34567  002A86                     
 34568                           ;fat16.c: 1277: return 0x00;
 34569  002A86  0E00               	movlw	0
 34570  002A88  0012               	return	
 34571  002A8A                     l2216:
 34572  002A8A                     l11614:
 34573  002A8A  C001  F003         	movff	__get_root@idx,??__get_root
 34574  002A8E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 34575                           
 34576                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34577                           ; Switch size 1, requested type "space"
 34578                           ; Number of cases is 1, Range of values is 0 to 0
 34579                           ; switch strategies available:
 34580                           ; Name         Instructions Cycles
 34581                           ; simple_byte            4     3 (average)
 34582                           ;	Chosen strategy is simple_byte
 34583  002A92  5004               	movf	??__get_root+1,w,c
 34584  002A94  0A00               	xorlw	0	; case 0
 34585  002A96  A4D8               	btfss	status,2,c
 34586  002A98  D7F6               	goto	l2237
 34587                           
 34588                           ; Switch size 1, requested type "space"
 34589                           ; Number of cases is 20, Range of values is 11 to 31
 34590                           ; switch strategies available:
 34591                           ; Name         Instructions Cycles
 34592                           ; simple_byte           61    31 (average)
 34593                           ;	Chosen strategy is simple_byte
 34594  002A9A  5003               	movf	??__get_root,w,c
 34595  002A9C  0A0B               	xorlw	11	; case 11
 34596  002A9E  B4D8               	btfsc	status,2,c
 34597  002AA0  D7CA               	goto	l2217
 34598  002AA2  0A06               	xorlw	6	; case 13
 34599  002AA4  B4D8               	btfsc	status,2,c
 34600  002AA6  D7C9               	goto	l2218
 34601  002AA8  0A03               	xorlw	3	; case 14
 34602  002AAA  B4D8               	btfsc	status,2,c
 34603  002AAC  D7C8               	goto	l2219
 34604  002AAE  0A01               	xorlw	1	; case 15
 34605  002AB0  B4D8               	btfsc	status,2,c
 34606  002AB2  D7C7               	goto	l2220
 34607  002AB4  0A1F               	xorlw	31	; case 16
 34608  002AB6  B4D8               	btfsc	status,2,c
 34609  002AB8  D7C6               	goto	l2221
 34610  002ABA  0A01               	xorlw	1	; case 17
 34611  002ABC  B4D8               	btfsc	status,2,c
 34612  002ABE  D7C5               	goto	l2222
 34613  002AC0  0A03               	xorlw	3	; case 18
 34614  002AC2  B4D8               	btfsc	status,2,c
 34615  002AC4  D7C4               	goto	l2223
 34616  002AC6  0A01               	xorlw	1	; case 19
 34617  002AC8  B4D8               	btfsc	status,2,c
 34618  002ACA  D7C3               	goto	l2224
 34619  002ACC  0A07               	xorlw	7	; case 20
 34620  002ACE  B4D8               	btfsc	status,2,c
 34621  002AD0  D7C2               	goto	l2225
 34622  002AD2  0A01               	xorlw	1	; case 21
 34623  002AD4  B4D8               	btfsc	status,2,c
 34624  002AD6  D7C1               	goto	l2226
 34625  002AD8  0A03               	xorlw	3	; case 22
 34626  002ADA  B4D8               	btfsc	status,2,c
 34627  002ADC  D7C0               	goto	l2227
 34628  002ADE  0A01               	xorlw	1	; case 23
 34629  002AE0  B4D8               	btfsc	status,2,c
 34630  002AE2  D7BF               	goto	l2228
 34631  002AE4  0A0F               	xorlw	15	; case 24
 34632  002AE6  B4D8               	btfsc	status,2,c
 34633  002AE8  D7BE               	goto	l2229
 34634  002AEA  0A01               	xorlw	1	; case 25
 34635  002AEC  B4D8               	btfsc	status,2,c
 34636  002AEE  D7BD               	goto	l2230
 34637  002AF0  0A03               	xorlw	3	; case 26
 34638  002AF2  B4D8               	btfsc	status,2,c
 34639  002AF4  D7BC               	goto	l2231
 34640  002AF6  0A01               	xorlw	1	; case 27
 34641  002AF8  B4D8               	btfsc	status,2,c
 34642  002AFA  D7BB               	goto	l2232
 34643  002AFC  0A07               	xorlw	7	; case 28
 34644  002AFE  B4D8               	btfsc	status,2,c
 34645  002B00  D7BA               	goto	l2233
 34646  002B02  0A01               	xorlw	1	; case 29
 34647  002B04  B4D8               	btfsc	status,2,c
 34648  002B06  D7B9               	goto	l2234
 34649  002B08  0A03               	xorlw	3	; case 30
 34650  002B0A  B4D8               	btfsc	status,2,c
 34651  002B0C  D7B8               	goto	l2235
 34652  002B0E  0A01               	xorlw	1	; case 31
 34653  002B10  B4D8               	btfsc	status,2,c
 34654  002B12  D7B7               	goto	l2236
 34655  002B14  D7B8               	goto	l2237
 34656  002B16                     l2238:
 34657                           
 34658                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 34659  002B16  0E00               	movlw	0
 34660  002B18  0012               	return	
 34661  002B1A                     __end_of__get_root:
 34662                           	opt stack 0
 34663                           tosu	equ	0xFFF
 34664                           tosh	equ	0xFFE
 34665                           tosl	equ	0xFFD
 34666                           pclath	equ	0xFFA
 34667                           tblptru	equ	0xFF8
 34668                           tblptrh	equ	0xFF7
 34669                           tblptrl	equ	0xFF6
 34670                           tablat	equ	0xFF5
 34671                           prodh	equ	0xFF4
 34672                           prodl	equ	0xFF3
 34673                           intcon	equ	0xFF2
 34674                           intcon2	equ	0xFF1
 34675                           intcon3	equ	0xFF0
 34676                           indf0	equ	0xFEF
 34677                           postinc0	equ	0xFEE
 34678                           fsr0h	equ	0xFEA
 34679                           fsr0l	equ	0xFE9
 34680                           wreg	equ	0xFE8
 34681                           indf1	equ	0xFE7
 34682                           postdec1	equ	0xFE5
 34683                           plusw1	equ	0xFE3
 34684                           fsr1h	equ	0xFE2
 34685                           fsr1l	equ	0xFE1
 34686                           indf2	equ	0xFDF
 34687                           postinc2	equ	0xFDE
 34688                           postdec2	equ	0xFDD
 34689                           plusw2	equ	0xFDB
 34690                           fsr2h	equ	0xFDA
 34691                           fsr2l	equ	0xFD9
 34692                           status	equ	0xFD8
 34693                           
 34694 ;; *************** function __get_mbr *****************
 34695 ;; Defined at:
 34696 ;;		line 1037 in file "fat16.c"
 34697 ;; Parameters:    Size  Location     Type
 34698 ;;  idx             2    0[COMRAM] unsigned int 
 34699 ;; Auto vars:     Size  Location     Type
 34700 ;;		None
 34701 ;; Return value:  Size  Location     Type
 34702 ;;                  1    wreg      unsigned char 
 34703 ;; Registers used:
 34704 ;;		wreg, status,2, status,0
 34705 ;; Tracked objects:
 34706 ;;		On entry : 0/0
 34707 ;;		On exit  : 0/0
 34708 ;;		Unchanged: 0/0
 34709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34714 ;;Total ram usage:        4 bytes
 34715 ;; Hardware stack levels used:    1
 34716 ;; This function calls:
 34717 ;;		Nothing
 34718 ;; This function is called by:
 34719 ;;		_fat_get_format_status
 34720 ;;		_fat_format
 34721 ;; This function uses a non-reentrant model
 34722 ;;
 34723                           
 34724                           	psect	text183
 34725  004B12                     __ptext183:
 34726                           	opt stack 0
 34727  004B12                     __get_mbr:
 34728                           	opt stack 27
 34729                           
 34730                           ;fat16.c: 1039: switch (idx)
 34731                           
 34732                           ;incstack = 0
 34733  004B12  D026               	goto	l2119
 34734  004B14                     
 34735                           ;fat16.c: 1042: return 0x80;
 34736  004B14  0E80               	movlw	128
 34737  004B16  0012               	return	
 34738  004B18                     
 34739                           ;fat16.c: 1044: return 0;
 34740  004B18  0E00               	movlw	0
 34741  004B1A  0012               	return	
 34742  004B1C                     
 34743                           ;fat16.c: 1046: return 2;
 34744  004B1C  0E02               	movlw	2
 34745  004B1E  0012               	return	
 34746  004B20                     
 34747                           ;fat16.c: 1048: return 0;
 34748  004B20  0E00               	movlw	0
 34749  004B22  0012               	return	
 34750  004B24                     
 34751                           ;fat16.c: 1050: return 0x04;
 34752  004B24  0E04               	movlw	4
 34753  004B26  0012               	return	
 34754  004B28                     
 34755                           ;fat16.c: 1052: return 2;
 34756  004B28  0E02               	movlw	2
 34757  004B2A  0012               	return	
 34758  004B2C                     
 34759                           ;fat16.c: 1054: return 3;
 34760  004B2C  0E03               	movlw	3
 34761  004B2E  0012               	return	
 34762  004B30                     
 34763                           ;fat16.c: 1056: return 8;
 34764  004B30  0E08               	movlw	8
 34765  004B32  0012               	return	
 34766  004B34                     
 34767                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 34768  004B34  0E01               	movlw	1
 34769  004B36  0012               	return	
 34770  004B38                     
 34771                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 34772  004B38  0E00               	movlw	0
 34773  004B3A  0012               	return	
 34774  004B3C                     
 34775                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 34776  004B3C  0E00               	movlw	0
 34777  004B3E  0012               	return	
 34778  004B40                     
 34779                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34780  004B40  0E00               	movlw	0
 34781  004B42  0012               	return	
 34782  004B44                     
 34783                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 34784  004B44  0EFF               	movlw	255
 34785  004B46  0012               	return	
 34786  004B48                     
 34787                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 34788  004B48  0E1F               	movlw	31
 34789  004B4A  0012               	return	
 34790  004B4C                     
 34791                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 34792  004B4C  0E00               	movlw	0
 34793  004B4E  0012               	return	
 34794  004B50                     
 34795                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 34796  004B50  0E00               	movlw	0
 34797  004B52  0012               	return	
 34798  004B54                     
 34799                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 34800  004B54  0E55               	movlw	85
 34801  004B56  0012               	return	
 34802  004B58                     
 34803                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 34804  004B58  0EAA               	movlw	170
 34805  004B5A  0012               	return	
 34806  004B5C                     
 34807                           ;fat16.c: 1078: return 0X00;
 34808  004B5C  0E00               	movlw	0
 34809                           
 34810                           ;fat16.c: 1079: }
 34811  004B5E  0012               	return	
 34812  004B60                     l2119:
 34813  004B60  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 34814  004B64  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 34815                           
 34816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34817                           ; Switch size 1, requested type "space"
 34818                           ; Number of cases is 1, Range of values is 1 to 1
 34819                           ; switch strategies available:
 34820                           ; Name         Instructions Cycles
 34821                           ; simple_byte            4     3 (average)
 34822                           ;	Chosen strategy is simple_byte
 34823  004B68  5004               	movf	??__get_mbr+1,w,c
 34824  004B6A  0A01               	xorlw	1	; case 1
 34825  004B6C  A4D8               	btfss	status,2,c
 34826  004B6E  D7F6               	goto	l2139
 34827                           
 34828                           ; Switch size 1, requested type "space"
 34829                           ; Number of cases is 18, Range of values is 190 to 255
 34830                           ; switch strategies available:
 34831                           ; Name         Instructions Cycles
 34832                           ; simple_byte           55    28 (average)
 34833                           ;	Chosen strategy is simple_byte
 34834  004B70  5003               	movf	??__get_mbr,w,c
 34835  004B72  0ABE               	xorlw	190	; case 190
 34836  004B74  B4D8               	btfsc	status,2,c
 34837  004B76  D7CE               	goto	l2120
 34838  004B78  0A01               	xorlw	1	; case 191
 34839  004B7A  B4D8               	btfsc	status,2,c
 34840  004B7C  D7CD               	goto	l2122
 34841  004B7E  0A7F               	xorlw	127	; case 192
 34842  004B80  B4D8               	btfsc	status,2,c
 34843  004B82  D7CC               	goto	l2123
 34844  004B84  0A01               	xorlw	1	; case 193
 34845  004B86  B4D8               	btfsc	status,2,c
 34846  004B88  D7CB               	goto	l2124
 34847  004B8A  0A03               	xorlw	3	; case 194
 34848  004B8C  B4D8               	btfsc	status,2,c
 34849  004B8E  D7CA               	goto	l2125
 34850  004B90  0A01               	xorlw	1	; case 195
 34851  004B92  B4D8               	btfsc	status,2,c
 34852  004B94  D7C9               	goto	l2126
 34853  004B96  0A07               	xorlw	7	; case 196
 34854  004B98  B4D8               	btfsc	status,2,c
 34855  004B9A  D7C8               	goto	l2127
 34856  004B9C  0A01               	xorlw	1	; case 197
 34857  004B9E  B4D8               	btfsc	status,2,c
 34858  004BA0  D7C7               	goto	l2128
 34859  004BA2  0A03               	xorlw	3	; case 198
 34860  004BA4  B4D8               	btfsc	status,2,c
 34861  004BA6  D7C6               	goto	l2129
 34862  004BA8  0A01               	xorlw	1	; case 199
 34863  004BAA  B4D8               	btfsc	status,2,c
 34864  004BAC  D7C5               	goto	l2130
 34865  004BAE  0A0F               	xorlw	15	; case 200
 34866  004BB0  B4D8               	btfsc	status,2,c
 34867  004BB2  D7C4               	goto	l2131
 34868  004BB4  0A01               	xorlw	1	; case 201
 34869  004BB6  B4D8               	btfsc	status,2,c
 34870  004BB8  D7C3               	goto	l2132
 34871  004BBA  0A03               	xorlw	3	; case 202
 34872  004BBC  B4D8               	btfsc	status,2,c
 34873  004BBE  D7C2               	goto	l2133
 34874  004BC0  0A01               	xorlw	1	; case 203
 34875  004BC2  B4D8               	btfsc	status,2,c
 34876  004BC4  D7C1               	goto	l2134
 34877  004BC6  0A07               	xorlw	7	; case 204
 34878  004BC8  B4D8               	btfsc	status,2,c
 34879  004BCA  D7C0               	goto	l2135
 34880  004BCC  0A01               	xorlw	1	; case 205
 34881  004BCE  B4D8               	btfsc	status,2,c
 34882  004BD0  D7BF               	goto	l2136
 34883  004BD2  0A33               	xorlw	51	; case 254
 34884  004BD4  B4D8               	btfsc	status,2,c
 34885  004BD6  D7BE               	goto	l2137
 34886  004BD8  0A01               	xorlw	1	; case 255
 34887  004BDA  B4D8               	btfsc	status,2,c
 34888  004BDC  D7BD               	goto	l2138
 34889  004BDE  D7BE               	goto	l2139
 34890  004BE0                     __end_of__get_mbr:
 34891                           	opt stack 0
 34892                           tosu	equ	0xFFF
 34893                           tosh	equ	0xFFE
 34894                           tosl	equ	0xFFD
 34895                           pclath	equ	0xFFA
 34896                           tblptru	equ	0xFF8
 34897                           tblptrh	equ	0xFF7
 34898                           tblptrl	equ	0xFF6
 34899                           tablat	equ	0xFF5
 34900                           prodh	equ	0xFF4
 34901                           prodl	equ	0xFF3
 34902                           intcon	equ	0xFF2
 34903                           intcon2	equ	0xFF1
 34904                           intcon3	equ	0xFF0
 34905                           indf0	equ	0xFEF
 34906                           postinc0	equ	0xFEE
 34907                           fsr0h	equ	0xFEA
 34908                           fsr0l	equ	0xFE9
 34909                           wreg	equ	0xFE8
 34910                           indf1	equ	0xFE7
 34911                           postdec1	equ	0xFE5
 34912                           plusw1	equ	0xFE3
 34913                           fsr1h	equ	0xFE2
 34914                           fsr1l	equ	0xFE1
 34915                           indf2	equ	0xFDF
 34916                           postinc2	equ	0xFDE
 34917                           postdec2	equ	0xFDD
 34918                           plusw2	equ	0xFDB
 34919                           fsr2h	equ	0xFDA
 34920                           fsr2l	equ	0xFD9
 34921                           status	equ	0xFD8
 34922                           
 34923 ;; *************** function __get_fbr *****************
 34924 ;; Defined at:
 34925 ;;		line 1082 in file "fat16.c"
 34926 ;; Parameters:    Size  Location     Type
 34927 ;;  idx             2    0[COMRAM] unsigned int 
 34928 ;; Auto vars:     Size  Location     Type
 34929 ;;		None
 34930 ;; Return value:  Size  Location     Type
 34931 ;;                  1    wreg      unsigned char 
 34932 ;; Registers used:
 34933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34934 ;; Tracked objects:
 34935 ;;		On entry : 0/0
 34936 ;;		On exit  : 0/0
 34937 ;;		Unchanged: 0/0
 34938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34943 ;;Total ram usage:        4 bytes
 34944 ;; Hardware stack levels used:    1
 34945 ;; This function calls:
 34946 ;;		Nothing
 34947 ;; This function is called by:
 34948 ;;		_fat_get_format_status
 34949 ;;		_fat_format
 34950 ;; This function uses a non-reentrant model
 34951 ;;
 34952                           
 34953                           	psect	text184
 34954  00175A                     __ptext184:
 34955                           	opt stack 0
 34956  00175A                     __get_fbr:
 34957                           	opt stack 27
 34958                           
 34959                           ;fat16.c: 1084: switch (idx)
 34960                           
 34961                           ;incstack = 0
 34962  00175A  D091               	goto	l2143
 34963  00175C                     
 34964                           ;fat16.c: 1087: return 0xEB;
 34965  00175C  0EEB               	movlw	235
 34966  00175E  0012               	return	
 34967  001760                     
 34968                           ;fat16.c: 1089: return 0x3C;
 34969  001760  0E3C               	movlw	60
 34970  001762  0012               	return	
 34971  001764                     
 34972                           ;fat16.c: 1091: return 0x90;
 34973  001764  0E90               	movlw	144
 34974  001766  0012               	return	
 34975  001768                     
 34976                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 34977  001768  0EF1               	movlw	low STR_1
 34978  00176A  6EF6               	movwf	tblptrl,c
 34979  00176C                     	if	1	;There is more than 1 active tblptr byte
 34980  00176C  0E8F               	movlw	high STR_1
 34981  00176E  6EF7               	movwf	tblptrh,c
 34982  001770                     	endif
 34983  001770                     	if	1	;There are 3 active tblptr bytes
 34984  001770  0E00               	movlw	low (STR_1 shr (0+16))
 34985  001772  6EF8               	movwf	tblptru,c
 34986  001774                     	endif
 34987  001774  0008               	tblrd		*
 34988  001776  50F5               	movf	tablat,w,c
 34989  001778  0012               	return	
 34990  00177A                     
 34991                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 34992  00177A  0EF2               	movlw	low (STR_1+1)
 34993  00177C  6EF6               	movwf	tblptrl,c
 34994  00177E  0E8F               	movlw	high (STR_1+1)
 34995  001780  6EF7               	movwf	tblptrh,c
 34996  001782                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34997  001782  6AF8               	clrf	tblptru,c
 34998  001784                     	endif
 34999  001784                     	if	0	;tblptru may be non-zero
 35000  001784                     	endif
 35001  001784  0008               	tblrd		*
 35002  001786  50F5               	movf	tablat,w,c
 35003  001788  0012               	return	
 35004  00178A                     
 35005                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 35006  00178A  0EF3               	movlw	low (STR_1+2)
 35007  00178C  6EF6               	movwf	tblptrl,c
 35008  00178E  0E8F               	movlw	high (STR_1+2)
 35009  001790  6EF7               	movwf	tblptrh,c
 35010  001792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35011  001792  6AF8               	clrf	tblptru,c
 35012  001794                     	endif
 35013  001794                     	if	0	;tblptru may be non-zero
 35014  001794                     	endif
 35015  001794  0008               	tblrd		*
 35016  001796  50F5               	movf	tablat,w,c
 35017  001798  0012               	return	
 35018  00179A                     
 35019                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 35020  00179A  0EF4               	movlw	low (STR_1+3)
 35021  00179C  6EF6               	movwf	tblptrl,c
 35022  00179E  0E8F               	movlw	high (STR_1+3)
 35023  0017A0  6EF7               	movwf	tblptrh,c
 35024  0017A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35025  0017A2  6AF8               	clrf	tblptru,c
 35026  0017A4                     	endif
 35027  0017A4                     	if	0	;tblptru may be non-zero
 35028  0017A4                     	endif
 35029  0017A4  0008               	tblrd		*
 35030  0017A6  50F5               	movf	tablat,w,c
 35031  0017A8  0012               	return	
 35032  0017AA                     
 35033                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 35034  0017AA  0EF5               	movlw	low (STR_1+4)
 35035  0017AC  6EF6               	movwf	tblptrl,c
 35036  0017AE  0E8F               	movlw	high (STR_1+4)
 35037  0017B0  6EF7               	movwf	tblptrh,c
 35038  0017B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35039  0017B2  6AF8               	clrf	tblptru,c
 35040  0017B4                     	endif
 35041  0017B4                     	if	0	;tblptru may be non-zero
 35042  0017B4                     	endif
 35043  0017B4  0008               	tblrd		*
 35044  0017B6  50F5               	movf	tablat,w,c
 35045  0017B8  0012               	return	
 35046  0017BA                     
 35047                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 35048  0017BA  0EF6               	movlw	low (STR_1+5)
 35049  0017BC  6EF6               	movwf	tblptrl,c
 35050  0017BE  0E8F               	movlw	high (STR_1+5)
 35051  0017C0  6EF7               	movwf	tblptrh,c
 35052  0017C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35053  0017C2  6AF8               	clrf	tblptru,c
 35054  0017C4                     	endif
 35055  0017C4                     	if	0	;tblptru may be non-zero
 35056  0017C4                     	endif
 35057  0017C4  0008               	tblrd		*
 35058  0017C6  50F5               	movf	tablat,w,c
 35059  0017C8  0012               	return	
 35060  0017CA                     
 35061                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 35062  0017CA  0EF7               	movlw	low (STR_1+6)
 35063  0017CC  6EF6               	movwf	tblptrl,c
 35064  0017CE  0E8F               	movlw	high (STR_1+6)
 35065  0017D0  6EF7               	movwf	tblptrh,c
 35066  0017D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35067  0017D2  6AF8               	clrf	tblptru,c
 35068  0017D4                     	endif
 35069  0017D4                     	if	0	;tblptru may be non-zero
 35070  0017D4                     	endif
 35071  0017D4  0008               	tblrd		*
 35072  0017D6  50F5               	movf	tablat,w,c
 35073  0017D8  0012               	return	
 35074  0017DA                     
 35075                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 35076  0017DA  0EF8               	movlw	low (STR_1+7)
 35077  0017DC  6EF6               	movwf	tblptrl,c
 35078  0017DE  0E8F               	movlw	high (STR_1+7)
 35079  0017E0  6EF7               	movwf	tblptrh,c
 35080  0017E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35081  0017E2  6AF8               	clrf	tblptru,c
 35082  0017E4                     	endif
 35083  0017E4                     	if	0	;tblptru may be non-zero
 35084  0017E4                     	endif
 35085  0017E4  0008               	tblrd		*
 35086  0017E6  50F5               	movf	tablat,w,c
 35087  0017E8  0012               	return	
 35088  0017EA                     
 35089                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 35090  0017EA  0E00               	movlw	0
 35091  0017EC  0012               	return	
 35092  0017EE                     
 35093                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 35094  0017EE  0E02               	movlw	2
 35095  0017F0  0012               	return	
 35096  0017F2                     
 35097                           ;fat16.c: 1113: return 1;
 35098  0017F2  0E01               	movlw	1
 35099  0017F4  0012               	return	
 35100  0017F6                     
 35101                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 35102  0017F6  0E01               	movlw	1
 35103  0017F8  0012               	return	
 35104  0017FA                     
 35105                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 35106  0017FA  0E00               	movlw	0
 35107  0017FC  0012               	return	
 35108  0017FE                     
 35109                           ;fat16.c: 1119: return 1;
 35110  0017FE  0E01               	movlw	1
 35111  001800  0012               	return	
 35112  001802                     
 35113                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 35114  001802  0E40               	movlw	64
 35115  001804  0012               	return	
 35116  001806                     
 35117                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 35118  001806  0E00               	movlw	0
 35119  001808  0012               	return	
 35120  00180A                     
 35121                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 35122  00180A  0EFF               	movlw	255
 35123  00180C  0012               	return	
 35124  00180E                     
 35125                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35126  00180E  0E1F               	movlw	31
 35127  001810  0012               	return	
 35128  001812                     
 35129                           ;fat16.c: 1129: return 0XF8;
 35130  001812  0EF8               	movlw	248
 35131  001814  0012               	return	
 35132  001816                     
 35133                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 35134  001816  0E20               	movlw	32
 35135  001818  0012               	return	
 35136  00181A                     
 35137                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35138  00181A  0E00               	movlw	0
 35139  00181C  0012               	return	
 35140  00181E                     
 35141                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 35142  00181E  0E3F               	movlw	63
 35143  001820  0012               	return	
 35144  001822                     
 35145                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35146  001822  0E00               	movlw	0
 35147  001824  0012               	return	
 35148  001826                     
 35149                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 35150  001826  0E10               	movlw	16
 35151  001828  0012               	return	
 35152  00182A                     
 35153                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35154  00182A  0E00               	movlw	0
 35155  00182C  0012               	return	
 35156  00182E                     
 35157                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35158  00182E  0E00               	movlw	0
 35159  001830  0012               	return	
 35160  001832                     
 35161                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35162  001832  0E00               	movlw	0
 35163  001834  0012               	return	
 35164  001836                     
 35165                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35166  001836  0E00               	movlw	0
 35167  001838  0012               	return	
 35168  00183A                     
 35169                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35170  00183A  0E00               	movlw	0
 35171  00183C  0012               	return	
 35172  00183E                     
 35173                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35174  00183E  0E01               	movlw	1
 35175  001840  0012               	return	
 35176  001842                     
 35177                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35178  001842  0E00               	movlw	0
 35179  001844  0012               	return	
 35180  001846                     
 35181                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35182  001846  0E22               	movlw	34
 35183  001848  0012               	return	
 35184  00184A                     
 35185                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35186  00184A  0E00               	movlw	0
 35187  00184C  0012               	return	
 35188  00184E                     
 35189                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35190                           
 35191                           ;fat16.c: 1160: case 0x2F:
 35192  00184E  0E00               	movlw	0
 35193  001850  0012               	return	
 35194  001852                     
 35195                           ;fat16.c: 1163: return 'F';
 35196  001852  0E46               	movlw	70
 35197  001854  0012               	return	
 35198  001856                     
 35199                           ;fat16.c: 1165: return 'A';
 35200  001856  0E41               	movlw	65
 35201  001858  0012               	return	
 35202  00185A                     
 35203                           ;fat16.c: 1167: return 'T';
 35204  00185A  0E54               	movlw	84
 35205  00185C  0012               	return	
 35206  00185E                     
 35207                           ;fat16.c: 1169: return '1';
 35208  00185E  0E31               	movlw	49
 35209  001860  0012               	return	
 35210  001862                     
 35211                           ;fat16.c: 1171: return '6';
 35212  001862  0E36               	movlw	54
 35213  001864  0012               	return	
 35214  001866                     
 35215                           ;fat16.c: 1173: return ' ';
 35216  001866  0E20               	movlw	32
 35217  001868  0012               	return	
 35218  00186A                     
 35219                           ;fat16.c: 1175: return ' ';
 35220  00186A  0E20               	movlw	32
 35221  00186C  0012               	return	
 35222  00186E                     
 35223                           ;fat16.c: 1177: return ' ';
 35224  00186E  0E20               	movlw	32
 35225  001870  0012               	return	
 35226  001872                     
 35227                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35228  001872  0E55               	movlw	85
 35229  001874  0012               	return	
 35230  001876                     
 35231                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35232  001876  0EAA               	movlw	170
 35233  001878  0012               	return	
 35234  00187A                     
 35235                           ;fat16.c: 1183: return 0X00;
 35236  00187A  0E00               	movlw	0
 35237                           
 35238                           ;fat16.c: 1184: }
 35239  00187C  0012               	return	
 35240  00187E                     l2143:
 35241  00187E  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35242  001882  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35243                           
 35244                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35245                           ; Switch size 1, requested type "space"
 35246                           ; Number of cases is 2, Range of values is 0 to 1
 35247                           ; switch strategies available:
 35248                           ; Name         Instructions Cycles
 35249                           ; simple_byte            7     4 (average)
 35250                           ;	Chosen strategy is simple_byte
 35251  001886  5004               	movf	??__get_fbr+1,w,c
 35252  001888  0A00               	xorlw	0	; case 0
 35253  00188A  B4D8               	btfsc	status,2,c
 35254  00188C  D004               	goto	l15308
 35255  00188E  0A01               	xorlw	1	; case 1
 35256  001890  B4D8               	btfsc	status,2,c
 35257  001892  D08D               	goto	l15310
 35258  001894  D7F2               	goto	l2193
 35259  001896                     l15308:
 35260                           
 35261                           ; Switch size 1, requested type "space"
 35262                           ; Number of cases is 46, Range of values is 0 to 61
 35263                           ; switch strategies available:
 35264                           ; Name         Instructions Cycles
 35265                           ; simple_byte          139    70 (average)
 35266                           ;	Chosen strategy is simple_byte
 35267  001896  5003               	movf	??__get_fbr,w,c
 35268  001898  0A00               	xorlw	0	; case 0
 35269  00189A  B4D8               	btfsc	status,2,c
 35270  00189C  D75F               	goto	l2144
 35271  00189E  0A01               	xorlw	1	; case 1
 35272  0018A0  B4D8               	btfsc	status,2,c
 35273  0018A2  D75E               	goto	l2146
 35274  0018A4  0A03               	xorlw	3	; case 2
 35275  0018A6  B4D8               	btfsc	status,2,c
 35276  0018A8  D75D               	goto	l2147
 35277  0018AA  0A01               	xorlw	1	; case 3
 35278  0018AC  B4D8               	btfsc	status,2,c
 35279  0018AE  D75C               	goto	l2148
 35280  0018B0  0A07               	xorlw	7	; case 4
 35281  0018B2  B4D8               	btfsc	status,2,c
 35282  0018B4  D762               	goto	l2149
 35283  0018B6  0A01               	xorlw	1	; case 5
 35284  0018B8  B4D8               	btfsc	status,2,c
 35285  0018BA  D767               	goto	l2150
 35286  0018BC  0A03               	xorlw	3	; case 6
 35287  0018BE  B4D8               	btfsc	status,2,c
 35288  0018C0  D76C               	goto	l2151
 35289  0018C2  0A01               	xorlw	1	; case 7
 35290  0018C4  B4D8               	btfsc	status,2,c
 35291  0018C6  D771               	goto	l2152
 35292  0018C8  0A0F               	xorlw	15	; case 8
 35293  0018CA  B4D8               	btfsc	status,2,c
 35294  0018CC  D776               	goto	l2153
 35295  0018CE  0A01               	xorlw	1	; case 9
 35296  0018D0  B4D8               	btfsc	status,2,c
 35297  0018D2  D77B               	goto	l2154
 35298  0018D4  0A03               	xorlw	3	; case 10
 35299  0018D6  B4D8               	btfsc	status,2,c
 35300  0018D8  D780               	goto	l2155
 35301  0018DA  0A01               	xorlw	1	; case 11
 35302  0018DC  B4D8               	btfsc	status,2,c
 35303  0018DE  D785               	goto	l2156
 35304  0018E0  0A07               	xorlw	7	; case 12
 35305  0018E2  B4D8               	btfsc	status,2,c
 35306  0018E4  D784               	goto	l2157
 35307  0018E6  0A01               	xorlw	1	; case 13
 35308  0018E8  B4D8               	btfsc	status,2,c
 35309  0018EA  D783               	goto	l2158
 35310  0018EC  0A03               	xorlw	3	; case 14
 35311  0018EE  B4D8               	btfsc	status,2,c
 35312  0018F0  D782               	goto	l2159
 35313  0018F2  0A01               	xorlw	1	; case 15
 35314  0018F4  B4D8               	btfsc	status,2,c
 35315  0018F6  D781               	goto	l2160
 35316  0018F8  0A1F               	xorlw	31	; case 16
 35317  0018FA  B4D8               	btfsc	status,2,c
 35318  0018FC  D780               	goto	l2161
 35319  0018FE  0A01               	xorlw	1	; case 17
 35320  001900  B4D8               	btfsc	status,2,c
 35321  001902  D77F               	goto	l2162
 35322  001904  0A03               	xorlw	3	; case 18
 35323  001906  B4D8               	btfsc	status,2,c
 35324  001908  D77E               	goto	l2163
 35325  00190A  0A01               	xorlw	1	; case 19
 35326  00190C  B4D8               	btfsc	status,2,c
 35327  00190E  D77D               	goto	l2164
 35328  001910  0A07               	xorlw	7	; case 20
 35329  001912  B4D8               	btfsc	status,2,c
 35330  001914  D77C               	goto	l2165
 35331  001916  0A01               	xorlw	1	; case 21
 35332  001918  B4D8               	btfsc	status,2,c
 35333  00191A  D77B               	goto	l2166
 35334  00191C  0A03               	xorlw	3	; case 22
 35335  00191E  B4D8               	btfsc	status,2,c
 35336  001920  D77A               	goto	l2167
 35337  001922  0A01               	xorlw	1	; case 23
 35338  001924  B4D8               	btfsc	status,2,c
 35339  001926  D779               	goto	l2168
 35340  001928  0A0F               	xorlw	15	; case 24
 35341  00192A  B4D8               	btfsc	status,2,c
 35342  00192C  D778               	goto	l2169
 35343  00192E  0A01               	xorlw	1	; case 25
 35344  001930  B4D8               	btfsc	status,2,c
 35345  001932  D777               	goto	l2170
 35346  001934  0A03               	xorlw	3	; case 26
 35347  001936  B4D8               	btfsc	status,2,c
 35348  001938  D776               	goto	l2171
 35349  00193A  0A01               	xorlw	1	; case 27
 35350  00193C  B4D8               	btfsc	status,2,c
 35351  00193E  D775               	goto	l2172
 35352  001940  0A07               	xorlw	7	; case 28
 35353  001942  B4D8               	btfsc	status,2,c
 35354  001944  D774               	goto	l2173
 35355  001946  0A01               	xorlw	1	; case 29
 35356  001948  B4D8               	btfsc	status,2,c
 35357  00194A  D773               	goto	l2174
 35358  00194C  0A03               	xorlw	3	; case 30
 35359  00194E  B4D8               	btfsc	status,2,c
 35360  001950  D772               	goto	l2175
 35361  001952  0A01               	xorlw	1	; case 31
 35362  001954  B4D8               	btfsc	status,2,c
 35363  001956  D771               	goto	l2176
 35364  001958  0A37               	xorlw	55	; case 40
 35365  00195A  B4D8               	btfsc	status,2,c
 35366  00195C  D770               	goto	l2177
 35367  00195E  0A01               	xorlw	1	; case 41
 35368  001960  B4D8               	btfsc	status,2,c
 35369  001962  D76F               	goto	l2178
 35370  001964  0A05               	xorlw	5	; case 44
 35371  001966  B4D8               	btfsc	status,2,c
 35372  001968  D76E               	goto	l2179
 35373  00196A  0A01               	xorlw	1	; case 45
 35374  00196C  B4D8               	btfsc	status,2,c
 35375  00196E  D76D               	goto	l2180
 35376  001970  0A03               	xorlw	3	; case 46
 35377  001972  B4D8               	btfsc	status,2,c
 35378  001974  D76C               	goto	l2181
 35379  001976  0A01               	xorlw	1	; case 47
 35380  001978  B4D8               	btfsc	status,2,c
 35381  00197A  D769               	goto	l2181
 35382  00197C  0A19               	xorlw	25	; case 54
 35383  00197E  B4D8               	btfsc	status,2,c
 35384  001980  D768               	goto	l2183
 35385  001982  0A01               	xorlw	1	; case 55
 35386  001984  B4D8               	btfsc	status,2,c
 35387  001986  D767               	goto	l2184
 35388  001988  0A0F               	xorlw	15	; case 56
 35389  00198A  B4D8               	btfsc	status,2,c
 35390  00198C  D766               	goto	l2185
 35391  00198E  0A01               	xorlw	1	; case 57
 35392  001990  B4D8               	btfsc	status,2,c
 35393  001992  D765               	goto	l2186
 35394  001994  0A03               	xorlw	3	; case 58
 35395  001996  B4D8               	btfsc	status,2,c
 35396  001998  D764               	goto	l2187
 35397  00199A  0A01               	xorlw	1	; case 59
 35398  00199C  B4D8               	btfsc	status,2,c
 35399  00199E  D763               	goto	l2188
 35400  0019A0  0A07               	xorlw	7	; case 60
 35401  0019A2  B4D8               	btfsc	status,2,c
 35402  0019A4  D762               	goto	l2189
 35403  0019A6  0A01               	xorlw	1	; case 61
 35404  0019A8  B4D8               	btfsc	status,2,c
 35405  0019AA  D761               	goto	l2190
 35406  0019AC  D766               	goto	l2193
 35407  0019AE                     l15310:
 35408                           
 35409                           ; Switch size 1, requested type "space"
 35410                           ; Number of cases is 2, Range of values is 254 to 255
 35411                           ; switch strategies available:
 35412                           ; Name         Instructions Cycles
 35413                           ; simple_byte            7     4 (average)
 35414                           ;	Chosen strategy is simple_byte
 35415  0019AE  5003               	movf	??__get_fbr,w,c
 35416  0019B0  0AFE               	xorlw	254	; case 254
 35417  0019B2  B4D8               	btfsc	status,2,c
 35418  0019B4  D75E               	goto	l2191
 35419  0019B6  0A01               	xorlw	1	; case 255
 35420  0019B8  B4D8               	btfsc	status,2,c
 35421  0019BA  D75D               	goto	l2192
 35422  0019BC  D75E               	goto	l2193
 35423  0019BE                     __end_of__get_fbr:
 35424                           	opt stack 0
 35425                           tosu	equ	0xFFF
 35426                           tosh	equ	0xFFE
 35427                           tosl	equ	0xFFD
 35428                           pclath	equ	0xFFA
 35429                           tblptru	equ	0xFF8
 35430                           tblptrh	equ	0xFF7
 35431                           tblptrl	equ	0xFF6
 35432                           tablat	equ	0xFF5
 35433                           prodh	equ	0xFF4
 35434                           prodl	equ	0xFF3
 35435                           intcon	equ	0xFF2
 35436                           intcon2	equ	0xFF1
 35437                           intcon3	equ	0xFF0
 35438                           indf0	equ	0xFEF
 35439                           postinc0	equ	0xFEE
 35440                           fsr0h	equ	0xFEA
 35441                           fsr0l	equ	0xFE9
 35442                           wreg	equ	0xFE8
 35443                           indf1	equ	0xFE7
 35444                           postdec1	equ	0xFE5
 35445                           plusw1	equ	0xFE3
 35446                           fsr1h	equ	0xFE2
 35447                           fsr1l	equ	0xFE1
 35448                           indf2	equ	0xFDF
 35449                           postinc2	equ	0xFDE
 35450                           postdec2	equ	0xFDD
 35451                           plusw2	equ	0xFDB
 35452                           fsr2h	equ	0xFDA
 35453                           fsr2l	equ	0xFD9
 35454                           status	equ	0xFD8
 35455                           
 35456 ;; *************** function __get_fat *****************
 35457 ;; Defined at:
 35458 ;;		line 1187 in file "fat16.c"
 35459 ;; Parameters:    Size  Location     Type
 35460 ;;  idx             2    0[COMRAM] unsigned int 
 35461 ;; Auto vars:     Size  Location     Type
 35462 ;;		None
 35463 ;; Return value:  Size  Location     Type
 35464 ;;                  1    wreg      unsigned char 
 35465 ;; Registers used:
 35466 ;;		wreg, status,2, status,0
 35467 ;; Tracked objects:
 35468 ;;		On entry : 0/0
 35469 ;;		On exit  : 0/0
 35470 ;;		Unchanged: 0/0
 35471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35475 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35476 ;;Total ram usage:        4 bytes
 35477 ;; Hardware stack levels used:    1
 35478 ;; This function calls:
 35479 ;;		Nothing
 35480 ;; This function is called by:
 35481 ;;		_fat_format
 35482 ;; This function uses a non-reentrant model
 35483 ;;
 35484                           
 35485                           	psect	text185
 35486  0065F8                     __ptext185:
 35487                           	opt stack 0
 35488  0065F8                     __get_fat:
 35489                           	opt stack 27
 35490                           
 35491                           ;fat16.c: 1189: switch (idx)
 35492                           
 35493                           ;incstack = 0
 35494  0065F8  D00E               	goto	l2197
 35495  0065FA                     
 35496                           ;fat16.c: 1193: return 0xF8;
 35497  0065FA  0EF8               	movlw	248
 35498  0065FC  0012               	return	
 35499  0065FE                     
 35500                           ;fat16.c: 1195: return 0xFF;
 35501  0065FE  0EFF               	movlw	255
 35502  006600  0012               	return	
 35503  006602                     
 35504                           ;fat16.c: 1197: return 0xFF;
 35505  006602  0EFF               	movlw	255
 35506  006604  0012               	return	
 35507  006606                     
 35508                           ;fat16.c: 1199: return 0xFF;
 35509  006606  0EFF               	movlw	255
 35510  006608  0012               	return	
 35511  00660A                     
 35512                           ;fat16.c: 1202: return 0xFF;
 35513  00660A  0EFF               	movlw	255
 35514  00660C  0012               	return	
 35515  00660E                     
 35516                           ;fat16.c: 1204: return 0xFF;
 35517  00660E  0EFF               	movlw	255
 35518  006610  0012               	return	
 35519  006612                     
 35520                           ;fat16.c: 1206: return 0X00;
 35521  006612  0E00               	movlw	0
 35522                           
 35523                           ;fat16.c: 1207: }
 35524  006614  0012               	return	
 35525  006616                     l2197:
 35526  006616  C001  F003         	movff	__get_fat@idx,??__get_fat
 35527  00661A  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 35528                           
 35529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35530                           ; Switch size 1, requested type "space"
 35531                           ; Number of cases is 1, Range of values is 0 to 0
 35532                           ; switch strategies available:
 35533                           ; Name         Instructions Cycles
 35534                           ; simple_byte            4     3 (average)
 35535                           ;	Chosen strategy is simple_byte
 35536  00661E  5004               	movf	??__get_fat+1,w,c
 35537  006620  0A00               	xorlw	0	; case 0
 35538  006622  A4D8               	btfss	status,2,c
 35539  006624  D7F6               	goto	l2205
 35540                           
 35541                           ; Switch size 1, requested type "space"
 35542                           ; Number of cases is 6, Range of values is 0 to 5
 35543                           ; switch strategies available:
 35544                           ; Name         Instructions Cycles
 35545                           ; simple_byte           19    10 (average)
 35546                           ;	Chosen strategy is simple_byte
 35547  006626  5003               	movf	??__get_fat,w,c
 35548  006628  0A00               	xorlw	0	; case 0
 35549  00662A  B4D8               	btfsc	status,2,c
 35550  00662C  D7E6               	goto	l2198
 35551  00662E  0A01               	xorlw	1	; case 1
 35552  006630  B4D8               	btfsc	status,2,c
 35553  006632  D7E5               	goto	l2200
 35554  006634  0A03               	xorlw	3	; case 2
 35555  006636  B4D8               	btfsc	status,2,c
 35556  006638  D7E4               	goto	l2201
 35557  00663A  0A01               	xorlw	1	; case 3
 35558  00663C  B4D8               	btfsc	status,2,c
 35559  00663E  D7E3               	goto	l2202
 35560  006640  0A07               	xorlw	7	; case 4
 35561  006642  B4D8               	btfsc	status,2,c
 35562  006644  D7E2               	goto	l2203
 35563  006646  0A01               	xorlw	1	; case 5
 35564  006648  B4D8               	btfsc	status,2,c
 35565  00664A  D7E1               	goto	l2204
 35566  00664C  D7E2               	goto	l2205
 35567  00664E                     __end_of__get_fat:
 35568                           	opt stack 0
 35569                           tosu	equ	0xFFF
 35570                           tosh	equ	0xFFE
 35571                           tosl	equ	0xFFD
 35572                           pclath	equ	0xFFA
 35573                           tblptru	equ	0xFF8
 35574                           tblptrh	equ	0xFF7
 35575                           tblptrl	equ	0xFF6
 35576                           tablat	equ	0xFF5
 35577                           prodh	equ	0xFF4
 35578                           prodl	equ	0xFF3
 35579                           intcon	equ	0xFF2
 35580                           intcon2	equ	0xFF1
 35581                           intcon3	equ	0xFF0
 35582                           indf0	equ	0xFEF
 35583                           postinc0	equ	0xFEE
 35584                           fsr0h	equ	0xFEA
 35585                           fsr0l	equ	0xFE9
 35586                           wreg	equ	0xFE8
 35587                           indf1	equ	0xFE7
 35588                           postdec1	equ	0xFE5
 35589                           plusw1	equ	0xFE3
 35590                           fsr1h	equ	0xFE2
 35591                           fsr1l	equ	0xFE1
 35592                           indf2	equ	0xFDF
 35593                           postinc2	equ	0xFDE
 35594                           postdec2	equ	0xFDD
 35595                           plusw2	equ	0xFDB
 35596                           fsr2h	equ	0xFDA
 35597                           fsr2l	equ	0xFD9
 35598                           status	equ	0xFD8
 35599                           
 35600 ;; *************** function __get_data *****************
 35601 ;; Defined at:
 35602 ;;		line 1283 in file "fat16.c"
 35603 ;; Parameters:    Size  Location     Type
 35604 ;;  idx             2    0[COMRAM] unsigned int 
 35605 ;; Auto vars:     Size  Location     Type
 35606 ;;		None
 35607 ;; Return value:  Size  Location     Type
 35608 ;;                  1    wreg      unsigned char 
 35609 ;; Registers used:
 35610 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35611 ;; Tracked objects:
 35612 ;;		On entry : 0/0
 35613 ;;		On exit  : 0/0
 35614 ;;		Unchanged: 0/0
 35615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35620 ;;Total ram usage:        2 bytes
 35621 ;; Hardware stack levels used:    1
 35622 ;; This function calls:
 35623 ;;		Nothing
 35624 ;; This function is called by:
 35625 ;;		_fat_format
 35626 ;; This function uses a non-reentrant model
 35627 ;;
 35628                           
 35629                           	psect	text186
 35630  006E5E                     __ptext186:
 35631                           	opt stack 0
 35632  006E5E                     __get_data:
 35633                           	opt stack 27
 35634                           
 35635                           ;fat16.c: 1285: if(idx < 12)
 35636                           
 35637                           ;incstack = 0
 35638  006E5E  5002               	movf	__get_data@idx+1,w,c
 35639  006E60  E110               	bnz	l11630
 35640  006E62  0E0C               	movlw	12
 35641  006E64  5C01               	subwf	__get_data@idx,w,c
 35642  006E66  B0D8               	btfsc	status,0,c
 35643  006E68  D00C               	goto	l2241
 35644                           
 35645                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 35646  006E6A  0ECF               	movlw	low STR_12
 35647  006E6C  2401               	addwf	__get_data@idx,w,c
 35648  006E6E  6EF6               	movwf	tblptrl,c
 35649  006E70  0E8F               	movlw	high STR_12
 35650  006E72  2002               	addwfc	__get_data@idx+1,w,c
 35651  006E74  6EF7               	movwf	tblptrh,c
 35652  006E76                     	if	1	;There are 3 active tblptr bytes
 35653  006E76  6AF8               	clrf	tblptru,c
 35654  006E78  0E00               	movlw	low (__mediumconst shr (0+16))
 35655  006E7A  22F8               	addwfc	tblptru,f,c
 35656  006E7C                     	endif
 35657  006E7C  0008               	tblrd		*
 35658  006E7E  50F5               	movf	tablat,w,c
 35659  006E80  0012               	return	
 35660  006E82                     l2241:
 35661  006E82                     l11630:
 35662                           
 35663                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 35664  006E82  0E00               	movlw	0
 35665  006E84  0012               	return	
 35666  006E86                     __end_of__get_data:
 35667                           	opt stack 0
 35668                           tosu	equ	0xFFF
 35669                           tosh	equ	0xFFE
 35670                           tosl	equ	0xFFD
 35671                           pclath	equ	0xFFA
 35672                           tblptru	equ	0xFF8
 35673                           tblptrh	equ	0xFF7
 35674                           tblptrl	equ	0xFF6
 35675                           tablat	equ	0xFF5
 35676                           prodh	equ	0xFF4
 35677                           prodl	equ	0xFF3
 35678                           intcon	equ	0xFF2
 35679                           intcon2	equ	0xFF1
 35680                           intcon3	equ	0xFF0
 35681                           indf0	equ	0xFEF
 35682                           postinc0	equ	0xFEE
 35683                           fsr0h	equ	0xFEA
 35684                           fsr0l	equ	0xFE9
 35685                           wreg	equ	0xFE8
 35686                           indf1	equ	0xFE7
 35687                           postdec1	equ	0xFE5
 35688                           plusw1	equ	0xFE3
 35689                           fsr1h	equ	0xFE2
 35690                           fsr1l	equ	0xFE1
 35691                           indf2	equ	0xFDF
 35692                           postinc2	equ	0xFDE
 35693                           postdec2	equ	0xFDD
 35694                           plusw2	equ	0xFDB
 35695                           fsr2h	equ	0xFDA
 35696                           fsr2l	equ	0xFD9
 35697                           status	equ	0xFD8
 35698                           
 35699 ;; *************** function _USBTransferOnePacket *****************
 35700 ;; Defined at:
 35701 ;;		line 995 in file "usb_device.c"
 35702 ;; Parameters:    Size  Location     Type
 35703 ;;  ep              1    wreg     unsigned char 
 35704 ;;  dir             1    0[COMRAM] unsigned char 
 35705 ;;  data            2    1[COMRAM] PTR unsigned char 
 35706 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 35707 ;;		 -> msd_cbw(31), NULL(0), 
 35708 ;;  len             1    3[COMRAM] unsigned char 
 35709 ;; Auto vars:     Size  Location     Type
 35710 ;;  ep              1    8[COMRAM] unsigned char 
 35711 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 35712 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 35713 ;; Return value:  Size  Location     Type
 35714 ;;                  2    0[COMRAM] PTR void 
 35715 ;; Registers used:
 35716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35717 ;; Tracked objects:
 35718 ;;		On entry : 0/0
 35719 ;;		On exit  : 0/0
 35720 ;;		Unchanged: 0/0
 35721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35722 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35723 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35725 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35726 ;;Total ram usage:       11 bytes
 35727 ;; Hardware stack levels used:    1
 35728 ;; This function calls:
 35729 ;;		Nothing
 35730 ;; This function is called by:
 35731 ;;		_USBMSDInit
 35732 ;;		_USBCheckMSDRequest
 35733 ;;		_MSDTasks
 35734 ;;		_MSDProcessCommandMediaPresent
 35735 ;;		_MSDReadHandler
 35736 ;;		_MSDWriteHandler
 35737 ;;		_MSDTransferTerminated
 35738 ;;		_APP_DeviceCustomHIDInitialize
 35739 ;;		_APP_DeviceCustomHIDTasks
 35740 ;; This function uses a non-reentrant model
 35741 ;;
 35742                           
 35743                           	psect	text187
 35744  003D88                     __ptext187:
 35745                           	opt stack 0
 35746  003D88                     _USBTransferOnePacket:
 35747                           	opt stack 27
 35748                           
 35749                           ;incstack = 0
 35750                           ;USBTransferOnePacket@ep stored from wreg
 35751  003D88  6E09               	movwf	USBTransferOnePacket@ep,c
 35752                           
 35753                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 35754  003D8A  5001               	movf	USBTransferOnePacket@dir,w,c
 35755  003D8C  B4D8               	btfsc	status,2,c
 35756  003D8E  D007               	goto	l183
 35757                           
 35758                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 35759  003D90  5009               	movf	USBTransferOnePacket@ep,w,c
 35760  003D92  0D02               	mullw	2
 35761  003D94  0E73               	movlw	low _pBDTEntryIn
 35762  003D96  24F3               	addwf	prodl,w,c
 35763  003D98  6ED9               	movwf	fsr2l,c
 35764  003D9A  0E00               	movlw	high _pBDTEntryIn
 35765  003D9C  D006               	goto	L45
 35766  003D9E                     l183:
 35767                           
 35768                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 35769  003D9E  5009               	movf	USBTransferOnePacket@ep,w,c
 35770  003DA0  0D02               	mullw	2
 35771  003DA2  0E79               	movlw	low _pBDTEntryOut
 35772  003DA4  24F3               	addwf	prodl,w,c
 35773  003DA6  6ED9               	movwf	fsr2l,c
 35774  003DA8  0E00               	movlw	high _pBDTEntryOut
 35775  003DAA                     L45:
 35776  003DAA  20F4               	addwfc	prodh,w,c
 35777  003DAC  6EDA               	movwf	fsr2h,c
 35778  003DAE  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 35779  003DB2  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 35780                           
 35781                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 35782  003DB6  500A               	movf	USBTransferOnePacket@handle,w,c
 35783  003DB8  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 35784  003DBA  A4D8               	btfss	status,2,c
 35785  003DBC  D005               	goto	l185
 35786                           
 35787                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 35788  003DBE  0E00               	movlw	0
 35789  003DC0  6E01               	movwf	?_USBTransferOnePacket,c
 35790  003DC2  0E00               	movlw	0
 35791  003DC4  6E02               	movwf	?_USBTransferOnePacket+1,c
 35792  003DC6  0012               	return	
 35793  003DC8                     l185:
 35794                           
 35795                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 35796  003DC8  EE20 F002          	lfsr	2,2
 35797  003DCC  500A               	movf	USBTransferOnePacket@handle,w,c
 35798  003DCE  26D9               	addwf	fsr2l,f,c
 35799  003DD0  500B               	movf	USBTransferOnePacket@handle+1,w,c
 35800  003DD2  22DA               	addwfc	fsr2h,f,c
 35801  003DD4  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 35802  003DD8  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 35803                           
 35804                           ;usb_device.c: 1030: handle->CNT = len;
 35805  003DDC  EE20 F001          	lfsr	2,1
 35806  003DE0  500A               	movf	USBTransferOnePacket@handle,w,c
 35807  003DE2  26D9               	addwf	fsr2l,f,c
 35808  003DE4  500B               	movf	USBTransferOnePacket@handle+1,w,c
 35809  003DE6  22DA               	addwfc	fsr2h,f,c
 35810  003DE8  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 35811                           
 35812                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 35813  003DEC  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35814  003DF0  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35815  003DF4  0E40               	movlw	64
 35816  003DF6  16DF               	andwf	indf2,f,c
 35817                           
 35818                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 35819  003DF8  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35820  003DFC  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35821  003E00  0E00               	movlw	0
 35822  003E02  86DB               	bsf	plusw2,3,c
 35823                           
 35824                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 35825  003E04  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 35826  003E08  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 35827  003E0C  0E00               	movlw	0
 35828  003E0E  8EDB               	bsf	plusw2,7,c
 35829                           
 35830                           ;usb_device.c: 1036: if(dir != 0)
 35831  003E10  5001               	movf	USBTransferOnePacket@dir,w,c
 35832  003E12  B4D8               	btfsc	status,2,c
 35833  003E14  D018               	goto	l187
 35834                           
 35835                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 35836  003E16  5009               	movf	USBTransferOnePacket@ep,w,c
 35837  003E18  0D02               	mullw	2
 35838  003E1A  0E73               	movlw	low _pBDTEntryIn
 35839  003E1C  24F3               	addwf	prodl,w,c
 35840  003E1E  6ED9               	movwf	fsr2l,c
 35841  003E20  0E00               	movlw	high _pBDTEntryIn
 35842  003E22  20F4               	addwfc	prodh,w,c
 35843  003E24  6EDA               	movwf	fsr2h,c
 35844  003E26  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 35845  003E2A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 35846  003E2E  0E04               	movlw	4
 35847  003E30  1805               	xorwf	??_USBTransferOnePacket,w,c
 35848  003E32  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 35849  003E34  5006               	movf	??_USBTransferOnePacket+1,w,c
 35850  003E36  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 35851  003E38  5009               	movf	USBTransferOnePacket@ep,w,c
 35852  003E3A  0D02               	mullw	2
 35853  003E3C  0E73               	movlw	low _pBDTEntryIn
 35854  003E3E  24F3               	addwf	prodl,w,c
 35855  003E40  6ED9               	movwf	fsr2l,c
 35856  003E42  0E00               	movlw	high _pBDTEntryIn
 35857  003E44  D017               	goto	L46
 35858  003E46                     l187:
 35859                           
 35860                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 35861  003E46  5009               	movf	USBTransferOnePacket@ep,w,c
 35862  003E48  0D02               	mullw	2
 35863  003E4A  0E79               	movlw	low _pBDTEntryOut
 35864  003E4C  24F3               	addwf	prodl,w,c
 35865  003E4E  6ED9               	movwf	fsr2l,c
 35866  003E50  0E00               	movlw	high _pBDTEntryOut
 35867  003E52  20F4               	addwfc	prodh,w,c
 35868  003E54  6EDA               	movwf	fsr2h,c
 35869  003E56  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 35870  003E5A  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 35871  003E5E  0E04               	movlw	4
 35872  003E60  1805               	xorwf	??_USBTransferOnePacket,w,c
 35873  003E62  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 35874  003E64  5006               	movf	??_USBTransferOnePacket+1,w,c
 35875  003E66  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 35876  003E68  5009               	movf	USBTransferOnePacket@ep,w,c
 35877  003E6A  0D02               	mullw	2
 35878  003E6C  0E79               	movlw	low _pBDTEntryOut
 35879  003E6E  24F3               	addwf	prodl,w,c
 35880  003E70  6ED9               	movwf	fsr2l,c
 35881  003E72  0E00               	movlw	high _pBDTEntryOut
 35882  003E74                     L46:
 35883  003E74  20F4               	addwfc	prodh,w,c
 35884  003E76  6EDA               	movwf	fsr2h,c
 35885  003E78  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 35886  003E7C  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 35887                           
 35888                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 35889  003E80  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 35890  003E84  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 35891  003E88  0012               	return	
 35892  003E8A                     __end_of_USBTransferOnePacket:
 35893                           	opt stack 0
 35894                           tosu	equ	0xFFF
 35895                           tosh	equ	0xFFE
 35896                           tosl	equ	0xFFD
 35897                           pclath	equ	0xFFA
 35898                           tblptru	equ	0xFF8
 35899                           tblptrh	equ	0xFF7
 35900                           tblptrl	equ	0xFF6
 35901                           tablat	equ	0xFF5
 35902                           prodh	equ	0xFF4
 35903                           prodl	equ	0xFF3
 35904                           intcon	equ	0xFF2
 35905                           intcon2	equ	0xFF1
 35906                           intcon3	equ	0xFF0
 35907                           indf0	equ	0xFEF
 35908                           postinc0	equ	0xFEE
 35909                           fsr0h	equ	0xFEA
 35910                           fsr0l	equ	0xFE9
 35911                           wreg	equ	0xFE8
 35912                           indf1	equ	0xFE7
 35913                           postdec1	equ	0xFE5
 35914                           plusw1	equ	0xFE3
 35915                           fsr1h	equ	0xFE2
 35916                           fsr1l	equ	0xFE1
 35917                           indf2	equ	0xFDF
 35918                           postinc2	equ	0xFDE
 35919                           postdec2	equ	0xFDD
 35920                           plusw2	equ	0xFDB
 35921                           fsr2h	equ	0xFDA
 35922                           fsr2l	equ	0xFD9
 35923                           status	equ	0xFD8
 35924                           tosu	equ	0xFFF
 35925                           tosh	equ	0xFFE
 35926                           tosl	equ	0xFFD
 35927                           pclath	equ	0xFFA
 35928                           tblptru	equ	0xFF8
 35929                           tblptrh	equ	0xFF7
 35930                           tblptrl	equ	0xFF6
 35931                           tablat	equ	0xFF5
 35932                           prodh	equ	0xFF4
 35933                           prodl	equ	0xFF3
 35934                           intcon	equ	0xFF2
 35935                           intcon2	equ	0xFF1
 35936                           intcon3	equ	0xFF0
 35937                           indf0	equ	0xFEF
 35938                           postinc0	equ	0xFEE
 35939                           fsr0h	equ	0xFEA
 35940                           fsr0l	equ	0xFE9
 35941                           wreg	equ	0xFE8
 35942                           indf1	equ	0xFE7
 35943                           postdec1	equ	0xFE5
 35944                           plusw1	equ	0xFE3
 35945                           fsr1h	equ	0xFE2
 35946                           fsr1l	equ	0xFE1
 35947                           indf2	equ	0xFDF
 35948                           postinc2	equ	0xFDE
 35949                           postdec2	equ	0xFDD
 35950                           plusw2	equ	0xFDB
 35951                           fsr2h	equ	0xFDA
 35952                           fsr2l	equ	0xFD9
 35953                           status	equ	0xFD8
 35954                           
 35955                           	psect	text188
 35956  000000                     __ptext188:
 35957                           	opt stack 0
 35958                           tosu	equ	0xFFF
 35959                           tosh	equ	0xFFE
 35960                           tosl	equ	0xFFD
 35961                           pclath	equ	0xFFA
 35962                           tblptru	equ	0xFF8
 35963                           tblptrh	equ	0xFF7
 35964                           tblptrl	equ	0xFF6
 35965                           tablat	equ	0xFF5
 35966                           prodh	equ	0xFF4
 35967                           prodl	equ	0xFF3
 35968                           intcon	equ	0xFF2
 35969                           intcon2	equ	0xFF1
 35970                           intcon3	equ	0xFF0
 35971                           indf0	equ	0xFEF
 35972                           postinc0	equ	0xFEE
 35973                           fsr0h	equ	0xFEA
 35974                           fsr0l	equ	0xFE9
 35975                           wreg	equ	0xFE8
 35976                           indf1	equ	0xFE7
 35977                           postdec1	equ	0xFE5
 35978                           plusw1	equ	0xFE3
 35979                           fsr1h	equ	0xFE2
 35980                           fsr1l	equ	0xFE1
 35981                           indf2	equ	0xFDF
 35982                           postinc2	equ	0xFDE
 35983                           postdec2	equ	0xFDD
 35984                           plusw2	equ	0xFDB
 35985                           fsr2h	equ	0xFDA
 35986                           fsr2l	equ	0xFD9
 35987                           status	equ	0xFD8
 35988                           
 35989                           	psect	rparam
 35990  0000                     tosu	equ	0xFFF
 35991                           tosh	equ	0xFFE
 35992                           tosl	equ	0xFFD
 35993                           pclath	equ	0xFFA
 35994                           tblptru	equ	0xFF8
 35995                           tblptrh	equ	0xFF7
 35996                           tblptrl	equ	0xFF6
 35997                           tablat	equ	0xFF5
 35998                           prodh	equ	0xFF4
 35999                           prodl	equ	0xFF3
 36000                           intcon	equ	0xFF2
 36001                           intcon2	equ	0xFF1
 36002                           intcon3	equ	0xFF0
 36003                           indf0	equ	0xFEF
 36004                           postinc0	equ	0xFEE
 36005                           fsr0h	equ	0xFEA
 36006                           fsr0l	equ	0xFE9
 36007                           wreg	equ	0xFE8
 36008                           indf1	equ	0xFE7
 36009                           postdec1	equ	0xFE5
 36010                           plusw1	equ	0xFE3
 36011                           fsr1h	equ	0xFE2
 36012                           fsr1l	equ	0xFE1
 36013                           indf2	equ	0xFDF
 36014                           postinc2	equ	0xFDE
 36015                           postdec2	equ	0xFDD
 36016                           plusw2	equ	0xFDB
 36017                           fsr2h	equ	0xFDA
 36018                           fsr2l	equ	0xFD9
 36019                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    866
    Data        38
    BSS         2031
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     73     160
    BANK1           256      0     250
    BANK2           256      0     195
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), 
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(COMRAM[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(COMRAM[2]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_set_defaults@data_array(COMRAM[2]), i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), 
		 -> i2c_display_send_init_sequence@init_sequence(COMRAM[9]), _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _i2c_display_send_init_sequence->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    __bootloader_find_file->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_status
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_checked
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u16
    __display_itoa_u32->___lldiv
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_format_drive
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  615017
                                             92 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   54376
                        __ui_encoder
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    2160
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   52216
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32113
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6638
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138279
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62249
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53713
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35431
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7929
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22251
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7123
                                             39 COMRAM     8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7483
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    6350
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    3009
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106628
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106628
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101464
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51483
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49725
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24963
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13866
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 COMRAM     4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   83571
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4    7705
                                             22 COMRAM     5     1      4
__fill_buffer_get_bootloader_details
           __fill_buffer_get_display
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    3111
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        1     1      0    2714
                                             19 COMRAM     1     1      0
                     __flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   72553
                                             53 COMRAM    11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   52238
                                             35 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   48829
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3544
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2676
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    2206
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   45285
                                             32 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    4369
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    4530
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    4505
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0    8969
                                             21 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   13266
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    8     2      6    8561
                                             13 COMRAM     8     2      6
                            ___lldiv
                            ___llmod
                             ___wmul
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7141
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    4437
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    4439
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    4143
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2121
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3341
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    2092
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19573
                                             46 COMRAM     7     1      6
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   19194
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
         _ui_get_status
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C3       9       76.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BC      31        0.0%
DATA                 0      0     8BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 21 22:26:30 2019

                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E79  
              __end_of_i2c_display_send_init_sequence 6D5C  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 6D30  
                                 __system_timer0_init 6FD0  
                                                  _os 0060  
                                       _USBDeviceInit 3376  
                                 ___wmul@multiplicand 0003  
                                  _USBCheckHIDRequest 4266  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 00ED  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 000B  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4CF0  
                                                 l210 5680  
                                                 l220 3FB2  
                                                 l141 33E4  
                                                 l214 57B2  
                                                 l310 50DE  
                                                 l150 2CBA  
                                                 l143 3420  
                                                 l303 6B92  
                                                 l151 2CB2  
                                                 l320 629A  
                                                 l208 5666  
                                                 l224 4034  
                                                 l304 6B90  
                                                 l152 2CB0  
                                                 l241 4B0A  
                                                 l233 4A5E  
                                                 l161 2D32  
                                                 l242 4AD2  
                                                 l330 4C9A  
                                                 l322 62E4  
                                                 l235 4A68  
                                                 l331 4C60  
                                                 l251 3912  
                                                 l411 42B4  
                                                 l219 400A  
                                                 l139 33BC  
                                                 l171 2DC0  
                                                 l163 2D48  
                                                 l155 2CD4  
                                                 l252 38F8  
                                                 l412 4282  
                                                 l260 4636  
                                                 l164 2D54  
                                                 l156 2CE4  
                                                 l237 4ACA  
                                                 l333 4C80  
                                                 l309 50E4  
                                                 l173 2DE4  
                                                 l165 2D7C  
                                                 l157 2CEC  
                                                 l238 4A92  
                                                 l422 42D6  
                                                 l414 42C6  
                         __end_of_USBStdGetDscHandler 35FE  
                                                 l262 46AA  
                                                 l350 41C4  
                                                 l166 2D86  
                                                 l158 2D00  
                                                 l183 3D9E  
                                                 l191 3AD4  
                                                 l423 42EE  
                                                 l415 42A0  
                                                 l271 34EA  
                                                 l343 4222  
                                                 l175 2E00  
                                                 l159 2D0C  
                                                 l328 4C18  
                                                 l248 389C  
                                                 l424 42FA  
                                                 l360 14FA  
                                                 l272 3578  
                                                 l352 41CA  
                                                 l344 4194  
                                                 l168 2D98  
                                                 l185 3DC8  
                                                 l329 4C1C  
                                                 l249 387A  
                                                 l521 3C72  
                                                 l425 4312  
                                                 l361 1500  
                                                 l281 5174  
                                                 l353 41E8  
                                                 l610 619C  
                                                 l178 6A8E  
                                                 l418 431E  
                                                 l530 4D80  
                                                 l274 3580  
                                                 l282 5102  
                                                 l354 4204  
                                                 l346 419E  
                                                 l187 3E46  
                                                 l603 61A4  
                                                 l179 6A9C  
                                                 l371 1620  
                                                 l363 156C  
                                                 l275 35D6  
                                                 l347 41A4  
                                                 l620 04BE  
                                                 l604 6168  
                                                 l372 163C  
                                                 l268 35E6  
                                                 l348 41AA  
                                                 l621 04C8  
                                                 l381 1734  
                                                 l365 15B4  
                                                 l277 35DE  
                                                 l269 34D6  
                                                 l285 518A  
                                                 l349 41BE  
                                                 l710 4358  
                                                 l702 1466  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6184  
                                                 l518 3C7A  
                                                 l534 4DE6  
                                                 l374 16A2  
                                                 l286 5114  
                                                 l703 147E  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3BEE  
                                                 l375 16AE  
                                                 l367 15D6  
                                                 l287 511A  
                                                 l295 6938  
                                                 l712 436E  
                                                 l704 1496  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6190  
                                                 l800 5AE8  
                                                 l376 1728  
                                                 l288 5138  
                                                 l296 6936  
                                                 l721 43FA  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6196  
                                                 l561 1B0C  
                                                 l529 4E1C  
                                                 l369 1656  
                                                 l722 43E4  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1BF8  
                                                 l562 1AF6  
                                                 l546 4DEE  
                                                 l810 5ADA  
                                                 l715 439E  
                                                 l651 07CC  
                                                 l571 1B28  
                                                 l563 1ACA  
                                                 l555 19C8  
                                                 l379 16E2  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1AD2  
                                                 l804 5AB6  
                                                 l661 5708  
                                                 l741 3CAE  
                                                 l733 440C  
                                                 l645 0784  
                                                 l573 1B3A  
                                                 l901 667A  
                                                 l805 5ABE  
                                                 l750 3CE2  
                                                 l718 43AA  
                                                 l670 246A  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1AEA  
                                                 l806 5AC6  
                                                 l751 3CEE  
                                                 l719 43C4  
                                                 l671 2474  
                                                 l575 1B5C  
                                                 l559 19EA  
                                                 l752 3D00  
                                                 l680 25A2  
                                                 l672 2488  
                                                 l648 07CE  
                                                 l592 39D2  
                                                 l576 1B64  
                                                 l808 5AD0  
                                                 l753 3D0C  
                                                 l737 441C  
                                                 l665 25B8  
                                                 l649 07A8  
                                                 l577 1B88  
                                                 l754 3D1E  
                                                 l674 24D2  
                                                 l666 240A  
                                                 l690 12C6  
                                                 l586 1BDA  
                                                 l659 56F2  
                                                 l747 3D60  
                                                 l755 3D54  
                                                 l675 24FA  
                                                 l691 12D2  
                                                 l932 54E0  
                                                 l748 3CDA  
                                                 l668 25DC  
                                                 l676 252A  
                                                 l684 14AC  
                                                 l692 12F2  
                                                 l596 3A6A  
                                                 l764 64BE  
                                                 _BDT 000D00  
                                                 l677 253C  
                                                 l669 245E  
                                                 l693 133C  
                                                 l685 1220  
                                                 l597 3A64  
                                                 l589 1BE2  
                                                 l861 48A0  
                                                 l678 2542  
                                                 l694 1316  
                                                 l870 48EE  
                                                 l862 48AE  
                                                 l679 2556  
                                                 l687 14D0  
                                                 l695 1382  
                                                 l599 3A6E  
                                                 l767 64F4  
                                                 l871 48F6  
                                                 l696 137A  
                                                 l688 12C0  
                                                 l880 6310  
                                                 l864 4918  
                                                 l872 48FE  
                                                 l873 4908  
                                                 l865 48CE  
                                                 l938 5540  
                                                 l698 1396  
                                                 l866 495C  
                                                 l699 13FE  
                                                 l883 6336  
                                                 l867 48D6  
                                                 l892 668C  
                                                 l884 633E  
                                                 l868 48DE  
                                                 l893 6652  
                                                 l869 48E6  
                                                 l974 70FA  
                                                 l895 665C  
                                                 l899 666E  
                                                 _LBA 0087  
                                                 _LUN 01E6  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                            __size_of__display_failed 02F2  
                                         _start_line1 8DE8  
                                         _start_line2 8E60  
                                         _start_line3 8EA6  
                                         _start_line4 8E16  
                                  api_prepare@command 001B  
                                          _USBSuspend 6CD2  
                                  _internalFlash_read 6B9E  
                              __end_of_display_update 5FD0  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 2C92  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                            __size_of__display_verify 0128  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 007F  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 5578  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 0017  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1112 7224  
                                                l1121 71C2  
                                                l1041 6BF2  
                                                l1042 6BFC  
                                                l1133 71CE  
                                                l1127 721C  
                                                l2007 6110  
                                                l2200 65FE  
                                                l2120 4B14  
                                                l1048 6F5E  
                                                l2201 6602  
                                                l1161 6860  
                                                l1153 6DF2  
                                                l1049 6F4C  
                                                l2009 6162  
                                                l2202 6606  
                                                l2130 4B38  
                                                l2122 4B18  
                                                l2210 29B4  
                                                l1162 6844  
                                                l1154 6DE4  
                                                l2034 45E8  
                                                l2203 660A  
                                                l2131 4B3C  
                                                l2123 4B1C  
                                                l1155 6E06  
                                                l1075 705A  
                                                l1139 71BA  
                                                l2043 45D2  
                                                l1251 3EAE  
                                                l2204 660E  
                                                l2132 4B40  
                                                l2124 4B20  
                                                l2220 2A42  
                                                l2212 29C2  
                                                l1156 6DE8  
                                                l2205 6612  
                                                l2133 4B44  
                                                l2125 4B24  
                                                l2221 2A46  
                                                l1157 6DEC  
                                                l2037 455E  
                                                l1245 3F4E  
                                                l1261 3F0E  
                                                l1253 3EC6  
                                                l2150 178A  
                                                l2134 4B48  
                                                l2126 4B28  
                                                l2230 2A6A  
                                                l2222 2A4A  
                                                l2214 29FA  
                                                l1190 653E  
                                                l2046 5EA4  
                                                l2302 6D6C  
                                                l1246 3E8C  
                                                l2143 187E  
                                                l2151 179A  
                                                l2119 4B60  
                                                l2135 4B4C  
                                                l2127 4B2C  
                                                l2231 2A6E  
                                                l2223 2A4E  
                                                l1191 6522  
                                                l1167 59D8  
                                                l1263 3F34  
                                                l1255 3ED6  
                                                l2160 17FA  
                                                l2152 17AA  
                                                l2144 175C  
                                                l2136 4B50  
                                                l2128 4B30  
                                                l2216 2A8A  
                                                l2232 2A72  
                                                l2224 2A52  
                                                l1600 2BA2  
                                                l1520 47BE  
                                                l1168 59BC  
                                                l2304 6D76  
                                                l2320 0202  
                                                l1280 40C6  
                                                l2241 6E82  
                                                l2161 17FE  
                                                l2153 17BA  
                                                l2137 4B54  
                                                l2129 4B34  
                                                l2233 2A76  
                                                l2225 2A56  
                                                l2217 2A36  
                                                l1441 5036  
                                                l1601 2B74  
                                                l1521 47C4  
                                                l2081 1C5A  
                                                l2321 0188  
                                                l1257 3EE6  
                                                l1249 3E9E  
                                                l2170 1822  
                                                l2162 1802  
                                                l2154 17CA  
                                                l2146 1760  
                                                l2138 4B58  
                                                l2234 2A7A  
                                                l2226 2A5A  
                                                l2218 2A3A  
                                                l1434 4FD6  
                                                l1530 4844  
                                                l1522 47CA  
                                                l2306 6D84  
                                                l1274 415A  
                                                l1282 40EA  
                                                l2171 1826  
                                                l2163 1806  
                                                l2155 17DA  
                                                l2147 1764  
                                                l2139 4B5C  
                                                l2235 2A7E  
                                                l2227 2A5E  
                                                l2219 2A3E  
                                                l1603 2C1C  
                                                l1427 67EA  
                                                l1531 484A  
                                                l1523 47D0  
                                                l2083 1E24  
                                                l2331 0458  
                                                l2323 033E  
                                                l2411 5FF4  
                                                l2251 538A  
                                                l1259 3EFE  
                                                l1283 410E  
                                                l1275 408C  
                                                l2180 184A  
                                                l2172 182A  
                                                l2164 180A  
                                                l2156 17EA  
                                                l2148 1768  
                                                l2236 2A82  
                                                l2228 2A62  
                                                l1604 2BE4  
                                                l1620 1008  
                                                l1612 0F60  
                                                l1540 266A  
                                                l1532 487C  
                                                l1516 47EE  
                                                l1524 47D6  
                                                l2420 4A32  
                                                l2084 1D12  
                                                l2324 0310  
                                                l2181 184E  
                                                l2173 182E  
                                                l2165 180E  
                                                l2157 17EE  
                                                l2149 177A  
                                                l2237 2A86  
                                                l2229 2A66  
                                                l1437 4FF6  
                                                l1429 67F6  
                                                l1621 0FDA  
                                                l1613 0F32  
                                                l1541 263C  
                                                l1525 47DC  
                                                l1517 47B2  
                                                l2421 496E  
                                                l2085 1D3A  
                                                l2333 048A  
                                                l2317 003E  
                                                l2405 6006  
                                                l1285 412A  
                                                l2190 186E  
                                                l2174 1832  
                                                l2166 1812  
                                                l2158 17F2  
                                                l2238 2B16  
                                                l1606 2C70  
                                                l1630 107A  
                                                l1526 47E2  
                                                l2422 49C4  
                                                l2086 1DE2  
                                                l2326 039C  
                                                l2414 5FFA  
                                                l2406 5FDC  
                                                l1286 414A  
                                                l1278 40A0  
                                                l2191 1872  
                                                l2183 1852  
                                                l2175 1836  
                                                l2167 1816  
                                                l2159 17F6  
                                                l1439 5016  
                                                l1607 2C42  
                                                l3223 60BC  
                                                l1471 2F8E  
                                                l1623 11A8  
                                                l1615 0FB4  
                                                l1543 2744  
                                                l1527 47E8  
                                                l1519 47B8  
                                                l2327 03C0  
                                                l2319 00B4  
                                                l2247 533A  
                                                l1279 40B2  
                                                l2192 1876  
                                                l2184 1856  
                                                l2176 183A  
                                                l2168 181A  
                                                l3304 69D6  
                                                l3224 60B0  
                                                l1640 11DC  
                                                l1616 0F86  
                                                l1552 3258  
                                                l1544 2716  
                                                l1528 4852  
                                                l2432 54BE  
                                                l2424 4A1A  
                                                l2440 0CF8  
                                                l2193 187A  
                                                l2185 185A  
                                                l2177 183E  
                                                l2169 181E  
                                                l3305 69CE  
                                                l1481 2FFE  
                                                l1473 2FA2  
                                                l1641 11AE  
                                                l1633 10F8  
                                                l1625 1058  
                                                l1561 3354  
                                                l1553 322A  
                                                l1537 2616  
                                                l1529 483E  
                                                l2425 4A1C  
                                                l2281 5E18  
                                                l2329 0426  
                                                l2441 0D60  
                                                l2409 5FE8  
                                                l2186 185E  
                                                l2178 1842  
                                                l1618 1186  
                                                l1634 10CA  
                                                l1626 102A  
                                                l1570 22B2  
                                                l1650 2814  
                                                l1562 3326  
                                                l1546 2798  
                                                l1538 25E8  
                                                l2426 4A26  
                                                l2442 0DDA  
                                                l2187 1862  
                                                l2179 1846  
                                                l3227 60E4  
                                                l1483 3016  
                                                l1475 2FB8  
                                                l1571 2284  
                                                l1555 32AC  
                                                l1547 276A  
                                                l2188 1866  
                                                l3308 69EE  
                                                l3228 60F2  
                                                l1580 23B8  
                                                l1652 2896  
                                                l1556 327E  
                                                l2444 0E3A  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 6616  
                                                l2189 186A  
                                                l3309 69F8  
                                                l1661 2E3C  
                                                l1485 302A  
                                                l1477 2FCE  
                                                l1637 1148  
                                                l1629 10A8  
                                                l1573 2306  
                                                l1653 2868  
                                                l2701 592A  
                                                l2461 0BF6  
                                                l2445 0E6C  
                                                l2437 0C4C  
                                                l2198 65FA  
                                                l2710 6AFA  
                                                l1670 2F58  
                                                l1662 2E0E  
                                                l1638 111A  
                                                l1574 22D8  
                                                l1646 27EE  
                                                l1558 3300  
                                                l2702 5946  
                                                l3510 5B9C  
                                                l2470 0B6A  
                                                l2462 09FE  
                                                l2454 08A0  
                                                l2446 0E9A  
                                                l2438 0C70  
                                                l1735 65E6  
                                                l2711 6B2A  
                                                l1671 2F2A  
                                                l1487 303E  
                                                l1479 2FE6  
                                                l1567 225E  
                                                l1655 2942  
                                                l1647 27C0  
                                                l1559 32D2  
                                                l1591 36DA  
                                                l2703 5962  
                                                l2279 5DB6  
                                                l2471 0BA6  
                                                l2447 0EF6  
                                                l1727 5C78  
                                                l1736 65A4  
                                                l2800 5AAC  
                                                l1664 2E90  
                                                l1576 2392  
                                                l1568 2230  
                                                l1656 2914  
                                                l1592 36AC  
                                                l2704 5968  
                                                l2560 4EA2  
                                                l2456 092A  
                                                l1728 5CA4  
                                                l1753 5D46  
                                                l1665 2E62  
                                                l1577 235A  
                                                l1649 2842  
                                                l1585 3632  
                                                l2705 596E  
                                                l2553 5F64  
                                                l2473 0BC2  
                                                l2465 0A3A  
                                                l2457 0992  
                                                l2449 0F18  
                                                l1738 65CC  
                                                l1754 5D50  
                                                l1682 3106  
                                                l1586 3604  
                                                l2562 4EAE  
                                                l2458 09EC  
                                                l2715 51DC  
                                                l1667 2EE4  
                                                l1579 23E6  
                                                l1691 3202  
                                                l1683 30D8  
                                                l2651 46FC  
                                                l2467 0AE8  
                                                l1756 5D88  
                                                l1780 63AE  
                                                l1772 6758  
                                                l1668 2EB6  
                                                l1676 6580  
                                                l1692 31D4  
                                                l1588 3686  
                                                l2660 3742  
                                                l2652 470A  
                                                l3508 5BA4  
                                                l2468 0BAC  
                                                l1781 63B8  
                                                l1773 6762  
                                                l2709 6B1A  
                                                l1597 2B4E  
                                                l1677 6552  
                                                l1685 315A  
                                                l1589 3658  
                                                l2653 471C  
                                                l3509 5B3C  
                                                l2469 0AF2  
                                                l2806 5834  
                                                l1758 5DA6  
                                                l3294 66C0  
                                                l1598 2B20  
                                                l1686 312C  
                                                l2670 37C8  
                                                l2654 472E  
                                                l2566 6E44  
                                                l2719 5246  
                                                l3295 66B8  
                                                l2671 37E2  
                                                l2663 3790  
                                                l2655 473C  
                                                l2575 6BD2  
                                                l2559 4EE4  
                                                l1688 31AE  
                                                l2648 4782  
                                                l2656 4764  
                                                l1880 6C88  
                                                l2809 5870  
                                                l1689 3180  
                                                l2665 3796  
                                                l2681 4F32  
                                                l1786 6FCC  
                                                l3298 66E0  
                                                l3482 539C  
                                                l2842 5BEC  
                                                l3490 608C  
                                                l1970 55E8  
                                                l3299 66EA  
                                                l2843 5BE0  
                                                l2667 380A  
                                                l2691 21F2  
                                                l2683 4F70  
                                                l3491 604E  
                                                l3484 53D6  
                                                l2668 37B0  
                                                l2692 2220  
                                                l2684 4F3C  
                                                l1884 6C56  
                                                l3485 5414  
                                                l2669 3840  
                                                l2693 21F8  
                                                l2685 4F48  
                                                l3478 69A2  
                                                l2846 5C20  
                                                l2791 6442  
                                                l2847 5C2E  
                                                l2679 4EF8  
                                                l2783 6A6A  
                                                l3496 6DCE  
                                                l1968 5604  
                                                l2784 6A46  
                                                l3497 6DBE  
                                                l1969 559E  
                                                l2785 6A78  
                                                l2698 5974  
                                                l2786 6A58  
                                                l2699 590E  
                                                l2797 5A78  
                           ?__offset_from_file_number 0001  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8DB8  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8C82  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E79  
                               __end_of_checked_line4 8D17  
                                      _bootloader_run 5FD0  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0176  
                                                u7034 3C64  
                                                u7018 3C32  
                                                u7035 3C5E  
                                                u7019 3C46  
                                                u7060 3C9A  
                                                u7300 4DC8  
                                                u7150 5BF0  
                                                u6600 66C4  
                                                u6700 634C  
                                                u7180 60C0  
                                                u7500 4418  
                                                u8028 1348  
                                                u8029 135C  
                                                u6710 6358  
                                                u6630 69DA  
                                                u7430 43E0  
                                                u8070 1438  
                                                u9030 16C8  
                               ??_USBCtrlTrfTxService 0001  
                                                u6720 6364  
                                                u8080 143A  
                                                u9200 074C  
                                                u6730 6370  
                                                u8170 6822  
                                                u9210 075E  
                                                u9130 062C  
                                                u6740 637C  
                                                u6708 634E  
                                                u7700 6C84  
                                                u7460 43F6  
                                                u9108 055C  
                                                u9109 0570  
                                                u9310 1EB0  
                                                u6750 6386  
                                                u6718 635A  
                                                u7710 6C52  
                                                _UCFG 000F39  
                                                u6728 6366  
                                                u7480 4408  
                                                u9240 07D6  
                                                u6825 5D5C  
                                                u9410 1FC6  
                                                u9330 1EF4  
                                                u6738 6372  
                                                u7570 5002  
                                                u7810 606E  
                                                u8098 1440  
                                                u6915 63C4  
                                                u8099 1454  
                                                u6756 6388  
                                                u6748 637E  
                                                u7580 5022  
                                                u9148 064C  
                                                _UEP0 000F26  
                                                u9149 0660  
                                                _UEP1 000F27  
                                                u9430 1FF4  
                                                u9350 1F2E  
                                                u8631 29CC  
                                                u6935 5CD2  
                                                u7817 6064  
                                                u9450 2024  
                                                u9370 1F5C  
                                                u9290 1E6C  
                                                u7690 30CE  
                                                u9098 052C  
                                                u7770 4ABA  
                                                u8810 35CA  
                                                u7835 2430  
                                                u9099 0540  
                                                u9275 6EBE  
                                                _UEIE 000F37  
                                                u8740 4662  
                                                u9390 1F8C  
                                                u7790 4AFA  
                                                u9625 6A0E  
                                                u7945 1246  
                                                u7777 4AB0  
                                                u8817 35C0  
                                                u9730 615E  
                                                u8780 3542  
                                                u7797 4AF0  
                                                u6998 3C0E  
                                                u8790 3572  
                                                u9750 5B6C  
                                                u6999 3C20  
                                                u9840 51D8  
                                                u7888 24AC  
                                                u7968 127A  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u7889 24C0  
                                                u7969 128E  
                                                u9690 55D4  
                                                u8787 3538  
                                                u8797 3568  
                                                u9775 5E2A  
                                                u9970 39A0  
                                                u9795 6D10  
                                                u9958 396E  
                                                u9959 3982  
                                                u9984 39B6  
                                                u9985 39B0  
                                                u9994 39E8  
                                                u9995 39E2  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                                api_parse@out_idx_ptr 003D  
                                      _ResetSenseData 61C8  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0173  
                                                _main 4888  
                                                _itoa 697E  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4888  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5394  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                             __bootloader_verify_file 0C0E  
                           _ExternalFlash_MediaDetect 725A  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 716A  
                               _display_get_character 6E0C  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DA8  
                                __end_of_failed_line2 8CF4  
                                __end_of_failed_line4 8E71  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4266  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 016B  
                    __end_of__fat_sector_from_cluster 708C  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 2C92  
                                      _hex_file_entry 01C8  
                              _bootloader_get_entries 71FC  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 6CA0  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 0167  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                                               l10214 43AA  
                                               l10510 4A68  
                                               l12120 1E88  
                                               l10096 429A  
                                               l12210 1FFC  
                                               l12106 1E44  
                                               l10370 2FB8  
                                               l10362 2F8E  
                                               l10282 665C  
                                               l10620 25B2  
                                               l12134 1ECC  
                                               l10382 2FFE  
                                               l10374 2FCE  
                                               l10366 2FA2  
                                               l10542 604E  
                                               l10286 667A  
                                               l10462 6DBE  
                                               l13102 4E9A  
                                               l12208 1FF4  
                                               l12160 1F36  
                                               l11522 29FA  
                                               l11514 29C2  
                                               l12170 1F5C  
                                               l10386 3016  
                                               l10378 2FE6  
                                               l14002 0B6A  
                                               l11508 29B4  
                                               l12172 1F64  
                                               l12148 1F10  
                                               l13036 49C4  
                                               l13108 4EA6  
                                               l11630 6E82  
                                               l11614 2A8A  
                                               l10398 3046  
                                               l12186 1FA8  
                                               l10770 67EE  
                                               l10764 67E2  
                                               l13180 4F40  
                                               l12198 1FCE  
                                               l13318 33B4  
                                               l14128 2D90  
                                               l11930 05FC  
                                               l13346 3418  
                                               l15310 19AE  
                                               l13624 37DE  
                                               l13456 19E2  
                                               l12912 530C  
                                               l12760 5C42  
                                               l11698 462E  
                                               l12498 5B3C  
                                               l12930 535C  
                                               l15308 1896  
                                               l12828 45E8  
                                               l12794 4540  
                                               l15294 5B00  
                                               l13870 0C68  
                                               l15296 5B34  
                                        spi_tx@length 0003  
                                  ?__flash_get_status 000D  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5C40  
                                               ?_utoa 0008  
                                               u10200 1C34  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10034 3A3A  
                                               u10018 3A0A  
                                               u10035 3A34  
                                               u10019 3A1C  
                                               u10140 45DE  
                                               u11005 6700  
                                               u10205 1C2A  
                                               u10150 45E8  
                                               u10310 5390  
                                               u10225 1CCC  
                                               u10410 4994  
                                               u10330 00A2  
                                               u10430 49F0  
                                               u10190 5E14  
                                               u10510 4E64  
                                               u12030 4144  
                                               u10600 4F6E  
                                               u10280 5340  
                                               u11081 6D3A  
                                               u10550 4EC8  
                                               u13007 65D0  
                                               u10800 19DE  
                                               u13017 65DA  
                                     __end_of___llmod 6104  
                                               u10650 33D8  
                              __end_of_USBDeviceTasks 2E08  
                                               u10490 5F30  
                                               u11370 0CBA  
                                               u10820 1A12  
                                               u10485 7010  
                                               u11470 08EC  
                                               u10680 347C  
                                               u11900 550E  
                                               u10990 1BBC  
                                               u11790 2E04  
                                               u11880 54FA  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11980 40D8  
                                               u12987 6F52  
                                               u12997 65BE  
                                     __end_of___lwdiv 66F4  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0016  
                                     __end_of___lwmod 6A02  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 002D  
                                _file_minimum_address 0141  
                                    ??__display_start 001D  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FB  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 00D2  
                           __end_of__find_nth_cluster 5616  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 1C16  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 4D6C  
                     __end_of_internalFlash_getBuffer 71B6  
                     __end_of_USBCtrlEPAllowDataStage 56B4  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6038  
                 i2c_display_send_init_sequence@F6804 02B2  
                       __end_of_MSDTransferTerminated 64F6  
                                        _gblCBWLength 0177  
                           ??_internalFlash_writePage 000B  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                              __end_of_ResetSenseData 622A  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 002F  
                           __data_sector_from_cluster 7186  
                           fat_get_format_status@cntr 002E  
                                               pclath 000FFA  
                                     __end_of_ui_init 70F2  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 009F  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 5F66  
                          __end_of__display_rebooting 65A2  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5BBE  
                               hexCharsToUint8@retVal 0006  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 6EF8  
                                      _MSDReadHandler 2408  
                        __size_of_USBStdSetCfgHandler 00E0  
               __bootloader_check_address@byte_status 000B  
                       internalFlash_readPage@address 0018  
                                     __initialization 524A  
                           __end_of__flash_get_status 6CD2  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                                 _system_minimal_init 70CE  
               __end_of_ExternalFlash_MediaInitialize 7042  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7028  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 015D  
                                        __end_of_main 4964  
                                        __end_of_itoa 69C0  
                       __end_of_system_encoder_enable 714A  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 654C  
                                        __end_of_utoa 5438  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 6342  
                                    _timer_pseudo_isr 6BD4  
                       fat_read_from_file_fast@offset 00BA  
                            __parse_command_short@cmd 0024  
                  fat_read_from_file_fast@read_length 00BE  
                                    __end_of_i2c_init 71AC  
                       fat_read_from_file_fast@sector 00B6  
                            __end_of__i2c_acknowledge 71D4  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 0083  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 70A4  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 0165  
                                api_prepare@outBuffer 0019  
                                              ??_main 005D  
                                    __end_of__i2c_get 71CA  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 0100  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00CC  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 5DAA  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 725A  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7256  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00DE  
                               ??__bootloader_program 00C4  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                _i2c_eeprom_writeByte 6A02  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                          __end_of__display_suspended 3224  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 6F44  
                              __flash_write_to_buffer 6744  
                                _start_from_byte_next 0095  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 70A4  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 001D  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 7222  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 6826  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 00C4  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 664E  
                                    __end_of__get_fbr 19BE  
                                    __end_of__get_mbr 4BE0  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 0044  
                                   ??__display_verify 001D  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 25E2  
                                 _flash_pages_written 015F  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5438  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 715A  
                   __bootloader_program@page_to_write 00FD  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00AD  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 4EE6  
                        __end_of__flash_set_page_size 5CBA  
                                     _hexCharsToUint8 6FF0  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 5E8C  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                              ___wmul 6F1E  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2866 0003  
                                          _SoftDetach 009B  
                                           ??___lwmod 0005  
                                              _buffer 02C3  
                                   _USBEnableEndpoint 6A7E  
                       __bootloader_program@address32 00F6  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6038  
                                  ?_fat_get_file_size 0036  
                                              _memset 6DB4  
                    __end_of__sector_from_file_number 6DB4  
                                              clear_0 52A4  
                                              clear_1 52B8  
                                              clear_2 52CA  
                                              clear_3 52D6  
                                              clear_4 52E2  
                           _ExternalFlash_SectorWrite 6C3C  
                                   api_parse@inBuffer 0036  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                                              _reboot 7042  
                __bootloader_check_address@worst_case 000A  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 408A  
                                              _spi_tx 63F2  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0009  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 6E86  
                                              _tx_buf 02BB  
                          __parse_command_long@length 0035  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 6DE0  
                        __end_of_jump_to_main_program 7238  
                               __end_of_fat_find_file 45EC  
                      __parse_command_long@out_buffer 0031  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 0092  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 8C6C  
                                 __end_of__i2c_open_1 7074  
                          __size_of__find_nth_cluster 009E  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 628A  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 622A  
                                              tblptru 000FF8  
                                    __end_of_spi_init 6A7E  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 6166  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 7250  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AC  
                          ??_APP_DeviceCustomHIDTasks 0041  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 664E  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 52EA  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0172  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 71C0  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 6B2E  
                   __end_of_failed_line3_noNextRecord 8E16  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 5EFA  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 6ABA  
                            _bootloader_get_file_size 7116  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 725E  
                                        __pidataBANK1 70BA  
                                        __pidataBANK2 7128  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7210  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7206  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 00B2  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 0F2C  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4CA8  
                                 _userInterfaceStatus 0098  
                                 display_prepare@mode 0023  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3C82  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                           __end_of_i2c_set_frequency 6E0C  
                       __size_of__display_programming 01CA  
                                   __end_of_i2c_reset 7178  
                             __end_of_system_delay_ms 6F68  
                                  __size_of_api_parse 0124  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0163  
                      __end_of_failed_line3_startCode 8CBD  
                                  _flash_sector_write 6794  
                                  __size_of__spi_init 0038  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8D98  
                                        _failed_line2 8CE2  
                                        _failed_line4 8E69  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A1  
                           __end_of_SYSTEM_Initialize 66A2  
                                   __end_of__i2c_read 5A28  
                                   __end_of__i2c_send 7232  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 50F6  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7222  
                                         ?__i2c_start 0001  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 3A74  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0149  
                                           ?_i2c_init 0001  
                                    _mediaInformation 01DF  
                             __end_of_hexCharsToUint8 700C  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5394  
                                       __flash_wakeup 65A2  
                            __fill_buffer_get_display 4EE6  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 0073  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 408A  
               __end_of_APP_DeviceCustomHIDInitialize 6C3C  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 6C08  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                           __bootloader_check_address 4964  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                                             ?___wmul 0001  
                                          _fat_format 1E3C  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001D  
                                         __i2c_open_1 705C  
                                    _USBCtrlEPService 504A  
                                             ?_ui_run 0001  
                                          _ep_data_in 015A  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0139  
                                  __display_clear@row 0003  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 2E08  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3962  
                                  _USBCheckStdRequest 4184  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                          _flash_init 7178  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4B12  
                                   __end_of__get_data 6E86  
                                 _USBStdSetCfgHandler 45EC  
                                  __display_done@cntr 001D  
                                   __end_of__get_root 2B1A  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8D68  
                                          _done_line2 8E9D  
                                          _done_line3 8D58  
                                          _done_line4 8D48  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 70BA  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0161  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 5C40  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 6C08  
                                        __normal_mode 62EA  
                          __end_of_APP_DeviceMSDTasks 7104  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 64A0  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 7194  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00EC  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 5DAA  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 5D32  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 68B4  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 00B8  
                      __end_of_bootloader_get_entries 7206  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 384A  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3962  
                                     hexCharToUint8@c 0001  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
                                   __end_of__spi_init 6B66  
                         __size_of_USBCheckHIDRequest 00E2  
                                             __Lparam 0000  
                                _jump_to_main_program 7232  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 001D  
                             __end_of_MSDErrorHandler 3D88  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 5E1C  
                                          _last_error 0096  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                   __end_of__data_sector_from_cluster 7194  
                            ?_internalFlash_erasePage 0009  
                                __end_of_found_line3b 8E96  
                                             ___lldiv 5BBE  
                                    ??_USBDeviceTasks 0020  
                                     __size_of___wmul 0026  
                                             ___llmod 609E  
                                             ___lwdiv 66A2  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 69C0  
                                   _fast_read_cluster 00B0  
                                  __display_rebooting 654C  
                         __end_of__parse_format_drive 524A  
                         __size_of_internalFlash_read 0036  
                                   ?__i2c_acknowledge 0001  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 6AF4  
                                             __pcinit 524A  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                              __display_itoa_u32@cntr 0014  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u16@text 001B  
                              __display_itoa_u32@text 0012  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 4888  
                                             __ptext1 408A  
                                     __display_failed 0F2C  
                                             __ptext2 713A  
                                             __ptext3 6D30  
                                             __ptext4 3E8A  
                                             __ptext5 6BD4  
                                             __ptext6 7194  
                                             __ptext7 716A  
                                             __ptext8 70CE  
                                             __ptext9 71A0  
                                             _inPipes 006D  
                                     __size_of_ui_run 00FA  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A2  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                  __display_itoa_u32@number_of_digits 0015  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 6FF0  
                             __read_value_from_offset 686E  
                             _fat_read_from_file_fast 1C16  
                                        ??_USBSuspend 0018  
                                     __display_search 3224  
                                  __end_of_USBMSDInit 3C82  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 715A  
                                             _msd_cbw 000D40  
                                     __display_verify 35FE  
                                             _msd_csw 000D80  
                                __i2c_not_acknowledge 71B6  
                            __offset_from_file_number 6EAC  
                                             _ui_init 70E0  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 71E8  
                                  __end_of_USB_CD_Ptr 8EA5  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 5B3A  
                                end_of_initialization 52EA  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 64A0  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 222A  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 203C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E81  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 0091  
                           __end_of_MSDProcessCommand 3A74  
                                             itoa@buf 0011  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 014D  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 693C  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
                               ??_USBStdSetCfgHandler 0018  
                     __parse_command_long@out_idx_ptr 0033  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                                  __display_suspended 30D2  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 6D02  
                             _USBCtrlEPAllowDataStage 5616  
                                   __end_of_spi_tx_rx 5878  
                                   __end_of_spi_tx_tx 5AB4  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 71DE  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 71D4  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0024  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 3F8A  
                                             utoa@val 000A  
                                           _MSD_State 00A0  
                                 ?__display_suspended 0001  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 713A  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 001B  
                          _USBStatusStageEnabledFlag1 00A5  
                          _USBStatusStageEnabledFlag2 00A4  
                      __parse_format_drive@out_buffer 0029  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTEbits 000F84  
                      __end_of__flash_write_to_buffer 6794  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0013  
                            ?_internalFlash_writePage 0009  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISCbits 000F94  
                                  api_parse@outBuffer 0039  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00A8  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02C3  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 64F6  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                                ??__display_suspended 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B4  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DA8  
                                       _checked_line2 8C6D  
                                       _checked_line3 8E71  
                                       _checked_line4 8D06  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E25  
                             __size_of__display_start 01D8  
                                     _suspended_line1 8D38  
                                     _suspended_line2 8E4D  
                                     _suspended_line3 8EA5  
                                     _suspended_line4 8D28  
                        __end_of_USBTransferOnePacket 3E8A  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 0011  
                        __end_of__parse_command_short 599C  
               __end_of_internalFlash_pageFromAddress 7028  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 700C  
                                __end_of_reboot_line1 8E40  
                                __end_of_search_line1 8DE8  
                                __end_of_search_line2 8D28  
                                __end_of_search_line3 8CAA  
                                __end_of_search_line4 8E60  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6104  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 121E  
                                    ?_MSDErrorHandler 0001  
                  __find_nth_cluster@sector_in_buffer 003E  
                              _USBCtrlTrfSetupHandler 5878  
                       ??_bootloader_get_rec_checksum 0001  
                      __bootloader_program@entry_page 00CE  
                              __display_checked@start 001F  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00DE  
                             __end_of__display_search 3376  
                               __end_of_USBDeviceInit 34C4  
               __end_of_USBIncrement1msInternalTimers 6FAE  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 6F8C  
                                     ??__display_done 001D  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                                      __end_of___wmul 6F44  
                             __end_of__display_verify 3726  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 3B7C  
                                 _i2c_eeprom_readByte 66F4  
                 __bootloader_program@start_from_byte 00FA  
                         __end_of_system_minimal_init 70E0  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8C82  
                                      __end_of_memcpy 609E  
                                     _MSDRetryAttempt 009C  
                                      __end_of_memset 6DE0  
                                      __end_of_reboot 705C  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                                   _USBBusIsSuspended 00AA  
                                      __end_of_ui_run 4184  
                                      __end_of_spi_tx 644A  
                                 __end_of__ui_encoder 3F8A  
                           __flash_set_page_size@size 0018  
                                 start_initialization 524A  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 716A  
                                 __end_of_api_prepare 47AA  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0018  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 008F  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 57E4  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 175A  
                                 __flash_partial_read 5CBA  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 0200  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 009A  
                                      _hexCharToUint8 6D5C  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 4D6C  
                            _fast_read_cluster_number 00AE  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 2984  
                            __end_of_USBCtrlEPService 50F6  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 6ABA  
                                           __i2c_read 599C  
                                           __i2c_send 722A  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 721A  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7256  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E07  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 0093  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 5E1C  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 000E  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D88  
                                   _programming_line2 8CD0  
                                   _programming_line3 8E81  
                                   _programming_line4 8D78  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0026  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                            ??___wmul 0005  
                                 _USBStdGetDscHandler 34C4  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A0  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01E6  
                                         __pdataBANK2 02B2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 003A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 0024  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0024  
                                  __end_of__i2c_start 722A  
                                            ??_spi_tx 0005  
                                  __end_of__i2c_write 686E  
                            __end_of_system_full_init 68F8  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B5  
                      __end_of_USBStdGetStatusHandler 51A0  
                          ??_system_minimal_init_undo 0001  
                            __fat_sector_from_cluster 7074  
                         api_parse@receivedDataLength 0038  
                                    api_parse@out_idx 003F  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 4A3E  
               __end_of_internalFlash_addressFromPage 6D30  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 6D02  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B6  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 442A  
             __bootloader_program@address_within_page 00D0  
                             __end_of_suspended_line1 8D48  
                             __end_of_suspended_line2 8E57  
                             __end_of_suspended_line3 8EA6  
                             __end_of_suspended_line4 8D38  
                              __end_of_hexCharToUint8 6D88  
                           __size_of__display_checked 0178  
                                           _gblBLKLen 0145  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 6FAE  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 5E8C  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E8F  
                                           __get_data 6E5E  
                                   _flash_sector_read 6ED2  
                    __bootloader_program@return_value 00F2  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 68B4  
                     __end_of_fat_read_from_file_fast 1E3C  
                                           __get_root 2984  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 6B9E  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 6F8C  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 68F8  
                                        _pBDTEntryOut 0079  
                                          ?__i2c_stop 0001  
                                           __read_fat 644A  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8D98  
                           __end_of_programming_line2 8CE2  
                           __end_of_programming_line3 8E88  
                           __end_of_programming_line4 8D88  
                    __end_of_ExternalFlash_SectorRead 6CA0  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 721A  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7210  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 52F0  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 3726  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 442A  
                                  _APP_DeviceMSDTasks 70F2  
                                       __pmediumconst 8C6C  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 2408  
                                           __ptext101 4348  
                                           __ptext110 7104  
                                           __ptext102 3C82  
                                           __ptext111 7028  
                                           __ptext103 3A74  
                                           __ptext120 203C  
                                           __ptext112 725A  
                                           __ptext104 61C8  
                                           __ptext121 7238  
                                           __ptext113 54D8  
                                           __ptext105 6C6E  
                                           __ptext130 724A  
                                           __ptext122 71E8  
                                           __ptext114 46CC  
                                           __ptext106 6ED2  
                                           __ptext131 5F66  
                                           __ptext123 70A4  
                                           __ptext115 6038  
                                           __ptext107 5CBA  
                                           __ptext140 654C  
                                           __ptext132 64F6  
                                           __ptext124 723E  
                                           __ptext116 442A  
                                           __ptext108 56B4  
                                           __ptext141 27BA  
                                           __ptext133 6F68  
                                           __ptext125 7244  
                                           __ptext117 71DE  
                                           __ptext109 71D4  
                                           __ptext150 609E  
                                           __ptext142 222A  
                                           __ptext134 6EF8  
                                           __ptext126 3726  
                                           __ptext118 4EE6  
                                           __ptext151 5BBE  
                                           __ptext143 7116  
                                           __ptext135 47AA  
                                           __ptext127 590A  
                                           __ptext119 6E0C  
                                           __ptext160 69C0  
                                           __ptext152 2E08  
                                           __ptext144 0F2C  
                                           __ptext136 35FE  
                                           __ptext128 6F44  
                                           __ptext161 66A2  
                                           __ptext153 7206  
                                           __ptext145 71F2  
                                           __ptext137 30D2  
                                           __ptext129 7042  
                                           __ptext170 51A0  
                                           __ptext162 6A02  
                                           __ptext154 67DE  
                                           __ptext146 7250  
                                           __ptext138 25E2  
                                           __ptext171 1E3C  
                                           __ptext163 6DE0  
                                           __ptext155 2B1A  
                                           __ptext147 71FC  
                                           __ptext139 3224  
                                           __ptext180 6CA0  
                                           __ptext172 6794  
                                           __ptext164 6826  
                                           __ptext156 7210  
                                           __ptext148 2F7A  
                                           __ptext181 57E4  
                                           __ptext173 6744  
                                           __ptext165 6342  
                                           __ptext157 4F9A  
                                           __ptext149 6F1E  
                                           __ptext182 2984  
                                           __ptext174 5A28  
                                           __ptext166 721A  
                                           __ptext158 697E  
                                           __ptext183 4B12  
                                           __ptext175 639A  
                                           __ptext167 7222  
                                           __ptext159 5394  
                                           __ptext184 175A  
                                           __ptext176 5D32  
                                           __ptext168 722A  
                                           __ptext185 65F8  
                                           __ptext177 6FAE  
                                           __ptext169 6AF4  
                                           __ptext186 6E5E  
                                           __ptext178 65A2  
                                           __ptext187 3D88  
                                           __ptext179 63F2  
                                           __ptext188 0000  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 004A  
                                            ?___lwdiv 0001  
                                           __spi_init 6B2E  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 3E8A  
                                           _idle_rate 00B3  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 46CC  
                                     __i2c_write@data 0006  
                                _file_maximum_address 013D  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 000F  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 3D88  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0021  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 590A  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 6FD0  
                                       _fat_find_file 450C  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                           __display_programming@cntr 001D  
                                   __display_itoa_u32 2F7A  
                                   __display_itoa_u16 4F9A  
                    __size_of_internalFlash_erasePage 006C  
                        __end_of_USBCtrlTrfOutHandler 62EA  
                           __end_of_flash_sector_read 6EF8  
                               ??_USBStdGetDscHandler 0001  
                                 __end_of_found_line1 8DD8  
                                 __end_of_found_line2 8CD0  
                                 __end_of_found_line3 8E9D  
                                 __end_of_found_line4 8D06  
                                         _ep_data_out 0157  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 71F2  
              __size_of_bootloader_get_rec_dataLength 000A  
                       _bootloader_get_rec_dataLength 71E8  
                                       _MSDWriteState 009D  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u16 0019  
                                  ?__display_itoa_u32 000E  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 67DE  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 222A  
                    __end_of_bootloader_get_file_size 7128  
                                         _file_buffer 0280  
                                     _config_internal 0154  
                                          ?__get_root 0001  
                                       _ui_get_status 724A  
                                     _config_external 0151  
                                      __display_start 25E2  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 6E36  
                                         _file_number 00FF  
                                      ___wmul@product 0005  
                                            _LATAbits 000F89  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                          __end_of_USBCheckHIDRequest 4348  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                 ??__display_itoa_u16 001D  
                                 ??__display_itoa_u32 0014  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                            __fat_offset_from_cluster 708C  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                   __bootloader_verify_file@address32 00F1  
                          __end_of_internalFlash_read 6BD4  
                                          ?_api_parse 0036  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                                            _MSDTasks 19BE  
                          _USBDeferINDataStagePackets 00A3  
                                        ??_fat_format 0025  
                                _active_configuration 0175  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 5750  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 57E4  
                                           _spi_tx_tx 5A28  
                                __display_verify@cntr 001F  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 008D  
                               flash_sector_read@data 002A  
                                __display_programming 27BA  
                                   ___wmul@multiplier 0001  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                           __end_of__display_itoa_u16 504A  
                           __end_of__display_itoa_u32 30D2  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DC8  
                                __end_of_verify_line2 8E4D  
                                __end_of_verify_line3 8E8F  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AB  
                   __end_of_ExternalFlash_MediaDetect 725E  
                        __size_of__parse_format_drive 00AA  
                                        _reboot_line1 8E33  
                                        _search_line1 8DD8  
                                        _search_line2 8D17  
                                        _search_line3 8C96  
                                        _search_line4 8E57  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 00C0  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 4F9A  
                        ??_bootloader_get_rec_address 0003  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 6826  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 7250  
                               __display_checked@cntr 0020  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 2408  
                             __end_of_USBStallHandler 693C  
                            __sector_from_file_number 6D88  
                      __end_of_internalFlash_readPage 697E  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 27BA  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 525E  
                                           copy_data1 527E  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 46CC  
                                  __end_of_fat_format 203C  
                                 __display_found@cntr 0019  
                                            _i2c_init 71A0  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 00B8  
                                         ??__i2c_send 0001  
                                        _MSDReadState 009E  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 71C0  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 0012  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8FBF  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7186  
                                      _TransferLength 008B  
                                _bootloader_extension 8FC7  
                          __end_of_USBCheckMSDRequest 4E2E  
                                     api_parse@in_idx 0040  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 6C6E  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 000A  
                                  __end_of_done_line1 8D78  
                                  __end_of_done_line2 8EA3  
                                  __end_of_done_line3 8D68  
                                  __end_of_done_line4 8D58  
                                      __i2c_wait_idle 6342  
                                     _MSDWriteHandler 121E  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 0099  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 71A0  
                                         _found_line1 8DC8  
                                         _found_line2 8CBD  
                                         _found_line3 8E96  
                                         _found_line4 8CF4  
                                            __get_fat 65F8  
                                            __get_fbr 175A  
                                            __get_mbr 4B12  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                  __end_of_ExternalFlash_CapacityRead 7116  
                          _ExternalFlash_CapacityRead 7104  
                             ??_MSDTransferTerminated 000E  
                             __display_suspended@cntr 0001  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u16@value 0019  
                             __display_itoa_u32@value 000E  
                                            _fat_init 714A  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                          __size_of_flash_sector_read 0026  
                                    __display_checked 2B1A  
               __end_of_bootloader_get_rec_recordType 723E  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7238  
                                            __ptext10 705C  
                                            __ptext11 68B4  
                                            __ptext20 6ABA  
                                            __ptext12 70E0  
                                            __ptext21 7232  
                                            __ptext13 7178  
                                            __ptext30 693C  
                                            __ptext22 5FD0  
                                            __ptext14 6A42  
                                            __ptext31 6B9E  
                                            __ptext23 0C0E  
                                            __ptext15 6B2E  
                                            __ptext40 686E  
                                            __ptext32 700C  
                                            __ptext24 085A  
                                            __ptext16 5C40  
                                            __ptext41 644A  
                                            __ptext33 71AC  
                                            __ptext25 0020  
                                            __ptext17 714A  
                                            __ptext50 6E86  
                                            __ptext42 7074  
                                            __ptext34 5EFA  
                                            __ptext26 6FF0  
                                            __ptext18 52F0  
                                            __ptext51 6D88  
                                            __ptext43 708C  
                                            __ptext35 6E36  
                                            __ptext27 5E1C  
                                            __ptext19 6FD0  
                                            __ptext60 71CA  
                                            __ptext52 6EAC  
                                            __ptext44 7186  
                                            __ptext36 622A  
                                            __ptext28 6D5C  
                                            __ptext61 2C92  
                                            __ptext53 450C  
                                            __ptext45 5DAA  
                                            __ptext37 6D02  
                                            __ptext29 4E2E  
                                            __ptext70 5616  
                                            __ptext62 6B66  
                                            __ptext54 5B3A  
                                            __ptext46 4964  
                                            __ptext38 1C16  
                                            __ptext71 4184  
                                            __ptext63 6CD2  
                                            __ptext55 62EA  
                                            __ptext47 5438  
                                            __ptext39 5578  
                                            __ptext80 664E  
                                            __ptext72 45EC  
                                            __ptext64 68F8  
                                            __ptext56 66F4  
                                            __ptext48 5E8C  
                                            __ptext81 64A0  
                                            __ptext73 6DB4  
                                            __ptext65 6F8C  
                                            __ptext57 599C  
                                            __ptext49 6104  
                                            __ptext90 4BE0  
                                            __ptext82 715A  
                                            __ptext74 50F6  
                                            __ptext66 3376  
                                            __ptext58 71B6  
                                            __ptext91 4A3E  
                                            __ptext83 3B7C  
                                            __ptext75 34C4  
                                            __ptext67 504A  
                                            __ptext59 71C0  
                                            __ptext92 70F2  
                                            __ptext84 6C08  
                                            __ptext76 14D6  
                                            __ptext68 5878  
                                            __ptext93 19BE  
                                            __ptext85 6A7E  
                                            __ptext77 5AB4  
                                            __ptext69 3F8A  
                                            __ptext94 3962  
                                            __ptext86 5750  
                                            __ptext78 4D6C  
                                            __ptext95 6166  
                                            __ptext87 628A  
                                            __ptext79 4266  
                                            __ptext96 049C  
                                            __ptext88 384A  
                                            __ptext97 121E  
                                            __ptext89 4CA8  
                                            __ptext98 7256  
                                            __ptext99 6C3C  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 61C8  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6166  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_root 0003  
                         __size_of__display_suspended 0152  
                             __size_of_bootloader_run 0068  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 6AF4  
                   __end_of_failed_line3_addressRange 8C96  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                      __size_of__bootloader_find_file 00A0  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5578  
                       __end_of__bootloader_find_file 54D8  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 65F8  
                      __end_of_USBCtrlTrfSetupHandler 590A  
                                       __size_of_main 00DC  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 0032  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 00BC  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7244  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 723E  
                                 _USBCtrlTrfInHandler 4BE0  
                  _MSDProcessCommandMediaPresent$2390 003C  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 003B  
                              __end_of__i2c_wait_idle 639A  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                            _spi_init 6A42  
                                _USBCtrlTrfOutHandler 628A  
                    __end_of__offset_from_file_number 6ED2  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 4CA8  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 71AC  
                                ?__parse_command_long 002F  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                    __parse_format_drive@return_value 002E  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                 __display_start@cntr 001D  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 2F7A  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 0024  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A6  
                          __size_of__display_itoa_u16 00B0  
                          __size_of__display_itoa_u32 0158  
                     __end_of__fill_buffer_get_status 450C  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 6E5E  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 6E36  
                             _internalFlash_erasePage 5EFA  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0012  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5750  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 56B4  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                                 __end_of_start_line1 8DF8  
                                 __end_of_start_line2 8E69  
                                 __end_of_start_line3 8EA7  
                                 __end_of_start_line4 8E25  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 71DE  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 71CA  
                              bootloader_run@timeslot 005C  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0062  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5B3A  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5AB4  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 6C6E  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 63F2  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 639A  
                SYSTEM_Initialize@pll_startup_counter 0001  
                                     _display_content 0178  
                          __end_of_flash_partial_read 6EAC  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 14D6  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 724A  
                         _bootloader_get_rec_checksum 7244  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 00CC  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 47AA  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8DF8  
                                 _USBCtrlTrfRxService 384A  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 6B66  
                               ??__parse_command_long 0035  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 000F  
                         internalFlash_writePage@page 0009  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 6F68  
                              ??__display_programming 001D  
                             _USBStdFeatureReqHandler 14D6  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4A3E  
                                        ?_api_prepare 0017  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 016D  
                    __size_of_bootloader_get_rec_data 0016  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E33  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 71FC  
                          _bootloader_get_rec_address 71F2  
                               _USBAlternateInterface 01E4  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 6744  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0171  
                           _failed_line3_noNextRecord 8E07  
                          ?__bootloader_check_address 0001  
                     __parse_format_drive@out_idx_ptr 002B  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00A9  
                                      _display_update 5F66  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CAA  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4348  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 6F1E  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 016F  
                             _internalFlash_writePage 4E2E  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3B7C  
                        _USBStatusStageTimeoutCounter 00A7  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 000C  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 5D32  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 6A42  
                                        _verify_line1 8DB8  
                                        _verify_line2 8E40  
                                        _verify_line3 8E88  
                                 __parse_format_drive 51A0  
                                          _USB_CD_Ptr 8EA3  
                                         _power_state 0097  
                                         _USBInHandle 0169  
                            _APP_DeviceCustomHIDTasks 54D8  
                          __end_of_flash_sector_write 67DE  
