

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 25 23:21:31 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=2
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=2
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   215                           	dabs	1,0x600,512,_msd_buffer
   216                           	dabs	1,0xD00,48,_BDT
   217                           	dabs	1,0xD40,31,_msd_cbw
   218                           	dabs	1,0xD80,13,_msd_csw
   219                           	dabs	1,0xD38,8,_CtrlTrfData
   220                           	dabs	1,0xD30,8,_SetupPkt
   221  0000                     
   222                           ; Version 2.00
   223                           ; Generated 27/05/2018 GMT
   224                           ; 
   225                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   226                           ; All rights reserved.
   227                           ; 
   228                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   229                           ; 
   230                           ; Redistribution and use in source and binary forms, with or without modification, are
   231                           ; permitted provided that the following conditions are met:
   232                           ; 
   233                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   234                           ;        conditions and the following disclaimer.
   235                           ; 
   236                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   237                           ;        of conditions and the following disclaimer in the documentation and/or other
   238                           ;        materials provided with the distribution.
   239                           ; 
   240                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   241                           ;        software without specific prior written permission.
   242                           ; 
   243                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   244                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   245                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   246                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   247                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   248                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   249                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   250                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   251                           ; 
   252                           ; 
   253                           ; Code-generator required, PIC18F47J53 Definitions
   254                           ; 
   255                           ; SFR Addresses
   256  0000                     
   257                           	psect	intcode
   258  000008  EF04 F048          	goto	36872	;# 
   259                           
   260                           	psect	intcodelo
   261  000018  EF0C F048          	goto	36888	; ;# 
   262  0000                     
   263                           	psect	idataBANK0
   264  007476                     __pidataBANK0:
   265                           	opt stack 0
   266                           
   267                           ;initializer for _file_number
   268  007476  FF                 	db	255
   269                           
   270                           	psect	idataBANK1
   271  007320                     __pidataBANK1:
   272                           	opt stack 0
   273                           
   274                           ;initializer for _LUN
   275  007320  78                 	db	low _ExternalFlash_MediaInitialize
   276  007321  72                 	db	high _ExternalFlash_MediaInitialize
   277  007322  58                 	db	low _ExternalFlash_CapacityRead
   278  007323  73                 	db	high _ExternalFlash_CapacityRead
   279  007324  EC                 	db	low _ExternalFlash_SectorSizeRead
   280  007325  73                 	db	high _ExternalFlash_SectorSizeRead
   281  007326  72                 	db	low _ExternalFlash_MediaDetect
   282  007327  74                 	db	high _ExternalFlash_MediaDetect
   283  007328  80                 	db	low _ExternalFlash_SectorRead
   284  007329  6E                 	db	high _ExternalFlash_SectorRead
   285  00732A  6E                 	db	low _ExternalFlash_WriteProtectStateGet
   286  00732B  74                 	db	high _ExternalFlash_WriteProtectStateGet
   287  00732C  4E                 	db	low _ExternalFlash_SectorWrite
   288  00732D  6E                 	db	high _ExternalFlash_SectorWrite
   289  00732E  00                 	db	0
   290  00732F  00                 	db	0
   291  007330  00                 	db	0
   292  007331  00                 	db	0
   293  007332  00                 	db	0
   294  007333  00                 	db	0
   295                           
   296                           	psect	idataBANK2
   297  00725E                     __pidataBANK2:
   298                           	opt stack 0
   299                           
   300                           ;initializer for i2c_display_init@F6828
   301  00725E  3A                 	db	58
   302  00725F  1E                 	db	30
   303  007260  39                 	db	57
   304  007261  0C                 	db	12
   305  007262  74                 	db	116
   306  007263  5C                 	db	92
   307  007264  6D                 	db	109
   308  007265  0C                 	db	12
   309  007266  01                 	db	1
   310                           
   311                           ;initializer for __i2c_display_send_init_sequence@F6825
   312  007267  3A                 	db	58
   313  007268  1E                 	db	30
   314  007269  39                 	db	57
   315  00726A  0C                 	db	12
   316  00726B  74                 	db	116
   317  00726C  5C                 	db	92
   318  00726D  6D                 	db	109
   319  00726E  0C                 	db	12
   320  00726F  01                 	db	1
   321                           
   322                           ;initializer for _tx_buf
   323  007270  01                 	db	1
   324  007271  02                 	db	2
   325  007272  03                 	db	3
   326  007273  04                 	db	4
   327  007274  05                 	db	5
   328  007275  06                 	db	6
   329  007276  07                 	db	7
   330  007277  08                 	db	8
   331                           
   332                           	psect	mediumconst
   333  008C24                     __pmediumconst:
   334                           	opt stack 0
   335  008C24  00                 	db	0
   336  008C25                     _suspended_line4:
   337                           	opt stack 0
   338  008C25  44                 	db	68
   339  008C26  72                 	db	114
   340  008C27  03                 	db	3
   341  008C28  63                 	db	99
   342  008C29  6B                 	db	107
   343  008C2A  65                 	db	101
   344  008C2B  6E                 	db	110
   345  008C2C  20                 	db	32
   346  008C2D  7A                 	db	122
   347  008C2E  20                 	db	32
   348  008C2F  46                 	db	70
   349  008C30  6F                 	db	111
   350  008C31  72                 	db	114
   351  008C32  74                 	db	116
   352  008C33  66                 	db	102
   353  008C34  61                 	db	97
   354  008C35  68                 	db	104
   355  008C36  72                 	db	114
   356  008C37  65                 	db	101
   357  008C38  6E                 	db	110
   358  008C39  00                 	db	0
   359  008C3A                     __end_of_suspended_line4:
   360                           	opt stack 0
   361  008C3A                     _done_line4:
   362                           	opt stack 0
   363  008C3A  44                 	db	68
   364  008C3B  72                 	db	114
   365  008C3C  03                 	db	3
   366  008C3D  63                 	db	99
   367  008C3E  6B                 	db	107
   368  008C3F  65                 	db	101
   369  008C40  6E                 	db	110
   370  008C41  20                 	db	32
   371  008C42  7A                 	db	122
   372  008C43  75                 	db	117
   373  008C44  6D                 	db	109
   374  008C45  20                 	db	32
   375  008C46  4E                 	db	78
   376  008C47  65                 	db	101
   377  008C48  75                 	db	117
   378  008C49  73                 	db	115
   379  008C4A  74                 	db	116
   380  008C4B  61                 	db	97
   381  008C4C  72                 	db	114
   382  008C4D  74                 	db	116
   383  008C4E  00                 	db	0
   384  008C4F                     __end_of_done_line4:
   385                           	opt stack 0
   386  008C4F                     _failed_line3_noNextRecord:
   387                           	opt stack 0
   388  008C4F  50                 	db	80
   389  008C50  6C                 	db	108
   390  008C51  04                 	db	4
   391  008C52  74                 	db	116
   392  008C53  7A                 	db	122
   393  008C54  6C                 	db	108
   394  008C55  69                 	db	105
   395  008C56  63                 	db	99
   396  008C57  68                 	db	104
   397  008C58  65                 	db	101
   398  008C59  73                 	db	115
   399  008C5A  20                 	db	32
   400  008C5B  46                 	db	70
   401  008C5C  69                 	db	105
   402  008C5D  6C                 	db	108
   403  008C5E  65                 	db	101
   404  008C5F  65                 	db	101
   405  008C60  6E                 	db	110
   406  008C61  64                 	db	100
   407  008C62  65                 	db	101
   408  008C63  00                 	db	0
   409  008C64                     __end_of_failed_line3_noNextRecord:
   410                           	opt stack 0
   411  008C64                     _failed_line3_startCode:
   412                           	opt stack 0
   413  008C64  46                 	db	70
   414  008C65  65                 	db	101
   415  008C66  68                 	db	104
   416  008C67  6C                 	db	108
   417  008C68  65                 	db	101
   418  008C69  6E                 	db	110
   419  008C6A  64                 	db	100
   420  008C6B  65                 	db	101
   421  008C6C  72                 	db	114
   422  008C6D  20                 	db	32
   423  008C6E  53                 	db	83
   424  008C6F  74                 	db	116
   425  008C70  61                 	db	97
   426  008C71  72                 	db	114
   427  008C72  74                 	db	116
   428  008C73  20                 	db	32
   429  008C74  43                 	db	67
   430  008C75  6F                 	db	111
   431  008C76  64                 	db	100
   432  008C77  65                 	db	101
   433  008C78  00                 	db	0
   434  008C79                     __end_of_failed_line3_startCode:
   435                           	opt stack 0
   436  008C79                     _checked_line4:
   437                           	opt stack 0
   438  008C79  44                 	db	68
   439  008C7A  72                 	db	114
   440  008C7B  03                 	db	3
   441  008C7C  63                 	db	99
   442  008C7D  6B                 	db	107
   443  008C7E  65                 	db	101
   444  008C7F  6E                 	db	110
   445  008C80  20                 	db	32
   446  008C81  7A                 	db	122
   447  008C82  75                 	db	117
   448  008C83  6D                 	db	109
   449  008C84  20                 	db	32
   450  008C85  70                 	db	112
   451  008C86  72                 	db	114
   452  008C87  6F                 	db	111
   453  008C88  67                 	db	103
   454  008C89  72                 	db	114
   455  008C8A  61                 	db	97
   456  008C8B  6D                 	db	109
   457  008C8C  2E                 	db	46
   458  008C8D  00                 	db	0
   459  008C8E                     __end_of_checked_line4:
   460                           	opt stack 0
   461  008C8E                     _found_line4:
   462                           	opt stack 0
   463  008C8E  44                 	db	68
   464  008C8F  72                 	db	114
   465  008C90  03                 	db	3
   466  008C91  63                 	db	99
   467  008C92  6B                 	db	107
   468  008C93  65                 	db	101
   469  008C94  6E                 	db	110
   470  008C95  20                 	db	32
   471  008C96  7A                 	db	122
   472  008C97  6D                 	db	109
   473  008C98  20                 	db	32
   474  008C99  76                 	db	118
   475  008C9A  65                 	db	101
   476  008C9B  72                 	db	114
   477  008C9C  77                 	db	119
   478  008C9D  65                 	db	101
   479  008C9E  6E                 	db	110
   480  008C9F  64                 	db	100
   481  008CA0  65                 	db	101
   482  008CA1  6E                 	db	110
   483  008CA2  00                 	db	0
   484  008CA3                     __end_of_found_line4:
   485                           	opt stack 0
   486  008CA3                     _failed_line3_addressRange:
   487                           	opt stack 0
   488  008CA3  41                 	db	65
   489  008CA4  64                 	db	100
   490  008CA5  64                 	db	100
   491  008CA6  72                 	db	114
   492  008CA7  65                 	db	101
   493  008CA8  73                 	db	115
   494  008CA9  73                 	db	115
   495  008CAA  65                 	db	101
   496  008CAB  20                 	db	32
   497  008CAC  75                 	db	117
   498  008CAD  6E                 	db	110
   499  008CAE  7A                 	db	122
   500  008CAF  75                 	db	117
   501  008CB0  6C                 	db	108
   502  008CB1  02                 	db	2
   503  008CB2  73                 	db	115
   504  008CB3  73                 	db	115
   505  008CB4  69                 	db	105
   506  008CB5  67                 	db	103
   507  008CB6  00                 	db	0
   508  008CB7                     __end_of_failed_line3_addressRange:
   509                           	opt stack 0
   510  008CB7                     _programming_line2:
   511                           	opt stack 0
   512  008CB7  50                 	db	80
   513  008CB8  72                 	db	114
   514  008CB9  6F                 	db	111
   515  008CBA  67                 	db	103
   516  008CBB  72                 	db	114
   517  008CBC  61                 	db	97
   518  008CBD  6D                 	db	109
   519  008CBE  6D                 	db	109
   520  008CBF  69                 	db	105
   521  008CC0  65                 	db	101
   522  008CC1  72                 	db	114
   523  008CC2  65                 	db	101
   524  008CC3  20                 	db	32
   525  008CC4  46                 	db	70
   526  008CC5  6C                 	db	108
   527  008CC6  61                 	db	97
   528  008CC7  73                 	db	115
   529  008CC8  68                 	db	104
   530  008CC9  00                 	db	0
   531  008CCA                     __end_of_programming_line2:
   532                           	opt stack 0
   533  008CCA                     _suspended_line1:
   534                           	opt stack 0
   535  008CCA  42                 	db	66
   536  008CCB  6F                 	db	111
   537  008CCC  6F                 	db	111
   538  008CCD  74                 	db	116
   539  008CCE  6C                 	db	108
   540  008CCF  6F                 	db	111
   541  008CD0  61                 	db	97
   542  008CD1  64                 	db	100
   543  008CD2  65                 	db	101
   544  008CD3  72                 	db	114
   545  008CD4  20                 	db	32
   546  008CD5  4D                 	db	77
   547  008CD6  6F                 	db	111
   548  008CD7  64                 	db	100
   549  008CD8  75                 	db	117
   550  008CD9  73                 	db	115
   551  008CDA  00                 	db	0
   552  008CDB                     __end_of_suspended_line1:
   553                           	opt stack 0
   554  008CDB                     _done_line3:
   555                           	opt stack 0
   556  008CDB  47                 	db	71
   557  008CDC  65                 	db	101
   558  008CDD  73                 	db	115
   559  008CDE  63                 	db	99
   560  008CDF  68                 	db	104
   561  008CE0  72                 	db	114
   562  008CE1  2E                 	db	46
   563  008CE2  20                 	db	32
   564  008CE3  53                 	db	83
   565  008CE4  65                 	db	101
   566  008CE5  69                 	db	105
   567  008CE6  74                 	db	116
   568  008CE7  65                 	db	101
   569  008CE8  6E                 	db	110
   570  008CE9  3A                 	db	58
   571  008CEA  20                 	db	32
   572  008CEB  00                 	db	0
   573  008CEC                     __end_of_done_line3:
   574                           	opt stack 0
   575  008CEC                     _done_line1:
   576                           	opt stack 0
   577  008CEC  42                 	db	66
   578  008CED  6F                 	db	111
   579  008CEE  6F                 	db	111
   580  008CEF  74                 	db	116
   581  008CF0  6C                 	db	108
   582  008CF1  6F                 	db	111
   583  008CF2  61                 	db	97
   584  008CF3  64                 	db	100
   585  008CF4  65                 	db	101
   586  008CF5  72                 	db	114
   587  008CF6  20                 	db	32
   588  008CF7  4D                 	db	77
   589  008CF8  6F                 	db	111
   590  008CF9  64                 	db	100
   591  008CFA  75                 	db	117
   592  008CFB  73                 	db	115
   593  008CFC  00                 	db	0
   594  008CFD                     __end_of_done_line1:
   595                           	opt stack 0
   596  008CFD                     _programming_line4:
   597                           	opt stack 0
   598  008CFD  47                 	db	71
   599  008CFE  65                 	db	101
   600  008CFF  73                 	db	115
   601  008D00  63                 	db	99
   602  008D01  68                 	db	104
   603  008D02  72                 	db	114
   604  008D03  2E                 	db	46
   605  008D04  20                 	db	32
   606  008D05  53                 	db	83
   607  008D06  65                 	db	101
   608  008D07  69                 	db	105
   609  008D08  74                 	db	116
   610  008D09  65                 	db	101
   611  008D0A  6E                 	db	110
   612  008D0B  3A                 	db	58
   613  008D0C  20                 	db	32
   614  008D0D  00                 	db	0
   615  008D0E                     __end_of_programming_line4:
   616                           	opt stack 0
   617  008D0E                     _programming_line1:
   618                           	opt stack 0
   619  008D0E  42                 	db	66
   620  008D0F  6F                 	db	111
   621  008D10  6F                 	db	111
   622  008D11  74                 	db	116
   623  008D12  6C                 	db	108
   624  008D13  6F                 	db	111
   625  008D14  61                 	db	97
   626  008D15  64                 	db	100
   627  008D16  65                 	db	101
   628  008D17  72                 	db	114
   629  008D18  20                 	db	32
   630  008D19  4D                 	db	77
   631  008D1A  6F                 	db	111
   632  008D1B  64                 	db	100
   633  008D1C  75                 	db	117
   634  008D1D  73                 	db	115
   635  008D1E  00                 	db	0
   636  008D1F                     __end_of_programming_line1:
   637                           	opt stack 0
   638  008D1F                     _failed_line3_checksum:
   639                           	opt stack 0
   640  008D1F  50                 	db	80
   641  008D20  72                 	db	114
   642  008D21  03                 	db	3
   643  008D22  66                 	db	102
   644  008D23  73                 	db	115
   645  008D24  75                 	db	117
   646  008D25  6D                 	db	109
   647  008D26  6D                 	db	109
   648  008D27  65                 	db	101
   649  008D28  20                 	db	32
   650  008D29  66                 	db	102
   651  008D2A  61                 	db	97
   652  008D2B  6C                 	db	108
   653  008D2C  73                 	db	115
   654  008D2D  63                 	db	99
   655  008D2E  68                 	db	104
   656  008D2F  00                 	db	0
   657  008D30                     __end_of_failed_line3_checksum:
   658                           	opt stack 0
   659  008D30                     _failed_line1:
   660                           	opt stack 0
   661  008D30  42                 	db	66
   662  008D31  6F                 	db	111
   663  008D32  6F                 	db	111
   664  008D33  74                 	db	116
   665  008D34  6C                 	db	108
   666  008D35  6F                 	db	111
   667  008D36  61                 	db	97
   668  008D37  64                 	db	100
   669  008D38  65                 	db	101
   670  008D39  72                 	db	114
   671  008D3A  20                 	db	32
   672  008D3B  4D                 	db	77
   673  008D3C  6F                 	db	111
   674  008D3D  64                 	db	100
   675  008D3E  75                 	db	117
   676  008D3F  73                 	db	115
   677  008D40  00                 	db	0
   678  008D41                     __end_of_failed_line1:
   679                           	opt stack 0
   680  008D41                     _checked_line1:
   681                           	opt stack 0
   682  008D41  42                 	db	66
   683  008D42  6F                 	db	111
   684  008D43  6F                 	db	111
   685  008D44  74                 	db	116
   686  008D45  6C                 	db	108
   687  008D46  6F                 	db	111
   688  008D47  61                 	db	97
   689  008D48  64                 	db	100
   690  008D49  65                 	db	101
   691  008D4A  72                 	db	114
   692  008D4B  20                 	db	32
   693  008D4C  4D                 	db	77
   694  008D4D  6F                 	db	111
   695  008D4E  64                 	db	100
   696  008D4F  75                 	db	117
   697  008D50  73                 	db	115
   698  008D51  00                 	db	0
   699  008D52                     __end_of_checked_line1:
   700                           	opt stack 0
   701  008D52                     _verify_line1:
   702                           	opt stack 0
   703  008D52  42                 	db	66
   704  008D53  6F                 	db	111
   705  008D54  6F                 	db	111
   706  008D55  74                 	db	116
   707  008D56  6C                 	db	108
   708  008D57  6F                 	db	111
   709  008D58  61                 	db	97
   710  008D59  64                 	db	100
   711  008D5A  65                 	db	101
   712  008D5B  72                 	db	114
   713  008D5C  20                 	db	32
   714  008D5D  4D                 	db	77
   715  008D5E  6F                 	db	111
   716  008D5F  64                 	db	100
   717  008D60  75                 	db	117
   718  008D61  73                 	db	115
   719  008D62  00                 	db	0
   720  008D63                     __end_of_verify_line1:
   721                           	opt stack 0
   722  008D63                     _found_line1:
   723                           	opt stack 0
   724  008D63  42                 	db	66
   725  008D64  6F                 	db	111
   726  008D65  6F                 	db	111
   727  008D66  74                 	db	116
   728  008D67  6C                 	db	108
   729  008D68  6F                 	db	111
   730  008D69  61                 	db	97
   731  008D6A  64                 	db	100
   732  008D6B  65                 	db	101
   733  008D6C  72                 	db	114
   734  008D6D  20                 	db	32
   735  008D6E  4D                 	db	77
   736  008D6F  6F                 	db	111
   737  008D70  64                 	db	100
   738  008D71  75                 	db	117
   739  008D72  73                 	db	115
   740  008D73  00                 	db	0
   741  008D74                     __end_of_found_line1:
   742                           	opt stack 0
   743  008D74                     _search_line3:
   744                           	opt stack 0
   745  008D74  46                 	db	70
   746  008D75  49                 	db	73
   747  008D76  52                 	db	82
   748  008D77  4D                 	db	77
   749  008D78  57                 	db	87
   750  008D79  41                 	db	65
   751  008D7A  52                 	db	82
   752  008D7B  45                 	db	69
   753  008D7C  2E                 	db	46
   754  008D7D  48                 	db	72
   755  008D7E  45                 	db	69
   756  008D7F  58                 	db	88
   757  008D80  20                 	db	32
   758  008D81  61                 	db	97
   759  008D82  75                 	db	117
   760  008D83  66                 	db	102
   761  008D84  00                 	db	0
   762  008D85                     __end_of_search_line3:
   763                           	opt stack 0
   764  008D85                     _search_line1:
   765                           	opt stack 0
   766  008D85  42                 	db	66
   767  008D86  6F                 	db	111
   768  008D87  6F                 	db	111
   769  008D88  74                 	db	116
   770  008D89  6C                 	db	108
   771  008D8A  6F                 	db	111
   772  008D8B  61                 	db	97
   773  008D8C  64                 	db	100
   774  008D8D  65                 	db	101
   775  008D8E  72                 	db	114
   776  008D8F  20                 	db	32
   777  008D90  4D                 	db	77
   778  008D91  6F                 	db	111
   779  008D92  64                 	db	100
   780  008D93  75                 	db	117
   781  008D94  73                 	db	115
   782  008D95  00                 	db	0
   783  008D96                     __end_of_search_line1:
   784                           	opt stack 0
   785  008D96                     _start_line1:
   786                           	opt stack 0
   787  008D96  42                 	db	66
   788  008D97  6F                 	db	111
   789  008D98  6F                 	db	111
   790  008D99  74                 	db	116
   791  008D9A  6C                 	db	108
   792  008D9B  6F                 	db	111
   793  008D9C  61                 	db	97
   794  008D9D  64                 	db	100
   795  008D9E  65                 	db	101
   796  008D9F  72                 	db	114
   797  008DA0  20                 	db	32
   798  008DA1  4D                 	db	77
   799  008DA2  6F                 	db	111
   800  008DA3  64                 	db	100
   801  008DA4  75                 	db	117
   802  008DA5  73                 	db	115
   803  008DA6  00                 	db	0
   804  008DA7                     __end_of_start_line1:
   805                           	opt stack 0
   806  008DA7                     _failed_line2:
   807                           	opt stack 0
   808  008DA7  46                 	db	70
   809  008DA8  69                 	db	105
   810  008DA9  6C                 	db	108
   811  008DAA  65                 	db	101
   812  008DAB  20                 	db	32
   813  008DAC  66                 	db	102
   814  008DAD  65                 	db	101
   815  008DAE  68                 	db	104
   816  008DAF  6C                 	db	108
   817  008DB0  65                 	db	101
   818  008DB1  72                 	db	114
   819  008DB2  68                 	db	104
   820  008DB3  61                 	db	97
   821  008DB4  66                 	db	102
   822  008DB5  74                 	db	116
   823  008DB6  00                 	db	0
   824  008DB7                     __end_of_failed_line2:
   825                           	opt stack 0
   826  008DB7                     _search_line4:
   827                           	opt stack 0
   828  008DB7  55                 	db	85
   829  008DB8  53                 	db	83
   830  008DB9  42                 	db	66
   831  008DBA  2D                 	db	45
   832  008DBB  4C                 	db	76
   833  008DBC  61                 	db	97
   834  008DBD  75                 	db	117
   835  008DBE  66                 	db	102
   836  008DBF  77                 	db	119
   837  008DC0  65                 	db	101
   838  008DC1  72                 	db	114
   839  008DC2  6B                 	db	107
   840  008DC3  2E                 	db	46
   841  008DC4  2E                 	db	46
   842  008DC5  2E                 	db	46
   843  008DC6  00                 	db	0
   844  008DC7                     __end_of_search_line4:
   845                           	opt stack 0
   846  008DC7                     _failed_line3_dataTooLong:
   847                           	opt stack 0
   848  008DC7  44                 	db	68
   849  008DC8  61                 	db	97
   850  008DC9  74                 	db	116
   851  008DCA  65                 	db	101
   852  008DCB  6E                 	db	110
   853  008DCC  20                 	db	32
   854  008DCD  7A                 	db	122
   855  008DCE  75                 	db	117
   856  008DCF  20                 	db	32
   857  008DD0  6C                 	db	108
   858  008DD1  61                 	db	97
   859  008DD2  6E                 	db	110
   860  008DD3  67                 	db	103
   861  008DD4  65                 	db	101
   862  008DD5  00                 	db	0
   863  008DD6                     __end_of_failed_line3_dataTooLong:
   864                           	opt stack 0
   865  008DD6                     _start_line4:
   866                           	opt stack 0
   867  008DD6  73                 	db	115
   868  008DD7  6F                 	db	111
   869  008DD8  6C                 	db	108
   870  008DD9  64                 	db	100
   871  008DDA  65                 	db	101
   872  008DDB  72                 	db	114
   873  008DDC  6E                 	db	110
   874  008DDD  65                 	db	101
   875  008DDE  72                 	db	114
   876  008DDF  64                 	db	100
   877  008DE0  2E                 	db	46
   878  008DE1  63                 	db	99
   879  008DE2  6F                 	db	111
   880  008DE3  6D                 	db	109
   881  008DE4  00                 	db	0
   882  008DE5                     __end_of_start_line4:
   883                           	opt stack 0
   884  008DE5                     _verify_line2:
   885                           	opt stack 0
   886  008DE5  50                 	db	80
   887  008DE6  72                 	db	114
   888  008DE7  03                 	db	3
   889  008DE8  66                 	db	102
   890  008DE9  65                 	db	101
   891  008DEA  20                 	db	32
   892  008DEB  46                 	db	70
   893  008DEC  69                 	db	105
   894  008DED  6C                 	db	108
   895  008DEE  65                 	db	101
   896  008DEF  2E                 	db	46
   897  008DF0  2E                 	db	46
   898  008DF1  2E                 	db	46
   899  008DF2  00                 	db	0
   900  008DF3                     __end_of_verify_line2:
   901                           	opt stack 0
   902  008DF3                     _found_line2:
   903                           	opt stack 0
   904  008DF3  46                 	db	70
   905  008DF4  69                 	db	105
   906  008DF5  6C                 	db	108
   907  008DF6  65                 	db	101
   908  008DF7  20                 	db	32
   909  008DF8  67                 	db	103
   910  008DF9  65                 	db	101
   911  008DFA  66                 	db	102
   912  008DFB  75                 	db	117
   913  008DFC  6E                 	db	110
   914  008DFD  64                 	db	100
   915  008DFE  65                 	db	101
   916  008DFF  6E                 	db	110
   917  008E00  00                 	db	0
   918  008E01                     __end_of_found_line2:
   919                           	opt stack 0
   920  008E01                     _checked_line2:
   921                           	opt stack 0
   922  008E01  46                 	db	70
   923  008E02  69                 	db	105
   924  008E03  6C                 	db	108
   925  008E04  65                 	db	101
   926  008E05  20                 	db	32
   927  008E06  67                 	db	103
   928  008E07  65                 	db	101
   929  008E08  70                 	db	112
   930  008E09  72                 	db	114
   931  008E0A  03                 	db	3
   932  008E0B  66                 	db	102
   933  008E0C  74                 	db	116
   934  008E0D  00                 	db	0
   935  008E0E                     __end_of_checked_line2:
   936                           	opt stack 0
   937  008E0E                     _reboot_line1:
   938                           	opt stack 0
   939  008E0E  4E                 	db	78
   940  008E0F  65                 	db	101
   941  008E10  75                 	db	117
   942  008E11  73                 	db	115
   943  008E12  74                 	db	116
   944  008E13  61                 	db	97
   945  008E14  72                 	db	114
   946  008E15  74                 	db	116
   947  008E16  2E                 	db	46
   948  008E17  2E                 	db	46
   949  008E18  2E                 	db	46
   950  008E19  00                 	db	0
   951  008E1A                     __end_of_reboot_line1:
   952                           	opt stack 0
   953  008E1A                     _suspended_line2:
   954                           	opt stack 0
   955  008E1A  53                 	db	83
   956  008E1B  75                 	db	117
   957  008E1C  73                 	db	115
   958  008E1D  70                 	db	112
   959  008E1E  65                 	db	101
   960  008E1F  6E                 	db	110
   961  008E20  64                 	db	100
   962  008E21  69                 	db	105
   963  008E22  65                 	db	101
   964  008E23  72                 	db	114
   965  008E24  74                 	db	116
   966  008E25  00                 	db	0
   967  008E26                     __end_of_suspended_line2:
   968                           	opt stack 0
   969  008E26                     _search_line2:
   970                           	opt stack 0
   971  008E26  53                 	db	83
   972  008E27  75                 	db	117
   973  008E28  63                 	db	99
   974  008E29  68                 	db	104
   975  008E2A  65                 	db	101
   976  008E2B  20                 	db	32
   977  008E2C  46                 	db	70
   978  008E2D  69                 	db	105
   979  008E2E  6C                 	db	108
   980  008E2F  65                 	db	101
   981  008E30  00                 	db	0
   982  008E31                     __end_of_search_line2:
   983                           	opt stack 0
   984  008E31                     _programming_line3:
   985                           	opt stack 0
   986  008E31  45                 	db	69
   987  008E32  69                 	db	105
   988  008E33  6E                 	db	110
   989  008E34  74                 	db	116
   990  008E35  72                 	db	114
   991  008E36  61                 	db	97
   992  008E37  67                 	db	103
   993  008E38  20                 	db	32
   994  008E39  00                 	db	0
   995  008E3A                     __end_of_programming_line3:
   996                           	opt stack 0
   997  008E3A                     _failed_line4:
   998                           	opt stack 0
   999  008E3A  45                 	db	69
  1000  008E3B  69                 	db	105
  1001  008E3C  6E                 	db	110
  1002  008E3D  74                 	db	116
  1003  008E3E  72                 	db	114
  1004  008E3F  61                 	db	97
  1005  008E40  67                 	db	103
  1006  008E41  20                 	db	32
  1007  008E42  00                 	db	0
  1008  008E43                     __end_of_failed_line4:
  1009                           	opt stack 0
  1010  008E43                     _checked_line3:
  1011                           	opt stack 0
  1012  008E43  45                 	db	69
  1013  008E44  69                 	db	105
  1014  008E45  6E                 	db	110
  1015  008E46  74                 	db	116
  1016  008E47  72                 	db	114
  1017  008E48  02                 	db	2
  1018  008E49  67                 	db	103
  1019  008E4A  65                 	db	101
  1020  008E4B  00                 	db	0
  1021  008E4C                     __end_of_checked_line3:
  1022                           	opt stack 0
  1023  008E4C                     _start_line2:
  1024                           	opt stack 0
  1025  008E4C  56                 	db	86
  1026  008E4D  65                 	db	101
  1027  008E4E  72                 	db	114
  1028  008E4F  73                 	db	115
  1029  008E50  69                 	db	105
  1030  008E51  6F                 	db	111
  1031  008E52  6E                 	db	110
  1032  008E53  20                 	db	32
  1033  008E54  00                 	db	0
  1034  008E55                     __end_of_start_line2:
  1035                           	opt stack 0
  1036  008E55                     _done_line2:
  1037                           	opt stack 0
  1038  008E55  46                 	db	70
  1039  008E56  65                 	db	101
  1040  008E57  72                 	db	114
  1041  008E58  74                 	db	116
  1042  008E59  69                 	db	105
  1043  008E5A  67                 	db	103
  1044  008E5B  21                 	db	33
  1045  008E5C  00                 	db	0
  1046  008E5D                     __end_of_done_line2:
  1047                           	opt stack 0
  1048  008E5D                     _verify_line3:
  1049                           	opt stack 0
  1050  008E5D  45                 	db	69
  1051  008E5E  69                 	db	105
  1052  008E5F  6E                 	db	110
  1053  008E60  74                 	db	116
  1054  008E61  72                 	db	114
  1055  008E62  61                 	db	97
  1056  008E63  67                 	db	103
  1057  008E64  00                 	db	0
  1058  008E65                     __end_of_verify_line3:
  1059                           	opt stack 0
  1060  008E65                     _found_line3:
  1061                           	opt stack 0
  1062  008E65  47                 	db	71
  1063  008E66  72                 	db	114
  1064  008E67  04                 	db	4
  1065  008E68  73                 	db	115
  1066  008E69  73                 	db	115
  1067  008E6A  65                 	db	101
  1068  008E6B  3A                 	db	58
  1069  008E6C  00                 	db	0
  1070  008E6D                     __end_of_found_line3:
  1071                           	opt stack 0
  1072  008E6D                     _USB_SD_Ptr:
  1073                           	opt stack 0
  1074  008E6D  CC                 	db	low _sd000
  1075  008E6E  8F                 	db	high _sd000
  1076  008E6F  C0                 	db	low _sd001
  1077  008E70  8E                 	db	high _sd001
  1078  008E71  F4                 	db	low _sd002
  1079  008E72  8E                 	db	high _sd002
  1080  008E73  63                 	db	low _sd003
  1081  008E74  8F                 	db	high _sd003
  1082  008E75                     __end_of_USB_SD_Ptr:
  1083                           	opt stack 0
  1084  008E75                     _found_line3b:
  1085                           	opt stack 0
  1086  008E75  20                 	db	32
  1087  008E76  42                 	db	66
  1088  008E77  79                 	db	121
  1089  008E78  74                 	db	116
  1090  008E79  65                 	db	101
  1091  008E7A  73                 	db	115
  1092  008E7B  00                 	db	0
  1093  008E7C                     __end_of_found_line3b:
  1094                           	opt stack 0
  1095  008E7C                     _USB_CD_Ptr:
  1096                           	opt stack 0
  1097  008E7C  80                 	db	low _configDescriptor1
  1098  008E7D  8E                 	db	high _configDescriptor1
  1099  008E7E                     __end_of_USB_CD_Ptr:
  1100                           	opt stack 0
  1101  008E7E                     _suspended_line3:
  1102                           	opt stack 0
  1103  008E7E  00                 	db	0
  1104  008E7F                     __end_of_suspended_line3:
  1105                           	opt stack 0
  1106  008E7F                     _start_line3:
  1107                           	opt stack 0
  1108  008E7F  00                 	db	0
  1109  008E80                     __end_of_start_line3:
  1110                           	opt stack 0
  1111  008E80                     _configDescriptor1:
  1112                           	opt stack 0
  1113  008E80  09                 	db	9
  1114  008E81  02                 	db	2
  1115  008E82  40                 	db	64
  1116  008E83  00                 	db	0
  1117  008E84  02                 	db	2
  1118  008E85  01                 	db	1
  1119  008E86  00                 	db	0
  1120  008E87  C0                 	db	192
  1121  008E88  32                 	db	50
  1122  008E89  09                 	db	9
  1123  008E8A  04                 	db	4
  1124  008E8B  00                 	db	0
  1125  008E8C  00                 	db	0
  1126  008E8D  02                 	db	2
  1127  008E8E  03                 	db	3
  1128  008E8F  00                 	db	0
  1129  008E90  00                 	db	0
  1130  008E91  00                 	db	0
  1131  008E92  09                 	db	9
  1132  008E93  21                 	db	33
  1133  008E94  11                 	db	17
  1134  008E95  01                 	db	1
  1135  008E96  00                 	db	0
  1136  008E97  01                 	db	1
  1137  008E98  22                 	db	34
  1138  008E99  1D                 	db	29
  1139  008E9A  00                 	db	0
  1140  008E9B  07                 	db	7
  1141  008E9C  05                 	db	5
  1142  008E9D  81                 	db	129
  1143  008E9E  03                 	db	3
  1144  008E9F  40                 	db	64
  1145  008EA0  00                 	db	0
  1146  008EA1  01                 	db	1
  1147  008EA2  07                 	db	7
  1148  008EA3  05                 	db	5
  1149  008EA4  01                 	db	1
  1150  008EA5  03                 	db	3
  1151  008EA6  40                 	db	64
  1152  008EA7  00                 	db	0
  1153  008EA8  01                 	db	1
  1154  008EA9  09                 	db	9
  1155  008EAA  04                 	db	4
  1156  008EAB  01                 	db	1
  1157  008EAC  00                 	db	0
  1158  008EAD  02                 	db	2
  1159  008EAE  08                 	db	8
  1160  008EAF  06                 	db	6
  1161  008EB0  50                 	db	80
  1162  008EB1  00                 	db	0
  1163  008EB2  07                 	db	7
  1164  008EB3  05                 	db	5
  1165  008EB4  82                 	db	130
  1166  008EB5  02                 	db	2
  1167  008EB6  40                 	db	64
  1168  008EB7  00                 	db	0
  1169  008EB8  01                 	db	1
  1170  008EB9  07                 	db	7
  1171  008EBA  05                 	db	5
  1172  008EBB  02                 	db	2
  1173  008EBC  02                 	db	2
  1174  008EBD  40                 	db	64
  1175  008EBE  00                 	db	0
  1176  008EBF  01                 	db	1
  1177  008EC0                     __end_of_configDescriptor1:
  1178                           	opt stack 0
  1179  008EC0                     _sd001:
  1180                           	opt stack 0
  1181  008EC0  34                 	db	52
  1182  008EC1  03                 	db	3
  1183  008EC2  0053               	dw	83
  1184  008EC4  006F               	dw	111
  1185  008EC6  006C               	dw	108
  1186  008EC8  0064               	dw	100
  1187  008ECA  0065               	dw	101
  1188  008ECC  0072               	dw	114
  1189  008ECE  006E               	dw	110
  1190  008ED0  0065               	dw	101
  1191  008ED2  0072               	dw	114
  1192  008ED4  0064               	dw	100
  1193  008ED6  002E               	dw	46
  1194  008ED8  0063               	dw	99
  1195  008EDA  006F               	dw	111
  1196  008EDC  006D               	dw	109
  1197  008EDE  0020               	dw	32
  1198  008EE0  0020               	dw	32
  1199  008EE2  0020               	dw	32
  1200  008EE4  0020               	dw	32
  1201  008EE6  0020               	dw	32
  1202  008EE8  0020               	dw	32
  1203  008EEA  0020               	dw	32
  1204  008EEC  0020               	dw	32
  1205  008EEE  0020               	dw	32
  1206  008EF0  0020               	dw	32
  1207  008EF2  0020               	dw	32
  1208  008EF4                     __end_of_sd001:
  1209                           	opt stack 0
  1210  008EF4                     _sd002:
  1211                           	opt stack 0
  1212  008EF4  2E                 	db	46
  1213  008EF5  03                 	db	3
  1214  008EF6  0053               	dw	83
  1215  008EF8  0074               	dw	116
  1216  008EFA  0065               	dw	101
  1217  008EFC  0070               	dw	112
  1218  008EFE  0070               	dw	112
  1219  008F00  0065               	dw	101
  1220  008F02  0072               	dw	114
  1221  008F04  004D               	dw	77
  1222  008F06  006F               	dw	111
  1223  008F08  0074               	dw	116
  1224  008F0A  006F               	dw	111
  1225  008F0C  0072               	dw	114
  1226  008F0E  0043               	dw	67
  1227  008F10  006F               	dw	111
  1228  008F12  006E               	dw	110
  1229  008F14  0074               	dw	116
  1230  008F16  0072               	dw	114
  1231  008F18  006F               	dw	111
  1232  008F1A  006C               	dw	108
  1233  008F1C  006C               	dw	108
  1234  008F1E  0065               	dw	101
  1235  008F20  0072               	dw	114
  1236  008F22                     __end_of_sd002:
  1237                           	opt stack 0
  1238  008F22                     _inq_resp:
  1239                           	opt stack 0
  1240  008F22  00                 	db	0
  1241  008F23  80                 	db	128
  1242  008F24  04                 	db	4
  1243  008F25  02                 	db	2
  1244  008F26  20                 	db	32
  1245  008F27  00                 	db	0
  1246  008F28  00                 	db	0
  1247  008F29  00                 	db	0
  1248  008F2A  4D                 	db	77
  1249  008F2B  69                 	db	105
  1250  008F2C  63                 	db	99
  1251  008F2D  72                 	db	114
  1252  008F2E  6F                 	db	111
  1253  008F2F  63                 	db	99
  1254  008F30  68                 	db	104
  1255  008F31  70                 	db	112
  1256  008F32  4D                 	db	77
  1257  008F33  61                 	db	97
  1258  008F34  73                 	db	115
  1259  008F35  73                 	db	115
  1260  008F36  20                 	db	32
  1261  008F37  53                 	db	83
  1262  008F38  74                 	db	116
  1263  008F39  6F                 	db	111
  1264  008F3A  72                 	db	114
  1265  008F3B  61                 	db	97
  1266  008F3C  67                 	db	103
  1267  008F3D  65                 	db	101
  1268  008F3E  20                 	db	32
  1269  008F3F  20                 	db	32
  1270  008F40  20                 	db	32
  1271  008F41  20                 	db	32
  1272  008F42  30                 	db	48
  1273  008F43  30                 	db	48
  1274  008F44  30                 	db	48
  1275  008F45  31                 	db	49
  1276  008F46                     __end_of_inq_resp:
  1277                           	opt stack 0
  1278  008F46                     _hid_rpt01:
  1279                           	opt stack 0
  1280  008F46  06                 	db	6
  1281  008F47  00                 	db	0
  1282  008F48  FF                 	db	255
  1283  008F49  09                 	db	9
  1284  008F4A  01                 	db	1
  1285  008F4B  A1                 	db	161
  1286  008F4C  01                 	db	1
  1287  008F4D  19                 	db	25
  1288  008F4E  01                 	db	1
  1289  008F4F  29                 	db	41
  1290  008F50  40                 	db	64
  1291  008F51  15                 	db	21
  1292  008F52  00                 	db	0
  1293  008F53  26                 	db	38
  1294  008F54  FF                 	db	255
  1295  008F55  00                 	db	0
  1296  008F56  75                 	db	117
  1297  008F57  08                 	db	8
  1298  008F58  95                 	db	149
  1299  008F59  40                 	db	64
  1300  008F5A  81                 	db	129
  1301  008F5B  00                 	db	0
  1302  008F5C  19                 	db	25
  1303  008F5D  01                 	db	1
  1304  008F5E  29                 	db	41
  1305  008F5F  40                 	db	64
  1306  008F60  91                 	db	145
  1307  008F61  00                 	db	0
  1308  008F62  C0                 	db	192
  1309  008F63                     __end_of_hid_rpt01:
  1310                           	opt stack 0
  1311  008F63                     _sd003:
  1312                           	opt stack 0
  1313  008F63  1A                 	db	26
  1314  008F64  03                 	db	3
  1315  008F65  0031               	dw	49
  1316  008F67  0032               	dw	50
  1317  008F69  0033               	dw	51
  1318  008F6B  0034               	dw	52
  1319  008F6D  0035               	dw	53
  1320  008F6F  0036               	dw	54
  1321  008F71  0037               	dw	55
  1322  008F73  0038               	dw	56
  1323  008F75  0039               	dw	57
  1324  008F77  0030               	dw	48
  1325  008F79  0039               	dw	57
  1326  008F7B  0039               	dw	57
  1327  008F7D                     __end_of_sd003:
  1328                           	opt stack 0
  1329  008F7D                     _device_dsc:
  1330                           	opt stack 0
  1331  008F7D  12                 	db	18
  1332  008F7E  01                 	db	1
  1333  008F7F  0200               	dw	512
  1334  008F81  00                 	db	0
  1335  008F82  00                 	db	0
  1336  008F83  00                 	db	0
  1337  008F84  08                 	db	8
  1338  008F85  04D8               	dw	1240
  1339  008F87  EDCF               	dw	60879
  1340  008F89  0100               	dw	256
  1341  008F8B  01                 	db	1
  1342  008F8C  02                 	db	2
  1343  008F8D  00                 	db	0
  1344  008F8E  01                 	db	1
  1345  008F8F                     __end_of_device_dsc:
  1346                           	opt stack 0
  1347  008F8F                     _bootloader_filename:
  1348                           	opt stack 0
  1349  008F8F  46                 	db	70
  1350  008F90  49                 	db	73
  1351  008F91  52                 	db	82
  1352  008F92  4D                 	db	77
  1353  008F93  57                 	db	87
  1354  008F94  41                 	db	65
  1355  008F95  52                 	db	82
  1356  008F96  45                 	db	69
  1357  008F97  00                 	db	0
  1358  008F98                     __end_of_bootloader_filename:
  1359                           	opt stack 0
  1360  008F98                     _bit_pattern_oe:
  1361                           	opt stack 0
  1362  008F98  0A                 	db	10
  1363  008F99  00                 	db	0
  1364  008F9A  0E                 	db	14
  1365  008F9B  11                 	db	17
  1366  008F9C  11                 	db	17
  1367  008F9D  11                 	db	17
  1368  008F9E  0E                 	db	14
  1369  008F9F  00                 	db	0
  1370  008FA0                     __end_of_bit_pattern_oe:
  1371                           	opt stack 0
  1372  008FA0                     _bit_pattern_ue:
  1373                           	opt stack 0
  1374  008FA0  0A                 	db	10
  1375  008FA1  00                 	db	0
  1376  008FA2  11                 	db	17
  1377  008FA3  11                 	db	17
  1378  008FA4  11                 	db	17
  1379  008FA5  13                 	db	19
  1380  008FA6  0D                 	db	13
  1381  008FA7  00                 	db	0
  1382  008FA8                     __end_of_bit_pattern_ue:
  1383                           	opt stack 0
  1384  008FA8                     _bit_pattern_ae:
  1385                           	opt stack 0
  1386  008FA8  0A                 	db	10
  1387  008FA9  00                 	db	0
  1388  008FAA  0E                 	db	14
  1389  008FAB  01                 	db	1
  1390  008FAC  0F                 	db	15
  1391  008FAD  11                 	db	17
  1392  008FAE  0F                 	db	15
  1393  008FAF  00                 	db	0
  1394  008FB0                     __end_of_bit_pattern_ae:
  1395                           	opt stack 0
  1396  008FB0                     _bit_pattern_degree:
  1397                           	opt stack 0
  1398  008FB0  18                 	db	24
  1399  008FB1  18                 	db	24
  1400  008FB2  00                 	db	0
  1401  008FB3  00                 	db	0
  1402  008FB4  00                 	db	0
  1403  008FB5  00                 	db	0
  1404  008FB6  00                 	db	0
  1405  008FB7  00                 	db	0
  1406  008FB8                     __end_of_bit_pattern_degree:
  1407                           	opt stack 0
  1408  008FB8                     _bit_pattern_verticalbar:
  1409                           	opt stack 0
  1410  008FB8  04                 	db	4
  1411  008FB9  04                 	db	4
  1412  008FBA  04                 	db	4
  1413  008FBB  04                 	db	4
  1414  008FBC  04                 	db	4
  1415  008FBD  04                 	db	4
  1416  008FBE  04                 	db	4
  1417  008FBF  04                 	db	4
  1418  008FC0                     __end_of_bit_pattern_verticalbar:
  1419                           	opt stack 0
  1420  008FC0                     _flash_command_pagesize_528:
  1421                           	opt stack 0
  1422  008FC0  3D                 	db	61
  1423  008FC1  2A                 	db	42
  1424  008FC2  80                 	db	128
  1425  008FC3  A7                 	db	167
  1426  008FC4                     __end_of_flash_command_pagesize_528:
  1427                           	opt stack 0
  1428  008FC4                     _flash_command_pagesize_512:
  1429                           	opt stack 0
  1430  008FC4  3D                 	db	61
  1431  008FC5  2A                 	db	42
  1432  008FC6  80                 	db	128
  1433  008FC7  A6                 	db	166
  1434  008FC8                     __end_of_flash_command_pagesize_512:
  1435                           	opt stack 0
  1436  008FC8                     _bootloader_extension:
  1437                           	opt stack 0
  1438  008FC8  48                 	db	72
  1439  008FC9  45                 	db	69
  1440  008FCA  58                 	db	88
  1441  008FCB  00                 	db	0
  1442  008FCC                     __end_of_bootloader_extension:
  1443                           	opt stack 0
  1444  008FCC                     _sd000:
  1445                           	opt stack 0
  1446  008FCC  04                 	db	4
  1447  008FCD  03                 	db	3
  1448  008FCE  0409               	dw	1033
  1449  008FD0                     __end_of_sd000:
  1450                           	opt stack 0
  1451  0000                     _RPINR22	set	3837
  1452  0000                     _RPOR23	set	3799
  1453  0000                     _RPOR21	set	3797
  1454  0000                     _RPINR21	set	3836
  1455  0000                     _PPSCONbits	set	3775
  1456  0000                     _ANCON0bits	set	3912
  1457  0000                     _UEP0bits	set	3878
  1458  0000                     _UIEbits	set	3894
  1459  0000                     _UADDR	set	3896
  1460  0000                     _UIE	set	3894
  1461  0000                     _UEIE	set	3895
  1462  0000                     _UCFG	set	3897
  1463  0000                     _UEP1	set	3879
  1464  0000                     _UEP0	set	3878
  1465  0000                     _TBLPTR	set	4086
  1466  0000                     _RXADDRL	set	3945
  1467  0000                     _RXADDRH	set	3944
  1468  0000                     _DMABCL	set	3943
  1469  0000                     _DMABCH	set	3942
  1470  0000                     _TXADDRL	set	3947
  1471  0000                     _TXADDRH	set	3946
  1472  0000                     _DMACON2bits	set	3974
  1473  0000                     _DMACON1bits	set	3976
  1474  0000                     _SSP2CON1bits	set	3954
  1475  0000                     _SSP2STATbits	set	3955
  1476  0000                     _EECON2	set	4007
  1477  0000                     _INTCON	set	4082
  1478  0000                     _EECON1	set	4006
  1479  0000                     _TABLAT	set	4085
  1480  0000                     _EECON1bits	set	4006
  1481  0000                     _SSP1BUF	set	4041
  1482  0000                     _SSP1CON2bits	set	4037
  1483  0000                     _SSP1CON1bits	set	4038
  1484  0000                     _SSP1ADD	set	4040
  1485  0000                     _SSP1STATbits	set	4039
  1486  0000                     _TRISBbits	set	3987
  1487  0000                     _LATDbits	set	3980
  1488  0000                     _TRISDbits	set	3989
  1489  0000                     _LATCbits	set	3979
  1490  0000                     _TRISCbits	set	3988
  1491  0000                     _LATAbits	set	3977
  1492  0000                     _TRISAbits	set	3986
  1493  0000                     _TRISEbits	set	3990
  1494  0000                     _T0CONbits	set	4053
  1495  0000                     _INTCON3bits	set	4080
  1496  0000                     _PORTA	set	3968
  1497  0000                     _PORTE	set	3972
  1498  0000                     _TMR0L	set	4054
  1499  0000                     _TMR0H	set	4055
  1500  0000                     _INTCONbits	set	4082
  1501  0000                     _OSCCON	set	4051
  1502  0000                     _OSCTUNEbits	set	3995
  1503  0000                     _PORTAbits	set	3968
  1504  0000                     _PORTEbits	set	3972
  1505  0000                     _USTAT	set	3940
  1506  0000                     _PIR2bits	set	4001
  1507  0000                     _UCON	set	3941
  1508  0000                     _UIRbits	set	3938
  1509  0000                     _UCONbits	set	3941
  1510  0000                     _UIR	set	3938
  1511  0000                     _UEIR	set	3939
  1512  0000                     _PIE2bits	set	4000
  1513  008FD0                     STR_12:
  1514  008FD0  68                 	db	104	;'h'
  1515  008FD1  65                 	db	101	;'e'
  1516  008FD2  6C                 	db	108	;'l'
  1517  008FD3  6C                 	db	108	;'l'
  1518  008FD4  6F                 	db	111	;'o'
  1519  008FD5  20                 	db	32
  1520  008FD6  77                 	db	119	;'w'
  1521  008FD7  6F                 	db	111	;'o'
  1522  008FD8  72                 	db	114	;'r'
  1523  008FD9  6C                 	db	108	;'l'
  1524  008FDA  64                 	db	100	;'d'
  1525  008FDB  21                 	db	33
  1526  008FDC  00                 	db	0
  1527  008FDD                     STR_9:
  1528  008FDD  53                 	db	83	;'S'
  1529  008FDE  74                 	db	116	;'t'
  1530  008FDF  65                 	db	101	;'e'
  1531  008FE0  70                 	db	112	;'p'
  1532  008FE1  70                 	db	112	;'p'
  1533  008FE2  65                 	db	101	;'e'
  1534  008FE3  72                 	db	114	;'r'
  1535  008FE4  43                 	db	67	;'C'
  1536  008FE5  74                 	db	116	;'t'
  1537  008FE6  72                 	db	114	;'r'
  1538  008FE7  6C                 	db	108	;'l'
  1539  008FE8  00                 	db	0
  1540  008FE9                     STR_10:
  1541  008FE9  46                 	db	70	;'F'
  1542  008FEA  49                 	db	73	;'I'
  1543  008FEB  4C                 	db	76	;'L'
  1544  008FEC  45                 	db	69	;'E'
  1545  008FED  20                 	db	32
  1546  008FEE  20                 	db	32
  1547  008FEF  20                 	db	32
  1548  008FF0  20                 	db	32
  1549  008FF1  00                 	db	0
  1550  008FF2                     STR_1:
  1551  008FF2  4D                 	db	77	;'M'
  1552  008FF3  53                 	db	83	;'S'
  1553  008FF4  44                 	db	68	;'D'
  1554  008FF5  4F                 	db	79	;'O'
  1555  008FF6  53                 	db	83	;'S'
  1556  008FF7  35                 	db	53	;'5'
  1557  008FF8  2E                 	db	46
  1558  008FF9  30                 	db	48	;'0'
  1559  008FFA  00                 	db	0
  1560  008FFB                     STR_11:
  1561  008FFB  54                 	db	84	;'T'
  1562  008FFC  58                 	db	88	;'X'
  1563  008FFD  54                 	db	84	;'T'
  1564  008FFE  00                 	db	0
  1565  0000                     
  1566                           ; #config settings
  1567  008FFF  00                 	db	0	; dummy byte at the end
  1568  0000                     
  1569                           	psect	cinit
  1570  0053AC                     __pcinit:
  1571                           	opt stack 0
  1572  0053AC                     start_initialization:
  1573                           	opt stack 0
  1574  0053AC                     __initialization:
  1575                           	opt stack 0
  1576                           
  1577                           ; Initialize objects allocated to BANK2 (26 bytes)
  1578                           ; load TBLPTR registers with __pidataBANK2
  1579  0053AC  0E5E               	movlw	low __pidataBANK2
  1580  0053AE  6EF6               	movwf	tblptrl,c
  1581  0053B0  0E72               	movlw	high __pidataBANK2
  1582  0053B2  6EF7               	movwf	tblptrh,c
  1583  0053B4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1584  0053B6  6EF8               	movwf	tblptru,c
  1585  0053B8  EE02  F0B2         	lfsr	0,__pdataBANK2
  1586  0053BC  EE10 F01A          	lfsr	1,26
  1587  0053C0                     copy_data0:
  1588  0053C0  0009               	tblrd		*+
  1589  0053C2  CFF5 FFEE          	movff	tablat,postinc0
  1590  0053C6  50E5               	movf	postdec1,w,c
  1591  0053C8  50E1               	movf	fsr1l,w,c
  1592  0053CA  E1FA               	bnz	copy_data0
  1593                           
  1594                           ; Initialize objects allocated to BANK1 (20 bytes)
  1595                           ; load TBLPTR registers with __pidataBANK1
  1596  0053CC  0E20               	movlw	low __pidataBANK1
  1597  0053CE  6EF6               	movwf	tblptrl,c
  1598  0053D0  0E73               	movlw	high __pidataBANK1
  1599  0053D2  6EF7               	movwf	tblptrh,c
  1600  0053D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1601  0053D6  6EF8               	movwf	tblptru,c
  1602  0053D8  EE01  F0E9         	lfsr	0,__pdataBANK1
  1603  0053DC  EE10 F014          	lfsr	1,20
  1604  0053E0                     copy_data1:
  1605  0053E0  0009               	tblrd		*+
  1606  0053E2  CFF5 FFEE          	movff	tablat,postinc0
  1607  0053E6  50E5               	movf	postdec1,w,c
  1608  0053E8  50E1               	movf	fsr1l,w,c
  1609  0053EA  E1FA               	bnz	copy_data1
  1610                           
  1611                           ; Initialize objects allocated to BANK0 (1 bytes)
  1612                           ; load TBLPTR registers with __pidataBANK0
  1613  0053EC  0E76               	movlw	low __pidataBANK0
  1614  0053EE  6EF6               	movwf	tblptrl,c
  1615  0053F0  0E74               	movlw	high __pidataBANK0
  1616  0053F2  6EF7               	movwf	tblptrh,c
  1617  0053F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1618  0053F6  6EF8               	movwf	tblptru,c
  1619  0053F8  0009               	tblrd		*+	;fetch initializer
  1620  0053FA  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1621                           
  1622                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1623  0053FE  EE02  F0CC         	lfsr	0,__pbssBIGRAMll
  1624  005402  EE12 F000          	lfsr	1,512
  1625  005406                     clear_0:
  1626  005406  6AEE               	clrf	postinc0,c
  1627  005408  50E5               	movf	postdec1,w,c
  1628  00540A  50E1               	movf	fsr1l,w,c
  1629  00540C  E1FC               	bnz	clear_0
  1630  00540E  50E2               	movf	fsr1h,w,c
  1631  005410  E1FA               	bnz	clear_0
  1632                           
  1633                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1634  005412  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1635  005416  EE14 F000          	lfsr	1,1024
  1636  00541A                     clear_1:
  1637  00541A  6AEE               	clrf	postinc0,c
  1638  00541C  50E5               	movf	postdec1,w,c
  1639  00541E  50E1               	movf	fsr1l,w,c
  1640  005420  E1FC               	bnz	clear_1
  1641  005422  50E2               	movf	fsr1h,w,c
  1642  005424  E1FA               	bnz	clear_1
  1643                           
  1644                           ; Clear objects allocated to BANK2 (178 bytes)
  1645  005426  EE02  F000         	lfsr	0,__pbssBANK2
  1646  00542A  0EB2               	movlw	178
  1647  00542C                     clear_2:
  1648  00542C  6AEE               	clrf	postinc0,c
  1649  00542E  06E8               	decf	wreg,f,c
  1650  005430  E1FD               	bnz	clear_2
  1651                           
  1652                           ; Clear objects allocated to BANK1 (233 bytes)
  1653  005432  EE01  F000         	lfsr	0,__pbssBANK1
  1654  005436  0EE9               	movlw	233
  1655  005438                     clear_3:
  1656  005438  6AEE               	clrf	postinc0,c
  1657  00543A  06E8               	decf	wreg,f,c
  1658  00543C  E1FD               	bnz	clear_3
  1659                           
  1660                           ; Clear objects allocated to BANK0 (85 bytes)
  1661  00543E  EE00  F060         	lfsr	0,__pbssBANK0
  1662  005442  0E55               	movlw	85
  1663  005444                     clear_4:
  1664  005444  6AEE               	clrf	postinc0,c
  1665  005446  06E8               	decf	wreg,f,c
  1666  005448  E1FD               	bnz	clear_4
  1667                           
  1668                           ; Clear objects allocated to COMRAM (1 bytes)
  1669  00544A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1670  00544C                     end_of_initialization:
  1671                           	opt stack 0
  1672  00544C                     __end_of__initialization:
  1673                           	opt stack 0
  1674  00544C  0100               	movlb	0
  1675  00544E  EFA1  F024         	goto	_main	;jump to C main() function
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           postdec1	equ	0xFE5
  1683                           fsr1h	equ	0xFE2
  1684                           fsr1l	equ	0xFE1
  1685                           
  1686                           	psect	bssCOMRAM
  1687  00005F                     __pbssCOMRAM:
  1688                           	opt stack 0
  1689  00005F                     _USBDeviceState:
  1690                           	opt stack 0
  1691  00005F                     	ds	1
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           postdec1	equ	0xFE5
  1699                           fsr1h	equ	0xFE2
  1700                           fsr1l	equ	0xFE1
  1701                           
  1702                           	psect	bssBANK0
  1703  000060                     __pbssBANK0:
  1704                           	opt stack 0
  1705  000060                     _os:
  1706                           	opt stack 0
  1707  000060                     	ds	14
  1708  00006E                     _inPipes:
  1709                           	opt stack 0
  1710  00006E                     	ds	6
  1711  000074                     _pBDTEntryIn:
  1712                           	opt stack 0
  1713  000074                     	ds	6
  1714  00007A                     _hex_file_size:
  1715                           	opt stack 0
  1716  00007A                     	ds	4
  1717  00007E                     _hex_file_offset:
  1718                           	opt stack 0
  1719  00007E                     	ds	4
  1720  000082                     _LBA:
  1721                           	opt stack 0
  1722  000082                     	ds	4
  1723  000086                     _TransferLength:
  1724                           	opt stack 0
  1725  000086                     	ds	2
  1726  000088                     _USBMSDInHandle:
  1727                           	opt stack 0
  1728  000088                     	ds	2
  1729  00008A                     _USBMSDOutHandle:
  1730                           	opt stack 0
  1731  00008A                     	ds	2
  1732  00008C                     _pBDTEntryEP0OutNext:
  1733                           	opt stack 0
  1734  00008C                     	ds	2
  1735  00008E                     _pBDTEntryEP0OutCurrent:
  1736                           	opt stack 0
  1737  00008E                     	ds	2
  1738  000090                     _active_configuration:
  1739                           	opt stack 0
  1740  000090                     	ds	1
  1741  000091                     _start_from_byte_next:
  1742                           	opt stack 0
  1743  000091                     	ds	1
  1744  000092                     _last_error:
  1745                           	opt stack 0
  1746  000092                     	ds	1
  1747  000093                     _power_state:
  1748                           	opt stack 0
  1749  000093                     	ds	1
  1750  000094                     _userInterfaceStatus:
  1751                           	opt stack 0
  1752  000094                     	ds	1
  1753  000095                     _enc2:
  1754                           	opt stack 0
  1755  000095                     	ds	1
  1756  000096                     _enc1:
  1757                           	opt stack 0
  1758  000096                     	ds	1
  1759  000097                     _MSDCBWValid:
  1760                           	opt stack 0
  1761  000097                     	ds	1
  1762  000098                     _MSDHostNoData:
  1763                           	opt stack 0
  1764  000098                     	ds	1
  1765  000099                     _SoftDetach:
  1766                           	opt stack 0
  1767  000099                     	ds	1
  1768  00009A                     _gblCBWLength:
  1769                           	opt stack 0
  1770  00009A                     	ds	1
  1771  00009B                     _MSDRetryAttempt:
  1772                           	opt stack 0
  1773  00009B                     	ds	1
  1774  00009C                     _MSDWriteState:
  1775                           	opt stack 0
  1776  00009C                     	ds	1
  1777  00009D                     _MSDReadState:
  1778                           	opt stack 0
  1779  00009D                     	ds	1
  1780  00009E                     _MSDCommandState:
  1781                           	opt stack 0
  1782  00009E                     	ds	1
  1783  00009F                     _MSD_State:
  1784                           	opt stack 0
  1785  00009F                     	ds	1
  1786  0000A0                     _USBTicksSinceSuspendEnd:
  1787                           	opt stack 0
  1788  0000A0                     	ds	1
  1789  0000A1                     _USBDeferOUTDataStagePackets:
  1790                           	opt stack 0
  1791  0000A1                     	ds	1
  1792  0000A2                     _USBDeferINDataStagePackets:
  1793                           	opt stack 0
  1794  0000A2                     	ds	1
  1795  0000A3                     _USBStatusStageEnabledFlag2:
  1796                           	opt stack 0
  1797  0000A3                     	ds	1
  1798  0000A4                     _USBStatusStageEnabledFlag1:
  1799                           	opt stack 0
  1800  0000A4                     	ds	1
  1801  0000A5                     _USBDeferStatusStagePacket:
  1802                           	opt stack 0
  1803  0000A5                     	ds	1
  1804  0000A6                     _USBStatusStageTimeoutCounter:
  1805                           	opt stack 0
  1806  0000A6                     	ds	1
  1807  0000A7                     _BothEP0OutUOWNsSet:
  1808                           	opt stack 0
  1809  0000A7                     	ds	1
  1810  0000A8                     _endpoint_number:
  1811                           	opt stack 0
  1812  0000A8                     	ds	1
  1813  0000A9                     _USBBusIsSuspended:
  1814                           	opt stack 0
  1815  0000A9                     	ds	1
  1816  0000AA                     _RemoteWakeup:
  1817                           	opt stack 0
  1818  0000AA                     	ds	1
  1819  0000AB                     _controlTransferState:
  1820                           	opt stack 0
  1821  0000AB                     	ds	1
  1822  0000AC                     _shortPacketStatus:
  1823                           	opt stack 0
  1824  0000AC                     	ds	1
  1825  0000AD                     _fast_read_cluster_number:
  1826                           	opt stack 0
  1827  0000AD                     	ds	2
  1828  0000AF                     _fast_read_cluster:
  1829                           	opt stack 0
  1830  0000AF                     	ds	2
  1831  0000B1                     _active_protocol:
  1832                           	opt stack 0
  1833  0000B1                     	ds	1
  1834  0000B2                     _idle_rate:
  1835                           	opt stack 0
  1836  0000B2                     	ds	1
  1837  0000B3                     _USTATcopy:
  1838                           	opt stack 0
  1839  0000B3                     	ds	1
  1840  0000B4                     _USBActiveConfiguration:
  1841                           	opt stack 0
  1842  0000B4                     	ds	1
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           postinc0	equ	0xFEE
  1848                           wreg	equ	0xFE8
  1849                           postdec1	equ	0xFE5
  1850                           fsr1h	equ	0xFE2
  1851                           fsr1l	equ	0xFE1
  1852                           
  1853                           	psect	dataBANK0
  1854  0000FE                     __pdataBANK0:
  1855                           	opt stack 0
  1856  0000FE                     _file_number:
  1857                           	opt stack 0
  1858  0000FE                     	ds	1
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           postinc0	equ	0xFEE
  1864                           wreg	equ	0xFE8
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           
  1869                           	psect	bssBANK1
  1870  000100                     __pbssBANK1:
  1871                           	opt stack 0
  1872  000100                     _gblCBW:
  1873                           	opt stack 0
  1874  000100                     	ds	31
  1875  00011F                     _gblSenseData:
  1876                           	opt stack 0
  1877  00011F                     	ds	18
  1878  000131                     _outPipes:
  1879                           	opt stack 0
  1880  000131                     	ds	8
  1881  000139                     _pBDTEntryOut:
  1882                           	opt stack 0
  1883  000139                     	ds	6
  1884  00013F                     _extended_linear_address:
  1885                           	opt stack 0
  1886  00013F                     	ds	4
  1887  000143                     _file_maximum_address:
  1888                           	opt stack 0
  1889  000143                     	ds	4
  1890  000147                     _file_minimum_address:
  1891                           	opt stack 0
  1892  000147                     	ds	4
  1893  00014B                     _gblBLKLen:
  1894                           	opt stack 0
  1895  00014B                     	ds	4
  1896  00014F                     _gblNumBLKS:
  1897                           	opt stack 0
  1898  00014F                     	ds	4
  1899  000153                     _USB1msTickCount:
  1900                           	opt stack 0
  1901  000153                     	ds	4
  1902  000157                     _config_external:
  1903                           	opt stack 0
  1904  000157                     	ds	3
  1905  00015A                     _config_internal:
  1906                           	opt stack 0
  1907  00015A                     	ds	3
  1908  00015D                     _ep_data_out:
  1909                           	opt stack 0
  1910  00015D                     	ds	3
  1911  000160                     _ep_data_in:
  1912                           	opt stack 0
  1913  000160                     	ds	3
  1914  000163                     _FileAddress:
  1915                           	opt stack 0
  1916  000163                     	ds	2
  1917  000165                     _flash_pages_written:
  1918                           	opt stack 0
  1919  000165                     	ds	2
  1920  000167                     _total_hex_file_entries:
  1921                           	opt stack 0
  1922  000167                     	ds	2
  1923  000169                     _hex_file_entries:
  1924                           	opt stack 0
  1925  000169                     	ds	2
  1926  00016B                     _startup_timer:
  1927                           	opt stack 0
  1928  00016B                     	ds	2
  1929  00016D                     _system_ui_inactive_count:
  1930                           	opt stack 0
  1931  00016D                     	ds	2
  1932  00016F                     _USBInHandle:
  1933                           	opt stack 0
  1934  00016F                     	ds	2
  1935  000171                     _USBOutHandle:
  1936                           	opt stack 0
  1937  000171                     	ds	2
  1938  000173                     _gblMediaPresent:
  1939                           	opt stack 0
  1940  000173                     	ds	2
  1941  000175                     _MSBBufferIndex:
  1942                           	opt stack 0
  1943  000175                     	ds	2
  1944  000177                     _ptrNextData:
  1945                           	opt stack 0
  1946  000177                     	ds	2
  1947  000179                     _pDst:
  1948                           	opt stack 0
  1949  000179                     	ds	2
  1950  00017B                     _display_content:
  1951                           	opt stack 0
  1952  00017B                     	ds	80
  1953  0001CB                     _hex_file_entry:
  1954                           	opt stack 0
  1955  0001CB                     	ds	23
  1956  0001E2                     _mediaInformation:
  1957                           	opt stack 0
  1958  0001E2                     	ds	5
  1959  0001E7                     _USBAlternateInterface:
  1960                           	opt stack 0
  1961  0001E7                     	ds	2
  1962                           tblptru	equ	0xFF8
  1963                           tblptrh	equ	0xFF7
  1964                           tblptrl	equ	0xFF6
  1965                           tablat	equ	0xFF5
  1966                           postinc0	equ	0xFEE
  1967                           wreg	equ	0xFE8
  1968                           postdec1	equ	0xFE5
  1969                           fsr1h	equ	0xFE2
  1970                           fsr1l	equ	0xFE1
  1971                           
  1972                           	psect	dataBANK1
  1973  0001E9                     __pdataBANK1:
  1974                           	opt stack 0
  1975  0001E9                     _LUN:
  1976                           	opt stack 0
  1977  0001E9                     	ds	20
  1978                           tblptru	equ	0xFF8
  1979                           tblptrh	equ	0xFF7
  1980                           tblptrl	equ	0xFF6
  1981                           tablat	equ	0xFF5
  1982                           postinc0	equ	0xFEE
  1983                           wreg	equ	0xFE8
  1984                           postdec1	equ	0xFE5
  1985                           fsr1h	equ	0xFE2
  1986                           fsr1l	equ	0xFE1
  1987                           
  1988                           	psect	bssBANK2
  1989  000200                     __pbssBANK2:
  1990                           	opt stack 0
  1991  000200                     _ToSendDataBuffer:
  1992                           	opt stack 0
  1993  000200                     	ds	64
  1994  000240                     _ReceivedDataBuffer:
  1995                           	opt stack 0
  1996  000240                     	ds	64
  1997  000280                     _file_buffer:
  1998                           	opt stack 0
  1999  000280                     	ds	50
  2000                           tblptru	equ	0xFF8
  2001                           tblptrh	equ	0xFF7
  2002                           tblptrl	equ	0xFF6
  2003                           tablat	equ	0xFF5
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postdec1	equ	0xFE5
  2007                           fsr1h	equ	0xFE2
  2008                           fsr1l	equ	0xFE1
  2009                           
  2010                           	psect	dataBANK2
  2011  0002B2                     __pdataBANK2:
  2012                           	opt stack 0
  2013  0002B2                     i2c_display_init@F6828:
  2014                           	opt stack 0
  2015  0002B2                     	ds	9
  2016  0002BB                     __i2c_display_send_init_sequence@F6825:
  2017                           	opt stack 0
  2018  0002BB                     	ds	9
  2019  0002C4                     	ds	8
  2020                           tblptru	equ	0xFF8
  2021                           tblptrh	equ	0xFF7
  2022                           tblptrl	equ	0xFF6
  2023                           tablat	equ	0xFF5
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           postdec1	equ	0xFE5
  2027                           fsr1h	equ	0xFE2
  2028                           fsr1l	equ	0xFE1
  2029                           
  2030                           	psect	bssBIGRAMlh
  2031  000800                     __pbssBIGRAMlh:
  2032                           	opt stack 0
  2033  000800                     _pageBuffer:
  2034                           	opt stack 0
  2035  000800                     	ds	1024
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           postdec1	equ	0xFE5
  2043                           fsr1h	equ	0xFE2
  2044                           fsr1l	equ	0xFE1
  2045                           
  2046                           	psect	bssBIGRAMll
  2047  0002CC                     __pbssBIGRAMll:
  2048                           	opt stack 0
  2049  0002CC                     _buffer:
  2050                           	opt stack 0
  2051  0002CC                     	ds	512
  2052                           tblptru	equ	0xFF8
  2053                           tblptrh	equ	0xFF7
  2054                           tblptrl	equ	0xFF6
  2055                           tablat	equ	0xFF5
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1h	equ	0xFE2
  2060                           fsr1l	equ	0xFE1
  2061                           
  2062                           	psect	cstackBANK0
  2063  0000B5                     __pcstackBANK0:
  2064                           	opt stack 0
  2065  0000B5                     fat_read_from_file_fast@sector:
  2066                           	opt stack 0
  2067                           
  2068                           ; 2 bytes @ 0x0
  2069  0000B5                     	ds	2
  2070  0000B7                     fat_read_from_file_fast@working_cluster:
  2071                           	opt stack 0
  2072                           
  2073                           ; 2 bytes @ 0x2
  2074  0000B7                     	ds	2
  2075  0000B9                     fat_read_from_file_fast@offset:
  2076                           	opt stack 0
  2077                           
  2078                           ; 2 bytes @ 0x4
  2079  0000B9                     	ds	2
  2080  0000BB                     fat_read_from_file_fast@needed_cluster:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x6
  2084  0000BB                     	ds	2
  2085  0000BD                     fat_read_from_file_fast@read_length:
  2086                           	opt stack 0
  2087                           
  2088                           ; 2 bytes @ 0x8
  2089  0000BD                     	ds	2
  2090  0000BF                     fat_read_from_file_fast@position:
  2091                           	opt stack 0
  2092                           
  2093                           ; 4 bytes @ 0xA
  2094  0000BF                     	ds	4
  2095  0000C3                     ??__bootloader_verify_file:
  2096  0000C3                     ??__bootloader_program:
  2097                           
  2098                           ; 1 bytes @ 0xE
  2099  0000C3                     	ds	8
  2100  0000CB                     __bootloader_program@buffer:
  2101                           	opt stack 0
  2102  0000CB                     __bootloader_verify_file@root:
  2103                           	opt stack 0
  2104                           
  2105                           ; 32 bytes @ 0x16
  2106  0000CB                     	ds	2
  2107  0000CD                     __bootloader_program@entry_page:
  2108                           	opt stack 0
  2109                           
  2110                           ; 2 bytes @ 0x18
  2111  0000CD                     	ds	2
  2112  0000CF                     __bootloader_program@address_within_page:
  2113                           	opt stack 0
  2114                           
  2115                           ; 2 bytes @ 0x1A
  2116  0000CF                     	ds	2
  2117  0000D1                     __bootloader_program@root:
  2118                           	opt stack 0
  2119                           
  2120                           ; 32 bytes @ 0x1C
  2121  0000D1                     	ds	26
  2122  0000EB                     __bootloader_verify_file@rec_counter:
  2123                           	opt stack 0
  2124                           
  2125                           ; 1 bytes @ 0x36
  2126  0000EB                     	ds	1
  2127  0000EC                     __bootloader_verify_file@return_value:
  2128                           	opt stack 0
  2129                           
  2130                           ; 4 bytes @ 0x37
  2131  0000EC                     	ds	4
  2132  0000F0                     __bootloader_verify_file@address32:
  2133                           	opt stack 0
  2134                           
  2135                           ; 4 bytes @ 0x3B
  2136  0000F0                     	ds	1
  2137  0000F1                     __bootloader_program@return_value:
  2138                           	opt stack 0
  2139                           
  2140                           ; 4 bytes @ 0x3C
  2141  0000F1                     	ds	4
  2142  0000F5                     __bootloader_program@address32:
  2143                           	opt stack 0
  2144                           
  2145                           ; 4 bytes @ 0x40
  2146  0000F5                     	ds	4
  2147  0000F9                     __bootloader_program@start_from_byte:
  2148                           	opt stack 0
  2149                           
  2150                           ; 1 bytes @ 0x44
  2151  0000F9                     	ds	1
  2152  0000FA                     __bootloader_program@cntr:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x45
  2156  0000FA                     	ds	2
  2157  0000FC                     __bootloader_program@page_to_write:
  2158                           	opt stack 0
  2159                           
  2160                           ; 2 bytes @ 0x47
  2161  0000FC                     	ds	2
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           
  2172                           	psect	cstackCOMRAM
  2173  000001                     __pcstackCOMRAM:
  2174                           	opt stack 0
  2175  000001                     ??_USBStdGetDscHandler:
  2176  000001                     ??_USBStdGetStatusHandler:
  2177  000001                     ??_system_delay_ms:
  2178  000001                     ??__i2c_wait_idle:
  2179  000001                     ??__display_clear:
  2180  000001                     ?_USBTransferOnePacket:
  2181                           	opt stack 0
  2182  000001                     ?_ExternalFlash_MediaInitialize:
  2183                           	opt stack 0
  2184  000001                     ?_ExternalFlash_SectorSizeRead:
  2185                           	opt stack 0
  2186  000001                     ?_bootloader_get_entries:
  2187                           	opt stack 0
  2188  000001                     ?_bootloader_get_total_entries:
  2189                           	opt stack 0
  2190  000001                     ?_bootloader_get_rec_address:
  2191                           	opt stack 0
  2192  000001                     ?_bootloader_get_flashPagesWritten:
  2193                           	opt stack 0
  2194  000001                     ?_strncmp:
  2195                           	opt stack 0
  2196  000001                     ?_internalFlash_pageFromAddress:
  2197                           	opt stack 0
  2198  000001                     ?_internalFlash_getBuffer:
  2199                           	opt stack 0
  2200  000001                     ?__sector_from_file_number:
  2201                           	opt stack 0
  2202  000001                     ?__offset_from_file_number:
  2203                           	opt stack 0
  2204  000001                     ?__data_sector_from_cluster:
  2205                           	opt stack 0
  2206  000001                     ?__fat_sector_from_cluster:
  2207                           	opt stack 0
  2208  000001                     ?__fat_offset_from_cluster:
  2209                           	opt stack 0
  2210  000001                     ?__read_value_from_offset:
  2211                           	opt stack 0
  2212  000001                     ?_bootloader_get_rec_dataLength:
  2213                           	opt stack 0
  2214  000001                     ?___wmul:
  2215                           	opt stack 0
  2216  000001                     ?___lwdiv:
  2217                           	opt stack 0
  2218  000001                     ?___lwmod:
  2219                           	opt stack 0
  2220  000001                     ?_ExternalFlash_CapacityRead:
  2221                           	opt stack 0
  2222  000001                     ?_bootloader_get_file_size:
  2223                           	opt stack 0
  2224  000001                     ?_internalFlash_addressFromPage:
  2225                           	opt stack 0
  2226  000001                     ?___lldiv:
  2227                           	opt stack 0
  2228  000001                     ?___llmod:
  2229                           	opt stack 0
  2230  000001                     USBTransferOnePacket@dir:
  2231                           	opt stack 0
  2232  000001                     USBStallEndpoint@dir:
  2233                           	opt stack 0
  2234  000001                     USBConfigureEndpoint@direction:
  2235                           	opt stack 0
  2236  000001                     USBCtrlTrfTxService@byteToSend:
  2237                           	opt stack 0
  2238  000001                     USBCtrlTrfRxService@i:
  2239                           	opt stack 0
  2240  000001                     __i2c_send@dat:
  2241                           	opt stack 0
  2242  000001                     display_get_character@position:
  2243                           	opt stack 0
  2244  000001                     __display_search@cntr:
  2245                           	opt stack 0
  2246  000001                     __display_rebooting@cntr:
  2247                           	opt stack 0
  2248  000001                     __display_suspended@cntr:
  2249                           	opt stack 0
  2250  000001                     hexCharToUint8@c:
  2251                           	opt stack 0
  2252  000001                     bootloader_get_rec_data@index:
  2253                           	opt stack 0
  2254  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2255                           	opt stack 0
  2256  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2257                           	opt stack 0
  2258  000001                     SYSTEM_Initialize@pll_startup_counter:
  2259                           	opt stack 0
  2260  000001                     ExternalFlash_MediaInitialize@config:
  2261                           	opt stack 0
  2262  000001                     ExternalFlash_SectorSizeRead@config:
  2263                           	opt stack 0
  2264  000001                     ExternalFlash_CapacityRead@config:
  2265                           	opt stack 0
  2266  000001                     ExternalFlash_MediaDetect@config:
  2267                           	opt stack 0
  2268  000001                     ExternalFlash_WriteProtectStateGet@config:
  2269                           	opt stack 0
  2270  000001                     __data_sector_from_cluster@fat_cluster:
  2271                           	opt stack 0
  2272  000001                     __fat_sector_from_cluster@cluster:
  2273                           	opt stack 0
  2274  000001                     __fat_offset_from_cluster@cluster:
  2275                           	opt stack 0
  2276  000001                     __read_value_from_offset@offset:
  2277                           	opt stack 0
  2278  000001                     __get_mbr@idx:
  2279                           	opt stack 0
  2280  000001                     __get_fbr@idx:
  2281                           	opt stack 0
  2282  000001                     __get_fat@idx:
  2283                           	opt stack 0
  2284  000001                     __get_root@idx:
  2285                           	opt stack 0
  2286  000001                     __get_data@idx:
  2287                           	opt stack 0
  2288  000001                     internalFlash_addressFromPage@page:
  2289                           	opt stack 0
  2290  000001                     spi_tx@data:
  2291                           	opt stack 0
  2292  000001                     spi_tx_tx@command:
  2293                           	opt stack 0
  2294  000001                     spi_tx_rx@command:
  2295                           	opt stack 0
  2296  000001                     ___wmul@multiplier:
  2297                           	opt stack 0
  2298  000001                     ___lwdiv@dividend:
  2299                           	opt stack 0
  2300  000001                     ___lwmod@dividend:
  2301                           	opt stack 0
  2302  000001                     memcpy@d1:
  2303                           	opt stack 0
  2304  000001                     memset@p1:
  2305                           	opt stack 0
  2306  000001                     strncmp@s1:
  2307                           	opt stack 0
  2308  000001                     __spi_init@details:
  2309                           	opt stack 0
  2310  000001                     __bootloader_check_address@address:
  2311                           	opt stack 0
  2312  000001                     internalFlash_pageFromAddress@address:
  2313                           	opt stack 0
  2314  000001                     ___lldiv@dividend:
  2315                           	opt stack 0
  2316  000001                     ___llmod@dividend:
  2317                           	opt stack 0
  2318                           
  2319                           ; 4 bytes @ 0x0
  2320  000001                     	ds	1
  2321  000002                     ??_USBConfigureEndpoint:
  2322  000002                     ??_USBStallEndpoint:
  2323  000002                     ??_display_get_character:
  2324  000002                     USBCtrlTrfRxService@byteToRead:
  2325                           	opt stack 0
  2326  000002                     USBCtrlTrfInHandler@lastDTS:
  2327                           	opt stack 0
  2328  000002                     system_delay_ms@ms:
  2329                           	opt stack 0
  2330  000002                     hexCharToUint8@ascii:
  2331                           	opt stack 0
  2332  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2333                           	opt stack 0
  2334  000002                     USBTransferOnePacket@data:
  2335                           	opt stack 0
  2336  000002                     USBStdGetStatusHandler@p:
  2337                           	opt stack 0
  2338                           
  2339                           ; 2 bytes @ 0x1
  2340  000002                     	ds	1
  2341  000003                     ??_MSDComputeDeviceInAndResidue:
  2342  000003                     ??__get_mbr:
  2343  000003                     ??__get_fbr:
  2344  000003                     ??__get_fat:
  2345  000003                     ??__get_root:
  2346  000003                     ?_hexCharsToUint16:
  2347                           	opt stack 0
  2348  000003                     system_delay_ms@cntr:
  2349                           	opt stack 0
  2350  000003                     __display_clear@row:
  2351                           	opt stack 0
  2352  000003                     __sector_from_file_number@file_number:
  2353                           	opt stack 0
  2354  000003                     __offset_from_file_number@file_number:
  2355                           	opt stack 0
  2356  000003                     hexCharsToUint8@c2:
  2357                           	opt stack 0
  2358  000003                     hexCharsToUint16@c2:
  2359                           	opt stack 0
  2360  000003                     SYSTEM_Initialize@pll_startup_counter_2930:
  2361                           	opt stack 0
  2362  000003                     __read_value_from_offset@buffer:
  2363                           	opt stack 0
  2364  000003                     spi_tx@length:
  2365                           	opt stack 0
  2366  000003                     spi_tx_tx@command_length:
  2367                           	opt stack 0
  2368  000003                     spi_tx_rx@command_length:
  2369                           	opt stack 0
  2370  000003                     ___wmul@multiplicand:
  2371                           	opt stack 0
  2372  000003                     ___lwdiv@divisor:
  2373                           	opt stack 0
  2374  000003                     ___lwmod@divisor:
  2375                           	opt stack 0
  2376  000003                     memset@c:
  2377                           	opt stack 0
  2378  000003                     strncmp@s2:
  2379                           	opt stack 0
  2380  000003                     memcpy@s1:
  2381                           	opt stack 0
  2382                           
  2383                           ; 3 bytes @ 0x2
  2384  000003                     	ds	1
  2385  000004                     ??_hexCharsToUint8:
  2386  000004                     USBTransferOnePacket@len:
  2387                           	opt stack 0
  2388  000004                     display_get_character@line:
  2389                           	opt stack 0
  2390  000004                     __display_clear@col:
  2391                           	opt stack 0
  2392  000004                     hexCharsToUint16@c3:
  2393                           	opt stack 0
  2394  000004                     spi_init@configuration:
  2395                           	opt stack 0
  2396  000004                     __sector_from_file_number@sector:
  2397                           	opt stack 0
  2398  000004                     __offset_from_file_number@offset:
  2399                           	opt stack 0
  2400                           
  2401                           ; 2 bytes @ 0x3
  2402  000004                     	ds	1
  2403  000005                     ??_USBTransferOnePacket:
  2404  000005                     ??_spi_tx:
  2405  000005                     ??_internalFlash_pageFromAddress:
  2406  000005                     ??__read_value_from_offset:
  2407  000005                     SYSTEM_Initialize@state:
  2408                           	opt stack 0
  2409  000005                     hexCharsToUint8@c1:
  2410                           	opt stack 0
  2411  000005                     hexCharsToUint16@c4:
  2412                           	opt stack 0
  2413  000005                     __bootloader_check_address@dataLength:
  2414                           	opt stack 0
  2415  000005                     ___lwmod@counter:
  2416                           	opt stack 0
  2417  000005                     __fill_buffer_get_display@outBuffer:
  2418                           	opt stack 0
  2419  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2420                           	opt stack 0
  2421  000005                     spi_tx_tx@data:
  2422                           	opt stack 0
  2423  000005                     spi_tx_rx@data:
  2424                           	opt stack 0
  2425  000005                     ___wmul@product:
  2426                           	opt stack 0
  2427  000005                     ___lwdiv@quotient:
  2428                           	opt stack 0
  2429  000005                     memset@n:
  2430                           	opt stack 0
  2431  000005                     strncmp@len:
  2432                           	opt stack 0
  2433  000005                     internalFlash_addressFromPage@address:
  2434                           	opt stack 0
  2435  000005                     ___lldiv@divisor:
  2436                           	opt stack 0
  2437  000005                     ___llmod@divisor:
  2438                           	opt stack 0
  2439                           
  2440                           ; 4 bytes @ 0x4
  2441  000005                     	ds	1
  2442  000006                     ??_hexCharsToUint16:
  2443  000006                     ??__bootloader_check_address:
  2444  000006                     USBStallEndpoint@ep:
  2445                           	opt stack 0
  2446  000006                     USBConfigureEndpoint@EPNum:
  2447                           	opt stack 0
  2448  000006                     __i2c_eeprom_busy@busy:
  2449                           	opt stack 0
  2450  000006                     hexCharsToUint8@retVal:
  2451                           	opt stack 0
  2452  000006                     __i2c_write@data:
  2453                           	opt stack 0
  2454  000006                     __i2c_read@data:
  2455                           	opt stack 0
  2456  000006                     i2c_display_write_fixed@data:
  2457                           	opt stack 0
  2458  000006                     memcpy@n:
  2459                           	opt stack 0
  2460                           
  2461                           ; 2 bytes @ 0x5
  2462  000006                     	ds	1
  2463  000007                     ??_strncmp:
  2464  000007                     ??__fill_buffer_get_bootloader_details:
  2465  000007                     __fill_buffer_get_display@secondHalf:
  2466                           	opt stack 0
  2467  000007                     ___lwdiv@counter:
  2468                           	opt stack 0
  2469  000007                     USBStallEndpoint@p:
  2470                           	opt stack 0
  2471  000007                     USBConfigureEndpoint@handle:
  2472                           	opt stack 0
  2473  000007                     spi_tx_tx@data_length:
  2474                           	opt stack 0
  2475  000007                     spi_tx_rx@data_length:
  2476                           	opt stack 0
  2477  000007                     memset@p:
  2478                           	opt stack 0
  2479                           
  2480                           ; 2 bytes @ 0x6
  2481  000007                     	ds	1
  2482  000008                     ??__fill_buffer_get_display:
  2483  000008                     __i2c_write@length:
  2484                           	opt stack 0
  2485  000008                     __i2c_read@length:
  2486                           	opt stack 0
  2487  000008                     i2c_display_write_fixed@length:
  2488                           	opt stack 0
  2489  000008                     __read_value_from_offset@value:
  2490                           	opt stack 0
  2491  000008                     utoa@buf:
  2492                           	opt stack 0
  2493  000008                     memcpy@s:
  2494                           	opt stack 0
  2495                           
  2496                           ; 3 bytes @ 0x7
  2497  000008                     	ds	1
  2498  000009                     ??_spi_tx_rx:
  2499  000009                     ??_spi_tx_tx:
  2500  000009                     ??__i2c_read:
  2501  000009                     ?_internalFlash_addressWithinPage:
  2502                           	opt stack 0
  2503  000009                     USBDeviceInit@i:
  2504                           	opt stack 0
  2505  000009                     USBEnableEndpoint@options:
  2506                           	opt stack 0
  2507  000009                     USBTransferOnePacket@ep:
  2508                           	opt stack 0
  2509  000009                     MSDErrorHandler@ErrorCase:
  2510                           	opt stack 0
  2511  000009                     __i2c_write@slave_address:
  2512                           	opt stack 0
  2513  000009                     i2c_display_write_fixed@pos:
  2514                           	opt stack 0
  2515  000009                     __flash_wakeup@command:
  2516                           	opt stack 0
  2517  000009                     hexCharsToUint16@c1:
  2518                           	opt stack 0
  2519  000009                     ___llmod@counter:
  2520                           	opt stack 0
  2521  000009                     internalFlash_erasePage@page:
  2522                           	opt stack 0
  2523  000009                     internalFlash_writePage@page:
  2524                           	opt stack 0
  2525  000009                     internalFlash_addressWithinPage@address:
  2526                           	opt stack 0
  2527  000009                     ___lldiv@quotient:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x8
  2531  000009                     	ds	1
  2532  00000A                     MSDErrorHandler@OldMSD_State:
  2533                           	opt stack 0
  2534  00000A                     __i2c_write@cntr:
  2535                           	opt stack 0
  2536  00000A                     __bootloader_check_address@worst_case:
  2537                           	opt stack 0
  2538  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2539                           	opt stack 0
  2540  00000A                     USBEnableEndpoint@p:
  2541                           	opt stack 0
  2542  00000A                     USBTransferOnePacket@handle:
  2543                           	opt stack 0
  2544  00000A                     hexCharsToUint16@retVal:
  2545                           	opt stack 0
  2546  00000A                     utoa@val:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0x9
  2550  00000A                     	ds	1
  2551  00000B                     ??_internalFlash_erasePage:
  2552  00000B                     ??_internalFlash_writePage:
  2553  00000B                     ??_i2c_display_init:
  2554  00000B                     __ic2_display_set_ddram_address@address:
  2555                           	opt stack 0
  2556  00000B                     __bootloader_check_address@byte_status:
  2557                           	opt stack 0
  2558  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2559                           	opt stack 0
  2560  00000B                     i2c_eeprom_writeByte@address:
  2561                           	opt stack 0
  2562  00000B                     memcpy@d:
  2563                           	opt stack 0
  2564  00000B                     __ic2_display_set_cgram_address@data_array:
  2565                           	opt stack 0
  2566  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2567                           	opt stack 0
  2568                           
  2569                           ; 4 bytes @ 0xA
  2570  00000B                     	ds	1
  2571  00000C                     ??_USBMSDInit:
  2572  00000C                     ?_parseHexFileEntry:
  2573                           	opt stack 0
  2574  00000C                     USBEnableEndpoint@ep:
  2575                           	opt stack 0
  2576  00000C                     __bootloader_check_address@cntr:
  2577                           	opt stack 0
  2578  00000C                     _USBCheckMSDRequest$2319:
  2579                           	opt stack 0
  2580  00000C                     MSDTransferTerminated@handle:
  2581                           	opt stack 0
  2582  00000C                     __ic2_display_set_ddram_address@data_array:
  2583                           	opt stack 0
  2584  00000C                     parseHexFileEntry@data:
  2585                           	opt stack 0
  2586  00000C                     utoa@base:
  2587                           	opt stack 0
  2588  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2589                           	opt stack 0
  2590  00000C                     i2c_display_init@init_sequence:
  2591                           	opt stack 0
  2592                           
  2593                           ; 9 bytes @ 0xB
  2594  00000C                     	ds	1
  2595  00000D                     ?__flash_get_status:
  2596                           	opt stack 0
  2597  00000D                     i2c_eeprom_writeByte@data:
  2598                           	opt stack 0
  2599  00000D                     __fill_buffer_get_display@cntr:
  2600                           	opt stack 0
  2601  00000D                     ___lldiv@counter:
  2602                           	opt stack 0
  2603  00000D                     memcpy@tmp:
  2604                           	opt stack 0
  2605  00000D                     internalFlash_addressWithinPage@page:
  2606                           	opt stack 0
  2607                           
  2608                           ; 2 bytes @ 0xC
  2609  00000D                     	ds	1
  2610  00000E                     ??_i2c_eeprom_writeByte:
  2611  00000E                     __ic2_display_set_cgram_address@address:
  2612                           	opt stack 0
  2613  00000E                     i2c_display_cursor@position:
  2614                           	opt stack 0
  2615  00000E                     __fill_buffer_get_display@line:
  2616                           	opt stack 0
  2617  00000E                     _USBCheckMSDRequest$2320:
  2618                           	opt stack 0
  2619  00000E                     _MSDTransferTerminated$2407:
  2620                           	opt stack 0
  2621  00000E                     utoa@v:
  2622                           	opt stack 0
  2623  00000E                     __display_itoa_u32@value:
  2624                           	opt stack 0
  2625  00000E                     parseHexFileEntry@offset:
  2626                           	opt stack 0
  2627  00000E                     internalFlash_read@address:
  2628                           	opt stack 0
  2629                           
  2630                           ; 4 bytes @ 0xD
  2631  00000E                     	ds	1
  2632  00000F                     ??_internalFlash_addressWithinPage:
  2633  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2634                           	opt stack 0
  2635  00000F                     i2c_display_cursor@line:
  2636                           	opt stack 0
  2637  00000F                     __flash_get_status@command:
  2638                           	opt stack 0
  2639  00000F                     __fill_buffer_get_display@start_line:
  2640                           	opt stack 0
  2641  00000F                     i2c_display_program_custom_character@bit_pattern:
  2642                           	opt stack 0
  2643  00000F                     internalFlash_writePage@cntr:
  2644                           	opt stack 0
  2645  00000F                     internalFlash_erasePage@address:
  2646                           	opt stack 0
  2647                           
  2648                           ; 4 bytes @ 0xE
  2649  00000F                     	ds	1
  2650  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2651                           	opt stack 0
  2652  000010                     __i2c_read@slave_address:
  2653                           	opt stack 0
  2654  000010                     i2c_display_cursor@address:
  2655                           	opt stack 0
  2656  000010                     __fill_buffer_get_display@position:
  2657                           	opt stack 0
  2658  000010                     utoa@c:
  2659                           	opt stack 0
  2660  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2661                           	opt stack 0
  2662  000010                     __flash_get_status@status:
  2663                           	opt stack 0
  2664  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2665                           	opt stack 0
  2666                           
  2667                           ; 2 bytes @ 0xF
  2668  000010                     	ds	1
  2669  000011                     ??_i2c_display_program_custom_character:
  2670  000011                     MSDCheckForErrorCases@DeviceNoData:
  2671                           	opt stack 0
  2672  000011                     __i2c_read@cntr:
  2673                           	opt stack 0
  2674  000011                     internalFlash_writePage@block_cntr:
  2675                           	opt stack 0
  2676  000011                     i2c_eeprom_writeByte@dat:
  2677                           	opt stack 0
  2678  000011                     itoa@buf:
  2679                           	opt stack 0
  2680                           
  2681                           ; 2 bytes @ 0x10
  2682  000011                     	ds	1
  2683  000012                     internalFlash_writePage@byte_cntr:
  2684                           	opt stack 0
  2685  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2686                           	opt stack 0
  2687  000012                     i2c_eeprom_readByte@address:
  2688                           	opt stack 0
  2689  000012                     __display_itoa_u32@text:
  2690                           	opt stack 0
  2691  000012                     __flash_is_busy@status:
  2692                           	opt stack 0
  2693  000012                     parseHexFileEntry@hexEntry:
  2694                           	opt stack 0
  2695  000012                     internalFlash_read@data_length:
  2696                           	opt stack 0
  2697                           
  2698                           ; 2 bytes @ 0x11
  2699  000012                     	ds	1
  2700  000013                     i2c_eeprom_writeByte@slave_address:
  2701                           	opt stack 0
  2702  000013                     itoa@val:
  2703                           	opt stack 0
  2704  000013                     internalFlash_writePage@address:
  2705                           	opt stack 0
  2706  000013                     internalFlash_addressWithinPage@page_start_address:
  2707                           	opt stack 0
  2708                           
  2709                           ; 4 bytes @ 0x12
  2710  000013                     	ds	1
  2711  000014                     ??_i2c_eeprom_readByte:
  2712  000014                     ??_parseHexFileEntry:
  2713  000014                     __display_itoa_u32@cntr:
  2714                           	opt stack 0
  2715  000014                     flash_is_busy@result:
  2716                           	opt stack 0
  2717  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2718                           	opt stack 0
  2719  000014                     __flash_compare_page_to_buffer@page:
  2720                           	opt stack 0
  2721  000014                     __flash_write_to_buffer@start:
  2722                           	opt stack 0
  2723  000014                     __flash_write_page_from_buffer@page:
  2724                           	opt stack 0
  2725  000014                     __flash_partial_read@page:
  2726                           	opt stack 0
  2727  000014                     internalFlash_read@buffer:
  2728                           	opt stack 0
  2729  000014                     __flash_set_page_size@command:
  2730                           	opt stack 0
  2731                           
  2732                           ; 4 bytes @ 0x13
  2733  000014                     	ds	1
  2734  000015                     __display_itoa_u32@number_of_digits:
  2735                           	opt stack 0
  2736  000015                     __fill_buffer_get_status@outBuffer:
  2737                           	opt stack 0
  2738  000015                     itoa@base:
  2739                           	opt stack 0
  2740  000015                     i2c_display_program_custom_character@data_array:
  2741                           	opt stack 0
  2742                           
  2743                           ; 11 bytes @ 0x14
  2744  000015                     	ds	1
  2745  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2746  000016                     ??__display_found:
  2747  000016                     __flash_compare_page_to_buffer@buffer:
  2748                           	opt stack 0
  2749  000016                     __flash_write_page_from_buffer@buffer:
  2750                           	opt stack 0
  2751  000016                     __flash_write_to_buffer@data:
  2752                           	opt stack 0
  2753  000016                     __flash_partial_read@start:
  2754                           	opt stack 0
  2755  000016                     internalFlash_readPage@page:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x15
  2759  000016                     	ds	1
  2760  000017                     ??__flash_compare_page_to_buffer:
  2761  000017                     ??__flash_write_page_from_buffer:
  2762  000017                     i2c_eeprom_readByte@slave_address:
  2763                           	opt stack 0
  2764  000017                     api_prepare@inBuffer:
  2765                           	opt stack 0
  2766  000017                     itoa@cp:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x16
  2770  000017                     	ds	1
  2771  000018                     ??_USBStdFeatureReqHandler:
  2772  000018                     USBStdSetCfgHandler@i:
  2773                           	opt stack 0
  2774  000018                     i2c_eeprom_readByte@addr:
  2775                           	opt stack 0
  2776  000018                     __display_found@start:
  2777                           	opt stack 0
  2778  000018                     __flash_set_page_size@size:
  2779                           	opt stack 0
  2780  000018                     __flash_write_to_buffer@data_length:
  2781                           	opt stack 0
  2782  000018                     __flash_partial_read@length:
  2783                           	opt stack 0
  2784  000018                     internalFlash_readPage@address:
  2785                           	opt stack 0
  2786                           
  2787                           ; 4 bytes @ 0x17
  2788  000018                     	ds	1
  2789  000019                     __display_found@cntr:
  2790                           	opt stack 0
  2791  000019                     USBStdFeatureReqHandler@pUEP:
  2792                           	opt stack 0
  2793  000019                     __display_itoa_u16@value:
  2794                           	opt stack 0
  2795  000019                     api_prepare@outBuffer:
  2796                           	opt stack 0
  2797                           
  2798                           ; 2 bytes @ 0x18
  2799  000019                     	ds	1
  2800  00001A                     __flash_write_to_buffer@buffer:
  2801                           	opt stack 0
  2802  00001A                     __flash_compare_page_to_buffer@status:
  2803                           	opt stack 0
  2804  00001A                     __flash_partial_read@data:
  2805                           	opt stack 0
  2806  00001A                     __flash_write_page_from_buffer@command:
  2807                           	opt stack 0
  2808                           
  2809                           ; 4 bytes @ 0x19
  2810  00001A                     	ds	1
  2811  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2812                           	opt stack 0
  2813  00001B                     api_prepare@command:
  2814                           	opt stack 0
  2815  00001B                     __display_itoa_u16@text:
  2816                           	opt stack 0
  2817  00001B                     __flash_write_to_buffer@command:
  2818                           	opt stack 0
  2819                           
  2820                           ; 4 bytes @ 0x1A
  2821  00001B                     	ds	1
  2822  00001C                     ??__flash_partial_read:
  2823  00001C                     parseHexFileEntry@i:
  2824                           	opt stack 0
  2825  00001C                     USBStdFeatureReqHandler@p:
  2826                           	opt stack 0
  2827  00001C                     __flash_compare_page_to_buffer@command:
  2828                           	opt stack 0
  2829                           
  2830                           ; 4 bytes @ 0x1B
  2831  00001C                     	ds	1
  2832  00001D                     ??__display_verify:
  2833  00001D                     ??__display_checked:
  2834  00001D                     __display_start@cntr:
  2835                           	opt stack 0
  2836  00001D                     __display_failed@cntr:
  2837                           	opt stack 0
  2838  00001D                     __display_programming@cntr:
  2839                           	opt stack 0
  2840  00001D                     __display_done@cntr:
  2841                           	opt stack 0
  2842                           
  2843                           ; 1 bytes @ 0x1C
  2844  00001D                     	ds	1
  2845  00001E                     ??_USBCtrlEPService:
  2846  00001E                     
  2847                           ; 1 bytes @ 0x1D
  2848  00001E                     	ds	1
  2849  00001F                     __display_verify@cntr:
  2850                           	opt stack 0
  2851  00001F                     __display_checked@start:
  2852                           	opt stack 0
  2853                           
  2854                           ; 1 bytes @ 0x1E
  2855  00001F                     	ds	1
  2856  000020                     USBDeviceTasks@i:
  2857                           	opt stack 0
  2858  000020                     i2c_display_program_custom_character@address:
  2859                           	opt stack 0
  2860  000020                     __display_checked@cntr:
  2861                           	opt stack 0
  2862  000020                     flash_sector_write@page:
  2863                           	opt stack 0
  2864  000020                     __flash_partial_read@command:
  2865                           	opt stack 0
  2866                           
  2867                           ; 4 bytes @ 0x1F
  2868  000020                     	ds	1
  2869  000021                     ??_display_prepare:
  2870  000021                     i2c_display_program_custom_character@cntr:
  2871                           	opt stack 0
  2872                           
  2873                           ; 1 bytes @ 0x20
  2874  000021                     	ds	1
  2875  000022                     flash_sector_write@data:
  2876                           	opt stack 0
  2877                           
  2878                           ; 2 bytes @ 0x21
  2879  000022                     	ds	1
  2880  000023                     display_prepare@mode:
  2881                           	opt stack 0
  2882                           
  2883                           ; 1 bytes @ 0x22
  2884  000023                     	ds	1
  2885  000024                     flash_sector_write@match:
  2886                           	opt stack 0
  2887  000024                     __parse_command_short@cmd:
  2888                           	opt stack 0
  2889  000024                     __flash_partial_read@address:
  2890                           	opt stack 0
  2891                           
  2892                           ; 4 bytes @ 0x23
  2893  000024                     	ds	1
  2894  000025                     ExternalFlash_SectorWrite@config:
  2895                           	opt stack 0
  2896  000025                     fat_format@cntr:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x24
  2900  000025                     	ds	2
  2901  000027                     __parse_format_drive@data:
  2902                           	opt stack 0
  2903  000027                     ExternalFlash_SectorWrite@sector_addr:
  2904                           	opt stack 0
  2905                           
  2906                           ; 4 bytes @ 0x26
  2907  000027                     	ds	1
  2908  000028                     flash_sector_read@page:
  2909                           	opt stack 0
  2910  000028                     flash_partial_read@page:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x27
  2914  000028                     	ds	1
  2915  000029                     __parse_format_drive@out_buffer:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0x28
  2919  000029                     	ds	1
  2920  00002A                     flash_sector_read@data:
  2921                           	opt stack 0
  2922  00002A                     flash_partial_read@start:
  2923                           	opt stack 0
  2924                           
  2925                           ; 2 bytes @ 0x29
  2926  00002A                     	ds	1
  2927  00002B                     ExternalFlash_SectorWrite@buffer:
  2928                           	opt stack 0
  2929  00002B                     __parse_format_drive@out_idx_ptr:
  2930                           	opt stack 0
  2931                           
  2932                           ; 2 bytes @ 0x2A
  2933  00002B                     	ds	1
  2934  00002C                     ??_fat_get_format_status:
  2935  00002C                     flash_partial_read@length:
  2936                           	opt stack 0
  2937  00002C                     ExternalFlash_SectorRead@config:
  2938                           	opt stack 0
  2939  00002C                     fat_find_file@name:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x2B
  2943  00002C                     	ds	1
  2944  00002D                     ??__parse_format_drive:
  2945  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2946                           	opt stack 0
  2947                           
  2948                           ; 1 bytes @ 0x2C
  2949  00002D                     	ds	1
  2950  00002E                     __parse_format_drive@return_value:
  2951                           	opt stack 0
  2952  00002E                     flash_partial_read@data:
  2953                           	opt stack 0
  2954  00002E                     ExternalFlash_SectorWrite@page:
  2955                           	opt stack 0
  2956  00002E                     fat_find_file@extension:
  2957                           	opt stack 0
  2958  00002E                     fat_get_format_status@cntr:
  2959                           	opt stack 0
  2960  00002E                     ExternalFlash_SectorRead@sector_addr:
  2961                           	opt stack 0
  2962                           
  2963                           ; 4 bytes @ 0x2D
  2964  00002E                     	ds	1
  2965  00002F                     __parse_command_long@data:
  2966                           	opt stack 0
  2967                           
  2968                           ; 2 bytes @ 0x2E
  2969  00002F                     	ds	1
  2970  000030                     ??_MSDWriteHandler:
  2971  000030                     ??_fat_find_file:
  2972  000030                     ?__read_fat:
  2973                           	opt stack 0
  2974  000030                     __root_is_available@root_sector:
  2975                           	opt stack 0
  2976  000030                     __read_fat@cluster:
  2977                           	opt stack 0
  2978  000030                     fat_get_file_information@data:
  2979                           	opt stack 0
  2980                           
  2981                           ; 2 bytes @ 0x2F
  2982  000030                     	ds	1
  2983  000031                     __parse_command_long@out_buffer:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x30
  2987  000031                     	ds	1
  2988  000032                     fat_find_file@file_number:
  2989                           	opt stack 0
  2990  000032                     ExternalFlash_SectorRead@buffer:
  2991                           	opt stack 0
  2992  000032                     __root_is_available@offset:
  2993                           	opt stack 0
  2994  000032                     __read_fat@sector:
  2995                           	opt stack 0
  2996                           
  2997                           ; 2 bytes @ 0x31
  2998  000032                     	ds	1
  2999  000033                     fat_find_file@sector:
  3000                           	opt stack 0
  3001  000033                     fat_get_file_information@root_sector:
  3002                           	opt stack 0
  3003  000033                     __parse_command_long@out_idx_ptr:
  3004                           	opt stack 0
  3005                           
  3006                           ; 2 bytes @ 0x32
  3007  000033                     	ds	1
  3008  000034                     __root_is_available@file_number:
  3009                           	opt stack 0
  3010  000034                     ExternalFlash_SectorRead@page:
  3011                           	opt stack 0
  3012  000034                     __read_fat@offset:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x33
  3016  000034                     	ds	1
  3017  000035                     __root_is_available@first_byte:
  3018                           	opt stack 0
  3019  000035                     __parse_command_long@length:
  3020                           	opt stack 0
  3021  000035                     fat_find_file@offset:
  3022                           	opt stack 0
  3023  000035                     fat_get_file_information@offset:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x34
  3027  000035                     	ds	1
  3028  000036                     ??_MSDReadHandler:
  3029  000036                     ?_fat_get_file_size:
  3030                           	opt stack 0
  3031  000036                     __read_fat@value:
  3032                           	opt stack 0
  3033  000036                     api_parse@inBuffer:
  3034                           	opt stack 0
  3035                           
  3036                           ; 2 bytes @ 0x35
  3037  000036                     	ds	1
  3038  000037                     fat_get_file_information@file_number:
  3039                           	opt stack 0
  3040                           
  3041                           ; 1 bytes @ 0x36
  3042  000037                     	ds	1
  3043  000038                     ?__find_nth_cluster:
  3044                           	opt stack 0
  3045  000038                     api_parse@receivedDataLength:
  3046                           	opt stack 0
  3047  000038                     __find_nth_cluster@cluster:
  3048                           	opt stack 0
  3049                           
  3050                           ; 2 bytes @ 0x37
  3051  000038                     	ds	1
  3052  000039                     api_parse@outBuffer:
  3053                           	opt stack 0
  3054                           
  3055                           ; 2 bytes @ 0x38
  3056  000039                     	ds	1
  3057  00003A                     ??_MSDProcessCommandMediaPresent:
  3058  00003A                     __find_nth_cluster@n:
  3059                           	opt stack 0
  3060  00003A                     fat_get_file_size@sector:
  3061                           	opt stack 0
  3062                           
  3063                           ; 2 bytes @ 0x39
  3064  00003A                     	ds	1
  3065  00003B                     ??_api_parse:
  3066                           
  3067                           ; 1 bytes @ 0x3A
  3068  00003B                     	ds	1
  3069  00003C                     _MSDProcessCommandMediaPresent$2390:
  3070                           	opt stack 0
  3071  00003C                     __find_nth_cluster@offset:
  3072                           	opt stack 0
  3073  00003C                     fat_get_file_size@offset:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x3B
  3077  00003C                     	ds	1
  3078  00003D                     api_parse@out_idx_ptr:
  3079                           	opt stack 0
  3080                           
  3081                           ; 2 bytes @ 0x3C
  3082  00003D                     	ds	1
  3083  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3084                           	opt stack 0
  3085  00003E                     __find_nth_cluster@sector_in_buffer:
  3086                           	opt stack 0
  3087  00003E                     fat_get_file_size@file_size:
  3088                           	opt stack 0
  3089                           
  3090                           ; 4 bytes @ 0x3D
  3091  00003E                     	ds	1
  3092  00003F                     api_parse@out_idx:
  3093                           	opt stack 0
  3094  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3095                           	opt stack 0
  3096                           
  3097                           ; 4 bytes @ 0x3E
  3098  00003F                     	ds	1
  3099  000040                     api_parse@in_idx:
  3100                           	opt stack 0
  3101  000040                     __find_nth_cluster@sector:
  3102                           	opt stack 0
  3103                           
  3104                           ; 2 bytes @ 0x3F
  3105  000040                     	ds	1
  3106  000041                     
  3107                           ; 1 bytes @ 0x40
  3108  000041                     	ds	1
  3109  000042                     fat_get_file_size@file_number:
  3110                           	opt stack 0
  3111  000042                     fat_read_from_file_fast@start_byte:
  3112                           	opt stack 0
  3113                           
  3114                           ; 4 bytes @ 0x41
  3115  000042                     	ds	1
  3116  000043                     MSDProcessCommandMediaPresent@capacity:
  3117                           	opt stack 0
  3118                           
  3119                           ; 4 bytes @ 0x42
  3120  000043                     	ds	3
  3121  000046                     fat_read_from_file_fast@length:
  3122                           	opt stack 0
  3123                           
  3124                           ; 4 bytes @ 0x45
  3125  000046                     	ds	1
  3126  000047                     MSDProcessCommandMediaPresent@i:
  3127                           	opt stack 0
  3128                           
  3129                           ; 1 bytes @ 0x46
  3130  000047                     	ds	1
  3131  000048                     ??_MSDProcessCommand:
  3132  000048                     
  3133                           ; 1 bytes @ 0x47
  3134  000048                     	ds	2
  3135  00004A                     fat_read_from_file_fast@data:
  3136                           	opt stack 0
  3137                           
  3138                           ; 2 bytes @ 0x49
  3139  00004A                     	ds	2
  3140  00004C                     fat_read_from_file_fast@cluster:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x4B
  3144  00004C                     	ds	1
  3145  00004D                     ??_MSDTasks:
  3146                           
  3147                           ; 1 bytes @ 0x4C
  3148  00004D                     	ds	1
  3149  00004E                     _MSDTasks$2372:
  3150                           	opt stack 0
  3151  00004E                     fat_read_from_file_fast@cluster_number:
  3152                           	opt stack 0
  3153                           
  3154                           ; 2 bytes @ 0x4D
  3155  00004E                     	ds	2
  3156  000050                     ??_fat_read_from_file_fast:
  3157  000050                     _MSDTasks$2373:
  3158                           	opt stack 0
  3159                           
  3160                           ; 2 bytes @ 0x4F
  3161  000050                     	ds	2
  3162  000052                     MSDTasks@i:
  3163                           	opt stack 0
  3164                           
  3165                           ; 1 bytes @ 0x51
  3166  000052                     	ds	1
  3167  000053                     
  3168                           ; 1 bytes @ 0x52
  3169  000053                     	ds	9
  3170  00005C                     bootloader_run@timeslot:
  3171                           	opt stack 0
  3172                           
  3173                           ; 1 bytes @ 0x5B
  3174  00005C                     	ds	1
  3175  00005D                     ??_main:
  3176                           
  3177                           ; 1 bytes @ 0x5C
  3178  00005D                     	ds	2
  3179                           tblptru	equ	0xFF8
  3180                           tblptrh	equ	0xFF7
  3181                           tblptrl	equ	0xFF6
  3182                           tablat	equ	0xFF5
  3183                           postinc0	equ	0xFEE
  3184                           wreg	equ	0xFE8
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           
  3189 ;;
  3190 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3191 ;;
  3192 ;; *************** function _main *****************
  3193 ;; Defined at:
  3194 ;;		line 57 in file "main.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;                  1    wreg      void 
  3201 ;; Registers used:
  3202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : 0/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;Total ram usage:        2 bytes
  3213 ;; Hardware stack levels required when called:   12
  3214 ;; This function calls:
  3215 ;;		_APP_DeviceCustomHIDTasks
  3216 ;;		_APP_DeviceMSDTasks
  3217 ;;		_SYSTEM_Initialize
  3218 ;;		_USBDeviceInit
  3219 ;;		_USBDeviceTasks
  3220 ;;		__normal_mode
  3221 ;;		_bootloader_run
  3222 ;;		_display_prepare
  3223 ;;		_display_update
  3224 ;;		_jump_to_main_program
  3225 ;;		_system_full_init
  3226 ;;		_system_minimal_init
  3227 ;;		_system_minimal_init_undo
  3228 ;;		_timer_pseudo_isr
  3229 ;;		_ui_get_status
  3230 ;;		_ui_run
  3231 ;; This function is called by:
  3232 ;;		Startup code after reset
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text0
  3237  004942                     __ptext0:
  3238                           	opt stack 0
  3239  004942                     _main:
  3240                           	opt stack 19
  3241                           
  3242                           ;incstack = 0
  3243  004942  0004               	clrwdt		;# 
  3244                           
  3245                           ;main.c: 64: system_minimal_init();
  3246  004944  EC7A  F039         	call	_system_minimal_init	;wreg free
  3247                           
  3248                           ;main.c: 67: if(_normal_mode())
  3249  004948  EC60  F032         	call	__normal_mode	;wreg free
  3250  00494C  0900               	iorlw	0
  3251  00494E  B4D8               	btfsc	status,2,c
  3252  004950  D004               	goto	l863
  3253                           
  3254                           ;main.c: 68: {;main.c: 70: system_minimal_init_undo();
  3255  004952  ECDC  F039         	call	_system_minimal_init_undo	;wreg free
  3256                           
  3257                           ;main.c: 71: jump_to_main_program();
  3258  004956  EC25  F03A         	call	_jump_to_main_program	;wreg free
  3259  00495A                     l863:
  3260                           
  3261                           ;main.c: 72: };main.c: 76: system_full_init();
  3262  00495A  ECE9  F033         	call	_system_full_init	;wreg free
  3263                           
  3264                           ;main.c: 80: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3265  00495E  0E00               	movlw	0
  3266  004960  EC3D  F034         	call	_SYSTEM_Initialize
  3267                           
  3268                           ;main.c: 81: USBDeviceInit();
  3269  004964  EC7D  F01A         	call	_USBDeviceInit	;wreg free
  3270  004968                     l864:
  3271  004968  0004               	clrwdt		;# 
  3272                           
  3273                           ;main.c: 94: USBDeviceTasks();
  3274  00496A  EC0B  F017         	call	_USBDeviceTasks	;wreg free
  3275                           
  3276                           ;main.c: 95: APP_DeviceMSDTasks();
  3277  00496E  ECA3  F039         	call	_APP_DeviceMSDTasks	;wreg free
  3278                           
  3279                           ;main.c: 96: APP_DeviceCustomHIDTasks();
  3280  004972  EC1D  F02B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3281                           
  3282                           ;main.c: 100: timer_pseudo_isr();
  3283  004976  EC82  F029         	call	_timer_pseudo_isr	;wreg free
  3284                           
  3285                           ;main.c: 104: if(!os.done)
  3286  00497A  0100               	movlb	0	; () banked
  3287  00497C  5165               	movf	(_os+5)& (0+255),w,b
  3288  00497E  A4D8               	btfss	status,2,c
  3289  004980  D7F3               	goto	l864
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;main.c: 105: {;main.c: 107: ui_run();
  3293  004982  ECFC  F01D         	call	_ui_run	;wreg free
  3294                           
  3295                           ;main.c: 112: switch(os.timeSlot&0b00000111)
  3296  004986  D025               	goto	l866
  3297  004988                     
  3298                           ;main.c: 115: bootloader_run(0);
  3299  004988  0E00               	movlw	0
  3300  00498A  ECD3  F030         	call	_bootloader_run
  3301                           
  3302                           ;main.c: 116: break;
  3303  00498E  D043               	goto	l868
  3304  004990                     
  3305                           ;main.c: 119: bootloader_run(1);
  3306  004990  0E01               	movlw	1
  3307  004992  ECD3  F030         	call	_bootloader_run
  3308                           
  3309                           ;main.c: 120: break;
  3310  004996  D03F               	goto	l868
  3311  004998                     
  3312                           ;main.c: 123: bootloader_run(2);
  3313  004998  0E02               	movlw	2
  3314  00499A  ECD3  F030         	call	_bootloader_run
  3315                           
  3316                           ;main.c: 124: break;
  3317  00499E  D03B               	goto	l868
  3318  0049A0                     
  3319                           ;main.c: 127: bootloader_run(3);
  3320  0049A0  0E03               	movlw	3
  3321  0049A2  ECD3  F030         	call	_bootloader_run
  3322                           
  3323                           ;main.c: 128: break;
  3324  0049A6  D037               	goto	l868
  3325  0049A8                     
  3326                           ;main.c: 131: bootloader_run(4);
  3327  0049A8  0E04               	movlw	4
  3328  0049AA  ECD3  F030         	call	_bootloader_run
  3329                           
  3330                           ;main.c: 132: break;
  3331  0049AE  D033               	goto	l868
  3332  0049B0                     
  3333                           ;main.c: 135: bootloader_run(5);
  3334  0049B0  0E05               	movlw	5
  3335  0049B2  ECD3  F030         	call	_bootloader_run
  3336                           
  3337                           ;main.c: 136: break;
  3338  0049B6  D02F               	goto	l868
  3339  0049B8                     
  3340                           ;main.c: 139: display_prepare(os.display_mode);
  3341  0049B8  0100               	movlb	0	; () banked
  3342  0049BA  5167               	movf	(_os+7)& (0+255),w,b
  3343  0049BC  EC32  F024         	call	_display_prepare
  3344                           
  3345                           ;main.c: 140: break;
  3346  0049C0  D02A               	goto	l868
  3347  0049C2                     
  3348                           ;main.c: 143: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3349  0049C2  EC31  F03A         	call	_ui_get_status	;wreg free
  3350  0049C6  0A05               	xorlw	5
  3351  0049C8  A4D8               	btfss	status,2,c
  3352  0049CA  D025               	goto	l868
  3353                           
  3354                           ;main.c: 144: {;main.c: 145: display_update();
  3355  0049CC  EC9E  F030         	call	_display_update	;wreg free
  3356                           
  3357                           ;main.c: 148: }
  3358                           
  3359                           ;main.c: 146: };main.c: 147: break;
  3360  0049D0  D022               	goto	l868
  3361  0049D2                     l866:
  3362  0049D2  0100               	movlb	0	; () banked
  3363  0049D4  5164               	movf	(_os+4)& (0+255),w,b
  3364  0049D6  0B07               	andlw	7
  3365  0049D8  6E5D               	movwf	??_main& (0+255),c
  3366  0049DA  6A5E               	clrf	(??_main+1)& (0+255),c
  3367                           
  3368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3369                           ; Switch size 1, requested type "space"
  3370                           ; Number of cases is 1, Range of values is 0 to 0
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte            4     3 (average)
  3374                           ;	Chosen strategy is simple_byte
  3375  0049DC  505E               	movf	??_main+1,w,c
  3376  0049DE  0A00               	xorlw	0	; case 0
  3377  0049E0  A4D8               	btfss	status,2,c
  3378  0049E2  D019               	goto	l868
  3379                           
  3380                           ; BSR set to: 0
  3381                           ; Switch size 1, requested type "space"
  3382                           ; Number of cases is 8, Range of values is 0 to 7
  3383                           ; switch strategies available:
  3384                           ; Name         Instructions Cycles
  3385                           ; simple_byte           25    13 (average)
  3386                           ;	Chosen strategy is simple_byte
  3387  0049E4  505D               	movf	??_main,w,c
  3388  0049E6  0A00               	xorlw	0	; case 0
  3389  0049E8  B4D8               	btfsc	status,2,c
  3390  0049EA  D7CE               	goto	l867
  3391  0049EC  0A01               	xorlw	1	; case 1
  3392  0049EE  B4D8               	btfsc	status,2,c
  3393  0049F0  D7CF               	goto	l869
  3394  0049F2  0A03               	xorlw	3	; case 2
  3395  0049F4  B4D8               	btfsc	status,2,c
  3396  0049F6  D7D0               	goto	l870
  3397  0049F8  0A01               	xorlw	1	; case 3
  3398  0049FA  B4D8               	btfsc	status,2,c
  3399  0049FC  D7D1               	goto	l871
  3400  0049FE  0A07               	xorlw	7	; case 4
  3401  004A00  B4D8               	btfsc	status,2,c
  3402  004A02  D7D2               	goto	l872
  3403  004A04  0A01               	xorlw	1	; case 5
  3404  004A06  B4D8               	btfsc	status,2,c
  3405  004A08  D7D3               	goto	l873
  3406  004A0A  0A03               	xorlw	3	; case 6
  3407  004A0C  B4D8               	btfsc	status,2,c
  3408  004A0E  D7D4               	goto	l874
  3409  004A10  0A01               	xorlw	1	; case 7
  3410  004A12  B4D8               	btfsc	status,2,c
  3411  004A14  D7D6               	goto	l875
  3412  004A16                     l868:
  3413                           
  3414                           ;main.c: 149: os.done = 1;
  3415                           
  3416                           ; BSR set to: 0
  3417  004A16  0E01               	movlw	1
  3418  004A18  0100               	movlb	0	; () banked
  3419  004A1A  6F65               	movwf	(_os+5)& (0+255),b
  3420                           
  3421                           ; BSR set to: 0
  3422                           
  3423                           ; BSR set to: 0
  3424  004A1C  D7A5               	goto	l864
  3425  004A1E                     __end_of_main:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           postdec1	equ	0xFE5
  3434                           fsr1h	equ	0xFE2
  3435                           fsr1l	equ	0xFE1
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _ui_run *****************
  3439 ;; Defined at:
  3440 ;;		line 128 in file "ui.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    8
  3461 ;; This function calls:
  3462 ;;		__ui_encoder
  3463 ;;		_display_init
  3464 ;;		_system_encoder_enable
  3465 ;;		_ui_init
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text1
  3472  003BF8                     __ptext1:
  3473                           	opt stack 0
  3474  003BF8                     _ui_run:
  3475                           	opt stack 22
  3476                           
  3477                           ;ui.c: 130: switch(userInterfaceStatus)
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;incstack = 0
  3481  003BF8  D072               	goto	l1304
  3482  003BFA                     
  3483                           ;ui.c: 134: if (os.button1!=0 || os.button2!=0)
  3484  003BFA  0100               	movlb	0	; () banked
  3485  003BFC  5161               	movf	(_os+1)& (0+255),w,b
  3486  003BFE  A4D8               	btfss	status,2,c
  3487  003C00  D003               	goto	u12740
  3488                           
  3489                           ; BSR set to: 0
  3490  003C02  5163               	movf	(_os+3)& (0+255),w,b
  3491  003C04  B4D8               	btfsc	status,2,c
  3492  003C06  0012               	return	
  3493  003C08                     u12740:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;ui.c: 135: {;ui.c: 136: ui_init();
  3497                           
  3498                           ; BSR set to: 0
  3499  003C08  EC9A  F039         	call	_ui_init	;wreg free
  3500                           
  3501                           ;ui.c: 137: os.button1 = 0;
  3502  003C0C  0E00               	movlw	0
  3503  003C0E  0100               	movlb	0	; () banked
  3504  003C10  6F61               	movwf	(_os+1)& (0+255),b
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;ui.c: 138: os.button2 = 0;
  3508  003C12  0E00               	movlw	0
  3509  003C14  6F63               	movwf	(_os+3)& (0+255),b
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;ui.c: 139: };ui.c: 140: break;
  3513  003C16  0012               	return	
  3514  003C18                     
  3515                           ; BSR set to: 0
  3516                           ;ui.c: 145: system_ui_inactive_count = 0;
  3517                           
  3518                           ; BSR set to: 0
  3519  003C18  0E00               	movlw	0
  3520  003C1A  0101               	movlb	1	; () banked
  3521  003C1C  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3522  003C1E  0E00               	movlw	0
  3523  003C20  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3524                           
  3525                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3526  003C22  0E02               	movlw	2
  3527  003C24  0100               	movlb	0	; () banked
  3528  003C26  6F94               	movwf	_userInterfaceStatus& (0+255),b
  3529                           
  3530                           ;ui.c: 147: break;
  3531  003C28  0012               	return	
  3532  003C2A                     l1311:
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;ui.c: 151: LATAbits.LA3 = 0;
  3536  003C2A  9689               	bcf	3977,3,c	;volatile
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;ui.c: 153: system_ui_inactive_count = 0;
  3540  003C2C  0E00               	movlw	0
  3541  003C2E  0101               	movlb	1	; () banked
  3542  003C30  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3543  003C32  0E00               	movlw	0
  3544  003C34  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3545                           
  3546                           ;ui.c: 154: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3547  003C36  0E03               	movlw	3
  3548  003C38  0100               	movlb	0	; () banked
  3549  003C3A  6F94               	movwf	_userInterfaceStatus& (0+255),b
  3550                           
  3551                           ;ui.c: 155: break;
  3552  003C3C  0012               	return	
  3553  003C3E                     
  3554                           ; BSR set to: 0
  3555                           ;ui.c: 158: ++system_ui_inactive_count;
  3556                           
  3557                           ; BSR set to: 0
  3558  003C3E  0101               	movlb	1	; () banked
  3559  003C40  4B6D               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3560  003C42  2B6E               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3561                           
  3562                           ; BSR set to: 1
  3563                           ;ui.c: 160: if (system_ui_inactive_count>3)
  3564  003C44  516E               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3565  003C46  E104               	bnz	u12750
  3566  003C48  0E04               	movlw	4
  3567  003C4A  5D6D               	subwf	_system_ui_inactive_count& (0+255),w,b
  3568  003C4C  A0D8               	btfss	status,0,c
  3569  003C4E  0012               	return	
  3570  003C50                     u12750:
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;ui.c: 161: {;ui.c: 162: LATAbits.LA3 = 1;
  3574  003C50  8689               	bsf	3977,3,c	;volatile
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;ui.c: 163: system_ui_inactive_count = 0;
  3578  003C52  0E00               	movlw	0
  3579  003C54  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3580  003C56  0E00               	movlw	0
  3581  003C58  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3582                           
  3583                           ;ui.c: 164: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3584  003C5A  0E04               	movlw	4
  3585  003C5C  0100               	movlb	0	; () banked
  3586  003C5E  6F94               	movwf	_userInterfaceStatus& (0+255),b
  3587                           
  3588                           ; BSR set to: 0
  3589                           ;ui.c: 165: };ui.c: 166: break;
  3590  003C60  0012               	return	
  3591  003C62                     
  3592                           ; BSR set to: 0
  3593                           ;ui.c: 171: display_init();
  3594                           
  3595                           ; BSR set to: 0
  3596  003C62  ECE0  F034         	call	_display_init	;wreg free
  3597                           
  3598                           ;ui.c: 174: LATCbits.LC1 = 1;
  3599  003C66  828B               	bsf	3979,1,c	;volatile
  3600                           
  3601                           ;ui.c: 176: system_encoder_enable();
  3602  003C68  EC56  F039         	call	_system_encoder_enable	;wreg free
  3603                           
  3604                           ;ui.c: 178: system_ui_inactive_count = 0;
  3605  003C6C  0E00               	movlw	0
  3606  003C6E  0101               	movlb	1	; () banked
  3607  003C70  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3608  003C72  0E00               	movlw	0
  3609  003C74  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3610                           
  3611                           ; BSR set to: 1
  3612                           ;ui.c: 179: startup_timer = 0;
  3613  003C76  0E00               	movlw	0
  3614  003C78  6F6C               	movwf	(_startup_timer+1)& (0+255),b
  3615  003C7A  0E00               	movlw	0
  3616  003C7C  6F6B               	movwf	_startup_timer& (0+255),b
  3617                           
  3618                           ; BSR set to: 1
  3619                           ;ui.c: 180: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3620  003C7E  0E05               	movlw	5
  3621  003C80  0100               	movlb	0	; () banked
  3622  003C82  6F94               	movwf	_userInterfaceStatus& (0+255),b
  3623                           
  3624                           ;ui.c: 181: break;
  3625  003C84  0012               	return	
  3626  003C86                     
  3627                           ; BSR set to: 0
  3628                           ;ui.c: 184: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3629                           
  3630                           ; BSR set to: 0
  3631  003C86  5167               	movf	(_os+7)& (0+255),w,b
  3632  003C88  A4D8               	btfss	status,2,c
  3633  003C8A  D00B               	goto	l1317
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;ui.c: 185: {;ui.c: 186: ++startup_timer;
  3637  003C8C  0101               	movlb	1	; () banked
  3638  003C8E  4B6B               	infsnz	_startup_timer& (0+255),f,b
  3639  003C90  2B6C               	incf	(_startup_timer+1)& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;ui.c: 187: if(startup_timer==250)
  3643  003C92  0EFA               	movlw	250
  3644  003C94  196B               	xorwf	_startup_timer& (0+255),w,b
  3645  003C96  116C               	iorwf	(_startup_timer+1)& (0+255),w,b
  3646  003C98  A4D8               	btfss	status,2,c
  3647  003C9A  D003               	goto	l1317
  3648                           
  3649                           ; BSR set to: 1
  3650                           ;ui.c: 188: {;ui.c: 189: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3651  003C9C  0E10               	movlw	16
  3652  003C9E  0100               	movlb	0	; () banked
  3653  003CA0  6F67               	movwf	(_os+7)& (0+255),b
  3654  003CA2                     l1317:
  3655                           
  3656                           ;ui.c: 190: };ui.c: 191: };ui.c: 192: if (os.encoder1Count==0 && os.button1==0 && os.enc
      +                          oder2Count==0 && os.button2==0)
  3657                           
  3658                           ; BSR set to: 0
  3659  003CA2  0100               	movlb	0	; () banked
  3660  003CA4  5160               	movf	_os& (0+255),w,b
  3661  003CA6  A4D8               	btfss	status,2,c
  3662  003CA8  D012               	goto	l1318
  3663                           
  3664                           ; BSR set to: 0
  3665  003CAA  5161               	movf	(_os+1)& (0+255),w,b
  3666  003CAC  A4D8               	btfss	status,2,c
  3667  003CAE  D00F               	goto	l1318
  3668                           
  3669                           ; BSR set to: 0
  3670  003CB0  5162               	movf	(_os+2)& (0+255),w,b
  3671  003CB2  A4D8               	btfss	status,2,c
  3672  003CB4  D00C               	goto	l1318
  3673                           
  3674                           ; BSR set to: 0
  3675  003CB6  5163               	movf	(_os+3)& (0+255),w,b
  3676  003CB8  A4D8               	btfss	status,2,c
  3677  003CBA  D009               	goto	l1318
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;ui.c: 193: {;ui.c: 194: if(system_ui_inactive_count<0xFFFF)
  3681  003CBC  0101               	movlb	1	; () banked
  3682  003CBE  296D               	incf	_system_ui_inactive_count& (0+255),w,b
  3683  003CC0  E103               	bnz	u12820
  3684  003CC2  296E               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3685  003CC4  B4D8               	btfsc	status,2,c
  3686  003CC6  0012               	return	
  3687  003CC8                     u12820:
  3688                           
  3689                           ; BSR set to: 1
  3690                           ;ui.c: 195: ++system_ui_inactive_count;
  3691  003CC8  4B6D               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3692  003CCA  2B6E               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;ui.c: 196: }
  3696  003CCC  0012               	return	
  3697  003CCE                     l1318:
  3698                           
  3699                           ;ui.c: 197: else;ui.c: 198: {;ui.c: 199: system_ui_inactive_count = 0;
  3700                           
  3701                           ; BSR set to: 1
  3702  003CCE  0E00               	movlw	0
  3703  003CD0  0101               	movlb	1	; () banked
  3704  003CD2  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3705  003CD4  0E00               	movlw	0
  3706  003CD6  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  3707                           
  3708                           ; BSR set to: 1
  3709                           ;ui.c: 200: _ui_encoder();
  3710  003CD8  EC92  F015         	call	__ui_encoder	;wreg free
  3711                           
  3712                           ;ui.c: 203: }
  3713                           
  3714                           ;ui.c: 201: };ui.c: 202: break;
  3715  003CDC  0012               	return	
  3716  003CDE                     l1304:
  3717  003CDE  0100               	movlb	0	; () banked
  3718  003CE0  5194               	movf	_userInterfaceStatus& (0+255),w,b
  3719                           
  3720                           ; Switch size 1, requested type "space"
  3721                           ; Number of cases is 6, Range of values is 0 to 5
  3722                           ; switch strategies available:
  3723                           ; Name         Instructions Cycles
  3724                           ; simple_byte           19    10 (average)
  3725                           ;	Chosen strategy is simple_byte
  3726  003CE2  0A00               	xorlw	0	; case 0
  3727  003CE4  B4D8               	btfsc	status,2,c
  3728  003CE6  D789               	goto	l1305
  3729  003CE8  0A01               	xorlw	1	; case 1
  3730  003CEA  B4D8               	btfsc	status,2,c
  3731  003CEC  D795               	goto	l1310
  3732  003CEE  0A03               	xorlw	3	; case 2
  3733  003CF0  B4D8               	btfsc	status,2,c
  3734  003CF2  D79B               	goto	l1311
  3735  003CF4  0A01               	xorlw	1	; case 3
  3736  003CF6  B4D8               	btfsc	status,2,c
  3737  003CF8  D7A2               	goto	l1312
  3738  003CFA  0A07               	xorlw	7	; case 4
  3739  003CFC  B4D8               	btfsc	status,2,c
  3740  003CFE  D7B1               	goto	l1314
  3741  003D00  0A01               	xorlw	1	; case 5
  3742  003D02  A4D8               	btfss	status,2,c
  3743  003D04  0012               	return	
  3744  003D06  D7BF               	goto	l1315
  3745  003D08                     __end_of_ui_run:
  3746                           	opt stack 0
  3747                           tblptru	equ	0xFF8
  3748                           tblptrh	equ	0xFF7
  3749                           tblptrl	equ	0xFF6
  3750                           tablat	equ	0xFF5
  3751                           postinc0	equ	0xFEE
  3752                           wreg	equ	0xFE8
  3753                           postdec1	equ	0xFE5
  3754                           fsr1h	equ	0xFE2
  3755                           fsr1l	equ	0xFE1
  3756                           status	equ	0xFD8
  3757                           
  3758 ;; *************** function _system_encoder_enable *****************
  3759 ;; Defined at:
  3760 ;;		line 175 in file "os.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		wreg, status,2
  3769 ;; Tracked objects:
  3770 ;;		On entry : 0/0
  3771 ;;		On exit  : 0/0
  3772 ;;		Unchanged: 0/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_ui_run
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text2
  3788  0072AC                     __ptext2:
  3789                           	opt stack 0
  3790  0072AC                     _system_encoder_enable:
  3791                           	opt stack 29
  3792                           
  3793                           ;os.c: 178: INTCON3bits.INT2IF = 0;
  3794                           
  3795                           ;incstack = 0
  3796  0072AC  92F0               	bcf	intcon3,1,c	;volatile
  3797                           
  3798                           ;os.c: 179: INTCON3bits.INT3IF = 0;
  3799  0072AE  94F0               	bcf	intcon3,2,c	;volatile
  3800                           
  3801                           ;os.c: 182: os.encoder1Count = 0;
  3802  0072B0  0E00               	movlw	0
  3803  0072B2  0100               	movlb	0	; () banked
  3804  0072B4  6F60               	movwf	_os& (0+255),b
  3805                           
  3806                           ;os.c: 183: os.encoder1Count = 0;
  3807  0072B6  0E00               	movlw	0
  3808  0072B8  6F60               	movwf	_os& (0+255),b
  3809                           
  3810                           ;os.c: 184: os.button1 = 0;
  3811  0072BA  0E00               	movlw	0
  3812  0072BC  6F61               	movwf	(_os+1)& (0+255),b
  3813                           
  3814                           ;os.c: 185: os.button2 = 0;
  3815  0072BE  0E00               	movlw	0
  3816  0072C0  6F63               	movwf	(_os+3)& (0+255),b
  3817                           
  3818                           ; BSR set to: 0
  3819  0072C2  0012               	return		;funcret
  3820  0072C4                     __end_of_system_encoder_enable:
  3821                           	opt stack 0
  3822                           tblptru	equ	0xFF8
  3823                           tblptrh	equ	0xFF7
  3824                           tblptrl	equ	0xFF6
  3825                           tablat	equ	0xFF5
  3826                           intcon3	equ	0xFF0
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           postdec1	equ	0xFE5
  3830                           fsr1h	equ	0xFE2
  3831                           fsr1l	equ	0xFE1
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _display_init *****************
  3835 ;; Defined at:
  3836 ;;		line 171 in file "display.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    4
  3857 ;; This function calls:
  3858 ;;		_i2c_display_init
  3859 ;;		_i2c_display_program_custom_character
  3860 ;; This function is called by:
  3861 ;;		_ui_run
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text3
  3866  0069C0                     __ptext3:
  3867                           	opt stack 0
  3868  0069C0                     _display_init:
  3869                           	opt stack 25
  3870                           
  3871                           ;display.c: 173: i2c_display_init();
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;incstack = 0
  3875  0069C0  EC2B  F035         	call	_i2c_display_init	;wreg free
  3876                           
  3877                           ;display.c: 174: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
  3878  0069C4  0EB8               	movlw	low _bit_pattern_verticalbar
  3879  0069C6  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3880  0069C8  0E8F               	movlw	high _bit_pattern_verticalbar
  3881  0069CA  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3882  0069CC  0E00               	movlw	0
  3883  0069CE  EC86  F02F         	call	_i2c_display_program_custom_character
  3884                           
  3885                           ;display.c: 175: i2c_display_program_custom_character(0x01, bit_pattern_degree);
  3886  0069D2  0EB0               	movlw	low _bit_pattern_degree
  3887  0069D4  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3888  0069D6  0E8F               	movlw	high _bit_pattern_degree
  3889  0069D8  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3890  0069DA  0E01               	movlw	1
  3891  0069DC  EC86  F02F         	call	_i2c_display_program_custom_character
  3892                           
  3893                           ;display.c: 176: i2c_display_program_custom_character(0x02, bit_pattern_ae);
  3894  0069E0  0EA8               	movlw	low _bit_pattern_ae
  3895  0069E2  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3896  0069E4  0E8F               	movlw	high _bit_pattern_ae
  3897  0069E6  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3898  0069E8  0E02               	movlw	2
  3899  0069EA  EC86  F02F         	call	_i2c_display_program_custom_character
  3900                           
  3901                           ;display.c: 177: i2c_display_program_custom_character(0x03, bit_pattern_ue);
  3902  0069EE  0EA0               	movlw	low _bit_pattern_ue
  3903  0069F0  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3904  0069F2  0E8F               	movlw	high _bit_pattern_ue
  3905  0069F4  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3906  0069F6  0E03               	movlw	3
  3907  0069F8  EC86  F02F         	call	_i2c_display_program_custom_character
  3908                           
  3909                           ;display.c: 178: i2c_display_program_custom_character(0x04, bit_pattern_oe);
  3910  0069FC  0E98               	movlw	low _bit_pattern_oe
  3911  0069FE  6E0F               	movwf	i2c_display_program_custom_character@bit_pattern,c
  3912  006A00  0E8F               	movlw	high _bit_pattern_oe
  3913  006A02  6E10               	movwf	i2c_display_program_custom_character@bit_pattern+1,c
  3914  006A04  0E04               	movlw	4
  3915  006A06  EC86  F02F         	call	_i2c_display_program_custom_character
  3916  006A0A  0012               	return		;funcret
  3917  006A0C                     __end_of_display_init:
  3918                           	opt stack 0
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           intcon3	equ	0xFF0
  3924                           postinc0	equ	0xFEE
  3925                           wreg	equ	0xFE8
  3926                           postdec1	equ	0xFE5
  3927                           fsr1h	equ	0xFE2
  3928                           fsr1l	equ	0xFE1
  3929                           status	equ	0xFD8
  3930                           
  3931 ;; *************** function _i2c_display_program_custom_character *****************
  3932 ;; Defined at:
  3933 ;;		line 420 in file "i2c.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  address         1    wreg     unsigned char 
  3936 ;;  bit_pattern     2   14[COMRAM] PTR unsigned char 
  3937 ;;		 -> bit_pattern_oe(8), bit_pattern_ue(8), bit_pattern_ae(8), bit_pattern_degree(8), 
  3938 ;;		 -> bit_pattern_verticalbar(8), 
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  address         1   31[COMRAM] unsigned char 
  3941 ;;  data_array     11   20[COMRAM] unsigned char [11]
  3942 ;;  cntr            1   32[COMRAM] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  1    wreg      void 
  3945 ;; Registers used:
  3946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;Total ram usage:       19 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    3
  3959 ;; This function calls:
  3960 ;;		__i2c_write
  3961 ;;		__ic2_display_set_cgram_address
  3962 ;; This function is called by:
  3963 ;;		_display_init
  3964 ;; This function uses a non-reentrant model
  3965 ;;
  3966                           
  3967                           	psect	text4
  3968  005F0C                     __ptext4:
  3969                           	opt stack 0
  3970  005F0C                     _i2c_display_program_custom_character:
  3971                           	opt stack 25
  3972                           
  3973                           ;incstack = 0
  3974                           ;i2c_display_program_custom_character@address stored from wreg
  3975  005F0C  6E20               	movwf	i2c_display_program_custom_character@address,c
  3976                           
  3977                           ;i2c.c: 422: uint8_t cntr;;i2c.c: 423: uint8_t data_array[11];;i2c.c: 426: _ic2_display_
      +                          set_cgram_address(address<<3);
  3978  005F0E  3820               	swapf	i2c_display_program_custom_character@address,w,c
  3979  005F10  42E8               	rrncf	wreg,f,c
  3980  005F12  0BF8               	andlw	248
  3981  005F14  EC20  F038         	call	__ic2_display_set_cgram_address
  3982                           
  3983                           ;i2c.c: 429: data_array[0] = 0b01000000;
  3984  005F18  0E40               	movlw	64
  3985  005F1A  6E15               	movwf	i2c_display_program_custom_character@data_array,c
  3986                           
  3987                           ;i2c.c: 430: for(cntr=0; cntr<8; ++cntr)
  3988  005F1C  0E00               	movlw	0
  3989  005F1E  6E21               	movwf	i2c_display_program_custom_character@cntr,c
  3990  005F20                     l12925:
  3991  005F20  0E07               	movlw	7
  3992  005F22  6421               	cpfsgt	i2c_display_program_custom_character@cntr,c
  3993  005F24  D001               	goto	l1230
  3994  005F26  D022               	goto	u10490
  3995  005F28                     l1230:
  3996                           
  3997                           ;i2c.c: 431: {;i2c.c: 432: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
  3998  005F28  5021               	movf	i2c_display_program_custom_character@cntr,w,c
  3999  005F2A  6E11               	movwf	??_i2c_display_program_custom_character& (0+255),c
  4000  005F2C  6A12               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),c
  4001  005F2E  0E01               	movlw	1
  4002  005F30  2611               	addwf	??_i2c_display_program_custom_character,f,c
  4003  005F32  0E00               	movlw	0
  4004  005F34  2212               	addwfc	??_i2c_display_program_custom_character+1,f,c
  4005  005F36  0E15               	movlw	low i2c_display_program_custom_character@data_array
  4006  005F38  2411               	addwf	??_i2c_display_program_custom_character,w,c
  4007  005F3A  6ED9               	movwf	fsr2l,c
  4008  005F3C  0E00               	movlw	high i2c_display_program_custom_character@data_array
  4009  005F3E  2012               	addwfc	??_i2c_display_program_custom_character+1,w,c
  4010  005F40  6EDA               	movwf	fsr2h,c
  4011  005F42  5021               	movf	i2c_display_program_custom_character@cntr,w,c
  4012  005F44  0D01               	mullw	1
  4013  005F46  C00F  F013         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
  4014  005F4A  C010  F014         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
  4015  005F4E  50F3               	movf	prodl,w,c
  4016  005F50  2613               	addwf	??_i2c_display_program_custom_character+2,f,c
  4017  005F52  50F4               	movf	prodh,w,c
  4018  005F54  2214               	addwfc	??_i2c_display_program_custom_character+3,f,c
  4019  005F56  C013  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
  4020  005F5A  C014  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
  4021  005F5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4022  005F5E  6AF8               	clrf	tblptru,c
  4023  005F60                     	endif
  4024  005F60                     	if	0	;tblptru may be non-zero
  4025  005F60                     	endif
  4026  005F60  0008               	tblrd		*
  4027  005F62  50F5               	movf	tablat,w,c
  4028  005F64  0B1F               	andlw	31
  4029  005F66  6EDF               	movwf	indf2,c
  4030  005F68  2A21               	incf	i2c_display_program_custom_character@cntr,f,c
  4031  005F6A  D7DA               	goto	l12925
  4032  005F6C                     u10490:
  4033                           
  4034                           ;i2c.c: 433: };i2c.c: 434: _i2c_write(0b01111000, data_array, 9);
  4035  005F6C  0E15               	movlw	low i2c_display_program_custom_character@data_array
  4036  005F6E  6E06               	movwf	__i2c_write@data,c
  4037  005F70  0E00               	movlw	high i2c_display_program_custom_character@data_array
  4038  005F72  6E07               	movwf	__i2c_write@data+1,c
  4039  005F74  0E09               	movlw	9
  4040  005F76  6E08               	movwf	__i2c_write@length,c
  4041  005F78  0E78               	movlw	120
  4042  005F7A  EC73  F035         	call	__i2c_write
  4043  005F7E  0012               	return		;funcret
  4044  005F80                     __end_of_i2c_display_program_custom_character:
  4045                           	opt stack 0
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon3	equ	0xFF0
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           postdec1	equ	0xFE5
  4056                           fsr1h	equ	0xFE2
  4057                           fsr1l	equ	0xFE1
  4058                           indf2	equ	0xFDF
  4059                           fsr2h	equ	0xFDA
  4060                           fsr2l	equ	0xFD9
  4061                           status	equ	0xFD8
  4062                           
  4063 ;; *************** function __ic2_display_set_cgram_address *****************
  4064 ;; Defined at:
  4065 ;;		line 339 in file "i2c.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  address         1    wreg     unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  address         1   13[COMRAM] unsigned char 
  4070 ;;  data_array      3   10[COMRAM] unsigned char [3]
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;Total ram usage:        4 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    2
  4087 ;; This function calls:
  4088 ;;		__i2c_write
  4089 ;; This function is called by:
  4090 ;;		_i2c_display_program_custom_character
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text5
  4095  007040                     __ptext5:
  4096                           	opt stack 0
  4097  007040                     __ic2_display_set_cgram_address:
  4098                           	opt stack 25
  4099                           
  4100                           ;incstack = 0
  4101                           ;__ic2_display_set_cgram_address@address stored from wreg
  4102  007040  6E0E               	movwf	__ic2_display_set_cgram_address@address,c
  4103                           
  4104                           ;i2c.c: 341: uint8_t data_array[3];;i2c.c: 346: address &= 0b001111111;
  4105  007042  9E0E               	bcf	__ic2_display_set_cgram_address@address,7,c
  4106                           
  4107                           ;i2c.c: 347: data_array[0] = 0b00000000;
  4108  007044  0E00               	movlw	0
  4109  007046  6E0B               	movwf	__ic2_display_set_cgram_address@data_array,c
  4110                           
  4111                           ;i2c.c: 348: data_array[1] = 0b00111000;
  4112  007048  0E38               	movlw	56
  4113  00704A  6E0C               	movwf	__ic2_display_set_cgram_address@data_array+1,c
  4114                           
  4115                           ;i2c.c: 349: data_array[2] = 0b01000000 | address;
  4116  00704C  500E               	movf	__ic2_display_set_cgram_address@address,w,c
  4117  00704E  0940               	iorlw	64
  4118  007050  6E0D               	movwf	__ic2_display_set_cgram_address@data_array+2,c
  4119                           
  4120                           ;i2c.c: 352: _i2c_write(0b01111000, data_array, 3);
  4121  007052  0E0B               	movlw	low __ic2_display_set_cgram_address@data_array
  4122  007054  6E06               	movwf	__i2c_write@data,c
  4123  007056  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
  4124  007058  6E07               	movwf	__i2c_write@data+1,c
  4125  00705A  0E03               	movlw	3
  4126  00705C  6E08               	movwf	__i2c_write@length,c
  4127  00705E  0E78               	movlw	120
  4128  007060  EC73  F035         	call	__i2c_write
  4129  007064  0012               	return		;funcret
  4130  007066                     __end_of__ic2_display_set_cgram_address:
  4131                           	opt stack 0
  4132                           tblptru	equ	0xFF8
  4133                           tblptrh	equ	0xFF7
  4134                           tblptrl	equ	0xFF6
  4135                           tablat	equ	0xFF5
  4136                           prodh	equ	0xFF4
  4137                           prodl	equ	0xFF3
  4138                           intcon3	equ	0xFF0
  4139                           postinc0	equ	0xFEE
  4140                           wreg	equ	0xFE8
  4141                           postdec1	equ	0xFE5
  4142                           fsr1h	equ	0xFE2
  4143                           fsr1l	equ	0xFE1
  4144                           indf2	equ	0xFDF
  4145                           fsr2h	equ	0xFDA
  4146                           fsr2l	equ	0xFD9
  4147                           status	equ	0xFD8
  4148                           
  4149 ;; *************** function _i2c_display_init *****************
  4150 ;; Defined at:
  4151 ;;		line 297 in file "i2c.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;		None
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  init_sequenc    9   11[COMRAM] unsigned char [9]
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  1    wreg      void 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:       10 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:    2
  4172 ;; This function calls:
  4173 ;;		__i2c_write
  4174 ;; This function is called by:
  4175 ;;		_display_init
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text6
  4180  006A56                     __ptext6:
  4181                           	opt stack 0
  4182  006A56                     _i2c_display_init:
  4183                           	opt stack 26
  4184                           
  4185                           ;i2c.c: 299: uint8_t init_sequence[9] = {;i2c.c: 300: 0x3A,;i2c.c: 302: 0b00011110,;i2c.
      +                          c: 303: 0x39,;i2c.c: 305: 0b00001100,;i2c.c: 306: 0x74,;i2c.c: 307: 0b1011100,;i2c.c: 30
      +                          8: 0x6d,;i2c.c: 309: 0x0c,;i2c.c: 310: 0x01;i2c.c: 311: };
  4186                           
  4187                           ;incstack = 0
  4188  006A56  EE22  F0B2         	lfsr	2,i2c_display_init@F6828
  4189  006A5A  EE10  F00C         	lfsr	1,i2c_display_init@init_sequence
  4190  006A5E  0E08               	movlw	8
  4191  006A60                     u10471:
  4192  006A60  CFDB FFE3          	movff	plusw2,plusw1
  4193  006A64  06E8               	decf	wreg,f,c
  4194  006A66  E2FC               	bc	u10471
  4195                           
  4196                           ;i2c.c: 314: LATAbits.LA3 = 0;
  4197  006A68  9689               	bcf	3977,3,c	;volatile
  4198                           
  4199                           ;i2c.c: 315: _delay((unsigned long)((10)*(8000000/4000.0)));
  4200  006A6A  0E1A               	movlw	26
  4201  006A6C  6E0B               	movwf	??_i2c_display_init& (0+255),c
  4202  006A6E  0EF8               	movlw	248
  4203  006A70                     u13807:
  4204  006A70  2EE8               	decfsz	wreg,f,c
  4205  006A72  D7FE               	bra	u13807
  4206  006A74  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  4207  006A76  D7FC               	bra	u13807
  4208  006A78  D000               	nop2	
  4209                           
  4210                           ;i2c.c: 316: LATAbits.LA3 = 1;
  4211  006A7A  8689               	bsf	3977,3,c	;volatile
  4212                           
  4213                           ;i2c.c: 317: _delay((unsigned long)((50)*(8000000/4000.0)));
  4214  006A7C  0E82               	movlw	130
  4215  006A7E  6E0B               	movwf	??_i2c_display_init& (0+255),c
  4216  006A80  0EDE               	movlw	222
  4217  006A82                     u13817:
  4218  006A82  2EE8               	decfsz	wreg,f,c
  4219  006A84  D7FE               	bra	u13817
  4220  006A86  2E0B               	decfsz	??_i2c_display_init& (0+255),f,c
  4221  006A88  D7FC               	bra	u13817
  4222                           
  4223                           ;i2c.c: 323: _i2c_write(0b01111000, &init_sequence[0], 9);
  4224  006A8A  0E0C               	movlw	low i2c_display_init@init_sequence
  4225  006A8C  6E06               	movwf	__i2c_write@data,c
  4226  006A8E  0E00               	movlw	high i2c_display_init@init_sequence
  4227  006A90  6E07               	movwf	__i2c_write@data+1,c
  4228  006A92  0E09               	movlw	9
  4229  006A94  6E08               	movwf	__i2c_write@length,c
  4230  006A96  0E78               	movlw	120
  4231  006A98  EC73  F035         	call	__i2c_write
  4232  006A9C  0012               	return		;funcret
  4233  006A9E                     __end_of_i2c_display_init:
  4234                           	opt stack 0
  4235                           tblptru	equ	0xFF8
  4236                           tblptrh	equ	0xFF7
  4237                           tblptrl	equ	0xFF6
  4238                           tablat	equ	0xFF5
  4239                           prodh	equ	0xFF4
  4240                           prodl	equ	0xFF3
  4241                           intcon3	equ	0xFF0
  4242                           postinc0	equ	0xFEE
  4243                           wreg	equ	0xFE8
  4244                           postdec1	equ	0xFE5
  4245                           plusw1	equ	0xFE3
  4246                           fsr1h	equ	0xFE2
  4247                           fsr1l	equ	0xFE1
  4248                           indf2	equ	0xFDF
  4249                           plusw2	equ	0xFDB
  4250                           fsr2h	equ	0xFDA
  4251                           fsr2l	equ	0xFD9
  4252                           status	equ	0xFD8
  4253                           
  4254 ;; *************** function __ui_encoder *****************
  4255 ;; Defined at:
  4256 ;;		line 25 in file "ui.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;Total ram usage:        0 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    7
  4277 ;; This function calls:
  4278 ;;		_i2c_eeprom_writeByte
  4279 ;;		_reboot
  4280 ;;		_system_delay_ms
  4281 ;; This function is called by:
  4282 ;;		_ui_run
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text7
  4287  002B24                     __ptext7:
  4288                           	opt stack 0
  4289  002B24                     __ui_encoder:
  4290                           	opt stack 22
  4291                           
  4292                           ;ui.c: 27: switch(os.display_mode)
  4293                           
  4294                           ;incstack = 0
  4295  002B24  D09E               	goto	l1257
  4296  002B26                     
  4297                           ;ui.c: 30: if(os.button1>0 || os.button2>0)
  4298  002B26  0100               	movlb	0	; () banked
  4299  002B28  5161               	movf	(_os+1)& (0+255),w,b
  4300  002B2A  0A80               	xorlw	128
  4301  002B2C  0F7F               	addlw	-129
  4302  002B2E  B0D8               	btfsc	status,0,c
  4303  002B30  D005               	goto	u11550
  4304                           
  4305                           ; BSR set to: 0
  4306  002B32  5163               	movf	(_os+3)& (0+255),w,b
  4307  002B34  0A80               	xorlw	128
  4308  002B36  0F7F               	addlw	-129
  4309  002B38  A0D8               	btfss	status,0,c
  4310  002B3A  0012               	return	
  4311  002B3C                     u11550:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;ui.c: 31: {;ui.c: 32: os.button1 = 0;
  4315                           
  4316                           ; BSR set to: 0
  4317  002B3C  0E00               	movlw	0
  4318  002B3E  6F61               	movwf	(_os+1)& (0+255),b
  4319                           
  4320                           ;ui.c: 33: os.button2 = 0;
  4321  002B40  0E00               	movlw	0
  4322  002B42  6F63               	movwf	(_os+3)& (0+255),b
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;ui.c: 34: };ui.c: 35: break;
  4326  002B44  0012               	return	
  4327  002B46                     
  4328                           ; BSR set to: 0
  4329                           ;ui.c: 38: if(os.button1>0 || os.button2>0)
  4330                           
  4331                           ; BSR set to: 0
  4332  002B46  5161               	movf	(_os+1)& (0+255),w,b
  4333  002B48  0A80               	xorlw	128
  4334  002B4A  0F7F               	addlw	-129
  4335  002B4C  B0D8               	btfsc	status,0,c
  4336  002B4E  D005               	goto	u11570
  4337                           
  4338                           ; BSR set to: 0
  4339  002B50  5163               	movf	(_os+3)& (0+255),w,b
  4340  002B52  0A80               	xorlw	128
  4341  002B54  0F7F               	addlw	-129
  4342  002B56  A0D8               	btfss	status,0,c
  4343  002B58  0012               	return	
  4344  002B5A                     u11570:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;ui.c: 39: {;ui.c: 40: os.button1 = 0;
  4348                           
  4349                           ; BSR set to: 0
  4350  002B5A  0E00               	movlw	0
  4351  002B5C  6F61               	movwf	(_os+1)& (0+255),b
  4352                           
  4353                           ;ui.c: 41: os.button2 = 0;;
  4354  002B5E  0E00               	movlw	0
  4355  002B60  6F63               	movwf	(_os+3)& (0+255),b
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;ui.c: 42: };ui.c: 43: break;
  4359  002B62  0012               	return	
  4360  002B64                     
  4361                           ; BSR set to: 0
  4362                           ;ui.c: 46: if(os.button1>0 || os.button2>0)
  4363                           
  4364                           ; BSR set to: 0
  4365  002B64  5161               	movf	(_os+1)& (0+255),w,b
  4366  002B66  0A80               	xorlw	128
  4367  002B68  0F7F               	addlw	-129
  4368  002B6A  B0D8               	btfsc	status,0,c
  4369  002B6C  D005               	goto	u11590
  4370                           
  4371                           ; BSR set to: 0
  4372  002B6E  5163               	movf	(_os+3)& (0+255),w,b
  4373  002B70  0A80               	xorlw	128
  4374  002B72  0F7F               	addlw	-129
  4375  002B74  A0D8               	btfss	status,0,c
  4376  002B76  0012               	return	
  4377  002B78                     u11590:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;ui.c: 47: {;ui.c: 48: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4381                           
  4382                           ; BSR set to: 0
  4383  002B78  0E30               	movlw	48
  4384  002B7A  6F66               	movwf	(_os+6)& (0+255),b
  4385                           
  4386                           ;ui.c: 49: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4387  002B7C  0E30               	movlw	48
  4388  002B7E  6F67               	movwf	(_os+7)& (0+255),b
  4389                           
  4390                           ;ui.c: 50: os.button1 = 0;
  4391  002B80  0E00               	movlw	0
  4392  002B82  6F61               	movwf	(_os+1)& (0+255),b
  4393                           
  4394                           ;ui.c: 51: os.button2 = 0;
  4395  002B84  0E00               	movlw	0
  4396  002B86  6F63               	movwf	(_os+3)& (0+255),b
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;ui.c: 52: };ui.c: 53: break;
  4400  002B88  0012               	return	
  4401  002B8A                     
  4402                           ; BSR set to: 0
  4403                           ;ui.c: 56: if(os.button1>0 || os.button2>0)
  4404                           
  4405                           ; BSR set to: 0
  4406  002B8A  5161               	movf	(_os+1)& (0+255),w,b
  4407  002B8C  0A80               	xorlw	128
  4408  002B8E  0F7F               	addlw	-129
  4409  002B90  B0D8               	btfsc	status,0,c
  4410  002B92  D005               	goto	u11610
  4411                           
  4412                           ; BSR set to: 0
  4413  002B94  5163               	movf	(_os+3)& (0+255),w,b
  4414  002B96  0A80               	xorlw	128
  4415  002B98  0F7F               	addlw	-129
  4416  002B9A  A0D8               	btfss	status,0,c
  4417  002B9C  0012               	return	
  4418  002B9E                     u11610:
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;ui.c: 57: {;ui.c: 58: os.button1 = 0;
  4422                           
  4423                           ; BSR set to: 0
  4424  002B9E  0E00               	movlw	0
  4425  002BA0  6F61               	movwf	(_os+1)& (0+255),b
  4426                           
  4427                           ;ui.c: 59: os.button2 = 0;
  4428  002BA2  0E00               	movlw	0
  4429  002BA4  6F63               	movwf	(_os+3)& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;ui.c: 60: };ui.c: 61: break;
  4433  002BA6  0012               	return	
  4434  002BA8                     
  4435                           ; BSR set to: 0
  4436                           ;ui.c: 64: if(os.button1>0 || os.button2>0)
  4437                           
  4438                           ; BSR set to: 0
  4439  002BA8  5161               	movf	(_os+1)& (0+255),w,b
  4440  002BAA  0A80               	xorlw	128
  4441  002BAC  0F7F               	addlw	-129
  4442  002BAE  B0D8               	btfsc	status,0,c
  4443  002BB0  D005               	goto	u11630
  4444                           
  4445                           ; BSR set to: 0
  4446  002BB2  5163               	movf	(_os+3)& (0+255),w,b
  4447  002BB4  0A80               	xorlw	128
  4448  002BB6  0F7F               	addlw	-129
  4449  002BB8  A0D8               	btfss	status,0,c
  4450  002BBA  0012               	return	
  4451  002BBC                     u11630:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;ui.c: 65: {;ui.c: 66: os.button1 = 0;
  4455                           
  4456                           ; BSR set to: 0
  4457  002BBC  0E00               	movlw	0
  4458  002BBE  6F61               	movwf	(_os+1)& (0+255),b
  4459                           
  4460                           ;ui.c: 67: os.button2 = 0;
  4461  002BC0  0E00               	movlw	0
  4462  002BC2  6F63               	movwf	(_os+3)& (0+255),b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;ui.c: 68: };ui.c: 69: break;
  4466  002BC4  0012               	return	
  4467  002BC6                     
  4468                           ; BSR set to: 0
  4469                           ;ui.c: 72: if(os.button1>0 || os.button2>0)
  4470                           
  4471                           ; BSR set to: 0
  4472  002BC6  5161               	movf	(_os+1)& (0+255),w,b
  4473  002BC8  0A80               	xorlw	128
  4474  002BCA  0F7F               	addlw	-129
  4475  002BCC  B0D8               	btfsc	status,0,c
  4476  002BCE  D005               	goto	u11650
  4477                           
  4478                           ; BSR set to: 0
  4479  002BD0  5163               	movf	(_os+3)& (0+255),w,b
  4480  002BD2  0A80               	xorlw	128
  4481  002BD4  0F7F               	addlw	-129
  4482  002BD6  A0D8               	btfss	status,0,c
  4483  002BD8  0012               	return	
  4484  002BDA                     u11650:
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;ui.c: 73: {;ui.c: 74: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4488                           
  4489                           ; BSR set to: 0
  4490  002BDA  0E60               	movlw	96
  4491  002BDC  6F66               	movwf	(_os+6)& (0+255),b
  4492                           
  4493                           ;ui.c: 75: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4494  002BDE  0E60               	movlw	96
  4495  002BE0  6F67               	movwf	(_os+7)& (0+255),b
  4496                           
  4497                           ;ui.c: 76: os.button1 = 0;
  4498  002BE2  0E00               	movlw	0
  4499  002BE4  6F61               	movwf	(_os+1)& (0+255),b
  4500                           
  4501                           ;ui.c: 77: os.button2 = 0;
  4502  002BE6  0E00               	movlw	0
  4503  002BE8  6F63               	movwf	(_os+3)& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;ui.c: 78: };ui.c: 79: break;
  4507  002BEA  0012               	return	
  4508  002BEC                     
  4509                           ; BSR set to: 0
  4510                           ;ui.c: 82: if(os.button1>0 || os.button2>0)
  4511                           
  4512                           ; BSR set to: 0
  4513  002BEC  5161               	movf	(_os+1)& (0+255),w,b
  4514  002BEE  0A80               	xorlw	128
  4515  002BF0  0F7F               	addlw	-129
  4516  002BF2  B0D8               	btfsc	status,0,c
  4517  002BF4  D005               	goto	u11670
  4518                           
  4519                           ; BSR set to: 0
  4520  002BF6  5163               	movf	(_os+3)& (0+255),w,b
  4521  002BF8  0A80               	xorlw	128
  4522  002BFA  0F7F               	addlw	-129
  4523  002BFC  A0D8               	btfss	status,0,c
  4524  002BFE  0012               	return	
  4525  002C00                     u11670:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;ui.c: 83: {;ui.c: 84: os.button1 = 0;
  4529                           
  4530                           ; BSR set to: 0
  4531  002C00  0E00               	movlw	0
  4532  002C02  6F61               	movwf	(_os+1)& (0+255),b
  4533                           
  4534                           ;ui.c: 85: os.button2 = 0;
  4535  002C04  0E00               	movlw	0
  4536  002C06  6F63               	movwf	(_os+3)& (0+255),b
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;ui.c: 86: };ui.c: 87: break;
  4540  002C08  0012               	return	
  4541  002C0A                     
  4542                           ; BSR set to: 0
  4543                           ;ui.c: 90: if(os.button1>0 || os.button2>0)
  4544                           
  4545                           ; BSR set to: 0
  4546  002C0A  5161               	movf	(_os+1)& (0+255),w,b
  4547  002C0C  0A80               	xorlw	128
  4548  002C0E  0F7F               	addlw	-129
  4549  002C10  B0D8               	btfsc	status,0,c
  4550  002C12  D005               	goto	u11690
  4551                           
  4552                           ; BSR set to: 0
  4553  002C14  5163               	movf	(_os+3)& (0+255),w,b
  4554  002C16  0A80               	xorlw	128
  4555  002C18  0F7F               	addlw	-129
  4556  002C1A  A0D8               	btfss	status,0,c
  4557  002C1C  0012               	return	
  4558  002C1E                     u11690:
  4559                           
  4560                           ; BSR set to: 0
  4561                           ;ui.c: 91: {;ui.c: 92: i2c_eeprom_writeByte(0x100, 0x78);
  4562                           
  4563                           ; BSR set to: 0
  4564  002C1E  0E01               	movlw	1
  4565  002C20  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4566  002C22  0E00               	movlw	0
  4567  002C24  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4568  002C26  0E78               	movlw	120
  4569  002C28  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4570  002C2A  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
  4571                           
  4572                           ;ui.c: 93: system_delay_ms(10);
  4573  002C2E  0E0A               	movlw	10
  4574  002C30  EC92  F038         	call	_system_delay_ms
  4575                           
  4576                           ;ui.c: 94: reboot();
  4577  002C34  EC49  F039         	call	_reboot	;wreg free
  4578                           
  4579                           ;ui.c: 95: };ui.c: 96: break;
  4580  002C38  0012               	return	
  4581  002C3A                     
  4582                           ;ui.c: 99: if(os.button1>0 || os.button2>0)
  4583  002C3A  0100               	movlb	0	; () banked
  4584  002C3C  5161               	movf	(_os+1)& (0+255),w,b
  4585  002C3E  0A80               	xorlw	128
  4586  002C40  0F7F               	addlw	-129
  4587  002C42  B0D8               	btfsc	status,0,c
  4588  002C44  D005               	goto	u11710
  4589                           
  4590                           ; BSR set to: 0
  4591  002C46  5163               	movf	(_os+3)& (0+255),w,b
  4592  002C48  0A80               	xorlw	128
  4593  002C4A  0F7F               	addlw	-129
  4594  002C4C  A0D8               	btfss	status,0,c
  4595  002C4E  0012               	return	
  4596  002C50                     u11710:
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;ui.c: 100: {;ui.c: 101: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4600                           
  4601                           ; BSR set to: 0
  4602  002C50  0E10               	movlw	16
  4603  002C52  6F66               	movwf	(_os+6)& (0+255),b
  4604                           
  4605                           ;ui.c: 102: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4606  002C54  0E10               	movlw	16
  4607  002C56  6F67               	movwf	(_os+7)& (0+255),b
  4608                           
  4609                           ;ui.c: 103: os.button1 = 0;
  4610  002C58  0E00               	movlw	0
  4611  002C5A  6F61               	movwf	(_os+1)& (0+255),b
  4612                           
  4613                           ;ui.c: 104: os.button2 = 0;
  4614  002C5C  0E00               	movlw	0
  4615  002C5E  6F63               	movwf	(_os+3)& (0+255),b
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;ui.c: 107: }
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;ui.c: 105: };ui.c: 106: break;
  4622  002C60  0012               	return	
  4623  002C62                     l1257:
  4624                           
  4625                           ; BSR set to: 0
  4626  002C62  0100               	movlb	0	; () banked
  4627  002C64  5167               	movf	(_os+7)& (0+255),w,b
  4628                           
  4629                           ; Switch size 1, requested type "space"
  4630                           ; Number of cases is 9, Range of values is 0 to 144
  4631                           ; switch strategies available:
  4632                           ; Name         Instructions Cycles
  4633                           ; simple_byte           28    15 (average)
  4634                           ;	Chosen strategy is simple_byte
  4635  002C66  0A00               	xorlw	0	; case 0
  4636  002C68  B4D8               	btfsc	status,2,c
  4637  002C6A  D75D               	goto	l1258
  4638  002C6C  0A10               	xorlw	16	; case 16
  4639  002C6E  B4D8               	btfsc	status,2,c
  4640  002C70  D76A               	goto	l1263
  4641  002C72  0A30               	xorlw	48	; case 32
  4642  002C74  B4D8               	btfsc	status,2,c
  4643  002C76  D776               	goto	l1267
  4644  002C78  0A10               	xorlw	16	; case 48
  4645  002C7A  B4D8               	btfsc	status,2,c
  4646  002C7C  D786               	goto	l1271
  4647  002C7E  0A70               	xorlw	112	; case 64
  4648  002C80  B4D8               	btfsc	status,2,c
  4649  002C82  D7A1               	goto	l1279
  4650  002C84  0A10               	xorlw	16	; case 80
  4651  002C86  B4D8               	btfsc	status,2,c
  4652  002C88  D78F               	goto	l1275
  4653  002C8A  0A30               	xorlw	48	; case 96
  4654  002C8C  B4D8               	btfsc	status,2,c
  4655  002C8E  D7AE               	goto	l1283
  4656  002C90  0A10               	xorlw	16	; case 112
  4657  002C92  B4D8               	btfsc	status,2,c
  4658  002C94  D7BA               	goto	l1287
  4659  002C96  0AE0               	xorlw	224	; case 144
  4660  002C98  A4D8               	btfss	status,2,c
  4661  002C9A  0012               	return	
  4662  002C9C  D7CE               	goto	l1291
  4663  002C9E                     __end_of__ui_encoder:
  4664                           	opt stack 0
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon3	equ	0xFF0
  4672                           postinc0	equ	0xFEE
  4673                           wreg	equ	0xFE8
  4674                           postdec1	equ	0xFE5
  4675                           plusw1	equ	0xFE3
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           plusw2	equ	0xFDB
  4680                           fsr2h	equ	0xFDA
  4681                           fsr2l	equ	0xFD9
  4682                           status	equ	0xFD8
  4683                           
  4684 ;; *************** function _timer_pseudo_isr *****************
  4685 ;; Defined at:
  4686 ;;		line 29 in file "os.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4704 ;;Total ram usage:        0 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text8
  4714  005304                     __ptext8:
  4715                           	opt stack 0
  4716  005304                     _timer_pseudo_isr:
  4717                           	opt stack 30
  4718                           
  4719                           ;os.c: 32: if(INTCONbits.T0IF==0)
  4720                           
  4721                           ;incstack = 0
  4722  005304  A4F2               	btfss	intcon,2,c	;volatile
  4723  005306  0012               	return	
  4724                           
  4725                           ;os.c: 35: };os.c: 39: TMR0H = 0xD1;
  4726                           
  4727                           ;os.c: 33: {;os.c: 34: return;
  4728  005308  0ED1               	movlw	209
  4729  00530A  6ED7               	movwf	4055,c	;volatile
  4730                           
  4731                           ;os.c: 40: TMR0L = 0x20;
  4732  00530C  0E20               	movlw	32
  4733  00530E  6ED6               	movwf	4054,c	;volatile
  4734                           
  4735                           ;os.c: 41: ++os.timeSlot;
  4736  005310  0100               	movlb	0	; () banked
  4737  005312  2B64               	incf	(_os+4)& (0+255),f,b
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;os.c: 42: os.done = 0;
  4741  005314  0E00               	movlw	0
  4742  005316  6F65               	movwf	(_os+5)& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;os.c: 43: INTCONbits.T0IF = 0;
  4746  005318  94F2               	bcf	intcon,2,c	;volatile
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;os.c: 46: if(enc1 != (PORTE&0b00000111))
  4750  00531A  5084               	movf	3972,w,c	;volatile
  4751  00531C  0B07               	andlw	7
  4752  00531E  1996               	xorwf	_enc1& (0+255),w,b
  4753  005320  B4D8               	btfsc	status,2,c
  4754  005322  D01F               	goto	l1041
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;os.c: 47: {;os.c: 49: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b00000001)))
  4758  005324  B084               	btfsc	3972,0,c	;volatile
  4759                           
  4760                           ; BSR set to: 0
  4761  005326  A484               	btfss	3972,2,c	;volatile
  4762  005328  D006               	goto	l1043
  4763                           
  4764                           ; BSR set to: 0
  4765  00532A  B196               	btfsc	_enc1& (0+255),0,b
  4766  00532C  D004               	goto	l1043
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;os.c: 50: {;os.c: 51: if(os.encoder1Count<127)
  4770  00532E  0E7F               	movlw	127
  4771  005330  1960               	xorwf	_os& (0+255),w,b
  4772  005332  A4D8               	btfss	status,2,c
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;os.c: 52: {;os.c: 53: ++os.encoder1Count;
  4776  005334  2B60               	incf	_os& (0+255),f,b
  4777  005336                     l1043:
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;os.c: 54: };os.c: 55: };os.c: 57: if(PORTEbits.RE2 && PORTEbits.RE0 && (!(enc1&0b000001
      +                          00)))
  4781                           
  4782                           ; BSR set to: 0
  4783                           
  4784                           ; BSR set to: 0
  4785  005336  B484               	btfsc	3972,2,c	;volatile
  4786                           
  4787                           ; BSR set to: 0
  4788  005338  A084               	btfss	3972,0,c	;volatile
  4789  00533A  D007               	goto	l1045
  4790                           
  4791                           ; BSR set to: 0
  4792  00533C  B596               	btfsc	_enc1& (0+255),2,b
  4793  00533E  D005               	goto	l1045
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;os.c: 58: {;os.c: 59: if(os.encoder1Count>-128)
  4797  005340  5160               	movf	_os& (0+255),w,b
  4798  005342  0A80               	xorlw	128
  4799  005344  0FFF               	addlw	255
  4800  005346  B0D8               	btfsc	status,0,c
  4801                           
  4802                           ; BSR set to: 0
  4803                           ;os.c: 60: {;os.c: 61: --os.encoder1Count;
  4804  005348  0760               	decf	_os& (0+255),f,b
  4805  00534A                     l1045:
  4806                           
  4807                           ; BSR set to: 0
  4808                           ;os.c: 62: };os.c: 63: };os.c: 65: if(PORTEbits.RE1 && (!(enc1&0b00000010)))
  4809                           
  4810                           ; BSR set to: 0
  4811                           
  4812                           ; BSR set to: 0
  4813  00534A  B284               	btfsc	3972,1,c	;volatile
  4814                           
  4815                           ; BSR set to: 0
  4816  00534C  B396               	btfsc	_enc1& (0+255),1,b
  4817  00534E  D002               	goto	l1046
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;os.c: 66: {;os.c: 67: os.button1 = 1;
  4821  005350  0E01               	movlw	1
  4822  005352  6F61               	movwf	(_os+1)& (0+255),b
  4823  005354                     l1046:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;os.c: 68: };os.c: 70: if((!PORTEbits.RE1) && (enc1&0b00000010))
  4827                           
  4828                           ; BSR set to: 0
  4829  005354  A284               	btfss	3972,1,c	;volatile
  4830                           
  4831                           ; BSR set to: 0
  4832  005356  A396               	btfss	_enc1& (0+255),1,b
  4833  005358  D001               	goto	l1047
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;os.c: 71: {;os.c: 72: os.button1 = -1;
  4837  00535A  6961               	setf	(_os+1)& (0+255),b
  4838  00535C                     l1047:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;os.c: 73: };os.c: 75: enc1 = PORTE & 0b00000111;
  4842                           
  4843                           ; BSR set to: 0
  4844  00535C  5084               	movf	3972,w,c	;volatile
  4845  00535E  0B07               	andlw	7
  4846  005360  6F96               	movwf	_enc1& (0+255),b
  4847  005362                     l1041:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;os.c: 76: };os.c: 78: if(enc2 != (PORTA&0b00000111))
  4851  005362  5080               	movf	3968,w,c	;volatile
  4852  005364  0B07               	andlw	7
  4853  005366  1995               	xorwf	_enc2& (0+255),w,b
  4854  005368  B4D8               	btfsc	status,2,c
  4855  00536A  0012               	return	
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;os.c: 79: {;os.c: 81: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b00000100)))
  4859  00536C  B480               	btfsc	3968,2,c	;volatile
  4860                           
  4861                           ; BSR set to: 0
  4862  00536E  A080               	btfss	3968,0,c	;volatile
  4863  005370  D006               	goto	l1050
  4864                           
  4865                           ; BSR set to: 0
  4866  005372  B595               	btfsc	_enc2& (0+255),2,b
  4867  005374  D004               	goto	l1050
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;os.c: 82: {;os.c: 83: if(os.encoder2Count<127)
  4871  005376  0E7F               	movlw	127
  4872  005378  1962               	xorwf	(_os+2)& (0+255),w,b
  4873  00537A  A4D8               	btfss	status,2,c
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;os.c: 84: {;os.c: 85: ++os.encoder2Count;
  4877  00537C  2B62               	incf	(_os+2)& (0+255),f,b
  4878  00537E                     l1050:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;os.c: 86: };os.c: 87: };os.c: 89: if(PORTAbits.RA0 && PORTAbits.RA2 && (!(enc2&0b000000
      +                          01)))
  4882                           
  4883                           ; BSR set to: 0
  4884                           
  4885                           ; BSR set to: 0
  4886  00537E  B080               	btfsc	3968,0,c	;volatile
  4887                           
  4888                           ; BSR set to: 0
  4889  005380  A480               	btfss	3968,2,c	;volatile
  4890  005382  D007               	goto	l1052
  4891                           
  4892                           ; BSR set to: 0
  4893  005384  B195               	btfsc	_enc2& (0+255),0,b
  4894  005386  D005               	goto	l1052
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;os.c: 90: {;os.c: 91: if(os.encoder2Count>-128)
  4898  005388  5162               	movf	(_os+2)& (0+255),w,b
  4899  00538A  0A80               	xorlw	128
  4900  00538C  0FFF               	addlw	255
  4901  00538E  B0D8               	btfsc	status,0,c
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;os.c: 92: {;os.c: 93: --os.encoder2Count;
  4905  005390  0762               	decf	(_os+2)& (0+255),f,b
  4906  005392                     l1052:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;os.c: 94: };os.c: 95: };os.c: 97: if(PORTAbits.RA1 && (!(enc2&0b00000010)))
  4910                           
  4911                           ; BSR set to: 0
  4912                           
  4913                           ; BSR set to: 0
  4914  005392  B280               	btfsc	3968,1,c	;volatile
  4915                           
  4916                           ; BSR set to: 0
  4917  005394  B395               	btfsc	_enc2& (0+255),1,b
  4918  005396  D002               	goto	l1053
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;os.c: 98: {;os.c: 99: os.button2 = 1;
  4922  005398  0E01               	movlw	1
  4923  00539A  6F63               	movwf	(_os+3)& (0+255),b
  4924  00539C                     l1053:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;os.c: 100: };os.c: 102: if((!PORTAbits.RA1) && (enc2&0b00000010))
  4928                           
  4929                           ; BSR set to: 0
  4930  00539C  A280               	btfss	3968,1,c	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933  00539E  A395               	btfss	_enc2& (0+255),1,b
  4934  0053A0  D001               	goto	l1054
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;os.c: 103: {;os.c: 104: os.button2 = -1;
  4938  0053A2  6963               	setf	(_os+3)& (0+255),b
  4939  0053A4                     l1054:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;os.c: 105: };os.c: 107: enc2 = PORTA & 0b00000111;
  4943                           
  4944                           ; BSR set to: 0
  4945  0053A4  5080               	movf	3968,w,c	;volatile
  4946  0053A6  0B07               	andlw	7
  4947  0053A8  6F95               	movwf	_enc2& (0+255),b
  4948  0053AA  0012               	return	
  4949  0053AC                     __end_of_timer_pseudo_isr:
  4950                           	opt stack 0
  4951                           tblptru	equ	0xFF8
  4952                           tblptrh	equ	0xFF7
  4953                           tblptrl	equ	0xFF6
  4954                           tablat	equ	0xFF5
  4955                           prodh	equ	0xFF4
  4956                           prodl	equ	0xFF3
  4957                           intcon	equ	0xFF2
  4958                           intcon3	equ	0xFF0
  4959                           postinc0	equ	0xFEE
  4960                           wreg	equ	0xFE8
  4961                           postdec1	equ	0xFE5
  4962                           plusw1	equ	0xFE3
  4963                           fsr1h	equ	0xFE2
  4964                           fsr1l	equ	0xFE1
  4965                           indf2	equ	0xFDF
  4966                           plusw2	equ	0xFDB
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _system_minimal_init_undo *****************
  4972 ;; Defined at:
  4973 ;;		line 237 in file "os.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		None
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text9
  5001  0073B8                     __ptext9:
  5002                           	opt stack 0
  5003  0073B8                     _system_minimal_init_undo:
  5004                           	opt stack 30
  5005                           
  5006                           ;os.c: 243: TRISEbits.TRISE1 = 1;
  5007                           
  5008                           ;incstack = 0
  5009  0073B8  8296               	bsf	3990,1,c	;volatile
  5010                           
  5011                           ;os.c: 244: ANCON0bits.PCFG6 = 0;
  5012  0073BA  010F               	movlb	15	; () banked
  5013  0073BC  9D48               	bcf	72,6,b	;volatile
  5014                           
  5015                           ;os.c: 245: TRISAbits.TRISA1 = 1;
  5016  0073BE  8292               	bsf	3986,1,c	;volatile
  5017                           
  5018                           ;os.c: 246: ANCON0bits.PCFG1 = 0;
  5019  0073C0  9348               	bcf	72,1,b	;volatile
  5020                           
  5021                           ; BSR set to: 15
  5022  0073C2  0012               	return		;funcret
  5023  0073C4                     __end_of_system_minimal_init_undo:
  5024                           	opt stack 0
  5025                           tblptru	equ	0xFF8
  5026                           tblptrh	equ	0xFF7
  5027                           tblptrl	equ	0xFF6
  5028                           tablat	equ	0xFF5
  5029                           prodh	equ	0xFF4
  5030                           prodl	equ	0xFF3
  5031                           intcon	equ	0xFF2
  5032                           intcon3	equ	0xFF0
  5033                           postinc0	equ	0xFEE
  5034                           wreg	equ	0xFE8
  5035                           postdec1	equ	0xFE5
  5036                           plusw1	equ	0xFE3
  5037                           fsr1h	equ	0xFE2
  5038                           fsr1l	equ	0xFE1
  5039                           indf2	equ	0xFDF
  5040                           plusw2	equ	0xFDB
  5041                           fsr2h	equ	0xFDA
  5042                           fsr2l	equ	0xFD9
  5043                           status	equ	0xFD8
  5044                           
  5045 ;; *************** function _system_minimal_init *****************
  5046 ;; Defined at:
  5047 ;;		line 221 in file "os.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;		None
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;		None
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      void 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0, cstack
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;Total ram usage:        0 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    1
  5068 ;; This function calls:
  5069 ;;		_i2c_init
  5070 ;;		_system_delay_ms
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text10
  5077  0072F4                     __ptext10:
  5078                           	opt stack 0
  5079  0072F4                     _system_minimal_init:
  5080                           	opt stack 29
  5081                           
  5082                           ;os.c: 224: TRISEbits.TRISE1 = 1;
  5083                           
  5084                           ; BSR set to: 15
  5085                           ;incstack = 0
  5086  0072F4  8296               	bsf	3990,1,c	;volatile
  5087                           
  5088                           ;os.c: 225: ANCON0bits.PCFG6 = 1;
  5089  0072F6  010F               	movlb	15	; () banked
  5090  0072F8  8D48               	bsf	72,6,b	;volatile
  5091                           
  5092                           ;os.c: 226: TRISAbits.TRISA1 = 1;
  5093  0072FA  8292               	bsf	3986,1,c	;volatile
  5094                           
  5095                           ;os.c: 227: ANCON0bits.PCFG1 = 1;
  5096  0072FC  8348               	bsf	72,1,b	;volatile
  5097                           
  5098                           ; BSR set to: 15
  5099                           ;os.c: 230: i2c_init();
  5100  0072FE  EC05  F039         	call	_i2c_init	;wreg free
  5101                           
  5102                           ;os.c: 233: system_delay_ms(50);
  5103  007302  0E32               	movlw	50
  5104  007304  EC92  F038         	call	_system_delay_ms
  5105  007308  0012               	return		;funcret
  5106  00730A                     __end_of_system_minimal_init:
  5107                           	opt stack 0
  5108                           tblptru	equ	0xFF8
  5109                           tblptrh	equ	0xFF7
  5110                           tblptrl	equ	0xFF6
  5111                           tablat	equ	0xFF5
  5112                           prodh	equ	0xFF4
  5113                           prodl	equ	0xFF3
  5114                           intcon	equ	0xFF2
  5115                           intcon3	equ	0xFF0
  5116                           postinc0	equ	0xFEE
  5117                           wreg	equ	0xFE8
  5118                           postdec1	equ	0xFE5
  5119                           plusw1	equ	0xFE3
  5120                           fsr1h	equ	0xFE2
  5121                           fsr1l	equ	0xFE1
  5122                           indf2	equ	0xFDF
  5123                           plusw2	equ	0xFDB
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128 ;; *************** function _i2c_init *****************
  5129 ;; Defined at:
  5130 ;;		line 24 in file "i2c.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      void 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;Total ram usage:        0 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_system_minimal_init
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text11
  5158  00720A                     __ptext11:
  5159                           	opt stack 0
  5160  00720A                     _i2c_init:
  5161                           	opt stack 29
  5162                           
  5163                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  5164                           
  5165                           ;incstack = 0
  5166  00720A  8A93               	bsf	3987,5,c	;volatile
  5167                           
  5168                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  5169  00720C  8893               	bsf	3987,4,c	;volatile
  5170                           
  5171                           ;i2c.c: 28: SSP1STATbits.SMP = 0;
  5172  00720E  9EC7               	bcf	4039,7,c	;volatile
  5173                           
  5174                           ;i2c.c: 29: SSP1STATbits.CKE = 0;
  5175  007210  9CC7               	bcf	4039,6,c	;volatile
  5176                           
  5177                           ;i2c.c: 31: SSP1ADD = 119;
  5178  007212  0E77               	movlw	119
  5179  007214  6EC8               	movwf	4040,c	;volatile
  5180                           
  5181                           ;i2c.c: 33: SSP1CON1bits.WCOL = 0;
  5182  007216  9EC6               	bcf	4038,7,c	;volatile
  5183                           
  5184                           ;i2c.c: 34: SSP1CON1bits.SSPOV = 0;
  5185  007218  9CC6               	bcf	4038,6,c	;volatile
  5186                           
  5187                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b1000;
  5188  00721A  50C6               	movf	4038,w,c	;volatile
  5189  00721C  0BF0               	andlw	-16
  5190  00721E  0908               	iorlw	8
  5191  007220  6EC6               	movwf	4038,c	;volatile
  5192                           
  5193                           ;i2c.c: 36: SSP1CON1bits.SSPEN = 1;
  5194  007222  8AC6               	bsf	4038,5,c	;volatile
  5195  007224  0012               	return		;funcret
  5196  007226                     __end_of_i2c_init:
  5197                           	opt stack 0
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           intcon	equ	0xFF2
  5205                           intcon3	equ	0xFF0
  5206                           postinc0	equ	0xFEE
  5207                           wreg	equ	0xFE8
  5208                           postdec1	equ	0xFE5
  5209                           plusw1	equ	0xFE3
  5210                           fsr1h	equ	0xFE2
  5211                           fsr1l	equ	0xFE1
  5212                           indf2	equ	0xFDF
  5213                           plusw2	equ	0xFDB
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _system_full_init *****************
  5219 ;; Defined at:
  5220 ;;		line 250 in file "os.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    7
  5241 ;; This function calls:
  5242 ;;		__system_encoder_init
  5243 ;;		__system_timer0_init
  5244 ;;		_fat_init
  5245 ;;		_flash_init
  5246 ;;		_ui_init
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text12
  5253  0067D2                     __ptext12:
  5254                           	opt stack 0
  5255  0067D2                     _system_full_init:
  5256                           	opt stack 23
  5257                           
  5258                           ;os.c: 257: TRISAbits.TRISA3 = 0;
  5259                           
  5260                           ;incstack = 0
  5261  0067D2  9692               	bcf	3986,3,c	;volatile
  5262                           
  5263                           ;os.c: 258: LATAbits.LA3 = 0;
  5264  0067D4  9689               	bcf	3977,3,c	;volatile
  5265                           
  5266                           ;os.c: 261: TRISCbits.TRISC1 = 0;
  5267  0067D6  9294               	bcf	3988,1,c	;volatile
  5268                           
  5269                           ;os.c: 262: LATCbits.LC1 = 1;
  5270  0067D8  828B               	bsf	3979,1,c	;volatile
  5271                           
  5272                           ;os.c: 265: TRISCbits.TRISC6 = 0;
  5273  0067DA  9C94               	bcf	3988,6,c	;volatile
  5274                           
  5275                           ;os.c: 266: LATCbits.LC6 = 0;
  5276  0067DC  9C8B               	bcf	3979,6,c	;volatile
  5277                           
  5278                           ;os.c: 269: TRISAbits.TRISA5 = 0;
  5279  0067DE  9A92               	bcf	3986,5,c	;volatile
  5280                           
  5281                           ;os.c: 270: LATAbits.LA5 = 0;
  5282  0067E0  9A89               	bcf	3977,5,c	;volatile
  5283                           
  5284                           ;os.c: 273: TRISDbits.TRISD5 = 1;
  5285  0067E2  8A95               	bsf	3989,5,c	;volatile
  5286                           
  5287                           ;os.c: 274: TRISDbits.TRISD4 = 0;
  5288  0067E4  9895               	bcf	3989,4,c	;volatile
  5289                           
  5290                           ;os.c: 275: TRISDbits.TRISD6 = 0;
  5291  0067E6  9C95               	bcf	3989,6,c	;volatile
  5292                           
  5293                           ;os.c: 276: TRISDbits.TRISD7 = 0;
  5294  0067E8  9E95               	bcf	3989,7,c	;volatile
  5295                           
  5296                           ;os.c: 277: LATDbits.LD7 = 1;
  5297  0067EA  8E8C               	bsf	3980,7,c	;volatile
  5298                           
  5299                           ;os.c: 280: TRISEbits.TRISE2 = 1;
  5300  0067EC  8496               	bsf	3990,2,c	;volatile
  5301                           
  5302                           ;os.c: 281: ANCON0bits.PCFG7 = 1;
  5303  0067EE  010F               	movlb	15	; () banked
  5304  0067F0  8F48               	bsf	72,7,b	;volatile
  5305                           
  5306                           ;os.c: 282: TRISEbits.TRISE0 = 1;
  5307  0067F2  8096               	bsf	3990,0,c	;volatile
  5308                           
  5309                           ;os.c: 283: ANCON0bits.PCFG5 = 1;
  5310  0067F4  8B48               	bsf	72,5,b	;volatile
  5311                           
  5312                           ;os.c: 284: TRISEbits.TRISE1 = 1;
  5313  0067F6  8296               	bsf	3990,1,c	;volatile
  5314                           
  5315                           ;os.c: 285: ANCON0bits.PCFG6 = 1;
  5316  0067F8  8D48               	bsf	72,6,b	;volatile
  5317                           
  5318                           ;os.c: 286: TRISAbits.TRISA0 = 1;
  5319  0067FA  8092               	bsf	3986,0,c	;volatile
  5320                           
  5321                           ;os.c: 287: ANCON0bits.PCFG0 = 1;
  5322  0067FC  8148               	bsf	72,0,b	;volatile
  5323                           
  5324                           ;os.c: 288: TRISAbits.TRISA2 = 1;
  5325  0067FE  8492               	bsf	3986,2,c	;volatile
  5326                           
  5327                           ;os.c: 289: ANCON0bits.PCFG2 = 1;
  5328  006800  8548               	bsf	72,2,b	;volatile
  5329                           
  5330                           ;os.c: 290: TRISAbits.TRISA1 = 1;
  5331  006802  8292               	bsf	3986,1,c	;volatile
  5332                           
  5333                           ;os.c: 291: ANCON0bits.PCFG1 = 1;
  5334  006804  8348               	bsf	72,1,b	;volatile
  5335                           
  5336                           ; BSR set to: 15
  5337                           ;os.c: 294: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5338  006806  0E10               	movlw	16
  5339  006808  0100               	movlb	0	; () banked
  5340  00680A  6F66               	movwf	(_os+6)& (0+255),b
  5341                           
  5342                           ;os.c: 295: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5343  00680C  0E00               	movlw	0
  5344  00680E  6F67               	movwf	(_os+7)& (0+255),b
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;os.c: 298: flash_init();
  5348  006810  ECCE  F039         	call	_flash_init	;wreg free
  5349                           
  5350                           ;os.c: 301: fat_init();
  5351  006814  ECBE  F039         	call	_fat_init	;wreg free
  5352                           
  5353                           ;os.c: 305: _system_encoder_init();
  5354  006818  ECD6  F038         	call	__system_encoder_init	;wreg free
  5355                           
  5356                           ;os.c: 308: ui_init();
  5357  00681C  EC9A  F039         	call	_ui_init	;wreg free
  5358                           
  5359                           ;os.c: 311: _system_timer0_init();
  5360  006820  ECC6  F038         	call	__system_timer0_init	;wreg free
  5361  006824  0012               	return		;funcret
  5362  006826                     __end_of_system_full_init:
  5363                           	opt stack 0
  5364                           tblptru	equ	0xFF8
  5365                           tblptrh	equ	0xFF7
  5366                           tblptrl	equ	0xFF6
  5367                           tablat	equ	0xFF5
  5368                           prodh	equ	0xFF4
  5369                           prodl	equ	0xFF3
  5370                           intcon	equ	0xFF2
  5371                           intcon3	equ	0xFF0
  5372                           postinc0	equ	0xFEE
  5373                           wreg	equ	0xFE8
  5374                           postdec1	equ	0xFE5
  5375                           plusw1	equ	0xFE3
  5376                           fsr1h	equ	0xFE2
  5377                           fsr1l	equ	0xFE1
  5378                           indf2	equ	0xFDF
  5379                           plusw2	equ	0xFDB
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _ui_init *****************
  5385 ;; Defined at:
  5386 ;;		line 121 in file "ui.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; This function calls:
  5407 ;;		Nothing
  5408 ;; This function is called by:
  5409 ;;		_system_full_init
  5410 ;;		_ui_run
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text13
  5415  007334                     __ptext13:
  5416                           	opt stack 0
  5417  007334                     _ui_init:
  5418                           	opt stack 29
  5419                           
  5420                           ;ui.c: 123: system_ui_inactive_count = 0;
  5421                           
  5422                           ;incstack = 0
  5423  007334  0E00               	movlw	0
  5424  007336  0101               	movlb	1	; () banked
  5425  007338  6F6E               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5426  00733A  0E00               	movlw	0
  5427  00733C  6F6D               	movwf	_system_ui_inactive_count& (0+255),b
  5428                           
  5429                           ;ui.c: 124: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5430  00733E  0E01               	movlw	1
  5431  007340  0100               	movlb	0	; () banked
  5432  007342  6F94               	movwf	_userInterfaceStatus& (0+255),b
  5433                           
  5434                           ; BSR set to: 0
  5435  007344  0012               	return		;funcret
  5436  007346                     __end_of_ui_init:
  5437                           	opt stack 0
  5438                           tblptru	equ	0xFF8
  5439                           tblptrh	equ	0xFF7
  5440                           tblptrl	equ	0xFF6
  5441                           tablat	equ	0xFF5
  5442                           prodh	equ	0xFF4
  5443                           prodl	equ	0xFF3
  5444                           intcon	equ	0xFF2
  5445                           intcon3	equ	0xFF0
  5446                           postinc0	equ	0xFEE
  5447                           wreg	equ	0xFE8
  5448                           postdec1	equ	0xFE5
  5449                           plusw1	equ	0xFE3
  5450                           fsr1h	equ	0xFE2
  5451                           fsr1l	equ	0xFE1
  5452                           indf2	equ	0xFDF
  5453                           plusw2	equ	0xFDB
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function _flash_init *****************
  5459 ;; Defined at:
  5460 ;;		line 361 in file "flash.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  1    wreg      void 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;Total ram usage:        0 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    4
  5481 ;; This function calls:
  5482 ;;		__flash_set_page_size
  5483 ;;		_spi_init
  5484 ;; This function is called by:
  5485 ;;		_system_full_init
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text14
  5490  00739C                     __ptext14:
  5491                           	opt stack 0
  5492  00739C                     _flash_init:
  5493                           	opt stack 25
  5494                           
  5495                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;incstack = 0
  5499  00739C  0E00               	movlw	0
  5500  00739E  EC61  F036         	call	_spi_init
  5501                           
  5502                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5503  0073A2  0E00               	movlw	0
  5504  0073A4  ECD1  F02E         	call	__flash_set_page_size
  5505  0073A8  0012               	return		;funcret
  5506  0073AA                     __end_of_flash_init:
  5507                           	opt stack 0
  5508                           tblptru	equ	0xFF8
  5509                           tblptrh	equ	0xFF7
  5510                           tblptrl	equ	0xFF6
  5511                           tablat	equ	0xFF5
  5512                           prodh	equ	0xFF4
  5513                           prodl	equ	0xFF3
  5514                           intcon	equ	0xFF2
  5515                           intcon3	equ	0xFF0
  5516                           postinc0	equ	0xFEE
  5517                           wreg	equ	0xFE8
  5518                           postdec1	equ	0xFE5
  5519                           plusw1	equ	0xFE3
  5520                           fsr1h	equ	0xFE2
  5521                           fsr1l	equ	0xFE1
  5522                           indf2	equ	0xFDF
  5523                           plusw2	equ	0xFDB
  5524                           fsr2h	equ	0xFDA
  5525                           fsr2l	equ	0xFD9
  5526                           status	equ	0xFD8
  5527                           
  5528 ;; *************** function _spi_init *****************
  5529 ;; Defined at:
  5530 ;;		line 89 in file "spi.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  configuratio    1    wreg     enum E6746
  5533 ;; Auto vars:     Size  Location     Type
  5534 ;;  configuratio    1    3[COMRAM] enum E6746
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  1    wreg      void 
  5537 ;; Registers used:
  5538 ;;		wreg, status,2, status,0, cstack
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;Total ram usage:        1 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; Hardware stack levels required when called:    1
  5551 ;; This function calls:
  5552 ;;		__spi_init
  5553 ;; This function is called by:
  5554 ;;		_flash_init
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text15
  5559  006CC2                     __ptext15:
  5560                           	opt stack 0
  5561  006CC2                     _spi_init:
  5562                           	opt stack 27
  5563                           
  5564                           ;incstack = 0
  5565                           ;spi_init@configuration stored from wreg
  5566  006CC2  6E04               	movwf	spi_init@configuration,c
  5567                           
  5568                           ;spi.c: 91: switch(configuration)
  5569  006CC4  D012               	goto	l2832
  5570  006CC6                     
  5571                           ;spi.c: 94: _spi_init(config_internal);
  5572  006CC6  C15A  F001         	movff	_config_internal,__spi_init@details
  5573  006CCA  C15B  F002         	movff	_config_internal+1,__spi_init@details+1
  5574  006CCE  C15C  F003         	movff	_config_internal+2,__spi_init@details+2
  5575  006CD2  ECBA  F036         	call	__spi_init	;wreg free
  5576                           
  5577                           ;spi.c: 95: break;
  5578  006CD6  D010               	goto	l2834
  5579  006CD8                     
  5580                           ;spi.c: 98: _spi_init(config_external);
  5581  006CD8  C157  F001         	movff	_config_external,__spi_init@details
  5582  006CDC  C158  F002         	movff	_config_external+1,__spi_init@details+1
  5583  006CE0  C159  F003         	movff	_config_external+2,__spi_init@details+2
  5584  006CE4  ECBA  F036         	call	__spi_init	;wreg free
  5585                           
  5586                           ;spi.c: 100: }
  5587                           
  5588                           ;spi.c: 99: break;
  5589  006CE8  D007               	goto	l2834
  5590  006CEA                     l2832:
  5591  006CEA  5004               	movf	spi_init@configuration,w,c
  5592                           
  5593                           ; Switch size 1, requested type "space"
  5594                           ; Number of cases is 2, Range of values is 0 to 1
  5595                           ; switch strategies available:
  5596                           ; Name         Instructions Cycles
  5597                           ; simple_byte            7     4 (average)
  5598                           ;	Chosen strategy is simple_byte
  5599  006CEC  0A00               	xorlw	0	; case 0
  5600  006CEE  B4D8               	btfsc	status,2,c
  5601  006CF0  D7EA               	goto	l2833
  5602  006CF2  0A01               	xorlw	1	; case 1
  5603  006CF4  B4D8               	btfsc	status,2,c
  5604  006CF6  D7F0               	goto	l2835
  5605  006CF8                     l2834:
  5606                           
  5607                           ;spi.c: 102: active_configuration = configuration;
  5608  006CF8  C004  F090         	movff	spi_init@configuration,_active_configuration
  5609  006CFC  0012               	return		;funcret
  5610  006CFE                     __end_of_spi_init:
  5611                           	opt stack 0
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           intcon3	equ	0xFF0
  5620                           postinc0	equ	0xFEE
  5621                           wreg	equ	0xFE8
  5622                           postdec1	equ	0xFE5
  5623                           plusw1	equ	0xFE3
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           indf2	equ	0xFDF
  5627                           plusw2	equ	0xFDB
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function __spi_init *****************
  5633 ;; Defined at:
  5634 ;;		line 24 in file "spi.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  details         3    0[COMRAM] struct .
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5648 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;Total ram usage:        3 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_spi_init
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text16
  5662  006D74                     __ptext16:
  5663                           	opt stack 0
  5664  006D74                     __spi_init:
  5665                           	opt stack 27
  5666                           
  5667                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5668                           
  5669                           ;incstack = 0
  5670  006D74  0E55               	movlw	85
  5671  006D76  6EA7               	movwf	4007,c	;volsfr
  5672  006D78  0EAA               	movlw	170
  5673  006D7A  6EA7               	movwf	4007,c	;volsfr
  5674  006D7C  010E               	movlb	14	; () banked
  5675  006D7E  91BF               	bcf	191,0,b	;volatile
  5676                           
  5677                           ;spi.c: 31: RPINR21 = 22;
  5678  006D80  0E16               	movlw	22
  5679  006D82  6FFC               	movwf	252,b	;volatile
  5680                           
  5681                           ;spi.c: 32: RPOR21 = 10;
  5682  006D84  0E0A               	movlw	10
  5683  006D86  6FD5               	movwf	213,b	;volatile
  5684                           
  5685                           ;spi.c: 34: RPOR23 = 11;
  5686  006D88  0E0B               	movlw	11
  5687  006D8A  6FD7               	movwf	215,b	;volatile
  5688                           
  5689                           ;spi.c: 35: RPINR22 = 23;
  5690  006D8C  0E17               	movlw	23
  5691  006D8E  6FFD               	movwf	253,b	;volatile
  5692                           
  5693                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5694  006D90  0E55               	movlw	85
  5695  006D92  6EA7               	movwf	4007,c	;volsfr
  5696  006D94  0EAA               	movlw	170
  5697  006D96  6EA7               	movwf	4007,c	;volsfr
  5698                           
  5699                           ; BSR set to: 14
  5700  006D98  81BF               	bsf	191,0,b	;volatile
  5701                           
  5702                           ; BSR set to: 14
  5703                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  5704  006D9A  8E73               	bsf	3955,7,c	;volatile
  5705                           
  5706                           ; BSR set to: 14
  5707                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  5708  006D9C  8C73               	bsf	3955,6,c	;volatile
  5709                           
  5710                           ; BSR set to: 14
  5711                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  5712  006D9E  9872               	bcf	3954,4,c	;volatile
  5713                           
  5714                           ; BSR set to: 14
  5715                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  5716  006DA0  9072               	bcf	3954,0,c	;volatile
  5717  006DA2  9272               	bcf	3954,1,c	;volatile
  5718  006DA4  9472               	bcf	3954,2,c	;volatile
  5719  006DA6  9672               	bcf	3954,3,c	;volatile
  5720                           
  5721                           ; BSR set to: 14
  5722                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  5723  006DA8  8A72               	bsf	3954,5,c	;volatile
  5724                           
  5725                           ; BSR set to: 14
  5726  006DAA  0012               	return		;funcret
  5727  006DAC                     __end_of__spi_init:
  5728                           	opt stack 0
  5729                           tblptru	equ	0xFF8
  5730                           tblptrh	equ	0xFF7
  5731                           tblptrl	equ	0xFF6
  5732                           tablat	equ	0xFF5
  5733                           prodh	equ	0xFF4
  5734                           prodl	equ	0xFF3
  5735                           intcon	equ	0xFF2
  5736                           intcon3	equ	0xFF0
  5737                           postinc0	equ	0xFEE
  5738                           wreg	equ	0xFE8
  5739                           postdec1	equ	0xFE5
  5740                           plusw1	equ	0xFE3
  5741                           fsr1h	equ	0xFE2
  5742                           fsr1l	equ	0xFE1
  5743                           indf2	equ	0xFDF
  5744                           plusw2	equ	0xFDB
  5745                           fsr2h	equ	0xFDA
  5746                           fsr2l	equ	0xFD9
  5747                           status	equ	0xFD8
  5748                           
  5749 ;; *************** function __flash_set_page_size *****************
  5750 ;; Defined at:
  5751 ;;		line 99 in file "flash.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  size            1    wreg     enum E6890
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  size            1   23[COMRAM] enum E6890
  5756 ;;  command         4   19[COMRAM] unsigned char [4]
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5769 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5770 ;;Total ram usage:        5 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:    3
  5773 ;; This function calls:
  5774 ;;		__flash_is_busy
  5775 ;;		_memcpy
  5776 ;;		_spi_tx
  5777 ;; This function is called by:
  5778 ;;		_flash_init
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text17
  5783  005DA2                     __ptext17:
  5784                           	opt stack 0
  5785  005DA2                     __flash_set_page_size:
  5786                           	opt stack 25
  5787                           
  5788                           ; BSR set to: 14
  5789                           ;incstack = 0
  5790                           ;__flash_set_page_size@size stored from wreg
  5791  005DA2  6E18               	movwf	__flash_set_page_size@size,c
  5792  005DA4                     
  5793                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  5794  005DA4  ECB5  F038         	call	__flash_is_busy	;wreg free
  5795  005DA8  0900               	iorlw	0
  5796  005DAA  A4D8               	btfss	status,2,c
  5797  005DAC  D7FB               	goto	l12937
  5798                           
  5799                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  5800  005DAE  5018               	movf	__flash_set_page_size@size,w,c
  5801  005DB0  A4D8               	btfss	status,2,c
  5802  005DB2  D013               	goto	l1776
  5803                           
  5804                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  5805  005DB4  0E14               	movlw	low __flash_set_page_size@command
  5806  005DB6  6E01               	movwf	memcpy@d1,c
  5807  005DB8  0E00               	movlw	high __flash_set_page_size@command
  5808  005DBA  6E02               	movwf	memcpy@d1+1,c
  5809  005DBC  0EC4               	movlw	low _flash_command_pagesize_512
  5810  005DBE  6E03               	movwf	memcpy@s1,c
  5811  005DC0  0E8F               	movlw	high _flash_command_pagesize_512
  5812  005DC2  6E04               	movwf	memcpy@s1+1,c
  5813  005DC4  5003               	movf	memcpy@s1,w,c
  5814  005DC6  1004               	iorwf	memcpy@s1+1,w,c
  5815  005DC8  A4D8               	btfss	status,2,c
  5816  005DCA  0E00               	movlw	low (__mediumconst shr (0+16))
  5817  005DCC  6E05               	movwf	memcpy@s1+2,c
  5818  005DCE  0E00               	movlw	0
  5819  005DD0  6E07               	movwf	memcpy@n+1,c
  5820  005DD2  0E04               	movlw	4
  5821  005DD4  6E06               	movwf	memcpy@n,c
  5822  005DD6  EC07  F031         	call	_memcpy	;wreg free
  5823  005DDA                     l1776:
  5824                           
  5825                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  5826  005DDA  0418               	decf	__flash_set_page_size@size,w,c
  5827  005DDC  A4D8               	btfss	status,2,c
  5828  005DDE  D013               	goto	l1777
  5829                           
  5830                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  5831  005DE0  0E14               	movlw	low __flash_set_page_size@command
  5832  005DE2  6E01               	movwf	memcpy@d1,c
  5833  005DE4  0E00               	movlw	high __flash_set_page_size@command
  5834  005DE6  6E02               	movwf	memcpy@d1+1,c
  5835  005DE8  0EC0               	movlw	low _flash_command_pagesize_528
  5836  005DEA  6E03               	movwf	memcpy@s1,c
  5837  005DEC  0E8F               	movlw	high _flash_command_pagesize_528
  5838  005DEE  6E04               	movwf	memcpy@s1+1,c
  5839  005DF0  5003               	movf	memcpy@s1,w,c
  5840  005DF2  1004               	iorwf	memcpy@s1+1,w,c
  5841  005DF4  A4D8               	btfss	status,2,c
  5842  005DF6  0E00               	movlw	low (__mediumconst shr (0+16))
  5843  005DF8  6E05               	movwf	memcpy@s1+2,c
  5844  005DFA  0E00               	movlw	0
  5845  005DFC  6E07               	movwf	memcpy@n+1,c
  5846  005DFE  0E04               	movlw	4
  5847  005E00  6E06               	movwf	memcpy@n,c
  5848  005E02  EC07  F031         	call	_memcpy	;wreg free
  5849  005E06                     l1777:
  5850                           
  5851                           ;flash.c: 113: spi_tx(command, 4);
  5852  005E06  0E14               	movlw	low __flash_set_page_size@command
  5853  005E08  6E01               	movwf	spi_tx@data,c
  5854  005E0A  0E00               	movlw	high __flash_set_page_size@command
  5855  005E0C  6E02               	movwf	spi_tx@data+1,c
  5856  005E0E  0E00               	movlw	0
  5857  005E10  6E04               	movwf	spi_tx@length+1,c
  5858  005E12  0E04               	movlw	4
  5859  005E14  6E03               	movwf	spi_tx@length,c
  5860  005E16  ECE6  F032         	call	_spi_tx	;wreg free
  5861  005E1A  0012               	return		;funcret
  5862  005E1C                     __end_of__flash_set_page_size:
  5863                           	opt stack 0
  5864                           tblptru	equ	0xFF8
  5865                           tblptrh	equ	0xFF7
  5866                           tblptrl	equ	0xFF6
  5867                           tablat	equ	0xFF5
  5868                           prodh	equ	0xFF4
  5869                           prodl	equ	0xFF3
  5870                           intcon	equ	0xFF2
  5871                           intcon3	equ	0xFF0
  5872                           postinc0	equ	0xFEE
  5873                           wreg	equ	0xFE8
  5874                           postdec1	equ	0xFE5
  5875                           plusw1	equ	0xFE3
  5876                           fsr1h	equ	0xFE2
  5877                           fsr1l	equ	0xFE1
  5878                           indf2	equ	0xFDF
  5879                           plusw2	equ	0xFDB
  5880                           fsr2h	equ	0xFDA
  5881                           fsr2l	equ	0xFD9
  5882                           status	equ	0xFD8
  5883                           
  5884 ;; *************** function _fat_init *****************
  5885 ;; Defined at:
  5886 ;;		line 1382 in file "fat16.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    6
  5907 ;; This function calls:
  5908 ;;		_fat_format
  5909 ;;		_fat_get_format_status
  5910 ;; This function is called by:
  5911 ;;		_system_full_init
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text18
  5916  00737C                     __ptext18:
  5917                           	opt stack 0
  5918  00737C                     _fat_init:
  5919                           	opt stack 23
  5920                           
  5921                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5922                           
  5923                           ;incstack = 0
  5924  00737C  EC29  F02A         	call	_fat_get_format_status	;wreg free
  5925  007380  0900               	iorlw	0
  5926  007382  A4D8               	btfss	status,2,c
  5927  007384  0012               	return	
  5928                           
  5929                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  5930  007386  EC1E  F00F         	call	_fat_format	;wreg free
  5931  00738A  0012               	return	
  5932  00738C                     __end_of_fat_init:
  5933                           	opt stack 0
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           intcon3	equ	0xFF0
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           plusw1	equ	0xFE3
  5946                           fsr1h	equ	0xFE2
  5947                           fsr1l	equ	0xFE1
  5948                           indf2	equ	0xFDF
  5949                           plusw2	equ	0xFDB
  5950                           fsr2h	equ	0xFDA
  5951                           fsr2l	equ	0xFD9
  5952                           status	equ	0xFD8
  5953                           
  5954 ;; *************** function _fat_get_format_status *****************
  5955 ;; Defined at:
  5956 ;;		line 1292 in file "fat16.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;  cntr            2   45[COMRAM] unsigned int 
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      enum E6864
  5963 ;; Registers used:
  5964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5973 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5974 ;;Total ram usage:        4 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    5
  5977 ;; This function calls:
  5978 ;;		__get_fbr
  5979 ;;		__get_mbr
  5980 ;;		_flash_sector_read
  5981 ;; This function is called by:
  5982 ;;		_fat_init
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text19
  5987  005452                     __ptext19:
  5988                           	opt stack 0
  5989  005452                     _fat_get_format_status:
  5990                           	opt stack 23
  5991                           
  5992                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  5993                           
  5994                           ;incstack = 0
  5995  005452  0E00               	movlw	0
  5996  005454  6E29               	movwf	flash_sector_read@page+1,c
  5997  005456  0E00               	movlw	0
  5998  005458  6E28               	movwf	flash_sector_read@page,c
  5999  00545A  0ECC               	movlw	low _buffer
  6000  00545C  6E2A               	movwf	flash_sector_read@data,c
  6001  00545E  0E02               	movlw	high _buffer
  6002  005460  6E2B               	movwf	flash_sector_read@data+1,c
  6003  005462  EC59  F038         	call	_flash_sector_read	;wreg free
  6004                           
  6005                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  6006  005466  0E00               	movlw	0
  6007  005468  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6008  00546A  0E00               	movlw	0
  6009  00546C  6E2E               	movwf	fat_get_format_status@cntr,c
  6010  00546E                     l13089:
  6011  00546E  0E02               	movlw	2
  6012  005470  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6013  005472  B0D8               	btfsc	status,0,c
  6014  005474  D016               	goto	u10730
  6015                           
  6016                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  6017  005476  0ECC               	movlw	low _buffer
  6018  005478  242E               	addwf	fat_get_format_status@cntr,w,c
  6019  00547A  6ED9               	movwf	fsr2l,c
  6020  00547C  0E02               	movlw	high _buffer
  6021  00547E  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6022  005480  6EDA               	movwf	fsr2h,c
  6023  005482  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6024  005486  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6025  00548A  ECE6  F025         	call	__get_mbr	;wreg free
  6026  00548E  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6027  005490  50DE               	movf	postinc2,w,c
  6028  005492  182D               	xorwf	??_fat_get_format_status+1,w,c
  6029  005494  B4D8               	btfsc	status,2,c
  6030  005496  D002               	goto	l2296
  6031                           
  6032                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  6033  005498  0E00               	movlw	0
  6034  00549A  0012               	return	
  6035  00549C                     l2296:
  6036  00549C  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6037  00549E  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6038  0054A0  D7E6               	goto	l13089
  6039  0054A2                     u10730:
  6040                           
  6041                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  6042  0054A2  0E00               	movlw	0
  6043  0054A4  6E29               	movwf	flash_sector_read@page+1,c
  6044  0054A6  0E01               	movlw	1
  6045  0054A8  6E28               	movwf	flash_sector_read@page,c
  6046  0054AA  0ECC               	movlw	low _buffer
  6047  0054AC  6E2A               	movwf	flash_sector_read@data,c
  6048  0054AE  0E02               	movlw	high _buffer
  6049  0054B0  6E2B               	movwf	flash_sector_read@data+1,c
  6050  0054B2  EC59  F038         	call	_flash_sector_read	;wreg free
  6051                           
  6052                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  6053  0054B6  0E00               	movlw	0
  6054  0054B8  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6055  0054BA  0E00               	movlw	0
  6056  0054BC  6E2E               	movwf	fat_get_format_status@cntr,c
  6057  0054BE                     l13107:
  6058  0054BE  0E02               	movlw	2
  6059  0054C0  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6060  0054C2  B0D8               	btfsc	status,0,c
  6061  0054C4  D016               	goto	u10760
  6062                           
  6063                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  6064  0054C6  0ECC               	movlw	low _buffer
  6065  0054C8  242E               	addwf	fat_get_format_status@cntr,w,c
  6066  0054CA  6ED9               	movwf	fsr2l,c
  6067  0054CC  0E02               	movlw	high _buffer
  6068  0054CE  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6069  0054D0  6EDA               	movwf	fsr2h,c
  6070  0054D2  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6071  0054D6  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6072  0054DA  ECAD  F00B         	call	__get_fbr	;wreg free
  6073  0054DE  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6074  0054E0  50DE               	movf	postinc2,w,c
  6075  0054E2  182D               	xorwf	??_fat_get_format_status+1,w,c
  6076  0054E4  B4D8               	btfsc	status,2,c
  6077  0054E6  D002               	goto	l2300
  6078                           
  6079                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  6080  0054E8  0E00               	movlw	0
  6081  0054EA  0012               	return	
  6082  0054EC                     l2300:
  6083  0054EC  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6084  0054EE  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6085  0054F0  D7E6               	goto	l13107
  6086  0054F2                     u10760:
  6087                           
  6088                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  6089  0054F2  0E01               	movlw	1
  6090  0054F4  0012               	return	
  6091  0054F6                     __end_of_fat_get_format_status:
  6092                           	opt stack 0
  6093                           tblptru	equ	0xFF8
  6094                           tblptrh	equ	0xFF7
  6095                           tblptrl	equ	0xFF6
  6096                           tablat	equ	0xFF5
  6097                           prodh	equ	0xFF4
  6098                           prodl	equ	0xFF3
  6099                           intcon	equ	0xFF2
  6100                           intcon3	equ	0xFF0
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           postdec1	equ	0xFE5
  6104                           plusw1	equ	0xFE3
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           plusw2	equ	0xFDB
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function __system_timer0_init *****************
  6115 ;; Defined at:
  6116 ;;		line 194 in file "os.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_system_full_init
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text20
  6144  00718C                     __ptext20:
  6145                           	opt stack 0
  6146  00718C                     __system_timer0_init:
  6147                           	opt stack 29
  6148                           
  6149                           ;os.c: 197: T0CONbits.T0CS = 0;
  6150                           
  6151                           ;incstack = 0
  6152  00718C  9AD5               	bcf	4053,5,c	;volatile
  6153                           
  6154                           ;os.c: 199: T0CONbits.T08BIT = 0;
  6155  00718E  9CD5               	bcf	4053,6,c	;volatile
  6156                           
  6157                           ;os.c: 201: T0CONbits.T0PS2 = 0;
  6158  007190  94D5               	bcf	4053,2,c	;volatile
  6159                           
  6160                           ;os.c: 202: T0CONbits.T0PS1 = 1;
  6161  007192  82D5               	bsf	4053,1,c	;volatile
  6162                           
  6163                           ;os.c: 203: T0CONbits.T0PS0 = 0;
  6164  007194  90D5               	bcf	4053,0,c	;volatile
  6165                           
  6166                           ;os.c: 205: T0CONbits.PSA = 0;
  6167  007196  96D5               	bcf	4053,3,c	;volatile
  6168                           
  6169                           ;os.c: 207: TMR0H = 0xD1;
  6170  007198  0ED1               	movlw	209
  6171  00719A  6ED7               	movwf	4055,c	;volatile
  6172                           
  6173                           ;os.c: 208: TMR0L = 0x20;
  6174  00719C  0E20               	movlw	32
  6175  00719E  6ED6               	movwf	4054,c	;volatile
  6176                           
  6177                           ;os.c: 210: T0CONbits.TMR0ON = 1;
  6178  0071A0  8ED5               	bsf	4053,7,c	;volatile
  6179                           
  6180                           ;os.c: 214: INTCONbits.TMR0IF = 0;
  6181  0071A2  94F2               	bcf	intcon,2,c	;volatile
  6182                           
  6183                           ;os.c: 217: os.timeSlot = 0;
  6184  0071A4  0E00               	movlw	0
  6185  0071A6  0100               	movlb	0	; () banked
  6186  0071A8  6F64               	movwf	(_os+4)& (0+255),b
  6187                           
  6188                           ; BSR set to: 0
  6189  0071AA  0012               	return		;funcret
  6190  0071AC                     __end_of__system_timer0_init:
  6191                           	opt stack 0
  6192                           tblptru	equ	0xFF8
  6193                           tblptrh	equ	0xFF7
  6194                           tblptrl	equ	0xFF6
  6195                           tablat	equ	0xFF5
  6196                           prodh	equ	0xFF4
  6197                           prodl	equ	0xFF3
  6198                           intcon	equ	0xFF2
  6199                           intcon3	equ	0xFF0
  6200                           postinc0	equ	0xFEE
  6201                           wreg	equ	0xFE8
  6202                           postdec1	equ	0xFE5
  6203                           plusw1	equ	0xFE3
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           indf2	equ	0xFDF
  6207                           postinc2	equ	0xFDE
  6208                           plusw2	equ	0xFDB
  6209                           fsr2h	equ	0xFDA
  6210                           fsr2l	equ	0xFD9
  6211                           status	equ	0xFD8
  6212                           
  6213 ;; *************** function __system_encoder_init *****************
  6214 ;; Defined at:
  6215 ;;		line 148 in file "os.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;		None
  6218 ;; Auto vars:     Size  Location     Type
  6219 ;;		None
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  1    wreg      void 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;Total ram usage:        0 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_system_full_init
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text21
  6243  0071AC                     __ptext21:
  6244                           	opt stack 0
  6245  0071AC                     __system_encoder_init:
  6246                           	opt stack 29
  6247                           
  6248                           ;os.c: 166: enc1 = PORTE & 0b00000111;
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;incstack = 0
  6252  0071AC  5084               	movf	3972,w,c	;volatile
  6253  0071AE  0B07               	andlw	7
  6254  0071B0  0100               	movlb	0	; () banked
  6255  0071B2  6F96               	movwf	_enc1& (0+255),b
  6256                           
  6257                           ;os.c: 167: enc2 = PORTA & 0b00000111;
  6258  0071B4  5080               	movf	3968,w,c	;volatile
  6259  0071B6  0B07               	andlw	7
  6260  0071B8  6F95               	movwf	_enc2& (0+255),b
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;os.c: 168: os.encoder1Count = 0;
  6264  0071BA  0E00               	movlw	0
  6265  0071BC  6F60               	movwf	_os& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;os.c: 169: os.encoder2Count = 0;
  6269  0071BE  0E00               	movlw	0
  6270  0071C0  6F62               	movwf	(_os+2)& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;os.c: 170: os.button1 = 0;
  6274  0071C2  0E00               	movlw	0
  6275  0071C4  6F61               	movwf	(_os+1)& (0+255),b
  6276                           
  6277                           ; BSR set to: 0
  6278                           ;os.c: 171: os.button2 = 0;
  6279  0071C6  0E00               	movlw	0
  6280  0071C8  6F63               	movwf	(_os+3)& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283  0071CA  0012               	return		;funcret
  6284  0071CC                     __end_of__system_encoder_init:
  6285                           	opt stack 0
  6286                           tblptru	equ	0xFF8
  6287                           tblptrh	equ	0xFF7
  6288                           tblptrl	equ	0xFF6
  6289                           tablat	equ	0xFF5
  6290                           prodh	equ	0xFF4
  6291                           prodl	equ	0xFF3
  6292                           intcon	equ	0xFF2
  6293                           intcon3	equ	0xFF0
  6294                           postinc0	equ	0xFEE
  6295                           wreg	equ	0xFE8
  6296                           postdec1	equ	0xFE5
  6297                           plusw1	equ	0xFE3
  6298                           fsr1h	equ	0xFE2
  6299                           fsr1l	equ	0xFE1
  6300                           indf2	equ	0xFDF
  6301                           postinc2	equ	0xFDE
  6302                           plusw2	equ	0xFDB
  6303                           fsr2h	equ	0xFDA
  6304                           fsr2l	equ	0xFD9
  6305                           status	equ	0xFD8
  6306                           
  6307 ;; *************** function _jump_to_main_program *****************
  6308 ;; Defined at:
  6309 ;;		line 319 in file "os.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;		None
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      void 
  6316 ;; Registers used:
  6317 ;;		None
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;Total ram usage:        0 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_main
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text22
  6337  00744A                     __ptext22:
  6338                           	opt stack 0
  6339  00744A                     _jump_to_main_program:
  6340                           	opt stack 30
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;incstack = 0
  6344  00744A  EF00 F048          	goto	36864	; ;# 
  6345  00744E  0012               	return		;funcret
  6346  007450                     __end_of_jump_to_main_program:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           intcon	equ	0xFF2
  6355                           intcon3	equ	0xFF0
  6356                           postinc0	equ	0xFEE
  6357                           wreg	equ	0xFE8
  6358                           postdec1	equ	0xFE5
  6359                           plusw1	equ	0xFE3
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           plusw2	equ	0xFDB
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function _bootloader_run *****************
  6370 ;; Defined at:
  6371 ;;		line 63 in file "bootloader.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  timeslot        1    wreg     unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  timeslot        1   91[COMRAM] unsigned char 
  6376 ;; Return value:  Size  Location     Type
  6377 ;;                  1    wreg      void 
  6378 ;; Registers used:
  6379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6380 ;; Tracked objects:
  6381 ;;		On entry : 0/0
  6382 ;;		On exit  : 0/0
  6383 ;;		Unchanged: 0/0
  6384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;Total ram usage:        1 bytes
  6390 ;; Hardware stack levels used:    1
  6391 ;; Hardware stack levels required when called:    9
  6392 ;; This function calls:
  6393 ;;		__bootloader_find_file
  6394 ;;		__bootloader_program
  6395 ;;		__bootloader_verify_file
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text23
  6402  0061A6                     __ptext23:
  6403                           	opt stack 0
  6404  0061A6                     _bootloader_run:
  6405                           	opt stack 21
  6406                           
  6407                           ;incstack = 0
  6408                           ;bootloader_run@timeslot stored from wreg
  6409  0061A6  6E5C               	movwf	bootloader_run@timeslot,c
  6410                           
  6411                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6412  0061A8  0100               	movlb	0	; () banked
  6413  0061AA  5167               	movf	(_os+7)& (0+255),w,b
  6414  0061AC  B4D8               	btfsc	status,2,c
  6415  0061AE  0012               	return	
  6416  0061B0  D015               	goto	l2454
  6417  0061B2                     
  6418                           ; BSR set to: 0
  6419                           ;bootloader.c: 74: if(timeslot==0)
  6420                           
  6421                           ; BSR set to: 0
  6422  0061B2  505C               	movf	bootloader_run@timeslot,w,c
  6423  0061B4  A4D8               	btfss	status,2,c
  6424  0061B6  0012               	return	
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6428  0061B8  ECCD  F02A         	call	__bootloader_find_file	;wreg free
  6429                           
  6430                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6431  0061BC  0012               	return	
  6432  0061BE                     
  6433                           ;bootloader.c: 81: if(timeslot==0)
  6434  0061BE  505C               	movf	bootloader_run@timeslot,w,c
  6435  0061C0  A4D8               	btfss	status,2,c
  6436  0061C2  0012               	return	
  6437                           
  6438                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6439  0061C4  ECCD  F02A         	call	__bootloader_find_file	;wreg free
  6440                           
  6441                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6442  0061C8  0012               	return	
  6443  0061CA                     
  6444                           ;bootloader.c: 88: _bootloader_verify_file();
  6445  0061CA  EC07  F006         	call	__bootloader_verify_file	;wreg free
  6446                           
  6447                           ;bootloader.c: 95: break;
  6448                           
  6449                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6450                           
  6451                           ;bootloader.c: 92: break;
  6452                           
  6453                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6454                           
  6455                           ;bootloader.c: 89: break;
  6456  0061CE  0012               	return	
  6457  0061D0                     
  6458                           ;bootloader.c: 98: if(timeslot==0)
  6459  0061D0  505C               	movf	bootloader_run@timeslot,w,c
  6460  0061D2  A4D8               	btfss	status,2,c
  6461  0061D4  0012               	return	
  6462                           
  6463                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6464  0061D6  EC2D  F004         	call	__bootloader_program	;wreg free
  6465                           
  6466                           ;bootloader.c: 109: }
  6467                           
  6468                           ;bootloader.c: 108: break;
  6469                           
  6470                           ;bootloader.c: 107: case BOOTLOADER_MODE_SUSPENDED:
  6471                           
  6472                           ;bootloader.c: 105: break;
  6473                           
  6474                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6475                           
  6476                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6477  0061DA  0012               	return	
  6478  0061DC                     l2454:
  6479  0061DC  0100               	movlb	0	; () banked
  6480  0061DE  5166               	movf	(_os+6)& (0+255),w,b
  6481                           
  6482                           ; Switch size 1, requested type "space"
  6483                           ; Number of cases is 8, Range of values is 16 to 144
  6484                           ; switch strategies available:
  6485                           ; Name         Instructions Cycles
  6486                           ; simple_byte           25    13 (average)
  6487                           ;	Chosen strategy is simple_byte
  6488  0061E0  0A10               	xorlw	16	; case 16
  6489  0061E2  B4D8               	btfsc	status,2,c
  6490  0061E4  D7E6               	goto	l2455
  6491  0061E6  0A30               	xorlw	48	; case 32
  6492  0061E8  B4D8               	btfsc	status,2,c
  6493  0061EA  D7E9               	goto	l2458
  6494  0061EC  0A10               	xorlw	16	; case 48
  6495  0061EE  B4D8               	btfsc	status,2,c
  6496  0061F0  D7EC               	goto	l2460
  6497  0061F2  0A70               	xorlw	112	; case 64
  6498  0061F4  B4D8               	btfsc	status,2,c
  6499  0061F6  0012               	return	
  6500  0061F8  0A10               	xorlw	16	; case 80
  6501  0061FA  B4D8               	btfsc	status,2,c
  6502  0061FC  0012               	return	
  6503  0061FE  0A30               	xorlw	48	; case 96
  6504  006200  B4D8               	btfsc	status,2,c
  6505  006202  D7E6               	goto	l2463
  6506  006204  0A10               	xorlw	16	; case 112
  6507  006206  B4D8               	btfsc	status,2,c
  6508  006208  0012               	return	
  6509  00620A  0AE0               	xorlw	224	; case 144
  6510  00620C  0012               	return	
  6511  00620E                     __end_of_bootloader_run:
  6512                           	opt stack 0
  6513                           tblptru	equ	0xFF8
  6514                           tblptrh	equ	0xFF7
  6515                           tblptrl	equ	0xFF6
  6516                           tablat	equ	0xFF5
  6517                           prodh	equ	0xFF4
  6518                           prodl	equ	0xFF3
  6519                           intcon	equ	0xFF2
  6520                           intcon3	equ	0xFF0
  6521                           postinc0	equ	0xFEE
  6522                           wreg	equ	0xFE8
  6523                           postdec1	equ	0xFE5
  6524                           plusw1	equ	0xFE3
  6525                           fsr1h	equ	0xFE2
  6526                           fsr1l	equ	0xFE1
  6527                           indf2	equ	0xFDF
  6528                           postinc2	equ	0xFDE
  6529                           plusw2	equ	0xFDB
  6530                           fsr2h	equ	0xFDA
  6531                           fsr2l	equ	0xFD9
  6532                           status	equ	0xFD8
  6533                           
  6534 ;; *************** function __bootloader_verify_file *****************
  6535 ;; Defined at:
  6536 ;;		line 185 in file "bootloader.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;		None
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  root           32   22[BANK0 ] struct .
  6541 ;;  address32       4   59[BANK0 ] unsigned long 
  6542 ;;  return_value    4   55[BANK0 ] unsigned long 
  6543 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;Total ram usage:       49 bytes
  6558 ;; Hardware stack levels used:    1
  6559 ;; Hardware stack levels required when called:    8
  6560 ;; This function calls:
  6561 ;;		__bootloader_check_address
  6562 ;;		_fat_get_file_information
  6563 ;;		_fat_get_file_size
  6564 ;;		_fat_read_from_file_fast
  6565 ;;		_parseHexFileEntry
  6566 ;; This function is called by:
  6567 ;;		_bootloader_run
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text24
  6572  000C0E                     __ptext24:
  6573                           	opt stack 0
  6574  000C0E                     __bootloader_verify_file:
  6575                           	opt stack 21
  6576                           
  6577                           ;bootloader.c: 187: uint8_t rec_counter;;bootloader.c: 188: uint32_t return_value = 0;
  6578                           
  6579                           ;incstack = 0
  6580  000C0E  0E00               	movlw	0
  6581  000C10  0100               	movlb	0	; () banked
  6582  000C12  6FEC               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6583  000C14  0E00               	movlw	0
  6584  000C16  6FED               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6585  000C18  0E00               	movlw	0
  6586  000C1A  6FEE               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6587  000C1C  0E00               	movlw	0
  6588  000C1E  6FEF               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6589                           
  6590                           ; BSR set to: 0
  6591                           ;bootloader.c: 189: uint32_t address32;;bootloader.c: 190: rootEntry_t root;;bootloader.
      +                          c: 192: if(hex_file_offset==0)
  6592  000C20  517E               	movf	_hex_file_offset& (0+255),w,b
  6593  000C22  117F               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6594  000C24  1180               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6595  000C26  1181               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6596  000C28  A4D8               	btfss	status,2,c
  6597  000C2A  D010               	goto	l2486
  6598                           
  6599                           ; BSR set to: 0
  6600                           ;bootloader.c: 193: {;bootloader.c: 195: fat_get_file_information(file_number, &root);
  6601  000C2C  0ECB               	movlw	low __bootloader_verify_file@root
  6602  000C2E  6E30               	movwf	fat_get_file_information@data,c
  6603  000C30  0E00               	movlw	high __bootloader_verify_file@root
  6604  000C32  6E31               	movwf	fat_get_file_information@data+1,c
  6605  000C34  51FE               	movf	_file_number& (0+255),w,b
  6606  000C36  ECC0  F02F         	call	_fat_get_file_information
  6607                           
  6608                           ;bootloader.c: 196: fast_read_cluster = root.firstCluster;
  6609  000C3A  C0E5  F0AF         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6610  000C3E  C0E6  F0B0         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6611                           
  6612                           ;bootloader.c: 197: fast_read_cluster_number = 0;
  6613  000C42  0E00               	movlw	0
  6614  000C44  0100               	movlb	0	; () banked
  6615  000C46  6FAE               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6616  000C48  0E00               	movlw	0
  6617  000C4A  6FAD               	movwf	_fast_read_cluster_number& (0+255),b
  6618  000C4C                     l2486:
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;bootloader.c: 198: };bootloader.c: 201: hex_file_size = fat_get_file_size(file_number);
  6622                           
  6623                           ; BSR set to: 0
  6624  000C4C  51FE               	movf	_file_number& (0+255),w,b
  6625  000C4E  EC31  F030         	call	_fat_get_file_size
  6626  000C52  C036  F07A         	movff	?_fat_get_file_size,_hex_file_size
  6627  000C56  C037  F07B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6628  000C5A  C038  F07C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6629  000C5E  C039  F07D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6630                           
  6631                           ;bootloader.c: 204: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6632  000C62  0E00               	movlw	0
  6633  000C64  0100               	movlb	0	; () banked
  6634  000C66  6FEB               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6635  000C68                     l14063:
  6636                           
  6637                           ; BSR set to: 0
  6638  000C68  0E0F               	movlw	15
  6639  000C6A  65EB               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6640  000C6C  D001               	goto	l2487
  6641  000C6E  0012               	return	
  6642  000C70                     l2487:
  6643                           
  6644                           ; BSR set to: 0
  6645                           ;bootloader.c: 205: {;bootloader.c: 207: if((hex_file_size-hex_file_offset)>=50)
  6646                           
  6647                           ; BSR set to: 0
  6648  000C70  C07E  F0C3         	movff	_hex_file_offset,??__bootloader_verify_file
  6649  000C74  C07F  F0C4         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6650  000C78  C080  F0C5         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6651  000C7C  C081  F0C6         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6652  000C80  1FC3               	comf	??__bootloader_verify_file& (0+255),f,b
  6653  000C82  1FC4               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6654  000C84  1FC5               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6655  000C86  1FC6               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6656  000C88  2BC3               	incf	??__bootloader_verify_file& (0+255),f,b
  6657  000C8A  0E00               	movlw	0
  6658  000C8C  23C4               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6659  000C8E  23C5               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6660  000C90  23C6               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6661  000C92  517A               	movf	_hex_file_size& (0+255),w,b
  6662  000C94  25C3               	addwf	??__bootloader_verify_file& (0+255),w,b
  6663  000C96  6FC7               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6664  000C98  517B               	movf	(_hex_file_size+1)& (0+255),w,b
  6665  000C9A  21C4               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6666  000C9C  6FC8               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6667  000C9E  517C               	movf	(_hex_file_size+2)& (0+255),w,b
  6668  000CA0  21C5               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6669  000CA2  6FC9               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6670  000CA4  517D               	movf	(_hex_file_size+3)& (0+255),w,b
  6671  000CA6  21C6               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6672  000CA8  6FCA               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6673  000CAA  51CA               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6674  000CAC  11C9               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6675  000CAE  11C8               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6676  000CB0  E104               	bnz	u11910
  6677  000CB2  0E32               	movlw	50
  6678  000CB4  5DC7               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6679  000CB6  A0D8               	btfss	status,0,c
  6680  000CB8  D01F               	goto	l2489
  6681  000CBA                     u11910:
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;bootloader.c: 208: {;bootloader.c: 210: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6685  000CBA  C07E  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6686  000CBE  C07F  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6687  000CC2  C080  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6688  000CC6  C081  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6689  000CCA  0E32               	movlw	50
  6690  000CCC  6E46               	movwf	fat_read_from_file_fast@length,c
  6691  000CCE  0E00               	movlw	0
  6692  000CD0  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6693  000CD2  0E00               	movlw	0
  6694  000CD4  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6695  000CD6  0E00               	movlw	0
  6696  000CD8  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6697  000CDA  0E80               	movlw	low _file_buffer
  6698  000CDC  6E4A               	movwf	fat_read_from_file_fast@data,c
  6699  000CDE  0E02               	movlw	high _file_buffer
  6700  000CE0  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6701  000CE2  0EAF               	movlw	low _fast_read_cluster
  6702  000CE4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6703  000CE6  0E00               	movlw	high _fast_read_cluster
  6704  000CE8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6705  000CEA  0EAD               	movlw	low _fast_read_cluster_number
  6706  000CEC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6707  000CEE  0E00               	movlw	high _fast_read_cluster_number
  6708  000CF0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6709  000CF2  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6710                           
  6711                           ;bootloader.c: 211: }
  6712  000CF6  D034               	goto	l2490
  6713  000CF8                     l2489:
  6714                           
  6715                           ;bootloader.c: 212: else;bootloader.c: 213: {;bootloader.c: 215: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6716  000CF8  C07E  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6717  000CFC  C07F  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6718  000D00  C080  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6719  000D04  C081  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6720  000D08  C07E  F0C3         	movff	_hex_file_offset,??__bootloader_verify_file
  6721  000D0C  C07F  F0C4         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6722  000D10  C080  F0C5         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6723  000D14  C081  F0C6         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6724  000D18  0100               	movlb	0	; () banked
  6725  000D1A  1FC3               	comf	??__bootloader_verify_file& (0+255),f,b
  6726  000D1C  1FC4               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6727  000D1E  1FC5               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6728  000D20  1FC6               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6729  000D22  2BC3               	incf	??__bootloader_verify_file& (0+255),f,b
  6730  000D24  0E00               	movlw	0
  6731  000D26  23C4               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6732  000D28  23C5               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6733  000D2A  23C6               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6734  000D2C  517A               	movf	_hex_file_size& (0+255),w,b
  6735  000D2E  25C3               	addwf	??__bootloader_verify_file& (0+255),w,b
  6736  000D30  6E46               	movwf	fat_read_from_file_fast@length,c
  6737  000D32  517B               	movf	(_hex_file_size+1)& (0+255),w,b
  6738  000D34  21C4               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6739  000D36  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6740  000D38  517C               	movf	(_hex_file_size+2)& (0+255),w,b
  6741  000D3A  21C5               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6742  000D3C  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6743  000D3E  517D               	movf	(_hex_file_size+3)& (0+255),w,b
  6744  000D40  21C6               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6745  000D42  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6746  000D44  0E80               	movlw	low _file_buffer
  6747  000D46  6E4A               	movwf	fat_read_from_file_fast@data,c
  6748  000D48  0E02               	movlw	high _file_buffer
  6749  000D4A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6750  000D4C  0EAF               	movlw	low _fast_read_cluster
  6751  000D4E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6752  000D50  0E00               	movlw	high _fast_read_cluster
  6753  000D52  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6754  000D54  0EAD               	movlw	low _fast_read_cluster_number
  6755  000D56  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6756  000D58  0E00               	movlw	high _fast_read_cluster_number
  6757  000D5A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6758  000D5C  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  6759  000D60                     l2490:
  6760                           
  6761                           ;bootloader.c: 216: };bootloader.c: 219: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  6762  000D60  0E80               	movlw	low _file_buffer
  6763  000D62  6E0C               	movwf	parseHexFileEntry@data,c
  6764  000D64  0E02               	movlw	high _file_buffer
  6765  000D66  6E0D               	movwf	parseHexFileEntry@data+1,c
  6766  000D68  0E00               	movlw	0
  6767  000D6A  6E0E               	movwf	parseHexFileEntry@offset,c
  6768  000D6C  0E00               	movlw	0
  6769  000D6E  6E0F               	movwf	parseHexFileEntry@offset+1,c
  6770  000D70  0E00               	movlw	0
  6771  000D72  6E10               	movwf	parseHexFileEntry@offset+2,c
  6772  000D74  0E00               	movlw	0
  6773  000D76  6E11               	movwf	parseHexFileEntry@offset+3,c
  6774  000D78  0ECB               	movlw	low _hex_file_entry
  6775  000D7A  6E12               	movwf	parseHexFileEntry@hexEntry,c
  6776  000D7C  0E01               	movlw	high _hex_file_entry
  6777  000D7E  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  6778  000D80  EC10  F000         	call	_parseHexFileEntry	;wreg free
  6779  000D84  C00C  F0EC         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  6780  000D88  C00D  F0ED         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  6781  000D8C  C00E  F0EE         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  6782  000D90  C00F  F0EF         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  6783                           
  6784                           ;bootloader.c: 222: ++hex_file_entries;
  6785  000D94  0101               	movlb	1	; () banked
  6786  000D96  4B69               	infsnz	_hex_file_entries& (0+255),f,b
  6787  000D98  2B6A               	incf	(_hex_file_entries+1)& (0+255),f,b
  6788                           
  6789                           ; BSR set to: 1
  6790                           ;bootloader.c: 225: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  6791  000D9A  0E04               	movlw	4
  6792  000D9C  19CF               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  6793  000D9E  A4D8               	btfss	status,2,c
  6794  000DA0  D01C               	goto	l2491
  6795                           
  6796                           ; BSR set to: 1
  6797                           ;bootloader.c: 226: {;bootloader.c: 227: extended_linear_address = hex_file_entry.data[0
      +                          ];
  6798  000DA2  51D0               	movf	(_hex_file_entry+5)& (0+255),w,b
  6799  000DA4  6F3F               	movwf	_extended_linear_address& (0+255),b
  6800  000DA6  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  6801  000DA8  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  6802  000DAA  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  6803                           
  6804                           ; BSR set to: 1
  6805                           ;bootloader.c: 228: extended_linear_address <<= 8;
  6806  000DAC  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6807  000DB0  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6808  000DB4  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6809  000DB8  6B3F               	clrf	_extended_linear_address& (0+255),b
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;bootloader.c: 229: extended_linear_address |= hex_file_entry.data[1];
  6813  000DBA  51D1               	movf	(_hex_file_entry+6)& (0+255),w,b
  6814  000DBC  133F               	iorwf	_extended_linear_address& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 1
  6817                           ;bootloader.c: 230: extended_linear_address <<= 8;
  6818  000DBE  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6819  000DC2  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6820  000DC6  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6821  000DCA  6B3F               	clrf	_extended_linear_address& (0+255),b
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;bootloader.c: 231: extended_linear_address <<= 8;
  6825  000DCC  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  6826  000DD0  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  6827  000DD4  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  6828  000DD8  6B3F               	clrf	_extended_linear_address& (0+255),b
  6829  000DDA                     l2491:
  6830                           
  6831                           ; BSR set to: 1
  6832                           ;bootloader.c: 232: };bootloader.c: 235: if(hex_file_entry.recordType==RecordTypeData)
  6833                           
  6834                           ; BSR set to: 1
  6835  000DDA  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
  6836  000DDC  A4D8               	btfss	status,2,c
  6837  000DDE  D05D               	goto	l2495
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;bootloader.c: 236: {;bootloader.c: 238: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  6841  000DE0  51CD               	movf	(_hex_file_entry+2)& (0+255),w,b
  6842  000DE2  253F               	addwf	_extended_linear_address& (0+255),w,b
  6843  000DE4  0100               	movlb	0	; () banked
  6844  000DE6  6FF0               	movwf	__bootloader_verify_file@address32& (0+255),b
  6845  000DE8  0101               	movlb	1	; () banked
  6846  000DEA  51CE               	movf	(_hex_file_entry+3)& (0+255),w,b
  6847  000DEC  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  6848  000DEE  0100               	movlb	0	; () banked
  6849  000DF0  6FF1               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  6850  000DF2  0E00               	movlw	0
  6851  000DF4  0101               	movlb	1	; () banked
  6852  000DF6  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  6853  000DF8  0100               	movlb	0	; () banked
  6854  000DFA  6FF2               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  6855  000DFC  0E00               	movlw	0
  6856  000DFE  0101               	movlb	1	; () banked
  6857  000E00  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  6858  000E02  0100               	movlb	0	; () banked
  6859  000E04  6FF3               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  6860                           
  6861                           ;bootloader.c: 241: if(address32<file_minimum_address)
  6862  000E06  0101               	movlb	1	; () banked
  6863  000E08  5147               	movf	_file_minimum_address& (0+255),w,b
  6864  000E0A  0100               	movlb	0	; () banked
  6865  000E0C  5DF0               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  6866  000E0E  0101               	movlb	1	; () banked
  6867  000E10  5148               	movf	(_file_minimum_address+1)& (0+255),w,b
  6868  000E12  0100               	movlb	0	; () banked
  6869  000E14  59F1               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6870  000E16  0101               	movlb	1	; () banked
  6871  000E18  5149               	movf	(_file_minimum_address+2)& (0+255),w,b
  6872  000E1A  0100               	movlb	0	; () banked
  6873  000E1C  59F2               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6874  000E1E  0101               	movlb	1	; () banked
  6875  000E20  514A               	movf	(_file_minimum_address+3)& (0+255),w,b
  6876  000E22  0100               	movlb	0	; () banked
  6877  000E24  59F3               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6878  000E26  B0D8               	btfsc	status,0,c
  6879  000E28  D008               	goto	l2493
  6880                           
  6881                           ; BSR set to: 0
  6882                           ;bootloader.c: 242: {;bootloader.c: 243: file_minimum_address = address32;
  6883  000E2A  C0F0  F147         	movff	__bootloader_verify_file@address32,_file_minimum_address
  6884  000E2E  C0F1  F148         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  6885  000E32  C0F2  F149         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  6886  000E36  C0F3  F14A         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  6887  000E3A                     l2493:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;bootloader.c: 244: };bootloader.c: 245: if(address32>file_maximum_address)
  6891                           
  6892                           ; BSR set to: 0
  6893  000E3A  51F0               	movf	__bootloader_verify_file@address32& (0+255),w,b
  6894  000E3C  0101               	movlb	1	; () banked
  6895  000E3E  5D43               	subwf	_file_maximum_address& (0+255),w,b
  6896  000E40  0100               	movlb	0	; () banked
  6897  000E42  51F1               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  6898  000E44  0101               	movlb	1	; () banked
  6899  000E46  5944               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  6900  000E48  0100               	movlb	0	; () banked
  6901  000E4A  51F2               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  6902  000E4C  0101               	movlb	1	; () banked
  6903  000E4E  5945               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  6904  000E50  0100               	movlb	0	; () banked
  6905  000E52  51F3               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  6906  000E54  0101               	movlb	1	; () banked
  6907  000E56  5946               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  6908  000E58  B0D8               	btfsc	status,0,c
  6909  000E5A  D008               	goto	l2494
  6910                           
  6911                           ; BSR set to: 1
  6912                           ;bootloader.c: 246: {;bootloader.c: 247: file_maximum_address = address32;
  6913  000E5C  C0F0  F143         	movff	__bootloader_verify_file@address32,_file_maximum_address
  6914  000E60  C0F1  F144         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  6915  000E64  C0F2  F145         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  6916  000E68  C0F3  F146         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  6917  000E6C                     l2494:
  6918                           
  6919                           ; BSR set to: 1
  6920                           ;bootloader.c: 248: };bootloader.c: 251: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  6921                           
  6922                           ; BSR set to: 1
  6923  000E6C  C0F0  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  6924  000E70  C0F1  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  6925  000E74  C0F2  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  6926  000E78  C0F3  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  6927  000E7C  C1CB  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  6928  000E80  EC0F  F025         	call	__bootloader_check_address	;wreg free
  6929  000E84  0AFF               	xorlw	255
  6930  000E86  A4D8               	btfss	status,2,c
  6931  000E88  D008               	goto	l2495
  6932                           
  6933                           ;bootloader.c: 252: {;bootloader.c: 254: last_error = ShortRecordErrorAddressRange;
  6934  000E8A  0E0B               	movlw	11
  6935  000E8C  0100               	movlb	0	; () banked
  6936  000E8E  6F92               	movwf	_last_error& (0+255),b
  6937                           
  6938                           ;bootloader.c: 256: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  6939  000E90  0E50               	movlw	80
  6940  000E92  6F66               	movwf	(_os+6)& (0+255),b
  6941                           
  6942                           ;bootloader.c: 257: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  6943  000E94  0E50               	movlw	80
  6944  000E96  6F67               	movwf	(_os+7)& (0+255),b
  6945                           
  6946                           ;bootloader.c: 258: break;
  6947  000E98  0012               	return	
  6948  000E9A                     l2495:
  6949                           
  6950                           ;bootloader.c: 259: };bootloader.c: 260: };bootloader.c: 262: if(return_value==0)
  6951                           
  6952                           ; BSR set to: 0
  6953                           
  6954                           ; BSR set to: 0
  6955  000E9A  0100               	movlb	0	; () banked
  6956  000E9C  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  6957  000E9E  11ED               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  6958  000EA0  11EE               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  6959  000EA2  11EF               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  6960  000EA4  A4D8               	btfss	status,2,c
  6961  000EA6  D027               	goto	l2496
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;bootloader.c: 263: {;bootloader.c: 266: total_hex_file_entries = hex_file_entries;
  6965  000EA8  C169  F167         	movff	_hex_file_entries,_total_hex_file_entries
  6966  000EAC  C16A  F168         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;bootloader.c: 267: hex_file_entries = 0;
  6970  000EB0  0E00               	movlw	0
  6971  000EB2  0101               	movlb	1	; () banked
  6972  000EB4  6F6A               	movwf	(_hex_file_entries+1)& (0+255),b
  6973  000EB6  0E00               	movlw	0
  6974  000EB8  6F69               	movwf	_hex_file_entries& (0+255),b
  6975                           
  6976                           ;bootloader.c: 268: hex_file_offset = 0;
  6977  000EBA  0E00               	movlw	0
  6978  000EBC  0100               	movlb	0	; () banked
  6979  000EBE  6F7E               	movwf	_hex_file_offset& (0+255),b
  6980  000EC0  0E00               	movlw	0
  6981  000EC2  6F7F               	movwf	(_hex_file_offset+1)& (0+255),b
  6982  000EC4  0E00               	movlw	0
  6983  000EC6  6F80               	movwf	(_hex_file_offset+2)& (0+255),b
  6984  000EC8  0E00               	movlw	0
  6985  000ECA  6F81               	movwf	(_hex_file_offset+3)& (0+255),b
  6986                           
  6987                           ;bootloader.c: 269: extended_linear_address = 0;
  6988  000ECC  0E00               	movlw	0
  6989  000ECE  0101               	movlb	1	; () banked
  6990  000ED0  6F3F               	movwf	_extended_linear_address& (0+255),b
  6991  000ED2  0E00               	movlw	0
  6992  000ED4  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
  6993  000ED6  0E00               	movlw	0
  6994  000ED8  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
  6995  000EDA  0E00               	movlw	0
  6996  000EDC  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
  6997                           
  6998                           ;bootloader.c: 270: flash_pages_written = 0;
  6999  000EDE  0E00               	movlw	0
  7000  000EE0  6F66               	movwf	(_flash_pages_written+1)& (0+255),b
  7001  000EE2  0E00               	movlw	0
  7002  000EE4  6F65               	movwf	_flash_pages_written& (0+255),b
  7003                           
  7004                           ;bootloader.c: 271: start_from_byte_next = 0;
  7005  000EE6  0E00               	movlw	0
  7006  000EE8  0100               	movlb	0	; () banked
  7007  000EEA  6F91               	movwf	_start_from_byte_next& (0+255),b
  7008                           
  7009                           ;bootloader.c: 273: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7010  000EEC  0E40               	movlw	64
  7011  000EEE  6F66               	movwf	(_os+6)& (0+255),b
  7012                           
  7013                           ;bootloader.c: 274: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7014  000EF0  0E40               	movlw	64
  7015  000EF2  6F67               	movwf	(_os+7)& (0+255),b
  7016                           
  7017                           ;bootloader.c: 275: break;
  7018  000EF4  0012               	return	
  7019  000EF6                     l2496:
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;bootloader.c: 277: else if(return_value>0xFFFFFFF0)
  7023                           
  7024                           ; BSR set to: 0
  7025  000EF6  0EF1               	movlw	241
  7026  000EF8  5DEC               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7027  000EFA  0EFF               	movlw	255
  7028  000EFC  59ED               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7029  000EFE  0EFF               	movlw	255
  7030  000F00  59EE               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7031  000F02  0EFF               	movlw	255
  7032  000F04  59EF               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7033  000F06  A0D8               	btfss	status,0,c
  7034  000F08  D007               	goto	l2498
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;bootloader.c: 278: {;bootloader.c: 280: last_error = return_value & 0xF;
  7038  000F0A  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7039  000F0C  0B0F               	andlw	15
  7040  000F0E  6F92               	movwf	_last_error& (0+255),b
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;bootloader.c: 282: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7044  000F10  0E50               	movlw	80
  7045  000F12  6F66               	movwf	(_os+6)& (0+255),b
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;bootloader.c: 283: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7049  000F14  0E50               	movlw	80
  7050  000F16  D7ED               	goto	L1
  7051  000F18                     l2498:
  7052                           
  7053                           ; BSR set to: 0
  7054                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 289: hex_file_offset += retu
      +                          rn_value;
  7055                           
  7056                           ; BSR set to: 0
  7057  000F18  51EC               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7058  000F1A  277E               	addwf	_hex_file_offset& (0+255),f,b
  7059  000F1C  51ED               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7060  000F1E  237F               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7061  000F20  51EE               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7062  000F22  2380               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7063  000F24  51EF               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7064  000F26  2381               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7065                           
  7066                           ; BSR set to: 0
  7067                           
  7068                           ; BSR set to: 0
  7069                           
  7070                           ; BSR set to: 0
  7071  000F28  2BEB               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7072  000F2A  D69E               	goto	l14063
  7073  000F2C                     __end_of__bootloader_verify_file:
  7074                           	opt stack 0
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           intcon3	equ	0xFF0
  7083                           postinc0	equ	0xFEE
  7084                           wreg	equ	0xFE8
  7085                           postdec1	equ	0xFE5
  7086                           plusw1	equ	0xFE3
  7087                           fsr1h	equ	0xFE2
  7088                           fsr1l	equ	0xFE1
  7089                           indf2	equ	0xFDF
  7090                           postinc2	equ	0xFDE
  7091                           plusw2	equ	0xFDB
  7092                           fsr2h	equ	0xFDA
  7093                           fsr2l	equ	0xFD9
  7094                           status	equ	0xFD8
  7095                           
  7096 ;; *************** function __bootloader_program *****************
  7097 ;; Defined at:
  7098 ;;		line 294 in file "bootloader.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;  root           32   28[BANK0 ] struct .
  7103 ;;  address32       4   64[BANK0 ] unsigned long 
  7104 ;;  return_value    4   60[BANK0 ] unsigned long 
  7105 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7106 ;;  cntr            2   69[BANK0 ] unsigned int 
  7107 ;;  address_with    2   26[BANK0 ] unsigned int 
  7108 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7109 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7110 ;;		 -> pageBuffer(1024), 
  7111 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;Total ram usage:       59 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; Hardware stack levels required when called:    8
  7128 ;; This function calls:
  7129 ;;		__bootloader_check_address
  7130 ;;		_fat_get_file_information
  7131 ;;		_fat_read_from_file_fast
  7132 ;;		_internalFlash_addressWithinPage
  7133 ;;		_internalFlash_erasePage
  7134 ;;		_internalFlash_getBuffer
  7135 ;;		_internalFlash_pageFromAddress
  7136 ;;		_internalFlash_readPage
  7137 ;;		_internalFlash_writePage
  7138 ;;		_parseHexFileEntry
  7139 ;; This function is called by:
  7140 ;;		_bootloader_run
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text25
  7145  00085A                     __ptext25:
  7146                           	opt stack 0
  7147  00085A                     __bootloader_program:
  7148                           	opt stack 21
  7149                           
  7150                           ;bootloader.c: 296: uint16_t cntr;;bootloader.c: 297: uint8_t* buffer;;bootloader.c: 298
      +                          : uint16_t entry_page;;bootloader.c: 299: uint16_t page_to_write = 0;
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;incstack = 0
  7154  00085A  0E00               	movlw	0
  7155  00085C  0100               	movlb	0	; () banked
  7156  00085E  6FFD               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7157  000860  0E00               	movlw	0
  7158  000862  6FFC               	movwf	__bootloader_program@page_to_write& (0+255),b
  7159                           
  7160                           ;bootloader.c: 300: uint8_t start_from_byte;;bootloader.c: 301: uint32_t address32;;boot
      +                          loader.c: 302: uint32_t return_value = 0;
  7161  000864  0E00               	movlw	0
  7162  000866  6FF1               	movwf	__bootloader_program@return_value& (0+255),b
  7163  000868  0E00               	movlw	0
  7164  00086A  6FF2               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7165  00086C  0E00               	movlw	0
  7166  00086E  6FF3               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7167  000870  0E00               	movlw	0
  7168  000872  6FF4               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;bootloader.c: 303: uint16_t address_within_page;;bootloader.c: 304: rootEntry_t root;;b
      +                          ootloader.c: 306: if(hex_file_offset==0)
  7172  000874  517E               	movf	_hex_file_offset& (0+255),w,b
  7173  000876  117F               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7174  000878  1180               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7175  00087A  1181               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7176  00087C  A4D8               	btfss	status,2,c
  7177  00087E  D010               	goto	l2503
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;bootloader.c: 307: {;bootloader.c: 309: fat_get_file_information(file_number, &root);
  7181  000880  0ED1               	movlw	low __bootloader_program@root
  7182  000882  6E30               	movwf	fat_get_file_information@data,c
  7183  000884  0E00               	movlw	high __bootloader_program@root
  7184  000886  6E31               	movwf	fat_get_file_information@data+1,c
  7185  000888  51FE               	movf	_file_number& (0+255),w,b
  7186  00088A  ECC0  F02F         	call	_fat_get_file_information
  7187                           
  7188                           ;bootloader.c: 310: fast_read_cluster = root.firstCluster;
  7189  00088E  C0EB  F0AF         	movff	__bootloader_program@root+26,_fast_read_cluster
  7190  000892  C0EC  F0B0         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7191                           
  7192                           ;bootloader.c: 311: fast_read_cluster_number = 0;
  7193  000896  0E00               	movlw	0
  7194  000898  0100               	movlb	0	; () banked
  7195  00089A  6FAE               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7196  00089C  0E00               	movlw	0
  7197  00089E  6FAD               	movwf	_fast_read_cluster_number& (0+255),b
  7198  0008A0                     l2503:
  7199                           
  7200                           ;bootloader.c: 316: {;bootloader.c: 321: if((hex_file_size-hex_file_offset)>=50)
  7201                           
  7202                           ; BSR set to: 0
  7203                           
  7204                           ;bootloader.c: 312: };bootloader.c: 315: while(1)
  7205                           
  7206                           ; BSR set to: 0
  7207  0008A0  C07E  F0C3         	movff	_hex_file_offset,??__bootloader_program
  7208  0008A4  C07F  F0C4         	movff	_hex_file_offset+1,??__bootloader_program+1
  7209  0008A8  C080  F0C5         	movff	_hex_file_offset+2,??__bootloader_program+2
  7210  0008AC  C081  F0C6         	movff	_hex_file_offset+3,??__bootloader_program+3
  7211  0008B0  0100               	movlb	0	; () banked
  7212  0008B2  1FC3               	comf	??__bootloader_program& (0+255),f,b
  7213  0008B4  1FC4               	comf	(??__bootloader_program+1)& (0+255),f,b
  7214  0008B6  1FC5               	comf	(??__bootloader_program+2)& (0+255),f,b
  7215  0008B8  1FC6               	comf	(??__bootloader_program+3)& (0+255),f,b
  7216  0008BA  2BC3               	incf	??__bootloader_program& (0+255),f,b
  7217  0008BC  0E00               	movlw	0
  7218  0008BE  23C4               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7219  0008C0  23C5               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7220  0008C2  23C6               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7221  0008C4  517A               	movf	_hex_file_size& (0+255),w,b
  7222  0008C6  25C3               	addwf	??__bootloader_program& (0+255),w,b
  7223  0008C8  6FC7               	movwf	(??__bootloader_program+4)& (0+255),b
  7224  0008CA  517B               	movf	(_hex_file_size+1)& (0+255),w,b
  7225  0008CC  21C4               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7226  0008CE  6FC8               	movwf	(??__bootloader_program+5)& (0+255),b
  7227  0008D0  517C               	movf	(_hex_file_size+2)& (0+255),w,b
  7228  0008D2  21C5               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7229  0008D4  6FC9               	movwf	(??__bootloader_program+6)& (0+255),b
  7230  0008D6  517D               	movf	(_hex_file_size+3)& (0+255),w,b
  7231  0008D8  21C6               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7232  0008DA  6FCA               	movwf	(??__bootloader_program+7)& (0+255),b
  7233  0008DC  51CA               	movf	(??__bootloader_program+7)& (0+255),w,b
  7234  0008DE  11C9               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7235  0008E0  11C8               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7236  0008E2  E104               	bnz	u12010
  7237  0008E4  0E32               	movlw	50
  7238  0008E6  5DC7               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7239  0008E8  A0D8               	btfss	status,0,c
  7240  0008EA  D01F               	goto	l2505
  7241  0008EC                     u12010:
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;bootloader.c: 322: {;bootloader.c: 324: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7245  0008EC  C07E  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7246  0008F0  C07F  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7247  0008F4  C080  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7248  0008F8  C081  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7249  0008FC  0E32               	movlw	50
  7250  0008FE  6E46               	movwf	fat_read_from_file_fast@length,c
  7251  000900  0E00               	movlw	0
  7252  000902  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7253  000904  0E00               	movlw	0
  7254  000906  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7255  000908  0E00               	movlw	0
  7256  00090A  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7257  00090C  0E80               	movlw	low _file_buffer
  7258  00090E  6E4A               	movwf	fat_read_from_file_fast@data,c
  7259  000910  0E02               	movlw	high _file_buffer
  7260  000912  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7261  000914  0EAF               	movlw	low _fast_read_cluster
  7262  000916  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7263  000918  0E00               	movlw	high _fast_read_cluster
  7264  00091A  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7265  00091C  0EAD               	movlw	low _fast_read_cluster_number
  7266  00091E  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7267  000920  0E00               	movlw	high _fast_read_cluster_number
  7268  000922  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7269  000924  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  7270                           
  7271                           ;bootloader.c: 325: }
  7272  000928  D034               	goto	l2506
  7273  00092A                     l2505:
  7274                           
  7275                           ;bootloader.c: 326: else;bootloader.c: 327: {;bootloader.c: 329: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7276  00092A  C07E  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7277  00092E  C07F  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7278  000932  C080  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7279  000936  C081  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7280  00093A  C07E  F0C3         	movff	_hex_file_offset,??__bootloader_program
  7281  00093E  C07F  F0C4         	movff	_hex_file_offset+1,??__bootloader_program+1
  7282  000942  C080  F0C5         	movff	_hex_file_offset+2,??__bootloader_program+2
  7283  000946  C081  F0C6         	movff	_hex_file_offset+3,??__bootloader_program+3
  7284  00094A  0100               	movlb	0	; () banked
  7285  00094C  1FC3               	comf	??__bootloader_program& (0+255),f,b
  7286  00094E  1FC4               	comf	(??__bootloader_program+1)& (0+255),f,b
  7287  000950  1FC5               	comf	(??__bootloader_program+2)& (0+255),f,b
  7288  000952  1FC6               	comf	(??__bootloader_program+3)& (0+255),f,b
  7289  000954  2BC3               	incf	??__bootloader_program& (0+255),f,b
  7290  000956  0E00               	movlw	0
  7291  000958  23C4               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7292  00095A  23C5               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7293  00095C  23C6               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7294  00095E  517A               	movf	_hex_file_size& (0+255),w,b
  7295  000960  25C3               	addwf	??__bootloader_program& (0+255),w,b
  7296  000962  6E46               	movwf	fat_read_from_file_fast@length,c
  7297  000964  517B               	movf	(_hex_file_size+1)& (0+255),w,b
  7298  000966  21C4               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7299  000968  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7300  00096A  517C               	movf	(_hex_file_size+2)& (0+255),w,b
  7301  00096C  21C5               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7302  00096E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7303  000970  517D               	movf	(_hex_file_size+3)& (0+255),w,b
  7304  000972  21C6               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7305  000974  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7306  000976  0E80               	movlw	low _file_buffer
  7307  000978  6E4A               	movwf	fat_read_from_file_fast@data,c
  7308  00097A  0E02               	movlw	high _file_buffer
  7309  00097C  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7310  00097E  0EAF               	movlw	low _fast_read_cluster
  7311  000980  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7312  000982  0E00               	movlw	high _fast_read_cluster
  7313  000984  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7314  000986  0EAD               	movlw	low _fast_read_cluster_number
  7315  000988  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7316  00098A  0E00               	movlw	high _fast_read_cluster_number
  7317  00098C  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7318  00098E  EC0B  F00E         	call	_fat_read_from_file_fast	;wreg free
  7319  000992                     l2506:
  7320                           
  7321                           ;bootloader.c: 330: };bootloader.c: 333: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7322  000992  0E80               	movlw	low _file_buffer
  7323  000994  6E0C               	movwf	parseHexFileEntry@data,c
  7324  000996  0E02               	movlw	high _file_buffer
  7325  000998  6E0D               	movwf	parseHexFileEntry@data+1,c
  7326  00099A  0E00               	movlw	0
  7327  00099C  6E0E               	movwf	parseHexFileEntry@offset,c
  7328  00099E  0E00               	movlw	0
  7329  0009A0  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7330  0009A2  0E00               	movlw	0
  7331  0009A4  6E10               	movwf	parseHexFileEntry@offset+2,c
  7332  0009A6  0E00               	movlw	0
  7333  0009A8  6E11               	movwf	parseHexFileEntry@offset+3,c
  7334  0009AA  0ECB               	movlw	low _hex_file_entry
  7335  0009AC  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7336  0009AE  0E01               	movlw	high _hex_file_entry
  7337  0009B0  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7338  0009B2  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7339  0009B6  C00C  F0F1         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7340  0009BA  C00D  F0F2         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7341  0009BE  C00E  F0F3         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7342  0009C2  C00F  F0F4         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7343                           
  7344                           ;bootloader.c: 336: ++hex_file_entries;
  7345  0009C6  0101               	movlb	1	; () banked
  7346  0009C8  4B69               	infsnz	_hex_file_entries& (0+255),f,b
  7347  0009CA  2B6A               	incf	(_hex_file_entries+1)& (0+255),f,b
  7348                           
  7349                           ; BSR set to: 1
  7350                           ;bootloader.c: 339: if(return_value>RecordErrorNoError)
  7351  0009CC  0EF1               	movlw	241
  7352  0009CE  0100               	movlb	0	; () banked
  7353  0009D0  5DF1               	subwf	__bootloader_program@return_value& (0+255),w,b
  7354  0009D2  0EFF               	movlw	255
  7355  0009D4  59F2               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7356  0009D6  0EFF               	movlw	255
  7357  0009D8  59F3               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7358  0009DA  0EFF               	movlw	255
  7359  0009DC  59F4               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7360  0009DE  A0D8               	btfss	status,0,c
  7361  0009E0  D005               	goto	l2507
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;bootloader.c: 340: {;bootloader.c: 342: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7365  0009E2  0E50               	movlw	80
  7366  0009E4  6F66               	movwf	(_os+6)& (0+255),b
  7367                           
  7368                           ;bootloader.c: 343: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7369  0009E6  0E50               	movlw	80
  7370  0009E8  6F67               	movwf	(_os+7)& (0+255),b
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;bootloader.c: 344: return;
  7374  0009EA  0012               	return	
  7375  0009EC                     l2507:
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;bootloader.c: 346: else;bootloader.c: 347: {;bootloader.c: 349: hex_file_offset += retu
      +                          rn_value;
  7379                           
  7380                           ; BSR set to: 0
  7381  0009EC  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
  7382  0009EE  277E               	addwf	_hex_file_offset& (0+255),f,b
  7383  0009F0  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7384  0009F2  237F               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7385  0009F4  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7386  0009F6  2380               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7387  0009F8  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7388  0009FA  2381               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;bootloader.c: 350: };bootloader.c: 352: switch(hex_file_entry.recordType)
  7392  0009FC  D0FC               	goto	l2510
  7393  0009FE                     
  7394                           ;bootloader.c: 358: extended_linear_address = hex_file_entry.data[0];
  7395                           
  7396                           ; BSR set to: 0
  7397  0009FE  0101               	movlb	1	; () banked
  7398  000A00  51D0               	movf	(_hex_file_entry+5)& (0+255),w,b
  7399  000A02  6F3F               	movwf	_extended_linear_address& (0+255),b
  7400  000A04  6B40               	clrf	(_extended_linear_address+1)& (0+255),b
  7401  000A06  6B41               	clrf	(_extended_linear_address+2)& (0+255),b
  7402  000A08  6B42               	clrf	(_extended_linear_address+3)& (0+255),b
  7403                           
  7404                           ; BSR set to: 1
  7405                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7406  000A0A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7407  000A0E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7408  000A12  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7409  000A16  6B3F               	clrf	_extended_linear_address& (0+255),b
  7410                           
  7411                           ; BSR set to: 1
  7412                           ;bootloader.c: 360: extended_linear_address |= hex_file_entry.data[1];
  7413  000A18  51D1               	movf	(_hex_file_entry+6)& (0+255),w,b
  7414  000A1A  133F               	iorwf	_extended_linear_address& (0+255),f,b
  7415                           
  7416                           ; BSR set to: 1
  7417                           ;bootloader.c: 361: extended_linear_address <<= 8;
  7418  000A1C  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7419  000A20  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7420  000A24  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7421  000A28  6B3F               	clrf	_extended_linear_address& (0+255),b
  7422                           
  7423                           ; BSR set to: 1
  7424                           ;bootloader.c: 362: extended_linear_address <<= 8;
  7425  000A2A  C141  F142         	movff	_extended_linear_address+2,_extended_linear_address+3
  7426  000A2E  C140  F141         	movff	_extended_linear_address+1,_extended_linear_address+2
  7427  000A32  C13F  F140         	movff	_extended_linear_address,_extended_linear_address+1
  7428  000A36  6B3F               	clrf	_extended_linear_address& (0+255),b
  7429                           
  7430                           ; BSR set to: 1
  7431                           ;bootloader.c: 364: break;
  7432                           
  7433                           ;bootloader.c: 363: continue;
  7434  000A38  D733               	goto	l2503
  7435  000A3A                     l2514:
  7436                           
  7437                           ; BSR set to: 1
  7438                           ;bootloader.c: 369: start_from_byte = start_from_byte_next;
  7439  000A3A  C091  F0F9         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7440                           
  7441                           ; BSR set to: 1
  7442                           ;bootloader.c: 371: start_from_byte_next = 0;
  7443  000A3E  0E00               	movlw	0
  7444  000A40  0100               	movlb	0	; () banked
  7445  000A42  6F91               	movwf	_start_from_byte_next& (0+255),b
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;bootloader.c: 374: address32 = extended_linear_address + hex_file_entry.address;
  7449  000A44  0101               	movlb	1	; () banked
  7450  000A46  51CD               	movf	(_hex_file_entry+2)& (0+255),w,b
  7451  000A48  253F               	addwf	_extended_linear_address& (0+255),w,b
  7452  000A4A  0100               	movlb	0	; () banked
  7453  000A4C  6FF5               	movwf	__bootloader_program@address32& (0+255),b
  7454  000A4E  0101               	movlb	1	; () banked
  7455  000A50  51CE               	movf	(_hex_file_entry+3)& (0+255),w,b
  7456  000A52  2140               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7457  000A54  0100               	movlb	0	; () banked
  7458  000A56  6FF6               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7459  000A58  0E00               	movlw	0
  7460  000A5A  0101               	movlb	1	; () banked
  7461  000A5C  2141               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7462  000A5E  0100               	movlb	0	; () banked
  7463  000A60  6FF7               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7464  000A62  0E00               	movlw	0
  7465  000A64  0101               	movlb	1	; () banked
  7466  000A66  2142               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7467  000A68  0100               	movlb	0	; () banked
  7468  000A6A  6FF8               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;bootloader.c: 375: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7472  000A6C  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7473  000A6E  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
  7474  000A70  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7475  000A72  0E00               	movlw	0
  7476  000A74  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7477  000A76  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7478  000A78  0E00               	movlw	0
  7479  000A7A  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7480  000A7C  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7481  000A7E  0E00               	movlw	0
  7482  000A80  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7483  000A82  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7484  000A84  EC21  F039         	call	_internalFlash_pageFromAddress	;wreg free
  7485  000A88  C001  F0CD         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7486  000A8C  C002  F0CE         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7487                           
  7488                           ;bootloader.c: 378: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7489  000A90  0100               	movlb	0	; () banked
  7490  000A92  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7491  000A94  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
  7492  000A96  6E01               	movwf	__bootloader_check_address@address,c
  7493  000A98  0E00               	movlw	0
  7494  000A9A  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7495  000A9C  6E02               	movwf	__bootloader_check_address@address+1,c
  7496  000A9E  0E00               	movlw	0
  7497  000AA0  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7498  000AA2  6E03               	movwf	__bootloader_check_address@address+2,c
  7499  000AA4  0E00               	movlw	0
  7500  000AA6  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7501  000AA8  6E04               	movwf	__bootloader_check_address@address+3,c
  7502  000AAA  51F9               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7503  000AAC  0800               	sublw	0
  7504  000AAE  0101               	movlb	1	; () banked
  7505  000AB0  25CB               	addwf	_hex_file_entry& (0+255),w,b
  7506  000AB2  6E05               	movwf	__bootloader_check_address@dataLength,c
  7507  000AB4  EC0F  F025         	call	__bootloader_check_address	;wreg free
  7508  000AB8  0900               	iorlw	0
  7509  000ABA  A4D8               	btfss	status,2,c
  7510  000ABC  D6F1               	goto	l2503
  7511                           
  7512                           ;bootloader.c: 381: };bootloader.c: 383: if(page_to_write==0)
  7513                           
  7514                           ;bootloader.c: 379: {;bootloader.c: 380: break;
  7515  000ABE  0100               	movlb	0	; () banked
  7516  000AC0  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7517  000AC2  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7518  000AC4  A4D8               	btfss	status,2,c
  7519  000AC6  D010               	goto	l2516
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;bootloader.c: 384: {;bootloader.c: 388: page_to_write = entry_page;
  7523  000AC8  C0CD  F0FC         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7524  000ACC  C0CE  F0FD         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;bootloader.c: 389: internalFlash_readPage(page_to_write);
  7528  000AD0  C0FC  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7529  000AD4  C0FD  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7530  000AD8  ECFE  F035         	call	_internalFlash_readPage	;wreg free
  7531                           
  7532                           ;bootloader.c: 390: buffer = internalFlash_getBuffer();
  7533  000ADC  ECE2  F039         	call	_internalFlash_getBuffer	;wreg free
  7534  000AE0  C001  F0CB         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7535  000AE4  C002  F0CC         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7536  000AE8                     l2516:
  7537                           
  7538                           ;bootloader.c: 391: };bootloader.c: 393: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7539  000AE8  C0F9  F0FA         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7540  000AEC  0100               	movlb	0	; () banked
  7541  000AEE  6BFB               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7542  000AF0  D05D               	goto	l2517
  7543  000AF2                     
  7544                           ; BSR set to: 0
  7545                           ;bootloader.c: 394: {;bootloader.c: 397: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7546                           
  7547                           ; BSR set to: 0
  7548  000AF2  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
  7549  000AF4  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
  7550  000AF6  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7551  000AF8  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7552  000AFA  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7553  000AFC  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7554  000AFE  0E00               	movlw	0
  7555  000B00  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7556  000B02  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7557  000B04  0E00               	movlw	0
  7558  000B06  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7559  000B08  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7560  000B0A  EC21  F039         	call	_internalFlash_pageFromAddress	;wreg free
  7561  000B0E  0100               	movlb	0	; () banked
  7562  000B10  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7563  000B12  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7564  000B14  E12A               	bnz	l14195
  7565  000B16  51FD               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7566  000B18  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7567  000B1A  A4D8               	btfss	status,2,c
  7568  000B1C  D026               	goto	l2519
  7569                           
  7570                           ; BSR set to: 0
  7571                           ;bootloader.c: 398: {;bootloader.c: 399: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7572  000B1E  51FA               	movf	__bootloader_program@cntr& (0+255),w,b
  7573  000B20  25F5               	addwf	__bootloader_program@address32& (0+255),w,b
  7574  000B22  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7575  000B24  51FB               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7576  000B26  21F6               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7577  000B28  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7578  000B2A  0E00               	movlw	0
  7579  000B2C  21F7               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7580  000B2E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7581  000B30  0E00               	movlw	0
  7582  000B32  21F8               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7583  000B34  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7584  000B36  C0FC  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7585  000B3A  C0FD  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7586  000B3E  EC00  F032         	call	_internalFlash_addressWithinPage	;wreg free
  7587  000B42  C009  F0CF         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7588  000B46  C00A  F0D0         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7589                           
  7590                           ;bootloader.c: 400: buffer[address_within_page] = hex_file_entry.data[cntr];
  7591  000B4A  0ED0               	movlw	low (_hex_file_entry+5)
  7592  000B4C  0100               	movlb	0	; () banked
  7593  000B4E  25FA               	addwf	__bootloader_program@cntr& (0+255),w,b
  7594  000B50  6ED9               	movwf	fsr2l,c
  7595  000B52  0E01               	movlw	high (_hex_file_entry+5)
  7596  000B54  21FB               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7597  000B56  6EDA               	movwf	fsr2h,c
  7598  000B58  51CF               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7599  000B5A  25CB               	addwf	__bootloader_program@buffer& (0+255),w,b
  7600  000B5C  6EE1               	movwf	fsr1l,c
  7601  000B5E  51D0               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7602  000B60  21CC               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7603  000B62  6EE2               	movwf	fsr1h,c
  7604  000B64  CFDF FFE7          	movff	indf2,indf1
  7605                           
  7606                           ;bootloader.c: 401: }
  7607  000B68  D01E               	goto	l2520
  7608  000B6A                     l2519:
  7609  000B6A                     l14195:
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;bootloader.c: 402: else;bootloader.c: 403: {;bootloader.c: 405: hex_file_offset -= retu
      +                          rn_value;
  7613  000B6A  51F1               	movf	__bootloader_program@return_value& (0+255),w,b
  7614  000B6C  5F7E               	subwf	_hex_file_offset& (0+255),f,b
  7615  000B6E  51F2               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7616  000B70  5B7F               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7617  000B72  51F3               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7618  000B74  5B80               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7619  000B76  51F4               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7620  000B78  5B81               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7621                           
  7622                           ; BSR set to: 0
  7623                           ;bootloader.c: 406: --hex_file_entries;
  7624  000B7A  0101               	movlb	1	; () banked
  7625  000B7C  0769               	decf	_hex_file_entries& (0+255),f,b
  7626  000B7E  A0D8               	btfss	status,0,c
  7627  000B80  076A               	decf	(_hex_file_entries+1)& (0+255),f,b
  7628                           
  7629                           ; BSR set to: 1
  7630                           ;bootloader.c: 408: start_from_byte_next = cntr;
  7631  000B82  C0FA  F091         	movff	__bootloader_program@cntr,_start_from_byte_next
  7632                           
  7633                           ; BSR set to: 1
  7634                           ;bootloader.c: 410: internalFlash_erasePage(page_to_write);
  7635  000B86  C0FC  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7636  000B8A  C0FD  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7637  000B8E  EC68  F030         	call	_internalFlash_erasePage	;wreg free
  7638                           
  7639                           ;bootloader.c: 411: internalFlash_writePage(page_to_write);
  7640  000B92  C0FC  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7641  000B96  C0FD  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7642  000B9A  EC74  F027         	call	_internalFlash_writePage	;wreg free
  7643                           
  7644                           ;bootloader.c: 412: ++flash_pages_written;
  7645  000B9E  0101               	movlb	1	; () banked
  7646  000BA0  4B65               	infsnz	_flash_pages_written& (0+255),f,b
  7647  000BA2  2B66               	incf	(_flash_pages_written+1)& (0+255),f,b
  7648                           
  7649                           ; BSR set to: 1
  7650                           ;bootloader.c: 414: return;
  7651  000BA4  0012               	return	
  7652  000BA6                     l2520:
  7653                           
  7654                           ; BSR set to: 1
  7655  000BA6  0100               	movlb	0	; () banked
  7656  000BA8  4BFA               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7657  000BAA  2BFB               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7658  000BAC                     l2517:
  7659                           
  7660                           ; BSR set to: 0
  7661                           
  7662                           ; BSR set to: 0
  7663  000BAC  0101               	movlb	1	; () banked
  7664  000BAE  51CB               	movf	_hex_file_entry& (0+255),w,b
  7665  000BB0  0100               	movlb	0	; () banked
  7666  000BB2  5DFA               	subwf	__bootloader_program@cntr& (0+255),w,b
  7667  000BB4  0101               	movlb	1	; () banked
  7668  000BB6  51CC               	movf	(_hex_file_entry+1)& (0+255),w,b
  7669  000BB8  0100               	movlb	0	; () banked
  7670  000BBA  59FB               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7671  000BBC  B0D8               	btfsc	status,0,c
  7672  000BBE  D670               	goto	l2503
  7673  000BC0  D798               	goto	l2518
  7674  000BC2                     
  7675                           ;bootloader.c: 422: if(page_to_write!=0)
  7676                           
  7677                           ; BSR set to: 0
  7678  000BC2  0100               	movlb	0	; () banked
  7679  000BC4  51FC               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7680  000BC6  11FD               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7681  000BC8  B4D8               	btfsc	status,2,c
  7682  000BCA  0012               	return	
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;bootloader.c: 423: {;bootloader.c: 425: internalFlash_erasePage(page_to_write);
  7686  000BCC  C0FC  F009         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7687  000BD0  C0FD  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7688  000BD4  EC68  F030         	call	_internalFlash_erasePage	;wreg free
  7689                           
  7690                           ;bootloader.c: 426: internalFlash_writePage(page_to_write);
  7691  000BD8  C0FC  F009         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7692  000BDC  C0FD  F00A         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7693  000BE0  EC74  F027         	call	_internalFlash_writePage	;wreg free
  7694                           
  7695                           ;bootloader.c: 427: ++flash_pages_written;
  7696  000BE4  0101               	movlb	1	; () banked
  7697  000BE6  4B65               	infsnz	_flash_pages_written& (0+255),f,b
  7698  000BE8  2B66               	incf	(_flash_pages_written+1)& (0+255),f,b
  7699                           
  7700                           ; BSR set to: 1
  7701                           ;bootloader.c: 429: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7702  000BEA  0E70               	movlw	112
  7703  000BEC  0100               	movlb	0	; () banked
  7704  000BEE  6F66               	movwf	(_os+6)& (0+255),b
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;bootloader.c: 430: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7708  000BF0  0E70               	movlw	112
  7709  000BF2  6F67               	movwf	(_os+7)& (0+255),b
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;bootloader.c: 431: };bootloader.c: 433: return;
  7713                           
  7714                           ; BSR set to: 0
  7715  000BF4  0012               	return	
  7716  000BF6                     l2510:
  7717                           
  7718                           ; BSR set to: 0
  7719                           
  7720                           ; BSR set to: 0
  7721  000BF6  0101               	movlb	1	; () banked
  7722  000BF8  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
  7723                           
  7724                           ; Switch size 1, requested type "space"
  7725                           ; Number of cases is 3, Range of values is 0 to 4
  7726                           ; switch strategies available:
  7727                           ; Name         Instructions Cycles
  7728                           ; simple_byte           10     6 (average)
  7729                           ;	Chosen strategy is simple_byte
  7730  000BFA  0A00               	xorlw	0	; case 0
  7731  000BFC  B4D8               	btfsc	status,2,c
  7732  000BFE  D71D               	goto	l2514
  7733  000C00  0A01               	xorlw	1	; case 1
  7734  000C02  B4D8               	btfsc	status,2,c
  7735  000C04  D7DE               	goto	l2522
  7736  000C06  0A05               	xorlw	5	; case 4
  7737  000C08  B4D8               	btfsc	status,2,c
  7738  000C0A  D6F9               	goto	l2511
  7739                           
  7740                           ; BSR set to: 1
  7741                           
  7742                           ; BSR set to: 1
  7743  000C0C  D649               	goto	l2503
  7744  000C0E                     __end_of__bootloader_program:
  7745                           	opt stack 0
  7746                           tblptru	equ	0xFF8
  7747                           tblptrh	equ	0xFF7
  7748                           tblptrl	equ	0xFF6
  7749                           tablat	equ	0xFF5
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           intcon	equ	0xFF2
  7753                           intcon3	equ	0xFF0
  7754                           postinc0	equ	0xFEE
  7755                           wreg	equ	0xFE8
  7756                           indf1	equ	0xFE7
  7757                           postdec1	equ	0xFE5
  7758                           plusw1	equ	0xFE3
  7759                           fsr1h	equ	0xFE2
  7760                           fsr1l	equ	0xFE1
  7761                           indf2	equ	0xFDF
  7762                           postinc2	equ	0xFDE
  7763                           plusw2	equ	0xFDB
  7764                           fsr2h	equ	0xFDA
  7765                           fsr2l	equ	0xFD9
  7766                           status	equ	0xFD8
  7767                           
  7768 ;; *************** function _parseHexFileEntry *****************
  7769 ;; Defined at:
  7770 ;;		line 59 in file "hex.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  data            2   11[COMRAM] PTR unsigned char 
  7773 ;;		 -> file_buffer(50), 
  7774 ;;  offset          4   13[COMRAM] unsigned long 
  7775 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  7776 ;;		 -> hex_file_entry(23), 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  i               1   27[COMRAM] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  4   11[COMRAM] unsigned long 
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:       17 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    2
  7795 ;; This function calls:
  7796 ;;		_hexCharsToUint16
  7797 ;;		_hexCharsToUint8
  7798 ;; This function is called by:
  7799 ;;		__bootloader_verify_file
  7800 ;;		__bootloader_program
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text26
  7805  000020                     __ptext26:
  7806                           	opt stack 0
  7807  000020                     _parseHexFileEntry:
  7808                           	opt stack 26
  7809                           
  7810                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  7811                           
  7812                           ;incstack = 0
  7813  000020  500E               	movf	parseHexFileEntry@offset,w,c
  7814  000022  240C               	addwf	parseHexFileEntry@data,w,c
  7815  000024  6ED9               	movwf	fsr2l,c
  7816  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  7817  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7818  00002A  6EDA               	movwf	fsr2h,c
  7819  00002C  0E3A               	movlw	58
  7820  00002E  18DE               	xorwf	postinc2,w,c
  7821  000030  B4D8               	btfsc	status,2,c
  7822  000032  D005               	goto	l2366
  7823                           
  7824                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  7825  000034  680C               	setf	?_parseHexFileEntry,c
  7826  000036  680D               	setf	?_parseHexFileEntry+1,c
  7827  000038  680E               	setf	?_parseHexFileEntry+2,c
  7828  00003A  680F               	setf	?_parseHexFileEntry+3,c
  7829  00003C  0012               	return	
  7830  00003E                     l2366:
  7831                           
  7832                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  7833  00003E  0E02               	movlw	2
  7834  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  7835  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7836  000044  0E00               	movlw	0
  7837  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7838  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7839  00004A  5014               	movf	??_parseHexFileEntry,w,c
  7840  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  7841  00004E  6ED9               	movwf	fsr2l,c
  7842  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  7843  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7844  000054  6EDA               	movwf	fsr2h,c
  7845  000056  50DF               	movf	indf2,w,c
  7846  000058  6E03               	movwf	hexCharsToUint8@c2,c
  7847  00005A  0E01               	movlw	1
  7848  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  7849  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7850  000060  0E00               	movlw	0
  7851  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7852  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7853  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  7854  000068  240C               	addwf	parseHexFileEntry@data,w,c
  7855  00006A  6ED9               	movwf	fsr2l,c
  7856  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  7857  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7858  000070  6EDA               	movwf	fsr2h,c
  7859  000072  50DF               	movf	indf2,w,c
  7860  000074  EC13  F039         	call	_hexCharsToUint8
  7861  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7862  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  7863  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7864  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7865  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  7866  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  7867                           
  7868                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  7869  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  7870  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  7871  000094  0E01               	movlw	1
  7872  000096  50DB               	movf	plusw2,w,c
  7873  000098  E104               	bnz	u10780
  7874  00009A  0E11               	movlw	17
  7875  00009C  5CDE               	subwf	postinc2,w,c
  7876  00009E  A0D8               	btfss	status,0,c
  7877  0000A0  D009               	goto	l2368
  7878  0000A2                     u10780:
  7879                           
  7880                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  7881  0000A2  0EFC               	movlw	252
  7882  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  7883  0000A6  0EFF               	movlw	255
  7884  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  7885  0000AA  0EFF               	movlw	255
  7886  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  7887  0000AE  0EFF               	movlw	255
  7888  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  7889  0000B2  0012               	return	
  7890  0000B4                     l2368:
  7891                           
  7892                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  7893  0000B4  0E04               	movlw	4
  7894  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  7895  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7896  0000BA  0E00               	movlw	0
  7897  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7898  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7899  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  7900  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  7901  0000C4  6ED9               	movwf	fsr2l,c
  7902  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  7903  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7904  0000CA  6EDA               	movwf	fsr2h,c
  7905  0000CC  50DF               	movf	indf2,w,c
  7906  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  7907  0000D0  0E05               	movlw	5
  7908  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  7909  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7910  0000D6  0E00               	movlw	0
  7911  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7912  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7913  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  7914  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  7915  0000E0  6ED9               	movwf	fsr2l,c
  7916  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  7917  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7918  0000E6  6EDA               	movwf	fsr2h,c
  7919  0000E8  50DF               	movf	indf2,w,c
  7920  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  7921  0000EC  0E06               	movlw	6
  7922  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  7923  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  7924  0000F2  0E00               	movlw	0
  7925  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7926  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  7927  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  7928  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  7929  0000FC  6ED9               	movwf	fsr2l,c
  7930  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  7931  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7932  000102  6EDA               	movwf	fsr2h,c
  7933  000104  50DF               	movf	indf2,w,c
  7934  000106  6E05               	movwf	hexCharsToUint16@c4,c
  7935  000108  0E03               	movlw	3
  7936  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  7937  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  7938  00010E  0E00               	movlw	0
  7939  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7940  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  7941  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  7942  000116  240C               	addwf	parseHexFileEntry@data,w,c
  7943  000118  6ED9               	movwf	fsr2l,c
  7944  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  7945  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7946  00011E  6EDA               	movwf	fsr2h,c
  7947  000120  50DF               	movf	indf2,w,c
  7948  000122  ECF9  F02F         	call	_hexCharsToUint16
  7949  000126  EE20 F002          	lfsr	2,2
  7950  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7951  00012C  26D9               	addwf	fsr2l,f,c
  7952  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7953  000130  22DA               	addwfc	fsr2h,f,c
  7954  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  7955  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  7956                           
  7957                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  7958  00013A  EE20 F004          	lfsr	2,4
  7959  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  7960  000140  26D9               	addwf	fsr2l,f,c
  7961  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  7962  000144  22DA               	addwfc	fsr2h,f,c
  7963  000146  0E08               	movlw	8
  7964  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  7965  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  7966  00014C  0E00               	movlw	0
  7967  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7968  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  7969  000152  5014               	movf	??_parseHexFileEntry,w,c
  7970  000154  240C               	addwf	parseHexFileEntry@data,w,c
  7971  000156  6EE1               	movwf	fsr1l,c
  7972  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  7973  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7974  00015C  6EE2               	movwf	fsr1h,c
  7975  00015E  50E7               	movf	indf1,w,c
  7976  000160  6E03               	movwf	hexCharsToUint8@c2,c
  7977  000162  0E07               	movlw	7
  7978  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  7979  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  7980  000168  0E00               	movlw	0
  7981  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  7982  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  7983  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  7984  000170  240C               	addwf	parseHexFileEntry@data,w,c
  7985  000172  6EE1               	movwf	fsr1l,c
  7986  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  7987  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  7988  000178  6EE2               	movwf	fsr1h,c
  7989  00017A  50E7               	movf	indf1,w,c
  7990  00017C  EC13  F039         	call	_hexCharsToUint8
  7991  000180  6EDF               	movwf	indf2,c
  7992                           
  7993                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  7994  000182  0E00               	movlw	0
  7995  000184  6E1C               	movwf	parseHexFileEntry@i,c
  7996  000186  D03D               	goto	l2369
  7997  000188                     
  7998                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  7999  000188  501C               	movf	parseHexFileEntry@i,w,c
  8000  00018A  0D01               	mullw	1
  8001  00018C  0E05               	movlw	5
  8002  00018E  26F3               	addwf	prodl,f,c
  8003  000190  0E00               	movlw	0
  8004  000192  22F4               	addwfc	prodh,f,c
  8005  000194  50F3               	movf	prodl,w,c
  8006  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8007  000198  6ED9               	movwf	fsr2l,c
  8008  00019A  50F4               	movf	prodh,w,c
  8009  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8010  00019E  6EDA               	movwf	fsr2h,c
  8011  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8012  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8013  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8014  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8015  0001AA  0E00               	movlw	0
  8016  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8017  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8018  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8019  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8020  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8021  0001B6  0E0A               	movlw	10
  8022  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8023  0001BA  0E00               	movlw	0
  8024  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8025  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8026  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8027  0001C2  6EE1               	movwf	fsr1l,c
  8028  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8029  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8030  0001C8  6EE2               	movwf	fsr1h,c
  8031  0001CA  50E7               	movf	indf1,w,c
  8032  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8033  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8034  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8035  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8036  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8037  0001D8  0E00               	movlw	0
  8038  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8039  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8040  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8041  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8042  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8043  0001E4  0E09               	movlw	9
  8044  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8045  0001E8  0E00               	movlw	0
  8046  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8047  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8048  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8049  0001F0  6EE1               	movwf	fsr1l,c
  8050  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8051  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8052  0001F6  6EE2               	movwf	fsr1h,c
  8053  0001F8  50E7               	movf	indf1,w,c
  8054  0001FA  EC13  F039         	call	_hexCharsToUint8
  8055  0001FE  6EDF               	movwf	indf2,c
  8056  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8057  000202                     l2369:
  8058  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8059  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8060  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8061  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8062  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8063  000210  50DE               	movf	postinc2,w,c
  8064  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8065  000214  50DE               	movf	postinc2,w,c
  8066  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8067  000218  A0D8               	btfss	status,0,c
  8068  00021A  D7B6               	goto	l2370
  8069                           
  8070                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8071  00021C  EE20 F015          	lfsr	2,21
  8072  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8073  000222  26D9               	addwf	fsr2l,f,c
  8074  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8075  000226  22DA               	addwfc	fsr2h,f,c
  8076  000228  501C               	movf	parseHexFileEntry@i,w,c
  8077  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8078  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8079  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8080  000232  0E00               	movlw	0
  8081  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8082  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8083  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8084  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8085  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8086  00023E  0E0A               	movlw	10
  8087  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8088  000242  0E00               	movlw	0
  8089  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8090  000246  5014               	movf	??_parseHexFileEntry,w,c
  8091  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8092  00024A  6EE1               	movwf	fsr1l,c
  8093  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8094  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8095  000250  6EE2               	movwf	fsr1h,c
  8096  000252  50E7               	movf	indf1,w,c
  8097  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8098  000256  501C               	movf	parseHexFileEntry@i,w,c
  8099  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8100  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8101  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8102  000260  0E00               	movlw	0
  8103  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8104  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8105  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8106  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8107  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8108  00026C  0E09               	movlw	9
  8109  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8110  000270  0E00               	movlw	0
  8111  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8112  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8113  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8114  000278  6EE1               	movwf	fsr1l,c
  8115  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8116  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8117  00027E  6EE2               	movwf	fsr1h,c
  8118  000280  50E7               	movf	indf1,w,c
  8119  000282  EC13  F039         	call	_hexCharsToUint8
  8120  000286  6EDF               	movwf	indf2,c
  8121                           
  8122                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8123  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8124  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8125  000290  EE10 F016          	lfsr	1,22
  8126  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8127  000296  26E1               	addwf	fsr1l,f,c
  8128  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8129  00029A  22E2               	addwfc	fsr1h,f,c
  8130  00029C  CFDF FFE7          	movff	indf2,indf1
  8131                           
  8132                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8133  0002A0  EE20 F002          	lfsr	2,2
  8134  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8135  0002A6  26D9               	addwf	fsr2l,f,c
  8136  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8137  0002AA  22DA               	addwfc	fsr2h,f,c
  8138  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8139  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8140  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8141  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8142  0002BA  EE20 F016          	lfsr	2,22
  8143  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8144  0002C0  26D9               	addwf	fsr2l,f,c
  8145  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8146  0002C4  22DA               	addwfc	fsr2h,f,c
  8147  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8148  0002C8  26DF               	addwf	indf2,f,c
  8149                           
  8150                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8151  0002CA  EE20 F002          	lfsr	2,2
  8152  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8153  0002D0  26D9               	addwf	fsr2l,f,c
  8154  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8155  0002D4  22DA               	addwfc	fsr2h,f,c
  8156  0002D6  50DF               	movf	indf2,w,c
  8157  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8158  0002DA  EE20 F016          	lfsr	2,22
  8159  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8160  0002E0  26D9               	addwf	fsr2l,f,c
  8161  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8162  0002E4  22DA               	addwfc	fsr2h,f,c
  8163  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8164  0002E8  26DF               	addwf	indf2,f,c
  8165                           
  8166                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8167  0002EA  EE20 F004          	lfsr	2,4
  8168  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8169  0002F0  26D9               	addwf	fsr2l,f,c
  8170  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8171  0002F4  22DA               	addwfc	fsr2h,f,c
  8172  0002F6  50DF               	movf	indf2,w,c
  8173  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8174  0002FA  EE20 F016          	lfsr	2,22
  8175  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8176  000300  26D9               	addwf	fsr2l,f,c
  8177  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8178  000304  22DA               	addwfc	fsr2h,f,c
  8179  000306  5014               	movf	??_parseHexFileEntry,w,c
  8180  000308  26DF               	addwf	indf2,f,c
  8181                           
  8182                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8183  00030A  0E00               	movlw	0
  8184  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8185  00030E  D017               	goto	l2372
  8186  000310                     
  8187                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8188  000310  501C               	movf	parseHexFileEntry@i,w,c
  8189  000312  0D01               	mullw	1
  8190  000314  0E05               	movlw	5
  8191  000316  26F3               	addwf	prodl,f,c
  8192  000318  0E00               	movlw	0
  8193  00031A  22F4               	addwfc	prodh,f,c
  8194  00031C  50F3               	movf	prodl,w,c
  8195  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8196  000320  6ED9               	movwf	fsr2l,c
  8197  000322  50F4               	movf	prodh,w,c
  8198  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8199  000326  6EDA               	movwf	fsr2h,c
  8200  000328  50DF               	movf	indf2,w,c
  8201  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8202  00032C  EE20 F016          	lfsr	2,22
  8203  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8204  000332  26D9               	addwf	fsr2l,f,c
  8205  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8206  000336  22DA               	addwfc	fsr2h,f,c
  8207  000338  5014               	movf	??_parseHexFileEntry,w,c
  8208  00033A  26DF               	addwf	indf2,f,c
  8209  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8210  00033E                     l2372:
  8211  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8212  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8213  000346  501C               	movf	parseHexFileEntry@i,w,c
  8214  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8215  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8216  00034C  50DE               	movf	postinc2,w,c
  8217  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8218  000350  50DE               	movf	postinc2,w,c
  8219  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8220  000354  A0D8               	btfss	status,0,c
  8221  000356  D7DC               	goto	l2373
  8222                           
  8223                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8224  000358  EE20 F015          	lfsr	2,21
  8225  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8226  00035E  26D9               	addwf	fsr2l,f,c
  8227  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8228  000362  22DA               	addwfc	fsr2h,f,c
  8229  000364  50DF               	movf	indf2,w,c
  8230  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8231  000368  EE20 F016          	lfsr	2,22
  8232  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8233  00036E  26D9               	addwf	fsr2l,f,c
  8234  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8235  000372  22DA               	addwfc	fsr2h,f,c
  8236  000374  5014               	movf	??_parseHexFileEntry,w,c
  8237  000376  26DF               	addwf	indf2,f,c
  8238                           
  8239                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8240  000378  EE20 F016          	lfsr	2,22
  8241  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8242  00037E  26D9               	addwf	fsr2l,f,c
  8243  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8244  000382  22DA               	addwfc	fsr2h,f,c
  8245  000384  50DF               	movf	indf2,w,c
  8246  000386  B4D8               	btfsc	status,2,c
  8247  000388  D009               	goto	l2375
  8248                           
  8249                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8250  00038A  0EFE               	movlw	254
  8251  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8252  00038E  0EFF               	movlw	255
  8253  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8254  000392  0EFF               	movlw	255
  8255  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8256  000396  0EFF               	movlw	255
  8257  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8258  00039A  0012               	return	
  8259  00039C                     l2375:
  8260                           
  8261                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8262  00039C  EE20 F004          	lfsr	2,4
  8263  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8264  0003A2  26D9               	addwf	fsr2l,f,c
  8265  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8266  0003A6  22DA               	addwfc	fsr2h,f,c
  8267  0003A8  04DE               	decf	postinc2,w,c
  8268  0003AA  A4D8               	btfss	status,2,c
  8269  0003AC  D009               	goto	l2376
  8270                           
  8271                           ;hex.c: 110: {;hex.c: 112: return 0;
  8272  0003AE  0E00               	movlw	0
  8273  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8274  0003B2  0E00               	movlw	0
  8275  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8276  0003B6  0E00               	movlw	0
  8277  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8278  0003BA  0E00               	movlw	0
  8279  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8280                           
  8281                           ;hex.c: 113: }
  8282  0003BE  0012               	return	
  8283  0003C0                     l2376:
  8284                           
  8285                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8286  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8287  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8288  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8289  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8290  0003CA  0E00               	movlw	0
  8291  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8292  0003CE  0E0B               	movlw	11
  8293  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8294  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8295  0003D4  0E00               	movlw	0
  8296  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8297  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8298  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8299  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8300  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8301  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8302  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8303  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8304  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8305  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8306  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8307  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8308  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8309  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8310  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8311                           
  8312                           ;hex.c: 117: if (data[++offset] == ':')
  8313  0003F4  0E01               	movlw	1
  8314  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8315  0003F8  0E00               	movlw	0
  8316  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8317  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8318  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8319  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8320  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8321  000404  6ED9               	movwf	fsr2l,c
  8322  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8323  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8324  00040A  6EDA               	movwf	fsr2h,c
  8325  00040C  0E3A               	movlw	58
  8326  00040E  18DE               	xorwf	postinc2,w,c
  8327  000410  A4D8               	btfss	status,2,c
  8328  000412  D009               	goto	l2378
  8329                           
  8330                           ;hex.c: 118: {;hex.c: 119: return offset;
  8331  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8332  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8333  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8334  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8335                           
  8336                           ;hex.c: 120: }
  8337  000424  0012               	return	
  8338  000426                     l2378:
  8339                           
  8340                           ;hex.c: 121: else if (data[++offset] == ':')
  8341  000426  0E01               	movlw	1
  8342  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8343  00042A  0E00               	movlw	0
  8344  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8345  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8346  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8347  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8348  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8349  000436  6ED9               	movwf	fsr2l,c
  8350  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8351  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8352  00043C  6EDA               	movwf	fsr2h,c
  8353  00043E  0E3A               	movlw	58
  8354  000440  18DE               	xorwf	postinc2,w,c
  8355  000442  A4D8               	btfss	status,2,c
  8356  000444  D009               	goto	l2380
  8357                           
  8358                           ;hex.c: 122: {;hex.c: 123: return offset;
  8359  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8360  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8361  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8362  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8363                           
  8364                           ;hex.c: 124: }
  8365  000456  0012               	return	
  8366  000458                     l2380:
  8367                           
  8368                           ;hex.c: 125: else if (data[++offset] == ':')
  8369  000458  0E01               	movlw	1
  8370  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8371  00045C  0E00               	movlw	0
  8372  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8373  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8374  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8375  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8376  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8377  000468  6ED9               	movwf	fsr2l,c
  8378  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8379  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8380  00046E  6EDA               	movwf	fsr2h,c
  8381  000470  0E3A               	movlw	58
  8382  000472  18DE               	xorwf	postinc2,w,c
  8383  000474  A4D8               	btfss	status,2,c
  8384  000476  D009               	goto	l2382
  8385                           
  8386                           ;hex.c: 126: {;hex.c: 127: return offset;
  8387  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8388  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8389  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8390  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8391                           
  8392                           ;hex.c: 128: }
  8393  000488  0012               	return	
  8394  00048A                     l2382:
  8395                           
  8396                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8397  00048A  0EFD               	movlw	253
  8398  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8399  00048E  0EFF               	movlw	255
  8400  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8401  000492  0EFF               	movlw	255
  8402  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8403  000496  0EFF               	movlw	255
  8404  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8405  00049A  0012               	return	
  8406  00049C                     __end_of_parseHexFileEntry:
  8407                           	opt stack 0
  8408                           tblptru	equ	0xFF8
  8409                           tblptrh	equ	0xFF7
  8410                           tblptrl	equ	0xFF6
  8411                           tablat	equ	0xFF5
  8412                           prodh	equ	0xFF4
  8413                           prodl	equ	0xFF3
  8414                           intcon	equ	0xFF2
  8415                           intcon3	equ	0xFF0
  8416                           postinc0	equ	0xFEE
  8417                           wreg	equ	0xFE8
  8418                           indf1	equ	0xFE7
  8419                           postdec1	equ	0xFE5
  8420                           plusw1	equ	0xFE3
  8421                           fsr1h	equ	0xFE2
  8422                           fsr1l	equ	0xFE1
  8423                           indf2	equ	0xFDF
  8424                           postinc2	equ	0xFDE
  8425                           postdec2	equ	0xFDD
  8426                           plusw2	equ	0xFDB
  8427                           fsr2h	equ	0xFDA
  8428                           fsr2l	equ	0xFD9
  8429                           status	equ	0xFD8
  8430                           
  8431 ;; *************** function _hexCharsToUint8 *****************
  8432 ;; Defined at:
  8433 ;;		line 42 in file "hex.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  c1              1    wreg     unsigned char 
  8436 ;;  c2              1    2[COMRAM] unsigned char 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  c1              1    4[COMRAM] unsigned char 
  8439 ;;  retVal          1    5[COMRAM] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  1    wreg      unsigned char 
  8442 ;; Registers used:
  8443 ;;		wreg, status,2, status,0, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8449 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;Total ram usage:        4 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    1
  8456 ;; This function calls:
  8457 ;;		_hexCharToUint8
  8458 ;; This function is called by:
  8459 ;;		_parseHexFileEntry
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text27
  8464  007226                     __ptext27:
  8465                           	opt stack 0
  8466  007226                     _hexCharsToUint8:
  8467                           	opt stack 26
  8468                           
  8469                           ;incstack = 0
  8470                           ;hexCharsToUint8@c1 stored from wreg
  8471  007226  6E05               	movwf	hexCharsToUint8@c1,c
  8472                           
  8473                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8474  007228  5005               	movf	hexCharsToUint8@c1,w,c
  8475  00722A  ECA1  F037         	call	_hexCharToUint8
  8476  00722E  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8477  007230  3804               	swapf	??_hexCharsToUint8,w,c
  8478  007232  0BF0               	andlw	240
  8479  007234  6E06               	movwf	hexCharsToUint8@retVal,c
  8480                           
  8481                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8482  007236  5003               	movf	hexCharsToUint8@c2,w,c
  8483  007238  ECA1  F037         	call	_hexCharToUint8
  8484  00723C  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8485                           
  8486                           ;hex.c: 46: return retVal;
  8487  00723E  5006               	movf	hexCharsToUint8@retVal,w,c
  8488  007240  0012               	return	
  8489  007242                     __end_of_hexCharsToUint8:
  8490                           	opt stack 0
  8491                           tblptru	equ	0xFF8
  8492                           tblptrh	equ	0xFF7
  8493                           tblptrl	equ	0xFF6
  8494                           tablat	equ	0xFF5
  8495                           prodh	equ	0xFF4
  8496                           prodl	equ	0xFF3
  8497                           intcon	equ	0xFF2
  8498                           intcon3	equ	0xFF0
  8499                           postinc0	equ	0xFEE
  8500                           wreg	equ	0xFE8
  8501                           indf1	equ	0xFE7
  8502                           postdec1	equ	0xFE5
  8503                           plusw1	equ	0xFE3
  8504                           fsr1h	equ	0xFE2
  8505                           fsr1l	equ	0xFE1
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           plusw2	equ	0xFDB
  8510                           fsr2h	equ	0xFDA
  8511                           fsr2l	equ	0xFD9
  8512                           status	equ	0xFD8
  8513                           
  8514 ;; *************** function _hexCharsToUint16 *****************
  8515 ;; Defined at:
  8516 ;;		line 49 in file "hex.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  c1              1    wreg     unsigned char 
  8519 ;;  c2              1    2[COMRAM] unsigned char 
  8520 ;;  c3              1    3[COMRAM] unsigned char 
  8521 ;;  c4              1    4[COMRAM] unsigned char 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  c1              1    8[COMRAM] unsigned char 
  8524 ;;  retVal          2    9[COMRAM] unsigned int 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  2    2[COMRAM] unsigned int 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0, cstack
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8534 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;Total ram usage:        9 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    1
  8541 ;; This function calls:
  8542 ;;		_hexCharToUint8
  8543 ;; This function is called by:
  8544 ;;		_parseHexFileEntry
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text28
  8549  005FF2                     __ptext28:
  8550                           	opt stack 0
  8551  005FF2                     _hexCharsToUint16:
  8552                           	opt stack 26
  8553                           
  8554                           ;incstack = 0
  8555                           ;hexCharsToUint16@c1 stored from wreg
  8556  005FF2  6E09               	movwf	hexCharsToUint16@c1,c
  8557                           
  8558                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8559  005FF4  5009               	movf	hexCharsToUint16@c1,w,c
  8560  005FF6  ECA1  F037         	call	_hexCharToUint8
  8561  005FFA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8562  005FFC  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8563  005FFE  0E0C               	movlw	12
  8564  006000                     u10195:
  8565  006000  90D8               	bcf	status,0,c
  8566  006002  3606               	rlcf	??_hexCharsToUint16,f,c
  8567  006004  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8568  006006  2EE8               	decfsz	wreg,f,c
  8569  006008  D7FB               	goto	u10195
  8570  00600A  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8571  00600E  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8572                           
  8573                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8574  006012  5003               	movf	hexCharsToUint16@c2,w,c
  8575  006014  ECA1  F037         	call	_hexCharToUint8
  8576  006018  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8577  00601A  5006               	movf	??_hexCharsToUint16,w,c
  8578  00601C  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8579  00601E  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8580  006020  5007               	movf	??_hexCharsToUint16+1,w,c
  8581  006022  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8582  006024  5008               	movf	??_hexCharsToUint16+2,w,c
  8583  006026  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8584                           
  8585                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8586  006028  5004               	movf	hexCharsToUint16@c3,w,c
  8587  00602A  ECA1  F037         	call	_hexCharToUint8
  8588  00602E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8589  006030  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8590  006032  3A06               	swapf	??_hexCharsToUint16,f,c
  8591  006034  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8592  006036  0EF0               	movlw	240
  8593  006038  1607               	andwf	??_hexCharsToUint16+1,f,c
  8594  00603A  5006               	movf	??_hexCharsToUint16,w,c
  8595  00603C  0B0F               	andlw	15
  8596  00603E  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8597  006040  0EF0               	movlw	240
  8598  006042  1606               	andwf	??_hexCharsToUint16,f,c
  8599  006044  5006               	movf	??_hexCharsToUint16,w,c
  8600  006046  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8601  006048  5007               	movf	??_hexCharsToUint16+1,w,c
  8602  00604A  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8603                           
  8604                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8605  00604C  5005               	movf	hexCharsToUint16@c4,w,c
  8606  00604E  ECA1  F037         	call	_hexCharToUint8
  8607  006052  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8608  006054  5006               	movf	??_hexCharsToUint16,w,c
  8609  006056  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8610                           
  8611                           ;hex.c: 55: return retVal;
  8612  006058  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8613  00605C  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8614  006060  0012               	return	
  8615  006062                     __end_of_hexCharsToUint16:
  8616                           	opt stack 0
  8617                           tblptru	equ	0xFF8
  8618                           tblptrh	equ	0xFF7
  8619                           tblptrl	equ	0xFF6
  8620                           tablat	equ	0xFF5
  8621                           prodh	equ	0xFF4
  8622                           prodl	equ	0xFF3
  8623                           intcon	equ	0xFF2
  8624                           intcon3	equ	0xFF0
  8625                           postinc0	equ	0xFEE
  8626                           wreg	equ	0xFE8
  8627                           indf1	equ	0xFE7
  8628                           postdec1	equ	0xFE5
  8629                           plusw1	equ	0xFE3
  8630                           fsr1h	equ	0xFE2
  8631                           fsr1l	equ	0xFE1
  8632                           indf2	equ	0xFDF
  8633                           postinc2	equ	0xFDE
  8634                           postdec2	equ	0xFDD
  8635                           plusw2	equ	0xFDB
  8636                           fsr2h	equ	0xFDA
  8637                           fsr2l	equ	0xFD9
  8638                           status	equ	0xFD8
  8639                           
  8640 ;; *************** function _hexCharToUint8 *****************
  8641 ;; Defined at:
  8642 ;;		line 11 in file "hex.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  c               1    wreg     unsigned char 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  c               1    0[COMRAM] unsigned char 
  8647 ;;  ascii           1    1[COMRAM] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  1    wreg      unsigned char 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;Total ram usage:        2 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_hexCharsToUint8
  8667 ;;		_hexCharsToUint16
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text29
  8672  006F42                     __ptext29:
  8673                           	opt stack 0
  8674  006F42                     _hexCharToUint8:
  8675                           	opt stack 26
  8676                           
  8677                           ;incstack = 0
  8678                           ;hexCharToUint8@c stored from wreg
  8679  006F42  6E01               	movwf	hexCharToUint8@c,c
  8680                           
  8681                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8682  006F44  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8683                           
  8684                           ;hex.c: 16: if (ascii >= 97)
  8685  006F48  0E60               	movlw	96
  8686  006F4A  6402               	cpfsgt	hexCharToUint8@ascii,c
  8687  006F4C  D002               	goto	l2351
  8688                           
  8689                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8690  006F4E  0E57               	movlw	87
  8691  006F50  D006               	goto	L3
  8692  006F52                     l2351:
  8693                           
  8694                           ;hex.c: 21: else if (ascii >= 65)
  8695  006F52  0E40               	movlw	64
  8696  006F54  6402               	cpfsgt	hexCharToUint8@ascii,c
  8697  006F56  D002               	goto	l2353
  8698                           
  8699                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8700  006F58  0E37               	movlw	55
  8701  006F5A  D001               	goto	L3
  8702  006F5C                     l2353:
  8703                           
  8704                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8705  006F5C  0E30               	movlw	48
  8706  006F5E                     L3:
  8707  006F5E  5E02               	subwf	hexCharToUint8@ascii,f,c
  8708                           
  8709                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8710  006F60  0E0F               	movlw	15
  8711  006F62  6402               	cpfsgt	hexCharToUint8@ascii,c
  8712  006F64  D002               	goto	l2355
  8713                           
  8714                           ;hex.c: 32: {;hex.c: 33: return 0;
  8715  006F66  0E00               	movlw	0
  8716                           
  8717                           ;hex.c: 34: }
  8718  006F68  0012               	return	
  8719  006F6A                     l2355:
  8720                           
  8721                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8722  006F6A  5002               	movf	hexCharToUint8@ascii,w,c
  8723  006F6C  0012               	return	
  8724  006F6E                     __end_of_hexCharToUint8:
  8725                           	opt stack 0
  8726                           tblptru	equ	0xFF8
  8727                           tblptrh	equ	0xFF7
  8728                           tblptrl	equ	0xFF6
  8729                           tablat	equ	0xFF5
  8730                           prodh	equ	0xFF4
  8731                           prodl	equ	0xFF3
  8732                           intcon	equ	0xFF2
  8733                           intcon3	equ	0xFF0
  8734                           postinc0	equ	0xFEE
  8735                           wreg	equ	0xFE8
  8736                           indf1	equ	0xFE7
  8737                           postdec1	equ	0xFE5
  8738                           plusw1	equ	0xFE3
  8739                           fsr1h	equ	0xFE2
  8740                           fsr1l	equ	0xFE1
  8741                           indf2	equ	0xFDF
  8742                           postinc2	equ	0xFDE
  8743                           postdec2	equ	0xFDD
  8744                           plusw2	equ	0xFDB
  8745                           fsr2h	equ	0xFDA
  8746                           fsr2l	equ	0xFD9
  8747                           status	equ	0xFD8
  8748                           
  8749 ;; *************** function _internalFlash_writePage *****************
  8750 ;; Defined at:
  8751 ;;		line 65 in file "internal_flash.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  page            2    8[COMRAM] unsigned int 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  address         4   18[COMRAM] unsigned long 
  8756 ;;  cntr            2   14[COMRAM] unsigned int 
  8757 ;;  byte_cntr       1   17[COMRAM] unsigned char 
  8758 ;;  block_cntr      1   16[COMRAM] unsigned char 
  8759 ;;  i               1    0        unsigned char 
  8760 ;;  gie             1    0        unsigned char 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;Total ram usage:       14 bytes
  8775 ;; Hardware stack levels used:    1
  8776 ;; Hardware stack levels required when called:    1
  8777 ;; This function calls:
  8778 ;;		__internalFlash_unlockAndActivate
  8779 ;;		_internalFlash_addressFromPage
  8780 ;; This function is called by:
  8781 ;;		__bootloader_program
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text30
  8786  004EE8                     __ptext30:
  8787                           	opt stack 0
  8788  004EE8                     _internalFlash_writePage:
  8789                           	opt stack 27
  8790                           
  8791                           ;internal_flash.c: 67: uint32_t address;;internal_flash.c: 68: uint8_t gie;;internal_fla
      +                          sh.c: 69: uint16_t cntr;;internal_flash.c: 70: uint8_t i;;internal_flash.c: 71: uint8_t 
      +                          block_cntr;;internal_flash.c: 72: uint8_t byte_cntr;;internal_flash.c: 75: address = int
      +                          ernalFlash_addressFromPage(page);
  8792                           
  8793                           ;incstack = 0
  8794  004EE8  C009  F001         	movff	internalFlash_writePage@page,internalFlash_addressFromPage@page
  8795  004EEC  C00A  F002         	movff	internalFlash_writePage@page+1,internalFlash_addressFromPage@page+1
  8796  004EF0  EC8A  F037         	call	_internalFlash_addressFromPage	;wreg free
  8797  004EF4  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_writePage@address
  8798  004EF8  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_writePage@address+1
  8799  004EFC  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_writePage@address+2
  8800  004F00  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_writePage@address+3
  8801                           
  8802                           ;internal_flash.c: 76: TBLPTR = address;
  8803  004F04  C013  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  8804  004F08  C014  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  8805  004F0C  C015  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  8806                           
  8807                           ;internal_flash.c: 79: if((address<0x9000) || (address+1023>=0x1FFFF))
  8808  004F10  5016               	movf	internalFlash_writePage@address+3,w,c
  8809  004F12  1015               	iorwf	internalFlash_writePage@address+2,w,c
  8810  004F14  E104               	bnz	u10960
  8811  004F16  0E90               	movlw	144
  8812  004F18  5C14               	subwf	internalFlash_writePage@address+1,w,c
  8813  004F1A  A0D8               	btfss	status,0,c
  8814  004F1C  0012               	return	
  8815  004F1E                     u10960:
  8816  004F1E  0EFF               	movlw	255
  8817  004F20  2413               	addwf	internalFlash_writePage@address,w,c
  8818  004F22  6E0B               	movwf	??_internalFlash_writePage& (0+255),c
  8819  004F24  0E03               	movlw	3
  8820  004F26  2014               	addwfc	internalFlash_writePage@address+1,w,c
  8821  004F28  6E0C               	movwf	(??_internalFlash_writePage+1)& (0+255),c
  8822  004F2A  0E00               	movlw	0
  8823  004F2C  2015               	addwfc	internalFlash_writePage@address+2,w,c
  8824  004F2E  6E0D               	movwf	(??_internalFlash_writePage+2)& (0+255),c
  8825  004F30  0E00               	movlw	0
  8826  004F32  2016               	addwfc	internalFlash_writePage@address+3,w,c
  8827  004F34  6E0E               	movwf	(??_internalFlash_writePage+3)& (0+255),c
  8828  004F36  500E               	movf	??_internalFlash_writePage+3,w,c
  8829  004F38  E132               	bnz	l2608
  8830  004F3A  280B               	incf	??_internalFlash_writePage,w,c
  8831  004F3C  0EFF               	movlw	255
  8832  004F3E  580C               	subwfb	??_internalFlash_writePage+1,w,c
  8833  004F40  0E01               	movlw	1
  8834  004F42  580D               	subwfb	??_internalFlash_writePage+2,w,c
  8835  004F44  B0D8               	btfsc	status,0,c
  8836  004F46  0012               	return	
  8837                           
  8838                           ;internal_flash.c: 82: };internal_flash.c: 85: cntr = 0;
  8839                           
  8840                           ;internal_flash.c: 80: {;internal_flash.c: 81: return;
  8841  004F48  0E00               	movlw	0
  8842  004F4A  6E10               	movwf	internalFlash_writePage@cntr+1,c
  8843  004F4C  0E00               	movlw	0
  8844  004F4E  6E0F               	movwf	internalFlash_writePage@cntr,c
  8845                           
  8846                           ;internal_flash.c: 86: for(block_cntr=0; block_cntr<16; ++block_cntr)
  8847  004F50  0E00               	movlw	0
  8848  004F52  6E11               	movwf	internalFlash_writePage@block_cntr,c
  8849  004F54                     l13279:
  8850  004F54  0E0F               	movlw	15
  8851  004F56  6411               	cpfsgt	internalFlash_writePage@block_cntr,c
  8852  004F58  D001               	goto	l2609
  8853  004F5A  0012               	return	
  8854  004F5C                     l2609:
  8855                           
  8856                           ;internal_flash.c: 87: {;internal_flash.c: 90: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  8857  004F5C  0E00               	movlw	0
  8858  004F5E  6E12               	movwf	internalFlash_writePage@byte_cntr,c
  8859  004F60                     l13285:
  8860  004F60  0E3F               	movlw	63
  8861  004F62  6412               	cpfsgt	internalFlash_writePage@byte_cntr,c
  8862  004F64  D001               	goto	l2611
  8863  004F66  D00D               	goto	u11000
  8864  004F68                     l2611:
  8865                           
  8866                           ;internal_flash.c: 91: {;internal_flash.c: 93: TABLAT = pageBuffer[cntr];
  8867  004F68  0E00               	movlw	low _pageBuffer
  8868  004F6A  240F               	addwf	internalFlash_writePage@cntr,w,c
  8869  004F6C  6ED9               	movwf	fsr2l,c
  8870  004F6E  0E08               	movlw	high _pageBuffer
  8871  004F70  2010               	addwfc	internalFlash_writePage@cntr+1,w,c
  8872  004F72  6EDA               	movwf	fsr2h,c
  8873  004F74  50DF               	movf	indf2,w,c
  8874  004F76  6EF5               	movwf	tablat,c	;volatile
  8875  004F78  000D               	tblwt		*+	;# 
  8876                           
  8877                           ;internal_flash.c: 97: ++cntr;
  8878  004F7A  4A0F               	infsnz	internalFlash_writePage@cntr,f,c
  8879  004F7C  2A10               	incf	internalFlash_writePage@cntr+1,f,c
  8880  004F7E  2A12               	incf	internalFlash_writePage@byte_cntr,f,c
  8881  004F80  D7EF               	goto	l13285
  8882  004F82                     u11000:
  8883  004F82  000A               	tblrd		*-	;# 
  8884                           
  8885                           ;internal_flash.c: 104: EECON1 = 0x84;
  8886  004F84  0E84               	movlw	132
  8887  004F86  6EA6               	movwf	4006,c	;volsfr
  8888                           
  8889                           ;internal_flash.c: 105: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  8890  004F88  0EB5               	movlw	181
  8891  004F8A  ECF8  F037         	call	__internalFlash_unlockAndActivate
  8892                           
  8893                           ;internal_flash.c: 106: TBLPTR++;
  8894  004F8E  0E01               	movlw	1
  8895  004F90  26F6               	addwf	tblptrl,f,c	;volatile
  8896  004F92  0E00               	movlw	0
  8897  004F94  22F7               	addwfc	tblptrh,f,c	;volatile
  8898  004F96  0E00               	movlw	0
  8899  004F98  22F8               	addwfc	tblptru,f,c	;volatile
  8900  004F9A  2A11               	incf	internalFlash_writePage@block_cntr,f,c
  8901  004F9C  D7DB               	goto	l13279
  8902  004F9E                     l2608:
  8903  004F9E  0012               	return		;funcret
  8904  004FA0                     __end_of_internalFlash_writePage:
  8905                           	opt stack 0
  8906                           tblptru	equ	0xFF8
  8907                           tblptrh	equ	0xFF7
  8908                           tblptrl	equ	0xFF6
  8909                           tablat	equ	0xFF5
  8910                           prodh	equ	0xFF4
  8911                           prodl	equ	0xFF3
  8912                           intcon	equ	0xFF2
  8913                           intcon3	equ	0xFF0
  8914                           postinc0	equ	0xFEE
  8915                           wreg	equ	0xFE8
  8916                           indf1	equ	0xFE7
  8917                           postdec1	equ	0xFE5
  8918                           plusw1	equ	0xFE3
  8919                           fsr1h	equ	0xFE2
  8920                           fsr1l	equ	0xFE1
  8921                           indf2	equ	0xFDF
  8922                           postinc2	equ	0xFDE
  8923                           postdec2	equ	0xFDD
  8924                           plusw2	equ	0xFDB
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function _internalFlash_readPage *****************
  8930 ;; Defined at:
  8931 ;;		line 37 in file "internal_flash.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  page            2   21[COMRAM] unsigned int 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  address         4   23[COMRAM] unsigned long 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;Total ram usage:        6 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; Hardware stack levels required when called:    2
  8952 ;; This function calls:
  8953 ;;		_internalFlash_addressFromPage
  8954 ;;		_internalFlash_read
  8955 ;; This function is called by:
  8956 ;;		__bootloader_program
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text31
  8961  006BFC                     __ptext31:
  8962                           	opt stack 0
  8963  006BFC                     _internalFlash_readPage:
  8964                           	opt stack 26
  8965                           
  8966                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  8967                           
  8968                           ;incstack = 0
  8969  006BFC  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  8970  006C00  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  8971  006C04  EC8A  F037         	call	_internalFlash_addressFromPage	;wreg free
  8972  006C08  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  8973  006C0C  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  8974  006C10  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  8975  006C14  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  8976                           
  8977                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  8978  006C18  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  8979  006C1C  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  8980  006C20  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  8981  006C24  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  8982  006C28  0E04               	movlw	4
  8983  006C2A  6E13               	movwf	internalFlash_read@data_length+1,c
  8984  006C2C  0E00               	movlw	0
  8985  006C2E  6E12               	movwf	internalFlash_read@data_length,c
  8986  006C30  0E00               	movlw	low _pageBuffer
  8987  006C32  6E14               	movwf	internalFlash_read@buffer,c
  8988  006C34  0E08               	movlw	high _pageBuffer
  8989  006C36  6E15               	movwf	internalFlash_read@buffer+1,c
  8990  006C38  ECF2  F036         	call	_internalFlash_read	;wreg free
  8991  006C3C  0012               	return		;funcret
  8992  006C3E                     __end_of_internalFlash_readPage:
  8993                           	opt stack 0
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           intcon3	equ	0xFF0
  9002                           postinc0	equ	0xFEE
  9003                           wreg	equ	0xFE8
  9004                           indf1	equ	0xFE7
  9005                           postdec1	equ	0xFE5
  9006                           plusw1	equ	0xFE3
  9007                           fsr1h	equ	0xFE2
  9008                           fsr1l	equ	0xFE1
  9009                           indf2	equ	0xFDF
  9010                           postinc2	equ	0xFDE
  9011                           postdec2	equ	0xFDD
  9012                           plusw2	equ	0xFDB
  9013                           fsr2h	equ	0xFDA
  9014                           fsr2l	equ	0xFD9
  9015                           status	equ	0xFD8
  9016                           
  9017 ;; *************** function _internalFlash_read *****************
  9018 ;; Defined at:
  9019 ;;		line 150 in file "internal_flash.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  address         4   13[COMRAM] unsigned long 
  9022 ;;  data_length     2   17[COMRAM] unsigned int 
  9023 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9024 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;		None
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      unsigned char 
  9029 ;; Registers used:
  9030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;Total ram usage:        8 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    1
  9043 ;; This function calls:
  9044 ;;		_memcpy
  9045 ;; This function is called by:
  9046 ;;		_internalFlash_readPage
  9047 ;;		__bootloader_verify_program_memory
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text32
  9052  006DE4                     __ptext32:
  9053                           	opt stack 0
  9054  006DE4                     _internalFlash_read:
  9055                           	opt stack 26
  9056                           
  9057                           ;internal_flash.c: 155: if(address >= 0x1FFFF)
  9058                           
  9059                           ;incstack = 0
  9060  006DE4  5011               	movf	internalFlash_read@address+3,w,c
  9061  006DE6  E118               	bnz	l2624
  9062  006DE8  280E               	incf	internalFlash_read@address,w,c
  9063  006DEA  0EFF               	movlw	255
  9064  006DEC  580F               	subwfb	internalFlash_read@address+1,w,c
  9065  006DEE  0E01               	movlw	1
  9066  006DF0  5810               	subwfb	internalFlash_read@address+2,w,c
  9067  006DF2  B0D8               	btfsc	status,0,c
  9068  006DF4  0012               	return	
  9069                           
  9070                           ;internal_flash.c: 158: };internal_flash.c: 161: memcpy;internal_flash.c: 162: (;interna
      +                          l_flash.c: 163: (void*)buffer,;internal_flash.c: 164: (const void*)(address),;internal_f
      +                          lash.c: 165: data_length;internal_flash.c: 166: );
  9071                           
  9072                           ;internal_flash.c: 156: {;internal_flash.c: 157: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9073  006DF6  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9074  006DFA  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9075  006DFE  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9076  006E02  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9077  006E06  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9078  006E0A  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9079  006E0E  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9080  006E12  EC07  F031         	call	_memcpy	;wreg free
  9081  006E16  0012               	return	
  9082  006E18                     l2624:
  9083  006E18  0012               	return		;funcret
  9084  006E1A                     __end_of_internalFlash_read:
  9085                           	opt stack 0
  9086                           tblptru	equ	0xFF8
  9087                           tblptrh	equ	0xFF7
  9088                           tblptrl	equ	0xFF6
  9089                           tablat	equ	0xFF5
  9090                           prodh	equ	0xFF4
  9091                           prodl	equ	0xFF3
  9092                           intcon	equ	0xFF2
  9093                           intcon3	equ	0xFF0
  9094                           postinc0	equ	0xFEE
  9095                           wreg	equ	0xFE8
  9096                           indf1	equ	0xFE7
  9097                           postdec1	equ	0xFE5
  9098                           plusw1	equ	0xFE3
  9099                           fsr1h	equ	0xFE2
  9100                           fsr1l	equ	0xFE1
  9101                           indf2	equ	0xFDF
  9102                           postinc2	equ	0xFDE
  9103                           postdec2	equ	0xFDD
  9104                           plusw2	equ	0xFDB
  9105                           fsr2h	equ	0xFDA
  9106                           fsr2l	equ	0xFD9
  9107                           status	equ	0xFD8
  9108                           
  9109 ;; *************** function _internalFlash_pageFromAddress *****************
  9110 ;; Defined at:
  9111 ;;		line 171 in file "internal_flash.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  address         4    0[COMRAM] unsigned long 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;		None
  9116 ;; Return value:  Size  Location     Type
  9117 ;;                  2    0[COMRAM] unsigned int 
  9118 ;; Registers used:
  9119 ;;		wreg, status,2, status,0
  9120 ;; Tracked objects:
  9121 ;;		On entry : 0/0
  9122 ;;		On exit  : 0/0
  9123 ;;		Unchanged: 0/0
  9124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9128 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9129 ;;Total ram usage:        5 bytes
  9130 ;; Hardware stack levels used:    1
  9131 ;; This function calls:
  9132 ;;		Nothing
  9133 ;; This function is called by:
  9134 ;;		__bootloader_program
  9135 ;; This function uses a non-reentrant model
  9136 ;;
  9137                           
  9138                           	psect	text33
  9139  007242                     __ptext33:
  9140                           	opt stack 0
  9141  007242                     _internalFlash_pageFromAddress:
  9142                           	opt stack 28
  9143                           
  9144                           ;internal_flash.c: 173: address >>= 10;
  9145                           
  9146                           ;incstack = 0
  9147  007242  0E0A               	movlw	10
  9148  007244  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9149  007246                     u10935:
  9150  007246  90D8               	bcf	status,0,c
  9151  007248  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9152  00724A  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9153  00724C  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9154  00724E  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9155  007250  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9156  007252  D7F9               	goto	u10935
  9157                           
  9158                           ;internal_flash.c: 174: return (uint16_t) address;
  9159  007254  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9160  007258  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9161  00725C  0012               	return	
  9162  00725E                     __end_of_internalFlash_pageFromAddress:
  9163                           	opt stack 0
  9164                           tblptru	equ	0xFF8
  9165                           tblptrh	equ	0xFF7
  9166                           tblptrl	equ	0xFF6
  9167                           tablat	equ	0xFF5
  9168                           prodh	equ	0xFF4
  9169                           prodl	equ	0xFF3
  9170                           intcon	equ	0xFF2
  9171                           intcon3	equ	0xFF0
  9172                           postinc0	equ	0xFEE
  9173                           wreg	equ	0xFE8
  9174                           indf1	equ	0xFE7
  9175                           postdec1	equ	0xFE5
  9176                           plusw1	equ	0xFE3
  9177                           fsr1h	equ	0xFE2
  9178                           fsr1l	equ	0xFE1
  9179                           indf2	equ	0xFDF
  9180                           postinc2	equ	0xFDE
  9181                           postdec2	equ	0xFDD
  9182                           plusw2	equ	0xFDB
  9183                           fsr2h	equ	0xFDA
  9184                           fsr2l	equ	0xFD9
  9185                           status	equ	0xFD8
  9186                           
  9187 ;; *************** function _internalFlash_getBuffer *****************
  9188 ;; Defined at:
  9189 ;;		line 32 in file "internal_flash.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;		None
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;		None
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  2    0[COMRAM] PTR unsigned char 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9207 ;;Total ram usage:        2 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		__bootloader_program
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           	psect	text34
  9217  0073C4                     __ptext34:
  9218                           	opt stack 0
  9219  0073C4                     _internalFlash_getBuffer:
  9220                           	opt stack 28
  9221                           
  9222                           ;internal_flash.c: 34: return pageBuffer;
  9223                           
  9224                           ;incstack = 0
  9225  0073C4  0E00               	movlw	low _pageBuffer
  9226  0073C6  6E01               	movwf	?_internalFlash_getBuffer,c
  9227  0073C8  0E08               	movlw	high _pageBuffer
  9228  0073CA  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9229  0073CC  0012               	return	
  9230  0073CE                     __end_of_internalFlash_getBuffer:
  9231                           	opt stack 0
  9232                           tblptru	equ	0xFF8
  9233                           tblptrh	equ	0xFF7
  9234                           tblptrl	equ	0xFF6
  9235                           tablat	equ	0xFF5
  9236                           prodh	equ	0xFF4
  9237                           prodl	equ	0xFF3
  9238                           intcon	equ	0xFF2
  9239                           intcon3	equ	0xFF0
  9240                           postinc0	equ	0xFEE
  9241                           wreg	equ	0xFE8
  9242                           indf1	equ	0xFE7
  9243                           postdec1	equ	0xFE5
  9244                           plusw1	equ	0xFE3
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           indf2	equ	0xFDF
  9248                           postinc2	equ	0xFDE
  9249                           postdec2	equ	0xFDD
  9250                           plusw2	equ	0xFDB
  9251                           fsr2h	equ	0xFDA
  9252                           fsr2l	equ	0xFD9
  9253                           status	equ	0xFD8
  9254                           
  9255 ;; *************** function _internalFlash_erasePage *****************
  9256 ;; Defined at:
  9257 ;;		line 44 in file "internal_flash.c"
  9258 ;; Parameters:    Size  Location     Type
  9259 ;;  page            2    8[COMRAM] unsigned int 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  address         4   14[COMRAM] unsigned long 
  9262 ;; Return value:  Size  Location     Type
  9263 ;;                  1    wreg      void 
  9264 ;; Registers used:
  9265 ;;		wreg, status,2, status,0, cstack
  9266 ;; Tracked objects:
  9267 ;;		On entry : 0/0
  9268 ;;		On exit  : 0/0
  9269 ;;		Unchanged: 0/0
  9270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9273 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9274 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9275 ;;Total ram usage:       10 bytes
  9276 ;; Hardware stack levels used:    1
  9277 ;; Hardware stack levels required when called:    1
  9278 ;; This function calls:
  9279 ;;		__internalFlash_unlockAndActivate
  9280 ;;		_internalFlash_addressFromPage
  9281 ;; This function is called by:
  9282 ;;		__bootloader_program
  9283 ;; This function uses a non-reentrant model
  9284 ;;
  9285                           
  9286                           	psect	text35
  9287  0060D0                     __ptext35:
  9288                           	opt stack 0
  9289  0060D0                     _internalFlash_erasePage:
  9290                           	opt stack 27
  9291                           
  9292                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = internalFlash_a
      +                          ddressFromPage(page);
  9293                           
  9294                           ;incstack = 0
  9295  0060D0  C009  F001         	movff	internalFlash_erasePage@page,internalFlash_addressFromPage@page
  9296  0060D4  C00A  F002         	movff	internalFlash_erasePage@page+1,internalFlash_addressFromPage@page+1
  9297  0060D8  EC8A  F037         	call	_internalFlash_addressFromPage	;wreg free
  9298  0060DC  C001  F00F         	movff	?_internalFlash_addressFromPage,internalFlash_erasePage@address
  9299  0060E0  C002  F010         	movff	?_internalFlash_addressFromPage+1,internalFlash_erasePage@address+1
  9300  0060E4  C003  F011         	movff	?_internalFlash_addressFromPage+2,internalFlash_erasePage@address+2
  9301  0060E8  C004  F012         	movff	?_internalFlash_addressFromPage+3,internalFlash_erasePage@address+3
  9302                           
  9303                           ;internal_flash.c: 50: TBLPTR = address;
  9304  0060EC  C00F  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9305  0060F0  C010  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9306  0060F4  C011  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9307                           
  9308                           ;internal_flash.c: 53: if((address<0x9000) || (address+1023>=0x1FFFF))
  9309  0060F8  5012               	movf	internalFlash_erasePage@address+3,w,c
  9310  0060FA  1011               	iorwf	internalFlash_erasePage@address+2,w,c
  9311  0060FC  E104               	bnz	u10940
  9312  0060FE  0E90               	movlw	144
  9313  006100  5C10               	subwf	internalFlash_erasePage@address+1,w,c
  9314  006102  A0D8               	btfss	status,0,c
  9315  006104  0012               	return	
  9316  006106                     u10940:
  9317  006106  0EFF               	movlw	255
  9318  006108  240F               	addwf	internalFlash_erasePage@address,w,c
  9319  00610A  6E0B               	movwf	??_internalFlash_erasePage& (0+255),c
  9320  00610C  0E03               	movlw	3
  9321  00610E  2010               	addwfc	internalFlash_erasePage@address+1,w,c
  9322  006110  6E0C               	movwf	(??_internalFlash_erasePage+1)& (0+255),c
  9323  006112  0E00               	movlw	0
  9324  006114  2011               	addwfc	internalFlash_erasePage@address+2,w,c
  9325  006116  6E0D               	movwf	(??_internalFlash_erasePage+2)& (0+255),c
  9326  006118  0E00               	movlw	0
  9327  00611A  2012               	addwfc	internalFlash_erasePage@address+3,w,c
  9328  00611C  6E0E               	movwf	(??_internalFlash_erasePage+3)& (0+255),c
  9329  00611E  500E               	movf	??_internalFlash_erasePage+3,w,c
  9330  006120  E10C               	bnz	l2602
  9331  006122  280B               	incf	??_internalFlash_erasePage,w,c
  9332  006124  0EFF               	movlw	255
  9333  006126  580C               	subwfb	??_internalFlash_erasePage+1,w,c
  9334  006128  0E01               	movlw	1
  9335  00612A  580D               	subwfb	??_internalFlash_erasePage+2,w,c
  9336  00612C  B0D8               	btfsc	status,0,c
  9337  00612E  0012               	return	
  9338                           
  9339                           ;internal_flash.c: 56: };internal_flash.c: 59: EECON1bits.WREN = 1;
  9340                           
  9341                           ;internal_flash.c: 54: {;internal_flash.c: 55: return;
  9342  006130  84A6               	bsf	4006,2,c	;volsfr
  9343                           
  9344                           ;internal_flash.c: 60: EECON1bits.FREE = 1;
  9345  006132  88A6               	bsf	4006,4,c	;volsfr
  9346                           
  9347                           ;internal_flash.c: 62: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9348  006134  0EB5               	movlw	181
  9349  006136  ECF8  F037         	call	__internalFlash_unlockAndActivate
  9350  00613A                     l2602:
  9351  00613A  0012               	return		;funcret
  9352  00613C                     __end_of_internalFlash_erasePage:
  9353                           	opt stack 0
  9354                           tblptru	equ	0xFF8
  9355                           tblptrh	equ	0xFF7
  9356                           tblptrl	equ	0xFF6
  9357                           tablat	equ	0xFF5
  9358                           prodh	equ	0xFF4
  9359                           prodl	equ	0xFF3
  9360                           intcon	equ	0xFF2
  9361                           intcon3	equ	0xFF0
  9362                           postinc0	equ	0xFEE
  9363                           wreg	equ	0xFE8
  9364                           indf1	equ	0xFE7
  9365                           postdec1	equ	0xFE5
  9366                           plusw1	equ	0xFE3
  9367                           fsr1h	equ	0xFE2
  9368                           fsr1l	equ	0xFE1
  9369                           indf2	equ	0xFDF
  9370                           postinc2	equ	0xFDE
  9371                           postdec2	equ	0xFDD
  9372                           plusw2	equ	0xFDB
  9373                           fsr2h	equ	0xFDA
  9374                           fsr2l	equ	0xFD9
  9375                           status	equ	0xFD8
  9376                           
  9377 ;; *************** function __internalFlash_unlockAndActivate *****************
  9378 ;; Defined at:
  9379 ;;		line 112 in file "internal_flash.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  UnlockKey       1    wreg     unsigned char 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9384 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9385 ;; Return value:  Size  Location     Type
  9386 ;;                  1    wreg      void 
  9387 ;; Registers used:
  9388 ;;		wreg, status,2, status,0
  9389 ;; Tracked objects:
  9390 ;;		On entry : 0/0
  9391 ;;		On exit  : 0/0
  9392 ;;		Unchanged: 0/0
  9393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9398 ;;Total ram usage:        2 bytes
  9399 ;; Hardware stack levels used:    1
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_internalFlash_erasePage
  9404 ;;		_internalFlash_writePage
  9405 ;;		_EraseBlock
  9406 ;; This function uses a non-reentrant model
  9407 ;;
  9408                           
  9409                           	psect	text36
  9410  006FF0                     __ptext36:
  9411                           	opt stack 0
  9412  006FF0                     __internalFlash_unlockAndActivate:
  9413                           	opt stack 27
  9414                           
  9415                           ;incstack = 0
  9416                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9417  006FF0  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9418                           
  9419                           ;internal_flash.c: 114: uint8_t InterruptEnableSave;;internal_flash.c: 121: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9420  006FF2  0EB5               	movlw	181
  9421  006FF4  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9422  006FF6  B4D8               	btfsc	status,2,c
  9423  006FF8  D002               	goto	l2615
  9424                           
  9425                           ;internal_flash.c: 122: {;internal_flash.c: 123: EECON1bits.WREN = 0;
  9426  006FFA  94A6               	bcf	4006,2,c	;volsfr
  9427                           
  9428                           ;internal_flash.c: 124: return;
  9429  006FFC  0012               	return	
  9430  006FFE                     l2615:
  9431                           
  9432                           ;internal_flash.c: 125: };internal_flash.c: 127: InterruptEnableSave = INTCON;
  9433  006FFE  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9434                           
  9435                           ;internal_flash.c: 128: INTCONbits.GIEH = 0;
  9436  007002  9EF2               	bcf	intcon,7,c	;volatile
  9437                           
  9438                           ;internal_flash.c: 129: EECON2 = 0x55;
  9439  007004  0E55               	movlw	85
  9440  007006  6EA7               	movwf	4007,c	;volsfr
  9441                           
  9442                           ;internal_flash.c: 130: EECON2 = 0xAA;
  9443  007008  0EAA               	movlw	170
  9444  00700A  6EA7               	movwf	4007,c	;volsfr
  9445                           
  9446                           ;internal_flash.c: 131: EECON1bits.WR = 1;
  9447  00700C  82A6               	bsf	4006,1,c	;volsfr
  9448                           
  9449                           ;internal_flash.c: 132: EECON1bits.WREN = 0;
  9450  00700E  94A6               	bcf	4006,2,c	;volsfr
  9451                           
  9452                           ;internal_flash.c: 134: if(InterruptEnableSave & 0x80)
  9453  007010  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9454  007012  0012               	return	
  9455                           
  9456                           ;internal_flash.c: 135: {;internal_flash.c: 136: INTCONbits.GIEH = 1;
  9457  007014  8EF2               	bsf	intcon,7,c	;volatile
  9458  007016  0012               	return	
  9459  007018                     __end_of__internalFlash_unlockAndActivate:
  9460                           	opt stack 0
  9461                           tblptru	equ	0xFF8
  9462                           tblptrh	equ	0xFF7
  9463                           tblptrl	equ	0xFF6
  9464                           tablat	equ	0xFF5
  9465                           prodh	equ	0xFF4
  9466                           prodl	equ	0xFF3
  9467                           intcon	equ	0xFF2
  9468                           intcon3	equ	0xFF0
  9469                           postinc0	equ	0xFEE
  9470                           wreg	equ	0xFE8
  9471                           indf1	equ	0xFE7
  9472                           postdec1	equ	0xFE5
  9473                           plusw1	equ	0xFE3
  9474                           fsr1h	equ	0xFE2
  9475                           fsr1l	equ	0xFE1
  9476                           indf2	equ	0xFDF
  9477                           postinc2	equ	0xFDE
  9478                           postdec2	equ	0xFDD
  9479                           plusw2	equ	0xFDB
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8
  9483                           
  9484 ;; *************** function _internalFlash_addressWithinPage *****************
  9485 ;; Defined at:
  9486 ;;		line 185 in file "internal_flash.c"
  9487 ;; Parameters:    Size  Location     Type
  9488 ;;  address         4    8[COMRAM] unsigned long 
  9489 ;;  page            2   12[COMRAM] unsigned int 
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  2    8[COMRAM] unsigned int 
  9494 ;; Registers used:
  9495 ;;		wreg, status,2, status,0, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9501 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9502 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9503 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9504 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9505 ;;Total ram usage:       14 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:    1
  9508 ;; This function calls:
  9509 ;;		_internalFlash_addressFromPage
  9510 ;; This function is called by:
  9511 ;;		__bootloader_program
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text37
  9516  006400                     __ptext37:
  9517                           	opt stack 0
  9518  006400                     _internalFlash_addressWithinPage:
  9519                           	opt stack 27
  9520                           
  9521                           ;internal_flash.c: 187: uint32_t page_start_address;;internal_flash.c: 188: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9522                           
  9523                           ;incstack = 0
  9524  006400  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9525  006404  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9526  006408  EC8A  F037         	call	_internalFlash_addressFromPage	;wreg free
  9527  00640C  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9528  006410  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9529  006414  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9530  006418  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9531                           
  9532                           ;internal_flash.c: 189: address = address - page_start_address;
  9533  00641C  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9534  006420  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9535  006424  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9536  006428  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9537  00642C  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9538  00642E  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9539  006430  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9540  006432  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9541  006434  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9542  006436  0E00               	movlw	0
  9543  006438  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9544  00643A  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9545  00643C  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9546  00643E  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9547  006440  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9548  006442  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9549  006444  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9550  006446  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9551  006448  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9552  00644A  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9553  00644C  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9554  00644E  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9555  006450  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9556  006452  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9557  006454  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9558                           
  9559                           ;internal_flash.c: 190: return (uint16_t) address;
  9560  006456  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9561  00645A  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9562  00645E  0012               	return	
  9563  006460                     __end_of_internalFlash_addressWithinPage:
  9564                           	opt stack 0
  9565                           tblptru	equ	0xFF8
  9566                           tblptrh	equ	0xFF7
  9567                           tblptrl	equ	0xFF6
  9568                           tablat	equ	0xFF5
  9569                           prodh	equ	0xFF4
  9570                           prodl	equ	0xFF3
  9571                           intcon	equ	0xFF2
  9572                           intcon3	equ	0xFF0
  9573                           postinc0	equ	0xFEE
  9574                           wreg	equ	0xFE8
  9575                           indf1	equ	0xFE7
  9576                           postdec1	equ	0xFE5
  9577                           plusw1	equ	0xFE3
  9578                           fsr1h	equ	0xFE2
  9579                           fsr1l	equ	0xFE1
  9580                           indf2	equ	0xFDF
  9581                           postinc2	equ	0xFDE
  9582                           postdec2	equ	0xFDD
  9583                           plusw2	equ	0xFDB
  9584                           fsr2h	equ	0xFDA
  9585                           fsr2l	equ	0xFD9
  9586                           status	equ	0xFD8
  9587                           
  9588 ;; *************** function _internalFlash_addressFromPage *****************
  9589 ;; Defined at:
  9590 ;;		line 177 in file "internal_flash.c"
  9591 ;; Parameters:    Size  Location     Type
  9592 ;;  page            2    0[COMRAM] unsigned int 
  9593 ;; Auto vars:     Size  Location     Type
  9594 ;;  address         4    4[COMRAM] unsigned long 
  9595 ;; Return value:  Size  Location     Type
  9596 ;;                  4    0[COMRAM] unsigned long 
  9597 ;; Registers used:
  9598 ;;		wreg, status,2, status,0
  9599 ;; Tracked objects:
  9600 ;;		On entry : 0/0
  9601 ;;		On exit  : 0/0
  9602 ;;		Unchanged: 0/0
  9603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9605 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;Total ram usage:        8 bytes
  9609 ;; Hardware stack levels used:    1
  9610 ;; This function calls:
  9611 ;;		Nothing
  9612 ;; This function is called by:
  9613 ;;		_internalFlash_readPage
  9614 ;;		_internalFlash_erasePage
  9615 ;;		_internalFlash_writePage
  9616 ;;		_internalFlash_addressWithinPage
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text38
  9621  006F14                     __ptext38:
  9622                           	opt stack 0
  9623  006F14                     _internalFlash_addressFromPage:
  9624                           	opt stack 27
  9625                           
  9626                           ;internal_flash.c: 179: uint32_t address;;internal_flash.c: 180: address = (uint32_t) pa
      +                          ge;
  9627                           
  9628                           ;incstack = 0
  9629  006F14  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9630  006F18  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9631  006F1C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9632  006F1E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9633                           
  9634                           ;internal_flash.c: 181: address <<= 10;
  9635  006F20  0E0A               	movlw	10
  9636  006F22                     u10215:
  9637  006F22  90D8               	bcf	status,0,c
  9638  006F24  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9639  006F26  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9640  006F28  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9641  006F2A  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9642  006F2C  2EE8               	decfsz	wreg,f,c
  9643  006F2E  D7F9               	goto	u10215
  9644                           
  9645                           ;internal_flash.c: 182: return address;
  9646  006F30  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9647  006F34  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9648  006F38  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9649  006F3C  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9650  006F40  0012               	return	
  9651  006F42                     __end_of_internalFlash_addressFromPage:
  9652                           	opt stack 0
  9653                           tblptru	equ	0xFF8
  9654                           tblptrh	equ	0xFF7
  9655                           tblptrl	equ	0xFF6
  9656                           tablat	equ	0xFF5
  9657                           prodh	equ	0xFF4
  9658                           prodl	equ	0xFF3
  9659                           intcon	equ	0xFF2
  9660                           intcon3	equ	0xFF0
  9661                           postinc0	equ	0xFEE
  9662                           wreg	equ	0xFE8
  9663                           indf1	equ	0xFE7
  9664                           postdec1	equ	0xFE5
  9665                           plusw1	equ	0xFE3
  9666                           fsr1h	equ	0xFE2
  9667                           fsr1l	equ	0xFE1
  9668                           indf2	equ	0xFDF
  9669                           postinc2	equ	0xFDE
  9670                           postdec2	equ	0xFDD
  9671                           plusw2	equ	0xFDB
  9672                           fsr2h	equ	0xFDA
  9673                           fsr2l	equ	0xFD9
  9674                           status	equ	0xFD8
  9675                           
  9676 ;; *************** function _fat_read_from_file_fast *****************
  9677 ;; Defined at:
  9678 ;;		line 787 in file "fat16.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  start_byte      4   65[COMRAM] unsigned long 
  9681 ;;  length          4   69[COMRAM] unsigned long 
  9682 ;;  data            2   73[COMRAM] PTR unsigned char 
  9683 ;;		 -> file_buffer(50), 
  9684 ;;  cluster         2   75[COMRAM] PTR unsigned int 
  9685 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
  9686 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
  9687 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  position        4   10[BANK0 ] unsigned long 
  9690 ;;  read_length     2    8[BANK0 ] unsigned int 
  9691 ;;  needed_clust    2    6[BANK0 ] unsigned int 
  9692 ;;  offset          2    4[BANK0 ] unsigned int 
  9693 ;;  working_clus    2    2[BANK0 ] unsigned int 
  9694 ;;  sector          2    0[BANK0 ] unsigned int 
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      unsigned char 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/0
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9704 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9705 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9706 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9707 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9708 ;;Total ram usage:       40 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:    7
  9711 ;; This function calls:
  9712 ;;		__data_sector_from_cluster
  9713 ;;		__find_nth_cluster
  9714 ;;		__read_fat
  9715 ;;		_flash_partial_read
  9716 ;; This function is called by:
  9717 ;;		__bootloader_verify_file
  9718 ;;		__bootloader_program
  9719 ;;		_fat_read_from_file
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           	psect	text39
  9724  001C16                     __ptext39:
  9725                           	opt stack 0
  9726  001C16                     _fat_read_from_file_fast:
  9727                           	opt stack 21
  9728                           
  9729                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
  9730                           
  9731                           ;incstack = 0
  9732  001C16  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
  9733  001C1A  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
  9734  001C1E  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
  9735  001C22  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
  9736  001C26  0E0A               	movlw	10
  9737  001C28  D005               	goto	u10650
  9738  001C2A                     u10655:
  9739  001C2A  90D8               	bcf	status,0,c
  9740  001C2C  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
  9741  001C2E  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
  9742  001C30  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
  9743  001C32  3250               	rrcf	??_fat_read_from_file_fast,f,c
  9744  001C34                     u10650:
  9745  001C34  2EE8               	decfsz	wreg,f,c
  9746  001C36  D7F9               	goto	u10655
  9747  001C38  C050  F0BB         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
  9748  001C3C  C051  F0BC         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
  9749                           
  9750                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
  9751  001C40  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9752  001C44  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9753  001C48  50DE               	movf	postinc2,w,c
  9754  001C4A  0100               	movlb	0	; () banked
  9755  001C4C  5DBB               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9756  001C4E  50DE               	movf	postinc2,w,c
  9757  001C50  59BC               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9758  001C52  B0D8               	btfsc	status,0,c
  9759  001C54  D002               	goto	l2130
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
  9763  001C56  0EFF               	movlw	255
  9764                           
  9765                           ; BSR set to: 0
  9766  001C58  0012               	return	
  9767  001C5A                     l2130:
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
  9771                           
  9772                           ; BSR set to: 0
  9773  001C5A  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9774  001C5E  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9775  001C62  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
  9776  001C66  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
  9777  001C6A  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9778  001C6E  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9779  001C72  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
  9780  001C76  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
  9781  001C7A  1E50               	comf	??_fat_read_from_file_fast,f,c
  9782  001C7C  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9783  001C7E  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9784  001C80  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9785  001C82  51BB               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
  9786  001C84  2450               	addwf	??_fat_read_from_file_fast,w,c
  9787  001C86  6E3A               	movwf	__find_nth_cluster@n,c
  9788  001C88  51BC               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
  9789  001C8A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9790  001C8C  6E3B               	movwf	__find_nth_cluster@n+1,c
  9791  001C8E  EC6D  F02B         	call	__find_nth_cluster	;wreg free
  9792  001C92  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9793  001C96  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9794  001C9A  C038  FFDE         	movff	?__find_nth_cluster,postinc2
  9795  001C9E  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
  9796                           
  9797                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
  9798  001CA2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
  9799  001CA6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
  9800  001CAA  C0BB  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
  9801  001CAE  C0BC  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
  9802                           
  9803                           ;fat16.c: 813: working_cluster = (*cluster);
  9804  001CB2  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
  9805  001CB6  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
  9806  001CBA  CFDE F0B7          	movff	postinc2,fat_read_from_file_fast@working_cluster
  9807  001CBE  CFDD F0B8          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
  9808                           
  9809                           ;fat16.c: 816: position = (needed_cluster << 9);
  9810  001CC2  C0BB  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
  9811  001CC6  C0BC  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
  9812  001CCA  0E09               	movlw	9
  9813  001CCC                     u10675:
  9814  001CCC  90D8               	bcf	status,0,c
  9815  001CCE  3650               	rlcf	??_fat_read_from_file_fast,f,c
  9816  001CD0  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
  9817  001CD2  2EE8               	decfsz	wreg,f,c
  9818  001CD4  D7FB               	goto	u10675
  9819  001CD6  C050  F0BF         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
  9820  001CDA  C051  F0C0         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
  9821  001CDE  0100               	movlb	0	; () banked
  9822  001CE0  6BC1               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
  9823  001CE2  6BC2               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;fat16.c: 817: offset = start_byte - position;
  9827  001CE4  C0BF  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9828  001CE8  C0C0  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9829  001CEC  1E50               	comf	??_fat_read_from_file_fast,f,c
  9830  001CEE  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9831  001CF0  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9832  001CF2  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9833  001CF4  5042               	movf	fat_read_from_file_fast@start_byte,w,c
  9834  001CF6  2450               	addwf	??_fat_read_from_file_fast,w,c
  9835  001CF8  6FB9               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9836  001CFA  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
  9837  001CFC  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9838  001CFE  6FBA               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9839                           
  9840                           ; BSR set to: 0
  9841                           ;fat16.c: 820: position = 0;
  9842  001D00  0E00               	movlw	0
  9843  001D02  6FBF               	movwf	fat_read_from_file_fast@position& (0+255),b
  9844  001D04  0E00               	movlw	0
  9845  001D06  6FC0               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
  9846  001D08  0E00               	movlw	0
  9847  001D0A  6FC1               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
  9848  001D0C  0E00               	movlw	0
  9849  001D0E  6FC2               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
  9850                           
  9851                           ;fat16.c: 821: while(position < length)
  9852  001D10  D089               	goto	l2132
  9853  001D12                     
  9854                           ; BSR set to: 0
  9855                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
  9856                           
  9857                           ; BSR set to: 0
  9858  001D12  0E02               	movlw	2
  9859  001D14  19BA               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
  9860  001D16  11B9               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
  9861  001D18  A4D8               	btfss	status,2,c
  9862  001D1A  D00F               	goto	l2134
  9863                           
  9864                           ; BSR set to: 0
  9865                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
  9866  001D1C  C0B7  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
  9867  001D20  C0B8  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
  9868  001D24  EC12  F033         	call	__read_fat	;wreg free
  9869  001D28  C030  F0B7         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
  9870  001D2C  C031  F0B8         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
  9871                           
  9872                           ;fat16.c: 828: offset = 0;
  9873  001D30  0E00               	movlw	0
  9874  001D32  0100               	movlb	0	; () banked
  9875  001D34  6FBA               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
  9876  001D36  0E00               	movlw	0
  9877  001D38  6FB9               	movwf	fat_read_from_file_fast@offset& (0+255),b
  9878  001D3A                     l2134:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
  9882                           
  9883                           ; BSR set to: 0
  9884  001D3A  C0B7  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
  9885  001D3E  C0B8  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
  9886  001D42  ECD5  F039         	call	__data_sector_from_cluster	;wreg free
  9887  001D46  C001  F0B5         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
  9888  001D4A  C002  F0B6         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
  9889                           
  9890                           ;fat16.c: 835: read_length = 512 - offset;
  9891  001D4E  C0B9  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
  9892  001D52  C0BA  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
  9893  001D56  1E50               	comf	??_fat_read_from_file_fast,f,c
  9894  001D58  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9895  001D5A  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9896  001D5C  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9897  001D5E  0E00               	movlw	0
  9898  001D60  2450               	addwf	??_fat_read_from_file_fast,w,c
  9899  001D62  0100               	movlb	0	; () banked
  9900  001D64  6FBD               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9901  001D66  0E02               	movlw	2
  9902  001D68  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9903  001D6A  6FBE               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;fat16.c: 836: if(read_length > (length-position))
  9907  001D6C  51BD               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9908  001D6E  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
  9909  001D70  51BE               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9910  001D72  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
  9911  001D74  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
  9912  001D76  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
  9913  001D78  C0BF  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
  9914  001D7C  C0C0  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
  9915  001D80  C0C1  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
  9916  001D84  C0C2  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
  9917  001D88  1E54               	comf	??_fat_read_from_file_fast+4,f,c
  9918  001D8A  1E55               	comf	??_fat_read_from_file_fast+5,f,c
  9919  001D8C  1E56               	comf	??_fat_read_from_file_fast+6,f,c
  9920  001D8E  1E57               	comf	??_fat_read_from_file_fast+7,f,c
  9921  001D90  2A54               	incf	??_fat_read_from_file_fast+4,f,c
  9922  001D92  0E00               	movlw	0
  9923  001D94  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
  9924  001D96  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
  9925  001D98  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
  9926  001D9A  5046               	movf	fat_read_from_file_fast@length,w,c
  9927  001D9C  2454               	addwf	??_fat_read_from_file_fast+4,w,c
  9928  001D9E  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
  9929  001DA0  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9930  001DA2  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
  9931  001DA4  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
  9932  001DA6  5048               	movf	fat_read_from_file_fast@length+2,w,c
  9933  001DA8  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
  9934  001DAA  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
  9935  001DAC  5049               	movf	fat_read_from_file_fast@length+3,w,c
  9936  001DAE  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
  9937  001DB0  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
  9938  001DB2  5050               	movf	??_fat_read_from_file_fast,w,c
  9939  001DB4  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
  9940  001DB6  5051               	movf	??_fat_read_from_file_fast+1,w,c
  9941  001DB8  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
  9942  001DBA  5052               	movf	??_fat_read_from_file_fast+2,w,c
  9943  001DBC  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
  9944  001DBE  5053               	movf	??_fat_read_from_file_fast+3,w,c
  9945  001DC0  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
  9946  001DC2  B0D8               	btfsc	status,0,c
  9947  001DC4  D00E               	goto	l2135
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
  9951  001DC6  C0BF  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
  9952  001DCA  C0C0  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
  9953  001DCE  1E50               	comf	??_fat_read_from_file_fast,f,c
  9954  001DD0  1E51               	comf	??_fat_read_from_file_fast+1,f,c
  9955  001DD2  4A50               	infsnz	??_fat_read_from_file_fast,f,c
  9956  001DD4  2A51               	incf	??_fat_read_from_file_fast+1,f,c
  9957  001DD6  5046               	movf	fat_read_from_file_fast@length,w,c
  9958  001DD8  2450               	addwf	??_fat_read_from_file_fast,w,c
  9959  001DDA  6FBD               	movwf	fat_read_from_file_fast@read_length& (0+255),b
  9960  001DDC  5047               	movf	fat_read_from_file_fast@length+1,w,c
  9961  001DDE  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
  9962  001DE0  6FBE               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
  9963  001DE2                     l2135:
  9964                           
  9965                           ; BSR set to: 0
  9966                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
  9967                           
  9968                           ; BSR set to: 0
  9969  001DE2  C0B5  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
  9970  001DE6  C0B6  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
  9971  001DEA  C0B9  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
  9972  001DEE  C0BA  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
  9973  001DF2  C0BD  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
  9974  001DF6  C0BE  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
  9975  001DFA  51BF               	movf	fat_read_from_file_fast@position& (0+255),w,b
  9976  001DFC  244A               	addwf	fat_read_from_file_fast@data,w,c
  9977  001DFE  6E2E               	movwf	flash_partial_read@data,c
  9978  001E00  51C0               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
  9979  001E02  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
  9980  001E04  6E2F               	movwf	flash_partial_read@data+1,c
  9981  001E06  EC33  F038         	call	_flash_partial_read	;wreg free
  9982                           
  9983                           ;fat16.c: 846: position += read_length;
  9984  001E0A  0100               	movlb	0	; () banked
  9985  001E0C  51BD               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9986  001E0E  27BF               	addwf	fat_read_from_file_fast@position& (0+255),f,b
  9987  001E10  51BE               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9988  001E12  23C0               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
  9989  001E14  0E00               	movlw	0
  9990  001E16  23C1               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
  9991  001E18  0E00               	movlw	0
  9992  001E1A  23C2               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;fat16.c: 847: offset += read_length;
  9996  001E1C  51BD               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
  9997  001E1E  27B9               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
  9998  001E20  51BE               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
  9999  001E22  23BA               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 10000  001E24                     l2132:
 10001                           
 10002                           ; BSR set to: 0
 10003                           
 10004                           ; BSR set to: 0
 10005  001E24  5046               	movf	fat_read_from_file_fast@length,w,c
 10006  001E26  5DBF               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 10007  001E28  5047               	movf	fat_read_from_file_fast@length+1,w,c
 10008  001E2A  59C0               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 10009  001E2C  5048               	movf	fat_read_from_file_fast@length+2,w,c
 10010  001E2E  59C1               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 10011  001E30  5049               	movf	fat_read_from_file_fast@length+3,w,c
 10012  001E32  59C2               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 10013  001E34  A0D8               	btfss	status,0,c
 10014  001E36  D76D               	goto	l2133
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 10018                           
 10019                           ; BSR set to: 0
 10020  001E38  0E00               	movlw	0
 10021  001E3A  0012               	return	
 10022  001E3C                     __end_of_fat_read_from_file_fast:
 10023                           	opt stack 0
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon3	equ	0xFF0
 10032                           postinc0	equ	0xFEE
 10033                           wreg	equ	0xFE8
 10034                           indf1	equ	0xFE7
 10035                           postdec1	equ	0xFE5
 10036                           plusw1	equ	0xFE3
 10037                           fsr1h	equ	0xFE2
 10038                           fsr1l	equ	0xFE1
 10039                           indf2	equ	0xFDF
 10040                           postinc2	equ	0xFDE
 10041                           postdec2	equ	0xFDD
 10042                           plusw2	equ	0xFDB
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function __find_nth_cluster *****************
 10048 ;; Defined at:
 10049 ;;		line 182 in file "fat16.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  cluster         2   55[COMRAM] unsigned int 
 10052 ;;  n               2   57[COMRAM] unsigned int 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  sector          2   63[COMRAM] unsigned int 
 10055 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 10056 ;;  offset          2   59[COMRAM] unsigned int 
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  2   55[COMRAM] unsigned int 
 10059 ;; Registers used:
 10060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10066 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10067 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10069 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10070 ;;Total ram usage:       10 bytes
 10071 ;; Hardware stack levels used:    1
 10072 ;; Hardware stack levels required when called:    6
 10073 ;; This function calls:
 10074 ;;		__fat_offset_from_cluster
 10075 ;;		__fat_sector_from_cluster
 10076 ;;		__read_fat
 10077 ;;		__read_value_from_offset
 10078 ;;		_flash_sector_read
 10079 ;; This function is called by:
 10080 ;;		_fat_read_from_file_fast
 10081 ;;		_fat_modify_file
 10082 ;;		_fat_copy_sector_to_buffer
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text40
 10087  0056DA                     __ptext40:
 10088                           	opt stack 0
 10089  0056DA                     __find_nth_cluster:
 10090                           	opt stack 21
 10091                           
 10092                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 10093                           
 10094                           ; BSR set to: 0
 10095                           ;incstack = 0
 10096  0056DA  0E00               	movlw	0
 10097  0056DC  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 10098  0056DE  0E00               	movlw	0
 10099  0056E0  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 10100                           
 10101                           ;fat16.c: 189: if(n==1)
 10102  0056E2  043A               	decf	__find_nth_cluster@n,w,c
 10103  0056E4  103B               	iorwf	__find_nth_cluster@n+1,w,c
 10104  0056E6  A4D8               	btfss	status,2,c
 10105  0056E8  D03E               	goto	l2017
 10106                           
 10107                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 10108  0056EA  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 10109  0056EE  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 10110  0056F2  EC12  F033         	call	__read_fat	;wreg free
 10111  0056F6  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 10112  0056FA  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 10113  0056FE  0012               	return	
 10114  005700                     
 10115                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 10116  005700  C038  F001         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 10117  005704  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 10118  005708  EC62  F039         	call	__fat_sector_from_cluster	;wreg free
 10119  00570C  C001  F040         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 10120  005710  C002  F041         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 10121                           
 10122                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 10123  005714  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 10124  005718  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 10125  00571C  EC6E  F039         	call	__fat_offset_from_cluster	;wreg free
 10126  005720  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 10127  005724  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 10128                           
 10129                           ;fat16.c: 201: if(sector != sector_in_buffer)
 10130  005728  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 10131  00572A  1840               	xorwf	__find_nth_cluster@sector,w,c
 10132  00572C  E104               	bnz	u10110
 10133  00572E  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 10134  005730  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 10135  005732  B4D8               	btfsc	status,2,c
 10136  005734  D00A               	goto	l2019
 10137  005736                     u10110:
 10138                           
 10139                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 10140  005736  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 10141  00573A  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 10142  00573E  0ECC               	movlw	low _buffer
 10143  005740  6E2A               	movwf	flash_sector_read@data,c
 10144  005742  0E02               	movlw	high _buffer
 10145  005744  6E2B               	movwf	flash_sector_read@data+1,c
 10146  005746  EC59  F038         	call	_flash_sector_read	;wreg free
 10147  00574A                     l2019:
 10148                           
 10149                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 10150  00574A  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 10151  00574E  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 10152  005752  0ECC               	movlw	low _buffer
 10153  005754  6E03               	movwf	__read_value_from_offset@buffer,c
 10154  005756  0E02               	movlw	high _buffer
 10155  005758  6E04               	movwf	__read_value_from_offset@buffer+1,c
 10156  00575A  EC97  F035         	call	__read_value_from_offset	;wreg free
 10157  00575E  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 10158  005762  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 10159  005766                     l2017:
 10160  005766  503A               	movf	__find_nth_cluster@n,w,c
 10161  005768  103B               	iorwf	__find_nth_cluster@n+1,w,c
 10162  00576A  A4D8               	btfss	status,2,c
 10163  00576C  D7C9               	goto	l2018
 10164                           
 10165                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 10166  00576E  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 10167  005772  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 10168  005776  0012               	return		;funcret
 10169  005778                     __end_of__find_nth_cluster:
 10170                           	opt stack 0
 10171                           tblptru	equ	0xFF8
 10172                           tblptrh	equ	0xFF7
 10173                           tblptrl	equ	0xFF6
 10174                           tablat	equ	0xFF5
 10175                           prodh	equ	0xFF4
 10176                           prodl	equ	0xFF3
 10177                           intcon	equ	0xFF2
 10178                           intcon3	equ	0xFF0
 10179                           postinc0	equ	0xFEE
 10180                           wreg	equ	0xFE8
 10181                           indf1	equ	0xFE7
 10182                           postdec1	equ	0xFE5
 10183                           plusw1	equ	0xFE3
 10184                           fsr1h	equ	0xFE2
 10185                           fsr1l	equ	0xFE1
 10186                           indf2	equ	0xFDF
 10187                           postinc2	equ	0xFDE
 10188                           postdec2	equ	0xFDD
 10189                           plusw2	equ	0xFDB
 10190                           fsr2h	equ	0xFDA
 10191                           fsr2l	equ	0xFD9
 10192                           status	equ	0xFD8
 10193                           
 10194 ;; *************** function __read_value_from_offset *****************
 10195 ;; Defined at:
 10196 ;;		line 114 in file "fat16.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  offset          2    0[COMRAM] unsigned int 
 10199 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 10200 ;;		 -> buffer(512), 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  value           2    7[COMRAM] unsigned int 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  2    0[COMRAM] unsigned int 
 10205 ;; Registers used:
 10206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10212 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10214 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10215 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10216 ;;Total ram usage:        9 bytes
 10217 ;; Hardware stack levels used:    1
 10218 ;; This function calls:
 10219 ;;		Nothing
 10220 ;; This function is called by:
 10221 ;;		__find_nth_cluster
 10222 ;;		__make_cluster_chain
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           	psect	text41
 10227  006B2E                     __ptext41:
 10228                           	opt stack 0
 10229  006B2E                     __read_value_from_offset:
 10230                           	opt stack 26
 10231                           
 10232                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 10233                           
 10234                           ;incstack = 0
 10235  006B2E  0E01               	movlw	1
 10236  006B30  2401               	addwf	__read_value_from_offset@offset,w,c
 10237  006B32  6E05               	movwf	??__read_value_from_offset& (0+255),c
 10238  006B34  0E00               	movlw	0
 10239  006B36  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 10240  006B38  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 10241  006B3A  5005               	movf	??__read_value_from_offset,w,c
 10242  006B3C  2403               	addwf	__read_value_from_offset@buffer,w,c
 10243  006B3E  6ED9               	movwf	fsr2l,c
 10244  006B40  5006               	movf	??__read_value_from_offset+1,w,c
 10245  006B42  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 10246  006B44  6EDA               	movwf	fsr2h,c
 10247  006B46  50DF               	movf	indf2,w,c
 10248  006B48  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 10249  006B4A  5007               	movf	??__read_value_from_offset+2,w,c
 10250  006B4C  6E08               	movwf	__read_value_from_offset@value,c
 10251  006B4E  6A09               	clrf	__read_value_from_offset@value+1,c
 10252                           
 10253                           ;fat16.c: 118: value <<= 8;
 10254  006B50  5008               	movf	__read_value_from_offset@value,w,c
 10255  006B52  6E09               	movwf	__read_value_from_offset@value+1,c
 10256  006B54  6A08               	clrf	__read_value_from_offset@value,c
 10257                           
 10258                           ;fat16.c: 119: value |= buffer[offset];
 10259  006B56  5001               	movf	__read_value_from_offset@offset,w,c
 10260  006B58  2403               	addwf	__read_value_from_offset@buffer,w,c
 10261  006B5A  6ED9               	movwf	fsr2l,c
 10262  006B5C  5002               	movf	__read_value_from_offset@offset+1,w,c
 10263  006B5E  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 10264  006B60  6EDA               	movwf	fsr2h,c
 10265  006B62  50DF               	movf	indf2,w,c
 10266  006B64  6E05               	movwf	??__read_value_from_offset& (0+255),c
 10267  006B66  5005               	movf	??__read_value_from_offset,w,c
 10268  006B68  1208               	iorwf	__read_value_from_offset@value,f,c
 10269                           
 10270                           ;fat16.c: 120: return value;
 10271  006B6A  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 10272  006B6E  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 10273  006B72  0012               	return	
 10274  006B74                     __end_of__read_value_from_offset:
 10275                           	opt stack 0
 10276                           tblptru	equ	0xFF8
 10277                           tblptrh	equ	0xFF7
 10278                           tblptrl	equ	0xFF6
 10279                           tablat	equ	0xFF5
 10280                           prodh	equ	0xFF4
 10281                           prodl	equ	0xFF3
 10282                           intcon	equ	0xFF2
 10283                           intcon3	equ	0xFF0
 10284                           postinc0	equ	0xFEE
 10285                           wreg	equ	0xFE8
 10286                           indf1	equ	0xFE7
 10287                           postdec1	equ	0xFE5
 10288                           plusw1	equ	0xFE3
 10289                           fsr1h	equ	0xFE2
 10290                           fsr1l	equ	0xFE1
 10291                           indf2	equ	0xFDF
 10292                           postinc2	equ	0xFDE
 10293                           postdec2	equ	0xFDD
 10294                           plusw2	equ	0xFDB
 10295                           fsr2h	equ	0xFDA
 10296                           fsr2l	equ	0xFD9
 10297                           status	equ	0xFD8
 10298                           
 10299 ;; *************** function __read_fat *****************
 10300 ;; Defined at:
 10301 ;;		line 456 in file "fat16.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  cluster         2   47[COMRAM] unsigned int 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  value           2   53[COMRAM] unsigned int 
 10306 ;;  offset          2   51[COMRAM] unsigned int 
 10307 ;;  sector          2   49[COMRAM] unsigned int 
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  2   47[COMRAM] unsigned int 
 10310 ;; Registers used:
 10311 ;;		wreg, status,2, status,0, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10318 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;Total ram usage:        8 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    5
 10324 ;; This function calls:
 10325 ;;		__fat_offset_from_cluster
 10326 ;;		__fat_sector_from_cluster
 10327 ;;		_flash_partial_read
 10328 ;; This function is called by:
 10329 ;;		__find_nth_cluster
 10330 ;;		_fat_read_from_file_fast
 10331 ;;		_fat_modify_file
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text42
 10336  006624                     __ptext42:
 10337                           	opt stack 0
 10338  006624                     __read_fat:
 10339                           	opt stack 22
 10340                           
 10341                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 10342                           
 10343                           ;incstack = 0
 10344  006624  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 10345  006628  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 10346  00662C  EC62  F039         	call	__fat_sector_from_cluster	;wreg free
 10347  006630  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 10348  006634  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 10349                           
 10350                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 10351  006638  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 10352  00663C  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 10353  006640  EC6E  F039         	call	__fat_offset_from_cluster	;wreg free
 10354  006644  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 10355  006648  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 10356                           
 10357                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 10358  00664C  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 10359  006650  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 10360  006654  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 10361  006658  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 10362  00665C  0E00               	movlw	0
 10363  00665E  6E2D               	movwf	flash_partial_read@length+1,c
 10364  006660  0E02               	movlw	2
 10365  006662  6E2C               	movwf	flash_partial_read@length,c
 10366  006664  0E36               	movlw	low __read_fat@value
 10367  006666  6E2E               	movwf	flash_partial_read@data,c
 10368  006668  0E00               	movlw	high __read_fat@value
 10369  00666A  6E2F               	movwf	flash_partial_read@data+1,c
 10370  00666C  EC33  F038         	call	_flash_partial_read	;wreg free
 10371                           
 10372                           ;fat16.c: 470: return value;
 10373  006670  C036  F030         	movff	__read_fat@value,?__read_fat
 10374  006674  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 10375  006678  0012               	return	
 10376  00667A                     __end_of__read_fat:
 10377                           	opt stack 0
 10378                           tblptru	equ	0xFF8
 10379                           tblptrh	equ	0xFF7
 10380                           tblptrl	equ	0xFF6
 10381                           tablat	equ	0xFF5
 10382                           prodh	equ	0xFF4
 10383                           prodl	equ	0xFF3
 10384                           intcon	equ	0xFF2
 10385                           intcon3	equ	0xFF0
 10386                           postinc0	equ	0xFEE
 10387                           wreg	equ	0xFE8
 10388                           indf1	equ	0xFE7
 10389                           postdec1	equ	0xFE5
 10390                           plusw1	equ	0xFE3
 10391                           fsr1h	equ	0xFE2
 10392                           fsr1l	equ	0xFE1
 10393                           indf2	equ	0xFDF
 10394                           postinc2	equ	0xFDE
 10395                           postdec2	equ	0xFDD
 10396                           plusw2	equ	0xFDB
 10397                           fsr2h	equ	0xFDA
 10398                           fsr2l	equ	0xFD9
 10399                           status	equ	0xFD8
 10400                           
 10401 ;; *************** function __fat_sector_from_cluster *****************
 10402 ;; Defined at:
 10403 ;;		line 75 in file "fat16.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  cluster         2    0[COMRAM] unsigned int 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  2    0[COMRAM] unsigned int 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;Total ram usage:        2 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; This function calls:
 10424 ;;		Nothing
 10425 ;; This function is called by:
 10426 ;;		__find_nth_cluster
 10427 ;;		__read_fat
 10428 ;;		__make_cluster_chain
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text43
 10433  0072C4                     __ptext43:
 10434                           	opt stack 0
 10435  0072C4                     __fat_sector_from_cluster:
 10436                           	opt stack 26
 10437                           
 10438                           ;fat16.c: 77: cluster >>= 8;
 10439                           
 10440                           ;incstack = 0
 10441  0072C4  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 10442  0072C6  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 10443  0072C8  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 10444                           
 10445                           ;fat16.c: 78: cluster += 2;
 10446  0072CA  0E02               	movlw	2
 10447  0072CC  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 10448  0072CE  0E00               	movlw	0
 10449  0072D0  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 10450                           
 10451                           ;fat16.c: 79: return cluster;
 10452  0072D2  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 10453  0072D6  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 10454  0072DA  0012               	return	
 10455  0072DC                     __end_of__fat_sector_from_cluster:
 10456                           	opt stack 0
 10457                           tblptru	equ	0xFF8
 10458                           tblptrh	equ	0xFF7
 10459                           tblptrl	equ	0xFF6
 10460                           tablat	equ	0xFF5
 10461                           prodh	equ	0xFF4
 10462                           prodl	equ	0xFF3
 10463                           intcon	equ	0xFF2
 10464                           intcon3	equ	0xFF0
 10465                           postinc0	equ	0xFEE
 10466                           wreg	equ	0xFE8
 10467                           indf1	equ	0xFE7
 10468                           postdec1	equ	0xFE5
 10469                           plusw1	equ	0xFE3
 10470                           fsr1h	equ	0xFE2
 10471                           fsr1l	equ	0xFE1
 10472                           indf2	equ	0xFDF
 10473                           postinc2	equ	0xFDE
 10474                           postdec2	equ	0xFDD
 10475                           plusw2	equ	0xFDB
 10476                           fsr2h	equ	0xFDA
 10477                           fsr2l	equ	0xFD9
 10478                           status	equ	0xFD8
 10479                           
 10480 ;; *************** function __fat_offset_from_cluster *****************
 10481 ;; Defined at:
 10482 ;;		line 82 in file "fat16.c"
 10483 ;; Parameters:    Size  Location     Type
 10484 ;;  cluster         2    0[COMRAM] unsigned int 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;		None
 10487 ;; Return value:  Size  Location     Type
 10488 ;;                  2    0[COMRAM] unsigned int 
 10489 ;; Registers used:
 10490 ;;		wreg, status,2, status,0
 10491 ;; Tracked objects:
 10492 ;;		On entry : 0/0
 10493 ;;		On exit  : 0/0
 10494 ;;		Unchanged: 0/0
 10495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10500 ;;Total ram usage:        2 bytes
 10501 ;; Hardware stack levels used:    1
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		__find_nth_cluster
 10506 ;;		__read_fat
 10507 ;;		__make_cluster_chain
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text44
 10512  0072DC                     __ptext44:
 10513                           	opt stack 0
 10514  0072DC                     __fat_offset_from_cluster:
 10515                           	opt stack 26
 10516                           
 10517                           ;fat16.c: 84: cluster &= 0xFF;
 10518                           
 10519                           ;incstack = 0
 10520  0072DC  0EFF               	movlw	255
 10521  0072DE  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 10522  0072E0  0E00               	movlw	0
 10523  0072E2  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 10524                           
 10525                           ;fat16.c: 85: cluster <<= 1;
 10526  0072E4  90D8               	bcf	status,0,c
 10527  0072E6  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 10528  0072E8  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 10529                           
 10530                           ;fat16.c: 86: return cluster;
 10531  0072EA  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 10532  0072EE  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 10533  0072F2  0012               	return	
 10534  0072F4                     __end_of__fat_offset_from_cluster:
 10535                           	opt stack 0
 10536                           tblptru	equ	0xFF8
 10537                           tblptrh	equ	0xFF7
 10538                           tblptrl	equ	0xFF6
 10539                           tablat	equ	0xFF5
 10540                           prodh	equ	0xFF4
 10541                           prodl	equ	0xFF3
 10542                           intcon	equ	0xFF2
 10543                           intcon3	equ	0xFF0
 10544                           postinc0	equ	0xFEE
 10545                           wreg	equ	0xFE8
 10546                           indf1	equ	0xFE7
 10547                           postdec1	equ	0xFE5
 10548                           plusw1	equ	0xFE3
 10549                           fsr1h	equ	0xFE2
 10550                           fsr1l	equ	0xFE1
 10551                           indf2	equ	0xFDF
 10552                           postinc2	equ	0xFDE
 10553                           postdec2	equ	0xFDD
 10554                           plusw2	equ	0xFDB
 10555                           fsr2h	equ	0xFDA
 10556                           fsr2l	equ	0xFD9
 10557                           status	equ	0xFD8
 10558                           
 10559 ;; *************** function __data_sector_from_cluster *****************
 10560 ;; Defined at:
 10561 ;;		line 70 in file "fat16.c"
 10562 ;; Parameters:    Size  Location     Type
 10563 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;		None
 10566 ;; Return value:  Size  Location     Type
 10567 ;;                  2    0[COMRAM] unsigned int 
 10568 ;; Registers used:
 10569 ;;		wreg, status,2, status,0
 10570 ;; Tracked objects:
 10571 ;;		On entry : 0/0
 10572 ;;		On exit  : 0/0
 10573 ;;		Unchanged: 0/0
 10574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10579 ;;Total ram usage:        2 bytes
 10580 ;; Hardware stack levels used:    1
 10581 ;; This function calls:
 10582 ;;		Nothing
 10583 ;; This function is called by:
 10584 ;;		_fat_read_from_file_fast
 10585 ;;		_fat_modify_file
 10586 ;;		_fat_copy_sector_to_buffer
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           	psect	text45
 10591  0073AA                     __ptext45:
 10592                           	opt stack 0
 10593  0073AA                     __data_sector_from_cluster:
 10594                           	opt stack 27
 10595                           
 10596                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 10597                           
 10598                           ;incstack = 0
 10599  0073AA  0E24               	movlw	36
 10600  0073AC  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 10601  0073AE  6E01               	movwf	?__data_sector_from_cluster,c
 10602  0073B0  0E00               	movlw	0
 10603  0073B2  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 10604  0073B4  6E02               	movwf	?__data_sector_from_cluster+1,c
 10605  0073B6  0012               	return	
 10606  0073B8                     __end_of__data_sector_from_cluster:
 10607                           	opt stack 0
 10608                           tblptru	equ	0xFF8
 10609                           tblptrh	equ	0xFF7
 10610                           tblptrl	equ	0xFF6
 10611                           tablat	equ	0xFF5
 10612                           prodh	equ	0xFF4
 10613                           prodl	equ	0xFF3
 10614                           intcon	equ	0xFF2
 10615                           intcon3	equ	0xFF0
 10616                           postinc0	equ	0xFEE
 10617                           wreg	equ	0xFE8
 10618                           indf1	equ	0xFE7
 10619                           postdec1	equ	0xFE5
 10620                           plusw1	equ	0xFE3
 10621                           fsr1h	equ	0xFE2
 10622                           fsr1l	equ	0xFE1
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           plusw2	equ	0xFDB
 10627                           fsr2h	equ	0xFDA
 10628                           fsr2l	equ	0xFD9
 10629                           status	equ	0xFD8
 10630                           
 10631 ;; *************** function _fat_get_file_information *****************
 10632 ;; Defined at:
 10633 ;;		line 1391 in file "fat16.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  file_number     1    wreg     unsigned char 
 10636 ;;  data            2   47[COMRAM] PTR struct .
 10637 ;;		 -> _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@root(32), fat_resize_file@root(3
      +2), 
 10638 ;;		 -> fat_read_from_file@root(32), fat_rename_file@root(32), 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  file_number     1   54[COMRAM] unsigned char 
 10641 ;;  offset          2   52[COMRAM] unsigned int 
 10642 ;;  root_sector     2   50[COMRAM] unsigned int 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      unsigned char 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10656 ;;Total ram usage:        8 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    5
 10659 ;; This function calls:
 10660 ;;		__offset_from_file_number
 10661 ;;		__sector_from_file_number
 10662 ;;		_flash_partial_read
 10663 ;; This function is called by:
 10664 ;;		__bootloader_verify_file
 10665 ;;		__bootloader_program
 10666 ;;		_fat_rename_file
 10667 ;;		_fat_read_from_file
 10668 ;;		_fat_resize_file
 10669 ;;		_fat_modify_file
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text46
 10674  005F80                     __ptext46:
 10675                           	opt stack 0
 10676  005F80                     _fat_get_file_information:
 10677                           	opt stack 23
 10678                           
 10679                           ;incstack = 0
 10680                           ;fat_get_file_information@file_number stored from wreg
 10681  005F80  6E37               	movwf	fat_get_file_information@file_number,c
 10682                           
 10683                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 10684  005F82  0E3F               	movlw	63
 10685  005F84  6437               	cpfsgt	fat_get_file_information@file_number,c
 10686  005F86  D002               	goto	l2328
 10687                           
 10688                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 10689  005F88  0E01               	movlw	1
 10690  005F8A  0012               	return	
 10691  005F8C                     l2328:
 10692                           
 10693                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 10694  005F8C  5037               	movf	fat_get_file_information@file_number,w,c
 10695  005F8E  ECB7  F037         	call	__sector_from_file_number
 10696  005F92  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 10697  005F96  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 10698                           
 10699                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 10700  005F9A  5037               	movf	fat_get_file_information@file_number,w,c
 10701  005F9C  EC46  F038         	call	__offset_from_file_number
 10702  005FA0  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 10703  005FA4  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 10704                           
 10705                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 10706  005FA8  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 10707  005FAC  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 10708  005FB0  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 10709  005FB4  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 10710  005FB8  0E00               	movlw	0
 10711  005FBA  6E2D               	movwf	flash_partial_read@length+1,c
 10712  005FBC  0E20               	movlw	32
 10713  005FBE  6E2C               	movwf	flash_partial_read@length,c
 10714  005FC0  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 10715  005FC4  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 10716  005FC8  EC33  F038         	call	_flash_partial_read	;wreg free
 10717                           
 10718                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 10719  005FCC  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10720  005FD0  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10721  005FD4  50DF               	movf	indf2,w,c
 10722  005FD6  B4D8               	btfsc	status,2,c
 10723  005FD8  D008               	goto	u10640
 10724  005FDA  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 10725  005FDE  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 10726  005FE2  0EE5               	movlw	229
 10727  005FE4  18DE               	xorwf	postinc2,w,c
 10728  005FE6  A4D8               	btfss	status,2,c
 10729  005FE8  D002               	goto	l2330
 10730  005FEA                     u10640:
 10731                           
 10732                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 10733  005FEA  0E02               	movlw	2
 10734  005FEC  0012               	return	
 10735  005FEE                     l2330:
 10736                           
 10737                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 10738  005FEE  0E00               	movlw	0
 10739  005FF0  0012               	return	
 10740  005FF2                     __end_of_fat_get_file_information:
 10741                           	opt stack 0
 10742                           tblptru	equ	0xFF8
 10743                           tblptrh	equ	0xFF7
 10744                           tblptrl	equ	0xFF6
 10745                           tablat	equ	0xFF5
 10746                           prodh	equ	0xFF4
 10747                           prodl	equ	0xFF3
 10748                           intcon	equ	0xFF2
 10749                           intcon3	equ	0xFF0
 10750                           postinc0	equ	0xFEE
 10751                           wreg	equ	0xFE8
 10752                           indf1	equ	0xFE7
 10753                           postdec1	equ	0xFE5
 10754                           plusw1	equ	0xFE3
 10755                           fsr1h	equ	0xFE2
 10756                           fsr1l	equ	0xFE1
 10757                           indf2	equ	0xFDF
 10758                           postinc2	equ	0xFDE
 10759                           postdec2	equ	0xFDD
 10760                           plusw2	equ	0xFDB
 10761                           fsr2h	equ	0xFDA
 10762                           fsr2l	equ	0xFD9
 10763                           status	equ	0xFD8
 10764                           
 10765 ;; *************** function __bootloader_check_address *****************
 10766 ;; Defined at:
 10767 ;;		line 112 in file "bootloader.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;  address         4    0[COMRAM] unsigned long 
 10770 ;;  dataLength      1    4[COMRAM] unsigned char 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  cntr            1   11[COMRAM] unsigned char 
 10773 ;;  byte_status     1   10[COMRAM] enum E6955
 10774 ;;  worst_case      1    9[COMRAM] enum E6955
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      enum E6955
 10777 ;; Registers used:
 10778 ;;		wreg, status,2, status,0
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10784 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10785 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;Total ram usage:       12 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; This function calls:
 10791 ;;		Nothing
 10792 ;; This function is called by:
 10793 ;;		__bootloader_verify_file
 10794 ;;		__bootloader_program
 10795 ;; This function uses a non-reentrant model
 10796 ;;
 10797                           
 10798                           	psect	text47
 10799  004A1E                     __ptext47:
 10800                           	opt stack 0
 10801  004A1E                     __bootloader_check_address:
 10802                           	opt stack 28
 10803                           
 10804                           ;bootloader.c: 114: addressCheckResult_t byte_status;;bootloader.c: 115: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 116: uint8_t cntr;;bootloader.c: 118: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 10805                           
 10806                           ;incstack = 0
 10807  004A1E  0E00               	movlw	0
 10808  004A20  6E0A               	movwf	__bootloader_check_address@worst_case,c
 10809                           
 10810                           ;bootloader.c: 121: for(cntr=0; cntr<dataLength; ++cntr)
 10811  004A22  0E00               	movlw	0
 10812  004A24  6E0C               	movwf	__bootloader_check_address@cntr,c
 10813  004A26  D062               	goto	l2469
 10814  004A28                     
 10815                           ;bootloader.c: 122: {;bootloader.c: 124: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 10816  004A28  500C               	movf	__bootloader_check_address@cntr,w,c
 10817  004A2A  2401               	addwf	__bootloader_check_address@address,w,c
 10818  004A2C  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10819  004A2E  0E00               	movlw	0
 10820  004A30  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10821  004A32  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10822  004A34  0E00               	movlw	0
 10823  004A36  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10824  004A38  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10825  004A3A  0E00               	movlw	0
 10826  004A3C  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10827  004A3E  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10828  004A40  5009               	movf	??__bootloader_check_address+3,w,c
 10829  004A42  1008               	iorwf	??__bootloader_check_address+2,w,c
 10830  004A44  E104               	bnz	u10860
 10831  004A46  0E90               	movlw	144
 10832  004A48  5C07               	subwf	??__bootloader_check_address+1,w,c
 10833  004A4A  A0D8               	btfss	status,0,c
 10834  004A4C  D018               	goto	l2471
 10835  004A4E                     u10860:
 10836  004A4E  500C               	movf	__bootloader_check_address@cntr,w,c
 10837  004A50  2401               	addwf	__bootloader_check_address@address,w,c
 10838  004A52  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10839  004A54  0E00               	movlw	0
 10840  004A56  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10841  004A58  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10842  004A5A  0E00               	movlw	0
 10843  004A5C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10844  004A5E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10845  004A60  0E00               	movlw	0
 10846  004A62  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10847  004A64  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10848  004A66  5009               	movf	??__bootloader_check_address+3,w,c
 10849  004A68  E10A               	bnz	l13213
 10850  004A6A  0EF8               	movlw	248
 10851  004A6C  5C06               	subwf	??__bootloader_check_address,w,c
 10852  004A6E  0EFF               	movlw	255
 10853  004A70  5807               	subwfb	??__bootloader_check_address+1,w,c
 10854  004A72  0E01               	movlw	1
 10855  004A74  5808               	subwfb	??__bootloader_check_address+2,w,c
 10856  004A76  B0D8               	btfsc	status,0,c
 10857  004A78  D002               	goto	l2471
 10858                           
 10859                           ;bootloader.c: 125: {;bootloader.c: 126: byte_status = ADDRESS_CHECK_RESULT_OK;
 10860  004A7A  0E00               	movlw	0
 10861  004A7C  D029               	goto	L4
 10862  004A7E                     l2471:
 10863  004A7E                     l13213:
 10864                           
 10865                           ;bootloader.c: 130: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10866  004A7E  500C               	movf	__bootloader_check_address@cntr,w,c
 10867  004A80  2401               	addwf	__bootloader_check_address@address,w,c
 10868  004A82  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10869  004A84  0E00               	movlw	0
 10870  004A86  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10871  004A88  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10872  004A8A  0E00               	movlw	0
 10873  004A8C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10874  004A8E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10875  004A90  0E00               	movlw	0
 10876  004A92  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10877  004A94  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10878  004A96  5009               	movf	??__bootloader_check_address+3,w,c
 10879  004A98  E108               	bnz	u10880
 10880  004A9A  0EF8               	movlw	248
 10881  004A9C  5C06               	subwf	??__bootloader_check_address,w,c
 10882  004A9E  0EFF               	movlw	255
 10883  004AA0  5807               	subwfb	??__bootloader_check_address+1,w,c
 10884  004AA2  0E01               	movlw	1
 10885  004AA4  5808               	subwfb	??__bootloader_check_address+2,w,c
 10886  004AA6  A0D8               	btfss	status,0,c
 10887  004AA8  D015               	goto	l2473
 10888  004AAA                     u10880:
 10889  004AAA  500C               	movf	__bootloader_check_address@cntr,w,c
 10890  004AAC  2401               	addwf	__bootloader_check_address@address,w,c
 10891  004AAE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10892  004AB0  0E00               	movlw	0
 10893  004AB2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10894  004AB4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10895  004AB6  0E00               	movlw	0
 10896  004AB8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10897  004ABA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10898  004ABC  0E00               	movlw	0
 10899  004ABE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10900  004AC0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10901  004AC2  5009               	movf	??__bootloader_check_address+3,w,c
 10902  004AC4  E107               	bnz	l2473
 10903  004AC6  0E02               	movlw	2
 10904  004AC8  5C08               	subwf	??__bootloader_check_address+2,w,c
 10905  004ACA  B0D8               	btfsc	status,0,c
 10906  004ACC  D003               	goto	l2473
 10907                           
 10908                           ;bootloader.c: 131: {;bootloader.c: 132: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10909  004ACE  0E01               	movlw	1
 10910  004AD0                     L4:
 10911  004AD0  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10912                           
 10913                           ;bootloader.c: 133: }
 10914  004AD2  D001               	goto	l2474
 10915  004AD4                     l2473:
 10916                           
 10917                           ;bootloader.c: 134: else;bootloader.c: 135: {;bootloader.c: 136: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10918  004AD4  680B               	setf	__bootloader_check_address@byte_status,c
 10919  004AD6                     l2474:
 10920                           
 10921                           ;bootloader.c: 137: };bootloader.c: 140: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10922  004AD6  280B               	incf	__bootloader_check_address@byte_status,w,c
 10923  004AD8  A4D8               	btfss	status,2,c
 10924  004ADA  D002               	goto	l2475
 10925                           
 10926                           ;bootloader.c: 141: {;bootloader.c: 142: return ADDRESS_CHECK_RESULT_ERROR;
 10927  004ADC  0EFF               	movlw	255
 10928  004ADE  0012               	return	
 10929  004AE0                     l2475:
 10930                           
 10931                           ;bootloader.c: 143: };bootloader.c: 146: if(byte_status > worst_case)
 10932  004AE0  500B               	movf	__bootloader_check_address@byte_status,w,c
 10933  004AE2  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10934  004AE4  A0D8               	btfss	status,0,c
 10935                           
 10936                           ;bootloader.c: 147: {;bootloader.c: 148: worst_case = byte_status;
 10937  004AE6  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10938  004AEA  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10939  004AEC                     l2469:
 10940  004AEC  5005               	movf	__bootloader_check_address@dataLength,w,c
 10941  004AEE  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10942  004AF0  A0D8               	btfss	status,0,c
 10943  004AF2  D79A               	goto	l2470
 10944                           
 10945                           ;bootloader.c: 149: };bootloader.c: 150: };bootloader.c: 152: return worst_case;
 10946  004AF4  500A               	movf	__bootloader_check_address@worst_case,w,c
 10947  004AF6  0012               	return	
 10948  004AF8                     __end_of__bootloader_check_address:
 10949                           	opt stack 0
 10950                           tblptru	equ	0xFF8
 10951                           tblptrh	equ	0xFF7
 10952                           tblptrl	equ	0xFF6
 10953                           tablat	equ	0xFF5
 10954                           prodh	equ	0xFF4
 10955                           prodl	equ	0xFF3
 10956                           intcon	equ	0xFF2
 10957                           intcon3	equ	0xFF0
 10958                           postinc0	equ	0xFEE
 10959                           wreg	equ	0xFE8
 10960                           indf1	equ	0xFE7
 10961                           postdec1	equ	0xFE5
 10962                           plusw1	equ	0xFE3
 10963                           fsr1h	equ	0xFE2
 10964                           fsr1l	equ	0xFE1
 10965                           indf2	equ	0xFDF
 10966                           postinc2	equ	0xFDE
 10967                           postdec2	equ	0xFDD
 10968                           plusw2	equ	0xFDB
 10969                           fsr2h	equ	0xFDA
 10970                           fsr2l	equ	0xFD9
 10971                           status	equ	0xFD8
 10972                           
 10973 ;; *************** function __bootloader_find_file *****************
 10974 ;; Defined at:
 10975 ;;		line 155 in file "bootloader.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;		None
 10978 ;; Auto vars:     Size  Location     Type
 10979 ;;		None
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  1    wreg      void 
 10982 ;; Registers used:
 10983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10993 ;;Total ram usage:        0 bytes
 10994 ;; Hardware stack levels used:    1
 10995 ;; Hardware stack levels required when called:    7
 10996 ;; This function calls:
 10997 ;;		_fat_find_file
 10998 ;;		_fat_get_file_size
 10999 ;; This function is called by:
 11000 ;;		_bootloader_run
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           	psect	text48
 11005  00559A                     __ptext48:
 11006                           	opt stack 0
 11007  00559A                     __bootloader_find_file:
 11008                           	opt stack 22
 11009                           
 11010                           ;bootloader.c: 158: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 11011                           
 11012                           ;incstack = 0
 11013  00559A  0E8F               	movlw	low _bootloader_filename
 11014  00559C  6E2C               	movwf	fat_find_file@name,c
 11015  00559E  0E8F               	movlw	high _bootloader_filename
 11016  0055A0  6E2D               	movwf	fat_find_file@name+1,c
 11017  0055A2  0EC8               	movlw	low _bootloader_extension
 11018  0055A4  6E2E               	movwf	fat_find_file@extension,c
 11019  0055A6  0E8F               	movlw	high _bootloader_extension
 11020  0055A8  6E2F               	movwf	fat_find_file@extension+1,c
 11021  0055AA  ECE3  F022         	call	_fat_find_file	;wreg free
 11022  0055AE  0100               	movlb	0	; () banked
 11023  0055B0  6FFE               	movwf	_file_number& (0+255),b
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;bootloader.c: 161: if(file_number!=0xFF)
 11027  0055B2  29FE               	incf	_file_number& (0+255),w,b
 11028  0055B4  B4D8               	btfsc	status,2,c
 11029  0055B6  D034               	goto	l2481
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;bootloader.c: 162: {;bootloader.c: 164: hex_file_size = fat_get_file_size(file_number);
 11033  0055B8  51FE               	movf	_file_number& (0+255),w,b
 11034  0055BA  EC31  F030         	call	_fat_get_file_size
 11035  0055BE  C036  F07A         	movff	?_fat_get_file_size,_hex_file_size
 11036  0055C2  C037  F07B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11037  0055C6  C038  F07C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11038  0055CA  C039  F07D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11039                           
 11040                           ;bootloader.c: 166: hex_file_entries = 0;
 11041  0055CE  0E00               	movlw	0
 11042  0055D0  0101               	movlb	1	; () banked
 11043  0055D2  6F6A               	movwf	(_hex_file_entries+1)& (0+255),b
 11044  0055D4  0E00               	movlw	0
 11045  0055D6  6F69               	movwf	_hex_file_entries& (0+255),b
 11046                           
 11047                           ; BSR set to: 1
 11048                           ;bootloader.c: 167: hex_file_offset = 0;
 11049  0055D8  0E00               	movlw	0
 11050  0055DA  0100               	movlb	0	; () banked
 11051  0055DC  6F7E               	movwf	_hex_file_offset& (0+255),b
 11052  0055DE  0E00               	movlw	0
 11053  0055E0  6F7F               	movwf	(_hex_file_offset+1)& (0+255),b
 11054  0055E2  0E00               	movlw	0
 11055  0055E4  6F80               	movwf	(_hex_file_offset+2)& (0+255),b
 11056  0055E6  0E00               	movlw	0
 11057  0055E8  6F81               	movwf	(_hex_file_offset+3)& (0+255),b
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;bootloader.c: 168: file_minimum_address = 0xFFFFFFFF;
 11061  0055EA  0101               	movlb	1	; () banked
 11062  0055EC  6947               	setf	_file_minimum_address& (0+255),b
 11063  0055EE  6948               	setf	(_file_minimum_address+1)& (0+255),b
 11064  0055F0  6949               	setf	(_file_minimum_address+2)& (0+255),b
 11065  0055F2  694A               	setf	(_file_minimum_address+3)& (0+255),b
 11066                           
 11067                           ; BSR set to: 1
 11068                           ;bootloader.c: 169: file_maximum_address = 0x00000000;
 11069  0055F4  0E00               	movlw	0
 11070  0055F6  6F43               	movwf	_file_maximum_address& (0+255),b
 11071  0055F8  0E00               	movlw	0
 11072  0055FA  6F44               	movwf	(_file_maximum_address+1)& (0+255),b
 11073  0055FC  0E00               	movlw	0
 11074  0055FE  6F45               	movwf	(_file_maximum_address+2)& (0+255),b
 11075  005600  0E00               	movlw	0
 11076  005602  6F46               	movwf	(_file_maximum_address+3)& (0+255),b
 11077                           
 11078                           ; BSR set to: 1
 11079                           ;bootloader.c: 170: extended_linear_address = 0x00000000;
 11080  005604  0E00               	movlw	0
 11081  005606  6F3F               	movwf	_extended_linear_address& (0+255),b
 11082  005608  0E00               	movlw	0
 11083  00560A  6F40               	movwf	(_extended_linear_address+1)& (0+255),b
 11084  00560C  0E00               	movlw	0
 11085  00560E  6F41               	movwf	(_extended_linear_address+2)& (0+255),b
 11086  005610  0E00               	movlw	0
 11087  005612  6F42               	movwf	(_extended_linear_address+3)& (0+255),b
 11088                           
 11089                           ; BSR set to: 1
 11090                           ;bootloader.c: 171: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 11091  005614  0E20               	movlw	32
 11092  005616  0100               	movlb	0	; () banked
 11093  005618  6F66               	movwf	(_os+6)& (0+255),b
 11094                           
 11095                           ; BSR set to: 0
 11096                           ;bootloader.c: 172: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 11097  00561A  0E20               	movlw	32
 11098  00561C  6F67               	movwf	(_os+7)& (0+255),b
 11099                           
 11100                           ;bootloader.c: 173: }
 11101  00561E  0012               	return	
 11102  005620                     l2481:
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;bootloader.c: 175: else;bootloader.c: 176: {;bootloader.c: 178: hex_file_size = 0;
 11106                           
 11107                           ; BSR set to: 0
 11108  005620  0E00               	movlw	0
 11109  005622  6F7A               	movwf	_hex_file_size& (0+255),b
 11110  005624  0E00               	movlw	0
 11111  005626  6F7B               	movwf	(_hex_file_size+1)& (0+255),b
 11112  005628  0E00               	movlw	0
 11113  00562A  6F7C               	movwf	(_hex_file_size+2)& (0+255),b
 11114  00562C  0E00               	movlw	0
 11115  00562E  6F7D               	movwf	(_hex_file_size+3)& (0+255),b
 11116                           
 11117                           ;bootloader.c: 180: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 11118  005630  0E10               	movlw	16
 11119  005632  6F66               	movwf	(_os+6)& (0+255),b
 11120                           
 11121                           ;bootloader.c: 181: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 11122  005634  0E10               	movlw	16
 11123  005636  6F67               	movwf	(_os+7)& (0+255),b
 11124  005638  0012               	return	
 11125  00563A                     __end_of__bootloader_find_file:
 11126                           	opt stack 0
 11127                           tblptru	equ	0xFF8
 11128                           tblptrh	equ	0xFF7
 11129                           tblptrl	equ	0xFF6
 11130                           tablat	equ	0xFF5
 11131                           prodh	equ	0xFF4
 11132                           prodl	equ	0xFF3
 11133                           intcon	equ	0xFF2
 11134                           intcon3	equ	0xFF0
 11135                           postinc0	equ	0xFEE
 11136                           wreg	equ	0xFE8
 11137                           indf1	equ	0xFE7
 11138                           postdec1	equ	0xFE5
 11139                           plusw1	equ	0xFE3
 11140                           fsr1h	equ	0xFE2
 11141                           fsr1l	equ	0xFE1
 11142                           indf2	equ	0xFDF
 11143                           postinc2	equ	0xFDE
 11144                           postdec2	equ	0xFDD
 11145                           plusw2	equ	0xFDB
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150 ;; *************** function _fat_get_file_size *****************
 11151 ;; Defined at:
 11152 ;;		line 562 in file "fat16.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  file_number     1    wreg     unsigned char 
 11155 ;; Auto vars:     Size  Location     Type
 11156 ;;  file_number     1   65[COMRAM] unsigned char 
 11157 ;;  file_size       4   61[COMRAM] unsigned long 
 11158 ;;  offset          2   59[COMRAM] unsigned int 
 11159 ;;  sector          2   57[COMRAM] unsigned int 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;                  4   53[COMRAM] unsigned long 
 11162 ;; Registers used:
 11163 ;;		wreg, status,2, status,0, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 0/0
 11166 ;;		On exit  : 0/0
 11167 ;;		Unchanged: 0/0
 11168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11170 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11172 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11173 ;;Total ram usage:       13 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:    6
 11176 ;; This function calls:
 11177 ;;		__offset_from_file_number
 11178 ;;		__root_is_available
 11179 ;;		__sector_from_file_number
 11180 ;;		_flash_partial_read
 11181 ;; This function is called by:
 11182 ;;		__bootloader_find_file
 11183 ;;		__bootloader_verify_file
 11184 ;;		_fat_append_to_file
 11185 ;;		_fat_copy_file
 11186 ;;		_fat_copy_sector_to_buffer
 11187 ;;		_fat_write_sector_from_buffer
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           	psect	text49
 11192  006062                     __ptext49:
 11193                           	opt stack 0
 11194  006062                     _fat_get_file_size:
 11195                           	opt stack 22
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;incstack = 0
 11199                           ;fat_get_file_size@file_number stored from wreg
 11200  006062  6E42               	movwf	fat_get_file_size@file_number,c
 11201                           
 11202                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 11203  006064  5042               	movf	fat_get_file_size@file_number,w,c
 11204  006066  EC6D  F031         	call	__root_is_available
 11205  00606A  0900               	iorlw	0
 11206  00606C  B4D8               	btfsc	status,2,c
 11207  00606E  D005               	goto	l2095
 11208                           
 11209                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 11210  006070  6836               	setf	?_fat_get_file_size,c
 11211  006072  6837               	setf	?_fat_get_file_size+1,c
 11212  006074  6838               	setf	?_fat_get_file_size+2,c
 11213  006076  6839               	setf	?_fat_get_file_size+3,c
 11214  006078  0012               	return	
 11215  00607A                     l2095:
 11216                           
 11217                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 11218  00607A  5042               	movf	fat_get_file_size@file_number,w,c
 11219  00607C  ECB7  F037         	call	__sector_from_file_number
 11220  006080  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 11221  006084  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 11222                           
 11223                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 11224  006088  5042               	movf	fat_get_file_size@file_number,w,c
 11225  00608A  EC46  F038         	call	__offset_from_file_number
 11226  00608E  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 11227  006092  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 11228                           
 11229                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 11230  006096  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 11231  00609A  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 11232  00609E  0E1C               	movlw	28
 11233  0060A0  243C               	addwf	fat_get_file_size@offset,w,c
 11234  0060A2  6E2A               	movwf	flash_partial_read@start,c
 11235  0060A4  0E00               	movlw	0
 11236  0060A6  203D               	addwfc	fat_get_file_size@offset+1,w,c
 11237  0060A8  6E2B               	movwf	flash_partial_read@start+1,c
 11238  0060AA  0E00               	movlw	0
 11239  0060AC  6E2D               	movwf	flash_partial_read@length+1,c
 11240  0060AE  0E04               	movlw	4
 11241  0060B0  6E2C               	movwf	flash_partial_read@length,c
 11242  0060B2  0E3E               	movlw	low fat_get_file_size@file_size
 11243  0060B4  6E2E               	movwf	flash_partial_read@data,c
 11244  0060B6  0E00               	movlw	high fat_get_file_size@file_size
 11245  0060B8  6E2F               	movwf	flash_partial_read@data+1,c
 11246  0060BA  EC33  F038         	call	_flash_partial_read	;wreg free
 11247                           
 11248                           ;fat16.c: 583: return file_size;
 11249  0060BE  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 11250  0060C2  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 11251  0060C6  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 11252  0060CA  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 11253  0060CE  0012               	return	
 11254  0060D0                     __end_of_fat_get_file_size:
 11255                           	opt stack 0
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           intcon	equ	0xFF2
 11263                           intcon3	equ	0xFF0
 11264                           postinc0	equ	0xFEE
 11265                           wreg	equ	0xFE8
 11266                           indf1	equ	0xFE7
 11267                           postdec1	equ	0xFE5
 11268                           plusw1	equ	0xFE3
 11269                           fsr1h	equ	0xFE2
 11270                           fsr1l	equ	0xFE1
 11271                           indf2	equ	0xFDF
 11272                           postinc2	equ	0xFDE
 11273                           postdec2	equ	0xFDD
 11274                           plusw2	equ	0xFDB
 11275                           fsr2h	equ	0xFDA
 11276                           fsr2l	equ	0xFD9
 11277                           status	equ	0xFD8
 11278                           
 11279 ;; *************** function __root_is_available *****************
 11280 ;; Defined at:
 11281 ;;		line 408 in file "fat16.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;  file_number     1    wreg     unsigned char 
 11284 ;; Auto vars:     Size  Location     Type
 11285 ;;  file_number     1   51[COMRAM] unsigned char 
 11286 ;;  offset          2   49[COMRAM] unsigned int 
 11287 ;;  root_sector     2   47[COMRAM] unsigned int 
 11288 ;;  first_byte      1   52[COMRAM] unsigned char 
 11289 ;; Return value:  Size  Location     Type
 11290 ;;                  1    wreg      unsigned char 
 11291 ;; Registers used:
 11292 ;;		wreg, status,2, status,0, cstack
 11293 ;; Tracked objects:
 11294 ;;		On entry : 0/0
 11295 ;;		On exit  : 0/0
 11296 ;;		Unchanged: 0/0
 11297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11302 ;;Total ram usage:        6 bytes
 11303 ;; Hardware stack levels used:    1
 11304 ;; Hardware stack levels required when called:    5
 11305 ;; This function calls:
 11306 ;;		__offset_from_file_number
 11307 ;;		__sector_from_file_number
 11308 ;;		_flash_partial_read
 11309 ;; This function is called by:
 11310 ;;		_fat_get_file_size
 11311 ;;		__get_available_root_entry
 11312 ;;		_fat_delete_file
 11313 ;;		_fat_append_to_file
 11314 ;;		_fat_copy_file
 11315 ;;		_fat_resize_file
 11316 ;;		_fat_copy_sector_to_buffer
 11317 ;;		_fat_write_sector_from_buffer
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text50
 11322  0062DA                     __ptext50:
 11323                           	opt stack 0
 11324  0062DA                     __root_is_available:
 11325                           	opt stack 22
 11326                           
 11327                           ;incstack = 0
 11328                           ;__root_is_available@file_number stored from wreg
 11329  0062DA  6E34               	movwf	__root_is_available@file_number,c
 11330                           
 11331                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 11332  0062DC  0E3F               	movlw	63
 11333  0062DE  6434               	cpfsgt	__root_is_available@file_number,c
 11334  0062E0  D002               	goto	l2056
 11335                           
 11336                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 11337  0062E2  0E00               	movlw	0
 11338  0062E4  0012               	return	
 11339  0062E6                     l2056:
 11340                           
 11341                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 11342  0062E6  5034               	movf	__root_is_available@file_number,w,c
 11343  0062E8  ECB7  F037         	call	__sector_from_file_number
 11344  0062EC  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 11345  0062F0  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 11346                           
 11347                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 11348  0062F4  5034               	movf	__root_is_available@file_number,w,c
 11349  0062F6  EC46  F038         	call	__offset_from_file_number
 11350  0062FA  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 11351  0062FE  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 11352                           
 11353                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 11354  006302  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 11355  006306  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 11356  00630A  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 11357  00630E  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 11358  006312  0E00               	movlw	0
 11359  006314  6E2D               	movwf	flash_partial_read@length+1,c
 11360  006316  0E01               	movlw	1
 11361  006318  6E2C               	movwf	flash_partial_read@length,c
 11362  00631A  0E35               	movlw	low __root_is_available@first_byte
 11363  00631C  6E2E               	movwf	flash_partial_read@data,c
 11364  00631E  0E00               	movlw	high __root_is_available@first_byte
 11365  006320  6E2F               	movwf	flash_partial_read@data+1,c
 11366  006322  EC33  F038         	call	_flash_partial_read	;wreg free
 11367                           
 11368                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 11369  006326  5035               	movf	__root_is_available@first_byte,w,c
 11370  006328  B4D8               	btfsc	status,2,c
 11371  00632A  D004               	goto	u10150
 11372  00632C  0EE5               	movlw	229
 11373  00632E  1835               	xorwf	__root_is_available@first_byte,w,c
 11374  006330  A4D8               	btfss	status,2,c
 11375  006332  D002               	goto	l2058
 11376  006334                     u10150:
 11377                           
 11378                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 11379  006334  0E01               	movlw	1
 11380                           
 11381                           ;fat16.c: 434: }
 11382  006336  0012               	return	
 11383  006338                     l2058:
 11384                           
 11385                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 11386  006338  0E00               	movlw	0
 11387  00633A  0012               	return	
 11388  00633C                     __end_of__root_is_available:
 11389                           	opt stack 0
 11390                           tblptru	equ	0xFF8
 11391                           tblptrh	equ	0xFF7
 11392                           tblptrl	equ	0xFF6
 11393                           tablat	equ	0xFF5
 11394                           prodh	equ	0xFF4
 11395                           prodl	equ	0xFF3
 11396                           intcon	equ	0xFF2
 11397                           intcon3	equ	0xFF0
 11398                           postinc0	equ	0xFEE
 11399                           wreg	equ	0xFE8
 11400                           indf1	equ	0xFE7
 11401                           postdec1	equ	0xFE5
 11402                           plusw1	equ	0xFE3
 11403                           fsr1h	equ	0xFE2
 11404                           fsr1l	equ	0xFE1
 11405                           indf2	equ	0xFDF
 11406                           postinc2	equ	0xFDE
 11407                           postdec2	equ	0xFDD
 11408                           plusw2	equ	0xFDB
 11409                           fsr2h	equ	0xFDA
 11410                           fsr2l	equ	0xFD9
 11411                           status	equ	0xFD8
 11412                           
 11413 ;; *************** function _flash_partial_read *****************
 11414 ;; Defined at:
 11415 ;;		line 452 in file "flash.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  page            2   39[COMRAM] unsigned int 
 11418 ;;  start           2   41[COMRAM] unsigned int 
 11419 ;;  length          2   43[COMRAM] unsigned int 
 11420 ;;  data            2   45[COMRAM] PTR unsigned char 
 11421 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 11422 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 11423 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), 
 11424 ;; Auto vars:     Size  Location     Type
 11425 ;;		None
 11426 ;; Return value:  Size  Location     Type
 11427 ;;                  1    wreg      void 
 11428 ;; Registers used:
 11429 ;;		wreg, status,2, status,0, cstack
 11430 ;; Tracked objects:
 11431 ;;		On entry : 0/0
 11432 ;;		On exit  : 0/0
 11433 ;;		Unchanged: 0/0
 11434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11435 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11438 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11439 ;;Total ram usage:        8 bytes
 11440 ;; Hardware stack levels used:    1
 11441 ;; Hardware stack levels required when called:    4
 11442 ;; This function calls:
 11443 ;;		__flash_partial_read
 11444 ;; This function is called by:
 11445 ;;		__root_is_available
 11446 ;;		__read_fat
 11447 ;;		_fat_get_file_size
 11448 ;;		_fat_read_from_file_fast
 11449 ;;		_fat_get_file_information
 11450 ;;		__get_first_cluster
 11451 ;; This function uses a non-reentrant model
 11452 ;;
 11453                           
 11454                           	psect	text51
 11455  007066                     __ptext51:
 11456                           	opt stack 0
 11457  007066                     _flash_partial_read:
 11458                           	opt stack 23
 11459                           
 11460                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 11461                           
 11462                           ;incstack = 0
 11463  007066  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 11464  00706A  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 11465  00706E  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 11466  007072  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 11467  007076  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 11468  00707A  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 11469  00707E  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 11470  007082  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 11471  007086  EC0E  F02F         	call	__flash_partial_read	;wreg free
 11472  00708A  0012               	return		;funcret
 11473  00708C                     __end_of_flash_partial_read:
 11474                           	opt stack 0
 11475                           tblptru	equ	0xFF8
 11476                           tblptrh	equ	0xFF7
 11477                           tblptrl	equ	0xFF6
 11478                           tablat	equ	0xFF5
 11479                           prodh	equ	0xFF4
 11480                           prodl	equ	0xFF3
 11481                           intcon	equ	0xFF2
 11482                           intcon3	equ	0xFF0
 11483                           postinc0	equ	0xFEE
 11484                           wreg	equ	0xFE8
 11485                           indf1	equ	0xFE7
 11486                           postdec1	equ	0xFE5
 11487                           plusw1	equ	0xFE3
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           postinc2	equ	0xFDE
 11492                           postdec2	equ	0xFDD
 11493                           plusw2	equ	0xFDB
 11494                           fsr2h	equ	0xFDA
 11495                           fsr2l	equ	0xFD9
 11496                           status	equ	0xFD8
 11497                           
 11498 ;; *************** function __sector_from_file_number *****************
 11499 ;; Defined at:
 11500 ;;		line 52 in file "fat16.c"
 11501 ;; Parameters:    Size  Location     Type
 11502 ;;  file_number     1    wreg     unsigned char 
 11503 ;; Auto vars:     Size  Location     Type
 11504 ;;  file_number     1    2[COMRAM] unsigned char 
 11505 ;;  sector          2    3[COMRAM] unsigned int 
 11506 ;; Return value:  Size  Location     Type
 11507 ;;                  2    0[COMRAM] unsigned int 
 11508 ;; Registers used:
 11509 ;;		wreg, status,2, status,0
 11510 ;; Tracked objects:
 11511 ;;		On entry : 0/0
 11512 ;;		On exit  : 0/0
 11513 ;;		Unchanged: 0/0
 11514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11516 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11518 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11519 ;;Total ram usage:        5 bytes
 11520 ;; Hardware stack levels used:    1
 11521 ;; This function calls:
 11522 ;;		Nothing
 11523 ;; This function is called by:
 11524 ;;		__root_is_available
 11525 ;;		_fat_get_file_size
 11526 ;;		_fat_get_file_information
 11527 ;;		__write_root
 11528 ;;		__delete_root
 11529 ;;		__get_first_cluster
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text52
 11534  006F6E                     __ptext52:
 11535                           	opt stack 0
 11536  006F6E                     __sector_from_file_number:
 11537                           	opt stack 27
 11538                           
 11539                           ;incstack = 0
 11540                           ;__sector_from_file_number@file_number stored from wreg
 11541  006F6E  6E03               	movwf	__sector_from_file_number@file_number,c
 11542                           
 11543                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 11544  006F70  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 11545  006F74  6A05               	clrf	__sector_from_file_number@sector+1,c
 11546                           
 11547                           ;fat16.c: 56: sector >>= 4;
 11548  006F76  3A04               	swapf	__sector_from_file_number@sector,f,c
 11549  006F78  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 11550  006F7A  0E0F               	movlw	15
 11551  006F7C  1604               	andwf	__sector_from_file_number@sector,f,c
 11552  006F7E  5005               	movf	__sector_from_file_number@sector+1,w,c
 11553  006F80  0BF0               	andlw	240
 11554  006F82  1204               	iorwf	__sector_from_file_number@sector,f,c
 11555  006F84  0E0F               	movlw	15
 11556  006F86  1605               	andwf	__sector_from_file_number@sector+1,f,c
 11557                           
 11558                           ;fat16.c: 57: sector += 34;
 11559  006F88  0E22               	movlw	34
 11560  006F8A  2604               	addwf	__sector_from_file_number@sector,f,c
 11561  006F8C  0E00               	movlw	0
 11562  006F8E  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 11563                           
 11564                           ;fat16.c: 58: return sector;
 11565  006F90  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 11566  006F94  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 11567  006F98  0012               	return	
 11568  006F9A                     __end_of__sector_from_file_number:
 11569                           	opt stack 0
 11570                           tblptru	equ	0xFF8
 11571                           tblptrh	equ	0xFF7
 11572                           tblptrl	equ	0xFF6
 11573                           tablat	equ	0xFF5
 11574                           prodh	equ	0xFF4
 11575                           prodl	equ	0xFF3
 11576                           intcon	equ	0xFF2
 11577                           intcon3	equ	0xFF0
 11578                           postinc0	equ	0xFEE
 11579                           wreg	equ	0xFE8
 11580                           indf1	equ	0xFE7
 11581                           postdec1	equ	0xFE5
 11582                           plusw1	equ	0xFE3
 11583                           fsr1h	equ	0xFE2
 11584                           fsr1l	equ	0xFE1
 11585                           indf2	equ	0xFDF
 11586                           postinc2	equ	0xFDE
 11587                           postdec2	equ	0xFDD
 11588                           plusw2	equ	0xFDB
 11589                           fsr2h	equ	0xFDA
 11590                           fsr2l	equ	0xFD9
 11591                           status	equ	0xFD8
 11592                           
 11593 ;; *************** function __offset_from_file_number *****************
 11594 ;; Defined at:
 11595 ;;		line 61 in file "fat16.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;  file_number     1    wreg     unsigned char 
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;  file_number     1    2[COMRAM] unsigned char 
 11600 ;;  offset          2    3[COMRAM] unsigned int 
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  2    0[COMRAM] unsigned int 
 11603 ;; Registers used:
 11604 ;;		wreg, status,2, status,0
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11611 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;Total ram usage:        5 bytes
 11615 ;; Hardware stack levels used:    1
 11616 ;; This function calls:
 11617 ;;		Nothing
 11618 ;; This function is called by:
 11619 ;;		__root_is_available
 11620 ;;		_fat_get_file_size
 11621 ;;		_fat_get_file_information
 11622 ;;		__write_root
 11623 ;;		__delete_root
 11624 ;;		__get_first_cluster
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text53
 11629  00708C                     __ptext53:
 11630                           	opt stack 0
 11631  00708C                     __offset_from_file_number:
 11632                           	opt stack 26
 11633                           
 11634                           ;incstack = 0
 11635                           ;__offset_from_file_number@file_number stored from wreg
 11636  00708C  6E03               	movwf	__offset_from_file_number@file_number,c
 11637                           
 11638                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 11639  00708E  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 11640  007092  6A05               	clrf	__offset_from_file_number@offset+1,c
 11641                           
 11642                           ;fat16.c: 65: offset &= 0b1111;
 11643  007094  0E0F               	movlw	15
 11644  007096  1604               	andwf	__offset_from_file_number@offset,f,c
 11645  007098  0E00               	movlw	0
 11646  00709A  1605               	andwf	__offset_from_file_number@offset+1,f,c
 11647                           
 11648                           ;fat16.c: 66: offset <<= 5;
 11649  00709C  0E05               	movlw	5
 11650  00709E                     u9685:
 11651  00709E  90D8               	bcf	status,0,c
 11652  0070A0  3604               	rlcf	__offset_from_file_number@offset,f,c
 11653  0070A2  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 11654  0070A4  2EE8               	decfsz	wreg,f,c
 11655  0070A6  D7FB               	goto	u9685
 11656                           
 11657                           ;fat16.c: 67: return offset;
 11658  0070A8  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 11659  0070AC  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 11660  0070B0  0012               	return	
 11661  0070B2                     __end_of__offset_from_file_number:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodh	equ	0xFF4
 11668                           prodl	equ	0xFF3
 11669                           intcon	equ	0xFF2
 11670                           intcon3	equ	0xFF0
 11671                           postinc0	equ	0xFEE
 11672                           wreg	equ	0xFE8
 11673                           indf1	equ	0xFE7
 11674                           postdec1	equ	0xFE5
 11675                           plusw1	equ	0xFE3
 11676                           fsr1h	equ	0xFE2
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8
 11685                           
 11686 ;; *************** function _fat_find_file *****************
 11687 ;; Defined at:
 11688 ;;		line 517 in file "fat16.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  name            2   43[COMRAM] PTR unsigned char 
 11691 ;;		 -> bootloader_filename(9), 
 11692 ;;  extension       2   45[COMRAM] PTR unsigned char 
 11693 ;;		 -> bootloader_extension(4), 
 11694 ;; Auto vars:     Size  Location     Type
 11695 ;;  offset          2   52[COMRAM] unsigned int 
 11696 ;;  sector          2   50[COMRAM] unsigned int 
 11697 ;;  file_number     1   49[COMRAM] unsigned char 
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      unsigned char 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 0/0
 11704 ;;		On exit  : 0/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11707 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11708 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11710 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11711 ;;Total ram usage:       11 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:    5
 11714 ;; This function calls:
 11715 ;;		_flash_sector_read
 11716 ;;		_strncmp
 11717 ;; This function is called by:
 11718 ;;		__bootloader_find_file
 11719 ;;		_fat_create_file
 11720 ;; This function uses a non-reentrant model
 11721 ;;
 11722                           
 11723                           	psect	text54
 11724  0045C6                     __ptext54:
 11725                           	opt stack 0
 11726  0045C6                     _fat_find_file:
 11727                           	opt stack 23
 11728                           
 11729                           ;fat16.c: 519: uint8_t file_number = 0;
 11730                           
 11731                           ;incstack = 0
 11732  0045C6  0E00               	movlw	0
 11733  0045C8  6E32               	movwf	fat_find_file@file_number,c
 11734                           
 11735                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 11736  0045CA  0E00               	movlw	0
 11737  0045CC  6E34               	movwf	fat_find_file@sector+1,c
 11738  0045CE  0E22               	movlw	34
 11739  0045D0  6E33               	movwf	fat_find_file@sector,c
 11740  0045D2  5034               	movf	fat_find_file@sector+1,w,c
 11741  0045D4  E166               	bnz	l2083
 11742  0045D6  0E26               	movlw	38
 11743  0045D8  5C33               	subwf	fat_find_file@sector,w,c
 11744  0045DA  B0D8               	btfsc	status,0,c
 11745  0045DC  D062               	goto	u10600
 11746                           
 11747                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 11748  0045DE  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 11749  0045E2  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 11750  0045E6  0ECC               	movlw	low _buffer
 11751  0045E8  6E2A               	movwf	flash_sector_read@data,c
 11752  0045EA  0E02               	movlw	high _buffer
 11753  0045EC  6E2B               	movwf	flash_sector_read@data+1,c
 11754  0045EE  EC59  F038         	call	_flash_sector_read	;wreg free
 11755                           
 11756                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 11757  0045F2  0E00               	movlw	0
 11758  0045F4  6E36               	movwf	fat_find_file@offset+1,c
 11759  0045F6  0E00               	movlw	0
 11760  0045F8  6E35               	movwf	fat_find_file@offset,c
 11761  0045FA                     l12971:
 11762  0045FA  0E02               	movlw	2
 11763  0045FC  5C36               	subwf	fat_find_file@offset+1,w,c
 11764  0045FE  B0D8               	btfsc	status,0,c
 11765  004600  D04B               	goto	u10590
 11766                           
 11767                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 11768  004602  0ECC               	movlw	low _buffer
 11769  004604  2435               	addwf	fat_find_file@offset,w,c
 11770  004606  6ED9               	movwf	fsr2l,c
 11771  004608  0E02               	movlw	high _buffer
 11772  00460A  2036               	addwfc	fat_find_file@offset+1,w,c
 11773  00460C  6EDA               	movwf	fsr2h,c
 11774  00460E  50DF               	movf	indf2,w,c
 11775  004610  A4D8               	btfss	status,2,c
 11776  004612  D002               	goto	l2086
 11777                           
 11778                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 11779  004614  0EFF               	movlw	255
 11780  004616  0012               	return	
 11781  004618                     l2086:
 11782                           
 11783                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 11784  004618  0ECC               	movlw	low _buffer
 11785  00461A  2435               	addwf	fat_find_file@offset,w,c
 11786  00461C  6ED9               	movwf	fsr2l,c
 11787  00461E  0E02               	movlw	high _buffer
 11788  004620  2036               	addwfc	fat_find_file@offset+1,w,c
 11789  004622  6EDA               	movwf	fsr2h,c
 11790  004624  0EE5               	movlw	229
 11791  004626  18DE               	xorwf	postinc2,w,c
 11792  004628  B4D8               	btfsc	status,2,c
 11793  00462A  D030               	goto	l2092
 11794                           
 11795                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 11796                           
 11797                           ;fat16.c: 537: {;fat16.c: 541: }
 11798  00462C  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 11799  004630  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 11800  004634  0ECC               	movlw	low _buffer
 11801  004636  2435               	addwf	fat_find_file@offset,w,c
 11802  004638  6E03               	movwf	strncmp@s2,c
 11803  00463A  0E02               	movlw	high _buffer
 11804  00463C  2036               	addwfc	fat_find_file@offset+1,w,c
 11805  00463E  6E04               	movwf	strncmp@s2+1,c
 11806  004640  0E00               	movlw	0
 11807  004642  6E06               	movwf	strncmp@len+1,c
 11808  004644  0E08               	movlw	8
 11809  004646  6E05               	movwf	strncmp@len,c
 11810  004648  EC4E  F02E         	call	_strncmp	;wreg free
 11811  00464C  5001               	movf	?_strncmp,w,c
 11812  00464E  1002               	iorwf	?_strncmp+1,w,c
 11813  004650  A4D8               	btfss	status,2,c
 11814  004652  D01C               	goto	l2092
 11815                           
 11816                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 11817  004654  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 11818  004658  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 11819  00465C  0E08               	movlw	8
 11820  00465E  2435               	addwf	fat_find_file@offset,w,c
 11821  004660  6E30               	movwf	??_fat_find_file& (0+255),c
 11822  004662  0E00               	movlw	0
 11823  004664  2036               	addwfc	fat_find_file@offset+1,w,c
 11824  004666  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 11825  004668  0ECC               	movlw	low _buffer
 11826  00466A  2430               	addwf	??_fat_find_file,w,c
 11827  00466C  6E03               	movwf	strncmp@s2,c
 11828  00466E  0E02               	movlw	high _buffer
 11829  004670  2031               	addwfc	??_fat_find_file+1,w,c
 11830  004672  6E04               	movwf	strncmp@s2+1,c
 11831  004674  0E00               	movlw	0
 11832  004676  6E06               	movwf	strncmp@len+1,c
 11833  004678  0E03               	movlw	3
 11834  00467A  6E05               	movwf	strncmp@len,c
 11835  00467C  EC4E  F02E         	call	_strncmp	;wreg free
 11836  004680  5001               	movf	?_strncmp,w,c
 11837  004682  1002               	iorwf	?_strncmp+1,w,c
 11838  004684  A4D8               	btfss	status,2,c
 11839  004686  D002               	goto	l2092
 11840                           
 11841                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 11842  004688  5032               	movf	fat_find_file@file_number,w,c
 11843  00468A  0012               	return	
 11844  00468C                     l2092:
 11845                           
 11846                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 11847  00468C  2A32               	incf	fat_find_file@file_number,f,c
 11848  00468E  0E20               	movlw	32
 11849  004690  2635               	addwf	fat_find_file@offset,f,c
 11850  004692  0E00               	movlw	0
 11851  004694  2236               	addwfc	fat_find_file@offset+1,f,c
 11852  004696  D7B1               	goto	l12971
 11853  004698                     u10590:
 11854  004698  4A33               	infsnz	fat_find_file@sector,f,c
 11855  00469A  2A34               	incf	fat_find_file@sector+1,f,c
 11856  00469C  5034               	movf	fat_find_file@sector+1,w,c
 11857  00469E  E101               	bnz	l13005
 11858  0046A0  D79A               	goto	L5
 11859  0046A2                     u10600:
 11860  0046A2                     l2083:
 11861  0046A2                     l13005:
 11862                           
 11863                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 11864  0046A2  0EFF               	movlw	255
 11865  0046A4  0012               	return	
 11866  0046A6                     __end_of_fat_find_file:
 11867                           	opt stack 0
 11868                           tblptru	equ	0xFF8
 11869                           tblptrh	equ	0xFF7
 11870                           tblptrl	equ	0xFF6
 11871                           tablat	equ	0xFF5
 11872                           prodh	equ	0xFF4
 11873                           prodl	equ	0xFF3
 11874                           intcon	equ	0xFF2
 11875                           intcon3	equ	0xFF0
 11876                           postinc0	equ	0xFEE
 11877                           wreg	equ	0xFE8
 11878                           indf1	equ	0xFE7
 11879                           postdec1	equ	0xFE5
 11880                           plusw1	equ	0xFE3
 11881                           fsr1h	equ	0xFE2
 11882                           fsr1l	equ	0xFE1
 11883                           indf2	equ	0xFDF
 11884                           postinc2	equ	0xFDE
 11885                           postdec2	equ	0xFDD
 11886                           plusw2	equ	0xFDB
 11887                           fsr2h	equ	0xFDA
 11888                           fsr2l	equ	0xFD9
 11889                           status	equ	0xFD8
 11890                           
 11891 ;; *************** function _strncmp *****************
 11892 ;; Defined at:
 11893 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 11894 ;; Parameters:    Size  Location     Type
 11895 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 11896 ;;		 -> bootloader_extension(4), bootloader_filename(9), 
 11897 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 11898 ;;		 -> buffer(512), 
 11899 ;;  len             2    4[COMRAM] unsigned int 
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  2    0[COMRAM] int 
 11904 ;; Registers used:
 11905 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11911 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11913 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11914 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11915 ;;Total ram usage:        8 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_fat_find_file
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text55
 11925  005C9C                     __ptext55:
 11926                           	opt stack 0
 11927  005C9C                     _strncmp:
 11928                           	opt stack 27
 11929                           
 11930                           ;incstack = 0
 11931  005C9C  D034               	goto	l3557
 11932  005C9E                     l12655:
 11933  005C9E  C001  FFF6         	movff	strncmp@s1,tblptrl
 11934  005CA2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11935  005CA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11936  005CA6  6AF8               	clrf	tblptru,c
 11937  005CA8                     	endif
 11938  005CA8                     	if	0	;tblptru may be non-zero
 11939  005CA8                     	endif
 11940  005CA8  0008               	tblrd		*
 11941  005CAA  50F5               	movf	tablat,w,c
 11942  005CAC  0900               	iorlw	0
 11943  005CAE  B4D8               	btfsc	status,2,c
 11944  005CB0  D00E               	goto	u10170
 11945  005CB2  C003  FFD9         	movff	strncmp@s2,fsr2l
 11946  005CB6  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11947  005CBA  C001  FFF6         	movff	strncmp@s1,tblptrl
 11948  005CBE  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11949  005CC2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11950  005CC2  6AF8               	clrf	tblptru,c
 11951  005CC4                     	endif
 11952  005CC4                     	if	0	;tblptru may be non-zero
 11953  005CC4                     	endif
 11954  005CC4  50DE               	movf	postinc2,w,c
 11955  005CC6  0009               	tblrd		*+
 11956  005CC8  18F5               	xorwf	tablat,w,c
 11957  005CCA  B4D8               	btfsc	status,2,c
 11958  005CCC  D018               	goto	l3559
 11959  005CCE                     u10170:
 11960  005CCE  C003  FFD9         	movff	strncmp@s2,fsr2l
 11961  005CD2  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 11962  005CD6  50DF               	movf	indf2,w,c
 11963  005CD8  6E07               	movwf	??_strncmp& (0+255),c
 11964  005CDA  6A08               	clrf	(??_strncmp+1)& (0+255),c
 11965  005CDC  1E07               	comf	??_strncmp,f,c
 11966  005CDE  1E08               	comf	??_strncmp+1,f,c
 11967  005CE0  4A07               	infsnz	??_strncmp,f,c
 11968  005CE2  2A08               	incf	??_strncmp+1,f,c
 11969  005CE4  C001  FFF6         	movff	strncmp@s1,tblptrl
 11970  005CE8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 11971  005CEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11972  005CEC  6AF8               	clrf	tblptru,c
 11973  005CEE                     	endif
 11974  005CEE                     	if	0	;tblptru may be non-zero
 11975  005CEE                     	endif
 11976  005CEE  0008               	tblrd		*
 11977  005CF0  50F5               	movf	tablat,w,c
 11978  005CF2  2407               	addwf	??_strncmp,w,c
 11979  005CF4  6E01               	movwf	?_strncmp,c
 11980  005CF6  0E00               	movlw	0
 11981  005CF8  2008               	addwfc	??_strncmp+1,w,c
 11982  005CFA  6E02               	movwf	?_strncmp+1,c
 11983  005CFC  0012               	return	
 11984  005CFE                     l3559:
 11985  005CFE  4A01               	infsnz	strncmp@s1,f,c
 11986  005D00  2A02               	incf	strncmp@s1+1,f,c
 11987  005D02  4A03               	infsnz	strncmp@s2,f,c
 11988  005D04  2A04               	incf	strncmp@s2+1,f,c
 11989  005D06                     l3557:
 11990  005D06  0605               	decf	strncmp@len,f,c
 11991  005D08  A0D8               	btfss	status,0,c
 11992  005D0A  0606               	decf	strncmp@len+1,f,c
 11993  005D0C  2805               	incf	strncmp@len,w,c
 11994  005D0E  E1C7               	bnz	l12655
 11995  005D10  2806               	incf	strncmp@len+1,w,c
 11996  005D12  A4D8               	btfss	status,2,c
 11997  005D14  D7C4               	goto	l3558
 11998  005D16  0E00               	movlw	0
 11999  005D18  6E02               	movwf	?_strncmp+1,c
 12000  005D1A  0E00               	movlw	0
 12001  005D1C  6E01               	movwf	?_strncmp,c
 12002  005D1E  0012               	return	
 12003  005D20                     __end_of_strncmp:
 12004                           	opt stack 0
 12005                           tblptru	equ	0xFF8
 12006                           tblptrh	equ	0xFF7
 12007                           tblptrl	equ	0xFF6
 12008                           tablat	equ	0xFF5
 12009                           prodh	equ	0xFF4
 12010                           prodl	equ	0xFF3
 12011                           intcon	equ	0xFF2
 12012                           intcon3	equ	0xFF0
 12013                           postinc0	equ	0xFEE
 12014                           wreg	equ	0xFE8
 12015                           indf1	equ	0xFE7
 12016                           postdec1	equ	0xFE5
 12017                           plusw1	equ	0xFE3
 12018                           fsr1h	equ	0xFE2
 12019                           fsr1l	equ	0xFE1
 12020                           indf2	equ	0xFDF
 12021                           postinc2	equ	0xFDE
 12022                           postdec2	equ	0xFDD
 12023                           plusw2	equ	0xFDB
 12024                           fsr2h	equ	0xFDA
 12025                           fsr2l	equ	0xFD9
 12026                           status	equ	0xFD8
 12027                           
 12028 ;; *************** function __normal_mode *****************
 12029 ;; Defined at:
 12030 ;;		line 161 in file "main.c"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;		None
 12033 ;; Auto vars:     Size  Location     Type
 12034 ;;		None
 12035 ;; Return value:  Size  Location     Type
 12036 ;;                  1    wreg      unsigned char 
 12037 ;; Registers used:
 12038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12039 ;; Tracked objects:
 12040 ;;		On entry : 0/0
 12041 ;;		On exit  : 0/0
 12042 ;;		Unchanged: 0/0
 12043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12048 ;;Total ram usage:        0 bytes
 12049 ;; Hardware stack levels used:    1
 12050 ;; Hardware stack levels required when called:    3
 12051 ;; This function calls:
 12052 ;;		_i2c_eeprom_readByte
 12053 ;;		_i2c_eeprom_writeByte
 12054 ;; This function is called by:
 12055 ;;		_main
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text56
 12060  0064C0                     __ptext56:
 12061                           	opt stack 0
 12062  0064C0                     __normal_mode:
 12063                           	opt stack 27
 12064                           
 12065                           ;main.c: 163: if(i2c_eeprom_readByte(0x100)==0x94)
 12066                           
 12067                           ;incstack = 0
 12068  0064C0  0E01               	movlw	1
 12069  0064C2  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 12070  0064C4  0E00               	movlw	0
 12071  0064C6  6E12               	movwf	i2c_eeprom_readByte@address,c
 12072  0064C8  EC13  F034         	call	_i2c_eeprom_readByte	;wreg free
 12073  0064CC  0A94               	xorlw	148
 12074  0064CE  A4D8               	btfss	status,2,c
 12075  0064D0  D00A               	goto	l882
 12076                           
 12077                           ;main.c: 164: {;main.c: 166: i2c_eeprom_writeByte(0x100, 0x00);
 12078  0064D2  0E01               	movlw	1
 12079  0064D4  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 12080  0064D6  0E00               	movlw	0
 12081  0064D8  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 12082  0064DA  0E00               	movlw	0
 12083  0064DC  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 12084  0064DE  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
 12085                           
 12086                           ;main.c: 168: return 0;
 12087  0064E2  0E00               	movlw	0
 12088  0064E4  0012               	return	
 12089  0064E6                     l882:
 12090                           
 12091                           ;main.c: 170: else if(i2c_eeprom_readByte(0x100)==0x78)
 12092  0064E6  0E01               	movlw	1
 12093  0064E8  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 12094  0064EA  0E00               	movlw	0
 12095  0064EC  6E12               	movwf	i2c_eeprom_readByte@address,c
 12096  0064EE  EC13  F034         	call	_i2c_eeprom_readByte	;wreg free
 12097  0064F2  0A78               	xorlw	120
 12098  0064F4  A4D8               	btfss	status,2,c
 12099  0064F6  D00A               	goto	l885
 12100                           
 12101                           ;main.c: 171: {;main.c: 173: i2c_eeprom_writeByte(0x100, 0x00);
 12102  0064F8  0E01               	movlw	1
 12103  0064FA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 12104  0064FC  0E00               	movlw	0
 12105  0064FE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 12106  006500  0E00               	movlw	0
 12107  006502  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 12108  006504  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
 12109                           
 12110                           ;main.c: 175: return 1;
 12111  006508  0E01               	movlw	1
 12112  00650A  0012               	return	
 12113  00650C                     l885:
 12114                           
 12115                           ;main.c: 176: };main.c: 178: if(PORTEbits.RE1 || PORTAbits.RA1)
 12116  00650C  B284               	btfsc	3972,1,c	;volatile
 12117  00650E  D002               	goto	u12370
 12118  006510  A280               	btfss	3968,1,c	;volatile
 12119  006512  D002               	goto	l886
 12120  006514                     u12370:
 12121                           
 12122                           ;main.c: 179: {;main.c: 181: return 0;
 12123  006514  0E00               	movlw	0
 12124                           
 12125                           ;main.c: 182: }
 12126  006516  0012               	return	
 12127  006518                     l886:
 12128                           
 12129                           ;main.c: 183: else;main.c: 184: {;main.c: 186: return 1;
 12130  006518  0E01               	movlw	1
 12131  00651A  0012               	return	
 12132  00651C                     __end_of__normal_mode:
 12133                           	opt stack 0
 12134                           tblptru	equ	0xFF8
 12135                           tblptrh	equ	0xFF7
 12136                           tblptrl	equ	0xFF6
 12137                           tablat	equ	0xFF5
 12138                           prodh	equ	0xFF4
 12139                           prodl	equ	0xFF3
 12140                           intcon	equ	0xFF2
 12141                           intcon3	equ	0xFF0
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           indf1	equ	0xFE7
 12145                           postdec1	equ	0xFE5
 12146                           plusw1	equ	0xFE3
 12147                           fsr1h	equ	0xFE2
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           postdec2	equ	0xFDD
 12152                           plusw2	equ	0xFDB
 12153                           fsr2h	equ	0xFDA
 12154                           fsr2l	equ	0xFD9
 12155                           status	equ	0xFD8
 12156                           
 12157 ;; *************** function _i2c_eeprom_readByte *****************
 12158 ;; Defined at:
 12159 ;;		line 202 in file "i2c.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  address         2   17[COMRAM] unsigned int 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  addr            1   23[COMRAM] unsigned char 
 12164 ;;  slave_addres    1   22[COMRAM] unsigned char 
 12165 ;; Return value:  Size  Location     Type
 12166 ;;                  1    wreg      unsigned char 
 12167 ;; Registers used:
 12168 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12169 ;; Tracked objects:
 12170 ;;		On entry : 0/0
 12171 ;;		On exit  : 0/0
 12172 ;;		Unchanged: 0/0
 12173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12177 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12178 ;;Total ram usage:        7 bytes
 12179 ;; Hardware stack levels used:    1
 12180 ;; Hardware stack levels required when called:    2
 12181 ;; This function calls:
 12182 ;;		__i2c_eeprom_busy
 12183 ;;		__i2c_read
 12184 ;;		__i2c_write
 12185 ;; This function is called by:
 12186 ;;		__normal_mode
 12187 ;; This function uses a non-reentrant model
 12188 ;;
 12189                           
 12190                           	psect	text57
 12191  006826                     __ptext57:
 12192                           	opt stack 0
 12193  006826                     _i2c_eeprom_readByte:
 12194                           	opt stack 27
 12195                           
 12196                           ;i2c.c: 204: uint8_t slave_address;;i2c.c: 205: uint8_t addr;;i2c.c: 206: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 12197                           
 12198                           ;incstack = 0
 12199  006826  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 12200  00682A  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 12201  00682E  0E07               	movlw	7
 12202  006830  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 12203  006832                     u11455:
 12204  006832  90D8               	bcf	status,0,c
 12205  006834  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 12206  006836  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 12207  006838  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 12208  00683A  D7FB               	goto	u11455
 12209  00683C  5014               	movf	??_i2c_eeprom_readByte,w,c
 12210  00683E  0B0E               	andlw	14
 12211  006840  09A0               	iorlw	160
 12212  006842  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 12213                           
 12214                           ;i2c.c: 207: addr = address & 0xFF;
 12215  006844  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 12216  006848  EC7F  F038         	call	__i2c_eeprom_busy	;wreg free
 12217  00684C  0900               	iorlw	0
 12218  00684E  A4D8               	btfss	status,2,c
 12219  006850  D7FB               	goto	l1179
 12220                           
 12221                           ;i2c.c: 212: _i2c_write(slave_address, &addr, 1);
 12222  006852  0E18               	movlw	low i2c_eeprom_readByte@addr
 12223  006854  6E06               	movwf	__i2c_write@data,c
 12224  006856  0E00               	movlw	high i2c_eeprom_readByte@addr
 12225  006858  6E07               	movwf	__i2c_write@data+1,c
 12226  00685A  0E01               	movlw	1
 12227  00685C  6E08               	movwf	__i2c_write@length,c
 12228  00685E  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 12229  006860  EC73  F035         	call	__i2c_write
 12230                           
 12231                           ;i2c.c: 213: _i2c_read(slave_address, &addr, 1);
 12232  006864  0E18               	movlw	low i2c_eeprom_readByte@addr
 12233  006866  6E06               	movwf	__i2c_read@data,c
 12234  006868  0E00               	movlw	high i2c_eeprom_readByte@addr
 12235  00686A  6E07               	movwf	__i2c_read@data+1,c
 12236  00686C  0E01               	movlw	1
 12237  00686E  6E08               	movwf	__i2c_read@length,c
 12238  006870  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 12239  006872  EC7F  F02D         	call	__i2c_read
 12240                           
 12241                           ;i2c.c: 214: return addr;
 12242  006876  5018               	movf	i2c_eeprom_readByte@addr,w,c
 12243  006878  0012               	return	
 12244  00687A                     __end_of_i2c_eeprom_readByte:
 12245                           	opt stack 0
 12246                           tblptru	equ	0xFF8
 12247                           tblptrh	equ	0xFF7
 12248                           tblptrl	equ	0xFF6
 12249                           tablat	equ	0xFF5
 12250                           prodh	equ	0xFF4
 12251                           prodl	equ	0xFF3
 12252                           intcon	equ	0xFF2
 12253                           intcon3	equ	0xFF0
 12254                           postinc0	equ	0xFEE
 12255                           wreg	equ	0xFE8
 12256                           indf1	equ	0xFE7
 12257                           postdec1	equ	0xFE5
 12258                           plusw1	equ	0xFE3
 12259                           fsr1h	equ	0xFE2
 12260                           fsr1l	equ	0xFE1
 12261                           indf2	equ	0xFDF
 12262                           postinc2	equ	0xFDE
 12263                           postdec2	equ	0xFDD
 12264                           plusw2	equ	0xFDB
 12265                           fsr2h	equ	0xFDA
 12266                           fsr2l	equ	0xFD9
 12267                           status	equ	0xFD8
 12268                           
 12269 ;; *************** function __i2c_read *****************
 12270 ;; Defined at:
 12271 ;;		line 102 in file "i2c.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  slave_addres    1    wreg     unsigned char 
 12274 ;;  data            2    5[COMRAM] PTR unsigned char 
 12275 ;;		 -> i2c_eeprom_readByte@addr(1), 
 12276 ;;  length          1    7[COMRAM] unsigned char 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  slave_addres    1   15[COMRAM] unsigned char 
 12279 ;;  cntr            1   16[COMRAM] unsigned char 
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  1    wreg      void 
 12282 ;; Registers used:
 12283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12289 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12291 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12293 ;;Total ram usage:       12 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    1
 12296 ;; This function calls:
 12297 ;;		__i2c_acknowledge
 12298 ;;		__i2c_get
 12299 ;;		__i2c_not_acknowledge
 12300 ;;		__i2c_send
 12301 ;;		__i2c_start
 12302 ;;		__i2c_stop
 12303 ;;		__i2c_wait_idle
 12304 ;; This function is called by:
 12305 ;;		_i2c_eeprom_readByte
 12306 ;;		_i2c_eeprom_read
 12307 ;; This function uses a non-reentrant model
 12308 ;;
 12309                           
 12310                           	psect	text58
 12311  005AFE                     __ptext58:
 12312                           	opt stack 0
 12313  005AFE                     __i2c_read:
 12314                           	opt stack 27
 12315                           
 12316                           ;incstack = 0
 12317                           ;__i2c_read@slave_address stored from wreg
 12318  005AFE  6E10               	movwf	__i2c_read@slave_address,c
 12319                           
 12320                           ;i2c.c: 104: uint8_t cntr;;i2c.c: 106: _i2c_wait_idle();
 12321  005B00  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 12322                           
 12323                           ;i2c.c: 107: _i2c_start();
 12324  005B04  EC1D  F03A         	call	__i2c_start	;wreg free
 12325                           
 12326                           ;i2c.c: 108: _i2c_wait_idle();
 12327  005B08  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 12328                           
 12329                           ;i2c.c: 109: _i2c_send(slave_address | 0x01);
 12330  005B0C  5010               	movf	__i2c_read@slave_address,w,c
 12331  005B0E  0901               	iorlw	1
 12332  005B10  EC21  F03A         	call	__i2c_send
 12333                           
 12334                           ;i2c.c: 110: _i2c_wait_idle();
 12335  005B14  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 12336                           
 12337                           ;i2c.c: 120: for(cntr=0; cntr<length-1; ++cntr)
 12338  005B18  0E00               	movlw	0
 12339  005B1A  6E11               	movwf	__i2c_read@cntr,c
 12340  005B1C  D00E               	goto	l1157
 12341  005B1E                     
 12342                           ;i2c.c: 121: {;i2c.c: 122: data[cntr] = _i2c_get();
 12343  005B1E  5011               	movf	__i2c_read@cntr,w,c
 12344  005B20  0D01               	mullw	1
 12345  005B22  50F3               	movf	prodl,w,c
 12346  005B24  2406               	addwf	__i2c_read@data,w,c
 12347  005B26  6ED9               	movwf	fsr2l,c
 12348  005B28  50F4               	movf	prodh,w,c
 12349  005B2A  2007               	addwfc	__i2c_read@data+1,w,c
 12350  005B2C  6EDA               	movwf	fsr2h,c
 12351  005B2E  ECEC  F039         	call	__i2c_get	;wreg free
 12352  005B32  6EDF               	movwf	indf2,c
 12353                           
 12354                           ;i2c.c: 123: _i2c_acknowledge();
 12355  005B34  ECF1  F039         	call	__i2c_acknowledge	;wreg free
 12356  005B38  2A11               	incf	__i2c_read@cntr,f,c
 12357  005B3A                     l1157:
 12358  005B3A  0EFF               	movlw	255
 12359  005B3C  6E09               	movwf	??__i2c_read& (0+255),c
 12360  005B3E  0EFF               	movlw	255
 12361  005B40  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 12362  005B42  5008               	movf	__i2c_read@length,w,c
 12363  005B44  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 12364  005B46  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 12365  005B48  5009               	movf	??__i2c_read,w,c
 12366  005B4A  260B               	addwf	??__i2c_read+2,f,c
 12367  005B4C  500A               	movf	??__i2c_read+1,w,c
 12368  005B4E  220C               	addwfc	??__i2c_read+3,f,c
 12369  005B50  5011               	movf	__i2c_read@cntr,w,c
 12370  005B52  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 12371  005B54  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 12372  005B56  500B               	movf	??__i2c_read+2,w,c
 12373  005B58  5C0D               	subwf	??__i2c_read+4,w,c
 12374  005B5A  500E               	movf	??__i2c_read+5,w,c
 12375  005B5C  0A80               	xorlw	128
 12376  005B5E  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 12377  005B60  500C               	movf	??__i2c_read+3,w,c
 12378  005B62  0A80               	xorlw	128
 12379  005B64  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 12380  005B66  A0D8               	btfss	status,0,c
 12381  005B68  D7DA               	goto	l1158
 12382                           
 12383                           ;i2c.c: 124: };i2c.c: 125: data[cntr] = _i2c_get();
 12384  005B6A  5011               	movf	__i2c_read@cntr,w,c
 12385  005B6C  0D01               	mullw	1
 12386  005B6E  50F3               	movf	prodl,w,c
 12387  005B70  2406               	addwf	__i2c_read@data,w,c
 12388  005B72  6ED9               	movwf	fsr2l,c
 12389  005B74  50F4               	movf	prodh,w,c
 12390  005B76  2007               	addwfc	__i2c_read@data+1,w,c
 12391  005B78  6EDA               	movwf	fsr2h,c
 12392  005B7A  ECEC  F039         	call	__i2c_get	;wreg free
 12393  005B7E  6EDF               	movwf	indf2,c
 12394                           
 12395                           ;i2c.c: 126: _i2c_not_acknowledge();
 12396  005B80  ECE7  F039         	call	__i2c_not_acknowledge	;wreg free
 12397                           
 12398                           ;i2c.c: 128: _i2c_stop();
 12399  005B84  EC19  F03A         	call	__i2c_stop	;wreg free
 12400  005B88  0012               	return		;funcret
 12401  005B8A                     __end_of__i2c_read:
 12402                           	opt stack 0
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           intcon3	equ	0xFF0
 12411                           postinc0	equ	0xFEE
 12412                           wreg	equ	0xFE8
 12413                           indf1	equ	0xFE7
 12414                           postdec1	equ	0xFE5
 12415                           plusw1	equ	0xFE3
 12416                           fsr1h	equ	0xFE2
 12417                           fsr1l	equ	0xFE1
 12418                           indf2	equ	0xFDF
 12419                           postinc2	equ	0xFDE
 12420                           postdec2	equ	0xFDD
 12421                           plusw2	equ	0xFDB
 12422                           fsr2h	equ	0xFDA
 12423                           fsr2l	equ	0xFD9
 12424                           status	equ	0xFD8
 12425                           
 12426 ;; *************** function __i2c_not_acknowledge *****************
 12427 ;; Defined at:
 12428 ;;		line 75 in file "i2c.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		None
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/0
 12439 ;;		On exit  : 0/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; This function calls:
 12449 ;;		Nothing
 12450 ;; This function is called by:
 12451 ;;		__i2c_read
 12452 ;;		_i2c_adc_read
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           	psect	text59
 12457  0073CE                     __ptext59:
 12458                           	opt stack 0
 12459  0073CE                     __i2c_not_acknowledge:
 12460                           	opt stack 27
 12461                           
 12462                           ;i2c.c: 77: SSP1CON2bits.ACKDT = 1;
 12463                           
 12464                           ;incstack = 0
 12465  0073CE  8AC5               	bsf	4037,5,c	;volatile
 12466                           
 12467                           ;i2c.c: 78: SSP1CON2bits.ACKEN = 1;
 12468  0073D0  88C5               	bsf	4037,4,c	;volatile
 12469  0073D2  A8C5               	btfss	4037,4,c	;volatile
 12470  0073D4  0012               	return	
 12471  0073D6  D7FD               	goto	l1146
 12472  0073D8                     __end_of__i2c_not_acknowledge:
 12473                           	opt stack 0
 12474                           tblptru	equ	0xFF8
 12475                           tblptrh	equ	0xFF7
 12476                           tblptrl	equ	0xFF6
 12477                           tablat	equ	0xFF5
 12478                           prodh	equ	0xFF4
 12479                           prodl	equ	0xFF3
 12480                           intcon	equ	0xFF2
 12481                           intcon3	equ	0xFF0
 12482                           postinc0	equ	0xFEE
 12483                           wreg	equ	0xFE8
 12484                           indf1	equ	0xFE7
 12485                           postdec1	equ	0xFE5
 12486                           plusw1	equ	0xFE3
 12487                           fsr1h	equ	0xFE2
 12488                           fsr1l	equ	0xFE1
 12489                           indf2	equ	0xFDF
 12490                           postinc2	equ	0xFDE
 12491                           postdec2	equ	0xFDD
 12492                           plusw2	equ	0xFDB
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function __i2c_get *****************
 12498 ;; Defined at:
 12499 ;;		line 55 in file "i2c.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;		None
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      unsigned char 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12517 ;;Total ram usage:        0 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; This function calls:
 12520 ;;		Nothing
 12521 ;; This function is called by:
 12522 ;;		__i2c_read
 12523 ;;		_i2c_adc_read
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text60
 12528  0073D8                     __ptext60:
 12529                           	opt stack 0
 12530  0073D8                     __i2c_get:
 12531                           	opt stack 27
 12532                           
 12533                           ;i2c.c: 57: SSP1CON2bits.RCEN = 1 ;
 12534                           
 12535                           ;incstack = 0
 12536  0073D8  86C5               	bsf	4037,3,c	;volatile
 12537  0073DA  B6C5               	btfsc	4037,3,c	;volatile
 12538  0073DC  D7FE               	goto	l1128
 12539                           
 12540                           ;i2c.c: 59: return SSP1BUF;
 12541  0073DE  50C9               	movf	4041,w,c	;volatile
 12542  0073E0  0012               	return	
 12543  0073E2                     __end_of__i2c_get:
 12544                           	opt stack 0
 12545                           tblptru	equ	0xFF8
 12546                           tblptrh	equ	0xFF7
 12547                           tblptrl	equ	0xFF6
 12548                           tablat	equ	0xFF5
 12549                           prodh	equ	0xFF4
 12550                           prodl	equ	0xFF3
 12551                           intcon	equ	0xFF2
 12552                           intcon3	equ	0xFF0
 12553                           postinc0	equ	0xFEE
 12554                           wreg	equ	0xFE8
 12555                           indf1	equ	0xFE7
 12556                           postdec1	equ	0xFE5
 12557                           plusw1	equ	0xFE3
 12558                           fsr1h	equ	0xFE2
 12559                           fsr1l	equ	0xFE1
 12560                           indf2	equ	0xFDF
 12561                           postinc2	equ	0xFDE
 12562                           postdec2	equ	0xFDD
 12563                           plusw2	equ	0xFDB
 12564                           fsr2h	equ	0xFDA
 12565                           fsr2l	equ	0xFD9
 12566                           status	equ	0xFD8
 12567                           
 12568 ;; *************** function __i2c_acknowledge *****************
 12569 ;; Defined at:
 12570 ;;		line 68 in file "i2c.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;		None
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  1    wreg      void 
 12577 ;; Registers used:
 12578 ;;		None
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12588 ;;Total ram usage:        0 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; This function calls:
 12591 ;;		Nothing
 12592 ;; This function is called by:
 12593 ;;		__i2c_read
 12594 ;;		_i2c_adc_read
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text61
 12599  0073E2                     __ptext61:
 12600                           	opt stack 0
 12601  0073E2                     __i2c_acknowledge:
 12602                           	opt stack 27
 12603                           
 12604                           ;i2c.c: 70: SSP1CON2bits.ACKDT = 0;
 12605                           
 12606                           ;incstack = 0
 12607  0073E2  9AC5               	bcf	4037,5,c	;volatile
 12608                           
 12609                           ;i2c.c: 71: SSP1CON2bits.ACKEN = 1;
 12610  0073E4  88C5               	bsf	4037,4,c	;volatile
 12611  0073E6  A8C5               	btfss	4037,4,c	;volatile
 12612  0073E8  0012               	return	
 12613  0073EA  D7FD               	goto	l1140
 12614  0073EC                     __end_of__i2c_acknowledge:
 12615                           	opt stack 0
 12616                           tblptru	equ	0xFF8
 12617                           tblptrh	equ	0xFF7
 12618                           tblptrl	equ	0xFF6
 12619                           tablat	equ	0xFF5
 12620                           prodh	equ	0xFF4
 12621                           prodl	equ	0xFF3
 12622                           intcon	equ	0xFF2
 12623                           intcon3	equ	0xFF0
 12624                           postinc0	equ	0xFEE
 12625                           wreg	equ	0xFE8
 12626                           indf1	equ	0xFE7
 12627                           postdec1	equ	0xFE5
 12628                           plusw1	equ	0xFE3
 12629                           fsr1h	equ	0xFE2
 12630                           fsr1l	equ	0xFE1
 12631                           indf2	equ	0xFDF
 12632                           postinc2	equ	0xFDE
 12633                           postdec2	equ	0xFDD
 12634                           plusw2	equ	0xFDB
 12635                           fsr2h	equ	0xFDA
 12636                           fsr2l	equ	0xFD9
 12637                           status	equ	0xFD8
 12638                           
 12639 ;; *************** function _USBDeviceTasks *****************
 12640 ;; Defined at:
 12641 ;;		line 477 in file "usb_device.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;		None
 12644 ;; Auto vars:     Size  Location     Type
 12645 ;;  i               1   31[COMRAM] unsigned char 
 12646 ;; Return value:  Size  Location     Type
 12647 ;;                  1    wreg      void 
 12648 ;; Registers used:
 12649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12650 ;; Tracked objects:
 12651 ;;		On entry : 0/0
 12652 ;;		On exit  : 0/0
 12653 ;;		Unchanged: 0/0
 12654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12659 ;;Total ram usage:        1 bytes
 12660 ;; Hardware stack levels used:    1
 12661 ;; Hardware stack levels required when called:    8
 12662 ;; This function calls:
 12663 ;;		_USBCtrlEPAllowStatusStage
 12664 ;;		_USBCtrlEPService
 12665 ;;		_USBDeviceInit
 12666 ;;		_USBIncrement1msInternalTimers
 12667 ;;		_USBStallHandler
 12668 ;;		_USBSuspend
 12669 ;;		_USBWakeFromSuspend
 12670 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12671 ;; This function is called by:
 12672 ;;		_main
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text62
 12677  002E16                     __ptext62:
 12678                           	opt stack 0
 12679  002E16                     _USBDeviceTasks:
 12680                           	opt stack 22
 12681                           
 12682                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12683                           
 12684                           ; BSR set to: 15
 12685                           
 12686                           ; BSR set to: 15
 12687                           ;usb_device.c: 543: return;
 12688                           
 12689                           ; BSR set to: 15
 12690                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12691                           
 12692                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12693                           
 12694                           ;usb_device.c: 511: UIE = 0;
 12695                           
 12696                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12697                           
 12698                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12699                           
 12700                           ;incstack = 0
 12701  002E16  505F               	movf	_USBDeviceState,w,c
 12702  002E18  A4D8               	btfss	status,2,c
 12703  002E1A  D011               	goto	l150
 12704                           
 12705                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12706  002E1C  0E00               	movlw	0
 12707  002E1E  6E65               	movwf	3941,c	;volatile
 12708                           
 12709                           ;usb_device.c: 572: UIE = 0;
 12710  002E20  0E00               	movlw	0
 12711  002E22  010F               	movlb	15	; () banked
 12712  002E24  6F36               	movwf	54,b	;volatile
 12713                           
 12714                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12715  002E26  0E16               	movlw	22
 12716  002E28  6F39               	movwf	57,b	;volatile
 12717  002E2A  0E9F               	movlw	159
 12718  002E2C  6F37               	movwf	55,b	;volatile
 12719  002E2E  0E7B               	movlw	123
 12720  002E30  6F36               	movwf	54,b	;volatile
 12721                           
 12722                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12723  002E32  D001               	goto	l151
 12724  002E34                     l152:
 12725  002E34  8665               	bsf	3941,3,c	;volatile
 12726  002E36                     l151:
 12727  002E36  A665               	btfss	3941,3,c	;volatile
 12728  002E38  D7FD               	goto	l152
 12729                           
 12730                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12731  002E3A  0E01               	movlw	1
 12732  002E3C  6E5F               	movwf	_USBDeviceState,c
 12733  002E3E                     l150:
 12734                           
 12735                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12736  002E3E  045F               	decf	_USBDeviceState,w,c
 12737  002E40  B4D8               	btfsc	status,2,c
 12738                           
 12739                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12740  002E42  BA65               	btfsc	3941,5,c	;volatile
 12741  002E44  D009               	goto	l155
 12742                           
 12743                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12744  002E46  0E00               	movlw	0
 12745  002E48  6E62               	movwf	3938,c	;volatile
 12746                           
 12747                           ;usb_device.c: 612: UIE=0;
 12748  002E4A  0E00               	movlw	0
 12749  002E4C  010F               	movlb	15	; () banked
 12750  002E4E  6F36               	movwf	54,b	;volatile
 12751                           
 12752                           ; BSR set to: 15
 12753                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12754  002E50  8136               	bsf	54,0,b	;volatile
 12755                           
 12756                           ; BSR set to: 15
 12757                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12758  002E52  8936               	bsf	54,4,b	;volatile
 12759                           
 12760                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12761  002E54  0E02               	movlw	2
 12762  002E56  6E5F               	movwf	_USBDeviceState,c
 12763  002E58                     l155:
 12764                           
 12765                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12766                           
 12767                           ; BSR set to: 15
 12768                           
 12769                           ; BSR set to: 15
 12770  002E58  A462               	btfss	3938,2,c	;volatile
 12771  002E5A  D006               	goto	l156
 12772  002E5C  010F               	movlb	15	; () banked
 12773  002E5E  A536               	btfss	54,2,b	;volatile
 12774  002E60  D003               	goto	l156
 12775                           
 12776                           ; BSR set to: 15
 12777                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12778  002E62  9462               	bcf	3938,2,c	;volatile
 12779                           
 12780                           ; BSR set to: 15
 12781                           ;usb_device.c: 640: USBWakeFromSuspend();
 12782  002E64  ECD6  F036         	call	_USBWakeFromSuspend	;wreg free
 12783  002E68                     l156:
 12784                           
 12785                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12786  002E68  A265               	btfss	3941,1,c	;volatile
 12787  002E6A  D002               	goto	l157
 12788                           
 12789                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12790  002E6C  98A1               	bcf	4001,4,c	;volatile
 12791                           
 12792                           ;usb_device.c: 650: return;
 12793  002E6E  0012               	return	
 12794  002E70                     l157:
 12795                           
 12796                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12797  002E70  A062               	btfss	3938,0,c	;volatile
 12798  002E72  D008               	goto	l158
 12799  002E74  010F               	movlb	15	; () banked
 12800  002E76  A136               	btfss	54,0,b	;volatile
 12801  002E78  D005               	goto	l158
 12802                           
 12803                           ; BSR set to: 15
 12804                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12805  002E7A  EC7D  F01A         	call	_USBDeviceInit	;wreg free
 12806                           
 12807                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12808  002E7E  0E04               	movlw	4
 12809  002E80  6E5F               	movwf	_USBDeviceState,c
 12810                           
 12811                           ;usb_device.c: 681: (UIR &= 0xFE);
 12812  002E82  9062               	bcf	3938,0,c	;volatile
 12813  002E84                     l158:
 12814                           
 12815                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12816  002E84  A862               	btfss	3938,4,c	;volatile
 12817  002E86  D004               	goto	l159
 12818  002E88  010F               	movlb	15	; () banked
 12819  002E8A  B936               	btfsc	54,4,b	;volatile
 12820                           
 12821                           ; BSR set to: 15
 12822                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12823  002E8C  EC72  F037         	call	_USBSuspend	;wreg free
 12824  002E90                     l159:
 12825                           
 12826                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12827  002E90  AC62               	btfss	3938,6,c	;volatile
 12828  002E92  D01C               	goto	l163
 12829                           
 12830                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12831  002E94  010F               	movlb	15	; () banked
 12832  002E96  AD36               	btfss	54,6,b	;volatile
 12833  002E98  D00E               	goto	l161
 12834                           
 12835                           ; BSR set to: 15
 12836                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12837  002E9A  0E00               	movlw	0
 12838  002E9C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12839  002E9E  0E73               	movlw	115
 12840  002EA0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12841  002EA2  0E00               	movlw	0
 12842  002EA4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12843  002EA6  0E00               	movlw	0
 12844  002EA8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12845  002EAA  0E00               	movlw	0
 12846  002EAC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12847  002EAE  0E01               	movlw	1
 12848  002EB0  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12849  002EB2  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12850  002EB6                     l161:
 12851                           
 12852                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12853  002EB6  9C62               	bcf	3938,6,c	;volatile
 12854                           
 12855                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12856  002EB8  ECA4  F038         	call	_USBIncrement1msInternalTimers	;wreg free
 12857                           
 12858                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12859  002EBC  0100               	movlb	0	; () banked
 12860  002EBE  51A6               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12861  002EC0  A4D8               	btfss	status,2,c
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12865  002EC2  07A6               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12869                           
 12870                           ; BSR set to: 0
 12871  002EC4  51A6               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12872  002EC6  B4D8               	btfsc	status,2,c
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12876  002EC8  ECB1  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12877  002ECC                     l163:
 12878                           
 12879                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12880  002ECC  AA62               	btfss	3938,5,c	;volatile
 12881  002ECE  D004               	goto	l164
 12882  002ED0  010F               	movlb	15	; () banked
 12883  002ED2  BB36               	btfsc	54,5,b	;volatile
 12884                           
 12885                           ; BSR set to: 15
 12886                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12887  002ED4  ECBA  F035         	call	_USBStallHandler	;wreg free
 12888  002ED8                     l164:
 12889                           
 12890                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12891  002ED8  A262               	btfss	3938,1,c	;volatile
 12892  002EDA  D012               	goto	l165
 12893  002EDC  010F               	movlb	15	; () banked
 12894  002EDE  A336               	btfss	54,1,b	;volatile
 12895  002EE0  D00F               	goto	l165
 12896                           
 12897                           ; BSR set to: 15
 12898                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12899  002EE2  0E7F               	movlw	127
 12900  002EE4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12901  002EE6  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12902  002EE8  0E00               	movlw	0
 12903  002EEA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12904  002EEC  0E00               	movlw	0
 12905  002EEE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12906  002EF0  0E00               	movlw	0
 12907  002EF2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12908  002EF4  0E01               	movlw	1
 12909  002EF6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12910  002EF8  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12911                           
 12912                           ;usb_device.c: 759: {UEIR = 0;};
 12913  002EFC  0E00               	movlw	0
 12914  002EFE  6E63               	movwf	3939,c	;volatile
 12915  002F00                     l165:
 12916                           
 12917                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12918  002F00  0E04               	movlw	4
 12919  002F02  605F               	cpfslt	_USBDeviceState,c
 12920  002F04  D002               	goto	l166
 12921                           
 12922                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12923  002F06  98A1               	bcf	4001,4,c	;volatile
 12924                           
 12925                           ;usb_device.c: 777: return;
 12926  002F08  0012               	return	
 12927  002F0A                     l166:
 12928                           
 12929                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12930  002F0A  010F               	movlb	15	; () banked
 12931  002F0C  A736               	btfss	54,3,b	;volatile
 12932  002F0E  D03C               	goto	u12330
 12933                           
 12934                           ; BSR set to: 15
 12935                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12936  002F10  0E00               	movlw	0
 12937  002F12  6E20               	movwf	USBDeviceTasks@i,c
 12938  002F14                     l14321:
 12939                           
 12940                           ; BSR set to: 15
 12941  002F14  0E03               	movlw	3
 12942  002F16  6420               	cpfsgt	USBDeviceTasks@i,c
 12943  002F18  D001               	goto	l168
 12944  002F1A  D036               	goto	u12330
 12945  002F1C                     l168:
 12946                           
 12947                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12948  002F1C  A662               	btfss	3938,3,c	;volatile
 12949  002F1E  D034               	goto	u12330
 12950                           
 12951                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12952  002F20  CF64 F0B3          	movff	3940,_USTATcopy	;volatile
 12953                           
 12954                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12955  002F24  0100               	movlb	0	; () banked
 12956  002F26  31B3               	rrcf	_USTATcopy& (0+255),w,b
 12957  002F28  32E8               	rrcf	wreg,f,c
 12958  002F2A  32E8               	rrcf	wreg,f,c
 12959  002F2C  0B0F               	andlw	15
 12960  002F2E  6FA8               	movwf	_endpoint_number& (0+255),b
 12961                           
 12962                           ; BSR set to: 0
 12963                           ;usb_device.c: 793: (UIR &= 0xF7);
 12964  002F30  9662               	bcf	3938,3,c	;volatile
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12968  002F32  B5B3               	btfsc	_USTATcopy& (0+255),2,b
 12969  002F34  D007               	goto	l171
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12973  002F36  51A8               	movf	_endpoint_number& (0+255),w,b
 12974  002F38  0D01               	mullw	1
 12975  002F3A  0E5D               	movlw	low _ep_data_out
 12976  002F3C  24F3               	addwf	prodl,w,c
 12977  002F3E  6ED9               	movwf	fsr2l,c
 12978  002F40  0E01               	movlw	high _ep_data_out
 12979  002F42  D007               	goto	L6
 12980  002F44                     l171:
 12981                           
 12982                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12983                           
 12984                           ; BSR set to: 1
 12985  002F44  0100               	movlb	0	; () banked
 12986  002F46  51A8               	movf	_endpoint_number& (0+255),w,b
 12987  002F48  0D01               	mullw	1
 12988  002F4A  0E60               	movlw	low _ep_data_in
 12989  002F4C  24F3               	addwf	prodl,w,c
 12990  002F4E  6ED9               	movwf	fsr2l,c
 12991  002F50  0E01               	movlw	high _ep_data_in
 12992  002F52                     L6:
 12993  002F52  20F4               	addwfc	prodh,w,c
 12994  002F54  6EDA               	movwf	fsr2h,c
 12995  002F56  0101               	movlb	1	; () banked
 12996  002F58  70DF               	btg	indf2,0,c
 12997                           
 12998                           ; BSR set to: 1
 12999                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 13000                           
 13001                           ; BSR set to: 1
 13002  002F5A  0100               	movlb	0	; () banked
 13003  002F5C  51A8               	movf	_endpoint_number& (0+255),w,b
 13004  002F5E  A4D8               	btfss	status,2,c
 13005  002F60  D003               	goto	l173
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 13009  002F62  EC82  F028         	call	_USBCtrlEPService	;wreg free
 13010                           
 13011                           ;usb_device.c: 813: }
 13012  002F66  D00E               	goto	l175
 13013  002F68                     l173:
 13014                           
 13015                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 13016  002F68  0E00               	movlw	0
 13017  002F6A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13018  002F6C  0E72               	movlw	114
 13019  002F6E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13020  002F70  0EB3               	movlw	low _USTATcopy
 13021  002F72  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13022  002F74  0E00               	movlw	high _USTATcopy
 13023  002F76  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13024  002F78  0E00               	movlw	0
 13025  002F7A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13026  002F7C  0E00               	movlw	0
 13027  002F7E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13028  002F80  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13029  002F84                     l175:
 13030  002F84  2A20               	incf	USBDeviceTasks@i,f,c
 13031  002F86  D7C6               	goto	l14321
 13032  002F88                     u12330:
 13033                           
 13034                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 13035  002F88  98A1               	bcf	4001,4,c	;volatile
 13036  002F8A  0012               	return		;funcret
 13037  002F8C                     __end_of_USBDeviceTasks:
 13038                           	opt stack 0
 13039                           tblptru	equ	0xFF8
 13040                           tblptrh	equ	0xFF7
 13041                           tblptrl	equ	0xFF6
 13042                           tablat	equ	0xFF5
 13043                           prodh	equ	0xFF4
 13044                           prodl	equ	0xFF3
 13045                           intcon	equ	0xFF2
 13046                           intcon3	equ	0xFF0
 13047                           postinc0	equ	0xFEE
 13048                           wreg	equ	0xFE8
 13049                           indf1	equ	0xFE7
 13050                           postdec1	equ	0xFE5
 13051                           plusw1	equ	0xFE3
 13052                           fsr1h	equ	0xFE2
 13053                           fsr1l	equ	0xFE1
 13054                           indf2	equ	0xFDF
 13055                           postinc2	equ	0xFDE
 13056                           postdec2	equ	0xFDD
 13057                           plusw2	equ	0xFDB
 13058                           fsr2h	equ	0xFDA
 13059                           fsr2l	equ	0xFD9
 13060                           status	equ	0xFD8
 13061                           
 13062 ;; *************** function _USBWakeFromSuspend *****************
 13063 ;; Defined at:
 13064 ;;		line 2305 in file "usb_device.c"
 13065 ;; Parameters:    Size  Location     Type
 13066 ;;		None
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;		None
 13069 ;; Return value:  Size  Location     Type
 13070 ;;                  1    wreg      void 
 13071 ;; Registers used:
 13072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13073 ;; Tracked objects:
 13074 ;;		On entry : 0/0
 13075 ;;		On exit  : 0/0
 13076 ;;		Unchanged: 0/0
 13077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13082 ;;Total ram usage:        0 bytes
 13083 ;; Hardware stack levels used:    1
 13084 ;; Hardware stack levels required when called:    4
 13085 ;; This function calls:
 13086 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13087 ;; This function is called by:
 13088 ;;		_USBDeviceTasks
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text63
 13093  006DAC                     __ptext63:
 13094                           	opt stack 0
 13095  006DAC                     _USBWakeFromSuspend:
 13096                           	opt stack 25
 13097                           
 13098                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 13099                           
 13100                           ;incstack = 0
 13101  006DAC  0E00               	movlw	0
 13102  006DAE  0100               	movlb	0	; () banked
 13103  006DB0  6FA9               	movwf	_USBBusIsSuspended& (0+255),b
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 13107  006DB2  0E00               	movlw	0
 13108  006DB4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13109  006DB6  0E74               	movlw	116
 13110  006DB8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13111  006DBA  0E00               	movlw	0
 13112  006DBC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13113  006DBE  0E00               	movlw	0
 13114  006DC0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13115  006DC2  0E00               	movlw	0
 13116  006DC4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13117  006DC6  0E00               	movlw	0
 13118  006DC8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13119  006DCA  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13120                           
 13121                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 13122  006DCE  9265               	bcf	3941,1,c	;volatile
 13123                           
 13124                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 13125  006DD0  010F               	movlb	15	; () banked
 13126  006DD2  9536               	bcf	54,2,b	;volatile
 13127                           
 13128                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 13129  006DD4  D001               	goto	l303
 13130  006DD6                     
 13131                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 13132                           
 13133                           ; BSR set to: 15
 13134  006DD6  9462               	bcf	3938,2,c	;volatile
 13135  006DD8                     l303:
 13136  006DD8  B462               	btfsc	3938,2,c	;volatile
 13137  006DDA  D7FD               	goto	l304
 13138                           
 13139                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 13140  006DDC  0E00               	movlw	0
 13141  006DDE  0100               	movlb	0	; () banked
 13142  006DE0  6FA0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13143                           
 13144                           ; BSR set to: 0
 13145  006DE2  0012               	return		;funcret
 13146  006DE4                     __end_of_USBWakeFromSuspend:
 13147                           	opt stack 0
 13148                           tblptru	equ	0xFF8
 13149                           tblptrh	equ	0xFF7
 13150                           tblptrl	equ	0xFF6
 13151                           tablat	equ	0xFF5
 13152                           prodh	equ	0xFF4
 13153                           prodl	equ	0xFF3
 13154                           intcon	equ	0xFF2
 13155                           intcon3	equ	0xFF0
 13156                           postinc0	equ	0xFEE
 13157                           wreg	equ	0xFE8
 13158                           indf1	equ	0xFE7
 13159                           postdec1	equ	0xFE5
 13160                           plusw1	equ	0xFE3
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           indf2	equ	0xFDF
 13164                           postinc2	equ	0xFDE
 13165                           postdec2	equ	0xFDD
 13166                           plusw2	equ	0xFDB
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _USBSuspend *****************
 13172 ;; Defined at:
 13173 ;;		line 2247 in file "usb_device.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;		None
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13191 ;;Total ram usage:        0 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:    4
 13194 ;; This function calls:
 13195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13196 ;; This function is called by:
 13197 ;;		_USBDeviceTasks
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           	psect	text64
 13202  006EE4                     __ptext64:
 13203                           	opt stack 0
 13204  006EE4                     _USBSuspend:
 13205                           	opt stack 25
 13206                           
 13207                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;incstack = 0
 13211  006EE4  010F               	movlb	15	; () banked
 13212  006EE6  8536               	bsf	54,2,b	;volatile
 13213                           
 13214                           ; BSR set to: 15
 13215                           ;usb_device.c: 2273: (UIR &= 0xEF);
 13216  006EE8  9862               	bcf	3938,4,c	;volatile
 13217                           
 13218                           ; BSR set to: 15
 13219                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 13220  006EEA  8265               	bsf	3941,1,c	;volatile
 13221                           
 13222                           ; BSR set to: 15
 13223                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 13224  006EEC  0E01               	movlw	1
 13225  006EEE  0100               	movlb	0	; () banked
 13226  006EF0  6FA9               	movwf	_USBBusIsSuspended& (0+255),b
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 13230  006EF2  0E00               	movlw	0
 13231  006EF4  6FA0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13232                           
 13233                           ; BSR set to: 0
 13234                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 13235  006EF6  0E00               	movlw	0
 13236  006EF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13237  006EFA  0E75               	movlw	117
 13238  006EFC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13239  006EFE  0E00               	movlw	0
 13240  006F00  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13241  006F02  0E00               	movlw	0
 13242  006F04  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13243  006F06  0E00               	movlw	0
 13244  006F08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13245  006F0A  0E00               	movlw	0
 13246  006F0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13247  006F0E  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13248  006F12  0012               	return		;funcret
 13249  006F14                     __end_of_USBSuspend:
 13250                           	opt stack 0
 13251                           tblptru	equ	0xFF8
 13252                           tblptrh	equ	0xFF7
 13253                           tblptrl	equ	0xFF6
 13254                           tablat	equ	0xFF5
 13255                           prodh	equ	0xFF4
 13256                           prodl	equ	0xFF3
 13257                           intcon	equ	0xFF2
 13258                           intcon3	equ	0xFF0
 13259                           postinc0	equ	0xFEE
 13260                           wreg	equ	0xFE8
 13261                           indf1	equ	0xFE7
 13262                           postdec1	equ	0xFE5
 13263                           plusw1	equ	0xFE3
 13264                           fsr1h	equ	0xFE2
 13265                           fsr1l	equ	0xFE1
 13266                           indf2	equ	0xFDF
 13267                           postinc2	equ	0xFDE
 13268                           postdec2	equ	0xFDD
 13269                           plusw2	equ	0xFDB
 13270                           fsr2h	equ	0xFDA
 13271                           fsr2l	equ	0xFD9
 13272                           status	equ	0xFD8
 13273                           
 13274 ;; *************** function _USBStallHandler *****************
 13275 ;; Defined at:
 13276 ;;		line 2204 in file "usb_device.c"
 13277 ;; Parameters:    Size  Location     Type
 13278 ;;		None
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  1    wreg      void 
 13283 ;; Registers used:
 13284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13293 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13294 ;;Total ram usage:        1 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; This function calls:
 13297 ;;		Nothing
 13298 ;; This function is called by:
 13299 ;;		_USBDeviceTasks
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text65
 13304  006B74                     __ptext65:
 13305                           	opt stack 0
 13306  006B74                     _USBStallHandler:
 13307                           	opt stack 29
 13308                           
 13309                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 13310                           
 13311                           ;incstack = 0
 13312  006B74  010F               	movlb	15	; () banked
 13313  006B76  A126               	btfss	38,0,b	;volatile
 13314  006B78  D01D               	goto	l295
 13315                           
 13316                           ; BSR set to: 15
 13317                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 13318  006B7A  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13319  006B7E  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13320  006B82  0E80               	movlw	128
 13321  006B84  18DE               	xorwf	postinc2,w,c
 13322  006B86  A4D8               	btfss	status,2,c
 13323  006B88  D014               	goto	l296
 13324                           
 13325                           ; BSR set to: 15
 13326  006B8A  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 13327  006B8E  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13328  006B92  0E84               	movlw	132
 13329  006B94  18DE               	xorwf	postinc2,w,c
 13330  006B96  A4D8               	btfss	status,2,c
 13331  006B98  D00C               	goto	l296
 13332                           
 13333                           ; BSR set to: 15
 13334                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 13335  006B9A  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13336  006B9E  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13337  006BA2  0E0C               	movlw	12
 13338  006BA4  6EDF               	movwf	indf2,c
 13339                           
 13340                           ; BSR set to: 15
 13341                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 13342  006BA6  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13343  006BAA  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13344  006BAE  0E00               	movlw	0
 13345  006BB0  8EDB               	bsf	plusw2,7,c
 13346  006BB2                     l296:
 13347                           
 13348                           ; BSR set to: 15
 13349                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 13350                           
 13351                           ; BSR set to: 15
 13352  006BB2  9126               	bcf	38,0,b	;volatile
 13353  006BB4                     l295:
 13354                           
 13355                           ; BSR set to: 15
 13356                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 13357  006BB4  9A62               	bcf	3938,5,c	;volatile
 13358                           
 13359                           ; BSR set to: 15
 13360  006BB6  0012               	return		;funcret
 13361  006BB8                     __end_of_USBStallHandler:
 13362                           	opt stack 0
 13363                           tblptru	equ	0xFF8
 13364                           tblptrh	equ	0xFF7
 13365                           tblptrl	equ	0xFF6
 13366                           tablat	equ	0xFF5
 13367                           prodh	equ	0xFF4
 13368                           prodl	equ	0xFF3
 13369                           intcon	equ	0xFF2
 13370                           intcon3	equ	0xFF0
 13371                           postinc0	equ	0xFEE
 13372                           wreg	equ	0xFE8
 13373                           indf1	equ	0xFE7
 13374                           postdec1	equ	0xFE5
 13375                           plusw1	equ	0xFE3
 13376                           fsr1h	equ	0xFE2
 13377                           fsr1l	equ	0xFE1
 13378                           indf2	equ	0xFDF
 13379                           postinc2	equ	0xFDE
 13380                           postdec2	equ	0xFDD
 13381                           plusw2	equ	0xFDB
 13382                           fsr2h	equ	0xFDA
 13383                           fsr2l	equ	0xFD9
 13384                           status	equ	0xFD8
 13385                           
 13386 ;; *************** function _USBIncrement1msInternalTimers *****************
 13387 ;; Defined at:
 13388 ;;		line 3027 in file "usb_device.c"
 13389 ;; Parameters:    Size  Location     Type
 13390 ;;		None
 13391 ;; Auto vars:     Size  Location     Type
 13392 ;;		None
 13393 ;; Return value:  Size  Location     Type
 13394 ;;                  1    wreg      void 
 13395 ;; Registers used:
 13396 ;;		wreg, status,2, status,0
 13397 ;; Tracked objects:
 13398 ;;		On entry : 0/0
 13399 ;;		On exit  : 0/0
 13400 ;;		Unchanged: 0/0
 13401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13406 ;;Total ram usage:        0 bytes
 13407 ;; Hardware stack levels used:    1
 13408 ;; This function calls:
 13409 ;;		Nothing
 13410 ;; This function is called by:
 13411 ;;		_USBDeviceTasks
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text66
 13416  007148                     __ptext66:
 13417                           	opt stack 0
 13418  007148                     _USBIncrement1msInternalTimers:
 13419                           	opt stack 29
 13420                           
 13421                           ;usb_device.c: 3035: USB1msTickCount++;
 13422                           
 13423                           ; BSR set to: 15
 13424                           ;incstack = 0
 13425  007148  0E01               	movlw	1
 13426  00714A  0101               	movlb	1	; () banked
 13427  00714C  2753               	addwf	_USB1msTickCount& (0+255),f,b
 13428  00714E  0E00               	movlw	0
 13429  007150  2354               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 13430  007152  2355               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 13431  007154  2356               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 13432                           
 13433                           ; BSR set to: 1
 13434                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 13435  007156  0100               	movlb	0	; () banked
 13436  007158  51A9               	movf	_USBBusIsSuspended& (0+255),w,b
 13437  00715A  A4D8               	btfss	status,2,c
 13438  00715C  0012               	return	
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 13442  00715E  2BA0               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 13443                           
 13444                           ; BSR set to: 0
 13445                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 13446  007160  51A0               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 13447  007162  A4D8               	btfss	status,2,c
 13448  007164  0012               	return	
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 13452  007166  69A0               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 13453                           
 13454                           ; BSR set to: 0
 13455  007168  0012               	return	
 13456  00716A                     __end_of_USBIncrement1msInternalTimers:
 13457                           	opt stack 0
 13458                           tblptru	equ	0xFF8
 13459                           tblptrh	equ	0xFF7
 13460                           tblptrl	equ	0xFF6
 13461                           tablat	equ	0xFF5
 13462                           prodh	equ	0xFF4
 13463                           prodl	equ	0xFF3
 13464                           intcon	equ	0xFF2
 13465                           intcon3	equ	0xFF0
 13466                           postinc0	equ	0xFEE
 13467                           wreg	equ	0xFE8
 13468                           indf1	equ	0xFE7
 13469                           postdec1	equ	0xFE5
 13470                           plusw1	equ	0xFE3
 13471                           fsr1h	equ	0xFE2
 13472                           fsr1l	equ	0xFE1
 13473                           indf2	equ	0xFDF
 13474                           postinc2	equ	0xFDE
 13475                           postdec2	equ	0xFDD
 13476                           plusw2	equ	0xFDB
 13477                           fsr2h	equ	0xFDA
 13478                           fsr2l	equ	0xFD9
 13479                           status	equ	0xFD8
 13480                           
 13481 ;; *************** function _USBDeviceInit *****************
 13482 ;; Defined at:
 13483 ;;		line 277 in file "usb_device.c"
 13484 ;; Parameters:    Size  Location     Type
 13485 ;;		None
 13486 ;; Auto vars:     Size  Location     Type
 13487 ;;  i               1    8[COMRAM] unsigned char 
 13488 ;; Return value:  Size  Location     Type
 13489 ;;                  1    wreg      void 
 13490 ;; Registers used:
 13491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13492 ;; Tracked objects:
 13493 ;;		On entry : 0/0
 13494 ;;		On exit  : 0/0
 13495 ;;		Unchanged: 0/0
 13496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13500 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13501 ;;Total ram usage:        1 bytes
 13502 ;; Hardware stack levels used:    1
 13503 ;; Hardware stack levels required when called:    1
 13504 ;; This function calls:
 13505 ;;		_memset
 13506 ;; This function is called by:
 13507 ;;		_USBDeviceTasks
 13508 ;;		_main
 13509 ;; This function uses a non-reentrant model
 13510 ;;
 13511                           
 13512                           	psect	text67
 13513  0034FA                     __ptext67:
 13514                           	opt stack 0
 13515  0034FA                     _USBDeviceInit:
 13516                           	opt stack 28
 13517                           
 13518                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;incstack = 0
 13522  0034FA  98A0               	bcf	4000,4,c	;volatile
 13523                           
 13524                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 13525  0034FC  0E00               	movlw	0
 13526  0034FE  6E63               	movwf	3939,c	;volatile
 13527                           
 13528                           ;usb_device.c: 291: {UIR = 0;};
 13529  003500  0E00               	movlw	0
 13530  003502  6E62               	movwf	3938,c	;volatile
 13531                           
 13532                           ;usb_device.c: 294: UEP0 = 0;
 13533  003504  0E00               	movlw	0
 13534  003506  010F               	movlb	15	; () banked
 13535  003508  6F26               	movwf	38,b	;volatile
 13536                           
 13537                           ; BSR set to: 15
 13538                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 13539  00350A  0E27               	movlw	39
 13540  00350C  6E01               	movwf	memset@p1,c
 13541  00350E  0E0F               	movlw	15
 13542  003510  6E02               	movwf	memset@p1+1,c
 13543  003512  0E00               	movlw	0
 13544  003514  6E04               	movwf	memset@c+1,c
 13545  003516  0E00               	movlw	0
 13546  003518  6E03               	movwf	memset@c,c
 13547  00351A  0E00               	movlw	0
 13548  00351C  6E06               	movwf	memset@n+1,c
 13549  00351E  0E02               	movlw	2
 13550  003520  6E05               	movwf	memset@n,c
 13551  003522  ECCD  F037         	call	_memset	;wreg free
 13552                           
 13553                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13554  003526  0E16               	movlw	22
 13555  003528  010F               	movlb	15	; () banked
 13556  00352A  6F39               	movwf	57,b	;volatile
 13557                           
 13558                           ; BSR set to: 15
 13559  00352C  0E9F               	movlw	159
 13560  00352E  6F37               	movwf	55,b	;volatile
 13561                           
 13562                           ; BSR set to: 15
 13563  003530  0E7B               	movlw	123
 13564  003532  6F36               	movwf	54,b	;volatile
 13565                           
 13566                           ; BSR set to: 15
 13567                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 13568  003534  0E00               	movlw	0
 13569  003536  6E09               	movwf	USBDeviceInit@i,c
 13570  003538                     l13499:
 13571                           
 13572                           ; BSR set to: 15
 13573  003538  0E0B               	movlw	11
 13574  00353A  6409               	cpfsgt	USBDeviceInit@i,c
 13575  00353C  D001               	goto	l139
 13576  00353E  D00E               	goto	u11100
 13577  003540                     l139:
 13578                           
 13579                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 13580                           
 13581                           ; BSR set to: 15
 13582  003540  5009               	movf	USBDeviceInit@i,w,c
 13583  003542  0D04               	mullw	4
 13584  003544  0E00               	movlw	0
 13585  003546  24F3               	addwf	prodl,w,c
 13586  003548  6ED9               	movwf	fsr2l,c
 13587  00354A  0E0D               	movlw	13
 13588  00354C  20F4               	addwfc	prodh,w,c
 13589  00354E  6EDA               	movwf	fsr2h,c
 13590  003550  6ADE               	clrf	postinc2,c
 13591  003552  6ADE               	clrf	postinc2,c
 13592  003554  6ADE               	clrf	postinc2,c
 13593  003556  6ADD               	clrf	postdec2,c
 13594  003558  2A09               	incf	USBDeviceInit@i,f,c
 13595  00355A  D7EE               	goto	l13499
 13596  00355C                     u11100:
 13597                           
 13598                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 13599  00355C  8C65               	bsf	3941,6,c	;volatile
 13600                           
 13601                           ;usb_device.c: 316: UADDR = 0x00;
 13602  00355E  0E00               	movlw	0
 13603  003560  010F               	movlb	15	; () banked
 13604  003562  6F38               	movwf	56,b	;volatile
 13605                           
 13606                           ; BSR set to: 15
 13607                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 13608  003564  9865               	bcf	3941,4,c	;volatile
 13609                           
 13610                           ; BSR set to: 15
 13611                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 13612  003566  9C65               	bcf	3941,6,c	;volatile
 13613  003568                     
 13614                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 13615                           
 13616                           ; BSR set to: 15
 13617  003568  9662               	bcf	3938,3,c	;volatile
 13618                           
 13619                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 13620  00356A  0E00               	movlw	0
 13621  00356C  0100               	movlb	0	; () banked
 13622  00356E  6F71               	movwf	(_inPipes+3)& (0+255),b
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 13626  003570  0E00               	movlw	0
 13627  003572  0101               	movlb	1	; () banked
 13628  003574  6F34               	movwf	(_outPipes+3)& (0+255),b
 13629                           
 13630                           ; BSR set to: 1
 13631                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 13632  003576  0E00               	movlw	0
 13633  003578  6F36               	movwf	(_outPipes+5)& (0+255),b
 13634  00357A  0E00               	movlw	0
 13635  00357C  6F35               	movwf	(_outPipes+4)& (0+255),b
 13636                           
 13637                           ; BSR set to: 1
 13638                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 13639  00357E  B662               	btfsc	3938,3,c	;volatile
 13640  003580  D7F3               	goto	l141
 13641                           
 13642                           ; BSR set to: 1
 13643                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 13644                           
 13645                           ; BSR set to: 1
 13646  003582  0E01               	movlw	1
 13647  003584  0100               	movlb	0	; () banked
 13648  003586  6FA4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13649                           
 13650                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 13651  003588  0E01               	movlw	1
 13652  00358A  6FA3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13653                           
 13654                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 13655  00358C  0E00               	movlw	0
 13656  00358E  6FA2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13657                           
 13658                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 13659  003590  0E00               	movlw	0
 13660  003592  6FA1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13661                           
 13662                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 13663  003594  0E00               	movlw	0
 13664  003596  6FA9               	movwf	_USBBusIsSuspended& (0+255),b
 13665                           
 13666                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 13667  003598  0E00               	movlw	0
 13668  00359A  6E09               	movwf	USBDeviceInit@i,c
 13669  00359C                     l13527:
 13670                           
 13671                           ; BSR set to: 0
 13672  00359C  0E02               	movlw	2
 13673  00359E  6409               	cpfsgt	USBDeviceInit@i,c
 13674  0035A0  D001               	goto	l143
 13675  0035A2  D02E               	goto	u11130
 13676  0035A4                     l143:
 13677                           
 13678                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13679                           
 13680                           ; BSR set to: 0
 13681  0035A4  5009               	movf	USBDeviceInit@i,w,c
 13682  0035A6  0D02               	mullw	2
 13683  0035A8  0E74               	movlw	low _pBDTEntryIn
 13684  0035AA  24F3               	addwf	prodl,w,c
 13685  0035AC  6ED9               	movwf	fsr2l,c
 13686  0035AE  0E00               	movlw	high _pBDTEntryIn
 13687  0035B0  20F4               	addwfc	prodh,w,c
 13688  0035B2  6EDA               	movwf	fsr2h,c
 13689  0035B4  0E00               	movlw	0
 13690  0035B6  6EDE               	movwf	postinc2,c
 13691  0035B8  0E00               	movlw	0
 13692  0035BA  6EDD               	movwf	postdec2,c
 13693                           
 13694                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13695  0035BC  5009               	movf	USBDeviceInit@i,w,c
 13696  0035BE  0D02               	mullw	2
 13697  0035C0  0E39               	movlw	low _pBDTEntryOut
 13698  0035C2  24F3               	addwf	prodl,w,c
 13699  0035C4  6ED9               	movwf	fsr2l,c
 13700  0035C6  0E01               	movlw	high _pBDTEntryOut
 13701  0035C8  20F4               	addwfc	prodh,w,c
 13702  0035CA  6EDA               	movwf	fsr2h,c
 13703  0035CC  0E00               	movlw	0
 13704  0035CE  6EDE               	movwf	postinc2,c
 13705  0035D0  0E00               	movlw	0
 13706  0035D2  6EDD               	movwf	postdec2,c
 13707                           
 13708                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13709  0035D4  5009               	movf	USBDeviceInit@i,w,c
 13710  0035D6  0D01               	mullw	1
 13711  0035D8  0E60               	movlw	low _ep_data_in
 13712  0035DA  24F3               	addwf	prodl,w,c
 13713  0035DC  6ED9               	movwf	fsr2l,c
 13714  0035DE  0E01               	movlw	high _ep_data_in
 13715  0035E0  20F4               	addwfc	prodh,w,c
 13716  0035E2  6EDA               	movwf	fsr2h,c
 13717  0035E4  0E00               	movlw	0
 13718  0035E6  6EDF               	movwf	indf2,c
 13719                           
 13720                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13721  0035E8  5009               	movf	USBDeviceInit@i,w,c
 13722  0035EA  0D01               	mullw	1
 13723  0035EC  0E5D               	movlw	low _ep_data_out
 13724  0035EE  24F3               	addwf	prodl,w,c
 13725  0035F0  6ED9               	movwf	fsr2l,c
 13726  0035F2  0E01               	movlw	high _ep_data_out
 13727  0035F4  20F4               	addwfc	prodh,w,c
 13728  0035F6  6EDA               	movwf	fsr2h,c
 13729  0035F8  0E00               	movlw	0
 13730  0035FA  6EDF               	movwf	indf2,c
 13731  0035FC  2A09               	incf	USBDeviceInit@i,f,c
 13732  0035FE  D7CE               	goto	l13527
 13733  003600                     u11130:
 13734                           
 13735                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13736  003600  0E08               	movlw	8
 13737  003602  0100               	movlb	0	; () banked
 13738  003604  6F74               	movwf	_pBDTEntryIn& (0+255),b
 13739  003606  0E0D               	movlw	13
 13740  003608  6F75               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13744  00360A  0E16               	movlw	22
 13745  00360C  010F               	movlb	15	; () banked
 13746  00360E  6F26               	movwf	38,b	;volatile
 13747                           
 13748                           ; BSR set to: 15
 13749                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13750  003610  0E0D               	movlw	13
 13751  003612  010D               	movlb	13	; () banked
 13752  003614  6F03               	movwf	3,b	;volatile
 13753  003616  0E30               	movlw	48
 13754  003618  6F02               	movwf	2,b	;volatile
 13755                           
 13756                           ; BSR set to: 13
 13757                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13758  00361A  0E08               	movlw	8
 13759  00361C  6F01               	movwf	1,b	;volatile
 13760                           
 13761                           ; BSR set to: 13
 13762                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13763  00361E  0E04               	movlw	4
 13764  003620  6F00               	movwf	0,b	;volatile
 13765                           
 13766                           ; BSR set to: 13
 13767                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13768  003622  8F00               	bsf	0,7,b	;volatile
 13769                           
 13770                           ; BSR set to: 13
 13771                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13772  003624  0E00               	movlw	0
 13773  003626  0100               	movlb	0	; () banked
 13774  003628  6FB4               	movwf	_USBActiveConfiguration& (0+255),b
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;usb_device.c: 366: USB1msTickCount = 0;
 13778  00362A  0E00               	movlw	0
 13779  00362C  0101               	movlb	1	; () banked
 13780  00362E  6F53               	movwf	_USB1msTickCount& (0+255),b
 13781  003630  0E00               	movlw	0
 13782  003632  6F54               	movwf	(_USB1msTickCount+1)& (0+255),b
 13783  003634  0E00               	movlw	0
 13784  003636  6F55               	movwf	(_USB1msTickCount+2)& (0+255),b
 13785  003638  0E00               	movlw	0
 13786  00363A  6F56               	movwf	(_USB1msTickCount+3)& (0+255),b
 13787                           
 13788                           ; BSR set to: 1
 13789                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13790  00363C  0E00               	movlw	0
 13791  00363E  0100               	movlb	0	; () banked
 13792  003640  6FA0               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13793                           
 13794                           ; BSR set to: 0
 13795                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13796  003642  0E00               	movlw	0
 13797  003644  6E5F               	movwf	_USBDeviceState,c
 13798                           
 13799                           ; BSR set to: 0
 13800  003646  0012               	return		;funcret
 13801  003648                     __end_of_USBDeviceInit:
 13802                           	opt stack 0
 13803                           tblptru	equ	0xFF8
 13804                           tblptrh	equ	0xFF7
 13805                           tblptrl	equ	0xFF6
 13806                           tablat	equ	0xFF5
 13807                           prodh	equ	0xFF4
 13808                           prodl	equ	0xFF3
 13809                           intcon	equ	0xFF2
 13810                           intcon3	equ	0xFF0
 13811                           postinc0	equ	0xFEE
 13812                           wreg	equ	0xFE8
 13813                           indf1	equ	0xFE7
 13814                           postdec1	equ	0xFE5
 13815                           plusw1	equ	0xFE3
 13816                           fsr1h	equ	0xFE2
 13817                           fsr1l	equ	0xFE1
 13818                           indf2	equ	0xFDF
 13819                           postinc2	equ	0xFDE
 13820                           postdec2	equ	0xFDD
 13821                           plusw2	equ	0xFDB
 13822                           fsr2h	equ	0xFDA
 13823                           fsr2l	equ	0xFD9
 13824                           status	equ	0xFD8
 13825                           
 13826 ;; *************** function _USBCtrlEPService *****************
 13827 ;; Defined at:
 13828 ;;		line 2374 in file "usb_device.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;		None
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13846 ;;Total ram usage:        2 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    7
 13849 ;; This function calls:
 13850 ;;		_USBCtrlTrfInHandler
 13851 ;;		_USBCtrlTrfOutHandler
 13852 ;;		_USBCtrlTrfSetupHandler
 13853 ;;		_memcpy
 13854 ;; This function is called by:
 13855 ;;		_USBDeviceTasks
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text68
 13860  005104                     __ptext68:
 13861                           	opt stack 0
 13862  005104                     _USBCtrlEPService:
 13863                           	opt stack 22
 13864                           
 13865                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13866                           
 13867                           ; BSR set to: 0
 13868                           ;incstack = 0
 13869  005104  0E2D               	movlw	45
 13870  005106  0100               	movlb	0	; () banked
 13871  005108  6FA6               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13875  00510A  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13876  00510E  0EFD               	movlw	253
 13877  005110  161E               	andwf	??_USBCtrlEPService,f,c
 13878  005112  A4D8               	btfss	status,2,c
 13879  005114  D044               	goto	l309
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13883  005116  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13884  00511A  90D8               	bcf	status,0,c
 13885  00511C  321E               	rrcf	??_USBCtrlEPService,f,c
 13886  00511E  0E3F               	movlw	63
 13887  005120  161E               	andwf	??_USBCtrlEPService,f,c
 13888  005122  501E               	movf	??_USBCtrlEPService,w,c
 13889  005124  0D04               	mullw	4
 13890  005126  0E00               	movlw	0
 13891  005128  24F3               	addwf	prodl,w,c
 13892  00512A  6F8E               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13893  00512C  0E0D               	movlw	13
 13894  00512E  20F4               	addwfc	prodh,w,c
 13895  005130  6F8F               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13899  005132  C08E  F08C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13900  005136  C08F  F08D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13904  00513A  0E04               	movlw	4
 13905  00513C  198C               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13906  00513E  6F8C               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13907  005140  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13908  005142  6F8D               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13912  005144  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13913  005148  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13914  00514C  30DF               	rrcf	223,w,c
 13915  00514E  32E8               	rrcf	wreg,f,c
 13916  005150  0B0F               	andlw	15
 13917  005152  0A0D               	xorlw	13
 13918  005154  A4D8               	btfss	status,2,c
 13919  005156  D020               	goto	l310
 13920                           
 13921                           ; BSR set to: 0
 13922                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13923  005158  0E30               	movlw	48
 13924  00515A  6E01               	movwf	memcpy@d1,c
 13925  00515C  0E0D               	movlw	13
 13926  00515E  6E02               	movwf	memcpy@d1+1,c
 13927  005160  EE20 F002          	lfsr	2,2
 13928  005164  518E               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13929  005166  26D9               	addwf	fsr2l,f,c
 13930  005168  518F               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13931  00516A  22DA               	addwfc	fsr2h,f,c
 13932  00516C  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13933  005170  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13934  005174  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13935  005178  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13936  00517C  5003               	movf	memcpy@s1,w,c
 13937  00517E  1004               	iorwf	memcpy@s1+1,w,c
 13938  005180  A4D8               	btfss	status,2,c
 13939  005182  0E20               	movlw	32
 13940  005184  6E05               	movwf	memcpy@s1+2,c
 13941  005186  0E00               	movlw	0
 13942  005188  6E07               	movwf	memcpy@n+1,c
 13943  00518A  0E08               	movlw	8
 13944  00518C  6E06               	movwf	memcpy@n,c
 13945  00518E  EC07  F031         	call	_memcpy	;wreg free
 13946                           
 13947                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13948  005192  ECED  F02C         	call	_USBCtrlTrfSetupHandler	;wreg free
 13949                           
 13950                           ;usb_device.c: 2411: }
 13951  005196  0012               	return	
 13952  005198                     l310:
 13953                           
 13954                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13955  005198  EC30  F032         	call	_USBCtrlTrfOutHandler	;wreg free
 13956                           
 13957                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13958  00519C  0012               	return	
 13959  00519E                     l309:
 13960                           
 13961                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13962  00519E  0100               	movlb	0	; () banked
 13963  0051A0  51B3               	movf	_USTATcopy& (0+255),w,b
 13964  0051A2  0BFD               	andlw	253
 13965  0051A4  0A04               	xorlw	4
 13966  0051A6  A4D8               	btfss	status,2,c
 13967  0051A8  0012               	return	
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13971  0051AA  EC4D  F026         	call	_USBCtrlTrfInHandler	;wreg free
 13972  0051AE  0012               	return	
 13973  0051B0                     __end_of_USBCtrlEPService:
 13974                           	opt stack 0
 13975                           tblptru	equ	0xFF8
 13976                           tblptrh	equ	0xFF7
 13977                           tblptrl	equ	0xFF6
 13978                           tablat	equ	0xFF5
 13979                           prodh	equ	0xFF4
 13980                           prodl	equ	0xFF3
 13981                           intcon	equ	0xFF2
 13982                           intcon3	equ	0xFF0
 13983                           postinc0	equ	0xFEE
 13984                           wreg	equ	0xFE8
 13985                           indf1	equ	0xFE7
 13986                           postdec1	equ	0xFE5
 13987                           plusw1	equ	0xFE3
 13988                           fsr1h	equ	0xFE2
 13989                           fsr1l	equ	0xFE1
 13990                           indf2	equ	0xFDF
 13991                           postinc2	equ	0xFDE
 13992                           postdec2	equ	0xFDD
 13993                           plusw2	equ	0xFDB
 13994                           fsr2h	equ	0xFDA
 13995                           fsr2l	equ	0xFD9
 13996                           status	equ	0xFD8
 13997                           
 13998 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13999 ;; Defined at:
 14000 ;;		line 2467 in file "usb_device.c"
 14001 ;; Parameters:    Size  Location     Type
 14002 ;;		None
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;		None
 14005 ;; Return value:  Size  Location     Type
 14006 ;;                  1    wreg      void 
 14007 ;; Registers used:
 14008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14009 ;; Tracked objects:
 14010 ;;		On entry : 0/0
 14011 ;;		On exit  : 0/0
 14012 ;;		Unchanged: 0/0
 14013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14018 ;;Total ram usage:        0 bytes
 14019 ;; Hardware stack levels used:    1
 14020 ;; Hardware stack levels required when called:    6
 14021 ;; This function calls:
 14022 ;;		_USBCheckStdRequest
 14023 ;;		_USBCtrlEPServiceComplete
 14024 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14025 ;; This function is called by:
 14026 ;;		_USBCtrlEPService
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           	psect	text69
 14031  0059DA                     __ptext69:
 14032                           	opt stack 0
 14033  0059DA                     _USBCtrlTrfSetupHandler:
 14034                           	opt stack 22
 14035                           
 14036                           ;usb_device.c: 2472: shortPacketStatus = 0;
 14037                           
 14038                           ;incstack = 0
 14039  0059DA  0E00               	movlw	0
 14040  0059DC  0100               	movlb	0	; () banked
 14041  0059DE  6FAC               	movwf	_shortPacketStatus& (0+255),b
 14042                           
 14043                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 14044  0059E0  0E00               	movlw	0
 14045  0059E2  6FA5               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 14046                           
 14047                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 14048  0059E4  0E00               	movlw	0
 14049  0059E6  6FA2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14050                           
 14051                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 14052  0059E8  0E00               	movlw	0
 14053  0059EA  6FA1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14054                           
 14055                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 14056  0059EC  0E00               	movlw	0
 14057  0059EE  6FA7               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 14058                           
 14059                           ;usb_device.c: 2477: controlTransferState = 0;
 14060  0059F0  0E00               	movlw	0
 14061  0059F2  6FAB               	movwf	_controlTransferState& (0+255),b
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14065  0059F4  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14066  0059F8  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14067  0059FC  0E7F               	movlw	127
 14068  0059FE  16DF               	andwf	indf2,f,c
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14072  005A00  0E04               	movlw	4
 14073  005A02  1974               	xorwf	_pBDTEntryIn& (0+255),w,b
 14074  005A04  6F74               	movwf	_pBDTEntryIn& (0+255),b
 14075  005A06  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14076  005A08  6F75               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 14080  005A0A  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14081  005A0E  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14082  005A12  0E7F               	movlw	127
 14083  005A14  16DF               	andwf	indf2,f,c
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 14087  005A16  0E04               	movlw	4
 14088  005A18  1974               	xorwf	_pBDTEntryIn& (0+255),w,b
 14089  005A1A  6F74               	movwf	_pBDTEntryIn& (0+255),b
 14090  005A1C  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14091  005A1E  6F75               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 14095  005A20  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14096  005A24  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14097  005A28  0E7F               	movlw	127
 14098  005A2A  16DF               	andwf	indf2,f,c
 14099                           
 14100                           ; BSR set to: 0
 14101                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 14102  005A2C  0E00               	movlw	0
 14103  005A2E  6F71               	movwf	(_inPipes+3)& (0+255),b
 14104                           
 14105                           ; BSR set to: 0
 14106                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 14107  005A30  0E00               	movlw	0
 14108  005A32  6F73               	movwf	(_inPipes+5)& (0+255),b
 14109  005A34  0E00               	movlw	0
 14110  005A36  6F72               	movwf	(_inPipes+4)& (0+255),b
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 14114  005A38  0E00               	movlw	0
 14115  005A3A  0101               	movlb	1	; () banked
 14116  005A3C  6F34               	movwf	(_outPipes+3)& (0+255),b
 14117                           
 14118                           ; BSR set to: 1
 14119                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 14120  005A3E  0E00               	movlw	0
 14121  005A40  6F36               	movwf	(_outPipes+5)& (0+255),b
 14122  005A42  0E00               	movlw	0
 14123  005A44  6F35               	movwf	(_outPipes+4)& (0+255),b
 14124                           
 14125                           ; BSR set to: 1
 14126                           ;usb_device.c: 2502: USBCheckStdRequest();
 14127  005A46  EC90  F021         	call	_USBCheckStdRequest	;wreg free
 14128                           
 14129                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 14130  005A4A  0E00               	movlw	0
 14131  005A4C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14132  005A4E  0E03               	movlw	3
 14133  005A50  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14134  005A52  0E00               	movlw	0
 14135  005A54  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14136  005A56  0E00               	movlw	0
 14137  005A58  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14138  005A5A  0E00               	movlw	0
 14139  005A5C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14140  005A5E  0E00               	movlw	0
 14141  005A60  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14142  005A62  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14143                           
 14144                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 14145  005A66  EC10  F021         	call	_USBCtrlEPServiceComplete	;wreg free
 14146  005A6A  0012               	return		;funcret
 14147  005A6C                     __end_of_USBCtrlTrfSetupHandler:
 14148                           	opt stack 0
 14149                           tblptru	equ	0xFF8
 14150                           tblptrh	equ	0xFF7
 14151                           tblptrl	equ	0xFF6
 14152                           tablat	equ	0xFF5
 14153                           prodh	equ	0xFF4
 14154                           prodl	equ	0xFF3
 14155                           intcon	equ	0xFF2
 14156                           intcon3	equ	0xFF0
 14157                           postinc0	equ	0xFEE
 14158                           wreg	equ	0xFE8
 14159                           indf1	equ	0xFE7
 14160                           postdec1	equ	0xFE5
 14161                           plusw1	equ	0xFE3
 14162                           fsr1h	equ	0xFE2
 14163                           fsr1l	equ	0xFE1
 14164                           indf2	equ	0xFDF
 14165                           postinc2	equ	0xFDE
 14166                           postdec2	equ	0xFDD
 14167                           plusw2	equ	0xFDB
 14168                           fsr2h	equ	0xFDA
 14169                           fsr2l	equ	0xFD9
 14170                           status	equ	0xFD8
 14171                           
 14172 ;; *************** function _USBCtrlEPServiceComplete *****************
 14173 ;; Defined at:
 14174 ;;		line 1618 in file "usb_device.c"
 14175 ;; Parameters:    Size  Location     Type
 14176 ;;		None
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;		None
 14179 ;; Return value:  Size  Location     Type
 14180 ;;                  1    wreg      void 
 14181 ;; Registers used:
 14182 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14183 ;; Tracked objects:
 14184 ;;		On entry : 0/0
 14185 ;;		On exit  : 0/0
 14186 ;;		Unchanged: 0/0
 14187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14192 ;;Total ram usage:        0 bytes
 14193 ;; Hardware stack levels used:    1
 14194 ;; Hardware stack levels required when called:    2
 14195 ;; This function calls:
 14196 ;;		_USBCtrlEPAllowDataStage
 14197 ;;		_USBCtrlEPAllowStatusStage
 14198 ;; This function is called by:
 14199 ;;		_USBCtrlTrfSetupHandler
 14200 ;; This function uses a non-reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text70
 14204  004220                     __ptext70:
 14205                           	opt stack 0
 14206  004220                     _USBCtrlEPServiceComplete:
 14207                           	opt stack 25
 14208                           
 14209                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 14210                           
 14211                           ;incstack = 0
 14212  004220  9865               	bcf	3941,4,c	;volatile
 14213                           
 14214                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 14215  004222  0100               	movlb	0	; () banked
 14216  004224  BF71               	btfsc	(_inPipes+3)& (0+255),7,b
 14217  004226  D03C               	goto	l219
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 14221  004228  0101               	movlb	1	; () banked
 14222  00422A  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 14223  00422C  D00D               	goto	l220
 14224                           
 14225                           ; BSR set to: 1
 14226                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 14227  00422E  0E02               	movlw	2
 14228  004230  0100               	movlb	0	; () banked
 14229  004232  6FAB               	movwf	_controlTransferState& (0+255),b
 14230                           
 14231                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 14232  004234  51A1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 14233  004236  B4D8               	btfsc	status,2,c
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 14237  004238  ECBC  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 14238                           
 14239                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 14240  00423C  0E00               	movlw	0
 14241  00423E  0100               	movlb	0	; () banked
 14242  004240  6FA3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14243                           
 14244                           ; BSR set to: 0
 14245                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 14246  004242  0E00               	movlw	0
 14247  004244  6FA4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14248                           
 14249                           ;usb_device.c: 1654: }
 14250  004246  0012               	return	
 14251  004248                     l220:
 14252                           
 14253                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 14254                           
 14255                           ; BSR set to: 0
 14256  004248  0100               	movlb	0	; () banked
 14257  00424A  EE20 F001          	lfsr	2,1
 14258  00424E  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14259  004250  26D9               	addwf	fsr2l,f,c
 14260  004252  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14261  004254  22DA               	addwfc	fsr2h,f,c
 14262  004256  0E08               	movlw	8
 14263  004258  6EDF               	movwf	indf2,c
 14264                           
 14265                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14266  00425A  EE20 F002          	lfsr	2,2
 14267  00425E  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14268  004260  26D9               	addwf	fsr2l,f,c
 14269  004262  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14270  004264  22DA               	addwfc	fsr2h,f,c
 14271  004266  0E30               	movlw	48
 14272  004268  6EDE               	movwf	postinc2,c
 14273  00426A  0E0D               	movlw	13
 14274  00426C  6EDD               	movwf	postdec2,c
 14275                           
 14276                           ; BSR set to: 0
 14277                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 14278  00426E  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14279  004272  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14280  004276  0E0C               	movlw	12
 14281  004278  6EDF               	movwf	indf2,c
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14285  00427A  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14286  00427E  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14287  004282  0E00               	movlw	0
 14288  004284  8EDB               	bsf	plusw2,7,c
 14289                           
 14290                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 14291  004286  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14292  00428A  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14293  00428E  0E04               	movlw	4
 14294  004290  6EDF               	movwf	indf2,c
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14298  004292  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14299  004296  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14300  00429A  0E00               	movlw	0
 14301  00429C  8EDB               	bsf	plusw2,7,c
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 14305  00429E  0012               	return	
 14306  0042A0                     l219:
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 14310  0042A0  010D               	movlb	13	; () banked
 14311  0042A2  AF30               	btfss	48,7,b	;volatile
 14312  0042A4  D012               	goto	l224
 14313                           
 14314                           ; BSR set to: 13
 14315                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 14316  0042A6  0E01               	movlw	1
 14317  0042A8  0100               	movlb	0	; () banked
 14318  0042AA  6FAB               	movwf	_controlTransferState& (0+255),b
 14319                           
 14320                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 14321  0042AC  51A2               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 14322  0042AE  B4D8               	btfsc	status,2,c
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 14326  0042B0  ECBC  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 14327                           
 14328                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 14329  0042B4  0E00               	movlw	0
 14330  0042B6  0100               	movlb	0	; () banked
 14331  0042B8  6FA3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 14335  0042BA  0E00               	movlw	0
 14336  0042BC  6FA4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14337                           
 14338                           ; BSR set to: 0
 14339                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 14340  0042BE  51A5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14341  0042C0  A4D8               	btfss	status,2,c
 14342  0042C2  0012               	return	
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 14346  0042C4  ECB1  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14347                           
 14348                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 14349  0042C8  0012               	return	
 14350  0042CA                     l224:
 14351                           
 14352                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 14353  0042CA  0E02               	movlw	2
 14354  0042CC  0100               	movlb	0	; () banked
 14355  0042CE  6FAB               	movwf	_controlTransferState& (0+255),b
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 14359  0042D0  EE20 F001          	lfsr	2,1
 14360  0042D4  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14361  0042D6  26D9               	addwf	fsr2l,f,c
 14362  0042D8  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14363  0042DA  22DA               	addwfc	fsr2h,f,c
 14364  0042DC  0E08               	movlw	8
 14365  0042DE  6EDF               	movwf	indf2,c
 14366                           
 14367                           ; BSR set to: 0
 14368                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 14369  0042E0  EE20 F002          	lfsr	2,2
 14370  0042E4  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14371  0042E6  26D9               	addwf	fsr2l,f,c
 14372  0042E8  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14373  0042EA  22DA               	addwfc	fsr2h,f,c
 14374  0042EC  0E30               	movlw	48
 14375  0042EE  6EDE               	movwf	postinc2,c
 14376  0042F0  0E0D               	movlw	13
 14377  0042F2  6EDD               	movwf	postdec2,c
 14378                           
 14379                           ; BSR set to: 0
 14380                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 14381  0042F4  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14382  0042F8  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14383  0042FC  0E04               	movlw	4
 14384  0042FE  6EDF               	movwf	indf2,c
 14385                           
 14386                           ; BSR set to: 0
 14387                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14388  004300  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14389  004304  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14390  004308  0E00               	movlw	0
 14391  00430A  8EDB               	bsf	plusw2,7,c
 14392                           
 14393                           ; BSR set to: 0
 14394                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 14395  00430C  0E00               	movlw	0
 14396  00430E  6FA3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 14397                           
 14398                           ; BSR set to: 0
 14399                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 14400  004310  0E00               	movlw	0
 14401  004312  6FA4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14402                           
 14403                           ; BSR set to: 0
 14404                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 14405  004314  51A5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14406  004316  A4D8               	btfss	status,2,c
 14407  004318  0012               	return	
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 14411  00431A  ECB1  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14412  00431E  0012               	return	
 14413  004320                     __end_of_USBCtrlEPServiceComplete:
 14414                           	opt stack 0
 14415                           tblptru	equ	0xFF8
 14416                           tblptrh	equ	0xFF7
 14417                           tblptrl	equ	0xFF6
 14418                           tablat	equ	0xFF5
 14419                           prodh	equ	0xFF4
 14420                           prodl	equ	0xFF3
 14421                           intcon	equ	0xFF2
 14422                           intcon3	equ	0xFF0
 14423                           postinc0	equ	0xFEE
 14424                           wreg	equ	0xFE8
 14425                           indf1	equ	0xFE7
 14426                           postdec1	equ	0xFE5
 14427                           plusw1	equ	0xFE3
 14428                           fsr1h	equ	0xFE2
 14429                           fsr1l	equ	0xFE1
 14430                           indf2	equ	0xFDF
 14431                           postinc2	equ	0xFDE
 14432                           postdec2	equ	0xFDD
 14433                           plusw2	equ	0xFDB
 14434                           fsr2h	equ	0xFDA
 14435                           fsr2l	equ	0xFD9
 14436                           status	equ	0xFD8
 14437                           
 14438 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14439 ;; Defined at:
 14440 ;;		line 1490 in file "usb_device.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;		None
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;		None
 14445 ;; Return value:  Size  Location     Type
 14446 ;;                  1    wreg      void 
 14447 ;; Registers used:
 14448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14449 ;; Tracked objects:
 14450 ;;		On entry : 0/0
 14451 ;;		On exit  : 0/0
 14452 ;;		Unchanged: 0/0
 14453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14458 ;;Total ram usage:        0 bytes
 14459 ;; Hardware stack levels used:    1
 14460 ;; Hardware stack levels required when called:    1
 14461 ;; This function calls:
 14462 ;;		_USBCtrlTrfTxService
 14463 ;; This function is called by:
 14464 ;;		_USBCtrlEPServiceComplete
 14465 ;; This function uses a non-reentrant model
 14466 ;;
 14467                           
 14468                           	psect	text71
 14469  005778                     __ptext71:
 14470                           	opt stack 0
 14471  005778                     _USBCtrlEPAllowDataStage:
 14472                           	opt stack 25
 14473                           
 14474                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 14475                           
 14476                           ;incstack = 0
 14477  005778  0E00               	movlw	0
 14478  00577A  0100               	movlb	0	; () banked
 14479  00577C  6FA2               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14480                           
 14481                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 14482  00577E  0E00               	movlw	0
 14483  005780  6FA1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14484                           
 14485                           ; BSR set to: 0
 14486                           ;usb_device.c: 1495: if(controlTransferState == 2)
 14487  005782  0E02               	movlw	2
 14488  005784  19AB               	xorwf	_controlTransferState& (0+255),w,b
 14489  005786  A4D8               	btfss	status,2,c
 14490  005788  D01F               	goto	l208
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 14494  00578A  EE20 F001          	lfsr	2,1
 14495  00578E  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14496  005790  26D9               	addwf	fsr2l,f,c
 14497  005792  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14498  005794  22DA               	addwfc	fsr2h,f,c
 14499  005796  0E08               	movlw	8
 14500  005798  6EDF               	movwf	indf2,c
 14501                           
 14502                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14503  00579A  EE20 F002          	lfsr	2,2
 14504  00579E  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14505  0057A0  26D9               	addwf	fsr2l,f,c
 14506  0057A2  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14507  0057A4  22DA               	addwfc	fsr2h,f,c
 14508  0057A6  0E38               	movlw	56
 14509  0057A8  6EDE               	movwf	postinc2,c
 14510  0057AA  0E0D               	movlw	13
 14511  0057AC  6EDD               	movwf	postdec2,c
 14512                           
 14513                           ; BSR set to: 0
 14514                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14515  0057AE  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14516  0057B2  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14517  0057B6  0E48               	movlw	72
 14518  0057B8  6EDF               	movwf	indf2,c
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14522  0057BA  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14523  0057BE  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14524  0057C2  0E00               	movlw	0
 14525  0057C4  8EDB               	bsf	plusw2,7,c
 14526                           
 14527                           ;usb_device.c: 1502: }
 14528  0057C6  0012               	return	
 14529  0057C8                     l208:
 14530                           
 14531                           ; BSR set to: 0
 14532                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 14533                           
 14534                           ; BSR set to: 0
 14535  0057C8  5172               	movf	(_inPipes+4)& (0+255),w,b
 14536  0057CA  010D               	movlb	13	; () banked
 14537  0057CC  5D36               	subwf	54,w,b	;volatile
 14538  0057CE  0100               	movlb	0	; () banked
 14539  0057D0  5173               	movf	(_inPipes+5)& (0+255),w,b
 14540  0057D2  010D               	movlb	13	; () banked
 14541  0057D4  5937               	subwfb	55,w,b	;volatile
 14542  0057D6  B0D8               	btfsc	status,0,c
 14543  0057D8  D004               	goto	l210
 14544                           
 14545                           ; BSR set to: 13
 14546                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 14547  0057DA  CD36 F072          	movff	3382,_inPipes+4	;volatile
 14548  0057DE  CD37 F073          	movff	3383,_inPipes+5	;volatile
 14549  0057E2                     l210:
 14550                           
 14551                           ; BSR set to: 13
 14552                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 14553                           
 14554                           ; BSR set to: 13
 14555  0057E2  EC7C  F025         	call	_USBCtrlTrfTxService	;wreg free
 14556                           
 14557                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14558  0057E6  0100               	movlb	0	; () banked
 14559  0057E8  EE20 F002          	lfsr	2,2
 14560  0057EC  5174               	movf	_pBDTEntryIn& (0+255),w,b
 14561  0057EE  26D9               	addwf	fsr2l,f,c
 14562  0057F0  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14563  0057F2  22DA               	addwfc	fsr2h,f,c
 14564  0057F4  0E38               	movlw	56
 14565  0057F6  6EDE               	movwf	postinc2,c
 14566  0057F8  0E0D               	movlw	13
 14567  0057FA  6EDD               	movwf	postdec2,c
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14571  0057FC  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14572  005800  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14573  005804  0E48               	movlw	72
 14574  005806  6EDF               	movwf	indf2,c
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14578  005808  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 14579  00580C  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14580  005810  0E00               	movlw	0
 14581  005812  8EDB               	bsf	plusw2,7,c
 14582  005814  0012               	return	
 14583  005816                     __end_of_USBCtrlEPAllowDataStage:
 14584                           	opt stack 0
 14585                           tblptru	equ	0xFF8
 14586                           tblptrh	equ	0xFF7
 14587                           tblptrl	equ	0xFF6
 14588                           tablat	equ	0xFF5
 14589                           prodh	equ	0xFF4
 14590                           prodl	equ	0xFF3
 14591                           intcon	equ	0xFF2
 14592                           intcon3	equ	0xFF0
 14593                           postinc0	equ	0xFEE
 14594                           wreg	equ	0xFE8
 14595                           indf1	equ	0xFE7
 14596                           postdec1	equ	0xFE5
 14597                           plusw1	equ	0xFE3
 14598                           fsr1h	equ	0xFE2
 14599                           fsr1l	equ	0xFE1
 14600                           indf2	equ	0xFDF
 14601                           postinc2	equ	0xFDE
 14602                           postdec2	equ	0xFDD
 14603                           plusw2	equ	0xFDB
 14604                           fsr2h	equ	0xFDA
 14605                           fsr2l	equ	0xFD9
 14606                           status	equ	0xFD8
 14607                           
 14608 ;; *************** function _USBCheckStdRequest *****************
 14609 ;; Defined at:
 14610 ;;		line 2688 in file "usb_device.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;		None
 14615 ;; Return value:  Size  Location     Type
 14616 ;;                  1    wreg      void 
 14617 ;; Registers used:
 14618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14619 ;; Tracked objects:
 14620 ;;		On entry : 0/0
 14621 ;;		On exit  : 0/0
 14622 ;;		Unchanged: 0/0
 14623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14628 ;;Total ram usage:        0 bytes
 14629 ;; Hardware stack levels used:    1
 14630 ;; Hardware stack levels required when called:    5
 14631 ;; This function calls:
 14632 ;;		_USBStdFeatureReqHandler
 14633 ;;		_USBStdGetDscHandler
 14634 ;;		_USBStdGetStatusHandler
 14635 ;;		_USBStdSetCfgHandler
 14636 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14637 ;; This function is called by:
 14638 ;;		_USBCtrlTrfSetupHandler
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text72
 14643  004320                     __ptext72:
 14644                           	opt stack 0
 14645  004320                     _USBCheckStdRequest:
 14646                           	opt stack 22
 14647                           
 14648                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;incstack = 0
 14652  004320  010D               	movlb	13	; () banked
 14653  004322  3930               	swapf	48,w,b	;volatile
 14654  004324  32E8               	rrcf	wreg,f,c
 14655  004326  0B03               	andlw	3
 14656  004328  0900               	iorlw	0
 14657  00432A  A4D8               	btfss	status,2,c
 14658  00432C  0012               	return	
 14659  00432E  D047               	goto	l343
 14660  004330                     l344:
 14661                           
 14662                           ; BSR set to: 13
 14663                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 14664  004330  0100               	movlb	0	; () banked
 14665  004332  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14669  004334  0E08               	movlw	8
 14670  004336  6E5F               	movwf	_USBDeviceState,c
 14671                           
 14672                           ;usb_device.c: 2698: break;
 14673  004338  0012               	return	
 14674  00433A                     
 14675                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14676                           
 14677                           ; BSR set to: 0
 14678  00433A  EC24  F01B         	call	_USBStdGetDscHandler	;wreg free
 14679                           
 14680                           ;usb_device.c: 2701: break;
 14681  00433E  0012               	return	
 14682  004340                     
 14683                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14684  004340  EC53  F023         	call	_USBStdSetCfgHandler	;wreg free
 14685                           
 14686                           ;usb_device.c: 2704: break;
 14687  004344  0012               	return	
 14688  004346                     
 14689                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14690  004346  0EB4               	movlw	low _USBActiveConfiguration
 14691  004348  0100               	movlb	0	; () banked
 14692  00434A  6F6E               	movwf	_inPipes& (0+255),b
 14693  00434C  0E00               	movlw	high _USBActiveConfiguration
 14694  00434E  6F6F               	movwf	(_inPipes+1)& (0+255),b
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14698  004350  8171               	bsf	(_inPipes+3)& (0+255),0,b
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14702  004352  0E01               	movlw	1
 14703  004354  6F72               	movwf	(_inPipes+4)& (0+255),b
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14707  004356  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 14708                           
 14709                           ;usb_device.c: 2710: break;
 14710  004358  0012               	return	
 14711  00435A                     
 14712                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14713                           
 14714                           ; BSR set to: 0
 14715  00435A  ECD8  F028         	call	_USBStdGetStatusHandler	;wreg free
 14716                           
 14717                           ;usb_device.c: 2713: break;
 14718  00435E  0012               	return	
 14719  004360                     
 14720                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14721  004360  EC6B  F00A         	call	_USBStdFeatureReqHandler	;wreg free
 14722                           
 14723                           ;usb_device.c: 2717: break;
 14724  004364  0012               	return	
 14725  004366                     
 14726                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14727  004366  010D               	movlb	13	; () banked
 14728  004368  5134               	movf	52,w,b	;volatile
 14729  00436A  0D01               	mullw	1
 14730  00436C  0EE7               	movlw	low _USBAlternateInterface
 14731  00436E  24F3               	addwf	prodl,w,c
 14732  004370  0100               	movlb	0	; () banked
 14733  004372  6F6E               	movwf	_inPipes& (0+255),b
 14734  004374  0E01               	movlw	high _USBAlternateInterface
 14735  004376  20F4               	addwfc	prodh,w,c
 14736  004378  6F6F               	movwf	(_inPipes+1)& (0+255),b
 14737                           
 14738                           ; BSR set to: 0
 14739                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14740  00437A  8171               	bsf	(_inPipes+3)& (0+255),0,b
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14744  00437C  0E01               	movlw	1
 14745  00437E  6F72               	movwf	(_inPipes+4)& (0+255),b
 14746                           
 14747                           ; BSR set to: 0
 14748                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14749  004380  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 14750                           
 14751                           ;usb_device.c: 2723: break;
 14752  004382  0012               	return	
 14753  004384                     l353:
 14754                           
 14755                           ; BSR set to: 13
 14756                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14757  004384  0100               	movlb	0	; () banked
 14758  004386  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14762  004388  010D               	movlb	13	; () banked
 14763  00438A  5134               	movf	52,w,b	;volatile
 14764  00438C  0D01               	mullw	1
 14765  00438E  0EE7               	movlw	low _USBAlternateInterface
 14766  004390  24F3               	addwf	prodl,w,c
 14767  004392  6ED9               	movwf	fsr2l,c
 14768  004394  0E01               	movlw	high _USBAlternateInterface
 14769  004396  20F4               	addwfc	prodh,w,c
 14770  004398  6EDA               	movwf	fsr2h,c
 14771  00439A  CD32 FFDF          	movff	3378,indf2	;volatile
 14772                           
 14773                           ;usb_device.c: 2727: break;
 14774  00439E  0012               	return	
 14775  0043A0                     
 14776                           ; BSR set to: 13
 14777                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14778                           
 14779                           ; BSR set to: 13
 14780  0043A0  0E00               	movlw	0
 14781  0043A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14782  0043A4  0E02               	movlw	2
 14783  0043A6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14784  0043A8  0E00               	movlw	0
 14785  0043AA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14786  0043AC  0E00               	movlw	0
 14787  0043AE  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14788  0043B0  0E00               	movlw	0
 14789  0043B2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14790  0043B4  0E00               	movlw	0
 14791  0043B6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14792  0043B8  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14793                           
 14794                           ;usb_device.c: 2734: }
 14795                           
 14796                           ;usb_device.c: 2733: break;
 14797                           
 14798                           ;usb_device.c: 2732: default:
 14799                           
 14800                           ;usb_device.c: 2731: case 12:
 14801                           
 14802                           ;usb_device.c: 2730: break;
 14803  0043BC  0012               	return	
 14804  0043BE                     l343:
 14805  0043BE  010D               	movlb	13	; () banked
 14806  0043C0  5131               	movf	49,w,b	;volatile
 14807                           
 14808                           ; Switch size 1, requested type "space"
 14809                           ; Number of cases is 11, Range of values is 0 to 12
 14810                           ; switch strategies available:
 14811                           ; Name         Instructions Cycles
 14812                           ; simple_byte           34    18 (average)
 14813                           ;	Chosen strategy is simple_byte
 14814  0043C2  0A00               	xorlw	0	; case 0
 14815  0043C4  B4D8               	btfsc	status,2,c
 14816  0043C6  D7C9               	goto	l349
 14817  0043C8  0A01               	xorlw	1	; case 1
 14818  0043CA  B4D8               	btfsc	status,2,c
 14819  0043CC  D7C9               	goto	l350
 14820  0043CE  0A02               	xorlw	2	; case 3
 14821  0043D0  B4D8               	btfsc	status,2,c
 14822  0043D2  D7C6               	goto	l350
 14823  0043D4  0A06               	xorlw	6	; case 5
 14824  0043D6  B4D8               	btfsc	status,2,c
 14825  0043D8  D7AB               	goto	l344
 14826  0043DA  0A03               	xorlw	3	; case 6
 14827  0043DC  B4D8               	btfsc	status,2,c
 14828  0043DE  D7AD               	goto	l346
 14829  0043E0  0A01               	xorlw	1	; case 7
 14830  0043E2  B4D8               	btfsc	status,2,c
 14831  0043E4  D7DD               	goto	l354
 14832  0043E6  0A0F               	xorlw	15	; case 8
 14833  0043E8  B4D8               	btfsc	status,2,c
 14834  0043EA  D7AD               	goto	l348
 14835  0043EC  0A01               	xorlw	1	; case 9
 14836  0043EE  B4D8               	btfsc	status,2,c
 14837  0043F0  D7A7               	goto	l347
 14838  0043F2  0A03               	xorlw	3	; case 10
 14839  0043F4  B4D8               	btfsc	status,2,c
 14840  0043F6  D7B7               	goto	l352
 14841  0043F8  0A01               	xorlw	1	; case 11
 14842  0043FA  B4D8               	btfsc	status,2,c
 14843  0043FC  D7C3               	goto	l353
 14844  0043FE  0A07               	xorlw	7	; case 12
 14845  004400  0012               	return	
 14846  004402                     __end_of_USBCheckStdRequest:
 14847                           	opt stack 0
 14848                           tblptru	equ	0xFF8
 14849                           tblptrh	equ	0xFF7
 14850                           tblptrl	equ	0xFF6
 14851                           tablat	equ	0xFF5
 14852                           prodh	equ	0xFF4
 14853                           prodl	equ	0xFF3
 14854                           intcon	equ	0xFF2
 14855                           intcon3	equ	0xFF0
 14856                           postinc0	equ	0xFEE
 14857                           wreg	equ	0xFE8
 14858                           indf1	equ	0xFE7
 14859                           postdec1	equ	0xFE5
 14860                           plusw1	equ	0xFE3
 14861                           fsr1h	equ	0xFE2
 14862                           fsr1l	equ	0xFE1
 14863                           indf2	equ	0xFDF
 14864                           postinc2	equ	0xFDE
 14865                           postdec2	equ	0xFDD
 14866                           plusw2	equ	0xFDB
 14867                           fsr2h	equ	0xFDA
 14868                           fsr2l	equ	0xFD9
 14869                           status	equ	0xFD8
 14870                           
 14871 ;; *************** function _USBStdSetCfgHandler *****************
 14872 ;; Defined at:
 14873 ;;		line 1970 in file "usb_device.c"
 14874 ;; Parameters:    Size  Location     Type
 14875 ;;		None
 14876 ;; Auto vars:     Size  Location     Type
 14877 ;;  i               1   23[COMRAM] unsigned char 
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  1    wreg      void 
 14880 ;; Registers used:
 14881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14891 ;;Total ram usage:        1 bytes
 14892 ;; Hardware stack levels used:    1
 14893 ;; Hardware stack levels required when called:    4
 14894 ;; This function calls:
 14895 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14896 ;;		_memset
 14897 ;; This function is called by:
 14898 ;;		_USBCheckStdRequest
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           	psect	text73
 14903  0046A6                     __ptext73:
 14904                           	opt stack 0
 14905  0046A6                     _USBStdSetCfgHandler:
 14906                           	opt stack 22
 14907                           
 14908                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14909                           
 14910                           ;incstack = 0
 14911  0046A6  0100               	movlb	0	; () banked
 14912  0046A8  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14916  0046AA  0E27               	movlw	39
 14917  0046AC  6E01               	movwf	memset@p1,c
 14918  0046AE  0E0F               	movlw	15
 14919  0046B0  6E02               	movwf	memset@p1+1,c
 14920  0046B2  0E00               	movlw	0
 14921  0046B4  6E04               	movwf	memset@c+1,c
 14922  0046B6  0E00               	movlw	0
 14923  0046B8  6E03               	movwf	memset@c,c
 14924  0046BA  0E00               	movlw	0
 14925  0046BC  6E06               	movwf	memset@n+1,c
 14926  0046BE  0E02               	movlw	2
 14927  0046C0  6E05               	movwf	memset@n,c
 14928  0046C2  ECCD  F037         	call	_memset	;wreg free
 14929                           
 14930                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14931  0046C6  0E00               	movlw	0
 14932  0046C8  6E01               	movwf	memset@p1,c
 14933  0046CA  0E0D               	movlw	13
 14934  0046CC  6E02               	movwf	memset@p1+1,c
 14935  0046CE  0E00               	movlw	0
 14936  0046D0  6E04               	movwf	memset@c+1,c
 14937  0046D2  0E00               	movlw	0
 14938  0046D4  6E03               	movwf	memset@c,c
 14939  0046D6  0E00               	movlw	0
 14940  0046D8  6E06               	movwf	memset@n+1,c
 14941  0046DA  0E30               	movlw	48
 14942  0046DC  6E05               	movwf	memset@n,c
 14943  0046DE  ECCD  F037         	call	_memset	;wreg free
 14944                           
 14945                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14946  0046E2  8C65               	bsf	3941,6,c	;volatile
 14947                           
 14948                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14949  0046E4  0E00               	movlw	0
 14950  0046E6  6E18               	movwf	USBStdSetCfgHandler@i,c
 14951  0046E8                     l11827:
 14952  0046E8  0E02               	movlw	2
 14953  0046EA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14954  0046EC  D001               	goto	l260
 14955  0046EE  D016               	goto	u9150
 14956  0046F0                     l260:
 14957                           
 14958                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14959  0046F0  5018               	movf	USBStdSetCfgHandler@i,w,c
 14960  0046F2  0D01               	mullw	1
 14961  0046F4  0E60               	movlw	low _ep_data_in
 14962  0046F6  24F3               	addwf	prodl,w,c
 14963  0046F8  6ED9               	movwf	fsr2l,c
 14964  0046FA  0E01               	movlw	high _ep_data_in
 14965  0046FC  20F4               	addwfc	prodh,w,c
 14966  0046FE  6EDA               	movwf	fsr2h,c
 14967  004700  0E00               	movlw	0
 14968  004702  6EDF               	movwf	indf2,c
 14969                           
 14970                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14971  004704  5018               	movf	USBStdSetCfgHandler@i,w,c
 14972  004706  0D01               	mullw	1
 14973  004708  0E5D               	movlw	low _ep_data_out
 14974  00470A  24F3               	addwf	prodl,w,c
 14975  00470C  6ED9               	movwf	fsr2l,c
 14976  00470E  0E01               	movlw	high _ep_data_out
 14977  004710  20F4               	addwfc	prodh,w,c
 14978  004712  6EDA               	movwf	fsr2h,c
 14979  004714  0E00               	movlw	0
 14980  004716  6EDF               	movwf	indf2,c
 14981  004718  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14982  00471A  D7E6               	goto	l11827
 14983  00471C                     u9150:
 14984                           
 14985                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14986  00471C  0EE7               	movlw	low _USBAlternateInterface
 14987  00471E  6E01               	movwf	memset@p1,c
 14988  004720  0E01               	movlw	high _USBAlternateInterface
 14989  004722  6E02               	movwf	memset@p1+1,c
 14990  004724  0E00               	movlw	0
 14991  004726  6E04               	movwf	memset@c+1,c
 14992  004728  0E00               	movlw	0
 14993  00472A  6E03               	movwf	memset@c,c
 14994  00472C  0E00               	movlw	0
 14995  00472E  6E06               	movwf	memset@n+1,c
 14996  004730  0E02               	movlw	2
 14997  004732  6E05               	movwf	memset@n,c
 14998  004734  ECCD  F037         	call	_memset	;wreg free
 14999                           
 15000                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 15001  004738  9C65               	bcf	3941,6,c	;volatile
 15002                           
 15003                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 15004  00473A  0E08               	movlw	8
 15005  00473C  0100               	movlb	0	; () banked
 15006  00473E  6F74               	movwf	_pBDTEntryIn& (0+255),b
 15007  004740  0E0D               	movlw	13
 15008  004742  6F75               	movwf	(_pBDTEntryIn+1)& (0+255),b
 15009                           
 15010                           ; BSR set to: 0
 15011                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 15012  004744  0E00               	movlw	0
 15013  004746  6F8E               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 15014  004748  0E0D               	movlw	13
 15015  00474A  6F8F               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 15019  00474C  C08E  F08C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 15020  004750  C08F  F08D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 15024  004754  CD32 F0B4          	movff	3378,_USBActiveConfiguration	;volatile
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 15028  004758  51B4               	movf	_USBActiveConfiguration& (0+255),w,b
 15029  00475A  A4D8               	btfss	status,2,c
 15030  00475C  D003               	goto	l262
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 15034  00475E  0E10               	movlw	16
 15035  004760  6E5F               	movwf	_USBDeviceState,c
 15036                           
 15037                           ;usb_device.c: 2015: }
 15038  004762  0012               	return	
 15039  004764                     l262:
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 15043                           
 15044                           ; BSR set to: 0
 15045  004764  0E00               	movlw	0
 15046  004766  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15047  004768  0E01               	movlw	1
 15048  00476A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15049  00476C  0EB4               	movlw	low _USBActiveConfiguration
 15050  00476E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 15051  004770  0E00               	movlw	high _USBActiveConfiguration
 15052  004772  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 15053  004774  0E00               	movlw	0
 15054  004776  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15055  004778  0E01               	movlw	1
 15056  00477A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15057  00477C  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15058                           
 15059                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 15060  004780  0E20               	movlw	32
 15061  004782  6E5F               	movwf	_USBDeviceState,c
 15062  004784  0012               	return	
 15063  004786                     __end_of_USBStdSetCfgHandler:
 15064                           	opt stack 0
 15065                           tblptru	equ	0xFF8
 15066                           tblptrh	equ	0xFF7
 15067                           tblptrl	equ	0xFF6
 15068                           tablat	equ	0xFF5
 15069                           prodh	equ	0xFF4
 15070                           prodl	equ	0xFF3
 15071                           intcon	equ	0xFF2
 15072                           intcon3	equ	0xFF0
 15073                           postinc0	equ	0xFEE
 15074                           wreg	equ	0xFE8
 15075                           indf1	equ	0xFE7
 15076                           postdec1	equ	0xFE5
 15077                           plusw1	equ	0xFE3
 15078                           fsr1h	equ	0xFE2
 15079                           fsr1l	equ	0xFE1
 15080                           indf2	equ	0xFDF
 15081                           postinc2	equ	0xFDE
 15082                           postdec2	equ	0xFDD
 15083                           plusw2	equ	0xFDB
 15084                           fsr2h	equ	0xFDA
 15085                           fsr2l	equ	0xFD9
 15086                           status	equ	0xFD8
 15087                           
 15088 ;; *************** function _memset *****************
 15089 ;; Defined at:
 15090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 15091 ;; Parameters:    Size  Location     Type
 15092 ;;  p1              2    0[COMRAM] PTR void 
 15093 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15094 ;;  c               2    2[COMRAM] int 
 15095 ;;  n               2    4[COMRAM] unsigned int 
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;  p               2    6[COMRAM] PTR unsigned char 
 15098 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  2    0[COMRAM] PTR void 
 15101 ;; Registers used:
 15102 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15108 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15112 ;;Total ram usage:        8 bytes
 15113 ;; Hardware stack levels used:    1
 15114 ;; This function calls:
 15115 ;;		Nothing
 15116 ;; This function is called by:
 15117 ;;		_USBDeviceInit
 15118 ;;		_USBStdSetCfgHandler
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           	psect	text74
 15123  006F9A                     __ptext74:
 15124                           	opt stack 0
 15125  006F9A                     _memset:
 15126                           	opt stack 28
 15127                           
 15128                           ;incstack = 0
 15129  006F9A  C001  F007         	movff	memset@p1,memset@p
 15130  006F9E  C002  F008         	movff	memset@p1+1,memset@p+1
 15131  006FA2  D008               	goto	l3545
 15132  006FA4                     l10593:
 15133  006FA4  C007  FFD9         	movff	memset@p,fsr2l
 15134  006FA8  C008  FFDA         	movff	memset@p+1,fsr2h
 15135  006FAC  C003  FFDF         	movff	memset@c,indf2
 15136  006FB0  4A07               	infsnz	memset@p,f,c
 15137  006FB2  2A08               	incf	memset@p+1,f,c
 15138  006FB4                     l3545:
 15139  006FB4  0605               	decf	memset@n,f,c
 15140  006FB6  A0D8               	btfss	status,0,c
 15141  006FB8  0606               	decf	memset@n+1,f,c
 15142  006FBA  2805               	incf	memset@n,w,c
 15143  006FBC  E1F3               	bnz	l10593
 15144  006FBE  2806               	incf	memset@n+1,w,c
 15145  006FC0  B4D8               	btfsc	status,2,c
 15146  006FC2  0012               	return	
 15147  006FC4  D7EF               	goto	l3546
 15148  006FC6                     __end_of_memset:
 15149                           	opt stack 0
 15150                           tblptru	equ	0xFF8
 15151                           tblptrh	equ	0xFF7
 15152                           tblptrl	equ	0xFF6
 15153                           tablat	equ	0xFF5
 15154                           prodh	equ	0xFF4
 15155                           prodl	equ	0xFF3
 15156                           intcon	equ	0xFF2
 15157                           intcon3	equ	0xFF0
 15158                           postinc0	equ	0xFEE
 15159                           wreg	equ	0xFE8
 15160                           indf1	equ	0xFE7
 15161                           postdec1	equ	0xFE5
 15162                           plusw1	equ	0xFE3
 15163                           fsr1h	equ	0xFE2
 15164                           fsr1l	equ	0xFE1
 15165                           indf2	equ	0xFDF
 15166                           postinc2	equ	0xFDE
 15167                           postdec2	equ	0xFDD
 15168                           plusw2	equ	0xFDB
 15169                           fsr2h	equ	0xFDA
 15170                           fsr2l	equ	0xFD9
 15171                           status	equ	0xFD8
 15172                           
 15173 ;; *************** function _USBStdGetStatusHandler *****************
 15174 ;; Defined at:
 15175 ;;		line 2131 in file "usb_device.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;  p               2    1[COMRAM] PTR struct __BDT
 15180 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15181 ;; Return value:  Size  Location     Type
 15182 ;;                  1    wreg      void 
 15183 ;; Registers used:
 15184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15185 ;; Tracked objects:
 15186 ;;		On entry : 0/0
 15187 ;;		On exit  : 0/0
 15188 ;;		Unchanged: 0/0
 15189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15193 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15194 ;;Total ram usage:        3 bytes
 15195 ;; Hardware stack levels used:    1
 15196 ;; This function calls:
 15197 ;;		Nothing
 15198 ;; This function is called by:
 15199 ;;		_USBCheckStdRequest
 15200 ;; This function uses a non-reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text75
 15204  0051B0                     __ptext75:
 15205                           	opt stack 0
 15206  0051B0                     _USBStdGetStatusHandler:
 15207                           	opt stack 26
 15208                           
 15209                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 15210                           
 15211                           ;incstack = 0
 15212  0051B0  0E00               	movlw	0
 15213  0051B2  010D               	movlb	13	; () banked
 15214  0051B4  6F38               	movwf	56,b	;volatile
 15215                           
 15216                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 15217  0051B6  0E00               	movlw	0
 15218  0051B8  6F39               	movwf	57,b	;volatile
 15219                           
 15220                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 15221  0051BA  D039               	goto	l281
 15222  0051BC                     l282:
 15223                           
 15224                           ; BSR set to: 13
 15225                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 15226  0051BC  0100               	movlb	0	; () banked
 15227  0051BE  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 15228                           
 15229                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 15230                           
 15231                           ; BSR set to: 13
 15232                           
 15233                           ; BSR set to: 0
 15234                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 15235                           
 15236                           ;usb_device.c: 2144: if(0 == 1)
 15237  0051C0  0100               	movlb	0	; () banked
 15238  0051C2  05AA               	decf	_RemoteWakeup& (0+255),w,b
 15239  0051C4  A4D8               	btfss	status,2,c
 15240  0051C6  D03E               	goto	l285
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 15244  0051C8  010D               	movlb	13	; () banked
 15245  0051CA  8338               	bsf	56,1,b	;volatile
 15246                           
 15247                           ; BSR set to: 13
 15248                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 15249  0051CC  D03B               	goto	l285
 15250  0051CE                     l286:
 15251                           
 15252                           ; BSR set to: 13
 15253                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 15254  0051CE  0100               	movlb	0	; () banked
 15255  0051D0  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 15256                           
 15257                           ;usb_device.c: 2156: break;
 15258  0051D2  D038               	goto	l285
 15259  0051D4                     l287:
 15260                           
 15261                           ; BSR set to: 13
 15262                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 15263  0051D4  0100               	movlb	0	; () banked
 15264  0051D6  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 15265                           
 15266                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 15267  0051D8  010D               	movlb	13	; () banked
 15268  0051DA  BF34               	btfsc	52,7,b	;volatile
 15269  0051DC  D00A               	goto	l288
 15270                           
 15271                           ; BSR set to: 13
 15272                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15273  0051DE  5134               	movf	52,w,b	;volatile
 15274  0051E0  0B0F               	andlw	15
 15275  0051E2  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15276  0051E4  5001               	movf	??_USBStdGetStatusHandler,w,c
 15277  0051E6  0D02               	mullw	2
 15278  0051E8  0E39               	movlw	low _pBDTEntryOut
 15279  0051EA  24F3               	addwf	prodl,w,c
 15280  0051EC  6ED9               	movwf	fsr2l,c
 15281  0051EE  0E01               	movlw	high _pBDTEntryOut
 15282  0051F0  D009               	goto	L7
 15283  0051F2                     l288:
 15284                           
 15285                           ; BSR set to: 13
 15286                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15287                           
 15288                           ; BSR set to: 13
 15289  0051F2  5134               	movf	52,w,b	;volatile
 15290  0051F4  0B0F               	andlw	15
 15291  0051F6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 15292  0051F8  5001               	movf	??_USBStdGetStatusHandler,w,c
 15293  0051FA  0D02               	mullw	2
 15294  0051FC  0E74               	movlw	low _pBDTEntryIn
 15295  0051FE  24F3               	addwf	prodl,w,c
 15296  005200  6ED9               	movwf	fsr2l,c
 15297  005202  0E00               	movlw	high _pBDTEntryIn
 15298  005204                     L7:
 15299  005204  20F4               	addwfc	prodh,w,c
 15300  005206  6EDA               	movwf	fsr2h,c
 15301  005208  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 15302  00520C  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 15303                           
 15304                           ; BSR set to: 13
 15305                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 15306                           
 15307                           ; BSR set to: 13
 15308  005210  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15309  005214  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15310  005218  AEDF               	btfss	indf2,7,c
 15311  00521A  D014               	goto	l285
 15312                           
 15313                           ; BSR set to: 13
 15314  00521C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 15315  005220  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 15316  005224  A4DF               	btfss	indf2,2,c
 15317  005226  D00E               	goto	l285
 15318                           
 15319                           ; BSR set to: 13
 15320                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 15321  005228  0E01               	movlw	1
 15322  00522A  6F38               	movwf	56,b	;volatile
 15323                           
 15324                           ; BSR set to: 13
 15325                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 15326                           
 15327                           ; BSR set to: 13
 15328                           ;usb_device.c: 2176: break;
 15329  00522C  D00B               	goto	l285
 15330  00522E                     l281:
 15331                           
 15332                           ; BSR set to: 13
 15333                           
 15334                           ; BSR set to: 13
 15335  00522E  5130               	movf	48,w,b	;volatile
 15336  005230  0B1F               	andlw	31
 15337                           
 15338                           ; Switch size 1, requested type "space"
 15339                           ; Number of cases is 3, Range of values is 0 to 2
 15340                           ; switch strategies available:
 15341                           ; Name         Instructions Cycles
 15342                           ; simple_byte           10     6 (average)
 15343                           ;	Chosen strategy is simple_byte
 15344  005232  0A00               	xorlw	0	; case 0
 15345  005234  B4D8               	btfsc	status,2,c
 15346  005236  D7C2               	goto	l282
 15347  005238  0A01               	xorlw	1	; case 1
 15348  00523A  B4D8               	btfsc	status,2,c
 15349  00523C  D7C8               	goto	l286
 15350  00523E  0A03               	xorlw	3	; case 2
 15351  005240  B4D8               	btfsc	status,2,c
 15352  005242  D7C8               	goto	l287
 15353  005244                     l285:
 15354                           
 15355                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 15356  005244  0100               	movlb	0	; () banked
 15357  005246  AF71               	btfss	(_inPipes+3)& (0+255),7,b
 15358  005248  0012               	return	
 15359                           
 15360                           ; BSR set to: 0
 15361                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 15362  00524A  0E38               	movlw	56
 15363  00524C  6F6E               	movwf	_inPipes& (0+255),b
 15364  00524E  0E0D               	movlw	13
 15365  005250  6F6F               	movwf	(_inPipes+1)& (0+255),b
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 15369  005252  8171               	bsf	(_inPipes+3)& (0+255),0,b
 15370                           
 15371                           ; BSR set to: 0
 15372                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 15373  005254  0E02               	movlw	2
 15374  005256  6F72               	movwf	(_inPipes+4)& (0+255),b
 15375  005258  0012               	return	
 15376  00525A                     __end_of_USBStdGetStatusHandler:
 15377                           	opt stack 0
 15378                           tblptru	equ	0xFF8
 15379                           tblptrh	equ	0xFF7
 15380                           tblptrl	equ	0xFF6
 15381                           tablat	equ	0xFF5
 15382                           prodh	equ	0xFF4
 15383                           prodl	equ	0xFF3
 15384                           intcon	equ	0xFF2
 15385                           intcon3	equ	0xFF0
 15386                           postinc0	equ	0xFEE
 15387                           wreg	equ	0xFE8
 15388                           indf1	equ	0xFE7
 15389                           postdec1	equ	0xFE5
 15390                           plusw1	equ	0xFE3
 15391                           fsr1h	equ	0xFE2
 15392                           fsr1l	equ	0xFE1
 15393                           indf2	equ	0xFDF
 15394                           postinc2	equ	0xFDE
 15395                           postdec2	equ	0xFDD
 15396                           plusw2	equ	0xFDB
 15397                           fsr2h	equ	0xFDA
 15398                           fsr2l	equ	0xFD9
 15399                           status	equ	0xFD8
 15400                           
 15401 ;; *************** function _USBStdGetDscHandler *****************
 15402 ;; Defined at:
 15403 ;;		line 2045 in file "usb_device.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      void 
 15410 ;; Registers used:
 15411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15421 ;;Total ram usage:        2 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; This function calls:
 15424 ;;		Nothing
 15425 ;; This function is called by:
 15426 ;;		_USBCheckStdRequest
 15427 ;; This function uses a non-reentrant model
 15428 ;;
 15429                           
 15430                           	psect	text76
 15431  003648                     __ptext76:
 15432                           	opt stack 0
 15433  003648                     _USBStdGetDscHandler:
 15434                           	opt stack 26
 15435                           
 15436                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 15437                           
 15438                           ; BSR set to: 0
 15439                           ;incstack = 0
 15440  003648  0E80               	movlw	128
 15441  00364A  010D               	movlb	13	; () banked
 15442  00364C  1930               	xorwf	48,w,b	;volatile
 15443  00364E  A4D8               	btfss	status,2,c
 15444  003650  0012               	return	
 15445                           
 15446                           ; BSR set to: 13
 15447                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15448  003652  0EC0               	movlw	192
 15449  003654  0100               	movlb	0	; () banked
 15450  003656  6F71               	movwf	(_inPipes+3)& (0+255),b
 15451                           
 15452                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 15453  003658  D088               	goto	l268
 15454  00365A                     
 15455                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15456                           
 15457                           ; BSR set to: 0
 15458  00365A  0E7D               	movlw	low _device_dsc
 15459  00365C  0100               	movlb	0	; () banked
 15460  00365E  6F6E               	movwf	_inPipes& (0+255),b
 15461  003660  0E8F               	movlw	high _device_dsc
 15462  003662  6F6F               	movwf	(_inPipes+1)& (0+255),b
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 15466  003664  0E00               	movlw	0
 15467  003666  6F73               	movwf	(_inPipes+5)& (0+255),b
 15468  003668  0E12               	movlw	18
 15469  00366A  6F72               	movwf	(_inPipes+4)& (0+255),b
 15470                           
 15471                           ;usb_device.c: 2060: break;
 15472  00366C  0012               	return	
 15473  00366E                     
 15474                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 15475                           
 15476                           ; BSR set to: 0
 15477  00366E  010D               	movlb	13	; () banked
 15478  003670  5132               	movf	50,w,b	;volatile
 15479  003672  A4D8               	btfss	status,2,c
 15480  003674  D043               	goto	l272
 15481                           
 15482                           ; BSR set to: 13
 15483                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 15484  003676  5132               	movf	50,w,b	;volatile
 15485  003678  0D02               	mullw	2
 15486  00367A  0E7C               	movlw	low _USB_CD_Ptr
 15487  00367C  24F3               	addwf	prodl,w,c
 15488  00367E  6EF6               	movwf	tblptrl,c
 15489  003680  0E8E               	movlw	high _USB_CD_Ptr
 15490  003682  20F4               	addwfc	prodh,w,c
 15491  003684  6EF7               	movwf	tblptrh,c
 15492  003686                     	if	1	;There are 3 active tblptr bytes
 15493  003686  6AF8               	clrf	tblptru,c
 15494  003688  0E00               	movlw	low (__mediumconst shr (0+16))
 15495  00368A  22F8               	addwfc	tblptru,f,c
 15496  00368C                     	endif
 15497  00368C  0009               	tblrd		*+
 15498  00368E  CFF5 F06E          	movff	tablat,_inPipes
 15499  003692  000A               	tblrd		*-
 15500  003694  CFF5 F06F          	movff	tablat,_inPipes+1
 15501                           
 15502                           ; BSR set to: 13
 15503                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15504  003698  0E02               	movlw	2
 15505  00369A  0100               	movlb	0	; () banked
 15506  00369C  256E               	addwf	_inPipes& (0+255),w,b
 15507  00369E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15508  0036A0  0E00               	movlw	0
 15509  0036A2  216F               	addwfc	(_inPipes+1)& (0+255),w,b
 15510  0036A4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15511  0036A6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15512  0036AA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15513  0036AE  6AF8               	clrf	tblptru,c
 15514  0036B0  0E0E               	movlw	(high __ramtop+-1)
 15515  0036B2  64F7               	cpfsgt	tblptrh,c
 15516  0036B4  D003               	bra	u9197
 15517  0036B6  0008               	tblrd		*
 15518  0036B8  50F5               	movf	tablat,w,c
 15519  0036BA  D005               	bra	u9190
 15520  0036BC                     u9197:
 15521  0036BC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15522  0036C0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15523  0036C4  50EF               	movf	indf0,w,c
 15524  0036C6                     u9190:
 15525  0036C6  0100               	movlb	0	; () banked
 15526  0036C8  6F72               	movwf	(_inPipes+4)& (0+255),b
 15527                           
 15528                           ; BSR set to: 0
 15529                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15530  0036CA  0E03               	movlw	3
 15531  0036CC  256E               	addwf	_inPipes& (0+255),w,b
 15532  0036CE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15533  0036D0  0E00               	movlw	0
 15534  0036D2  216F               	addwfc	(_inPipes+1)& (0+255),w,b
 15535  0036D4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15536  0036D6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15537  0036DA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15538  0036DE  6AF8               	clrf	tblptru,c
 15539  0036E0  0E0E               	movlw	(high __ramtop+-1)
 15540  0036E2  64F7               	cpfsgt	tblptrh,c
 15541  0036E4  D003               	bra	u9207
 15542  0036E6  0008               	tblrd		*
 15543  0036E8  50F5               	movf	tablat,w,c
 15544  0036EA  D005               	bra	u9200
 15545  0036EC                     u9207:
 15546  0036EC  CFF6 FFE9          	movff	tblptrl,fsr0l
 15547  0036F0  CFF7 FFEA          	movff	tblptrh,fsr0h
 15548  0036F4  50EF               	movf	indf0,w,c
 15549  0036F6                     u9200:
 15550  0036F6  0100               	movlb	0	; () banked
 15551  0036F8  6F73               	movwf	(_inPipes+5)& (0+255),b
 15552                           
 15553                           ;usb_device.c: 2078: }
 15554  0036FA  0012               	return	
 15555  0036FC                     l272:
 15556                           
 15557                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 15558                           
 15559                           ; BSR set to: 0
 15560  0036FC  0E00               	movlw	0
 15561  0036FE  0100               	movlb	0	; () banked
 15562  003700  6F71               	movwf	(_inPipes+3)& (0+255),b
 15563                           
 15564                           ; BSR set to: 0
 15565                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 15566  003702  0012               	return	
 15567  003704                     
 15568                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 15569                           
 15570                           ; BSR set to: 0
 15571  003704  0E04               	movlw	4
 15572  003706  010D               	movlb	13	; () banked
 15573  003708  6132               	cpfslt	50,b	;volatile
 15574  00370A  D027               	goto	l275
 15575                           
 15576                           ; BSR set to: 13
 15577                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 15578  00370C  5132               	movf	50,w,b	;volatile
 15579  00370E  0D02               	mullw	2
 15580  003710  0E6D               	movlw	low _USB_SD_Ptr
 15581  003712  24F3               	addwf	prodl,w,c
 15582  003714  6EF6               	movwf	tblptrl,c
 15583  003716  0E8E               	movlw	high _USB_SD_Ptr
 15584  003718  20F4               	addwfc	prodh,w,c
 15585  00371A  6EF7               	movwf	tblptrh,c
 15586  00371C                     	if	1	;There are 3 active tblptr bytes
 15587  00371C  6AF8               	clrf	tblptru,c
 15588  00371E  0E00               	movlw	low (__mediumconst shr (0+16))
 15589  003720  22F8               	addwfc	tblptru,f,c
 15590  003722                     	endif
 15591  003722  0009               	tblrd		*+
 15592  003724  CFF5 F06E          	movff	tablat,_inPipes
 15593  003728  000A               	tblrd		*-
 15594  00372A  CFF5 F06F          	movff	tablat,_inPipes+1
 15595                           
 15596                           ; BSR set to: 13
 15597                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15598  00372E  C06E  FFF6         	movff	_inPipes,tblptrl
 15599  003732  C06F  FFF7         	movff	_inPipes+1,tblptrh
 15600  003736  6AF8               	clrf	tblptru,c
 15601  003738  0E0E               	movlw	(high __ramtop+-1)
 15602  00373A  64F7               	cpfsgt	tblptrh,c
 15603  00373C  D003               	bra	u9227
 15604  00373E  0008               	tblrd		*
 15605  003740  50F5               	movf	tablat,w,c
 15606  003742  D005               	bra	u9220
 15607  003744                     u9227:
 15608  003744  CFF6 FFE9          	movff	tblptrl,fsr0l
 15609  003748  CFF7 FFEA          	movff	tblptrh,fsr0h
 15610  00374C  50EF               	movf	indf0,w,c
 15611  00374E                     u9220:
 15612  00374E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15613  003750  5001               	movf	??_USBStdGetDscHandler,w,c
 15614  003752  0100               	movlb	0	; () banked
 15615  003754  6F72               	movwf	(_inPipes+4)& (0+255),b
 15616  003756  6B73               	clrf	(_inPipes+5)& (0+255),b
 15617                           
 15618                           ;usb_device.c: 2094: }
 15619  003758  0012               	return	
 15620  00375A                     l275:
 15621                           
 15622                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 15623                           
 15624                           ; BSR set to: 0
 15625  00375A  0E00               	movlw	0
 15626  00375C  0100               	movlb	0	; () banked
 15627  00375E  6F71               	movwf	(_inPipes+3)& (0+255),b
 15628                           
 15629                           ; BSR set to: 0
 15630                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 15631  003760  0012               	return	
 15632  003762                     
 15633                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 15634                           
 15635                           ; BSR set to: 0
 15636  003762  0E00               	movlw	0
 15637  003764  0100               	movlb	0	; () banked
 15638  003766  6F71               	movwf	(_inPipes+3)& (0+255),b
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;usb_device.c: 2112: }
 15642                           
 15643                           ;usb_device.c: 2111: break;
 15644  003768  0012               	return	
 15645  00376A                     l268:
 15646                           
 15647                           ; BSR set to: 0
 15648                           
 15649                           ; BSR set to: 0
 15650  00376A  010D               	movlb	13	; () banked
 15651  00376C  5133               	movf	51,w,b	;volatile
 15652                           
 15653                           ; Switch size 1, requested type "space"
 15654                           ; Number of cases is 3, Range of values is 1 to 3
 15655                           ; switch strategies available:
 15656                           ; Name         Instructions Cycles
 15657                           ; simple_byte           10     6 (average)
 15658                           ;	Chosen strategy is simple_byte
 15659  00376E  0A01               	xorlw	1	; case 1
 15660  003770  B4D8               	btfsc	status,2,c
 15661  003772  D773               	goto	l269
 15662  003774  0A03               	xorlw	3	; case 2
 15663  003776  B4D8               	btfsc	status,2,c
 15664  003778  D77A               	goto	l271
 15665  00377A  0A01               	xorlw	1	; case 3
 15666  00377C  B4D8               	btfsc	status,2,c
 15667  00377E  D7C2               	goto	l274
 15668  003780  D7F0               	goto	l277
 15669  003782                     __end_of_USBStdGetDscHandler:
 15670                           	opt stack 0
 15671                           tblptru	equ	0xFF8
 15672                           tblptrh	equ	0xFF7
 15673                           tblptrl	equ	0xFF6
 15674                           tablat	equ	0xFF5
 15675                           prodh	equ	0xFF4
 15676                           prodl	equ	0xFF3
 15677                           intcon	equ	0xFF2
 15678                           intcon3	equ	0xFF0
 15679                           indf0	equ	0xFEF
 15680                           postinc0	equ	0xFEE
 15681                           fsr0h	equ	0xFEA
 15682                           fsr0l	equ	0xFE9
 15683                           wreg	equ	0xFE8
 15684                           indf1	equ	0xFE7
 15685                           postdec1	equ	0xFE5
 15686                           plusw1	equ	0xFE3
 15687                           fsr1h	equ	0xFE2
 15688                           fsr1l	equ	0xFE1
 15689                           indf2	equ	0xFDF
 15690                           postinc2	equ	0xFDE
 15691                           postdec2	equ	0xFDD
 15692                           plusw2	equ	0xFDB
 15693                           fsr2h	equ	0xFDA
 15694                           fsr2l	equ	0xFD9
 15695                           status	equ	0xFD8
 15696                           
 15697 ;; *************** function _USBStdFeatureReqHandler *****************
 15698 ;; Defined at:
 15699 ;;		line 2756 in file "usb_device.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  p               2   27[COMRAM] PTR struct __BDT
 15704 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15705 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15706 ;;		 -> UEP0(1), 
 15707 ;;  current_ep_d    1   26[COMRAM] struct .
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      void 
 15710 ;; Registers used:
 15711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15718 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15720 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15721 ;;Total ram usage:        6 bytes
 15722 ;; Hardware stack levels used:    1
 15723 ;; Hardware stack levels required when called:    4
 15724 ;; This function calls:
 15725 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15726 ;; This function is called by:
 15727 ;;		_USBCheckStdRequest
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           	psect	text77
 15732  0014D6                     __ptext77:
 15733                           	opt stack 0
 15734  0014D6                     _USBStdFeatureReqHandler:
 15735                           	opt stack 22
 15736                           
 15737                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15738                           
 15739                           ;incstack = 0
 15740  0014D6  010D               	movlb	13	; () banked
 15741  0014D8  0532               	decf	50,w,b	;volatile
 15742  0014DA  A4D8               	btfss	status,2,c
 15743  0014DC  D011               	goto	l361
 15744                           
 15745                           ; BSR set to: 13
 15746  0014DE  5130               	movf	48,w,b	;volatile
 15747  0014E0  0B1F               	andlw	31
 15748  0014E2  0900               	iorlw	0
 15749  0014E4  A4D8               	btfss	status,2,c
 15750  0014E6  D00C               	goto	l361
 15751                           
 15752                           ; BSR set to: 13
 15753                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15754  0014E8  0100               	movlb	0	; () banked
 15755  0014EA  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15759  0014EC  0E03               	movlw	3
 15760  0014EE  010D               	movlb	13	; () banked
 15761  0014F0  1931               	xorwf	49,w,b	;volatile
 15762  0014F2  A4D8               	btfss	status,2,c
 15763  0014F4  D002               	goto	l360
 15764                           
 15765                           ; BSR set to: 13
 15766                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15767  0014F6  0E01               	movlw	1
 15768  0014F8  D001               	goto	L8
 15769  0014FA                     l360:
 15770                           
 15771                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15772                           
 15773                           ; BSR set to: 0
 15774  0014FA  0E00               	movlw	0
 15775  0014FC                     L8:
 15776  0014FC  0100               	movlb	0	; () banked
 15777  0014FE  6FAA               	movwf	_RemoteWakeup& (0+255),b
 15778  001500                     l361:
 15779                           
 15780                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15781                           
 15782                           ; BSR set to: 0
 15783  001500  010D               	movlb	13	; () banked
 15784  001502  5132               	movf	50,w,b	;volatile
 15785  001504  A4D8               	btfss	status,2,c
 15786  001506  0012               	return	
 15787                           
 15788                           ; BSR set to: 13
 15789  001508  5130               	movf	48,w,b	;volatile
 15790  00150A  0B1F               	andlw	31
 15791  00150C  0A02               	xorlw	2
 15792  00150E  A4D8               	btfss	status,2,c
 15793  001510  0012               	return	
 15794                           
 15795                           ; BSR set to: 13
 15796  001512  5134               	movf	52,w,b	;volatile
 15797  001514  0B0F               	andlw	15
 15798  001516  0900               	iorlw	0
 15799  001518  B4D8               	btfsc	status,2,c
 15800  00151A  0012               	return	
 15801                           
 15802                           ; BSR set to: 13
 15803  00151C  5134               	movf	52,w,b	;volatile
 15804  00151E  0B0F               	andlw	15
 15805  001520  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15806  001522  0E03               	movlw	3
 15807  001524  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15808  001526  0012               	return	
 15809                           
 15810                           ; BSR set to: 13
 15811  001528  0E20               	movlw	32
 15812  00152A  185F               	xorwf	_USBDeviceState,w,c
 15813  00152C  A4D8               	btfss	status,2,c
 15814  00152E  0012               	return	
 15815                           
 15816                           ; BSR set to: 13
 15817                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15818  001530  0100               	movlb	0	; () banked
 15819  001532  8F71               	bsf	(_inPipes+3)& (0+255),7,b
 15820                           
 15821                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15822  001534  010D               	movlb	13	; () banked
 15823  001536  BF34               	btfsc	52,7,b	;volatile
 15824  001538  D019               	goto	l363
 15825                           
 15826                           ; BSR set to: 13
 15827                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15828  00153A  5134               	movf	52,w,b	;volatile
 15829  00153C  0B0F               	andlw	15
 15830  00153E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15831  001540  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15832  001542  0D02               	mullw	2
 15833  001544  0E39               	movlw	low _pBDTEntryOut
 15834  001546  24F3               	addwf	prodl,w,c
 15835  001548  6ED9               	movwf	fsr2l,c
 15836  00154A  0E01               	movlw	high _pBDTEntryOut
 15837  00154C  20F4               	addwfc	prodh,w,c
 15838  00154E  6EDA               	movwf	fsr2h,c
 15839  001550  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15840  001554  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15841                           
 15842                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15843  001558  5134               	movf	52,w,b	;volatile
 15844  00155A  0B0F               	andlw	15
 15845  00155C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15846  00155E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15847  001560  0D01               	mullw	1
 15848  001562  0E5D               	movlw	low _ep_data_out
 15849  001564  24F3               	addwf	prodl,w,c
 15850  001566  6ED9               	movwf	fsr2l,c
 15851  001568  0E01               	movlw	high _ep_data_out
 15852  00156A  D018               	goto	L9
 15853  00156C                     l363:
 15854                           
 15855                           ; BSR set to: 13
 15856                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15857                           
 15858                           ; BSR set to: 13
 15859  00156C  5134               	movf	52,w,b	;volatile
 15860  00156E  0B0F               	andlw	15
 15861  001570  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15862  001572  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15863  001574  0D02               	mullw	2
 15864  001576  0E74               	movlw	low _pBDTEntryIn
 15865  001578  24F3               	addwf	prodl,w,c
 15866  00157A  6ED9               	movwf	fsr2l,c
 15867  00157C  0E00               	movlw	high _pBDTEntryIn
 15868  00157E  20F4               	addwfc	prodh,w,c
 15869  001580  6EDA               	movwf	fsr2h,c
 15870  001582  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15871  001586  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15872                           
 15873                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15874  00158A  5134               	movf	52,w,b	;volatile
 15875  00158C  0B0F               	andlw	15
 15876  00158E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15877  001590  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15878  001592  0D01               	mullw	1
 15879  001594  0E60               	movlw	low _ep_data_in
 15880  001596  24F3               	addwf	prodl,w,c
 15881  001598  6ED9               	movwf	fsr2l,c
 15882  00159A  0E01               	movlw	high _ep_data_in
 15883  00159C                     L9:
 15884  00159C  20F4               	addwfc	prodh,w,c
 15885  00159E  6EDA               	movwf	fsr2h,c
 15886  0015A0  50DF               	movf	indf2,w,c
 15887  0015A2  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15888                           
 15889                           ; BSR set to: 13
 15890                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15891                           
 15892                           ; BSR set to: 13
 15893  0015A4  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15894  0015A6  D006               	goto	l365
 15895                           
 15896                           ; BSR set to: 13
 15897                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15898  0015A8  0EFB               	movlw	251
 15899  0015AA  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15900  0015AC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15901  0015AE  0EFF               	movlw	255
 15902  0015B0  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15903  0015B2  D004               	goto	L10
 15904  0015B4                     l365:
 15905                           
 15906                           ; BSR set to: 13
 15907                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15908                           
 15909                           ; BSR set to: 13
 15910  0015B4  0E04               	movlw	4
 15911  0015B6  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15912  0015B8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15913  0015BA  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15914  0015BC                     L10:
 15915  0015BC  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15916                           
 15917                           ; BSR set to: 13
 15918                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15919                           
 15920                           ; BSR set to: 13
 15921  0015BE  BF34               	btfsc	52,7,b	;volatile
 15922  0015C0  D00A               	goto	l367
 15923                           
 15924                           ; BSR set to: 13
 15925                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15926  0015C2  5134               	movf	52,w,b	;volatile
 15927  0015C4  0B0F               	andlw	15
 15928  0015C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15929  0015C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15930  0015CA  0D02               	mullw	2
 15931  0015CC  0E39               	movlw	low _pBDTEntryOut
 15932  0015CE  24F3               	addwf	prodl,w,c
 15933  0015D0  6ED9               	movwf	fsr2l,c
 15934  0015D2  0E01               	movlw	high _pBDTEntryOut
 15935  0015D4  D009               	goto	L11
 15936  0015D6                     l367:
 15937                           
 15938                           ; BSR set to: 13
 15939                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15940                           
 15941                           ; BSR set to: 13
 15942  0015D6  5134               	movf	52,w,b	;volatile
 15943  0015D8  0B0F               	andlw	15
 15944  0015DA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15945  0015DC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15946  0015DE  0D02               	mullw	2
 15947  0015E0  0E74               	movlw	low _pBDTEntryIn
 15948  0015E2  24F3               	addwf	prodl,w,c
 15949  0015E4  6ED9               	movwf	fsr2l,c
 15950  0015E6  0E00               	movlw	high _pBDTEntryIn
 15951  0015E8                     L11:
 15952  0015E8  20F4               	addwfc	prodh,w,c
 15953  0015EA  6EDA               	movwf	fsr2h,c
 15954  0015EC  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15955  0015F0  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15956                           
 15957                           ; BSR set to: 13
 15958                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15959                           
 15960                           ; BSR set to: 13
 15961  0015F4  0E03               	movlw	3
 15962  0015F6  1931               	xorwf	49,w,b	;volatile
 15963  0015F8  A4D8               	btfss	status,2,c
 15964  0015FA  D02D               	goto	l369
 15965                           
 15966                           ; BSR set to: 13
 15967                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15968  0015FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15969  001600  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15970  001604  AEDF               	btfss	indf2,7,c
 15971  001606  D01A               	goto	l372
 15972                           
 15973                           ; BSR set to: 13
 15974                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15975  001608  BF34               	btfsc	52,7,b	;volatile
 15976  00160A  D00A               	goto	l371
 15977                           
 15978                           ; BSR set to: 13
 15979                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15980  00160C  5134               	movf	52,w,b	;volatile
 15981  00160E  0B0F               	andlw	15
 15982  001610  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15983  001612  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15984  001614  0D01               	mullw	1
 15985  001616  0E5D               	movlw	low _ep_data_out
 15986  001618  24F3               	addwf	prodl,w,c
 15987  00161A  6ED9               	movwf	fsr2l,c
 15988  00161C  0E01               	movlw	high _ep_data_out
 15989  00161E  D00A               	goto	L12
 15990  001620                     l371:
 15991                           
 15992                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15993                           
 15994                           ; BSR set to: 1
 15995  001620  010D               	movlb	13	; () banked
 15996  001622  5134               	movf	52,w,b	;volatile
 15997  001624  0B0F               	andlw	15
 15998  001626  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15999  001628  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16000  00162A  0D01               	mullw	1
 16001  00162C  0E60               	movlw	low _ep_data_in
 16002  00162E  24F3               	addwf	prodl,w,c
 16003  001630  6ED9               	movwf	fsr2l,c
 16004  001632  0E01               	movlw	high _ep_data_in
 16005  001634                     L12:
 16006  001634  20F4               	addwfc	prodh,w,c
 16007  001636  6EDA               	movwf	fsr2h,c
 16008  001638  0101               	movlb	1	; () banked
 16009  00163A  82DF               	bsf	indf2,1,c
 16010  00163C                     l372:
 16011                           
 16012                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 16013                           
 16014                           ; BSR set to: 1
 16015                           
 16016                           ; BSR set to: 1
 16017  00163C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16018  001640  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16019  001644  0E00               	movlw	0
 16020  001646  84DB               	bsf	plusw2,2,c
 16021                           
 16022                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 16023  001648  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16024  00164C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16025  001650  0E00               	movlw	0
 16026  001652  8EDB               	bsf	plusw2,7,c
 16027                           
 16028                           ;usb_device.c: 2878: }
 16029  001654  0012               	return	
 16030  001656                     l369:
 16031                           
 16032                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 16033  001656  0E04               	movlw	4
 16034  001658  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 16035  00165A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 16036  00165C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 16037  00165E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 16038                           
 16039                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 16040  001660  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16041  001664  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16042  001668  AEDF               	btfss	indf2,7,c
 16043  00166A  D01B               	goto	l374
 16044                           
 16045                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 16046  00166C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16047  001670  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16048  001674  0E7F               	movlw	127
 16049  001676  16DF               	andwf	indf2,f,c
 16050                           
 16051                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 16052  001678  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16053  00167C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16054  001680  0E00               	movlw	0
 16055  001682  8CDB               	bsf	plusw2,6,c
 16056                           
 16057                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16058  001684  0E00               	movlw	0
 16059  001686  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16060  001688  0E05               	movlw	5
 16061  00168A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16062  00168C  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16063  001690  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16064  001694  0E00               	movlw	0
 16065  001696  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16066  001698  0E02               	movlw	2
 16067  00169A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16068  00169C  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16069                           
 16070                           ;usb_device.c: 2893: }
 16071  0016A0  D006               	goto	l375
 16072  0016A2                     l374:
 16073                           
 16074                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 16075  0016A2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16076  0016A6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16077  0016AA  0E00               	movlw	0
 16078  0016AC  8CDB               	bsf	plusw2,6,c
 16079  0016AE                     l375:
 16080                           
 16081                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 16082  0016AE  0E04               	movlw	4
 16083  0016B0  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 16084  0016B2  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 16085  0016B4  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 16086  0016B6  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 16087                           
 16088                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 16089  0016B8  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 16090  0016BA  D006               	goto	u9440
 16091  0016BC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16092  0016C0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16093  0016C4  AEDF               	btfss	indf2,7,c
 16094  0016C6  D030               	goto	l376
 16095  0016C8                     u9440:
 16096                           
 16097                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 16098  0016C8  010D               	movlb	13	; () banked
 16099  0016CA  BF34               	btfsc	52,7,b	;volatile
 16100  0016CC  D00A               	goto	l379
 16101                           
 16102                           ; BSR set to: 13
 16103                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 16104  0016CE  5134               	movf	52,w,b	;volatile
 16105  0016D0  0B0F               	andlw	15
 16106  0016D2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16107  0016D4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16108  0016D6  0D01               	mullw	1
 16109  0016D8  0E5D               	movlw	low _ep_data_out
 16110  0016DA  24F3               	addwf	prodl,w,c
 16111  0016DC  6ED9               	movwf	fsr2l,c
 16112  0016DE  0E01               	movlw	high _ep_data_out
 16113  0016E0  D00A               	goto	L13
 16114  0016E2                     l379:
 16115                           
 16116                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 16117                           
 16118                           ; BSR set to: 1
 16119  0016E2  010D               	movlb	13	; () banked
 16120  0016E4  5134               	movf	52,w,b	;volatile
 16121  0016E6  0B0F               	andlw	15
 16122  0016E8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16123  0016EA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16124  0016EC  0D01               	mullw	1
 16125  0016EE  0E60               	movlw	low _ep_data_in
 16126  0016F0  24F3               	addwf	prodl,w,c
 16127  0016F2  6ED9               	movwf	fsr2l,c
 16128  0016F4  0E01               	movlw	high _ep_data_in
 16129  0016F6                     L13:
 16130  0016F6  20F4               	addwfc	prodh,w,c
 16131  0016F8  6EDA               	movwf	fsr2h,c
 16132  0016FA  0101               	movlb	1	; () banked
 16133  0016FC  92DF               	bcf	indf2,1,c
 16134                           
 16135                           ; BSR set to: 1
 16136                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 16137                           
 16138                           ; BSR set to: 1
 16139  0016FE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16140  001702  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16141  001706  0E3B               	movlw	59
 16142  001708  16DF               	andwf	indf2,f,c
 16143                           
 16144                           ; BSR set to: 1
 16145                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 16146  00170A  0E00               	movlw	0
 16147  00170C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16148  00170E  0E05               	movlw	5
 16149  001710  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16150  001712  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 16151  001716  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 16152  00171A  0E00               	movlw	0
 16153  00171C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16154  00171E  0E02               	movlw	2
 16155  001720  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16156  001722  EC0B  F02E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16157                           
 16158                           ;usb_device.c: 2923: }
 16159  001726  D006               	goto	l381
 16160  001728                     l376:
 16161                           
 16162                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 16163  001728  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 16164  00172C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 16165  001730  0E3B               	movlw	59
 16166  001732  16DF               	andwf	indf2,f,c
 16167  001734                     l381:
 16168                           
 16169                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 16170  001734  010D               	movlb	13	; () banked
 16171  001736  5134               	movf	52,w,b	;volatile
 16172  001738  0B0F               	andlw	15
 16173  00173A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 16174  00173C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 16175  00173E  0D01               	mullw	1
 16176  001740  0E26               	movlw	38
 16177  001742  24F3               	addwf	prodl,w,c
 16178  001744  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 16179  001746  0E0F               	movlw	15
 16180  001748  20F4               	addwfc	prodh,w,c
 16181  00174A  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 16182                           
 16183                           ; BSR set to: 13
 16184                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 16185  00174C  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 16186  001750  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 16187  001754  0EFE               	movlw	254
 16188  001756  16DF               	andwf	indf2,f,c
 16189                           
 16190                           ; BSR set to: 13
 16191  001758  0012               	return	
 16192  00175A                     __end_of_USBStdFeatureReqHandler:
 16193                           	opt stack 0
 16194                           tblptru	equ	0xFF8
 16195                           tblptrh	equ	0xFF7
 16196                           tblptrl	equ	0xFF6
 16197                           tablat	equ	0xFF5
 16198                           prodh	equ	0xFF4
 16199                           prodl	equ	0xFF3
 16200                           intcon	equ	0xFF2
 16201                           intcon3	equ	0xFF0
 16202                           indf0	equ	0xFEF
 16203                           postinc0	equ	0xFEE
 16204                           fsr0h	equ	0xFEA
 16205                           fsr0l	equ	0xFE9
 16206                           wreg	equ	0xFE8
 16207                           indf1	equ	0xFE7
 16208                           postdec1	equ	0xFE5
 16209                           plusw1	equ	0xFE3
 16210                           fsr1h	equ	0xFE2
 16211                           fsr1l	equ	0xFE1
 16212                           indf2	equ	0xFDF
 16213                           postinc2	equ	0xFDE
 16214                           postdec2	equ	0xFDD
 16215                           plusw2	equ	0xFDB
 16216                           fsr2h	equ	0xFDA
 16217                           fsr2l	equ	0xFD9
 16218                           status	equ	0xFD8
 16219                           
 16220 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 16221 ;; Defined at:
 16222 ;;		line 54 in file "usb_events.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;  event           2   15[COMRAM] enum E6832
 16225 ;;  pdata           2   17[COMRAM] PTR void 
 16226 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16227 ;;		 -> BDT(48), 
 16228 ;;  size            2   19[COMRAM] unsigned int 
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;		None
 16231 ;; Return value:  Size  Location     Type
 16232 ;;                  1    wreg      unsigned char 
 16233 ;; Registers used:
 16234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16240 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16243 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;Total ram usage:        8 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:    3
 16247 ;; This function calls:
 16248 ;;		_APP_DeviceCustomHIDInitialize
 16249 ;;		_APP_DeviceMSDInitialize
 16250 ;;		_MSDTransferTerminated
 16251 ;;		_SYSTEM_Initialize
 16252 ;;		_USBCheckHIDRequest
 16253 ;;		_USBCheckMSDRequest
 16254 ;; This function is called by:
 16255 ;;		_USBDeviceTasks
 16256 ;;		_USBStdSetCfgHandler
 16257 ;;		_USBSuspend
 16258 ;;		_USBWakeFromSuspend
 16259 ;;		_USBCtrlTrfSetupHandler
 16260 ;;		_USBCheckStdRequest
 16261 ;;		_USBStdFeatureReqHandler
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text78
 16266  005C16                     __ptext78:
 16267                           	opt stack 0
 16268  005C16                     _USER_USB_CALLBACK_EVENT_HANDLER:
 16269                           	opt stack 26
 16270                           
 16271                           ;usb_events.c: 56: switch((int)event)
 16272                           
 16273                           ;incstack = 0
 16274  005C16  D019               	goto	l800
 16275  005C18                     
 16276                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 16277  005C18  0E01               	movlw	1
 16278  005C1A  EC3D  F034         	call	_SYSTEM_Initialize
 16279                           
 16280                           ;usb_events.c: 79: break;
 16281  005C1E  0012               	return	
 16282  005C20                     
 16283                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 16284  005C20  0E02               	movlw	2
 16285  005C22  EC3D  F034         	call	_SYSTEM_Initialize
 16286                           
 16287                           ;usb_events.c: 90: break;
 16288  005C26  0012               	return	
 16289  005C28                     
 16290                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 16291  005C28  EC0D  F037         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 16292                           
 16293                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 16294  005C2C  ECC6  F039         	call	_APP_DeviceMSDInitialize	;wreg free
 16295                           
 16296                           ;usb_events.c: 100: break;
 16297                           
 16298                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 16299                           
 16300                           ;usb_events.c: 97: break;
 16301  005C30  0012               	return	
 16302  005C32                     
 16303                           ;usb_events.c: 105: USBCheckHIDRequest();
 16304  005C32  EC01  F022         	call	_USBCheckHIDRequest	;wreg free
 16305                           
 16306                           ;usb_events.c: 108: USBCheckMSDRequest();
 16307  005C36  EC13  F027         	call	_USBCheckMSDRequest	;wreg free
 16308                           
 16309                           ;usb_events.c: 112: break;
 16310                           
 16311                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 16312                           
 16313                           ;usb_events.c: 109: break;
 16314  005C3A  0012               	return	
 16315  005C3C                     
 16316                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 16317  005C3C  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 16318  005C40  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 16319  005C44  EC3D  F033         	call	_MSDTransferTerminated	;wreg free
 16320                           
 16321                           ;usb_events.c: 129: }
 16322                           
 16323                           ;usb_events.c: 128: break;
 16324                           
 16325                           ;usb_events.c: 127: default:
 16326                           
 16327                           ;usb_events.c: 125: break;
 16328  005C48  0012               	return	
 16329  005C4A                     l800:
 16330  005C4A  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 16331  005C4E  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 16332                           
 16333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 16334                           ; Switch size 1, requested type "space"
 16335                           ; Number of cases is 2, Range of values is 0 to 127
 16336                           ; switch strategies available:
 16337                           ; Name         Instructions Cycles
 16338                           ; simple_byte            7     4 (average)
 16339                           ;	Chosen strategy is simple_byte
 16340  005C52  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 16341  005C54  0A00               	xorlw	0	; case 0
 16342  005C56  B4D8               	btfsc	status,2,c
 16343  005C58  D004               	goto	l15541
 16344  005C5A  0A7F               	xorlw	127	; case 127
 16345  005C5C  A4D8               	btfss	status,2,c
 16346  005C5E  0012               	return	
 16347  005C60  D01A               	goto	l15543
 16348  005C62                     l15541:
 16349                           
 16350                           ; Switch size 1, requested type "space"
 16351                           ; Number of cases is 8, Range of values is 1 to 117
 16352                           ; switch strategies available:
 16353                           ; Name         Instructions Cycles
 16354                           ; simple_byte           25    13 (average)
 16355                           ;	Chosen strategy is simple_byte
 16356  005C62  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16357  005C64  0A01               	xorlw	1	; case 1
 16358  005C66  B4D8               	btfsc	status,2,c
 16359  005C68  D7DF               	goto	l806
 16360  005C6A  0A03               	xorlw	3	; case 2
 16361  005C6C  B4D8               	btfsc	status,2,c
 16362  005C6E  0012               	return	
 16363  005C70  0A01               	xorlw	1	; case 3
 16364  005C72  B4D8               	btfsc	status,2,c
 16365  005C74  D7DE               	goto	l808
 16366  005C76  0A06               	xorlw	6	; case 5
 16367  005C78  B4D8               	btfsc	status,2,c
 16368  005C7A  D7E0               	goto	l810
 16369  005C7C  0A77               	xorlw	119	; case 114
 16370  005C7E  B4D8               	btfsc	status,2,c
 16371  005C80  0012               	return	
 16372  005C82  0A01               	xorlw	1	; case 115
 16373  005C84  B4D8               	btfsc	status,2,c
 16374  005C86  0012               	return	
 16375  005C88  0A07               	xorlw	7	; case 116
 16376  005C8A  B4D8               	btfsc	status,2,c
 16377  005C8C  D7C9               	goto	l805
 16378  005C8E  0A01               	xorlw	1	; case 117
 16379  005C90  A4D8               	btfss	status,2,c
 16380  005C92  0012               	return	
 16381  005C94  D7C1               	goto	l804
 16382  005C96                     l15543:
 16383                           
 16384                           ; Switch size 1, requested type "space"
 16385                           ; Number of cases is 1, Range of values is 255 to 255
 16386                           ; switch strategies available:
 16387                           ; Name         Instructions Cycles
 16388                           ; simple_byte            4     3 (average)
 16389                           ;	Chosen strategy is simple_byte
 16390  005C96  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16391  005C98  0AFF               	xorlw	255	; case 255
 16392  005C9A  0012               	return	
 16393  005C9C                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16394                           	opt stack 0
 16395                           tblptru	equ	0xFF8
 16396                           tblptrh	equ	0xFF7
 16397                           tblptrl	equ	0xFF6
 16398                           tablat	equ	0xFF5
 16399                           prodh	equ	0xFF4
 16400                           prodl	equ	0xFF3
 16401                           intcon	equ	0xFF2
 16402                           intcon3	equ	0xFF0
 16403                           indf0	equ	0xFEF
 16404                           postinc0	equ	0xFEE
 16405                           fsr0h	equ	0xFEA
 16406                           fsr0l	equ	0xFE9
 16407                           wreg	equ	0xFE8
 16408                           indf1	equ	0xFE7
 16409                           postdec1	equ	0xFE5
 16410                           plusw1	equ	0xFE3
 16411                           fsr1h	equ	0xFE2
 16412                           fsr1l	equ	0xFE1
 16413                           indf2	equ	0xFDF
 16414                           postinc2	equ	0xFDE
 16415                           postdec2	equ	0xFDD
 16416                           plusw2	equ	0xFDB
 16417                           fsr2h	equ	0xFDA
 16418                           fsr2l	equ	0xFD9
 16419                           status	equ	0xFD8
 16420                           
 16421 ;; *************** function _USBCheckMSDRequest *****************
 16422 ;; Defined at:
 16423 ;;		line 218 in file "usb_device_msd.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;		None
 16426 ;; Auto vars:     Size  Location     Type
 16427 ;;		None
 16428 ;; Return value:  Size  Location     Type
 16429 ;;                  1    wreg      void 
 16430 ;; Registers used:
 16431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16432 ;; Tracked objects:
 16433 ;;		On entry : 0/0
 16434 ;;		On exit  : 0/0
 16435 ;;		Unchanged: 0/0
 16436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16438 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16441 ;;Total ram usage:        4 bytes
 16442 ;; Hardware stack levels used:    1
 16443 ;; Hardware stack levels required when called:    1
 16444 ;; This function calls:
 16445 ;;		_USBTransferOnePacket
 16446 ;; This function is called by:
 16447 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16448 ;; This function uses a non-reentrant model
 16449 ;;
 16450                           
 16451                           	psect	text79
 16452  004E26                     __ptext79:
 16453                           	opt stack 0
 16454  004E26                     _USBCheckMSDRequest:
 16455                           	opt stack 27
 16456                           
 16457                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 16458                           
 16459                           ;incstack = 0
 16460  004E26  010D               	movlb	13	; () banked
 16461  004E28  5130               	movf	48,w,b	;volatile
 16462  004E2A  0B1F               	andlw	31
 16463  004E2C  06E8               	decf	wreg,f,c
 16464  004E2E  A4D8               	btfss	status,2,c
 16465  004E30  0012               	return	
 16466                           
 16467                           ; BSR set to: 13
 16468                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 16469                           
 16470                           ; BSR set to: 13
 16471                           
 16472                           ; BSR set to: 13
 16473                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 16474  004E32  5134               	movf	52,w,b	;volatile
 16475  004E34  A4D8               	btfss	status,2,c
 16476  004E36  0012               	return	
 16477  004E38  D04E               	goto	l529
 16478  004E3A                     
 16479                           ; BSR set to: 13
 16480                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 16481                           
 16482                           ; BSR set to: 13
 16483  004E3A  5132               	movf	50,w,b	;volatile
 16484  004E3C  1133               	iorwf	51,w,b	;volatile
 16485  004E3E  A4D8               	btfss	status,2,c
 16486  004E40  0012               	return	
 16487                           
 16488                           ; BSR set to: 13
 16489  004E42  5136               	movf	54,w,b	;volatile
 16490  004E44  1137               	iorwf	55,w,b	;volatile
 16491  004E46  A4D8               	btfss	status,2,c
 16492  004E48  0012               	return	
 16493                           
 16494                           ; BSR set to: 13
 16495                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 16496                           
 16497                           ; BSR set to: 13
 16498                           
 16499                           ; BSR set to: 13
 16500                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 16501  004E4A  0E00               	movlw	0
 16502  004E4C  0100               	movlb	0	; () banked
 16503  004E4E  6F9F               	movwf	_MSD_State& (0+255),b
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 16507  004E50  699E               	setf	_MSDCommandState& (0+255),b
 16508                           
 16509                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 16510  004E52  0E00               	movlw	0
 16511  004E54  6F9D               	movwf	_MSDReadState& (0+255),b
 16512                           
 16513                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 16514  004E56  0E00               	movlw	0
 16515  004E58  6F9C               	movwf	_MSDWriteState& (0+255),b
 16516                           
 16517                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 16518  004E5A  0E01               	movlw	1
 16519  004E5C  6F97               	movwf	_MSDCBWValid& (0+255),b
 16520                           
 16521                           ; BSR set to: 0
 16522                           
 16523                           ; BSR set to: 0
 16524                           
 16525                           ; BSR set to: 0
 16526                           
 16527                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 16528  004E5E  C13D  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 16529  004E62  C13E  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 16530                           
 16531                           ; BSR set to: 0
 16532  004E66  500C               	movf	_USBCheckMSDRequest$2319,w,c
 16533  004E68  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 16534  004E6A  B4D8               	btfsc	status,2,c
 16535  004E6C  D00A               	goto	u7710
 16536                           
 16537                           ; BSR set to: 0
 16538                           
 16539                           ; BSR set to: 0
 16540                           
 16541                           ; BSR set to: 0
 16542                           
 16543                           ; BSR set to: 0
 16544  004E6E  C13D  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 16545  004E72  C13E  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 16546                           
 16547                           ; BSR set to: 0
 16548                           
 16549                           ; BSR set to: 0
 16550  004E76  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 16551  004E7A  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 16552  004E7E  BEDF               	btfsc	indf2,7,c
 16553  004E80  D00F               	goto	l534
 16554  004E82                     u7710:
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 16558                           
 16559                           ; BSR set to: 0
 16560  004E82  0E00               	movlw	0
 16561  004E84  6E01               	movwf	USBTransferOnePacket@dir,c
 16562  004E86  0E40               	movlw	64
 16563  004E88  6E02               	movwf	USBTransferOnePacket@data,c
 16564  004E8A  0E0D               	movlw	13
 16565  004E8C  6E03               	movwf	USBTransferOnePacket@data+1,c
 16566  004E8E  0E40               	movlw	64
 16567  004E90  6E04               	movwf	USBTransferOnePacket@len,c
 16568  004E92  0E02               	movlw	2
 16569  004E94  EC8F  F020         	call	_USBTransferOnePacket
 16570  004E98  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16571  004E9C  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16572  004EA0                     l534:
 16573                           
 16574                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 16575  004EA0  0E80               	movlw	128
 16576  004EA2  0100               	movlb	0	; () banked
 16577  004EA4  6F71               	movwf	(_inPipes+3)& (0+255),b
 16578                           
 16579                           ;usb_device_msd.c: 263: break;
 16580  004EA6  0012               	return	
 16581  004EA8                     
 16582                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 16583                           
 16584                           ; BSR set to: 0
 16585  004EA8  010D               	movlb	13	; () banked
 16586  004EAA  5132               	movf	50,w,b	;volatile
 16587  004EAC  1133               	iorwf	51,w,b	;volatile
 16588  004EAE  A4D8               	btfss	status,2,c
 16589  004EB0  0012               	return	
 16590                           
 16591                           ; BSR set to: 13
 16592  004EB2  0536               	decf	54,w,b	;volatile
 16593  004EB4  1137               	iorwf	55,w,b	;volatile
 16594  004EB6  A4D8               	btfss	status,2,c
 16595  004EB8  0012               	return	
 16596                           
 16597                           ; BSR set to: 13
 16598                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 16599                           
 16600                           ; BSR set to: 13
 16601                           
 16602                           ; BSR set to: 13
 16603                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 16604  004EBA  0E00               	movlw	0
 16605  004EBC  6F38               	movwf	56,b	;volatile
 16606                           
 16607                           ; BSR set to: 13
 16608                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16609  004EBE  0E38               	movlw	56
 16610  004EC0  0100               	movlb	0	; () banked
 16611  004EC2  6F6E               	movwf	_inPipes& (0+255),b
 16612  004EC4  0E0D               	movlw	13
 16613  004EC6  6F6F               	movwf	(_inPipes+1)& (0+255),b
 16614                           
 16615                           ; BSR set to: 0
 16616  004EC8  0E00               	movlw	0
 16617  004ECA  6F73               	movwf	(_inPipes+5)& (0+255),b
 16618  004ECC  0E01               	movlw	1
 16619  004ECE  6F72               	movwf	(_inPipes+4)& (0+255),b
 16620                           
 16621                           ; BSR set to: 0
 16622  004ED0  0EC1               	movlw	193
 16623  004ED2  6F71               	movwf	(_inPipes+3)& (0+255),b
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;usb_device_msd.c: 278: }
 16627                           
 16628                           ;usb_device_msd.c: 277: break;
 16629  004ED4  0012               	return	
 16630  004ED6                     l529:
 16631                           
 16632                           ; BSR set to: 0
 16633  004ED6  010D               	movlb	13	; () banked
 16634  004ED8  5131               	movf	49,w,b	;volatile
 16635                           
 16636                           ; Switch size 1, requested type "space"
 16637                           ; Number of cases is 2, Range of values is 254 to 255
 16638                           ; switch strategies available:
 16639                           ; Name         Instructions Cycles
 16640                           ; simple_byte            7     4 (average)
 16641                           ;	Chosen strategy is simple_byte
 16642  004EDA  0AFE               	xorlw	254	; case 254
 16643  004EDC  B4D8               	btfsc	status,2,c
 16644  004EDE  D7E4               	goto	l546
 16645  004EE0  0A01               	xorlw	1	; case 255
 16646  004EE2  A4D8               	btfss	status,2,c
 16647  004EE4  0012               	return	
 16648  004EE6  D7A9               	goto	l530
 16649  004EE8                     __end_of_USBCheckMSDRequest:
 16650                           	opt stack 0
 16651                           tblptru	equ	0xFF8
 16652                           tblptrh	equ	0xFF7
 16653                           tblptrl	equ	0xFF6
 16654                           tablat	equ	0xFF5
 16655                           prodh	equ	0xFF4
 16656                           prodl	equ	0xFF3
 16657                           intcon	equ	0xFF2
 16658                           intcon3	equ	0xFF0
 16659                           indf0	equ	0xFEF
 16660                           postinc0	equ	0xFEE
 16661                           fsr0h	equ	0xFEA
 16662                           fsr0l	equ	0xFE9
 16663                           wreg	equ	0xFE8
 16664                           indf1	equ	0xFE7
 16665                           postdec1	equ	0xFE5
 16666                           plusw1	equ	0xFE3
 16667                           fsr1h	equ	0xFE2
 16668                           fsr1l	equ	0xFE1
 16669                           indf2	equ	0xFDF
 16670                           postinc2	equ	0xFDE
 16671                           postdec2	equ	0xFDD
 16672                           plusw2	equ	0xFDB
 16673                           fsr2h	equ	0xFDA
 16674                           fsr2l	equ	0xFD9
 16675                           status	equ	0xFD8
 16676                           
 16677 ;; *************** function _USBCheckHIDRequest *****************
 16678 ;; Defined at:
 16679 ;;		line 153 in file "usb_device_hid.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;		None
 16682 ;; Auto vars:     Size  Location     Type
 16683 ;;		None
 16684 ;; Return value:  Size  Location     Type
 16685 ;;                  1    wreg      void 
 16686 ;; Registers used:
 16687 ;;		wreg, status,2, status,0
 16688 ;; Tracked objects:
 16689 ;;		On entry : 0/0
 16690 ;;		On exit  : 0/0
 16691 ;;		Unchanged: 0/0
 16692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16697 ;;Total ram usage:        0 bytes
 16698 ;; Hardware stack levels used:    1
 16699 ;; This function calls:
 16700 ;;		Nothing
 16701 ;; This function is called by:
 16702 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16703 ;; This function uses a non-reentrant model
 16704 ;;
 16705                           
 16706                           	psect	text80
 16707  004402                     __ptext80:
 16708                           	opt stack 0
 16709  004402                     _USBCheckHIDRequest:
 16710                           	opt stack 28
 16711                           
 16712                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16713                           
 16714                           ;incstack = 0
 16715  004402  010D               	movlb	13	; () banked
 16716  004404  5130               	movf	48,w,b	;volatile
 16717  004406  0B1F               	andlw	31
 16718  004408  06E8               	decf	wreg,f,c
 16719  00440A  A4D8               	btfss	status,2,c
 16720  00440C  0012               	return	
 16721                           
 16722                           ; BSR set to: 13
 16723                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16724                           
 16725                           ; BSR set to: 13
 16726                           
 16727                           ; BSR set to: 13
 16728  00440E  5134               	movf	52,w,b	;volatile
 16729  004410  A4D8               	btfss	status,2,c
 16730  004412  0012               	return	
 16731                           
 16732                           ; BSR set to: 13
 16733                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16734                           
 16735                           ; BSR set to: 13
 16736                           
 16737                           ; BSR set to: 13
 16738  004414  0E06               	movlw	6
 16739  004416  1931               	xorwf	49,w,b	;volatile
 16740  004418  B4D8               	btfsc	status,2,c
 16741  00441A  D01A               	goto	l411
 16742  00441C  D022               	goto	l414
 16743  00441E                     
 16744                           ; BSR set to: 13
 16745                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16746                           
 16747                           ; BSR set to: 13
 16748  00441E  0100               	movlb	0	; () banked
 16749  004420  05B4               	decf	_USBActiveConfiguration& (0+255),w,b
 16750  004422  A4D8               	btfss	status,2,c
 16751  004424  D01E               	goto	l414
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16755  004426  0E92               	movlw	low (_configDescriptor1+18)
 16756  004428  6F6E               	movwf	_inPipes& (0+255),b
 16757  00442A  0E8E               	movlw	high (_configDescriptor1+18)
 16758  00442C  6F6F               	movwf	(_inPipes+1)& (0+255),b
 16759                           
 16760                           ; BSR set to: 0
 16761  00442E  0E00               	movlw	0
 16762  004430  6F73               	movwf	(_inPipes+5)& (0+255),b
 16763  004432  0E09               	movlw	9
 16764  004434  D00B               	goto	L14
 16765  004436                     l10229:
 16766                           
 16767                           ; BSR set to: 0
 16768  004436  0EC0               	movlw	192
 16769  004438  6F71               	movwf	(_inPipes+3)& (0+255),b
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16773  00443A  D013               	goto	l414
 16774  00443C                     
 16775                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16776                           
 16777                           ; BSR set to: 0
 16778  00443C  0E46               	movlw	low _hid_rpt01
 16779  00443E  0100               	movlb	0	; () banked
 16780  004440  6F6E               	movwf	_inPipes& (0+255),b
 16781  004442  0E8F               	movlw	high _hid_rpt01
 16782  004444  6F6F               	movwf	(_inPipes+1)& (0+255),b
 16783                           
 16784                           ; BSR set to: 0
 16785  004446  0E00               	movlw	0
 16786  004448  6F73               	movwf	(_inPipes+5)& (0+255),b
 16787  00444A  0E1D               	movlw	29
 16788  00444C                     L14:
 16789  00444C  6F72               	movwf	(_inPipes+4)& (0+255),b
 16790  00444E  D7F3               	goto	l10229
 16791  004450                     l411:
 16792                           
 16793                           ; BSR set to: 0
 16794  004450  010D               	movlb	13	; () banked
 16795  004452  5133               	movf	51,w,b	;volatile
 16796                           
 16797                           ; Switch size 1, requested type "space"
 16798                           ; Number of cases is 3, Range of values is 33 to 35
 16799                           ; switch strategies available:
 16800                           ; Name         Instructions Cycles
 16801                           ; simple_byte           10     6 (average)
 16802                           ;	Chosen strategy is simple_byte
 16803  004454  0A21               	xorlw	33	; case 33
 16804  004456  B4D8               	btfsc	status,2,c
 16805  004458  D7E2               	goto	l412
 16806  00445A  0A03               	xorlw	3	; case 34
 16807  00445C  B4D8               	btfsc	status,2,c
 16808  00445E  D7EE               	goto	l415
 16809  004460  0A01               	xorlw	1	; case 35
 16810  004462                     l414:
 16811                           
 16812                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16813                           
 16814                           ; BSR set to: 13
 16815                           
 16816                           ; BSR set to: 13
 16817  004462  010D               	movlb	13	; () banked
 16818  004464  3930               	swapf	48,w,b	;volatile
 16819  004466  32E8               	rrcf	wreg,f,c
 16820  004468  0B03               	andlw	3
 16821  00446A  06E8               	decf	wreg,f,c
 16822  00446C  A4D8               	btfss	status,2,c
 16823  00446E  0012               	return	
 16824  004470  D024               	goto	l418
 16825  004472                     
 16826                           ; BSR set to: 13
 16827                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16828                           
 16829                           ; BSR set to: 13
 16830  004472  0EB2               	movlw	low _idle_rate
 16831  004474  0100               	movlb	0	; () banked
 16832  004476  6F6E               	movwf	_inPipes& (0+255),b
 16833  004478  0E00               	movlw	high _idle_rate
 16834  00447A  6F6F               	movwf	(_inPipes+1)& (0+255),b
 16835                           
 16836                           ; BSR set to: 0
 16837  00447C  0E00               	movlw	0
 16838  00447E  6F73               	movwf	(_inPipes+5)& (0+255),b
 16839  004480  0E01               	movlw	1
 16840  004482  6F72               	movwf	(_inPipes+4)& (0+255),b
 16841                           
 16842                           ; BSR set to: 0
 16843  004484  0EC1               	movlw	193
 16844  004486  6F71               	movwf	(_inPipes+3)& (0+255),b
 16845                           
 16846                           ;usb_device_hid.c: 223: break;
 16847  004488  0012               	return	
 16848  00448A                     
 16849                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16850                           
 16851                           ; BSR set to: 0
 16852  00448A  0E80               	movlw	128
 16853  00448C  0100               	movlb	0	; () banked
 16854  00448E  6F71               	movwf	(_inPipes+3)& (0+255),b
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16858  004490  CD33 F0B2          	movff	3379,_idle_rate	;volatile
 16859                           
 16860                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16861  004494  0012               	return	
 16862  004496                     
 16863                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16864                           
 16865                           ; BSR set to: 0
 16866  004496  0EB1               	movlw	low _active_protocol
 16867  004498  0100               	movlb	0	; () banked
 16868  00449A  6F6E               	movwf	_inPipes& (0+255),b
 16869  00449C  0E00               	movlw	high _active_protocol
 16870  00449E  6F6F               	movwf	(_inPipes+1)& (0+255),b
 16871                           
 16872                           ; BSR set to: 0
 16873  0044A0  0E00               	movlw	0
 16874  0044A2  6F73               	movwf	(_inPipes+5)& (0+255),b
 16875  0044A4  0E01               	movlw	1
 16876  0044A6  6F72               	movwf	(_inPipes+4)& (0+255),b
 16877                           
 16878                           ; BSR set to: 0
 16879  0044A8  0E81               	movlw	129
 16880  0044AA  6F71               	movwf	(_inPipes+3)& (0+255),b
 16881                           
 16882                           ;usb_device_hid.c: 234: break;
 16883  0044AC  0012               	return	
 16884  0044AE                     
 16885                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16886                           
 16887                           ; BSR set to: 0
 16888  0044AE  0E80               	movlw	128
 16889  0044B0  0100               	movlb	0	; () banked
 16890  0044B2  6F71               	movwf	(_inPipes+3)& (0+255),b
 16891                           
 16892                           ; BSR set to: 0
 16893                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16894  0044B4  CD32 F0B1          	movff	3378,_active_protocol	;volatile
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;usb_device_hid.c: 239: }
 16898                           
 16899                           ;usb_device_hid.c: 238: break;
 16900  0044B8  0012               	return	
 16901  0044BA                     l418:
 16902                           
 16903                           ; BSR set to: 0
 16904  0044BA  010D               	movlb	13	; () banked
 16905  0044BC  5131               	movf	49,w,b	;volatile
 16906                           
 16907                           ; Switch size 1, requested type "space"
 16908                           ; Number of cases is 6, Range of values is 1 to 11
 16909                           ; switch strategies available:
 16910                           ; Name         Instructions Cycles
 16911                           ; simple_byte           19    10 (average)
 16912                           ;	Chosen strategy is simple_byte
 16913  0044BE  0A01               	xorlw	1	; case 1
 16914  0044C0  B4D8               	btfsc	status,2,c
 16915  0044C2  0012               	return	
 16916  0044C4  0A03               	xorlw	3	; case 2
 16917  0044C6  B4D8               	btfsc	status,2,c
 16918  0044C8  D7D4               	goto	l422
 16919  0044CA  0A01               	xorlw	1	; case 3
 16920  0044CC  B4D8               	btfsc	status,2,c
 16921  0044CE  D7E3               	goto	l424
 16922  0044D0  0A0A               	xorlw	10	; case 9
 16923  0044D2  B4D8               	btfsc	status,2,c
 16924  0044D4  0012               	return	
 16925  0044D6  0A03               	xorlw	3	; case 10
 16926  0044D8  B4D8               	btfsc	status,2,c
 16927  0044DA  D7D7               	goto	l423
 16928  0044DC  0A01               	xorlw	1	; case 11
 16929  0044DE  A4D8               	btfss	status,2,c
 16930  0044E0  0012               	return	
 16931  0044E2  D7E5               	goto	l425
 16932  0044E4                     __end_of_USBCheckHIDRequest:
 16933                           	opt stack 0
 16934                           tblptru	equ	0xFF8
 16935                           tblptrh	equ	0xFF7
 16936                           tblptrl	equ	0xFF6
 16937                           tablat	equ	0xFF5
 16938                           prodh	equ	0xFF4
 16939                           prodl	equ	0xFF3
 16940                           intcon	equ	0xFF2
 16941                           intcon3	equ	0xFF0
 16942                           indf0	equ	0xFEF
 16943                           postinc0	equ	0xFEE
 16944                           fsr0h	equ	0xFEA
 16945                           fsr0l	equ	0xFE9
 16946                           wreg	equ	0xFE8
 16947                           indf1	equ	0xFE7
 16948                           postdec1	equ	0xFE5
 16949                           plusw1	equ	0xFE3
 16950                           fsr1h	equ	0xFE2
 16951                           fsr1l	equ	0xFE1
 16952                           indf2	equ	0xFDF
 16953                           postinc2	equ	0xFDE
 16954                           postdec2	equ	0xFDD
 16955                           plusw2	equ	0xFDB
 16956                           fsr2h	equ	0xFDA
 16957                           fsr2l	equ	0xFD9
 16958                           status	equ	0xFD8
 16959                           
 16960 ;; *************** function _SYSTEM_Initialize *****************
 16961 ;; Defined at:
 16962 ;;		line 37 in file "system.c"
 16963 ;; Parameters:    Size  Location     Type
 16964 ;;  state           1    wreg     enum E6623
 16965 ;; Auto vars:     Size  Location     Type
 16966 ;;  state           1    4[COMRAM] enum E6623
 16967 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16968 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      void 
 16971 ;; Registers used:
 16972 ;;		wreg, status,2, status,0
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16979 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16981 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16982 ;;Total ram usage:        5 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; This function calls:
 16985 ;;		Nothing
 16986 ;; This function is called by:
 16987 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16988 ;;		_main
 16989 ;; This function uses a non-reentrant model
 16990 ;;
 16991                           
 16992                           	psect	text81
 16993  00687A                     __ptext81:
 16994                           	opt stack 0
 16995  00687A                     _SYSTEM_Initialize:
 16996                           	opt stack 28
 16997                           
 16998                           ;incstack = 0
 16999                           ;SYSTEM_Initialize@state stored from wreg
 17000  00687A  6E05               	movwf	SYSTEM_Initialize@state,c
 17001                           
 17002                           ;system.c: 39: switch(state)
 17003  00687C  D01D               	goto	l896
 17004  00687E                     
 17005                           ;system.c: 48: {;system.c: 49: unsigned int pll_startup_counter = 600;
 17006  00687E  0E02               	movlw	2
 17007  006880  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 17008  006882  0E58               	movlw	88
 17009  006884  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 17010                           
 17011                           ;system.c: 50: OSCTUNEbits.PLLEN = 1;
 17012  006886  8C9B               	bsf	3995,6,c	;volatile
 17013  006888                     l10415:
 17014  006888  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 17015  00688A  A0D8               	btfss	status,0,c
 17016  00688C  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 17017  00688E  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 17018  006890  E1FB               	bnz	l10415
 17019  006892  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 17020  006894  B4D8               	btfsc	status,2,c
 17021  006896  0012               	return	
 17022  006898  D7F7               	goto	l899
 17023  00689A                     
 17024                           ;system.c: 76: OSCCON = 0x70;
 17025  00689A  0E70               	movlw	112
 17026  00689C  6ED3               	movwf	4051,c	;volatile
 17027                           
 17028                           ;system.c: 82: {;system.c: 83: unsigned int pll_startup_counter = 800;
 17029  00689E  0E03               	movlw	3
 17030  0068A0  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_2930+1,c
 17031  0068A2  0E20               	movlw	32
 17032  0068A4  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_2930,c
 17033  0068A6                     l10419:
 17034  0068A6  0603               	decf	SYSTEM_Initialize@pll_startup_counter_2930,f,c
 17035  0068A8  A0D8               	btfss	status,0,c
 17036  0068AA  0604               	decf	SYSTEM_Initialize@pll_startup_counter_2930+1,f,c
 17037  0068AC  2803               	incf	SYSTEM_Initialize@pll_startup_counter_2930,w,c
 17038  0068AE  E1FB               	bnz	l10419
 17039  0068B0  2804               	incf	SYSTEM_Initialize@pll_startup_counter_2930+1,w,c
 17040  0068B2  B4D8               	btfsc	status,2,c
 17041  0068B4  0012               	return	
 17042  0068B6  D7F7               	goto	l905
 17043  0068B8                     l896:
 17044  0068B8  5005               	movf	SYSTEM_Initialize@state,w,c
 17045                           
 17046                           ; Switch size 1, requested type "space"
 17047                           ; Number of cases is 3, Range of values is 0 to 2
 17048                           ; switch strategies available:
 17049                           ; Name         Instructions Cycles
 17050                           ; simple_byte           10     6 (average)
 17051                           ;	Chosen strategy is simple_byte
 17052  0068BA  0A00               	xorlw	0	; case 0
 17053  0068BC  B4D8               	btfsc	status,2,c
 17054  0068BE  D7DF               	goto	l897
 17055  0068C0  0A01               	xorlw	1	; case 1
 17056  0068C2  B4D8               	btfsc	status,2,c
 17057  0068C4  0012               	return	
 17058  0068C6  0A03               	xorlw	3	; case 2
 17059  0068C8  A4D8               	btfss	status,2,c
 17060  0068CA  0012               	return	
 17061  0068CC  D7E6               	goto	l903
 17062  0068CE                     __end_of_SYSTEM_Initialize:
 17063                           	opt stack 0
 17064                           tblptru	equ	0xFF8
 17065                           tblptrh	equ	0xFF7
 17066                           tblptrl	equ	0xFF6
 17067                           tablat	equ	0xFF5
 17068                           prodh	equ	0xFF4
 17069                           prodl	equ	0xFF3
 17070                           intcon	equ	0xFF2
 17071                           intcon3	equ	0xFF0
 17072                           indf0	equ	0xFEF
 17073                           postinc0	equ	0xFEE
 17074                           fsr0h	equ	0xFEA
 17075                           fsr0l	equ	0xFE9
 17076                           wreg	equ	0xFE8
 17077                           indf1	equ	0xFE7
 17078                           postdec1	equ	0xFE5
 17079                           plusw1	equ	0xFE3
 17080                           fsr1h	equ	0xFE2
 17081                           fsr1l	equ	0xFE1
 17082                           indf2	equ	0xFDF
 17083                           postinc2	equ	0xFDE
 17084                           postdec2	equ	0xFDD
 17085                           plusw2	equ	0xFDB
 17086                           fsr2h	equ	0xFDA
 17087                           fsr2l	equ	0xFD9
 17088                           status	equ	0xFD8
 17089                           
 17090 ;; *************** function _MSDTransferTerminated *****************
 17091 ;; Defined at:
 17092 ;;		line 1674 in file "usb_device_msd.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;  handle          2   11[COMRAM] PTR void 
 17095 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 17096 ;;		 -> BDT(48), 
 17097 ;; Auto vars:     Size  Location     Type
 17098 ;;		None
 17099 ;; Return value:  Size  Location     Type
 17100 ;;                  1    wreg      void 
 17101 ;; Registers used:
 17102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17103 ;; Tracked objects:
 17104 ;;		On entry : 0/0
 17105 ;;		On exit  : 0/0
 17106 ;;		Unchanged: 0/0
 17107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17111 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17112 ;;Total ram usage:        4 bytes
 17113 ;; Hardware stack levels used:    1
 17114 ;; Hardware stack levels required when called:    1
 17115 ;; This function calls:
 17116 ;;		_USBStallEndpoint
 17117 ;;		_USBTransferOnePacket
 17118 ;; This function is called by:
 17119 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17120 ;; This function uses a non-reentrant model
 17121 ;;
 17122                           
 17123                           	psect	text82
 17124  00667A                     __ptext82:
 17125                           	opt stack 0
 17126  00667A                     _MSDTransferTerminated:
 17127                           	opt stack 27
 17128                           
 17129                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 17130                           
 17131                           ;incstack = 0
 17132  00667A  0100               	movlb	0	; () banked
 17133  00667C  5197               	movf	_MSDCBWValid& (0+255),w,b
 17134  00667E  A4D8               	btfss	status,2,c
 17135  006680  D00B               	goto	l764
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 17139  006682  0E01               	movlw	1
 17140  006684  6E01               	movwf	USBStallEndpoint@dir,c
 17141  006686  0E02               	movlw	2
 17142  006688  EC84  F01E         	call	_USBStallEndpoint
 17143                           
 17144                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 17145  00668C  0E00               	movlw	0
 17146  00668E  6E01               	movwf	USBStallEndpoint@dir,c
 17147  006690  0E02               	movlw	2
 17148  006692  EC84  F01E         	call	_USBStallEndpoint
 17149                           
 17150                           ;usb_device_msd.c: 1681: }
 17151  006696  0012               	return	
 17152  006698                     l764:
 17153  006698  C13D  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 17154  00669C  C13E  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 17155  0066A0  500E               	movf	_MSDTransferTerminated$2407,w,c
 17156  0066A2  180C               	xorwf	MSDTransferTerminated@handle,w,c
 17157  0066A4  E114               	bnz	l767
 17158  0066A6  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 17159  0066A8  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 17160  0066AA  A4D8               	btfss	status,2,c
 17161  0066AC  0012               	return	
 17162                           
 17163                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 17164  0066AE  0E00               	movlw	0
 17165  0066B0  6E01               	movwf	USBTransferOnePacket@dir,c
 17166  0066B2  0E40               	movlw	64
 17167  0066B4  6E02               	movwf	USBTransferOnePacket@data,c
 17168  0066B6  0E0D               	movlw	13
 17169  0066B8  6E03               	movwf	USBTransferOnePacket@data+1,c
 17170  0066BA  0E40               	movlw	64
 17171  0066BC  6E04               	movwf	USBTransferOnePacket@len,c
 17172  0066BE  0E02               	movlw	2
 17173  0066C0  EC8F  F020         	call	_USBTransferOnePacket
 17174  0066C4  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17175  0066C8  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17176  0066CC  0012               	return	
 17177  0066CE                     l767:
 17178  0066CE  0012               	return		;funcret
 17179  0066D0                     __end_of_MSDTransferTerminated:
 17180                           	opt stack 0
 17181                           tblptru	equ	0xFF8
 17182                           tblptrh	equ	0xFF7
 17183                           tblptrl	equ	0xFF6
 17184                           tablat	equ	0xFF5
 17185                           prodh	equ	0xFF4
 17186                           prodl	equ	0xFF3
 17187                           intcon	equ	0xFF2
 17188                           intcon3	equ	0xFF0
 17189                           indf0	equ	0xFEF
 17190                           postinc0	equ	0xFEE
 17191                           fsr0h	equ	0xFEA
 17192                           fsr0l	equ	0xFE9
 17193                           wreg	equ	0xFE8
 17194                           indf1	equ	0xFE7
 17195                           postdec1	equ	0xFE5
 17196                           plusw1	equ	0xFE3
 17197                           fsr1h	equ	0xFE2
 17198                           fsr1l	equ	0xFE1
 17199                           indf2	equ	0xFDF
 17200                           postinc2	equ	0xFDE
 17201                           postdec2	equ	0xFDD
 17202                           plusw2	equ	0xFDB
 17203                           fsr2h	equ	0xFDA
 17204                           fsr2l	equ	0xFD9
 17205                           status	equ	0xFD8
 17206                           
 17207 ;; *************** function _APP_DeviceMSDInitialize *****************
 17208 ;; Defined at:
 17209 ;;		line 84 in file "app_device_msd.c"
 17210 ;; Parameters:    Size  Location     Type
 17211 ;;		None
 17212 ;; Auto vars:     Size  Location     Type
 17213 ;;		None
 17214 ;; Return value:  Size  Location     Type
 17215 ;;                  1    wreg      void 
 17216 ;; Registers used:
 17217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17218 ;; Tracked objects:
 17219 ;;		On entry : 0/0
 17220 ;;		On exit  : 0/0
 17221 ;;		Unchanged: 0/0
 17222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17227 ;;Total ram usage:        0 bytes
 17228 ;; Hardware stack levels used:    1
 17229 ;; Hardware stack levels required when called:    2
 17230 ;; This function calls:
 17231 ;;		_USBEnableEndpoint
 17232 ;;		_USBMSDInit
 17233 ;; This function is called by:
 17234 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17235 ;; This function uses a non-reentrant model
 17236 ;;
 17237                           
 17238                           	psect	text83
 17239  00738C                     __ptext83:
 17240                           	opt stack 0
 17241  00738C                     _APP_DeviceMSDInitialize:
 17242                           	opt stack 26
 17243                           
 17244                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 17245                           
 17246                           ;incstack = 0
 17247  00738C  0E1E               	movlw	30
 17248  00738E  6E09               	movwf	USBEnableEndpoint@options,c
 17249  007390  0E02               	movlw	2
 17250  007392  EC7F  F036         	call	_USBEnableEndpoint
 17251                           
 17252                           ;app_device_msd.c: 93: USBMSDInit();
 17253  007396  EC08  F01F         	call	_USBMSDInit	;wreg free
 17254  00739A  0012               	return		;funcret
 17255  00739C                     __end_of_APP_DeviceMSDInitialize:
 17256                           	opt stack 0
 17257                           tblptru	equ	0xFF8
 17258                           tblptrh	equ	0xFF7
 17259                           tblptrl	equ	0xFF6
 17260                           tablat	equ	0xFF5
 17261                           prodh	equ	0xFF4
 17262                           prodl	equ	0xFF3
 17263                           intcon	equ	0xFF2
 17264                           intcon3	equ	0xFF0
 17265                           indf0	equ	0xFEF
 17266                           postinc0	equ	0xFEE
 17267                           fsr0h	equ	0xFEA
 17268                           fsr0l	equ	0xFE9
 17269                           wreg	equ	0xFE8
 17270                           indf1	equ	0xFE7
 17271                           postdec1	equ	0xFE5
 17272                           plusw1	equ	0xFE3
 17273                           fsr1h	equ	0xFE2
 17274                           fsr1l	equ	0xFE1
 17275                           indf2	equ	0xFDF
 17276                           postinc2	equ	0xFDE
 17277                           postdec2	equ	0xFDD
 17278                           plusw2	equ	0xFDB
 17279                           fsr2h	equ	0xFDA
 17280                           fsr2l	equ	0xFD9
 17281                           status	equ	0xFD8
 17282                           
 17283 ;; *************** function _USBMSDInit *****************
 17284 ;; Defined at:
 17285 ;;		line 142 in file "usb_device_msd.c"
 17286 ;; Parameters:    Size  Location     Type
 17287 ;;		None
 17288 ;; Auto vars:     Size  Location     Type
 17289 ;;		None
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  1    wreg      void 
 17292 ;; Registers used:
 17293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17301 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17303 ;;Total ram usage:        3 bytes
 17304 ;; Hardware stack levels used:    1
 17305 ;; Hardware stack levels required when called:    1
 17306 ;; This function calls:
 17307 ;;		_ExternalFlash_MediaDetect
 17308 ;;		_ExternalFlash_MediaInitialize
 17309 ;;		_ResetSenseData
 17310 ;;		_USBTransferOnePacket
 17311 ;; This function is called by:
 17312 ;;		_APP_DeviceMSDInitialize
 17313 ;; This function uses a non-reentrant model
 17314 ;;
 17315                           
 17316                           	psect	text84
 17317  003E10                     __ptext84:
 17318                           	opt stack 0
 17319  003E10                     _USBMSDInit:
 17320                           	opt stack 26
 17321                           
 17322                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 17323                           
 17324                           ;incstack = 0
 17325  003E10  0E00               	movlw	0
 17326  003E12  6E01               	movwf	USBTransferOnePacket@dir,c
 17327  003E14  0E40               	movlw	64
 17328  003E16  6E02               	movwf	USBTransferOnePacket@data,c
 17329  003E18  0E0D               	movlw	13
 17330  003E1A  6E03               	movwf	USBTransferOnePacket@data+1,c
 17331  003E1C  0E40               	movlw	64
 17332  003E1E  6E04               	movwf	USBTransferOnePacket@len,c
 17333  003E20  0E02               	movlw	2
 17334  003E22  EC8F  F020         	call	_USBTransferOnePacket
 17335  003E26  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17336  003E2A  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17337  003E2E  C078  F088         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 17338  003E32  C079  F089         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 17339                           
 17340                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 17341  003E36  0E00               	movlw	0
 17342  003E38  0100               	movlb	0	; () banked
 17343  003E3A  6F9F               	movwf	_MSD_State& (0+255),b
 17344                           
 17345                           ; BSR set to: 0
 17346                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 17347  003E3C  699E               	setf	_MSDCommandState& (0+255),b
 17348                           
 17349                           ; BSR set to: 0
 17350                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 17351  003E3E  0E00               	movlw	0
 17352  003E40  6F9D               	movwf	_MSDReadState& (0+255),b
 17353                           
 17354                           ; BSR set to: 0
 17355                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 17356  003E42  0E00               	movlw	0
 17357  003E44  6F9C               	movwf	_MSDWriteState& (0+255),b
 17358                           
 17359                           ; BSR set to: 0
 17360                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 17361  003E46  0E00               	movlw	0
 17362  003E48  6F98               	movwf	_MSDHostNoData& (0+255),b
 17363                           
 17364                           ; BSR set to: 0
 17365                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 17366  003E4A  0E00               	movlw	0
 17367  003E4C  0101               	movlb	1	; () banked
 17368  003E4E  6F4F               	movwf	_gblNumBLKS& (0+255),b
 17369  003E50  0E00               	movlw	0
 17370  003E52  6F50               	movwf	(_gblNumBLKS+1)& (0+255),b
 17371  003E54  0E00               	movlw	0
 17372  003E56  6F51               	movwf	(_gblNumBLKS+2)& (0+255),b
 17373  003E58  0E00               	movlw	0
 17374  003E5A  6F52               	movwf	(_gblNumBLKS+3)& (0+255),b
 17375                           
 17376                           ; BSR set to: 1
 17377                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 17378  003E5C  0E00               	movlw	0
 17379  003E5E  6F4B               	movwf	_gblBLKLen& (0+255),b
 17380  003E60  0E00               	movlw	0
 17381  003E62  6F4C               	movwf	(_gblBLKLen+1)& (0+255),b
 17382  003E64  0E00               	movlw	0
 17383  003E66  6F4D               	movwf	(_gblBLKLen+2)& (0+255),b
 17384  003E68  0E00               	movlw	0
 17385  003E6A  6F4E               	movwf	(_gblBLKLen+3)& (0+255),b
 17386                           
 17387                           ; BSR set to: 1
 17388                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 17389  003E6C  0E01               	movlw	1
 17390  003E6E  0100               	movlb	0	; () banked
 17391  003E70  6F97               	movwf	_MSDCBWValid& (0+255),b
 17392                           
 17393                           ; BSR set to: 0
 17394                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 17395  003E72  0E00               	movlw	0
 17396  003E74  0101               	movlb	1	; () banked
 17397  003E76  6F74               	movwf	(_gblMediaPresent+1)& (0+255),b
 17398  003E78  0E00               	movlw	0
 17399  003E7A  6F73               	movwf	_gblMediaPresent& (0+255),b
 17400                           
 17401                           ; BSR set to: 1
 17402                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 17403  003E7C  0E00               	movlw	0
 17404  003E7E  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 17405  003E80  D046               	goto	l518
 17406  003E82                     
 17407                           ; BSR set to: 1
 17408                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 17409                           
 17410                           ; BSR set to: 1
 17411  003E82  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17412  003E84  0D01               	mullw	1
 17413  003E86  0E99               	movlw	low _SoftDetach
 17414  003E88  24F3               	addwf	prodl,w,c
 17415  003E8A  6ED9               	movwf	fsr2l,c
 17416  003E8C  0E00               	movlw	high _SoftDetach
 17417  003E8E  20F4               	addwfc	prodh,w,c
 17418  003E90  6EDA               	movwf	fsr2h,c
 17419  003E92  0E00               	movlw	0
 17420  003E94  6EDF               	movwf	indf2,c
 17421                           
 17422                           ; BSR set to: 1
 17423                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 17424  003E96  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17425  003E9A  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17426  003E9E  D801               	call	u7408
 17427  003EA0  D009               	goto	u7409
 17428  003EA2                     u7408:
 17429  003EA2  0005               	push	
 17430  003EA4  6EFA               	movwf	pclath,c
 17431  003EA6  51EF               	movf	(_LUN+6)& (0+255),w,b
 17432  003EA8  6EFD               	movwf	tosl,c
 17433  003EAA  51F0               	movf	(_LUN+7)& (0+255),w,b
 17434  003EAC  6EFE               	movwf	tosh,c
 17435  003EAE  6AFF               	clrf	tosu,c
 17436  003EB0  50FA               	movf	pclath,w,c
 17437  003EB2  0012               	return		;indir
 17438  003EB4                     u7409:
 17439  003EB4  0900               	iorlw	0
 17440  003EB6  B4D8               	btfsc	status,2,c
 17441  003EB8  D026               	goto	l521
 17442                           
 17443                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17444  003EBA  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17445  003EBE  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17446  003EC2  D801               	call	u7428
 17447  003EC4  D00A               	goto	u7429
 17448  003EC6                     u7428:
 17449  003EC6  0005               	push	
 17450  003EC8  6EFA               	movwf	pclath,c
 17451  003ECA  0101               	movlb	1	; () banked
 17452  003ECC  51E9               	movf	_LUN& (0+255),w,b
 17453  003ECE  6EFD               	movwf	tosl,c
 17454  003ED0  51EA               	movf	(_LUN+1)& (0+255),w,b
 17455  003ED2  6EFE               	movwf	tosh,c
 17456  003ED4  6AFF               	clrf	tosu,c
 17457  003ED6  50FA               	movf	pclath,w,c
 17458  003ED8  0012               	return		;indir
 17459  003EDA                     u7429:
 17460  003EDA  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17461  003EDC  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17462  003EDE  B4D8               	btfsc	status,2,c
 17463  003EE0  D012               	goto	l521
 17464                           
 17465                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17466  003EE2  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 17467  003EE6  0E01               	movlw	1
 17468  003EE8  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 17469  003EEA  0E00               	movlw	0
 17470  003EEC  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 17471  003EEE  2A0C               	incf	??_USBMSDInit,f,c
 17472  003EF0  D003               	goto	u7444
 17473  003EF2                     u7445:
 17474  003EF2  90D8               	bcf	status,0,c
 17475  003EF4  360D               	rlcf	??_USBMSDInit+1,f,c
 17476  003EF6  360E               	rlcf	??_USBMSDInit+2,f,c
 17477  003EF8                     u7444:
 17478  003EF8  2E0C               	decfsz	??_USBMSDInit,f,c
 17479  003EFA  D7FB               	goto	u7445
 17480  003EFC  500D               	movf	??_USBMSDInit+1,w,c
 17481  003EFE  0101               	movlb	1	; () banked
 17482  003F00  1373               	iorwf	_gblMediaPresent& (0+255),f,b
 17483  003F02  500E               	movf	??_USBMSDInit+2,w,c
 17484  003F04  1374               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17485  003F06                     l521:
 17486                           
 17487                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 17488                           
 17489                           ; BSR set to: 1
 17490                           
 17491                           ; BSR set to: 1
 17492  003F06  ECCF  F031         	call	_ResetSenseData	;wreg free
 17493  003F0A  0101               	movlb	1	; () banked
 17494  003F0C  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 17495  003F0E                     l518:
 17496                           
 17497                           ; BSR set to: 1
 17498                           
 17499                           ; BSR set to: 1
 17500  003F0E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17501  003F10  A4D8               	btfss	status,2,c
 17502  003F12  0012               	return	
 17503  003F14  D7B6               	goto	l519
 17504  003F16                     __end_of_USBMSDInit:
 17505                           	opt stack 0
 17506                           tosu	equ	0xFFF
 17507                           tosh	equ	0xFFE
 17508                           tosl	equ	0xFFD
 17509                           pclath	equ	0xFFA
 17510                           tblptru	equ	0xFF8
 17511                           tblptrh	equ	0xFF7
 17512                           tblptrl	equ	0xFF6
 17513                           tablat	equ	0xFF5
 17514                           prodh	equ	0xFF4
 17515                           prodl	equ	0xFF3
 17516                           intcon	equ	0xFF2
 17517                           intcon3	equ	0xFF0
 17518                           indf0	equ	0xFEF
 17519                           postinc0	equ	0xFEE
 17520                           fsr0h	equ	0xFEA
 17521                           fsr0l	equ	0xFE9
 17522                           wreg	equ	0xFE8
 17523                           indf1	equ	0xFE7
 17524                           postdec1	equ	0xFE5
 17525                           plusw1	equ	0xFE3
 17526                           fsr1h	equ	0xFE2
 17527                           fsr1l	equ	0xFE1
 17528                           indf2	equ	0xFDF
 17529                           postinc2	equ	0xFDE
 17530                           postdec2	equ	0xFDD
 17531                           plusw2	equ	0xFDB
 17532                           fsr2h	equ	0xFDA
 17533                           fsr2l	equ	0xFD9
 17534                           status	equ	0xFD8
 17535                           
 17536 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 17537 ;; Defined at:
 17538 ;;		line 46 in file "app_device_custom_hid.c"
 17539 ;; Parameters:    Size  Location     Type
 17540 ;;		None
 17541 ;; Auto vars:     Size  Location     Type
 17542 ;;		None
 17543 ;; Return value:  Size  Location     Type
 17544 ;;                  1    wreg      void 
 17545 ;; Registers used:
 17546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17547 ;; Tracked objects:
 17548 ;;		On entry : 0/0
 17549 ;;		On exit  : 0/0
 17550 ;;		Unchanged: 0/0
 17551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17556 ;;Total ram usage:        0 bytes
 17557 ;; Hardware stack levels used:    1
 17558 ;; Hardware stack levels required when called:    2
 17559 ;; This function calls:
 17560 ;;		_USBEnableEndpoint
 17561 ;;		_USBTransferOnePacket
 17562 ;; This function is called by:
 17563 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17564 ;; This function uses a non-reentrant model
 17565 ;;
 17566                           
 17567                           	psect	text85
 17568  006E1A                     __ptext85:
 17569                           	opt stack 0
 17570  006E1A                     _APP_DeviceCustomHIDInitialize:
 17571                           	opt stack 26
 17572                           
 17573                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 17574                           
 17575                           ; BSR set to: 1
 17576                           ;incstack = 0
 17577  006E1A  0E00               	movlw	0
 17578  006E1C  0101               	movlb	1	; () banked
 17579  006E1E  6F6F               	movwf	_USBInHandle& (0+255),b
 17580  006E20  0E00               	movlw	0
 17581  006E22  6F70               	movwf	(_USBInHandle+1)& (0+255),b
 17582                           
 17583                           ; BSR set to: 1
 17584                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 17585  006E24  0E1E               	movlw	30
 17586  006E26  6E09               	movwf	USBEnableEndpoint@options,c
 17587  006E28  0E01               	movlw	1
 17588  006E2A  EC7F  F036         	call	_USBEnableEndpoint
 17589                           
 17590                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 17591  006E2E  0E00               	movlw	0
 17592  006E30  6E01               	movwf	USBTransferOnePacket@dir,c
 17593  006E32  0E40               	movlw	low _ReceivedDataBuffer
 17594  006E34  6E02               	movwf	USBTransferOnePacket@data,c
 17595  006E36  0E02               	movlw	high _ReceivedDataBuffer
 17596  006E38  6E03               	movwf	USBTransferOnePacket@data+1,c
 17597  006E3A  0E40               	movlw	64
 17598  006E3C  6E04               	movwf	USBTransferOnePacket@len,c
 17599  006E3E  0E01               	movlw	1
 17600  006E40  EC8F  F020         	call	_USBTransferOnePacket
 17601  006E44  C001  F171         	movff	?_USBTransferOnePacket,_USBOutHandle
 17602  006E48  C002  F172         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 17603  006E4C  0012               	return		;funcret
 17604  006E4E                     __end_of_APP_DeviceCustomHIDInitialize:
 17605                           	opt stack 0
 17606                           tosu	equ	0xFFF
 17607                           tosh	equ	0xFFE
 17608                           tosl	equ	0xFFD
 17609                           pclath	equ	0xFFA
 17610                           tblptru	equ	0xFF8
 17611                           tblptrh	equ	0xFF7
 17612                           tblptrl	equ	0xFF6
 17613                           tablat	equ	0xFF5
 17614                           prodh	equ	0xFF4
 17615                           prodl	equ	0xFF3
 17616                           intcon	equ	0xFF2
 17617                           intcon3	equ	0xFF0
 17618                           indf0	equ	0xFEF
 17619                           postinc0	equ	0xFEE
 17620                           fsr0h	equ	0xFEA
 17621                           fsr0l	equ	0xFE9
 17622                           wreg	equ	0xFE8
 17623                           indf1	equ	0xFE7
 17624                           postdec1	equ	0xFE5
 17625                           plusw1	equ	0xFE3
 17626                           fsr1h	equ	0xFE2
 17627                           fsr1l	equ	0xFE1
 17628                           indf2	equ	0xFDF
 17629                           postinc2	equ	0xFDE
 17630                           postdec2	equ	0xFDD
 17631                           plusw2	equ	0xFDB
 17632                           fsr2h	equ	0xFDA
 17633                           fsr2l	equ	0xFD9
 17634                           status	equ	0xFD8
 17635                           
 17636 ;; *************** function _USBEnableEndpoint *****************
 17637 ;; Defined at:
 17638 ;;		line 878 in file "usb_device.c"
 17639 ;; Parameters:    Size  Location     Type
 17640 ;;  ep              1    wreg     unsigned char 
 17641 ;;  options         1    8[COMRAM] unsigned char 
 17642 ;; Auto vars:     Size  Location     Type
 17643 ;;  ep              1   11[COMRAM] unsigned char 
 17644 ;;  p               2    9[COMRAM] PTR unsigned char 
 17645 ;;		 -> UEP0(1), 
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      void 
 17648 ;; Registers used:
 17649 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17650 ;; Tracked objects:
 17651 ;;		On entry : 0/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17656 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17658 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17659 ;;Total ram usage:        4 bytes
 17660 ;; Hardware stack levels used:    1
 17661 ;; Hardware stack levels required when called:    1
 17662 ;; This function calls:
 17663 ;;		_USBConfigureEndpoint
 17664 ;; This function is called by:
 17665 ;;		_APP_DeviceCustomHIDInitialize
 17666 ;;		_APP_DeviceMSDInitialize
 17667 ;; This function uses a non-reentrant model
 17668 ;;
 17669                           
 17670                           	psect	text86
 17671  006CFE                     __ptext86:
 17672                           	opt stack 0
 17673  006CFE                     _USBEnableEndpoint:
 17674                           	opt stack 26
 17675                           
 17676                           ;incstack = 0
 17677                           ;USBEnableEndpoint@ep stored from wreg
 17678  006CFE  6E0C               	movwf	USBEnableEndpoint@ep,c
 17679                           
 17680                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17681  006D00  A409               	btfss	USBEnableEndpoint@options,2,c
 17682  006D02  D005               	goto	l178
 17683                           
 17684                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17685  006D04  0E00               	movlw	0
 17686  006D06  6E01               	movwf	USBConfigureEndpoint@direction,c
 17687  006D08  500C               	movf	USBEnableEndpoint@ep,w,c
 17688  006D0A  EC59  F02C         	call	_USBConfigureEndpoint
 17689  006D0E                     l178:
 17690                           
 17691                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17692  006D0E  A209               	btfss	USBEnableEndpoint@options,1,c
 17693  006D10  D005               	goto	l179
 17694                           
 17695                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17696  006D12  0E01               	movlw	1
 17697  006D14  6E01               	movwf	USBConfigureEndpoint@direction,c
 17698  006D16  500C               	movf	USBEnableEndpoint@ep,w,c
 17699  006D18  EC59  F02C         	call	_USBConfigureEndpoint
 17700  006D1C                     l179:
 17701                           
 17702                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17703  006D1C  500C               	movf	USBEnableEndpoint@ep,w,c
 17704  006D1E  0D01               	mullw	1
 17705  006D20  0E26               	movlw	38
 17706  006D22  24F3               	addwf	prodl,w,c
 17707  006D24  6E0A               	movwf	USBEnableEndpoint@p,c
 17708  006D26  0E0F               	movlw	15
 17709  006D28  20F4               	addwfc	prodh,w,c
 17710  006D2A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17711                           
 17712                           ;usb_device.c: 901: *p = options;
 17713  006D2C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17714  006D30  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17715  006D34  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17716  006D38  0012               	return		;funcret
 17717  006D3A                     __end_of_USBEnableEndpoint:
 17718                           	opt stack 0
 17719                           tosu	equ	0xFFF
 17720                           tosh	equ	0xFFE
 17721                           tosl	equ	0xFFD
 17722                           pclath	equ	0xFFA
 17723                           tblptru	equ	0xFF8
 17724                           tblptrh	equ	0xFF7
 17725                           tblptrl	equ	0xFF6
 17726                           tablat	equ	0xFF5
 17727                           prodh	equ	0xFF4
 17728                           prodl	equ	0xFF3
 17729                           intcon	equ	0xFF2
 17730                           intcon3	equ	0xFF0
 17731                           indf0	equ	0xFEF
 17732                           postinc0	equ	0xFEE
 17733                           fsr0h	equ	0xFEA
 17734                           fsr0l	equ	0xFE9
 17735                           wreg	equ	0xFE8
 17736                           indf1	equ	0xFE7
 17737                           postdec1	equ	0xFE5
 17738                           plusw1	equ	0xFE3
 17739                           fsr1h	equ	0xFE2
 17740                           fsr1l	equ	0xFE1
 17741                           indf2	equ	0xFDF
 17742                           postinc2	equ	0xFDE
 17743                           postdec2	equ	0xFDD
 17744                           plusw2	equ	0xFDB
 17745                           fsr2h	equ	0xFDA
 17746                           fsr2l	equ	0xFD9
 17747                           status	equ	0xFD8
 17748                           
 17749 ;; *************** function _USBConfigureEndpoint *****************
 17750 ;; Defined at:
 17751 ;;		line 1545 in file "usb_device.c"
 17752 ;; Parameters:    Size  Location     Type
 17753 ;;  EPNum           1    wreg     unsigned char 
 17754 ;;  direction       1    0[COMRAM] unsigned char 
 17755 ;; Auto vars:     Size  Location     Type
 17756 ;;  EPNum           1    5[COMRAM] unsigned char 
 17757 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17758 ;;		 -> BDT(48), 
 17759 ;; Return value:  Size  Location     Type
 17760 ;;                  1    wreg      void 
 17761 ;; Registers used:
 17762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17763 ;; Tracked objects:
 17764 ;;		On entry : 0/0
 17765 ;;		On exit  : 0/0
 17766 ;;		Unchanged: 0/0
 17767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17769 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17770 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17771 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17772 ;;Total ram usage:        8 bytes
 17773 ;; Hardware stack levels used:    1
 17774 ;; This function calls:
 17775 ;;		Nothing
 17776 ;; This function is called by:
 17777 ;;		_USBEnableEndpoint
 17778 ;; This function uses a non-reentrant model
 17779 ;;
 17780                           
 17781                           	psect	text87
 17782  0058B2                     __ptext87:
 17783                           	opt stack 0
 17784  0058B2                     _USBConfigureEndpoint:
 17785                           	opt stack 26
 17786                           
 17787                           ;incstack = 0
 17788                           ;USBConfigureEndpoint@EPNum stored from wreg
 17789  0058B2  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17790                           
 17791                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17792  0058B4  0E00               	movlw	0
 17793  0058B6  6E07               	movwf	USBConfigureEndpoint@handle,c
 17794  0058B8  0E0D               	movlw	13
 17795  0058BA  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17796                           
 17797                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17798  0058BC  5001               	movf	USBConfigureEndpoint@direction,w,c
 17799  0058BE  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17800  0058C0  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17801  0058C2  90D8               	bcf	status,0,c
 17802  0058C4  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17803  0058C6  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17804  0058C8  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17805  0058CA  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17806  0058CC  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17807  0058CE  90D8               	bcf	status,0,c
 17808  0058D0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17809  0058D2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17810  0058D4  90D8               	bcf	status,0,c
 17811  0058D6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17812  0058D8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17813  0058DA  5002               	movf	??_USBConfigureEndpoint,w,c
 17814  0058DC  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17815  0058DE  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17816  0058E0  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17817  0058E2  90D8               	bcf	status,0,c
 17818  0058E4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17819  0058E6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17820  0058E8  90D8               	bcf	status,0,c
 17821  0058EA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17822  0058EC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17823  0058EE  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17824  0058F0  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17825  0058F2  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17826  0058F4  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17827                           
 17828                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17829  0058F6  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17830  0058FA  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17831  0058FE  9EDF               	bcf	indf2,7,c
 17832                           
 17833                           ;usb_device.c: 1559: if(direction == 0)
 17834  005900  5001               	movf	USBConfigureEndpoint@direction,w,c
 17835  005902  A4D8               	btfss	status,2,c
 17836  005904  D007               	goto	l214
 17837                           
 17838                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17839  005906  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17840  005908  0D02               	mullw	2
 17841  00590A  0E39               	movlw	low _pBDTEntryOut
 17842  00590C  24F3               	addwf	prodl,w,c
 17843  00590E  6ED9               	movwf	fsr2l,c
 17844  005910  0E01               	movlw	high _pBDTEntryOut
 17845  005912  D006               	goto	L15
 17846  005914                     l214:
 17847                           
 17848                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17849  005914  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17850  005916  0D02               	mullw	2
 17851  005918  0E74               	movlw	low _pBDTEntryIn
 17852  00591A  24F3               	addwf	prodl,w,c
 17853  00591C  6ED9               	movwf	fsr2l,c
 17854  00591E  0E00               	movlw	high _pBDTEntryIn
 17855  005920                     L15:
 17856  005920  20F4               	addwfc	prodh,w,c
 17857  005922  6EDA               	movwf	fsr2h,c
 17858  005924  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17859  005928  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17860                           
 17861                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17862  00592C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17863  005930  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17864  005934  9CDF               	bcf	indf2,6,c
 17865                           
 17866                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17867  005936  EE20 F004          	lfsr	2,4
 17868  00593A  5007               	movf	USBConfigureEndpoint@handle,w,c
 17869  00593C  26D9               	addwf	fsr2l,f,c
 17870  00593E  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17871  005940  22DA               	addwfc	fsr2h,f,c
 17872  005942  8CDF               	bsf	indf2,6,c
 17873  005944  0012               	return		;funcret
 17874  005946                     __end_of_USBConfigureEndpoint:
 17875                           	opt stack 0
 17876                           tosu	equ	0xFFF
 17877                           tosh	equ	0xFFE
 17878                           tosl	equ	0xFFD
 17879                           pclath	equ	0xFFA
 17880                           tblptru	equ	0xFF8
 17881                           tblptrh	equ	0xFF7
 17882                           tblptrl	equ	0xFF6
 17883                           tablat	equ	0xFF5
 17884                           prodh	equ	0xFF4
 17885                           prodl	equ	0xFF3
 17886                           intcon	equ	0xFF2
 17887                           intcon3	equ	0xFF0
 17888                           indf0	equ	0xFEF
 17889                           postinc0	equ	0xFEE
 17890                           fsr0h	equ	0xFEA
 17891                           fsr0l	equ	0xFE9
 17892                           wreg	equ	0xFE8
 17893                           indf1	equ	0xFE7
 17894                           postdec1	equ	0xFE5
 17895                           plusw1	equ	0xFE3
 17896                           fsr1h	equ	0xFE2
 17897                           fsr1l	equ	0xFE1
 17898                           indf2	equ	0xFDF
 17899                           postinc2	equ	0xFDE
 17900                           postdec2	equ	0xFDD
 17901                           plusw2	equ	0xFDB
 17902                           fsr2h	equ	0xFDA
 17903                           fsr2l	equ	0xFD9
 17904                           status	equ	0xFD8
 17905                           
 17906 ;; *************** function _USBCtrlTrfOutHandler *****************
 17907 ;; Defined at:
 17908 ;;		line 2540 in file "usb_device.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;		None
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;		None
 17913 ;; Return value:  Size  Location     Type
 17914 ;;                  1    wreg      void 
 17915 ;; Registers used:
 17916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17917 ;; Tracked objects:
 17918 ;;		On entry : 0/0
 17919 ;;		On exit  : 0/0
 17920 ;;		Unchanged: 0/0
 17921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17926 ;;Total ram usage:        0 bytes
 17927 ;; Hardware stack levels used:    1
 17928 ;; Hardware stack levels required when called:    2
 17929 ;; This function calls:
 17930 ;;		_USBCtrlTrfRxService
 17931 ;; This function is called by:
 17932 ;;		_USBCtrlEPService
 17933 ;; This function uses a non-reentrant model
 17934 ;;
 17935                           
 17936                           	psect	text88
 17937  006460                     __ptext88:
 17938                           	opt stack 0
 17939  006460                     _USBCtrlTrfOutHandler:
 17940                           	opt stack 26
 17941                           
 17942                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17943                           
 17944                           ;incstack = 0
 17945  006460  0E02               	movlw	2
 17946  006462  0100               	movlb	0	; () banked
 17947  006464  19AB               	xorwf	_controlTransferState& (0+255),w,b
 17948  006466  A4D8               	btfss	status,2,c
 17949  006468  D003               	goto	l320
 17950                           
 17951                           ; BSR set to: 0
 17952                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17953  00646A  ECE7  F01C         	call	_USBCtrlTrfRxService	;wreg free
 17954                           
 17955                           ;usb_device.c: 2545: }
 17956  00646E  0012               	return	
 17957  006470                     l320:
 17958                           
 17959                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17960  006470  0E00               	movlw	0
 17961  006472  0100               	movlb	0	; () banked
 17962  006474  6FAB               	movwf	_controlTransferState& (0+255),b
 17963                           
 17964                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17965  006476  51A7               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17966  006478  A4D8               	btfss	status,2,c
 17967  00647A  D01F               	goto	l322
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17971  00647C  EE20 F001          	lfsr	2,1
 17972  006480  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17973  006482  26D9               	addwf	fsr2l,f,c
 17974  006484  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17975  006486  22DA               	addwfc	fsr2h,f,c
 17976  006488  0E08               	movlw	8
 17977  00648A  6EDF               	movwf	indf2,c
 17978                           
 17979                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17980  00648C  EE20 F002          	lfsr	2,2
 17981  006490  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17982  006492  26D9               	addwf	fsr2l,f,c
 17983  006494  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17984  006496  22DA               	addwfc	fsr2h,f,c
 17985  006498  0E30               	movlw	48
 17986  00649A  6EDE               	movwf	postinc2,c
 17987  00649C  0E0D               	movlw	13
 17988  00649E  6EDD               	movwf	postdec2,c
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17992  0064A0  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17993  0064A4  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17994  0064A8  0E0C               	movlw	12
 17995  0064AA  6EDF               	movwf	indf2,c
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17999  0064AC  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18000  0064B0  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18001  0064B4  0E00               	movlw	0
 18002  0064B6  8EDB               	bsf	plusw2,7,c
 18003                           
 18004                           ;usb_device.c: 2563: }
 18005  0064B8  0012               	return	
 18006  0064BA                     l322:
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 18010                           
 18011                           ; BSR set to: 0
 18012  0064BA  0E00               	movlw	0
 18013  0064BC  6FA7               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18014                           
 18015                           ; BSR set to: 0
 18016  0064BE  0012               	return	
 18017  0064C0                     __end_of_USBCtrlTrfOutHandler:
 18018                           	opt stack 0
 18019                           tosu	equ	0xFFF
 18020                           tosh	equ	0xFFE
 18021                           tosl	equ	0xFFD
 18022                           pclath	equ	0xFFA
 18023                           tblptru	equ	0xFF8
 18024                           tblptrh	equ	0xFF7
 18025                           tblptrl	equ	0xFF6
 18026                           tablat	equ	0xFF5
 18027                           prodh	equ	0xFF4
 18028                           prodl	equ	0xFF3
 18029                           intcon	equ	0xFF2
 18030                           intcon3	equ	0xFF0
 18031                           indf0	equ	0xFEF
 18032                           postinc0	equ	0xFEE
 18033                           fsr0h	equ	0xFEA
 18034                           fsr0l	equ	0xFE9
 18035                           wreg	equ	0xFE8
 18036                           indf1	equ	0xFE7
 18037                           postdec1	equ	0xFE5
 18038                           plusw1	equ	0xFE3
 18039                           fsr1h	equ	0xFE2
 18040                           fsr1l	equ	0xFE1
 18041                           indf2	equ	0xFDF
 18042                           postinc2	equ	0xFDE
 18043                           postdec2	equ	0xFDD
 18044                           plusw2	equ	0xFDB
 18045                           fsr2h	equ	0xFDA
 18046                           fsr2l	equ	0xFD9
 18047                           status	equ	0xFD8
 18048                           
 18049 ;; *************** function _USBCtrlTrfRxService *****************
 18050 ;; Defined at:
 18051 ;;		line 1854 in file "usb_device.c"
 18052 ;; Parameters:    Size  Location     Type
 18053 ;;		None
 18054 ;; Auto vars:     Size  Location     Type
 18055 ;;  byteToRead      1    1[COMRAM] unsigned char 
 18056 ;;  i               1    0[COMRAM] unsigned char 
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  1    wreg      void 
 18059 ;; Registers used:
 18060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18070 ;;Total ram usage:        2 bytes
 18071 ;; Hardware stack levels used:    1
 18072 ;; Hardware stack levels required when called:    1
 18073 ;; This function calls:
 18074 ;;		_USBCtrlEPAllowStatusStage
 18075 ;; This function is called by:
 18076 ;;		_USBCtrlTrfOutHandler
 18077 ;; This function uses a non-reentrant model
 18078 ;;
 18079                           
 18080                           	psect	text89
 18081  0039CE                     __ptext89:
 18082                           	opt stack 0
 18083  0039CE                     _USBCtrlTrfRxService:
 18084                           	opt stack 26
 18085                           
 18086                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 18087                           
 18088                           ;incstack = 0
 18089  0039CE  0100               	movlb	0	; () banked
 18090  0039D0  EE20 F001          	lfsr	2,1
 18091  0039D4  518E               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18092  0039D6  26D9               	addwf	fsr2l,f,c
 18093  0039D8  518F               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18094  0039DA  22DA               	addwfc	fsr2h,f,c
 18095  0039DC  50DF               	movf	indf2,w,c
 18096  0039DE  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 18097                           
 18098                           ; BSR set to: 0
 18099                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 18100  0039E0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18101  0039E2  0101               	movlb	1	; () banked
 18102  0039E4  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 18103  0039E6  0E00               	movlw	0
 18104  0039E8  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 18105  0039EA  A0D8               	btfss	status,0,c
 18106                           
 18107                           ; BSR set to: 1
 18108                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 18109  0039EC  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 18110                           
 18111                           ; BSR set to: 1
 18112                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 18113                           
 18114                           ; BSR set to: 1
 18115  0039F0  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18116  0039F2  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 18117  0039F4  0E00               	movlw	0
 18118  0039F6  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 18119                           
 18120                           ; BSR set to: 1
 18121                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 18122  0039F8  0E00               	movlw	0
 18123  0039FA  6E01               	movwf	USBCtrlTrfRxService@i,c
 18124  0039FC  D011               	goto	l248
 18125  0039FE                     
 18126                           ; BSR set to: 1
 18127                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 18128                           
 18129                           ; BSR set to: 1
 18130  0039FE  5001               	movf	USBCtrlTrfRxService@i,w,c
 18131  003A00  0D01               	mullw	1
 18132  003A02  0E38               	movlw	56
 18133  003A04  24F3               	addwf	prodl,w,c
 18134  003A06  6ED9               	movwf	fsr2l,c
 18135  003A08  0E0D               	movlw	13
 18136  003A0A  20F4               	addwfc	prodh,w,c
 18137  003A0C  6EDA               	movwf	fsr2h,c
 18138  003A0E  C131  FFE1         	movff	_outPipes,fsr1l
 18139  003A12  C132  FFE2         	movff	_outPipes+1,fsr1h
 18140  003A16  CFDF FFE7          	movff	indf2,indf1
 18141                           
 18142                           ; BSR set to: 1
 18143  003A1A  4B31               	infsnz	_outPipes& (0+255),f,b
 18144  003A1C  2B32               	incf	(_outPipes+1)& (0+255),f,b
 18145                           
 18146                           ; BSR set to: 1
 18147  003A1E  2A01               	incf	USBCtrlTrfRxService@i,f,c
 18148  003A20                     l248:
 18149                           
 18150                           ; BSR set to: 1
 18151                           
 18152                           ; BSR set to: 1
 18153  003A20  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 18154  003A22  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 18155  003A24  A0D8               	btfss	status,0,c
 18156  003A26  D7EB               	goto	l249
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 18160                           
 18161                           ; BSR set to: 1
 18162  003A28  5135               	movf	(_outPipes+4)& (0+255),w,b
 18163  003A2A  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 18164  003A2C  B4D8               	btfsc	status,2,c
 18165  003A2E  D033               	goto	l251
 18166                           
 18167                           ; BSR set to: 1
 18168                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 18169  003A30  0100               	movlb	0	; () banked
 18170  003A32  EE20 F001          	lfsr	2,1
 18171  003A36  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18172  003A38  26D9               	addwf	fsr2l,f,c
 18173  003A3A  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18174  003A3C  22DA               	addwfc	fsr2h,f,c
 18175  003A3E  0E08               	movlw	8
 18176  003A40  6EDF               	movwf	indf2,c
 18177                           
 18178                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18179  003A42  EE20 F002          	lfsr	2,2
 18180  003A46  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18181  003A48  26D9               	addwf	fsr2l,f,c
 18182  003A4A  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18183  003A4C  22DA               	addwfc	fsr2h,f,c
 18184  003A4E  0E38               	movlw	56
 18185  003A50  6EDE               	movwf	postinc2,c
 18186  003A52  0E0D               	movlw	13
 18187  003A54  6EDD               	movwf	postdec2,c
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 18191  003A56  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18192  003A5A  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18193  003A5E  BCDF               	btfsc	indf2,6,c
 18194  003A60  D00D               	goto	l252
 18195                           
 18196                           ; BSR set to: 0
 18197                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 18198  003A62  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18199  003A66  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18200  003A6A  0E48               	movlw	72
 18201  003A6C  6EDF               	movwf	indf2,c
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18205  003A6E  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18206  003A72  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18207  003A76  0E00               	movlw	0
 18208  003A78  8EDB               	bsf	plusw2,7,c
 18209                           
 18210                           ;usb_device.c: 1891: }
 18211  003A7A  0012               	return	
 18212  003A7C                     l252:
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 18216                           
 18217                           ; BSR set to: 0
 18218  003A7C  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18219  003A80  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18220  003A84  0E08               	movlw	8
 18221  003A86  6EDF               	movwf	indf2,c
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18225  003A88  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18226  003A8C  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18227  003A90  0E00               	movlw	0
 18228  003A92  8EDB               	bsf	plusw2,7,c
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 18232  003A94  0012               	return	
 18233  003A96                     l251:
 18234                           
 18235                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 18236                           
 18237                           ; BSR set to: 0
 18238  003A96  0100               	movlb	0	; () banked
 18239  003A98  EE20 F001          	lfsr	2,1
 18240  003A9C  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18241  003A9E  26D9               	addwf	fsr2l,f,c
 18242  003AA0  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18243  003AA2  22DA               	addwfc	fsr2h,f,c
 18244  003AA4  0E08               	movlw	8
 18245  003AA6  6EDF               	movwf	indf2,c
 18246                           
 18247                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18248  003AA8  EE20 F002          	lfsr	2,2
 18249  003AAC  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18250  003AAE  26D9               	addwf	fsr2l,f,c
 18251  003AB0  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18252  003AB2  22DA               	addwfc	fsr2h,f,c
 18253  003AB4  0E30               	movlw	48
 18254  003AB6  6EDE               	movwf	postinc2,c
 18255  003AB8  0E0D               	movlw	13
 18256  003ABA  6EDD               	movwf	postdec2,c
 18257                           
 18258                           ; BSR set to: 0
 18259                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18260  003ABC  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18261  003AC0  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18262  003AC4  0E04               	movlw	4
 18263  003AC6  6EDF               	movwf	indf2,c
 18264                           
 18265                           ; BSR set to: 0
 18266                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18267  003AC8  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18268  003ACC  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18269  003AD0  0E00               	movlw	0
 18270  003AD2  8EDB               	bsf	plusw2,7,c
 18271                           
 18272                           ; BSR set to: 0
 18273                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 18274                           
 18275                           ; BSR set to: 0
 18276  003AD4  0101               	movlb	1	; () banked
 18277  003AD6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18278                           
 18279                           ; BSR set to: 1
 18280                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 18281  003AD8  0100               	movlb	0	; () banked
 18282  003ADA  51A5               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 18283  003ADC  A4D8               	btfss	status,2,c
 18284  003ADE  0012               	return	
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 18288  003AE0  ECB1  F026         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18289  003AE4  0012               	return	
 18290  003AE6                     __end_of_USBCtrlTrfRxService:
 18291                           	opt stack 0
 18292                           tosu	equ	0xFFF
 18293                           tosh	equ	0xFFE
 18294                           tosl	equ	0xFFD
 18295                           pclath	equ	0xFFA
 18296                           tblptru	equ	0xFF8
 18297                           tblptrh	equ	0xFF7
 18298                           tblptrl	equ	0xFF6
 18299                           tablat	equ	0xFF5
 18300                           prodh	equ	0xFF4
 18301                           prodl	equ	0xFF3
 18302                           intcon	equ	0xFF2
 18303                           intcon3	equ	0xFF0
 18304                           indf0	equ	0xFEF
 18305                           postinc0	equ	0xFEE
 18306                           fsr0h	equ	0xFEA
 18307                           fsr0l	equ	0xFE9
 18308                           wreg	equ	0xFE8
 18309                           indf1	equ	0xFE7
 18310                           postdec1	equ	0xFE5
 18311                           plusw1	equ	0xFE3
 18312                           fsr1h	equ	0xFE2
 18313                           fsr1l	equ	0xFE1
 18314                           indf2	equ	0xFDF
 18315                           postinc2	equ	0xFDE
 18316                           postdec2	equ	0xFDD
 18317                           plusw2	equ	0xFDB
 18318                           fsr2h	equ	0xFDA
 18319                           fsr2l	equ	0xFD9
 18320                           status	equ	0xFD8
 18321                           
 18322 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 18323 ;; Defined at:
 18324 ;;		line 1418 in file "usb_device.c"
 18325 ;; Parameters:    Size  Location     Type
 18326 ;;		None
 18327 ;; Auto vars:     Size  Location     Type
 18328 ;;		None
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  1    wreg      void 
 18331 ;; Registers used:
 18332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18342 ;;Total ram usage:        0 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; This function calls:
 18345 ;;		Nothing
 18346 ;; This function is called by:
 18347 ;;		_USBDeviceTasks
 18348 ;;		_USBCtrlEPServiceComplete
 18349 ;;		_USBCtrlTrfRxService
 18350 ;; This function uses a non-reentrant model
 18351 ;;
 18352                           
 18353                           	psect	text90
 18354  004D62                     __ptext90:
 18355                           	opt stack 0
 18356  004D62                     _USBCtrlEPAllowStatusStage:
 18357                           	opt stack 26
 18358                           
 18359                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 18360                           
 18361                           ;incstack = 0
 18362  004D62  0100               	movlb	0	; () banked
 18363  004D64  51A4               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 18364  004D66  A4D8               	btfss	status,2,c
 18365  004D68  0012               	return	
 18366                           
 18367                           ; BSR set to: 0
 18368                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 18369  004D6A  0E01               	movlw	1
 18370  004D6C  6FA4               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18371                           
 18372                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 18373  004D6E  51A3               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 18374  004D70  A4D8               	btfss	status,2,c
 18375  004D72  0012               	return	
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 18379  004D74  0E01               	movlw	1
 18380  004D76  6FA3               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;usb_device.c: 1434: if(controlTransferState == 2)
 18384  004D78  0E02               	movlw	2
 18385  004D7A  19AB               	xorwf	_controlTransferState& (0+255),w,b
 18386  004D7C  A4D8               	btfss	status,2,c
 18387  004D7E  D015               	goto	l202
 18388                           
 18389                           ; BSR set to: 0
 18390                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 18391  004D80  EE20 F001          	lfsr	2,1
 18392  004D84  5174               	movf	_pBDTEntryIn& (0+255),w,b
 18393  004D86  26D9               	addwf	fsr2l,f,c
 18394  004D88  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18395  004D8A  22DA               	addwfc	fsr2h,f,c
 18396  004D8C  0E00               	movlw	0
 18397  004D8E  6EDF               	movwf	indf2,c
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18401  004D90  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18402  004D94  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18403  004D98  0E48               	movlw	72
 18404  004D9A  6EDF               	movwf	indf2,c
 18405                           
 18406                           ; BSR set to: 0
 18407                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18408  004D9C  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18409  004DA0  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18410  004DA4  0E00               	movlw	0
 18411  004DA6  8EDB               	bsf	plusw2,7,c
 18412                           
 18413                           ;usb_device.c: 1439: }
 18414  004DA8  0012               	return	
 18415  004DAA                     l202:
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 18419                           
 18420                           ; BSR set to: 0
 18421  004DAA  05AB               	decf	_controlTransferState& (0+255),w,b
 18422  004DAC  A4D8               	btfss	status,2,c
 18423  004DAE  0012               	return	
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 18427  004DB0  0E00               	movlw	0
 18428  004DB2  6FA7               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18429                           
 18430                           ; BSR set to: 0
 18431                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 18432  004DB4  EE20 F001          	lfsr	2,1
 18433  004DB8  518E               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18434  004DBA  26D9               	addwf	fsr2l,f,c
 18435  004DBC  518F               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18436  004DBE  22DA               	addwfc	fsr2h,f,c
 18437  004DC0  0E08               	movlw	8
 18438  004DC2  6EDF               	movwf	indf2,c
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18442  004DC4  EE20 F002          	lfsr	2,2
 18443  004DC8  518E               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18444  004DCA  26D9               	addwf	fsr2l,f,c
 18445  004DCC  518F               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18446  004DCE  22DA               	addwfc	fsr2h,f,c
 18447  004DD0  0E30               	movlw	48
 18448  004DD2  6EDE               	movwf	postinc2,c
 18449  004DD4  0E0D               	movlw	13
 18450  004DD6  6EDD               	movwf	postdec2,c
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18454  004DD8  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18455  004DDC  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18456  004DE0  0E04               	movlw	4
 18457  004DE2  6EDF               	movwf	indf2,c
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18461  004DE4  C08E  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18462  004DE8  C08F  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18463  004DEC  0E00               	movlw	0
 18464  004DEE  8EDB               	bsf	plusw2,7,c
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 18468  004DF0  0E01               	movlw	1
 18469  004DF2  6FA7               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 18473  004DF4  EE20 F001          	lfsr	2,1
 18474  004DF8  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18475  004DFA  26D9               	addwf	fsr2l,f,c
 18476  004DFC  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18477  004DFE  22DA               	addwfc	fsr2h,f,c
 18478  004E00  0E08               	movlw	8
 18479  004E02  6EDF               	movwf	indf2,c
 18480                           
 18481                           ; BSR set to: 0
 18482                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18483  004E04  EE20 F002          	lfsr	2,2
 18484  004E08  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18485  004E0A  26D9               	addwf	fsr2l,f,c
 18486  004E0C  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18487  004E0E  22DA               	addwfc	fsr2h,f,c
 18488  004E10  0E30               	movlw	48
 18489  004E12  6EDE               	movwf	postinc2,c
 18490  004E14  0E0D               	movlw	13
 18491  004E16  6EDD               	movwf	postdec2,c
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18495  004E18  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18496  004E1C  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18497  004E20  0E80               	movlw	128
 18498  004E22  6EDF               	movwf	indf2,c
 18499                           
 18500                           ; BSR set to: 0
 18501                           
 18502                           ; BSR set to: 0
 18503                           
 18504                           ; BSR set to: 0
 18505  004E24  0012               	return	
 18506  004E26                     __end_of_USBCtrlEPAllowStatusStage:
 18507                           	opt stack 0
 18508                           tosu	equ	0xFFF
 18509                           tosh	equ	0xFFE
 18510                           tosl	equ	0xFFD
 18511                           pclath	equ	0xFFA
 18512                           tblptru	equ	0xFF8
 18513                           tblptrh	equ	0xFF7
 18514                           tblptrl	equ	0xFF6
 18515                           tablat	equ	0xFF5
 18516                           prodh	equ	0xFF4
 18517                           prodl	equ	0xFF3
 18518                           intcon	equ	0xFF2
 18519                           intcon3	equ	0xFF0
 18520                           indf0	equ	0xFEF
 18521                           postinc0	equ	0xFEE
 18522                           fsr0h	equ	0xFEA
 18523                           fsr0l	equ	0xFE9
 18524                           wreg	equ	0xFE8
 18525                           indf1	equ	0xFE7
 18526                           postdec1	equ	0xFE5
 18527                           plusw1	equ	0xFE3
 18528                           fsr1h	equ	0xFE2
 18529                           fsr1l	equ	0xFE1
 18530                           indf2	equ	0xFDF
 18531                           postinc2	equ	0xFDE
 18532                           postdec2	equ	0xFDD
 18533                           plusw2	equ	0xFDB
 18534                           fsr2h	equ	0xFDA
 18535                           fsr2l	equ	0xFD9
 18536                           status	equ	0xFD8
 18537                           
 18538 ;; *************** function _USBCtrlTrfInHandler *****************
 18539 ;; Defined at:
 18540 ;;		line 2594 in file "usb_device.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;		None
 18543 ;; Auto vars:     Size  Location     Type
 18544 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18545 ;; Return value:  Size  Location     Type
 18546 ;;                  1    wreg      void 
 18547 ;; Registers used:
 18548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18549 ;; Tracked objects:
 18550 ;;		On entry : 0/0
 18551 ;;		On exit  : 0/0
 18552 ;;		Unchanged: 0/0
 18553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18558 ;;Total ram usage:        1 bytes
 18559 ;; Hardware stack levels used:    1
 18560 ;; Hardware stack levels required when called:    1
 18561 ;; This function calls:
 18562 ;;		_USBCtrlTrfTxService
 18563 ;; This function is called by:
 18564 ;;		_USBCtrlEPService
 18565 ;; This function uses a non-reentrant model
 18566 ;;
 18567                           
 18568                           	psect	text91
 18569  004C9A                     __ptext91:
 18570                           	opt stack 0
 18571  004C9A                     _USBCtrlTrfInHandler:
 18572                           	opt stack 27
 18573                           
 18574                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;incstack = 0
 18578  004C9A  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18579  004C9E  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18580  004CA2  0100               	movlb	0	; () banked
 18581  004CA4  0E00               	movlw	0
 18582  004CA6  BCDF               	btfsc	indf2,6,c
 18583  004CA8  0E01               	movlw	1
 18584  004CAA  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18585                           
 18586                           ; BSR set to: 0
 18587                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18588  004CAC  0E04               	movlw	4
 18589  004CAE  1974               	xorwf	_pBDTEntryIn& (0+255),w,b
 18590  004CB0  6F74               	movwf	_pBDTEntryIn& (0+255),b
 18591  004CB2  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18592  004CB4  6F75               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 18596  004CB6  0E08               	movlw	8
 18597  004CB8  185F               	xorwf	_USBDeviceState,w,c
 18598  004CBA  A4D8               	btfss	status,2,c
 18599  004CBC  D00C               	goto	l329
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 18603  004CBE  010D               	movlb	13	; () banked
 18604  004CC0  5132               	movf	50,w,b	;volatile
 18605  004CC2  0B7F               	andlw	127
 18606  004CC4  010F               	movlb	15	; () banked
 18607  004CC6  6F38               	movwf	56,b	;volatile
 18608                           
 18609                           ; BSR set to: 15
 18610                           ;usb_device.c: 2609: if(UADDR != 0u)
 18611  004CC8  5138               	movf	56,w,b	;volatile
 18612  004CCA  B4D8               	btfsc	status,2,c
 18613  004CCC  D002               	goto	l328
 18614                           
 18615                           ; BSR set to: 15
 18616                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 18617  004CCE  0E10               	movlw	16
 18618  004CD0  D001               	goto	L16
 18619  004CD2                     l328:
 18620                           
 18621                           ; BSR set to: 15
 18622                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 18623                           
 18624                           ; BSR set to: 15
 18625  004CD2  0E04               	movlw	4
 18626  004CD4                     L16:
 18627  004CD4  6E5F               	movwf	_USBDeviceState,c
 18628  004CD6                     l329:
 18629                           
 18630                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 18631                           
 18632                           ; BSR set to: 15
 18633                           
 18634                           ; BSR set to: 15
 18635  004CD6  0100               	movlb	0	; () banked
 18636  004CD8  05AB               	decf	_controlTransferState& (0+255),w,b
 18637  004CDA  A4D8               	btfss	status,2,c
 18638  004CDC  D03B               	goto	l330
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 18642  004CDE  EE20 F002          	lfsr	2,2
 18643  004CE2  5174               	movf	_pBDTEntryIn& (0+255),w,b
 18644  004CE4  26D9               	addwf	fsr2l,f,c
 18645  004CE6  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18646  004CE8  22DA               	addwfc	fsr2h,f,c
 18647  004CEA  0E38               	movlw	56
 18648  004CEC  6EDE               	movwf	postinc2,c
 18649  004CEE  0E0D               	movlw	13
 18650  004CF0  6EDD               	movwf	postdec2,c
 18651                           
 18652                           ; BSR set to: 0
 18653                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18654  004CF2  EC7C  F025         	call	_USBCtrlTrfTxService	;wreg free
 18655                           
 18656                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18657  004CF6  0E02               	movlw	2
 18658  004CF8  0100               	movlb	0	; () banked
 18659  004CFA  19AC               	xorwf	_shortPacketStatus& (0+255),w,b
 18660  004CFC  A4D8               	btfss	status,2,c
 18661  004CFE  D00D               	goto	l331
 18662                           
 18663                           ; BSR set to: 0
 18664                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18665  004D00  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18666  004D04  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18667  004D08  0E04               	movlw	4
 18668  004D0A  6EDF               	movwf	indf2,c
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18672  004D0C  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18673  004D10  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18674  004D14  0E00               	movlw	0
 18675  004D16  8EDB               	bsf	plusw2,7,c
 18676                           
 18677                           ;usb_device.c: 2635: }
 18678  004D18  0012               	return	
 18679  004D1A                     l331:
 18680                           
 18681                           ; BSR set to: 0
 18682                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18683                           
 18684                           ; BSR set to: 0
 18685  004D1A  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18686  004D1C  A4D8               	btfss	status,2,c
 18687  004D1E  D00D               	goto	l333
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18691  004D20  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18692  004D24  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18693  004D28  0E48               	movlw	72
 18694  004D2A  6EDF               	movwf	indf2,c
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18698  004D2C  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18699  004D30  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18700  004D34  0E00               	movlw	0
 18701  004D36  8EDB               	bsf	plusw2,7,c
 18702                           
 18703                           ;usb_device.c: 2642: }
 18704  004D38  0012               	return	
 18705  004D3A                     l333:
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18709                           
 18710                           ; BSR set to: 0
 18711  004D3A  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18712  004D3E  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18713  004D42  0E08               	movlw	8
 18714  004D44  6EDF               	movwf	indf2,c
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18718  004D46  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 18719  004D4A  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18720  004D4E  0E00               	movlw	0
 18721  004D50  8EDB               	bsf	plusw2,7,c
 18722                           
 18723                           ; BSR set to: 0
 18724                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18725                           
 18726                           ; BSR set to: 0
 18727  004D52  0012               	return	
 18728  004D54                     l330:
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18732  004D54  0101               	movlb	1	; () banked
 18733  004D56  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18734                           
 18735                           ; BSR set to: 1
 18736                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18737                           
 18738                           ; BSR set to: 1
 18739  004D58  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18740                           
 18741                           ; BSR set to: 1
 18742                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18743                           
 18744                           ; BSR set to: 1
 18745  004D5A  0E00               	movlw	0
 18746  004D5C  0100               	movlb	0	; () banked
 18747  004D5E  6FAB               	movwf	_controlTransferState& (0+255),b
 18748  004D60  0012               	return	
 18749  004D62                     __end_of_USBCtrlTrfInHandler:
 18750                           	opt stack 0
 18751                           tosu	equ	0xFFF
 18752                           tosh	equ	0xFFE
 18753                           tosl	equ	0xFFD
 18754                           pclath	equ	0xFFA
 18755                           tblptru	equ	0xFF8
 18756                           tblptrh	equ	0xFF7
 18757                           tblptrl	equ	0xFF6
 18758                           tablat	equ	0xFF5
 18759                           prodh	equ	0xFF4
 18760                           prodl	equ	0xFF3
 18761                           intcon	equ	0xFF2
 18762                           intcon3	equ	0xFF0
 18763                           indf0	equ	0xFEF
 18764                           postinc0	equ	0xFEE
 18765                           fsr0h	equ	0xFEA
 18766                           fsr0l	equ	0xFE9
 18767                           wreg	equ	0xFE8
 18768                           indf1	equ	0xFE7
 18769                           postdec1	equ	0xFE5
 18770                           plusw1	equ	0xFE3
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           postdec2	equ	0xFDD
 18776                           plusw2	equ	0xFDB
 18777                           fsr2h	equ	0xFDA
 18778                           fsr2l	equ	0xFD9
 18779                           status	equ	0xFD8
 18780                           
 18781 ;; *************** function _USBCtrlTrfTxService *****************
 18782 ;; Defined at:
 18783 ;;		line 1773 in file "usb_device.c"
 18784 ;; Parameters:    Size  Location     Type
 18785 ;;		None
 18786 ;; Auto vars:     Size  Location     Type
 18787 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18788 ;; Return value:  Size  Location     Type
 18789 ;;                  1    wreg      void 
 18790 ;; Registers used:
 18791 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18792 ;; Tracked objects:
 18793 ;;		On entry : 0/0
 18794 ;;		On exit  : 0/0
 18795 ;;		Unchanged: 0/0
 18796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18801 ;;Total ram usage:        1 bytes
 18802 ;; Hardware stack levels used:    1
 18803 ;; This function calls:
 18804 ;;		Nothing
 18805 ;; This function is called by:
 18806 ;;		_USBCtrlEPAllowDataStage
 18807 ;;		_USBCtrlTrfInHandler
 18808 ;; This function uses a non-reentrant model
 18809 ;;
 18810                           
 18811                           	psect	text92
 18812  004AF8                     __ptext92:
 18813                           	opt stack 0
 18814  004AF8                     _USBCtrlTrfTxService:
 18815                           	opt stack 25
 18816                           
 18817                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18818                           
 18819                           ; BSR set to: 0
 18820                           ;incstack = 0
 18821  004AF8  0E08               	movlw	8
 18822  004AFA  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18823                           
 18824                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18825  004AFC  0100               	movlb	0	; () banked
 18826  004AFE  5173               	movf	(_inPipes+5)& (0+255),w,b
 18827  004B00  E110               	bnz	l10641
 18828  004B02  0E08               	movlw	8
 18829  004B04  5D72               	subwf	(_inPipes+4)& (0+255),w,b
 18830  004B06  B0D8               	btfsc	status,0,c
 18831  004B08  D00C               	goto	l235
 18832                           
 18833                           ; BSR set to: 0
 18834                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18835  004B0A  C072  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18839  004B0E  51AC               	movf	_shortPacketStatus& (0+255),w,b
 18840  004B10  A4D8               	btfss	status,2,c
 18841  004B12  D002               	goto	l233
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18845  004B14  0E01               	movlw	1
 18846  004B16  D004               	goto	L17
 18847  004B18                     l233:
 18848                           
 18849                           ; BSR set to: 0
 18850                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18851                           
 18852                           ; BSR set to: 0
 18853  004B18  05AC               	decf	_shortPacketStatus& (0+255),w,b
 18854  004B1A  A4D8               	btfss	status,2,c
 18855  004B1C  D002               	goto	l235
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18859  004B1E  0E02               	movlw	2
 18860  004B20                     L17:
 18861  004B20  6FAC               	movwf	_shortPacketStatus& (0+255),b
 18862  004B22                     l235:
 18863  004B22                     l10641:
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18867  004B22  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18868  004B24  5F72               	subwf	(_inPipes+4)& (0+255),f,b
 18869  004B26  0E00               	movlw	0
 18870  004B28  5B73               	subwfb	(_inPipes+5)& (0+255),f,b
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18874  004B2A  EE20 F001          	lfsr	2,1
 18875  004B2E  5174               	movf	_pBDTEntryIn& (0+255),w,b
 18876  004B30  26D9               	addwf	fsr2l,f,c
 18877  004B32  5175               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18878  004B34  22DA               	addwfc	fsr2h,f,c
 18879  004B36  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18880                           
 18881                           ; BSR set to: 0
 18882                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18883  004B3A  0E38               	movlw	56
 18884  004B3C  0101               	movlb	1	; () banked
 18885  004B3E  6F79               	movwf	_pDst& (0+255),b
 18886  004B40  0E0D               	movlw	13
 18887  004B42  6F7A               	movwf	(_pDst+1)& (0+255),b
 18888                           
 18889                           ; BSR set to: 1
 18890                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18891  004B44  0100               	movlb	0	; () banked
 18892  004B46  A171               	btfss	(_inPipes+3)& (0+255),0,b
 18893  004B48  D01D               	goto	l237
 18894  004B4A  D03C               	goto	l241
 18895  004B4C                     
 18896                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18897                           
 18898                           ; BSR set to: 0
 18899  004B4C  C06E  FFF6         	movff	_inPipes,tblptrl
 18900  004B50  C06F  FFF7         	movff	_inPipes+1,tblptrh
 18901  004B54  6AF8               	clrf	tblptru,c
 18902  004B56  C179  FFD9         	movff	_pDst,fsr2l
 18903  004B5A  C17A  FFDA         	movff	_pDst+1,fsr2h
 18904  004B5E  0E0E               	movlw	(high __ramtop+-1)
 18905  004B60  64F7               	cpfsgt	tblptrh,c
 18906  004B62  D003               	bra	u8187
 18907  004B64  0008               	tblrd		*
 18908  004B66  50F5               	movf	tablat,w,c
 18909  004B68  D005               	bra	u8180
 18910  004B6A                     u8187:
 18911  004B6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18912  004B6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18913  004B72  50EF               	movf	indf0,w,c
 18914  004B74                     u8180:
 18915  004B74  6EDF               	movwf	indf2,c
 18916  004B76  0100               	movlb	0	; () banked
 18917  004B78  4B6E               	infsnz	_inPipes& (0+255),f,b
 18918  004B7A  2B6F               	incf	(_inPipes+1)& (0+255),f,b
 18919                           
 18920                           ; BSR set to: 0
 18921  004B7C  0101               	movlb	1	; () banked
 18922  004B7E  4B79               	infsnz	_pDst& (0+255),f,b
 18923  004B80  2B7A               	incf	(_pDst+1)& (0+255),f,b
 18924                           
 18925                           ; BSR set to: 1
 18926                           ;usb_device.c: 1816: byteToSend--;
 18927  004B82  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18928  004B84                     l237:
 18929                           
 18930                           ; BSR set to: 1
 18931  004B84  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18932  004B86  B4D8               	btfsc	status,2,c
 18933  004B88  0012               	return	
 18934  004B8A  D7E0               	goto	l238
 18935  004B8C                     
 18936                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18937  004B8C  C06E  FFF6         	movff	_inPipes,tblptrl
 18938  004B90  C06F  FFF7         	movff	_inPipes+1,tblptrh
 18939  004B94  6AF8               	clrf	tblptru,c
 18940  004B96  C179  FFD9         	movff	_pDst,fsr2l
 18941  004B9A  C17A  FFDA         	movff	_pDst+1,fsr2h
 18942  004B9E  0E0E               	movlw	(high __ramtop+-1)
 18943  004BA0  64F7               	cpfsgt	tblptrh,c
 18944  004BA2  D003               	bra	u8207
 18945  004BA4  0008               	tblrd		*
 18946  004BA6  50F5               	movf	tablat,w,c
 18947  004BA8  D005               	bra	u8200
 18948  004BAA                     u8207:
 18949  004BAA  CFF6 FFE9          	movff	tblptrl,fsr0l
 18950  004BAE  CFF7 FFEA          	movff	tblptrh,fsr0h
 18951  004BB2  50EF               	movf	indf0,w,c
 18952  004BB4                     u8200:
 18953  004BB4  6EDF               	movwf	indf2,c
 18954  004BB6  0100               	movlb	0	; () banked
 18955  004BB8  4B6E               	infsnz	_inPipes& (0+255),f,b
 18956  004BBA  2B6F               	incf	(_inPipes+1)& (0+255),f,b
 18957                           
 18958                           ; BSR set to: 0
 18959  004BBC  0101               	movlb	1	; () banked
 18960  004BBE  4B79               	infsnz	_pDst& (0+255),f,b
 18961  004BC0  2B7A               	incf	(_pDst+1)& (0+255),f,b
 18962                           
 18963                           ; BSR set to: 1
 18964                           ;usb_device.c: 1824: byteToSend--;
 18965  004BC2  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18966  004BC4                     l241:
 18967                           
 18968                           ; BSR set to: 1
 18969  004BC4  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18970  004BC6  B4D8               	btfsc	status,2,c
 18971  004BC8  0012               	return	
 18972  004BCA  D7E0               	goto	l242
 18973  004BCC                     __end_of_USBCtrlTrfTxService:
 18974                           	opt stack 0
 18975                           tosu	equ	0xFFF
 18976                           tosh	equ	0xFFE
 18977                           tosl	equ	0xFFD
 18978                           pclath	equ	0xFFA
 18979                           tblptru	equ	0xFF8
 18980                           tblptrh	equ	0xFF7
 18981                           tblptrl	equ	0xFF6
 18982                           tablat	equ	0xFF5
 18983                           prodh	equ	0xFF4
 18984                           prodl	equ	0xFF3
 18985                           intcon	equ	0xFF2
 18986                           intcon3	equ	0xFF0
 18987                           indf0	equ	0xFEF
 18988                           postinc0	equ	0xFEE
 18989                           fsr0h	equ	0xFEA
 18990                           fsr0l	equ	0xFE9
 18991                           wreg	equ	0xFE8
 18992                           indf1	equ	0xFE7
 18993                           postdec1	equ	0xFE5
 18994                           plusw1	equ	0xFE3
 18995                           fsr1h	equ	0xFE2
 18996                           fsr1l	equ	0xFE1
 18997                           indf2	equ	0xFDF
 18998                           postinc2	equ	0xFDE
 18999                           postdec2	equ	0xFDD
 19000                           plusw2	equ	0xFDB
 19001                           fsr2h	equ	0xFDA
 19002                           fsr2l	equ	0xFD9
 19003                           status	equ	0xFD8
 19004                           
 19005 ;; *************** function _APP_DeviceMSDTasks *****************
 19006 ;; Defined at:
 19007 ;;		line 110 in file "app_device_msd.c"
 19008 ;; Parameters:    Size  Location     Type
 19009 ;;		None
 19010 ;; Auto vars:     Size  Location     Type
 19011 ;;		None
 19012 ;; Return value:  Size  Location     Type
 19013 ;;                  1    wreg      void 
 19014 ;; Registers used:
 19015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19016 ;; Tracked objects:
 19017 ;;		On entry : 0/0
 19018 ;;		On exit  : 0/0
 19019 ;;		Unchanged: 0/0
 19020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19025 ;;Total ram usage:        0 bytes
 19026 ;; Hardware stack levels used:    1
 19027 ;; Hardware stack levels required when called:   11
 19028 ;; This function calls:
 19029 ;;		_MSDTasks
 19030 ;; This function is called by:
 19031 ;;		_main
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           	psect	text93
 19036  007346                     __ptext93:
 19037                           	opt stack 0
 19038  007346                     _APP_DeviceMSDTasks:
 19039                           	opt stack 19
 19040                           
 19041                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 19042                           
 19043                           ;incstack = 0
 19044  007346  0E20               	movlw	32
 19045  007348  605F               	cpfslt	_USBDeviceState,c
 19046  00734A  D001               	goto	l978
 19047  00734C  0012               	return	
 19048  00734E                     l978:
 19049                           
 19050                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 19051  00734E  B265               	btfsc	3941,1,c	;volatile
 19052  007350  0012               	return	
 19053                           
 19054                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 19055                           
 19056                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 19057  007352  ECDF  F00C         	call	_MSDTasks	;wreg free
 19058  007356  0012               	return		;funcret
 19059  007358                     __end_of_APP_DeviceMSDTasks:
 19060                           	opt stack 0
 19061                           tosu	equ	0xFFF
 19062                           tosh	equ	0xFFE
 19063                           tosl	equ	0xFFD
 19064                           pclath	equ	0xFFA
 19065                           tblptru	equ	0xFF8
 19066                           tblptrh	equ	0xFF7
 19067                           tblptrl	equ	0xFF6
 19068                           tablat	equ	0xFF5
 19069                           prodh	equ	0xFF4
 19070                           prodl	equ	0xFF3
 19071                           intcon	equ	0xFF2
 19072                           intcon3	equ	0xFF0
 19073                           indf0	equ	0xFEF
 19074                           postinc0	equ	0xFEE
 19075                           fsr0h	equ	0xFEA
 19076                           fsr0l	equ	0xFE9
 19077                           wreg	equ	0xFE8
 19078                           indf1	equ	0xFE7
 19079                           postdec1	equ	0xFE5
 19080                           plusw1	equ	0xFE3
 19081                           fsr1h	equ	0xFE2
 19082                           fsr1l	equ	0xFE1
 19083                           indf2	equ	0xFDF
 19084                           postinc2	equ	0xFDE
 19085                           postdec2	equ	0xFDD
 19086                           plusw2	equ	0xFDB
 19087                           fsr2h	equ	0xFDA
 19088                           fsr2l	equ	0xFD9
 19089                           status	equ	0xFD8
 19090                           
 19091 ;; *************** function _MSDTasks *****************
 19092 ;; Defined at:
 19093 ;;		line 335 in file "usb_device_msd.c"
 19094 ;; Parameters:    Size  Location     Type
 19095 ;;		None
 19096 ;; Auto vars:     Size  Location     Type
 19097 ;;  i               1   81[COMRAM] unsigned char 
 19098 ;; Return value:  Size  Location     Type
 19099 ;;                  1    wreg      unsigned char 
 19100 ;; Registers used:
 19101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19102 ;; Tracked objects:
 19103 ;;		On entry : 0/0
 19104 ;;		On exit  : 0/0
 19105 ;;		Unchanged: 0/0
 19106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19108 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19110 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19111 ;;Total ram usage:        6 bytes
 19112 ;; Hardware stack levels used:    1
 19113 ;; Hardware stack levels required when called:   10
 19114 ;; This function calls:
 19115 ;;		_MSDProcessCommand
 19116 ;;		_USBStallEndpoint
 19117 ;;		_USBTransferOnePacket
 19118 ;; This function is called by:
 19119 ;;		_APP_DeviceMSDTasks
 19120 ;; This function uses a non-reentrant model
 19121 ;;
 19122                           
 19123                           	psect	text94
 19124  0019BE                     __ptext94:
 19125                           	opt stack 0
 19126  0019BE                     _MSDTasks:
 19127                           	opt stack 19
 19128                           
 19129                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 19130                           
 19131                           ;incstack = 0
 19132  0019BE  0E20               	movlw	32
 19133  0019C0  185F               	xorwf	_USBDeviceState,w,c
 19134  0019C2  A4D8               	btfss	status,2,c
 19135  0019C4  0012               	return	
 19136  0019C6  D118               	goto	l554
 19137  0019C8                     
 19138                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 19139  0019C8  0100               	movlb	0	; () banked
 19140  0019CA  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 19141  0019CC  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19142  0019CE  B4D8               	btfsc	status,2,c
 19143  0019D0  D006               	goto	u11250
 19144                           
 19145                           ; BSR set to: 0
 19146  0019D2  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19147  0019D6  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19148  0019DA  BEDF               	btfsc	indf2,7,c
 19149  0019DC  0012               	return	
 19150  0019DE                     u11250:
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 19154                           
 19155                           ; BSR set to: 0
 19156  0019DE  0E00               	movlw	0
 19157  0019E0  6E52               	movwf	MSDTasks@i,c
 19158  0019E2                     l13637:
 19159                           
 19160                           ; BSR set to: 0
 19161  0019E2  0E1E               	movlw	30
 19162  0019E4  6452               	cpfsgt	MSDTasks@i,c
 19163  0019E6  D001               	goto	l559
 19164  0019E8  D014               	goto	u11270
 19165  0019EA                     l559:
 19166                           
 19167                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 19168                           
 19169                           ; BSR set to: 0
 19170  0019EA  5052               	movf	MSDTasks@i,w,c
 19171  0019EC  0D01               	mullw	1
 19172  0019EE  0E40               	movlw	64
 19173  0019F0  24F3               	addwf	prodl,w,c
 19174  0019F2  6ED9               	movwf	fsr2l,c
 19175  0019F4  0E0D               	movlw	13
 19176  0019F6  20F4               	addwfc	prodh,w,c
 19177  0019F8  6EDA               	movwf	fsr2h,c
 19178  0019FA  5052               	movf	MSDTasks@i,w,c
 19179  0019FC  0D01               	mullw	1
 19180  0019FE  0E00               	movlw	low _gblCBW
 19181  001A00  24F3               	addwf	prodl,w,c
 19182  001A02  6EE1               	movwf	fsr1l,c
 19183  001A04  0E01               	movlw	high _gblCBW
 19184  001A06  20F4               	addwfc	prodh,w,c
 19185  001A08  6EE2               	movwf	fsr1h,c
 19186  001A0A  CFDF FFE7          	movff	indf2,indf1
 19187  001A0E  2A52               	incf	MSDTasks@i,f,c
 19188  001A10  D7E8               	goto	l13637
 19189  001A12                     u11270:
 19190                           
 19191                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 19192  001A12  0100               	movlb	0	; () banked
 19193  001A14  EE20 F001          	lfsr	2,1
 19194  001A18  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 19195  001A1A  26D9               	addwf	fsr2l,f,c
 19196  001A1C  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19197  001A1E  22DA               	addwfc	fsr2h,f,c
 19198  001A20  0E1F               	movlw	31
 19199  001A22  18DE               	xorwf	postinc2,w,c
 19200  001A24  A4D8               	btfss	status,2,c
 19201  001A26  D072               	goto	l561
 19202                           
 19203                           ; BSR set to: 0
 19204  001A28  0E55               	movlw	85
 19205  001A2A  0101               	movlb	1	; () banked
 19206  001A2C  1900               	xorwf	_gblCBW& (0+255),w,b
 19207  001A2E  E16E               	bnz	l561
 19208  001A30  0E53               	movlw	83
 19209  001A32  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 19210  001A34  E16B               	bnz	l561
 19211  001A36  0E42               	movlw	66
 19212  001A38  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 19213  001A3A  E168               	bnz	l561
 19214  001A3C  0E43               	movlw	67
 19215  001A3E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 19216  001A40  A4D8               	btfss	status,2,c
 19217  001A42  D064               	goto	l561
 19218                           
 19219                           ; BSR set to: 1
 19220                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 19221  001A44  0E01               	movlw	1
 19222  001A46  0100               	movlb	0	; () banked
 19223  001A48  6F97               	movwf	_MSDCBWValid& (0+255),b
 19224                           
 19225                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 19226  001A4A  0101               	movlb	1	; () banked
 19227  001A4C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19228  001A4E  A4D8               	btfss	status,2,c
 19229  001A50  D052               	goto	l562
 19230                           
 19231                           ; BSR set to: 1
 19232  001A52  0E11               	movlw	17
 19233  001A54  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 19234  001A56  D04F               	goto	l562
 19235                           
 19236                           ; BSR set to: 1
 19237  001A58  510E               	movf	(_gblCBW+14)& (0+255),w,b
 19238  001A5A  B4D8               	btfsc	status,2,c
 19239  001A5C  D04C               	goto	l562
 19240                           
 19241                           ; BSR set to: 1
 19242  001A5E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 19243  001A62  0E3F               	movlw	63
 19244  001A64  164D               	andwf	??_MSDTasks,f,c
 19245  001A66  A4D8               	btfss	status,2,c
 19246  001A68  D046               	goto	l562
 19247                           
 19248                           ; BSR set to: 1
 19249                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 19250  001A6A  0E55               	movlw	85
 19251  001A6C  010D               	movlb	13	; () banked
 19252  001A6E  6F80               	movwf	128,b	;volatile
 19253  001A70  0E53               	movlw	83
 19254  001A72  6F81               	movwf	129,b	;volatile
 19255  001A74  0E42               	movlw	66
 19256  001A76  6F82               	movwf	130,b	;volatile
 19257  001A78  0E53               	movlw	83
 19258  001A7A  6F83               	movwf	131,b	;volatile
 19259                           
 19260                           ; BSR set to: 13
 19261                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 19262  001A7C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 19263  001A80  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 19264  001A84  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 19265  001A88  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 19266                           
 19267                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 19268  001A8C  0E00               	movlw	0
 19269  001A8E  6F88               	movwf	136,b	;volatile
 19270  001A90  0E00               	movlw	0
 19271  001A92  6F89               	movwf	137,b	;volatile
 19272  001A94  0E00               	movlw	0
 19273  001A96  6F8A               	movwf	138,b	;volatile
 19274  001A98  0E00               	movlw	0
 19275  001A9A  6F8B               	movwf	139,b	;volatile
 19276                           
 19277                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 19278  001A9C  0E00               	movlw	0
 19279  001A9E  6F8C               	movwf	140,b	;volatile
 19280                           
 19281                           ; BSR set to: 13
 19282                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 19283  001AA0  0100               	movlb	0	; () banked
 19284  001AA2  699E               	setf	_MSDCommandState& (0+255),b
 19285                           
 19286                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 19287  001AA4  0E00               	movlw	0
 19288  001AA6  6F9D               	movwf	_MSDReadState& (0+255),b
 19289                           
 19290                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 19291  001AA8  0E00               	movlw	0
 19292  001AAA  6F9C               	movwf	_MSDWriteState& (0+255),b
 19293                           
 19294                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 19295  001AAC  0E00               	movlw	0
 19296  001AAE  6F9B               	movwf	_MSDRetryAttempt& (0+255),b
 19297                           
 19298                           ; BSR set to: 0
 19299                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 19300  001AB0  0E03               	movlw	3
 19301  001AB2  0101               	movlb	1	; () banked
 19302  001AB4  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 19303  001AB6  B4D8               	btfsc	status,2,c
 19304  001AB8  D008               	goto	l563
 19305                           
 19306                           ; BSR set to: 1
 19307                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 19308  001ABA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 19309  001ABC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 19310  001ABE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 19311  001AC0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 19312                           
 19313                           ; BSR set to: 1
 19314                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 19315  001AC2  0E00               	movlw	0
 19316  001AC4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19317                           
 19318                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 19319  001AC6  0E00               	movlw	0
 19320  001AC8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19321  001ACA                     l563:
 19322                           
 19323                           ; BSR set to: 1
 19324                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 19325                           
 19326                           ; BSR set to: 1
 19327  001ACA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 19328  001ACC  D002               	goto	l564
 19329                           
 19330                           ; BSR set to: 1
 19331                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 19332  001ACE  0E01               	movlw	1
 19333  001AD0  D001               	goto	L18
 19334  001AD2                     l564:
 19335                           
 19336                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 19337                           
 19338                           ; BSR set to: 0
 19339  001AD2  0E02               	movlw	2
 19340  001AD4                     L18:
 19341  001AD4  0100               	movlb	0	; () banked
 19342  001AD6  6F9F               	movwf	_MSD_State& (0+255),b
 19343                           
 19344                           ; BSR set to: 0
 19345                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 19346                           
 19347                           ; BSR set to: 0
 19348  001AD8  0101               	movlb	1	; () banked
 19349  001ADA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19350  001ADC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19351  001ADE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19352  001AE0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19353  001AE2  B4D8               	btfsc	status,2,c
 19354  001AE4  D002               	goto	l566
 19355                           
 19356                           ; BSR set to: 1
 19357                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 19358  001AE6  0E00               	movlw	0
 19359  001AE8  D001               	goto	L19
 19360  001AEA                     l566:
 19361                           
 19362                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 19363                           
 19364                           ; BSR set to: 0
 19365  001AEA  0E01               	movlw	1
 19366  001AEC                     L19:
 19367  001AEC  0100               	movlb	0	; () banked
 19368  001AEE  6F98               	movwf	_MSDHostNoData& (0+255),b
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 19372                           
 19373                           ; BSR set to: 0
 19374  001AF0  C10F  F09E         	movff	_gblCBW+15,_MSDCommandState
 19375                           
 19376                           ;usb_device_msd.c: 454: }
 19377  001AF4  0012               	return	
 19378  001AF6                     l562:
 19379                           
 19380                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 19381                           
 19382                           ; BSR set to: 0
 19383  001AF6  0E01               	movlw	1
 19384  001AF8  6E01               	movwf	USBStallEndpoint@dir,c
 19385  001AFA  0E02               	movlw	2
 19386  001AFC  EC84  F01E         	call	_USBStallEndpoint
 19387                           
 19388                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 19389  001B00  0E00               	movlw	0
 19390  001B02  6E01               	movwf	USBStallEndpoint@dir,c
 19391  001B04  0E02               	movlw	2
 19392  001B06  EC84  F01E         	call	_USBStallEndpoint
 19393                           
 19394                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 19395  001B0A  0012               	return	
 19396  001B0C                     l561:
 19397                           
 19398                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 19399  001B0C  0E01               	movlw	1
 19400  001B0E  6E01               	movwf	USBStallEndpoint@dir,c
 19401  001B10  0E02               	movlw	2
 19402  001B12  EC84  F01E         	call	_USBStallEndpoint
 19403                           
 19404                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 19405  001B16  0E00               	movlw	0
 19406  001B18  6E01               	movwf	USBStallEndpoint@dir,c
 19407  001B1A  0E02               	movlw	2
 19408  001B1C  EC84  F01E         	call	_USBStallEndpoint
 19409                           
 19410                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 19411  001B20  0E00               	movlw	0
 19412  001B22  0100               	movlb	0	; () banked
 19413  001B24  6F97               	movwf	_MSDCBWValid& (0+255),b
 19414                           
 19415                           ; BSR set to: 0
 19416                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 19417                           
 19418                           ; BSR set to: 0
 19419  001B26  0012               	return	
 19420  001B28                     
 19421                           ; BSR set to: 0
 19422                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 19423                           
 19424                           ; BSR set to: 0
 19425  001B28  EC73  F01D         	call	_MSDProcessCommand	;wreg free
 19426  001B2C  0AFF               	xorlw	255
 19427  001B2E  A4D8               	btfss	status,2,c
 19428  001B30  0012               	return	
 19429                           
 19430                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 19431  001B32  0E03               	movlw	3
 19432  001B34  0100               	movlb	0	; () banked
 19433  001B36  6F9F               	movwf	_MSD_State& (0+255),b
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 19437  001B38  0012               	return	
 19438  001B3A                     
 19439                           ; BSR set to: 0
 19440                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 19441                           
 19442                           ; BSR set to: 0
 19443  001B3A  EC73  F01D         	call	_MSDProcessCommand	;wreg free
 19444  001B3E  0AFF               	xorlw	255
 19445  001B40  A4D8               	btfss	status,2,c
 19446  001B42  0012               	return	
 19447                           
 19448                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 19449  001B44  010D               	movlb	13	; () banked
 19450  001B46  518C               	movf	140,w,b	;volatile
 19451  001B48  A4D8               	btfss	status,2,c
 19452  001B4A  D008               	goto	l575
 19453                           
 19454                           ; BSR set to: 13
 19455  001B4C  5188               	movf	136,w,b	;volatile
 19456  001B4E  1189               	iorwf	137,w,b	;volatile
 19457  001B50  118A               	iorwf	138,w,b	;volatile
 19458  001B52  118B               	iorwf	139,w,b	;volatile
 19459  001B54  B4D8               	btfsc	status,2,c
 19460  001B56  D002               	goto	l575
 19461                           
 19462                           ; BSR set to: 13
 19463                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 19464  001B58  0E02               	movlw	2
 19465  001B5A  6F8C               	movwf	140,b	;volatile
 19466  001B5C                     l575:
 19467                           
 19468                           ; BSR set to: 13
 19469                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 19470  001B5C  0E03               	movlw	3
 19471  001B5E  0100               	movlb	0	; () banked
 19472  001B60  6F9F               	movwf	_MSD_State& (0+255),b
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 19476  001B62  0012               	return	
 19477  001B64                     
 19478                           ; BSR set to: 0
 19479                           
 19480                           ; BSR set to: 0
 19481  001B64  C078  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 19482  001B68  C079  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 19483                           
 19484                           ; BSR set to: 0
 19485                           
 19486                           ; BSR set to: 0
 19487                           
 19488                           ; BSR set to: 0
 19489  001B6C  504E               	movf	_MSDTasks$2372,w,c
 19490  001B6E  104F               	iorwf	_MSDTasks$2372+1,w,c
 19491  001B70  B4D8               	btfsc	status,2,c
 19492  001B72  D00A               	goto	l577
 19493                           
 19494                           ; BSR set to: 0
 19495  001B74  C078  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 19496  001B78  C079  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 19497                           
 19498                           ; BSR set to: 0
 19499                           
 19500                           ; BSR set to: 0
 19501                           
 19502                           ; BSR set to: 0
 19503                           
 19504                           ; BSR set to: 0
 19505  001B7C  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 19506  001B80  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 19507  001B84  BEDF               	btfsc	indf2,7,c
 19508  001B86  0012               	return	
 19509  001B88                     l577:
 19510                           
 19511                           ; BSR set to: 0
 19512                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 19513                           
 19514                           ; BSR set to: 0
 19515  001B88  0E01               	movlw	1
 19516  001B8A  6E01               	movwf	USBTransferOnePacket@dir,c
 19517  001B8C  0E80               	movlw	128
 19518  001B8E  6E02               	movwf	USBTransferOnePacket@data,c
 19519  001B90  0E0D               	movlw	13
 19520  001B92  6E03               	movwf	USBTransferOnePacket@data+1,c
 19521  001B94  0E0D               	movlw	13
 19522  001B96  6E04               	movwf	USBTransferOnePacket@len,c
 19523  001B98  0E02               	movlw	2
 19524  001B9A  EC8F  F020         	call	_USBTransferOnePacket
 19525  001B9E  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19526  001BA2  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19527                           
 19528                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 19529  001BA6  0100               	movlb	0	; () banked
 19530  001BA8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 19531  001BAA  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19532  001BAC  B4D8               	btfsc	status,2,c
 19533  001BAE  D006               	goto	u11440
 19534                           
 19535                           ; BSR set to: 0
 19536  001BB0  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19537  001BB4  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19538  001BB8  BEDF               	btfsc	indf2,7,c
 19539  001BBA  D00F               	goto	l586
 19540  001BBC                     u11440:
 19541                           
 19542                           ; BSR set to: 0
 19543                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19544                           
 19545                           ; BSR set to: 0
 19546  001BBC  0E00               	movlw	0
 19547  001BBE  6E01               	movwf	USBTransferOnePacket@dir,c
 19548  001BC0  0E40               	movlw	64
 19549  001BC2  6E02               	movwf	USBTransferOnePacket@data,c
 19550  001BC4  0E0D               	movlw	13
 19551  001BC6  6E03               	movwf	USBTransferOnePacket@data+1,c
 19552  001BC8  0E40               	movlw	64
 19553  001BCA  6E04               	movwf	USBTransferOnePacket@len,c
 19554  001BCC  0E02               	movlw	2
 19555  001BCE  EC8F  F020         	call	_USBTransferOnePacket
 19556  001BD2  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19557  001BD6  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19558  001BDA                     l586:
 19559                           
 19560                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 19561  001BDA  0E00               	movlw	0
 19562  001BDC  0100               	movlb	0	; () banked
 19563  001BDE  6F9F               	movwf	_MSD_State& (0+255),b
 19564                           
 19565                           ;usb_device_msd.c: 513: break;
 19566  001BE0  0012               	return	
 19567  001BE2                     
 19568                           ; BSR set to: 0
 19569                           ;usb_device_msd.c: 518: MSD_State=0x00;
 19570                           
 19571                           ; BSR set to: 0
 19572  001BE2  0E00               	movlw	0
 19573  001BE4  6F9F               	movwf	_MSD_State& (0+255),b
 19574                           
 19575                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 19576  001BE6  0E02               	movlw	2
 19577  001BE8  010D               	movlb	13	; () banked
 19578  001BEA  6F8C               	movwf	140,b	;volatile
 19579                           
 19580                           ; BSR set to: 13
 19581                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 19582  001BEC  0E00               	movlw	0
 19583  001BEE  6E01               	movwf	USBStallEndpoint@dir,c
 19584  001BF0  0E02               	movlw	2
 19585  001BF2  EC84  F01E         	call	_USBStallEndpoint
 19586                           
 19587                           ;usb_device_msd.c: 521: }
 19588  001BF6  0012               	return	
 19589  001BF8                     l554:
 19590  001BF8  0100               	movlb	0	; () banked
 19591  001BFA  519F               	movf	_MSD_State& (0+255),w,b
 19592                           
 19593                           ; Switch size 1, requested type "space"
 19594                           ; Number of cases is 4, Range of values is 0 to 3
 19595                           ; switch strategies available:
 19596                           ; Name         Instructions Cycles
 19597                           ; simple_byte           13     7 (average)
 19598                           ;	Chosen strategy is simple_byte
 19599  001BFC  0A00               	xorlw	0	; case 0
 19600  001BFE  B4D8               	btfsc	status,2,c
 19601  001C00  D6E3               	goto	l555
 19602  001C02  0A01               	xorlw	1	; case 1
 19603  001C04  B4D8               	btfsc	status,2,c
 19604  001C06  D790               	goto	l571
 19605  001C08  0A03               	xorlw	3	; case 2
 19606  001C0A  B4D8               	btfsc	status,2,c
 19607  001C0C  D796               	goto	l573
 19608  001C0E  0A01               	xorlw	1	; case 3
 19609  001C10  B4D8               	btfsc	status,2,c
 19610  001C12  D7A8               	goto	l576
 19611  001C14  D7E6               	goto	l589
 19612  001C16                     __end_of_MSDTasks:
 19613                           	opt stack 0
 19614                           tosu	equ	0xFFF
 19615                           tosh	equ	0xFFE
 19616                           tosl	equ	0xFFD
 19617                           pclath	equ	0xFFA
 19618                           tblptru	equ	0xFF8
 19619                           tblptrh	equ	0xFF7
 19620                           tblptrl	equ	0xFF6
 19621                           tablat	equ	0xFF5
 19622                           prodh	equ	0xFF4
 19623                           prodl	equ	0xFF3
 19624                           intcon	equ	0xFF2
 19625                           intcon3	equ	0xFF0
 19626                           indf0	equ	0xFEF
 19627                           postinc0	equ	0xFEE
 19628                           fsr0h	equ	0xFEA
 19629                           fsr0l	equ	0xFE9
 19630                           wreg	equ	0xFE8
 19631                           indf1	equ	0xFE7
 19632                           postdec1	equ	0xFE5
 19633                           plusw1	equ	0xFE3
 19634                           fsr1h	equ	0xFE2
 19635                           fsr1l	equ	0xFE1
 19636                           indf2	equ	0xFDF
 19637                           postinc2	equ	0xFDE
 19638                           postdec2	equ	0xFDD
 19639                           plusw2	equ	0xFDB
 19640                           fsr2h	equ	0xFDA
 19641                           fsr2l	equ	0xFD9
 19642                           status	equ	0xFD8
 19643                           
 19644 ;; *************** function _MSDProcessCommand *****************
 19645 ;; Defined at:
 19646 ;;		line 553 in file "usb_device_msd.c"
 19647 ;; Parameters:    Size  Location     Type
 19648 ;;		None
 19649 ;; Auto vars:     Size  Location     Type
 19650 ;;		None
 19651 ;; Return value:  Size  Location     Type
 19652 ;;                  1    wreg      unsigned char 
 19653 ;; Registers used:
 19654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19655 ;; Tracked objects:
 19656 ;;		On entry : 0/0
 19657 ;;		On exit  : 0/0
 19658 ;;		Unchanged: 0/0
 19659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19662 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19663 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19664 ;;Total ram usage:        5 bytes
 19665 ;; Hardware stack levels used:    1
 19666 ;; Hardware stack levels required when called:    9
 19667 ;; This function calls:
 19668 ;;		_ExternalFlash_MediaDetect
 19669 ;;		_ExternalFlash_MediaInitialize
 19670 ;;		_MSDProcessCommandMediaAbsent
 19671 ;;		_MSDProcessCommandMediaPresent
 19672 ;; This function is called by:
 19673 ;;		_MSDTasks
 19674 ;; This function uses a non-reentrant model
 19675 ;;
 19676                           
 19677                           	psect	text95
 19678  003AE6                     __ptext95:
 19679                           	opt stack 0
 19680  003AE6                     _MSDProcessCommand:
 19681                           	opt stack 19
 19682                           
 19683                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19684                           
 19685                           ;incstack = 0
 19686  003AE6  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19687  003AEA  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19688  003AEE  D801               	call	u10378
 19689  003AF0  D00A               	goto	u10379
 19690  003AF2                     u10378:
 19691  003AF2  0005               	push	
 19692  003AF4  6EFA               	movwf	pclath,c
 19693  003AF6  0101               	movlb	1	; () banked
 19694  003AF8  51EF               	movf	(_LUN+6)& (0+255),w,b
 19695  003AFA  6EFD               	movwf	tosl,c
 19696  003AFC  51F0               	movf	(_LUN+7)& (0+255),w,b
 19697  003AFE  6EFE               	movwf	tosh,c
 19698  003B00  6AFF               	clrf	tosu,c
 19699  003B02  50FA               	movf	pclath,w,c
 19700  003B04  0012               	return		;indir
 19701  003B06                     u10379:
 19702  003B06  0900               	iorlw	0
 19703  003B08  B4D8               	btfsc	status,2,c
 19704  003B0A  D00C               	goto	u10390
 19705  003B0C  0101               	movlb	1	; () banked
 19706  003B0E  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19707  003B10  0D01               	mullw	1
 19708  003B12  0E99               	movlw	low _SoftDetach
 19709  003B14  24F3               	addwf	prodl,w,c
 19710  003B16  6ED9               	movwf	fsr2l,c
 19711  003B18  0E00               	movlw	high _SoftDetach
 19712  003B1A  20F4               	addwfc	prodh,w,c
 19713  003B1C  6EDA               	movwf	fsr2h,c
 19714  003B1E  04DE               	decf	postinc2,w,c
 19715  003B20  A4D8               	btfss	status,2,c
 19716  003B22  D019               	goto	l592
 19717  003B24                     u10390:
 19718                           
 19719                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19720                           
 19721                           ; BSR set to: 1
 19722  003B24  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19723  003B28  0E01               	movlw	1
 19724  003B2A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19725  003B2C  0E00               	movlw	0
 19726  003B2E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19727  003B30  2A48               	incf	??_MSDProcessCommand,f,c
 19728  003B32  D003               	goto	u10404
 19729  003B34                     u10405:
 19730  003B34  90D8               	bcf	status,0,c
 19731  003B36  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19732  003B38  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19733  003B3A                     u10404:
 19734  003B3A  2E48               	decfsz	??_MSDProcessCommand,f,c
 19735  003B3C  D7FB               	goto	u10405
 19736  003B3E  1C49               	comf	??_MSDProcessCommand+1,w,c
 19737  003B40  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19738  003B42  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19739  003B44  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19740  003B46  504B               	movf	??_MSDProcessCommand+3,w,c
 19741  003B48  0101               	movlb	1	; () banked
 19742  003B4A  1773               	andwf	_gblMediaPresent& (0+255),f,b
 19743  003B4C  504C               	movf	??_MSDProcessCommand+4,w,c
 19744  003B4E  1774               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19745                           
 19746                           ; BSR set to: 1
 19747                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19748  003B50  EC9E  F031         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19749                           
 19750                           ;usb_device_msd.c: 563: }
 19751  003B54  D04E               	goto	l599
 19752  003B56                     l592:
 19753                           
 19754                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19755  003B56  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19756  003B5A  0E01               	movlw	1
 19757  003B5C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19758  003B5E  0E00               	movlw	0
 19759  003B60  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19760  003B62  2A48               	incf	??_MSDProcessCommand,f,c
 19761  003B64  D003               	goto	u10414
 19762  003B66                     u10415:
 19763  003B66  90D8               	bcf	status,0,c
 19764  003B68  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19765  003B6A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19766  003B6C                     u10414:
 19767  003B6C  2E48               	decfsz	??_MSDProcessCommand,f,c
 19768  003B6E  D7FB               	goto	u10415
 19769  003B70  0101               	movlb	1	; () banked
 19770  003B72  5173               	movf	_gblMediaPresent& (0+255),w,b
 19771  003B74  1649               	andwf	??_MSDProcessCommand+1,f,c
 19772  003B76  5174               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19773  003B78  164A               	andwf	??_MSDProcessCommand+2,f,c
 19774  003B7A  5049               	movf	??_MSDProcessCommand+1,w,c
 19775  003B7C  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19776  003B7E  A4D8               	btfss	status,2,c
 19777  003B80  D036               	goto	l596
 19778                           
 19779                           ; BSR set to: 1
 19780                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19781  003B82  C1F7  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19782  003B86  C1F8  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19783  003B8A  D801               	call	u10438
 19784  003B8C  D009               	goto	u10439
 19785  003B8E                     u10438:
 19786  003B8E  0005               	push	
 19787  003B90  6EFA               	movwf	pclath,c
 19788  003B92  51E9               	movf	_LUN& (0+255),w,b
 19789  003B94  6EFD               	movwf	tosl,c
 19790  003B96  51EA               	movf	(_LUN+1)& (0+255),w,b
 19791  003B98  6EFE               	movwf	tosh,c
 19792  003B9A  6AFF               	clrf	tosu,c
 19793  003B9C  50FA               	movf	pclath,w,c
 19794  003B9E  0012               	return		;indir
 19795  003BA0                     u10439:
 19796  003BA0  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19797  003BA2  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19798  003BA4  B4D8               	btfsc	status,2,c
 19799  003BA6  D020               	goto	l597
 19800                           
 19801                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19802  003BA8  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19803  003BAC  0E01               	movlw	1
 19804  003BAE  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19805  003BB0  0E00               	movlw	0
 19806  003BB2  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19807  003BB4  2A48               	incf	??_MSDProcessCommand,f,c
 19808  003BB6  D003               	goto	u10454
 19809  003BB8                     u10455:
 19810  003BB8  90D8               	bcf	status,0,c
 19811  003BBA  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19812  003BBC  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19813  003BBE                     u10454:
 19814  003BBE  2E48               	decfsz	??_MSDProcessCommand,f,c
 19815  003BC0  D7FB               	goto	u10455
 19816  003BC2  5049               	movf	??_MSDProcessCommand+1,w,c
 19817  003BC4  0101               	movlb	1	; () banked
 19818  003BC6  1373               	iorwf	_gblMediaPresent& (0+255),f,b
 19819  003BC8  504A               	movf	??_MSDProcessCommand+2,w,c
 19820  003BCA  1374               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19821                           
 19822                           ; BSR set to: 1
 19823                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19824  003BCC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19825  003BCE  0BF0               	andlw	-16
 19826  003BD0  0906               	iorlw	6
 19827  003BD2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19828                           
 19829                           ; BSR set to: 1
 19830                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19831  003BD4  0E28               	movlw	40
 19832  003BD6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19833                           
 19834                           ; BSR set to: 1
 19835                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19836  003BD8  0E00               	movlw	0
 19837  003BDA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19838                           
 19839                           ; BSR set to: 1
 19840                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19841  003BDC  0E01               	movlw	1
 19842  003BDE  010D               	movlb	13	; () banked
 19843  003BE0  6F8C               	movwf	140,b	;volatile
 19844                           
 19845                           ; BSR set to: 13
 19846                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19847  003BE2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19848                           
 19849                           ;usb_device_msd.c: 589: }
 19850  003BE6  D005               	goto	l599
 19851  003BE8                     l597:
 19852                           
 19853                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19854  003BE8  EC9E  F031         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19855                           
 19856                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19857  003BEC  D002               	goto	l599
 19858  003BEE                     l596:
 19859                           
 19860                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19861  003BEE  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19862  003BF2                     l599:
 19863                           
 19864                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19865  003BF2  0100               	movlb	0	; () banked
 19866  003BF4  519E               	movf	_MSDCommandState& (0+255),w,b
 19867  003BF6  0012               	return	
 19868  003BF8                     __end_of_MSDProcessCommand:
 19869                           	opt stack 0
 19870                           tosu	equ	0xFFF
 19871                           tosh	equ	0xFFE
 19872                           tosl	equ	0xFFD
 19873                           pclath	equ	0xFFA
 19874                           tblptru	equ	0xFF8
 19875                           tblptrh	equ	0xFF7
 19876                           tblptrl	equ	0xFF6
 19877                           tablat	equ	0xFF5
 19878                           prodh	equ	0xFF4
 19879                           prodl	equ	0xFF3
 19880                           intcon	equ	0xFF2
 19881                           intcon3	equ	0xFF0
 19882                           indf0	equ	0xFEF
 19883                           postinc0	equ	0xFEE
 19884                           fsr0h	equ	0xFEA
 19885                           fsr0l	equ	0xFE9
 19886                           wreg	equ	0xFE8
 19887                           indf1	equ	0xFE7
 19888                           postdec1	equ	0xFE5
 19889                           plusw1	equ	0xFE3
 19890                           fsr1h	equ	0xFE2
 19891                           fsr1l	equ	0xFE1
 19892                           indf2	equ	0xFDF
 19893                           postinc2	equ	0xFDE
 19894                           postdec2	equ	0xFDD
 19895                           plusw2	equ	0xFDB
 19896                           fsr2h	equ	0xFDA
 19897                           fsr2l	equ	0xFD9
 19898                           status	equ	0xFD8
 19899                           
 19900 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19901 ;; Defined at:
 19902 ;;		line 635 in file "usb_device_msd.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;		None
 19905 ;; Auto vars:     Size  Location     Type
 19906 ;;		None
 19907 ;; Return value:  Size  Location     Type
 19908 ;;                  1    wreg      void 
 19909 ;; Registers used:
 19910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19911 ;; Tracked objects:
 19912 ;;		On entry : 0/0
 19913 ;;		On exit  : 0/0
 19914 ;;		Unchanged: 0/0
 19915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19920 ;;Total ram usage:        0 bytes
 19921 ;; Hardware stack levels used:    1
 19922 ;; Hardware stack levels required when called:    8
 19923 ;; This function calls:
 19924 ;;		_MSDErrorHandler
 19925 ;;		_MSDProcessCommandMediaPresent
 19926 ;;		_ResetSenseData
 19927 ;; This function is called by:
 19928 ;;		_MSDProcessCommand
 19929 ;; This function uses a non-reentrant model
 19930 ;;
 19931                           
 19932                           	psect	text96
 19933  00633C                     __ptext96:
 19934                           	opt stack 0
 19935  00633C                     _MSDProcessCommandMediaAbsent:
 19936                           	opt stack 19
 19937                           
 19938                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;incstack = 0
 19942  00633C  D01E               	goto	l603
 19943  00633E                     
 19944                           ;usb_device_msd.c: 646: ResetSenseData();
 19945  00633E  ECCF  F031         	call	_ResetSenseData	;wreg free
 19946                           
 19947                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19948  006342  0101               	movlb	1	; () banked
 19949  006344  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19950  006346  0BF0               	andlw	-16
 19951  006348  0902               	iorlw	2
 19952  00634A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19953                           
 19954                           ; BSR set to: 1
 19955                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19956  00634C  0E3A               	movlw	58
 19957  00634E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19958                           
 19959                           ; BSR set to: 1
 19960                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19961  006350  0E00               	movlw	0
 19962  006352  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19963                           
 19964                           ; BSR set to: 1
 19965                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19966  006354  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19967                           
 19968                           ;usb_device_msd.c: 655: break;
 19969  006358  0012               	return	
 19970  00635A                     
 19971                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19972  00635A  0E01               	movlw	1
 19973  00635C  010D               	movlb	13	; () banked
 19974  00635E  6F8C               	movwf	140,b	;volatile
 19975                           
 19976                           ; BSR set to: 13
 19977                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19978  006360  0100               	movlb	0	; () banked
 19979  006362  699E               	setf	_MSDCommandState& (0+255),b
 19980                           
 19981                           ;usb_device_msd.c: 665: break;
 19982  006364  0012               	return	
 19983  006366                     
 19984                           ; BSR set to: 0
 19985                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19986                           
 19987                           ; BSR set to: 0
 19988  006366  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19989                           
 19990                           ;usb_device_msd.c: 671: break;
 19991  00636A  0012               	return	
 19992  00636C                     
 19993                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19994  00636C  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19995                           
 19996                           ;usb_device_msd.c: 677: break;
 19997  006370  0012               	return	
 19998  006372                     
 19999                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 20000  006372  0E7F               	movlw	127
 20001  006374  EC8B  F01F         	call	_MSDErrorHandler
 20002                           
 20003                           ;usb_device_msd.c: 685: }
 20004                           
 20005                           ;usb_device_msd.c: 684: break;
 20006  006378  0012               	return	
 20007  00637A                     l603:
 20008  00637A  0100               	movlb	0	; () banked
 20009  00637C  519E               	movf	_MSDCommandState& (0+255),w,b
 20010                           
 20011                           ; Switch size 1, requested type "space"
 20012                           ; Number of cases is 5, Range of values is 0 to 253
 20013                           ; switch strategies available:
 20014                           ; Name         Instructions Cycles
 20015                           ; simple_byte           16     9 (average)
 20016                           ;	Chosen strategy is simple_byte
 20017  00637E  0A00               	xorlw	0	; case 0
 20018  006380  B4D8               	btfsc	status,2,c
 20019  006382  D7EB               	goto	l606
 20020  006384  0A03               	xorlw	3	; case 3
 20021  006386  B4D8               	btfsc	status,2,c
 20022  006388  D7DA               	goto	l604
 20023  00638A  0A11               	xorlw	17	; case 18
 20024  00638C  B4D8               	btfsc	status,2,c
 20025  00638E  D7EB               	goto	l608
 20026  006390  0A0C               	xorlw	12	; case 30
 20027  006392  B4D8               	btfsc	status,2,c
 20028  006394  D7E2               	goto	l606
 20029  006396  0AE3               	xorlw	227	; case 253
 20030  006398  B4D8               	btfsc	status,2,c
 20031  00639A  D7E8               	goto	l609
 20032  00639C  D7EA               	goto	l610
 20033  00639E                     __end_of_MSDProcessCommandMediaAbsent:
 20034                           	opt stack 0
 20035                           tosu	equ	0xFFF
 20036                           tosh	equ	0xFFE
 20037                           tosl	equ	0xFFD
 20038                           pclath	equ	0xFFA
 20039                           tblptru	equ	0xFF8
 20040                           tblptrh	equ	0xFF7
 20041                           tblptrl	equ	0xFF6
 20042                           tablat	equ	0xFF5
 20043                           prodh	equ	0xFF4
 20044                           prodl	equ	0xFF3
 20045                           intcon	equ	0xFF2
 20046                           intcon3	equ	0xFF0
 20047                           indf0	equ	0xFEF
 20048                           postinc0	equ	0xFEE
 20049                           fsr0h	equ	0xFEA
 20050                           fsr0l	equ	0xFE9
 20051                           wreg	equ	0xFE8
 20052                           indf1	equ	0xFE7
 20053                           postdec1	equ	0xFE5
 20054                           plusw1	equ	0xFE3
 20055                           fsr1h	equ	0xFE2
 20056                           fsr1l	equ	0xFE1
 20057                           indf2	equ	0xFDF
 20058                           postinc2	equ	0xFDE
 20059                           postdec2	equ	0xFDD
 20060                           plusw2	equ	0xFDB
 20061                           fsr2h	equ	0xFDA
 20062                           fsr2l	equ	0xFD9
 20063                           status	equ	0xFD8
 20064                           
 20065 ;; *************** function _MSDProcessCommandMediaPresent *****************
 20066 ;; Defined at:
 20067 ;;		line 712 in file "usb_device_msd.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;		None
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;  capacity        4   66[COMRAM] struct .
 20072 ;;  sectorSize      4   62[COMRAM] struct .
 20073 ;;  i               1   70[COMRAM] unsigned char 
 20074 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 20075 ;; Return value:  Size  Location     Type
 20076 ;;                  1    wreg      void 
 20077 ;; Registers used:
 20078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 20079 ;; Tracked objects:
 20080 ;;		On entry : 0/0
 20081 ;;		On exit  : 0/0
 20082 ;;		Unchanged: 0/0
 20083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20085 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20087 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20088 ;;Total ram usage:       14 bytes
 20089 ;; Hardware stack levels used:    1
 20090 ;; Hardware stack levels required when called:    7
 20091 ;; This function calls:
 20092 ;;		_ExternalFlash_CapacityRead
 20093 ;;		_ExternalFlash_SectorSizeRead
 20094 ;;		_ExternalFlash_WriteProtectStateGet
 20095 ;;		_MSDCheckForErrorCases
 20096 ;;		_MSDComputeDeviceInAndResidue
 20097 ;;		_MSDErrorHandler
 20098 ;;		_MSDReadHandler
 20099 ;;		_MSDWriteHandler
 20100 ;;		_ResetSenseData
 20101 ;;		_USBTransferOnePacket
 20102 ;;		_memcpy
 20103 ;; This function is called by:
 20104 ;;		_MSDProcessCommand
 20105 ;;		_MSDProcessCommandMediaAbsent
 20106 ;; This function uses a non-reentrant model
 20107 ;;
 20108                           
 20109                           	psect	text97
 20110  00049C                     __ptext97:
 20111                           	opt stack 0
 20112  00049C                     _MSDProcessCommandMediaPresent:
 20113                           	opt stack 20
 20114                           
 20115                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 20116                           
 20117                           ;incstack = 0
 20118  00049C  D1B9               	goto	l614
 20119  00049E                     
 20120                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 20121  00049E  EC09  F012         	call	_MSDReadHandler	;wreg free
 20122  0004A2  0900               	iorlw	0
 20123  0004A4  A4D8               	btfss	status,2,c
 20124  0004A6  0012               	return	
 20125                           
 20126                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 20127  0004A8  0100               	movlb	0	; () banked
 20128  0004AA  699E               	setf	_MSDCommandState& (0+255),b
 20129                           
 20130                           ; BSR set to: 0
 20131                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 20132  0004AC  0012               	return	
 20133  0004AE                     
 20134                           ; BSR set to: 0
 20135                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 20136                           
 20137                           ; BSR set to: 0
 20138  0004AE  EC0F  F009         	call	_MSDWriteHandler	;wreg free
 20139  0004B2  0900               	iorlw	0
 20140  0004B4  A4D8               	btfss	status,2,c
 20141  0004B6  0012               	return	
 20142                           
 20143                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 20144  0004B8  0100               	movlb	0	; () banked
 20145  0004BA  699E               	setf	_MSDCommandState& (0+255),b
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 20149  0004BC  0012               	return	
 20150  0004BE                     
 20151                           ; BSR set to: 0
 20152                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 20153                           
 20154                           ; BSR set to: 0
 20155  0004BE  0598               	decf	_MSDHostNoData& (0+255),w,b
 20156  0004C0  A4D8               	btfss	status,2,c
 20157  0004C2  D002               	goto	l621
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 20161  0004C4  699E               	setf	_MSDCommandState& (0+255),b
 20162                           
 20163                           ;usb_device_msd.c: 751: break;
 20164  0004C6  0012               	return	
 20165  0004C8                     l621:
 20166                           
 20167                           ; BSR set to: 0
 20168                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 20169  0004C8  C112  F087         	movff	_gblCBW+18,_TransferLength+1
 20170                           
 20171                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 20172  0004CC  C113  F086         	movff	_gblCBW+19,_TransferLength
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 20176  0004D0  C086  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 20177  0004D4  C087  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 20178  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 20179  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 20180  0004DC  EC72  F022         	call	_MSDCheckForErrorCases	;wreg free
 20181  0004E0  0900               	iorlw	0
 20182  0004E2  A4D8               	btfss	status,2,c
 20183  0004E4  0012               	return	
 20184                           
 20185                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 20186                           
 20187                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 20188  0004E6  0E00               	movlw	0
 20189  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20190  0004EA  0E24               	movlw	36
 20191  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20192  0004EE  EC0B  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20193                           
 20194                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 20195  0004F2  0E00               	movlw	0
 20196  0004F4  6E01               	movwf	memcpy@d1,c
 20197  0004F6  0E06               	movlw	6
 20198  0004F8  6E02               	movwf	memcpy@d1+1,c
 20199  0004FA  0E22               	movlw	low _inq_resp
 20200  0004FC  6E03               	movwf	memcpy@s1,c
 20201  0004FE  0E8F               	movlw	high _inq_resp
 20202  000500  6E04               	movwf	memcpy@s1+1,c
 20203  000502  5003               	movf	memcpy@s1,w,c
 20204  000504  1004               	iorwf	memcpy@s1+1,w,c
 20205  000506  A4D8               	btfss	status,2,c
 20206  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 20207  00050A  6E05               	movwf	memcpy@s1+2,c
 20208  00050C  0E00               	movlw	0
 20209  00050E  6E07               	movwf	memcpy@n+1,c
 20210  000510  0E24               	movlw	36
 20211  000512  6E06               	movwf	memcpy@n,c
 20212  000514  EC07  F031         	call	_memcpy	;wreg free
 20213                           
 20214                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 20215  000518  0EFD               	movlw	253
 20216  00051A  0100               	movlb	0	; () banked
 20217  00051C  6F9E               	movwf	_MSDCommandState& (0+255),b
 20218                           
 20219                           ;usb_device_msd.c: 773: break;
 20220  00051E  0012               	return	
 20221  000520                     
 20222                           ; BSR set to: 0
 20223                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 20224                           
 20225                           ; BSR set to: 0
 20226  000520  C1F7  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 20227  000524  C1F8  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 20228  000528  D801               	call	u9508
 20229  00052A  D00A               	goto	u9509
 20230  00052C                     u9508:
 20231  00052C  0005               	push	
 20232  00052E  6EFA               	movwf	pclath,c
 20233  000530  0101               	movlb	1	; () banked
 20234  000532  51EB               	movf	(_LUN+2)& (0+255),w,b
 20235  000534  6EFD               	movwf	tosl,c
 20236  000536  51EC               	movf	(_LUN+3)& (0+255),w,b
 20237  000538  6EFE               	movwf	tosh,c
 20238  00053A  6AFF               	clrf	tosu,c
 20239  00053C  50FA               	movf	pclath,w,c
 20240  00053E  0012               	return		;indir
 20241  000540                     u9509:
 20242  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 20243  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 20244  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 20245  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 20246                           
 20247                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 20248  000550  C1F7  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 20249  000554  C1F8  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 20250  000558  D801               	call	u9518
 20251  00055A  D00A               	goto	u9519
 20252  00055C                     u9518:
 20253  00055C  0005               	push	
 20254  00055E  6EFA               	movwf	pclath,c
 20255  000560  0101               	movlb	1	; () banked
 20256  000562  51ED               	movf	(_LUN+4)& (0+255),w,b
 20257  000564  6EFD               	movwf	tosl,c
 20258  000566  51EE               	movf	(_LUN+5)& (0+255),w,b
 20259  000568  6EFE               	movwf	tosh,c
 20260  00056A  6AFF               	clrf	tosu,c
 20261  00056C  50FA               	movf	pclath,w,c
 20262  00056E  0012               	return		;indir
 20263  000570                     u9519:
 20264  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 20265  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 20266  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 20267  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 20268                           
 20269                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 20270  00057C  EE26 F000          	lfsr	2,1536
 20271  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 20272                           
 20273                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 20274  000584  EE26 F001          	lfsr	2,1537	;volatile
 20275  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 20276                           
 20277                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 20278  00058C  EE26 F002          	lfsr	2,1538	;volatile
 20279  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 20280                           
 20281                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 20282  000594  EE26 F003          	lfsr	2,1539	;volatile
 20283  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 20284                           
 20285                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 20286  00059C  EE26 F004          	lfsr	2,1540	;volatile
 20287  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 20288                           
 20289                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 20290  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 20291  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 20292                           
 20293                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 20294  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 20295  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 20296                           
 20297                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 20298  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 20299  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 20300                           
 20301                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 20302  0005BC  0E00               	movlw	0
 20303  0005BE  0100               	movlb	0	; () banked
 20304  0005C0  6F87               	movwf	(_TransferLength+1)& (0+255),b
 20305  0005C2  0E08               	movlw	8
 20306  0005C4  6F86               	movwf	_TransferLength& (0+255),b
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 20310  0005C6  0E00               	movlw	0
 20311  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20312  0005CA  0E08               	movlw	8
 20313  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20314  0005CE  EC0B  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20315                           
 20316                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 20317  0005D2  0EFD               	movlw	253
 20318  0005D4  0100               	movlb	0	; () banked
 20319  0005D6  6F9E               	movwf	_MSDCommandState& (0+255),b
 20320                           
 20321                           ;usb_device_msd.c: 802: break;
 20322  0005D8  0012               	return	
 20323  0005DA                     
 20324                           ; BSR set to: 0
 20325                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 20326                           
 20327                           ; BSR set to: 0
 20328  0005DA  0598               	decf	_MSDHostNoData& (0+255),w,b
 20329  0005DC  A4D8               	btfss	status,2,c
 20330  0005DE  D002               	goto	l625
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 20334  0005E0  699E               	setf	_MSDCommandState& (0+255),b
 20335                           
 20336                           ;usb_device_msd.c: 814: break;
 20337  0005E2  0012               	return	
 20338  0005E4                     l625:
 20339                           
 20340                           ; BSR set to: 0
 20341                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 20342                           
 20343                           ; BSR set to: 0
 20344  0005E4  0E00               	movlw	0
 20345  0005E6  6F87               	movwf	(_TransferLength+1)& (0+255),b
 20346  0005E8  0E12               	movlw	18
 20347  0005EA  6F86               	movwf	_TransferLength& (0+255),b
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 20351  0005EC  0E00               	movlw	0
 20352  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20353  0005F0  0E12               	movlw	18
 20354  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20355  0005F4  EC0B  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20356                           
 20357                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 20358  0005F8  0E00               	movlw	0
 20359  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20360  0005FC                     l12059:
 20361  0005FC  0E11               	movlw	17
 20362  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 20363  000600  D001               	goto	l626
 20364  000602  D014               	goto	u9540
 20365  000604                     l626:
 20366                           
 20367                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 20368  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20369  000606  0D01               	mullw	1
 20370  000608  0E1F               	movlw	low _gblSenseData
 20371  00060A  24F3               	addwf	prodl,w,c
 20372  00060C  6ED9               	movwf	fsr2l,c
 20373  00060E  0E01               	movlw	high _gblSenseData
 20374  000610  20F4               	addwfc	prodh,w,c
 20375  000612  6EDA               	movwf	fsr2h,c
 20376  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20377  000616  0D01               	mullw	1
 20378  000618  0E00               	movlw	0
 20379  00061A  24F3               	addwf	prodl,w,c
 20380  00061C  6EE1               	movwf	fsr1l,c
 20381  00061E  0E06               	movlw	6
 20382  000620  20F4               	addwfc	prodh,w,c
 20383  000622  6EE2               	movwf	fsr1h,c
 20384  000624  CFDF FFE7          	movff	indf2,indf1
 20385  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20386  00062A  D7E8               	goto	l12059
 20387  00062C                     u9540:
 20388                           
 20389                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 20390  00062C  0EFD               	movlw	253
 20391  00062E  0100               	movlb	0	; () banked
 20392  000630  6F9E               	movwf	_MSDCommandState& (0+255),b
 20393                           
 20394                           ;usb_device_msd.c: 827: break;
 20395  000632  0012               	return	
 20396  000634                     l628:
 20397                           
 20398                           ; BSR set to: 0
 20399                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 20400  000634  0E03               	movlw	3
 20401  000636  CFE8 F600          	movff	wreg,1536
 20402                           
 20403                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 20404  00063A  0E00               	movlw	0
 20405  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 20406                           
 20407                           ; BSR set to: 0
 20408                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 20409  000640  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20410  000644  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20411  000648  D801               	call	u9558
 20412  00064A  D00A               	goto	u9559
 20413  00064C                     u9558:
 20414  00064C  0005               	push	
 20415  00064E  6EFA               	movwf	pclath,c
 20416  000650  0101               	movlb	1	; () banked
 20417  000652  51F3               	movf	(_LUN+10)& (0+255),w,b
 20418  000654  6EFD               	movwf	tosl,c
 20419  000656  51F4               	movf	(_LUN+11)& (0+255),w,b
 20420  000658  6EFE               	movwf	tosh,c
 20421  00065A  6AFF               	clrf	tosu,c
 20422  00065C  50FA               	movf	pclath,w,c
 20423  00065E  0012               	return		;indir
 20424  000660                     u9559:
 20425  000660  0900               	iorlw	0
 20426  000662  A4D8               	btfss	status,2,c
 20427  000664  D004               	goto	l630
 20428  000666  0E00               	movlw	0
 20429  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20430  00066A  0E00               	movlw	0
 20431  00066C  D003               	goto	L20
 20432  00066E                     l630:
 20433  00066E  0E00               	movlw	0
 20434  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20435  000672  0E80               	movlw	128
 20436  000674                     L20:
 20437  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 20438  000676  EE26 F002          	lfsr	2,1538	;volatile
 20439  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 20440                           
 20441                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 20442  00067E  0E00               	movlw	0
 20443  000680  CFE8 F603          	movff	wreg,1539	;volatile
 20444                           
 20445                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 20446  000684  0E00               	movlw	0
 20447  000686  0100               	movlb	0	; () banked
 20448  000688  6F87               	movwf	(_TransferLength+1)& (0+255),b
 20449  00068A  0E04               	movlw	4
 20450  00068C  6F86               	movwf	_TransferLength& (0+255),b
 20451                           
 20452                           ; BSR set to: 0
 20453                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 20454  00068E  0E00               	movlw	0
 20455  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20456  000692  0E04               	movlw	4
 20457  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20458  000696  EC0B  F02C         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20459                           
 20460                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 20461  00069A  0EFD               	movlw	253
 20462  00069C  0100               	movlb	0	; () banked
 20463  00069E  6F9E               	movwf	_MSDCommandState& (0+255),b
 20464                           
 20465                           ;usb_device_msd.c: 839: break;
 20466  0006A0  0012               	return	
 20467  0006A2                     
 20468                           ; BSR set to: 0
 20469                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 20470                           
 20471                           ; BSR set to: 0
 20472  0006A2  0101               	movlb	1	; () banked
 20473  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20474  0006A6  0BF0               	andlw	-16
 20475  0006A8  0905               	iorlw	5
 20476  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20477                           
 20478                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 20479  0006AC  0E20               	movlw	32
 20480  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20481                           
 20482                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 20483  0006B0  0E00               	movlw	0
 20484  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20485                           
 20486                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 20487  0006B4  0E01               	movlw	1
 20488  0006B6  010D               	movlb	13	; () banked
 20489  0006B8  6F8C               	movwf	140,b	;volatile
 20490                           
 20491                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 20492  0006BA  0E00               	movlw	0
 20493  0006BC  6F88               	movwf	136,b	;volatile
 20494  0006BE  0E00               	movlw	0
 20495  0006C0  6F89               	movwf	137,b	;volatile
 20496  0006C2  0E00               	movlw	0
 20497  0006C4  6F8A               	movwf	138,b	;volatile
 20498  0006C6  0E00               	movlw	0
 20499  0006C8  6F8B               	movwf	139,b	;volatile
 20500                           
 20501                           ; BSR set to: 13
 20502                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 20503  0006CA  0100               	movlb	0	; () banked
 20504  0006CC  699E               	setf	_MSDCommandState& (0+255),b
 20505                           
 20506                           ;usb_device_msd.c: 848: break;
 20507  0006CE  0012               	return	
 20508  0006D0                     
 20509                           ; BSR set to: 0
 20510                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 20511                           
 20512                           ; BSR set to: 0
 20513  0006D0  0E00               	movlw	0
 20514  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 20515  0006D4  0E00               	movlw	0
 20516  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 20517  0006D8  0E00               	movlw	0
 20518  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 20519  0006DC  0E00               	movlw	0
 20520  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 20521  0006E0  EC72  F022         	call	_MSDCheckForErrorCases	;wreg free
 20522  0006E4  0900               	iorlw	0
 20523  0006E6  A4D8               	btfss	status,2,c
 20524  0006E8  0012               	return	
 20525                           
 20526                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 20527                           
 20528                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 20529  0006EA  0101               	movlb	1	; () banked
 20530  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20531  0006EE  0B0F               	andlw	15
 20532  0006F0  0A06               	xorlw	6
 20533  0006F2  A4D8               	btfss	status,2,c
 20534  0006F4  D007               	goto	l636
 20535                           
 20536                           ; BSR set to: 1
 20537  0006F6  010D               	movlb	13	; () banked
 20538  0006F8  058C               	decf	140,w,b	;volatile
 20539  0006FA  A4D8               	btfss	status,2,c
 20540  0006FC  D003               	goto	l636
 20541                           
 20542                           ; BSR set to: 13
 20543                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 20544  0006FE  0100               	movlb	0	; () banked
 20545  000700  699E               	setf	_MSDCommandState& (0+255),b
 20546                           
 20547                           ;usb_device_msd.c: 870: }
 20548  000702  0012               	return	
 20549  000704                     l636:
 20550                           
 20551                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 20552                           
 20553                           ; BSR set to: 0
 20554  000704  ECCF  F031         	call	_ResetSenseData	;wreg free
 20555                           
 20556                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 20557  000708  0E00               	movlw	0
 20558  00070A  010D               	movlb	13	; () banked
 20559  00070C  6F88               	movwf	136,b	;volatile
 20560  00070E  0E00               	movlw	0
 20561  000710  6F89               	movwf	137,b	;volatile
 20562  000712  0E00               	movlw	0
 20563  000714  6F8A               	movwf	138,b	;volatile
 20564  000716  0E00               	movlw	0
 20565  000718  6F8B               	movwf	139,b	;volatile
 20566                           
 20567                           ; BSR set to: 13
 20568                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 20569  00071A  0100               	movlb	0	; () banked
 20570  00071C  699E               	setf	_MSDCommandState& (0+255),b
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 20574  00071E  0012               	return	
 20575  000720                     
 20576                           ; BSR set to: 0
 20577                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 20578                           
 20579                           ; BSR set to: 0
 20580                           
 20581                           ; BSR set to: 0
 20582  000720  0E00               	movlw	0
 20583  000722  010D               	movlb	13	; () banked
 20584  000724  6F88               	movwf	136,b	;volatile
 20585  000726  0E00               	movlw	0
 20586  000728  6F89               	movwf	137,b	;volatile
 20587  00072A  0E00               	movlw	0
 20588  00072C  6F8A               	movwf	138,b	;volatile
 20589  00072E  0E00               	movlw	0
 20590  000730  6F8B               	movwf	139,b	;volatile
 20591                           
 20592                           ; BSR set to: 13
 20593                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 20594  000732  0100               	movlb	0	; () banked
 20595  000734  699E               	setf	_MSDCommandState& (0+255),b
 20596                           
 20597                           ;usb_device_msd.c: 885: break;
 20598  000736  0012               	return	
 20599  000738                     
 20600                           ; BSR set to: 0
 20601                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 20602                           
 20603                           ; BSR set to: 0
 20604  000738  5188               	movf	_USBMSDInHandle& (0+255),w,b
 20605  00073A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20606  00073C  B4D8               	btfsc	status,2,c
 20607  00073E  D006               	goto	u9610
 20608                           
 20609                           ; BSR set to: 0
 20610  000740  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 20611  000744  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20612  000748  BEDF               	btfsc	indf2,7,c
 20613  00074A  0012               	return	
 20614  00074C                     u9610:
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 20618                           
 20619                           ; BSR set to: 0
 20620  00074C  0101               	movlb	1	; () banked
 20621  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20622  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20623  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20624  000754  E104               	bnz	u9620
 20625  000756  0E40               	movlw	64
 20626  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 20627  00075A  A0D8               	btfss	status,0,c
 20628  00075C  D009               	goto	l644
 20629  00075E                     u9620:
 20630                           
 20631                           ; BSR set to: 1
 20632                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 20633  00075E  0E40               	movlw	64
 20634  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 20635                           
 20636                           ; BSR set to: 1
 20637                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 20638  000762  0E40               	movlw	64
 20639  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20640  000766  0E00               	movlw	0
 20641  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20642  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20643  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20644                           
 20645                           ;usb_device_msd.c: 900: }
 20646  00076E  D00A               	goto	l645
 20647  000770                     l644:
 20648                           
 20649                           ; BSR set to: 1
 20650                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20651  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20652                           
 20653                           ; BSR set to: 1
 20654                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20655  000774  0E00               	movlw	0
 20656  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20657  000778  0E00               	movlw	0
 20658  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20659  00077C  0E00               	movlw	0
 20660  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20661  000780  0E00               	movlw	0
 20662  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20663  000784                     l645:
 20664                           
 20665                           ; BSR set to: 1
 20666                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20667                           
 20668                           ; BSR set to: 1
 20669  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20670  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20671  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20672  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20673  00078C  0100               	movlb	0	; () banked
 20674  00078E  5D86               	subwf	_TransferLength& (0+255),w,b
 20675  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20676  000792  5987               	subwfb	(_TransferLength+1)& (0+255),w,b
 20677  000794  A0D8               	btfss	status,0,c
 20678  000796  D005               	goto	l646
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20682  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20683  00079A  5F86               	subwf	_TransferLength& (0+255),f,b
 20684  00079C  0E00               	movlw	0
 20685  00079E  5B87               	subwfb	(_TransferLength+1)& (0+255),f,b
 20686                           
 20687                           ;usb_device_msd.c: 918: }
 20688  0007A0  D01A               	goto	u9650
 20689  0007A2                     l646:
 20690                           
 20691                           ; BSR set to: 0
 20692                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20693                           
 20694                           ; BSR set to: 0
 20695  0007A2  0E00               	movlw	0
 20696  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20697  0007A6  D013               	goto	l648
 20698  0007A8                     
 20699                           ; BSR set to: 0
 20700                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20701                           
 20702                           ; BSR set to: 0
 20703  0007A8  5186               	movf	_TransferLength& (0+255),w,b
 20704  0007AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 20705  0007AC  B4D8               	btfsc	status,2,c
 20706  0007AE  D004               	goto	l650
 20707                           
 20708                           ; BSR set to: 0
 20709                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20710  0007B0  0786               	decf	_TransferLength& (0+255),f,b
 20711  0007B2  A0D8               	btfss	status,0,c
 20712  0007B4  0787               	decf	(_TransferLength+1)& (0+255),f,b
 20713                           
 20714                           ;usb_device_msd.c: 932: }
 20715  0007B6  D00A               	goto	l651
 20716  0007B8                     l650:
 20717                           
 20718                           ; BSR set to: 0
 20719                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20720                           
 20721                           ; BSR set to: 0
 20722  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20723  0007BA  0D01               	mullw	1
 20724  0007BC  0E00               	movlw	0
 20725  0007BE  24F3               	addwf	prodl,w,c
 20726  0007C0  6ED9               	movwf	fsr2l,c
 20727  0007C2  0E06               	movlw	6
 20728  0007C4  20F4               	addwfc	prodh,w,c
 20729  0007C6  6EDA               	movwf	fsr2h,c
 20730  0007C8  0E00               	movlw	0
 20731  0007CA  6EDF               	movwf	indf2,c
 20732  0007CC                     l651:
 20733                           
 20734                           ; BSR set to: 0
 20735                           
 20736                           ; BSR set to: 0
 20737  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20738  0007CE                     l648:
 20739                           
 20740                           ; BSR set to: 0
 20741                           
 20742                           ; BSR set to: 0
 20743  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20744  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20745  0007D2  A0D8               	btfss	status,0,c
 20746  0007D4  D7E9               	goto	l649
 20747  0007D6                     u9650:
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20751                           
 20752                           ; BSR set to: 0
 20753                           
 20754                           ; BSR set to: 0
 20755  0007D6  0E01               	movlw	1
 20756  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20757  0007DA  0E00               	movlw	0
 20758  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20759  0007DE  0E06               	movlw	6
 20760  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20761  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20762  0007E6  0E02               	movlw	2
 20763  0007E8  EC8F  F020         	call	_USBTransferOnePacket
 20764  0007EC  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20765  0007F0  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20766                           
 20767                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20768  0007F4  0101               	movlb	1	; () banked
 20769  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20770  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20771  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20772  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20773  0007FE  A4D8               	btfss	status,2,c
 20774  000800  0012               	return	
 20775                           
 20776                           ; BSR set to: 1
 20777                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20778  000802  0100               	movlb	0	; () banked
 20779  000804  699E               	setf	_MSDCommandState& (0+255),b
 20780                           
 20781                           ; BSR set to: 0
 20782                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20783                           
 20784                           ; BSR set to: 0
 20785                           
 20786                           ;usb_device_msd.c: 949: break;
 20787  000806  0012               	return	
 20788  000808                     
 20789                           ; BSR set to: 0
 20790                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20791                           
 20792                           ; BSR set to: 0
 20793                           
 20794                           ;usb_device_msd.c: 954: default:
 20795                           
 20796                           ; BSR set to: 0
 20797  000808  0E7F               	movlw	127
 20798  00080A  EC8B  F01F         	call	_MSDErrorHandler
 20799                           
 20800                           ;usb_device_msd.c: 960: }
 20801                           
 20802                           ;usb_device_msd.c: 959: break;
 20803  00080E  0012               	return	
 20804  000810                     l614:
 20805  000810  0100               	movlb	0	; () banked
 20806  000812  519E               	movf	_MSDCommandState& (0+255),w,b
 20807                           
 20808                           ; Switch size 1, requested type "space"
 20809                           ; Number of cases is 12, Range of values is 0 to 254
 20810                           ; switch strategies available:
 20811                           ; Name         Instructions Cycles
 20812                           ; simple_byte           37    19 (average)
 20813                           ;	Chosen strategy is simple_byte
 20814  000814  0A00               	xorlw	0	; case 0
 20815  000816  B4D8               	btfsc	status,2,c
 20816  000818  D75B               	goto	l634
 20817  00081A  0A03               	xorlw	3	; case 3
 20818  00081C  B4D8               	btfsc	status,2,c
 20819  00081E  D6DD               	goto	l624
 20820  000820  0A11               	xorlw	17	; case 18
 20821  000822  B4D8               	btfsc	status,2,c
 20822  000824  D64C               	goto	l620
 20823  000826  0A08               	xorlw	8	; case 26
 20824  000828  B4D8               	btfsc	status,2,c
 20825  00082A  D704               	goto	l628
 20826  00082C  0A01               	xorlw	1	; case 27
 20827  00082E  B4D8               	btfsc	status,2,c
 20828  000830  D777               	goto	l638
 20829  000832  0A05               	xorlw	5	; case 30
 20830  000834  B4D8               	btfsc	status,2,c
 20831  000836  D735               	goto	l633
 20832  000838  0A3B               	xorlw	59	; case 37
 20833  00083A  B4D8               	btfsc	status,2,c
 20834  00083C  D671               	goto	l623
 20835  00083E  0A0D               	xorlw	13	; case 40
 20836  000840  B4D8               	btfsc	status,2,c
 20837  000842  D62D               	goto	l615
 20838  000844  0A02               	xorlw	2	; case 42
 20839  000846  B4D8               	btfsc	status,2,c
 20840  000848  D632               	goto	l618
 20841  00084A  0A05               	xorlw	5	; case 47
 20842  00084C  B4D8               	btfsc	status,2,c
 20843  00084E  D768               	goto	l638
 20844  000850  0AD2               	xorlw	210	; case 253
 20845  000852  B4D8               	btfsc	status,2,c
 20846  000854  D771               	goto	l640
 20847  000856  0A03               	xorlw	3	; case 254
 20848  000858  D7D7               	goto	l654
 20849  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20850                           	opt stack 0
 20851                           tosu	equ	0xFFF
 20852                           tosh	equ	0xFFE
 20853                           tosl	equ	0xFFD
 20854                           pclath	equ	0xFFA
 20855                           tblptru	equ	0xFF8
 20856                           tblptrh	equ	0xFF7
 20857                           tblptrl	equ	0xFF6
 20858                           tablat	equ	0xFF5
 20859                           prodh	equ	0xFF4
 20860                           prodl	equ	0xFF3
 20861                           intcon	equ	0xFF2
 20862                           intcon3	equ	0xFF0
 20863                           indf0	equ	0xFEF
 20864                           postinc0	equ	0xFEE
 20865                           fsr0h	equ	0xFEA
 20866                           fsr0l	equ	0xFE9
 20867                           wreg	equ	0xFE8
 20868                           indf1	equ	0xFE7
 20869                           postdec1	equ	0xFE5
 20870                           plusw1	equ	0xFE3
 20871                           fsr1h	equ	0xFE2
 20872                           fsr1l	equ	0xFE1
 20873                           indf2	equ	0xFDF
 20874                           postinc2	equ	0xFDE
 20875                           postdec2	equ	0xFDD
 20876                           plusw2	equ	0xFDB
 20877                           fsr2h	equ	0xFDA
 20878                           fsr2l	equ	0xFD9
 20879                           status	equ	0xFD8
 20880                           
 20881 ;; *************** function _MSDWriteHandler *****************
 20882 ;; Defined at:
 20883 ;;		line 1188 in file "usb_device_msd.c"
 20884 ;; Parameters:    Size  Location     Type
 20885 ;;		None
 20886 ;; Auto vars:     Size  Location     Type
 20887 ;;		None
 20888 ;; Return value:  Size  Location     Type
 20889 ;;                  1    wreg      unsigned char 
 20890 ;; Registers used:
 20891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20892 ;; Tracked objects:
 20893 ;;		On entry : 0/0
 20894 ;;		On exit  : 0/0
 20895 ;;		Unchanged: 0/0
 20896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20899 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20900 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20901 ;;Total ram usage:        5 bytes
 20902 ;; Hardware stack levels used:    1
 20903 ;; Hardware stack levels required when called:    6
 20904 ;; This function calls:
 20905 ;;		_ExternalFlash_SectorWrite
 20906 ;;		_ExternalFlash_WriteProtectStateGet
 20907 ;;		_MSDCheckForErrorCases
 20908 ;;		_USBStallEndpoint
 20909 ;;		_USBTransferOnePacket
 20910 ;; This function is called by:
 20911 ;;		_MSDProcessCommandMediaPresent
 20912 ;; This function uses a non-reentrant model
 20913 ;;
 20914                           
 20915                           	psect	text98
 20916  00121E                     __ptext98:
 20917                           	opt stack 0
 20918  00121E                     _MSDWriteHandler:
 20919                           	opt stack 20
 20920                           
 20921                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20922                           
 20923                           ;incstack = 0
 20924  00121E  D146               	goto	l684
 20925  001220                     l685:
 20926                           
 20927                           ; BSR set to: 0
 20928                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20929  001220  C111  F085         	movff	_gblCBW+17,_LBA+3
 20930                           
 20931                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20932  001224  C112  F084         	movff	_gblCBW+18,_LBA+2
 20933                           
 20934                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20935  001228  C113  F083         	movff	_gblCBW+19,_LBA+1
 20936                           
 20937                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20938  00122C  C114  F082         	movff	_gblCBW+20,_LBA
 20939                           
 20940                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20941  001230  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 20942                           
 20943                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20944  001234  C117  F086         	movff	_gblCBW+23,_TransferLength
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20948  001238  5186               	movf	_TransferLength& (0+255),w,b
 20949  00123A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20950  00123C  5187               	movf	(_TransferLength+1)& (0+255),w,b
 20951  00123E  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20952  001240  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20953  001242  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20954  001244  0E09               	movlw	9
 20955  001246                     u8355:
 20956  001246  90D8               	bcf	status,0,c
 20957  001248  3630               	rlcf	??_MSDWriteHandler,f,c
 20958  00124A  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20959  00124C  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20960  00124E  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20961  001250  2EE8               	decfsz	wreg,f,c
 20962  001252  D7F9               	goto	u8355
 20963  001254  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20964  001258  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20965  00125C  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20966  001260  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20967  001264  EC72  F022         	call	_MSDCheckForErrorCases	;wreg free
 20968  001268  0900               	iorlw	0
 20969  00126A  A4D8               	btfss	status,2,c
 20970  00126C  D131               	goto	l687
 20971                           
 20972                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20973                           
 20974                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20975  00126E  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20976  001272  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20977  001276  D801               	call	u8378
 20978  001278  D00A               	goto	u8379
 20979  00127A                     u8378:
 20980  00127A  0005               	push	
 20981  00127C  6EFA               	movwf	pclath,c
 20982  00127E  0101               	movlb	1	; () banked
 20983  001280  51F3               	movf	(_LUN+10)& (0+255),w,b
 20984  001282  6EFD               	movwf	tosl,c
 20985  001284  51F4               	movf	(_LUN+11)& (0+255),w,b
 20986  001286  6EFE               	movwf	tosh,c
 20987  001288  6AFF               	clrf	tosu,c
 20988  00128A  50FA               	movf	pclath,w,c
 20989  00128C  0012               	return		;indir
 20990  00128E                     u8379:
 20991  00128E  0900               	iorlw	0
 20992  001290  B4D8               	btfsc	status,2,c
 20993  001292  D016               	goto	l688
 20994                           
 20995                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20996  001294  0E01               	movlw	1
 20997  001296  010D               	movlb	13	; () banked
 20998  001298  6F8C               	movwf	140,b	;volatile
 20999                           
 21000                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 21001  00129A  0101               	movlb	1	; () banked
 21002  00129C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21003  00129E  0BF0               	andlw	-16
 21004  0012A0  0907               	iorlw	7
 21005  0012A2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21006                           
 21007                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 21008  0012A4  0E27               	movlw	39
 21009  0012A6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21010                           
 21011                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 21012  0012A8  0E00               	movlw	0
 21013  0012AA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21014                           
 21015                           ; BSR set to: 1
 21016                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 21017  0012AC  0E00               	movlw	0
 21018  0012AE  6E01               	movwf	USBStallEndpoint@dir,c
 21019  0012B0  0E02               	movlw	2
 21020  0012B2  EC84  F01E         	call	_USBStallEndpoint
 21021                           
 21022                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 21023  0012B6  0E00               	movlw	0
 21024  0012B8  0100               	movlb	0	; () banked
 21025  0012BA  6F9C               	movwf	_MSDWriteState& (0+255),b
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;usb_device_msd.c: 1228: return MSDWriteState;
 21029  0012BC  519C               	movf	_MSDWriteState& (0+255),w,b
 21030                           
 21031                           ; BSR set to: 0
 21032  0012BE  0012               	return	
 21033  0012C0                     l688:
 21034                           
 21035                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 21036                           
 21037                           ; BSR set to: 0
 21038  0012C0  0E01               	movlw	1
 21039  0012C2  0100               	movlb	0	; () banked
 21040  0012C4  6F9F               	movwf	_MSD_State& (0+255),b
 21041  0012C6                     
 21042                           ; BSR set to: 0
 21043                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 21044                           
 21045                           ; BSR set to: 0
 21046  0012C6  5186               	movf	_TransferLength& (0+255),w,b
 21047  0012C8  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 21048  0012CA  A4D8               	btfss	status,2,c
 21049  0012CC  D002               	goto	l691
 21050                           
 21051                           ; BSR set to: 0
 21052                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 21053  0012CE  0E00               	movlw	0
 21054  0012D0  D056               	goto	L21
 21055  0012D2                     l691:
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 21059                           
 21060                           ; BSR set to: 0
 21061  0012D2  0E03               	movlw	3
 21062  0012D4  6F9C               	movwf	_MSDWriteState& (0+255),b
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 21066  0012D6  0E00               	movlw	0
 21067  0012D8  0101               	movlb	1	; () banked
 21068  0012DA  6F77               	movwf	_ptrNextData& (0+255),b
 21069  0012DC  0E06               	movlw	6
 21070  0012DE  6F78               	movwf	(_ptrNextData+1)& (0+255),b
 21071                           
 21072                           ; BSR set to: 1
 21073                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 21074  0012E0  0E00               	movlw	0
 21075  0012E2  010D               	movlb	13	; () banked
 21076  0012E4  6F88               	movwf	136,b	;volatile
 21077  0012E6  0E02               	movlw	2
 21078  0012E8  6F89               	movwf	137,b	;volatile
 21079  0012EA  0E00               	movlw	0
 21080  0012EC  6F8A               	movwf	138,b	;volatile
 21081  0012EE  0E00               	movlw	0
 21082  0012F0  6F8B               	movwf	139,b	;volatile
 21083  0012F2                     l692:
 21084                           
 21085                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 21086  0012F2  010D               	movlb	13	; () banked
 21087  0012F4  5188               	movf	136,w,b	;volatile
 21088  0012F6  1189               	iorwf	137,w,b	;volatile
 21089  0012F8  118A               	iorwf	138,w,b	;volatile
 21090  0012FA  118B               	iorwf	139,w,b	;volatile
 21091  0012FC  B4D8               	btfsc	status,2,c
 21092  0012FE  D01E               	goto	l693
 21093                           
 21094                           ; BSR set to: 13
 21095                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 21096  001300  0100               	movlb	0	; () banked
 21097  001302  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 21098  001304  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21099  001306  B4D8               	btfsc	status,2,c
 21100  001308  D006               	goto	l694
 21101                           
 21102                           ; BSR set to: 0
 21103  00130A  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21104  00130E  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21105  001312  BEDF               	btfsc	indf2,7,c
 21106  001314  D0DD               	goto	l687
 21107  001316                     l694:
 21108                           
 21109                           ; BSR set to: 0
 21110                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 21111                           
 21112                           ; BSR set to: 0
 21113  001316  0E00               	movlw	0
 21114  001318  6E01               	movwf	USBTransferOnePacket@dir,c
 21115  00131A  C177  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21116  00131E  C178  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21117  001322  0E40               	movlw	64
 21118  001324  6E04               	movwf	USBTransferOnePacket@len,c
 21119  001326  0E02               	movlw	2
 21120  001328  EC8F  F020         	call	_USBTransferOnePacket
 21121  00132C  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 21122  001330  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 21123                           
 21124                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 21125  001334  0E04               	movlw	4
 21126  001336  0100               	movlb	0	; () banked
 21127  001338  6F9C               	movwf	_MSDWriteState& (0+255),b
 21128                           
 21129                           ;usb_device_msd.c: 1260: }
 21130  00133A  D023               	goto	l695
 21131  00133C                     l693:
 21132                           
 21133                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 21134                           
 21135                           ; BSR set to: 0
 21136  00133C  C1F7  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 21137  001340  C1F8  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 21138  001344  D801               	call	u8438
 21139  001346  D00A               	goto	u8439
 21140  001348                     u8438:
 21141  001348  0005               	push	
 21142  00134A  6EFA               	movwf	pclath,c
 21143  00134C  0101               	movlb	1	; () banked
 21144  00134E  51F3               	movf	(_LUN+10)& (0+255),w,b
 21145  001350  6EFD               	movwf	tosl,c
 21146  001352  51F4               	movf	(_LUN+11)& (0+255),w,b
 21147  001354  6EFE               	movwf	tosh,c
 21148  001356  6AFF               	clrf	tosu,c
 21149  001358  50FA               	movf	pclath,w,c
 21150  00135A  0012               	return		;indir
 21151  00135C                     u8439:
 21152  00135C  0900               	iorlw	0
 21153  00135E  B4D8               	btfsc	status,2,c
 21154  001360  D00C               	goto	l696
 21155                           
 21156                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 21157  001362  0E01               	movlw	1
 21158  001364  010D               	movlb	13	; () banked
 21159  001366  6F8C               	movwf	140,b	;volatile
 21160                           
 21161                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 21162  001368  0101               	movlb	1	; () banked
 21163  00136A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21164  00136C  0BF0               	andlw	-16
 21165  00136E  0902               	iorlw	2
 21166  001370  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21167                           
 21168                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 21169  001372  0E27               	movlw	39
 21170  001374  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21171                           
 21172                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 21173  001376  0E00               	movlw	0
 21174  001378  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21175  00137A                     l696:
 21176                           
 21177                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 21178  00137A  0E02               	movlw	2
 21179  00137C  D095               	goto	L23
 21180  00137E                     L21:
 21181  00137E  6F9C               	movwf	_MSDWriteState& (0+255),b
 21182                           
 21183                           ;usb_device_msd.c: 1280: break;
 21184  001380  D0A7               	goto	l687
 21185  001382                     l695:
 21186                           
 21187                           ; BSR set to: 0
 21188                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 21189                           
 21190                           ; BSR set to: 0
 21191                           
 21192                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 21193                           
 21194                           ; BSR set to: 0
 21195  001382  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 21196  001384  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 21197  001386  B4D8               	btfsc	status,2,c
 21198  001388  D006               	goto	l698
 21199                           
 21200                           ; BSR set to: 0
 21201  00138A  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 21202  00138E  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 21203  001392  BEDF               	btfsc	indf2,7,c
 21204  001394  D09D               	goto	l687
 21205  001396                     l698:
 21206                           
 21207                           ; BSR set to: 0
 21208                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 21209                           
 21210                           ; BSR set to: 0
 21211  001396  EE20 F001          	lfsr	2,1
 21212  00139A  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 21213  00139C  26D9               	addwf	fsr2l,f,c
 21214  00139E  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 21215  0013A0  22DA               	addwfc	fsr2h,f,c
 21216  0013A2  50DF               	movf	indf2,w,c
 21217  0013A4  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 21218  0013A6  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 21219  0013AA  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 21220  0013AC  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 21221  0013AE  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 21222  0013B0  5031               	movf	??_MSDWriteHandler+1,w,c
 21223  0013B2  0101               	movlb	1	; () banked
 21224  0013B4  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21225  0013B6  5032               	movf	??_MSDWriteHandler+2,w,c
 21226  0013B8  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21227  0013BA  5033               	movf	??_MSDWriteHandler+3,w,c
 21228  0013BC  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21229  0013BE  5034               	movf	??_MSDWriteHandler+4,w,c
 21230  0013C0  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21231                           
 21232                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 21233  0013C2  0100               	movlb	0	; () banked
 21234  0013C4  EE20 F001          	lfsr	2,1
 21235  0013C8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 21236  0013CA  26D9               	addwf	fsr2l,f,c
 21237  0013CC  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 21238  0013CE  22DA               	addwfc	fsr2h,f,c
 21239  0013D0  50DF               	movf	indf2,w,c
 21240  0013D2  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 21241  0013D4  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 21242  0013D8  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 21243  0013DA  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 21244  0013DC  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 21245  0013DE  5031               	movf	??_MSDWriteHandler+1,w,c
 21246  0013E0  010D               	movlb	13	; () banked
 21247  0013E2  5F88               	subwf	136,f,b	;volatile
 21248  0013E4  5032               	movf	??_MSDWriteHandler+2,w,c
 21249  0013E6  5B89               	subwfb	137,f,b	;volatile
 21250  0013E8  5033               	movf	??_MSDWriteHandler+3,w,c
 21251  0013EA  5B8A               	subwfb	138,f,b	;volatile
 21252  0013EC  5034               	movf	??_MSDWriteHandler+4,w,c
 21253  0013EE  5B8B               	subwfb	139,f,b	;volatile
 21254                           
 21255                           ; BSR set to: 13
 21256                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 21257  0013F0  0E40               	movlw	64
 21258  0013F2  0101               	movlb	1	; () banked
 21259  0013F4  2777               	addwf	_ptrNextData& (0+255),f,b
 21260  0013F6  0E00               	movlw	0
 21261  0013F8  2378               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21262                           
 21263                           ; BSR set to: 1
 21264                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 21265  0013FA  0E03               	movlw	3
 21266  0013FC  D055               	goto	L23
 21267  0013FE                     
 21268                           ; BSR set to: 0
 21269                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 21270                           
 21271                           ; BSR set to: 0
 21272  0013FE  010D               	movlb	13	; () banked
 21273  001400  518C               	movf	140,w,b	;volatile
 21274  001402  A4D8               	btfss	status,2,c
 21275  001404  D03C               	goto	l703
 21276                           
 21277                           ; BSR set to: 13
 21278                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 21279  001406  C1F7  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 21280  00140A  C1F8  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 21281  00140E  C082  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 21282  001412  C083  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 21283  001416  C084  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 21284  00141A  C085  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 21285  00141E  0E00               	movlw	0
 21286  001420  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 21287  001422  0E06               	movlw	6
 21288  001424  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 21289  001426  0100               	movlb	0	; () banked
 21290  001428  5182               	movf	_LBA& (0+255),w,b
 21291  00142A  1183               	iorwf	(_LBA+1)& (0+255),w,b
 21292  00142C  1184               	iorwf	(_LBA+2)& (0+255),w,b
 21293  00142E  1185               	iorwf	(_LBA+3)& (0+255),w,b
 21294  001430  A4D8               	btfss	status,2,c
 21295  001432  D002               	goto	u8480
 21296  001434  0E01               	movlw	1
 21297  001436  D001               	goto	u8490
 21298  001438                     u8480:
 21299  001438  0E00               	movlw	0
 21300  00143A                     u8490:
 21301  00143A  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 21302  00143C  D801               	call	u8508
 21303  00143E  D00A               	goto	u8509
 21304  001440                     u8508:
 21305  001440  0005               	push	
 21306  001442  6EFA               	movwf	pclath,c
 21307  001444  0101               	movlb	1	; () banked
 21308  001446  51F5               	movf	(_LUN+12)& (0+255),w,b
 21309  001448  6EFD               	movwf	tosl,c
 21310  00144A  51F6               	movf	(_LUN+13)& (0+255),w,b
 21311  00144C  6EFE               	movwf	tosh,c
 21312  00144E  6AFF               	clrf	tosu,c
 21313  001450  50FA               	movf	pclath,w,c
 21314  001452  0012               	return		;indir
 21315  001454                     u8509:
 21316  001454  06E8               	decf	wreg,f,c
 21317  001456  B4D8               	btfsc	status,2,c
 21318  001458  D012               	goto	l703
 21319                           
 21320                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 21321  00145A  0E64               	movlw	100
 21322  00145C  0100               	movlb	0	; () banked
 21323  00145E  619B               	cpfslt	_MSDRetryAttempt& (0+255),b
 21324  001460  D002               	goto	l702
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 21328  001462  2B9B               	incf	_MSDRetryAttempt& (0+255),f,b
 21329                           
 21330                           ;usb_device_msd.c: 1314: break;
 21331  001464  D035               	goto	l687
 21332  001466                     l702:
 21333                           
 21334                           ; BSR set to: 0
 21335                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 21336                           
 21337                           ; BSR set to: 0
 21338  001466  0E01               	movlw	1
 21339  001468  010D               	movlb	13	; () banked
 21340  00146A  6F8C               	movwf	140,b	;volatile
 21341                           
 21342                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 21343  00146C  0101               	movlb	1	; () banked
 21344  00146E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21345  001470  0BF0               	andlw	-16
 21346  001472  0903               	iorlw	3
 21347  001474  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21348                           
 21349                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 21350  001476  0E00               	movlw	0
 21351  001478  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21352                           
 21353                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 21354  00147A  0E00               	movlw	0
 21355  00147C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21356  00147E                     l703:
 21357                           
 21358                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 21359                           
 21360                           ; BSR set to: 1
 21361                           
 21362                           ; BSR set to: 1
 21363                           
 21364                           ; BSR set to: 1
 21365  00147E  0E01               	movlw	1
 21366  001480  0100               	movlb	0	; () banked
 21367  001482  2782               	addwf	_LBA& (0+255),f,b
 21368  001484  0E00               	movlw	0
 21369  001486  2383               	addwfc	(_LBA+1)& (0+255),f,b
 21370  001488  2384               	addwfc	(_LBA+2)& (0+255),f,b
 21371  00148A  2385               	addwfc	(_LBA+3)& (0+255),f,b
 21372                           
 21373                           ; BSR set to: 0
 21374                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 21375  00148C  0786               	decf	_TransferLength& (0+255),f,b
 21376  00148E  A0D8               	btfss	status,0,c
 21377  001490  0787               	decf	(_TransferLength+1)& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 21381  001492  0E01               	movlw	1
 21382  001494  D774               	goto	L21
 21383  001496                     
 21384                           ; BSR set to: 0
 21385                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 21386                           
 21387                           ; BSR set to: 0
 21388  001496  0E02               	movlw	2
 21389  001498  010D               	movlb	13	; () banked
 21390  00149A  6F8C               	movwf	140,b	;volatile
 21391                           
 21392                           ; BSR set to: 13
 21393                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 21394  00149C  0E00               	movlw	0
 21395  00149E  6E01               	movwf	USBStallEndpoint@dir,c
 21396  0014A0  0E02               	movlw	2
 21397  0014A2  EC84  F01E         	call	_USBStallEndpoint
 21398                           
 21399                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 21400  0014A6  0E00               	movlw	0
 21401  0014A8                     L23:
 21402  0014A8  0100               	movlb	0	; () banked
 21403  0014AA  D769               	goto	L21
 21404  0014AC                     l684:
 21405                           
 21406                           ; BSR set to: 0
 21407  0014AC  0100               	movlb	0	; () banked
 21408  0014AE  519C               	movf	_MSDWriteState& (0+255),w,b
 21409                           
 21410                           ; Switch size 1, requested type "space"
 21411                           ; Number of cases is 5, Range of values is 0 to 4
 21412                           ; switch strategies available:
 21413                           ; Name         Instructions Cycles
 21414                           ; simple_byte           16     9 (average)
 21415                           ;	Chosen strategy is simple_byte
 21416  0014B0  0A00               	xorlw	0	; case 0
 21417  0014B2  B4D8               	btfsc	status,2,c
 21418  0014B4  D6B5               	goto	l685
 21419  0014B6  0A01               	xorlw	1	; case 1
 21420  0014B8  B4D8               	btfsc	status,2,c
 21421  0014BA  D705               	goto	l690
 21422  0014BC  0A03               	xorlw	3	; case 2
 21423  0014BE  B4D8               	btfsc	status,2,c
 21424  0014C0  D79E               	goto	l699
 21425  0014C2  0A01               	xorlw	1	; case 3
 21426  0014C4  B4D8               	btfsc	status,2,c
 21427  0014C6  D715               	goto	l692
 21428  0014C8  0A07               	xorlw	7	; case 4
 21429  0014CA  B4D8               	btfsc	status,2,c
 21430  0014CC  D75A               	goto	l695
 21431  0014CE  D7E3               	goto	l704
 21432  0014D0                     l687:
 21433                           
 21434                           ;usb_device_msd.c: 1347: return MSDWriteState;
 21435                           
 21436                           ; BSR set to: 0
 21437  0014D0  0100               	movlb	0	; () banked
 21438  0014D2  519C               	movf	_MSDWriteState& (0+255),w,b
 21439  0014D4  0012               	return	
 21440  0014D6                     __end_of_MSDWriteHandler:
 21441                           	opt stack 0
 21442                           tosu	equ	0xFFF
 21443                           tosh	equ	0xFFE
 21444                           tosl	equ	0xFFD
 21445                           pclath	equ	0xFFA
 21446                           tblptru	equ	0xFF8
 21447                           tblptrh	equ	0xFF7
 21448                           tblptrl	equ	0xFF6
 21449                           tablat	equ	0xFF5
 21450                           prodh	equ	0xFF4
 21451                           prodl	equ	0xFF3
 21452                           intcon	equ	0xFF2
 21453                           intcon3	equ	0xFF0
 21454                           indf0	equ	0xFEF
 21455                           postinc0	equ	0xFEE
 21456                           fsr0h	equ	0xFEA
 21457                           fsr0l	equ	0xFE9
 21458                           wreg	equ	0xFE8
 21459                           indf1	equ	0xFE7
 21460                           postdec1	equ	0xFE5
 21461                           plusw1	equ	0xFE3
 21462                           fsr1h	equ	0xFE2
 21463                           fsr1l	equ	0xFE1
 21464                           indf2	equ	0xFDF
 21465                           postinc2	equ	0xFDE
 21466                           postdec2	equ	0xFDD
 21467                           plusw2	equ	0xFDB
 21468                           fsr2h	equ	0xFDA
 21469                           fsr2l	equ	0xFD9
 21470                           status	equ	0xFD8
 21471                           
 21472 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 21473 ;; Defined at:
 21474 ;;		line 34 in file "external_flash.c"
 21475 ;; Parameters:    Size  Location     Type
 21476 ;;  config          2    0[COMRAM] PTR void 
 21477 ;;		 -> NULL(0), 
 21478 ;; Auto vars:     Size  Location     Type
 21479 ;;		None
 21480 ;; Return value:  Size  Location     Type
 21481 ;;                  1    wreg      unsigned char 
 21482 ;; Registers used:
 21483 ;;		wreg
 21484 ;; Tracked objects:
 21485 ;;		On entry : 0/0
 21486 ;;		On exit  : 0/0
 21487 ;;		Unchanged: 0/0
 21488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;Total ram usage:        2 bytes
 21494 ;; Hardware stack levels used:    1
 21495 ;; This function calls:
 21496 ;;		Nothing
 21497 ;; This function is called by:
 21498 ;;		_MSDWriteHandler
 21499 ;;		_MSDProcessCommandMediaPresent
 21500 ;; This function uses a non-reentrant model
 21501 ;;
 21502                           
 21503                           	psect	text99
 21504  00746E                     __ptext99:
 21505                           	opt stack 0
 21506  00746E                     _ExternalFlash_WriteProtectStateGet:
 21507                           	opt stack 25
 21508                           
 21509                           ;external_flash.c: 37: return 0;
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;incstack = 0
 21513  00746E  0E00               	movlw	0
 21514  007470  0012               	return	
 21515  007472                     __end_of_ExternalFlash_WriteProtectStateGet:
 21516                           	opt stack 0
 21517                           tosu	equ	0xFFF
 21518                           tosh	equ	0xFFE
 21519                           tosl	equ	0xFFD
 21520                           pclath	equ	0xFFA
 21521                           tblptru	equ	0xFF8
 21522                           tblptrh	equ	0xFF7
 21523                           tblptrl	equ	0xFF6
 21524                           tablat	equ	0xFF5
 21525                           prodh	equ	0xFF4
 21526                           prodl	equ	0xFF3
 21527                           intcon	equ	0xFF2
 21528                           intcon3	equ	0xFF0
 21529                           indf0	equ	0xFEF
 21530                           postinc0	equ	0xFEE
 21531                           fsr0h	equ	0xFEA
 21532                           fsr0l	equ	0xFE9
 21533                           wreg	equ	0xFE8
 21534                           indf1	equ	0xFE7
 21535                           postdec1	equ	0xFE5
 21536                           plusw1	equ	0xFE3
 21537                           fsr1h	equ	0xFE2
 21538                           fsr1l	equ	0xFE1
 21539                           indf2	equ	0xFDF
 21540                           postinc2	equ	0xFDE
 21541                           postdec2	equ	0xFDD
 21542                           plusw2	equ	0xFDB
 21543                           fsr2h	equ	0xFDA
 21544                           fsr2l	equ	0xFD9
 21545                           status	equ	0xFD8
 21546                           
 21547 ;; *************** function _ExternalFlash_SectorWrite *****************
 21548 ;; Defined at:
 21549 ;;		line 56 in file "external_flash.c"
 21550 ;; Parameters:    Size  Location     Type
 21551 ;;  config          2   36[COMRAM] PTR void 
 21552 ;;		 -> NULL(0), 
 21553 ;;  sector_addr     4   38[COMRAM] unsigned long 
 21554 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 21555 ;;		 -> msd_buffer(512), 
 21556 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 21557 ;; Auto vars:     Size  Location     Type
 21558 ;;  page            2   45[COMRAM] unsigned int 
 21559 ;; Return value:  Size  Location     Type
 21560 ;;                  1    wreg      unsigned char 
 21561 ;; Registers used:
 21562 ;;		wreg, status,2, status,0, cstack
 21563 ;; Tracked objects:
 21564 ;;		On entry : 0/0
 21565 ;;		On exit  : 0/0
 21566 ;;		Unchanged: 0/0
 21567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21568 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21571 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21572 ;;Total ram usage:       11 bytes
 21573 ;; Hardware stack levels used:    1
 21574 ;; Hardware stack levels required when called:    5
 21575 ;; This function calls:
 21576 ;;		_flash_sector_write
 21577 ;; This function is called by:
 21578 ;;		_MSDWriteHandler
 21579 ;; This function uses a non-reentrant model
 21580 ;;
 21581                           
 21582                           	psect	text100
 21583  006E4E                     __ptext100:
 21584                           	opt stack 0
 21585  006E4E                     _ExternalFlash_SectorWrite:
 21586                           	opt stack 20
 21587                           
 21588                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 21589                           
 21590                           ;incstack = 0
 21591  006E4E  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 21592  006E52  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 21593                           
 21594                           ;external_flash.c: 61: if(sector_addr >= 8192)
 21595  006E56  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 21596  006E58  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 21597  006E5A  E104               	bnz	u8120
 21598  006E5C  0E20               	movlw	32
 21599  006E5E  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 21600  006E60  A0D8               	btfss	status,0,c
 21601  006E62  D002               	goto	l1933
 21602  006E64                     u8120:
 21603                           
 21604                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 21605  006E64  0E00               	movlw	0
 21606  006E66  0012               	return	
 21607  006E68                     l1933:
 21608                           
 21609                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 21610  006E68  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 21611  006E6C  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 21612  006E70  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 21613  006E74  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 21614  006E78  EC06  F035         	call	_flash_sector_write	;wreg free
 21615                           
 21616                           ;external_flash.c: 69: return 1;
 21617  006E7C  0E01               	movlw	1
 21618  006E7E  0012               	return	
 21619  006E80                     __end_of_ExternalFlash_SectorWrite:
 21620                           	opt stack 0
 21621                           tosu	equ	0xFFF
 21622                           tosh	equ	0xFFE
 21623                           tosl	equ	0xFFD
 21624                           pclath	equ	0xFFA
 21625                           tblptru	equ	0xFF8
 21626                           tblptrh	equ	0xFF7
 21627                           tblptrl	equ	0xFF6
 21628                           tablat	equ	0xFF5
 21629                           prodh	equ	0xFF4
 21630                           prodl	equ	0xFF3
 21631                           intcon	equ	0xFF2
 21632                           intcon3	equ	0xFF0
 21633                           indf0	equ	0xFEF
 21634                           postinc0	equ	0xFEE
 21635                           fsr0h	equ	0xFEA
 21636                           fsr0l	equ	0xFE9
 21637                           wreg	equ	0xFE8
 21638                           indf1	equ	0xFE7
 21639                           postdec1	equ	0xFE5
 21640                           plusw1	equ	0xFE3
 21641                           fsr1h	equ	0xFE2
 21642                           fsr1l	equ	0xFE1
 21643                           indf2	equ	0xFDF
 21644                           postinc2	equ	0xFDE
 21645                           postdec2	equ	0xFDD
 21646                           plusw2	equ	0xFDB
 21647                           fsr2h	equ	0xFDA
 21648                           fsr2l	equ	0xFD9
 21649                           status	equ	0xFD8
 21650                           
 21651 ;; *************** function _MSDReadHandler *****************
 21652 ;; Defined at:
 21653 ;;		line 1038 in file "usb_device_msd.c"
 21654 ;; Parameters:    Size  Location     Type
 21655 ;;		None
 21656 ;; Auto vars:     Size  Location     Type
 21657 ;;		None
 21658 ;; Return value:  Size  Location     Type
 21659 ;;                  1    wreg      unsigned char 
 21660 ;; Registers used:
 21661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21662 ;; Tracked objects:
 21663 ;;		On entry : 0/0
 21664 ;;		On exit  : 0/0
 21665 ;;		Unchanged: 0/0
 21666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21670 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21671 ;;Total ram usage:        4 bytes
 21672 ;; Hardware stack levels used:    1
 21673 ;; Hardware stack levels required when called:    6
 21674 ;; This function calls:
 21675 ;;		_ExternalFlash_SectorRead
 21676 ;;		_MSDCheckForErrorCases
 21677 ;;		_USBStallEndpoint
 21678 ;;		_USBTransferOnePacket
 21679 ;; This function is called by:
 21680 ;;		_MSDProcessCommandMediaPresent
 21681 ;; This function uses a non-reentrant model
 21682 ;;
 21683                           
 21684                           	psect	text101
 21685  002412                     __ptext101:
 21686                           	opt stack 0
 21687  002412                     _MSDReadHandler:
 21688                           	opt stack 20
 21689                           
 21690                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21691                           
 21692                           ;incstack = 0
 21693  002412  D0D7               	goto	l665
 21694  002414                     l666:
 21695                           
 21696                           ; BSR set to: 0
 21697                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21698  002414  C111  F085         	movff	_gblCBW+17,_LBA+3
 21699                           
 21700                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21701  002418  C112  F084         	movff	_gblCBW+18,_LBA+2
 21702                           
 21703                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21704  00241C  C113  F083         	movff	_gblCBW+19,_LBA+1
 21705                           
 21706                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21707  002420  C114  F082         	movff	_gblCBW+20,_LBA
 21708                           
 21709                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21710  002424  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 21711                           
 21712                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21713  002428  C117  F086         	movff	_gblCBW+23,_TransferLength
 21714                           
 21715                           ; BSR set to: 0
 21716                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21717  00242C  5186               	movf	_TransferLength& (0+255),w,b
 21718  00242E  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21719  002430  5187               	movf	(_TransferLength+1)& (0+255),w,b
 21720  002432  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21721  002434  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21722  002436  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21723  002438  0E09               	movlw	9
 21724  00243A                     u8245:
 21725  00243A  90D8               	bcf	status,0,c
 21726  00243C  3636               	rlcf	??_MSDReadHandler,f,c
 21727  00243E  3637               	rlcf	??_MSDReadHandler+1,f,c
 21728  002440  3638               	rlcf	??_MSDReadHandler+2,f,c
 21729  002442  3639               	rlcf	??_MSDReadHandler+3,f,c
 21730  002444  2EE8               	decfsz	wreg,f,c
 21731  002446  D7F9               	goto	u8245
 21732  002448  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21733  00244C  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21734  002450  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21735  002454  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21736  002458  EC72  F022         	call	_MSDCheckForErrorCases	;wreg free
 21737  00245C  0900               	iorlw	0
 21738  00245E  A4D8               	btfss	status,2,c
 21739  002460  D0C2               	goto	l668
 21740                           
 21741                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21742                           
 21743                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21744  002462  0E01               	movlw	1
 21745  002464  0100               	movlb	0	; () banked
 21746  002466  6F9D               	movwf	_MSDReadState& (0+255),b
 21747  002468                     
 21748                           ; BSR set to: 0
 21749                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21750                           
 21751                           ; BSR set to: 0
 21752  002468  5186               	movf	_TransferLength& (0+255),w,b
 21753  00246A  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 21754  00246C  A4D8               	btfss	status,2,c
 21755  00246E  D002               	goto	l670
 21756                           
 21757                           ; BSR set to: 0
 21758                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21759  002470  0E00               	movlw	0
 21760  002472  D046               	goto	L24
 21761  002474                     l670:
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21765                           
 21766                           ; BSR set to: 0
 21767  002474  0786               	decf	_TransferLength& (0+255),f,b
 21768  002476  A0D8               	btfss	status,0,c
 21769  002478  0787               	decf	(_TransferLength+1)& (0+255),f,b
 21770                           
 21771                           ; BSR set to: 0
 21772                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21773  00247A  0E02               	movlw	2
 21774  00247C  6F9D               	movwf	_MSDReadState& (0+255),b
 21775  00247E                     
 21776                           ; BSR set to: 0
 21777                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21778                           
 21779                           ; BSR set to: 0
 21780  00247E  5188               	movf	_USBMSDInHandle& (0+255),w,b
 21781  002480  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21782  002482  B4D8               	btfsc	status,2,c
 21783  002484  D006               	goto	l672
 21784                           
 21785                           ; BSR set to: 0
 21786  002486  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 21787  00248A  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21788  00248E  BEDF               	btfsc	indf2,7,c
 21789  002490  D0AA               	goto	l668
 21790  002492                     l672:
 21791                           
 21792                           ; BSR set to: 0
 21793                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21794                           
 21795                           ; BSR set to: 0
 21796  002492  C1F7  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21797  002496  C1F8  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21798  00249A  C082  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21799  00249E  C083  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21800  0024A2  C084  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21801  0024A6  C085  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21802  0024AA  0E00               	movlw	0
 21803  0024AC  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21804  0024AE  0E06               	movlw	6
 21805  0024B0  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21806  0024B2  D801               	call	u8298
 21807  0024B4  D00A               	goto	u8299
 21808  0024B6                     u8298:
 21809  0024B6  0005               	push	
 21810  0024B8  6EFA               	movwf	pclath,c
 21811  0024BA  0101               	movlb	1	; () banked
 21812  0024BC  51F1               	movf	(_LUN+8)& (0+255),w,b
 21813  0024BE  6EFD               	movwf	tosl,c
 21814  0024C0  51F2               	movf	(_LUN+9)& (0+255),w,b
 21815  0024C2  6EFE               	movwf	tosh,c
 21816  0024C4  6AFF               	clrf	tosu,c
 21817  0024C6  50FA               	movf	pclath,w,c
 21818  0024C8  0012               	return		;indir
 21819  0024CA                     u8299:
 21820  0024CA  06E8               	decf	wreg,f,c
 21821  0024CC  B4D8               	btfsc	status,2,c
 21822  0024CE  D01A               	goto	l675
 21823                           
 21824                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21825  0024D0  0E64               	movlw	100
 21826  0024D2  0100               	movlb	0	; () banked
 21827  0024D4  619B               	cpfslt	_MSDRetryAttempt& (0+255),b
 21828  0024D6  D002               	goto	l674
 21829                           
 21830                           ; BSR set to: 0
 21831                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21832  0024D8  2B9B               	incf	_MSDRetryAttempt& (0+255),f,b
 21833                           
 21834                           ;usb_device_msd.c: 1088: break;
 21835  0024DA  D085               	goto	l668
 21836  0024DC                     l674:
 21837                           
 21838                           ; BSR set to: 0
 21839                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21840                           
 21841                           ; BSR set to: 0
 21842  0024DC  0E02               	movlw	2
 21843  0024DE  010D               	movlb	13	; () banked
 21844  0024E0  6F8C               	movwf	140,b	;volatile
 21845                           
 21846                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21847  0024E2  0101               	movlb	1	; () banked
 21848  0024E4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21849  0024E6  0BF0               	andlw	-16
 21850  0024E8  0903               	iorlw	3
 21851  0024EA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21852                           
 21853                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21854  0024EC  0E00               	movlw	0
 21855  0024EE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21856                           
 21857                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21858  0024F0  0E00               	movlw	0
 21859  0024F2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21860                           
 21861                           ; BSR set to: 1
 21862                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21863  0024F4  0E01               	movlw	1
 21864  0024F6  6E01               	movwf	USBStallEndpoint@dir,c
 21865  0024F8  0E02               	movlw	2
 21866  0024FA  EC84  F01E         	call	_USBStallEndpoint
 21867  0024FE  D05E               	goto	l10751
 21868  002500                     L24:
 21869  002500  6F9D               	movwf	_MSDReadState& (0+255),b
 21870                           
 21871                           ;usb_device_msd.c: 1109: break;
 21872  002502  D071               	goto	l668
 21873  002504                     l675:
 21874                           
 21875                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21876                           
 21877                           ; BSR set to: 0
 21878                           
 21879                           ; BSR set to: 0
 21880  002504  0E01               	movlw	1
 21881  002506  0100               	movlb	0	; () banked
 21882  002508  2782               	addwf	_LBA& (0+255),f,b
 21883  00250A  0E00               	movlw	0
 21884  00250C  2383               	addwfc	(_LBA+1)& (0+255),f,b
 21885  00250E  2384               	addwfc	(_LBA+2)& (0+255),f,b
 21886  002510  2385               	addwfc	(_LBA+3)& (0+255),f,b
 21887                           
 21888                           ; BSR set to: 0
 21889                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21890  002512  0E00               	movlw	0
 21891  002514  010D               	movlb	13	; () banked
 21892  002516  6F88               	movwf	136,b	;volatile
 21893  002518  0E02               	movlw	2
 21894  00251A  6F89               	movwf	137,b	;volatile
 21895  00251C  0E00               	movlw	0
 21896  00251E  6F8A               	movwf	138,b	;volatile
 21897  002520  0E00               	movlw	0
 21898  002522  6F8B               	movwf	139,b	;volatile
 21899                           
 21900                           ; BSR set to: 13
 21901                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21902  002524  0E00               	movlw	0
 21903  002526  0101               	movlb	1	; () banked
 21904  002528  6F77               	movwf	_ptrNextData& (0+255),b
 21905  00252A  0E06               	movlw	6
 21906  00252C  6F78               	movwf	(_ptrNextData+1)& (0+255),b
 21907                           
 21908                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21909  00252E  0E03               	movlw	3
 21910  002530  0100               	movlb	0	; () banked
 21911  002532  6F9D               	movwf	_MSDReadState& (0+255),b
 21912  002534                     
 21913                           ; BSR set to: 0
 21914                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21915                           
 21916                           ; BSR set to: 0
 21917  002534  010D               	movlb	13	; () banked
 21918  002536  5188               	movf	136,w,b	;volatile
 21919  002538  1189               	iorwf	137,w,b	;volatile
 21920  00253A  118A               	iorwf	138,w,b	;volatile
 21921  00253C  118B               	iorwf	139,w,b	;volatile
 21922  00253E  A4D8               	btfss	status,2,c
 21923  002540  D002               	goto	l677
 21924                           
 21925                           ; BSR set to: 13
 21926                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21927  002542  0E01               	movlw	1
 21928  002544  D03C               	goto	L26
 21929  002546                     l677:
 21930                           
 21931                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21932                           
 21933                           ; BSR set to: 0
 21934  002546  0E04               	movlw	4
 21935  002548  0100               	movlb	0	; () banked
 21936  00254A  6F9D               	movwf	_MSDReadState& (0+255),b
 21937  00254C                     
 21938                           ; BSR set to: 0
 21939                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21940                           
 21941                           ; BSR set to: 0
 21942  00254C  5188               	movf	_USBMSDInHandle& (0+255),w,b
 21943  00254E  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21944  002550  B4D8               	btfsc	status,2,c
 21945  002552  D006               	goto	l679
 21946                           
 21947                           ; BSR set to: 0
 21948  002554  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 21949  002558  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21950  00255C  BEDF               	btfsc	indf2,7,c
 21951  00255E  D043               	goto	l668
 21952  002560                     l679:
 21953                           
 21954                           ; BSR set to: 0
 21955                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21956                           
 21957                           ; BSR set to: 0
 21958  002560  0E01               	movlw	1
 21959  002562  6E01               	movwf	USBTransferOnePacket@dir,c
 21960  002564  C177  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21961  002568  C178  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21962  00256C  0E40               	movlw	64
 21963  00256E  6E04               	movwf	USBTransferOnePacket@len,c
 21964  002570  0E02               	movlw	2
 21965  002572  EC8F  F020         	call	_USBTransferOnePacket
 21966  002576  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21967  00257A  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21968                           
 21969                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21970  00257E  0E03               	movlw	3
 21971  002580  0100               	movlb	0	; () banked
 21972  002582  6F9D               	movwf	_MSDReadState& (0+255),b
 21973                           
 21974                           ; BSR set to: 0
 21975                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21976  002584  0E40               	movlw	64
 21977  002586  0101               	movlb	1	; () banked
 21978  002588  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21979  00258A  0E00               	movlw	0
 21980  00258C  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21981  00258E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21982  002590  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21983                           
 21984                           ; BSR set to: 1
 21985                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21986  002592  0E40               	movlw	64
 21987  002594  010D               	movlb	13	; () banked
 21988  002596  5F88               	subwf	136,f,b	;volatile
 21989  002598  0E00               	movlw	0
 21990  00259A  5B89               	subwfb	137,f,b	;volatile
 21991  00259C  5B8A               	subwfb	138,f,b	;volatile
 21992  00259E  5B8B               	subwfb	139,f,b	;volatile
 21993                           
 21994                           ; BSR set to: 13
 21995                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21996  0025A0  0E40               	movlw	64
 21997  0025A2  0101               	movlb	1	; () banked
 21998  0025A4  2777               	addwf	_ptrNextData& (0+255),f,b
 21999  0025A6  0E00               	movlw	0
 22000  0025A8  2378               	addwfc	(_ptrNextData+1)& (0+255),f,b
 22001                           
 22002                           ;usb_device_msd.c: 1149: break;
 22003  0025AA  D01D               	goto	l668
 22004  0025AC                     
 22005                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 22006                           
 22007                           ; BSR set to: 1
 22008  0025AC  0E02               	movlw	2
 22009  0025AE  010D               	movlb	13	; () banked
 22010  0025B0  6F8C               	movwf	140,b	;volatile
 22011                           
 22012                           ; BSR set to: 13
 22013                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 22014  0025B2  0E01               	movlw	1
 22015  0025B4  6E01               	movwf	USBStallEndpoint@dir,c
 22016  0025B6  0E02               	movlw	2
 22017  0025B8  EC84  F01E         	call	_USBStallEndpoint
 22018  0025BC                     l10751:
 22019                           
 22020                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 22021  0025BC  0E00               	movlw	0
 22022  0025BE                     L26:
 22023  0025BE  0100               	movlb	0	; () banked
 22024  0025C0  D79F               	goto	L24
 22025  0025C2                     l665:
 22026                           
 22027                           ; BSR set to: 0
 22028  0025C2  0100               	movlb	0	; () banked
 22029  0025C4  519D               	movf	_MSDReadState& (0+255),w,b
 22030                           
 22031                           ; Switch size 1, requested type "space"
 22032                           ; Number of cases is 5, Range of values is 0 to 4
 22033                           ; switch strategies available:
 22034                           ; Name         Instructions Cycles
 22035                           ; simple_byte           16     9 (average)
 22036                           ;	Chosen strategy is simple_byte
 22037  0025C6  0A00               	xorlw	0	; case 0
 22038  0025C8  B4D8               	btfsc	status,2,c
 22039  0025CA  D724               	goto	l666
 22040  0025CC  0A01               	xorlw	1	; case 1
 22041  0025CE  B4D8               	btfsc	status,2,c
 22042  0025D0  D74B               	goto	l669
 22043  0025D2  0A03               	xorlw	3	; case 2
 22044  0025D4  B4D8               	btfsc	status,2,c
 22045  0025D6  D753               	goto	l671
 22046  0025D8  0A01               	xorlw	1	; case 3
 22047  0025DA  B4D8               	btfsc	status,2,c
 22048  0025DC  D7AB               	goto	l676
 22049  0025DE  0A07               	xorlw	7	; case 4
 22050  0025E0  B4D8               	btfsc	status,2,c
 22051  0025E2  D7B4               	goto	l678
 22052  0025E4  D7E3               	goto	l680
 22053  0025E6                     l668:
 22054                           
 22055                           ;usb_device_msd.c: 1161: return MSDReadState;
 22056                           
 22057                           ; BSR set to: 0
 22058  0025E6  0100               	movlb	0	; () banked
 22059  0025E8  519D               	movf	_MSDReadState& (0+255),w,b
 22060  0025EA  0012               	return	
 22061  0025EC                     __end_of_MSDReadHandler:
 22062                           	opt stack 0
 22063                           tosu	equ	0xFFF
 22064                           tosh	equ	0xFFE
 22065                           tosl	equ	0xFFD
 22066                           pclath	equ	0xFFA
 22067                           tblptru	equ	0xFF8
 22068                           tblptrh	equ	0xFF7
 22069                           tblptrl	equ	0xFF6
 22070                           tablat	equ	0xFF5
 22071                           prodh	equ	0xFF4
 22072                           prodl	equ	0xFF3
 22073                           intcon	equ	0xFF2
 22074                           intcon3	equ	0xFF0
 22075                           indf0	equ	0xFEF
 22076                           postinc0	equ	0xFEE
 22077                           fsr0h	equ	0xFEA
 22078                           fsr0l	equ	0xFE9
 22079                           wreg	equ	0xFE8
 22080                           indf1	equ	0xFE7
 22081                           postdec1	equ	0xFE5
 22082                           plusw1	equ	0xFE3
 22083                           fsr1h	equ	0xFE2
 22084                           fsr1l	equ	0xFE1
 22085                           indf2	equ	0xFDF
 22086                           postinc2	equ	0xFDE
 22087                           postdec2	equ	0xFDD
 22088                           plusw2	equ	0xFDB
 22089                           fsr2h	equ	0xFDA
 22090                           fsr2l	equ	0xFD9
 22091                           status	equ	0xFD8
 22092                           
 22093 ;; *************** function _MSDCheckForErrorCases *****************
 22094 ;; Defined at:
 22095 ;;		line 1434 in file "usb_device_msd.c"
 22096 ;; Parameters:    Size  Location     Type
 22097 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 22098 ;; Auto vars:     Size  Location     Type
 22099 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 22100 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 22101 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 22102 ;; Return value:  Size  Location     Type
 22103 ;;                  1    wreg      unsigned char 
 22104 ;; Registers used:
 22105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22106 ;; Tracked objects:
 22107 ;;		On entry : 0/0
 22108 ;;		On exit  : 0/0
 22109 ;;		Unchanged: 0/0
 22110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22112 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22115 ;;Total ram usage:        7 bytes
 22116 ;; Hardware stack levels used:    1
 22117 ;; Hardware stack levels required when called:    2
 22118 ;; This function calls:
 22119 ;;		_MSDErrorHandler
 22120 ;; This function is called by:
 22121 ;;		_MSDProcessCommandMediaPresent
 22122 ;;		_MSDReadHandler
 22123 ;;		_MSDWriteHandler
 22124 ;; This function uses a non-reentrant model
 22125 ;;
 22126                           
 22127                           	psect	text102
 22128  0044E4                     __ptext102:
 22129                           	opt stack 0
 22130  0044E4                     _MSDCheckForErrorCases:
 22131                           	opt stack 23
 22132                           
 22133                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 22134                           
 22135                           ; BSR set to: 0
 22136                           ;incstack = 0
 22137  0044E4  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22138  0044E6  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22139  0044E8  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22140  0044EA  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22141  0044EC  A4D8               	btfss	status,2,c
 22142  0044EE  D002               	goto	l710
 22143                           
 22144                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 22145  0044F0  0E01               	movlw	1
 22146  0044F2  D001               	goto	L27
 22147  0044F4                     l710:
 22148                           
 22149                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 22150  0044F4  0E00               	movlw	0
 22151  0044F6                     L27:
 22152  0044F6  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 22153                           
 22154                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 22155  0044F8  0100               	movlb	0	; () banked
 22156  0044FA  0598               	decf	_MSDHostNoData& (0+255),w,b
 22157  0044FC  A4D8               	btfss	status,2,c
 22158  0044FE  D005               	goto	l712
 22159                           
 22160                           ; BSR set to: 0
 22161  004500  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22162  004502  A4D8               	btfss	status,2,c
 22163  004504  D002               	goto	l712
 22164                           
 22165                           ; BSR set to: 0
 22166                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 22167  004506  0E00               	movlw	0
 22168                           
 22169                           ; BSR set to: 0
 22170  004508  0012               	return	
 22171  00450A                     l712:
 22172                           
 22173                           ; BSR set to: 0
 22174                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 22175                           
 22176                           ; BSR set to: 0
 22177  00450A  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 22178  00450C  0101               	movlb	1	; () banked
 22179  00450E  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 22180  004510  E11A               	bnz	l10347
 22181  004512  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22182  004514  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 22183  004516  E117               	bnz	l10347
 22184  004518  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22185  00451A  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 22186  00451C  E114               	bnz	l10347
 22187  00451E  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22188  004520  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 22189  004522  A4D8               	btfss	status,2,c
 22190  004524  D010               	goto	l718
 22191                           
 22192                           ; BSR set to: 1
 22193                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 22194  004526  0100               	movlb	0	; () banked
 22195  004528  059F               	decf	_MSD_State& (0+255),w,b
 22196  00452A  A4D8               	btfss	status,2,c
 22197  00452C  D006               	goto	l715
 22198                           
 22199                           ; BSR set to: 0
 22200                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 22201  00452E  0E2A               	movlw	42
 22202  004530  199E               	xorwf	_MSDCommandState& (0+255),w,b
 22203  004532  B4D8               	btfsc	status,2,c
 22204  004534  D008               	goto	l718
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 22208  004536  0E00               	movlw	0
 22209                           
 22210                           ; BSR set to: 0
 22211  004538  0012               	return	
 22212  00453A                     l715:
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 22216                           
 22217                           ; BSR set to: 0
 22218  00453A  0E2A               	movlw	42
 22219  00453C  199E               	xorwf	_MSDCommandState& (0+255),w,b
 22220  00453E  A4D8               	btfss	status,2,c
 22221  004540  D002               	goto	l718
 22222                           
 22223                           ; BSR set to: 0
 22224                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 22225  004542  0E00               	movlw	0
 22226                           
 22227                           ; BSR set to: 0
 22228  004544  0012               	return	
 22229  004546                     l718:
 22230  004546                     l10347:
 22231                           
 22232                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 22233  004546  0101               	movlb	1	; () banked
 22234  004548  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22235  00454A  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 22236  00454C  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22237  00454E  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22238  004550  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22239  004552  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22240  004554  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22241  004556  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22242  004558  B0D8               	btfsc	status,0,c
 22243  00455A  D002               	goto	l719
 22244                           
 22245                           ; BSR set to: 1
 22246                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 22247  00455C  0E01               	movlw	1
 22248  00455E  D001               	goto	L28
 22249  004560                     l719:
 22250                           
 22251                           ; BSR set to: 1
 22252                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 22253                           
 22254                           ; BSR set to: 1
 22255  004560  0E00               	movlw	0
 22256  004562                     L28:
 22257  004562  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 22258                           
 22259                           ; BSR set to: 1
 22260                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 22261                           
 22262                           ; BSR set to: 1
 22263  004564  0E02               	movlw	2
 22264  004566  0100               	movlb	0	; () banked
 22265  004568  199F               	xorwf	_MSD_State& (0+255),w,b
 22266  00456A  A4D8               	btfss	status,2,c
 22267  00456C  D014               	goto	l721
 22268                           
 22269                           ; BSR set to: 0
 22270                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 22271  00456E  0E2A               	movlw	42
 22272  004570  199E               	xorwf	_MSDCommandState& (0+255),w,b
 22273  004572  B4D8               	btfsc	status,2,c
 22274  004574  D005               	goto	l722
 22275                           
 22276                           ; BSR set to: 0
 22277  004576  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 22278  004578  A4D8               	btfss	status,2,c
 22279  00457A  D002               	goto	l722
 22280  00457C                     u7840:
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 22284  00457C  0E05               	movlw	5
 22285  00457E  D01D               	goto	L31
 22286  004580                     l722:
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 22290                           
 22291                           ; BSR set to: 0
 22292  004580  0598               	decf	_MSDHostNoData& (0+255),w,b
 22293  004582  B4D8               	btfsc	status,2,c
 22294  004584  D00F               	goto	u7890
 22295                           
 22296                           ; BSR set to: 0
 22297                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 22298                           
 22299                           ; BSR set to: 0
 22300                           
 22301                           ; BSR set to: 0
 22302                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 22303  004586  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22304  004588  B4D8               	btfsc	status,2,c
 22305  00458A  D003               	goto	u7870
 22306                           
 22307                           ; BSR set to: 0
 22308                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 22309                           
 22310                           ; BSR set to: 0
 22311                           
 22312                           ; BSR set to: 0
 22313                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 22314  00458C  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22315  00458E  A4D8               	btfss	status,2,c
 22316  004590  D7F5               	goto	u7840
 22317  004592                     u7870:
 22318                           
 22319                           ; BSR set to: 0
 22320                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 22321  004592  0E04               	movlw	4
 22322  004594  D012               	goto	L31
 22323  004596                     l721:
 22324                           
 22325                           ; BSR set to: 0
 22326                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 22327                           
 22328                           ; BSR set to: 0
 22329  004596  0E2A               	movlw	42
 22330  004598  199E               	xorwf	_MSDCommandState& (0+255),w,b
 22331  00459A  B4D8               	btfsc	status,2,c
 22332  00459C  D00D               	goto	l737
 22333                           
 22334                           ; BSR set to: 0
 22335                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 22336                           
 22337                           ; BSR set to: 0
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 22341  00459E  0598               	decf	_MSDHostNoData& (0+255),w,b
 22342  0045A0  A4D8               	btfss	status,2,c
 22343  0045A2  D002               	goto	l733
 22344  0045A4                     u7890:
 22345                           
 22346                           ; BSR set to: 0
 22347                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 22348  0045A4  0E01               	movlw	1
 22349  0045A6  D009               	goto	L31
 22350  0045A8                     l733:
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 22354                           
 22355                           ; BSR set to: 0
 22356  0045A8  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22357  0045AA  B4D8               	btfsc	status,2,c
 22358  0045AC  D003               	goto	u7910
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 22362                           
 22363                           ; BSR set to: 0
 22364                           
 22365                           ; BSR set to: 0
 22366                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 22367  0045AE  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22368  0045B0  A4D8               	btfss	status,2,c
 22369  0045B2  D002               	goto	l737
 22370  0045B4                     u7910:
 22371                           
 22372                           ; BSR set to: 0
 22373                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 22374  0045B4  0E02               	movlw	2
 22375  0045B6  D001               	goto	L31
 22376  0045B8                     l737:
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 22380                           
 22381                           ; BSR set to: 0
 22382  0045B8  0E03               	movlw	3
 22383  0045BA                     L31:
 22384  0045BA  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 22385                           
 22386                           ; BSR set to: 0
 22387                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 22388                           
 22389                           ; BSR set to: 0
 22390                           
 22391                           ; BSR set to: 0
 22392                           
 22393                           ; BSR set to: 0
 22394                           
 22395                           ; BSR set to: 0
 22396                           
 22397                           ; BSR set to: 0
 22398  0045BC  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22399  0045BE  EC8B  F01F         	call	_MSDErrorHandler
 22400                           
 22401                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 22402  0045C2  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22403  0045C4  0012               	return	
 22404  0045C6                     __end_of_MSDCheckForErrorCases:
 22405                           	opt stack 0
 22406                           tosu	equ	0xFFF
 22407                           tosh	equ	0xFFE
 22408                           tosl	equ	0xFFD
 22409                           pclath	equ	0xFFA
 22410                           tblptru	equ	0xFF8
 22411                           tblptrh	equ	0xFF7
 22412                           tblptrl	equ	0xFF6
 22413                           tablat	equ	0xFF5
 22414                           prodh	equ	0xFF4
 22415                           prodl	equ	0xFF3
 22416                           intcon	equ	0xFF2
 22417                           intcon3	equ	0xFF0
 22418                           indf0	equ	0xFEF
 22419                           postinc0	equ	0xFEE
 22420                           fsr0h	equ	0xFEA
 22421                           fsr0l	equ	0xFE9
 22422                           wreg	equ	0xFE8
 22423                           indf1	equ	0xFE7
 22424                           postdec1	equ	0xFE5
 22425                           plusw1	equ	0xFE3
 22426                           fsr1h	equ	0xFE2
 22427                           fsr1l	equ	0xFE1
 22428                           indf2	equ	0xFDF
 22429                           postinc2	equ	0xFDE
 22430                           postdec2	equ	0xFDD
 22431                           plusw2	equ	0xFDB
 22432                           fsr2h	equ	0xFDA
 22433                           fsr2l	equ	0xFD9
 22434                           status	equ	0xFD8
 22435                           
 22436 ;; *************** function _MSDErrorHandler *****************
 22437 ;; Defined at:
 22438 ;;		line 1577 in file "usb_device_msd.c"
 22439 ;; Parameters:    Size  Location     Type
 22440 ;;  ErrorCase       1    wreg     unsigned char 
 22441 ;; Auto vars:     Size  Location     Type
 22442 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 22443 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 22444 ;; Return value:  Size  Location     Type
 22445 ;;                  1    wreg      void 
 22446 ;; Registers used:
 22447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22448 ;; Tracked objects:
 22449 ;;		On entry : 0/0
 22450 ;;		On exit  : 0/0
 22451 ;;		Unchanged: 0/0
 22452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22457 ;;Total ram usage:        2 bytes
 22458 ;; Hardware stack levels used:    1
 22459 ;; Hardware stack levels required when called:    1
 22460 ;; This function calls:
 22461 ;;		_ResetSenseData
 22462 ;;		_USBStallEndpoint
 22463 ;; This function is called by:
 22464 ;;		_MSDProcessCommandMediaAbsent
 22465 ;;		_MSDProcessCommandMediaPresent
 22466 ;;		_MSDCheckForErrorCases
 22467 ;; This function uses a non-reentrant model
 22468 ;;
 22469                           
 22470                           	psect	text103
 22471  003F16                     __ptext103:
 22472                           	opt stack 0
 22473  003F16                     _MSDErrorHandler:
 22474                           	opt stack 23
 22475                           
 22476                           ;incstack = 0
 22477                           ;MSDErrorHandler@ErrorCase stored from wreg
 22478  003F16  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 22479                           
 22480                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 22481  003F18  0100               	movlb	0	; () banked
 22482  003F1A  5188               	movf	_USBMSDInHandle& (0+255),w,b
 22483  003F1C  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22484  003F1E  B4D8               	btfsc	status,2,c
 22485  003F20  D006               	goto	u7470
 22486                           
 22487                           ; BSR set to: 0
 22488  003F22  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 22489  003F26  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22490  003F2A  BEDF               	btfsc	indf2,7,c
 22491  003F2C  0012               	return	
 22492  003F2E                     u7470:
 22493                           
 22494                           ; BSR set to: 0
 22495                           
 22496                           ; BSR set to: 0
 22497  003F2E  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22498  003F30  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22499  003F32  B4D8               	btfsc	status,2,c
 22500  003F34  D006               	goto	l741
 22501                           
 22502                           ; BSR set to: 0
 22503  003F36  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22504  003F3A  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22505  003F3E  BEDF               	btfsc	indf2,7,c
 22506  003F40  0012               	return	
 22507  003F42                     l741:
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 22511  003F42  C09F  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 22512                           
 22513                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 22514  003F46  699E               	setf	_MSDCommandState& (0+255),b
 22515                           
 22516                           ; BSR set to: 0
 22517                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 22518  003F48  0E00               	movlw	0
 22519  003F4A  6F9D               	movwf	_MSDReadState& (0+255),b
 22520                           
 22521                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 22522  003F4C  0E00               	movlw	0
 22523  003F4E  6F9C               	movwf	_MSDWriteState& (0+255),b
 22524                           
 22525                           ; BSR set to: 0
 22526                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 22527  003F50  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 22528  003F54  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 22529  003F58  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 22530  003F5C  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 22531                           
 22532                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 22533  003F60  0E01               	movlw	1
 22534  003F62  010D               	movlb	13	; () banked
 22535  003F64  6F8C               	movwf	140,b	;volatile
 22536                           
 22537                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 22538  003F66  0E03               	movlw	3
 22539  003F68  0100               	movlb	0	; () banked
 22540  003F6A  6F9F               	movwf	_MSD_State& (0+255),b
 22541                           
 22542                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 22543  003F6C  D043               	goto	l747
 22544  003F6E                     
 22545                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 22546                           
 22547                           ; BSR set to: 0
 22548  003F6E  0E02               	movlw	2
 22549  003F70  010D               	movlb	13	; () banked
 22550  003F72  6F8C               	movwf	140,b	;volatile
 22551                           
 22552                           ;usb_device_msd.c: 1607: break;
 22553  003F74  0012               	return	
 22554  003F76                     
 22555                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 22556                           
 22557                           ; BSR set to: 13
 22558  003F76  0E01               	movlw	1
 22559  003F78  6E01               	movwf	USBStallEndpoint@dir,c
 22560  003F7A  0E02               	movlw	2
 22561  003F7C  EC84  F01E         	call	_USBStallEndpoint
 22562                           
 22563                           ;usb_device_msd.c: 1611: break;
 22564  003F80  0012               	return	
 22565  003F82                     
 22566                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 22567  003F82  0E02               	movlw	2
 22568  003F84  010D               	movlb	13	; () banked
 22569  003F86  6F8C               	movwf	140,b	;volatile
 22570                           
 22571                           ; BSR set to: 13
 22572                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 22573  003F88  0E01               	movlw	1
 22574  003F8A  6E01               	movwf	USBStallEndpoint@dir,c
 22575  003F8C  0E02               	movlw	2
 22576  003F8E  EC84  F01E         	call	_USBStallEndpoint
 22577                           
 22578                           ;usb_device_msd.c: 1616: break;
 22579  003F92  0012               	return	
 22580  003F94                     
 22581                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 22582  003F94  0E00               	movlw	0
 22583  003F96  6E01               	movwf	USBStallEndpoint@dir,c
 22584  003F98  0E02               	movlw	2
 22585  003F9A  EC84  F01E         	call	_USBStallEndpoint
 22586                           
 22587                           ;usb_device_msd.c: 1620: break;
 22588  003F9E  0012               	return	
 22589  003FA0                     
 22590                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 22591  003FA0  0E02               	movlw	2
 22592  003FA2  010D               	movlb	13	; () banked
 22593  003FA4  6F8C               	movwf	140,b	;volatile
 22594                           
 22595                           ; BSR set to: 13
 22596                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 22597  003FA6  0E00               	movlw	0
 22598  003FA8  6E01               	movwf	USBStallEndpoint@dir,c
 22599  003FAA  0E02               	movlw	2
 22600  003FAC  EC84  F01E         	call	_USBStallEndpoint
 22601                           
 22602                           ;usb_device_msd.c: 1625: break;
 22603  003FB0  0012               	return	
 22604  003FB2                     
 22605                           ;usb_device_msd.c: 1628: ResetSenseData();
 22606  003FB2  ECCF  F031         	call	_ResetSenseData	;wreg free
 22607                           
 22608                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 22609  003FB6  0101               	movlb	1	; () banked
 22610  003FB8  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22611  003FBA  0BF0               	andlw	-16
 22612  003FBC  0905               	iorlw	5
 22613  003FBE  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22614                           
 22615                           ; BSR set to: 1
 22616                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 22617  003FC0  0E20               	movlw	32
 22618  003FC2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22619                           
 22620                           ; BSR set to: 1
 22621                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 22622  003FC4  0E00               	movlw	0
 22623  003FC6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 22627  003FC8  0E02               	movlw	2
 22628  003FCA  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 22629  003FCC  A4D8               	btfss	status,2,c
 22630  003FCE  D00C               	goto	l755
 22631                           
 22632                           ; BSR set to: 1
 22633  003FD0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22634  003FD2  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22635  003FD4  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22636  003FD6  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22637  003FD8  B4D8               	btfsc	status,2,c
 22638  003FDA  D006               	goto	l755
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22642  003FDC  0E00               	movlw	0
 22643  003FDE  6E01               	movwf	USBStallEndpoint@dir,c
 22644  003FE0  0E02               	movlw	2
 22645  003FE2  EC84  F01E         	call	_USBStallEndpoint
 22646                           
 22647                           ;usb_device_msd.c: 1636: }
 22648  003FE6  0012               	return	
 22649  003FE8                     l755:
 22650                           
 22651                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22652  003FE8  0E01               	movlw	1
 22653  003FEA  6E01               	movwf	USBStallEndpoint@dir,c
 22654  003FEC  0E02               	movlw	2
 22655  003FEE  EC84  F01E         	call	_USBStallEndpoint
 22656                           
 22657                           ;usb_device_msd.c: 1644: }
 22658                           
 22659                           ;usb_device_msd.c: 1643: break;
 22660                           
 22661                           ;usb_device_msd.c: 1642: default:
 22662                           
 22663                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22664  003FF2  0012               	return	
 22665  003FF4                     l747:
 22666  003FF4  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22667                           
 22668                           ; Switch size 1, requested type "space"
 22669                           ; Number of cases is 6, Range of values is 1 to 127
 22670                           ; switch strategies available:
 22671                           ; Name         Instructions Cycles
 22672                           ; simple_byte           19    10 (average)
 22673                           ;	Chosen strategy is simple_byte
 22674  003FF6  0A01               	xorlw	1	; case 1
 22675  003FF8  B4D8               	btfsc	status,2,c
 22676  003FFA  D7B9               	goto	l748
 22677  003FFC  0A03               	xorlw	3	; case 2
 22678  003FFE  B4D8               	btfsc	status,2,c
 22679  004000  D7BA               	goto	l750
 22680  004002  0A01               	xorlw	1	; case 3
 22681  004004  B4D8               	btfsc	status,2,c
 22682  004006  D7BD               	goto	l751
 22683  004008  0A07               	xorlw	7	; case 4
 22684  00400A  B4D8               	btfsc	status,2,c
 22685  00400C  D7C3               	goto	l752
 22686  00400E  0A01               	xorlw	1	; case 5
 22687  004010  B4D8               	btfsc	status,2,c
 22688  004012  D7C6               	goto	l753
 22689  004014  0A7A               	xorlw	122	; case 127
 22690  004016  A4D8               	btfss	status,2,c
 22691  004018  0012               	return	
 22692  00401A  D7CB               	goto	l754
 22693  00401C                     __end_of_MSDErrorHandler:
 22694                           	opt stack 0
 22695                           tosu	equ	0xFFF
 22696                           tosh	equ	0xFFE
 22697                           tosl	equ	0xFFD
 22698                           pclath	equ	0xFFA
 22699                           tblptru	equ	0xFF8
 22700                           tblptrh	equ	0xFF7
 22701                           tblptrl	equ	0xFF6
 22702                           tablat	equ	0xFF5
 22703                           prodh	equ	0xFF4
 22704                           prodl	equ	0xFF3
 22705                           intcon	equ	0xFF2
 22706                           intcon3	equ	0xFF0
 22707                           indf0	equ	0xFEF
 22708                           postinc0	equ	0xFEE
 22709                           fsr0h	equ	0xFEA
 22710                           fsr0l	equ	0xFE9
 22711                           wreg	equ	0xFE8
 22712                           indf1	equ	0xFE7
 22713                           postdec1	equ	0xFE5
 22714                           plusw1	equ	0xFE3
 22715                           fsr1h	equ	0xFE2
 22716                           fsr1l	equ	0xFE1
 22717                           indf2	equ	0xFDF
 22718                           postinc2	equ	0xFDE
 22719                           postdec2	equ	0xFDD
 22720                           plusw2	equ	0xFDB
 22721                           fsr2h	equ	0xFDA
 22722                           fsr2l	equ	0xFD9
 22723                           status	equ	0xFD8
 22724                           
 22725 ;; *************** function _USBStallEndpoint *****************
 22726 ;; Defined at:
 22727 ;;		line 1073 in file "usb_device.c"
 22728 ;; Parameters:    Size  Location     Type
 22729 ;;  ep              1    wreg     unsigned char 
 22730 ;;  dir             1    0[COMRAM] unsigned char 
 22731 ;; Auto vars:     Size  Location     Type
 22732 ;;  ep              1    5[COMRAM] unsigned char 
 22733 ;;  p               2    6[COMRAM] PTR struct __BDT
 22734 ;;		 -> BDT(48), 
 22735 ;; Return value:  Size  Location     Type
 22736 ;;                  1    wreg      void 
 22737 ;; Registers used:
 22738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22739 ;; Tracked objects:
 22740 ;;		On entry : 0/0
 22741 ;;		On exit  : 0/0
 22742 ;;		Unchanged: 0/0
 22743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22747 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22748 ;;Total ram usage:        8 bytes
 22749 ;; Hardware stack levels used:    1
 22750 ;; This function calls:
 22751 ;;		Nothing
 22752 ;; This function is called by:
 22753 ;;		_MSDTasks
 22754 ;;		_MSDReadHandler
 22755 ;;		_MSDWriteHandler
 22756 ;;		_MSDErrorHandler
 22757 ;;		_MSDTransferTerminated
 22758 ;; This function uses a non-reentrant model
 22759 ;;
 22760                           
 22761                           	psect	text104
 22762  003D08                     __ptext104:
 22763                           	opt stack 0
 22764  003D08                     _USBStallEndpoint:
 22765                           	opt stack 27
 22766                           
 22767                           ;incstack = 0
 22768                           ;USBStallEndpoint@ep stored from wreg
 22769  003D08  6E06               	movwf	USBStallEndpoint@ep,c
 22770                           
 22771                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22772  003D0A  5006               	movf	USBStallEndpoint@ep,w,c
 22773  003D0C  A4D8               	btfss	status,2,c
 22774  003D0E  D02C               	goto	l191
 22775                           
 22776                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22777  003D10  0100               	movlb	0	; () banked
 22778  003D12  EE20 F001          	lfsr	2,1
 22779  003D16  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22780  003D18  26D9               	addwf	fsr2l,f,c
 22781  003D1A  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22782  003D1C  22DA               	addwfc	fsr2h,f,c
 22783  003D1E  0E08               	movlw	8
 22784  003D20  6EDF               	movwf	indf2,c
 22785                           
 22786                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22787  003D22  EE20 F002          	lfsr	2,2
 22788  003D26  518C               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22789  003D28  26D9               	addwf	fsr2l,f,c
 22790  003D2A  518D               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22791  003D2C  22DA               	addwfc	fsr2h,f,c
 22792  003D2E  0E30               	movlw	48
 22793  003D30  6EDE               	movwf	postinc2,c
 22794  003D32  0E0D               	movlw	13
 22795  003D34  6EDD               	movwf	postdec2,c
 22796                           
 22797                           ; BSR set to: 0
 22798                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22799  003D36  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22800  003D3A  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22801  003D3E  0E0C               	movlw	12
 22802  003D40  6EDF               	movwf	indf2,c
 22803                           
 22804                           ; BSR set to: 0
 22805                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22806  003D42  C08C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22807  003D46  C08D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22808  003D4A  0E00               	movlw	0
 22809  003D4C  8EDB               	bsf	plusw2,7,c
 22810                           
 22811                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22812  003D4E  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 22813  003D52  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22814  003D56  0E04               	movlw	4
 22815  003D58  6EDF               	movwf	indf2,c
 22816                           
 22817                           ; BSR set to: 0
 22818                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22819  003D5A  C074  FFD9         	movff	_pBDTEntryIn,fsr2l
 22820  003D5E  C075  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22821  003D62  0E00               	movlw	0
 22822  003D64  8EDB               	bsf	plusw2,7,c
 22823                           
 22824                           ;usb_device.c: 1089: }
 22825  003D66  0012               	return	
 22826  003D68                     l191:
 22827                           
 22828                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22829                           
 22830                           ; BSR set to: 0
 22831  003D68  5001               	movf	USBStallEndpoint@dir,w,c
 22832  003D6A  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22833  003D6C  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22834  003D6E  90D8               	bcf	status,0,c
 22835  003D70  3602               	rlcf	??_USBStallEndpoint,f,c
 22836  003D72  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22837  003D74  5006               	movf	USBStallEndpoint@ep,w,c
 22838  003D76  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22839  003D78  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22840  003D7A  90D8               	bcf	status,0,c
 22841  003D7C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22842  003D7E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22843  003D80  90D8               	bcf	status,0,c
 22844  003D82  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22845  003D84  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22846  003D86  5002               	movf	??_USBStallEndpoint,w,c
 22847  003D88  2604               	addwf	??_USBStallEndpoint+2,f,c
 22848  003D8A  5003               	movf	??_USBStallEndpoint+1,w,c
 22849  003D8C  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22850  003D8E  90D8               	bcf	status,0,c
 22851  003D90  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22852  003D92  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22853  003D94  90D8               	bcf	status,0,c
 22854  003D96  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22855  003D98  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22856  003D9A  0E00               	movlw	0
 22857  003D9C  2404               	addwf	??_USBStallEndpoint+2,w,c
 22858  003D9E  6E07               	movwf	USBStallEndpoint@p,c
 22859  003DA0  0E0D               	movlw	13
 22860  003DA2  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22861  003DA4  6E08               	movwf	USBStallEndpoint@p+1,c
 22862                           
 22863                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22864  003DA6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22865  003DAA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22866  003DAE  0E00               	movlw	0
 22867  003DB0  84DB               	bsf	plusw2,2,c
 22868                           
 22869                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22870  003DB2  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22871  003DB6  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22872  003DBA  0E00               	movlw	0
 22873  003DBC  8EDB               	bsf	plusw2,7,c
 22874                           
 22875                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22876  003DBE  5006               	movf	USBStallEndpoint@ep,w,c
 22877  003DC0  0D04               	mullw	4
 22878  003DC2  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22879  003DC6  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22880  003DCA  5001               	movf	USBStallEndpoint@dir,w,c
 22881  003DCC  0D02               	mullw	2
 22882  003DCE  50F3               	movf	prodl,w,c
 22883  003DD0  2602               	addwf	??_USBStallEndpoint,f,c
 22884  003DD2  50F4               	movf	prodh,w,c
 22885  003DD4  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22886  003DD6  90D8               	bcf	status,0,c
 22887  003DD8  3602               	rlcf	??_USBStallEndpoint,f,c
 22888  003DDA  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22889  003DDC  90D8               	bcf	status,0,c
 22890  003DDE  3602               	rlcf	??_USBStallEndpoint,f,c
 22891  003DE0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22892  003DE2  0E04               	movlw	4
 22893  003DE4  2602               	addwf	??_USBStallEndpoint,f,c
 22894  003DE6  0E00               	movlw	0
 22895  003DE8  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22896  003DEA  0E00               	movlw	0
 22897  003DEC  2402               	addwf	??_USBStallEndpoint,w,c
 22898  003DEE  6E07               	movwf	USBStallEndpoint@p,c
 22899  003DF0  0E0D               	movlw	13
 22900  003DF2  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22901  003DF4  6E08               	movwf	USBStallEndpoint@p+1,c
 22902                           
 22903                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22904  003DF6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22905  003DFA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22906  003DFE  0E00               	movlw	0
 22907  003E00  84DB               	bsf	plusw2,2,c
 22908                           
 22909                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22910  003E02  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22911  003E06  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22912  003E0A  0E00               	movlw	0
 22913  003E0C  8EDB               	bsf	plusw2,7,c
 22914  003E0E  0012               	return	
 22915  003E10                     __end_of_USBStallEndpoint:
 22916                           	opt stack 0
 22917                           tosu	equ	0xFFF
 22918                           tosh	equ	0xFFE
 22919                           tosl	equ	0xFFD
 22920                           pclath	equ	0xFFA
 22921                           tblptru	equ	0xFF8
 22922                           tblptrh	equ	0xFF7
 22923                           tblptrl	equ	0xFF6
 22924                           tablat	equ	0xFF5
 22925                           prodh	equ	0xFF4
 22926                           prodl	equ	0xFF3
 22927                           intcon	equ	0xFF2
 22928                           intcon3	equ	0xFF0
 22929                           indf0	equ	0xFEF
 22930                           postinc0	equ	0xFEE
 22931                           fsr0h	equ	0xFEA
 22932                           fsr0l	equ	0xFE9
 22933                           wreg	equ	0xFE8
 22934                           indf1	equ	0xFE7
 22935                           postdec1	equ	0xFE5
 22936                           plusw1	equ	0xFE3
 22937                           fsr1h	equ	0xFE2
 22938                           fsr1l	equ	0xFE1
 22939                           indf2	equ	0xFDF
 22940                           postinc2	equ	0xFDE
 22941                           postdec2	equ	0xFDD
 22942                           plusw2	equ	0xFDB
 22943                           fsr2h	equ	0xFDA
 22944                           fsr2l	equ	0xFD9
 22945                           status	equ	0xFD8
 22946                           
 22947 ;; *************** function _ResetSenseData *****************
 22948 ;; Defined at:
 22949 ;;		line 1373 in file "usb_device_msd.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;		None
 22952 ;; Auto vars:     Size  Location     Type
 22953 ;;		None
 22954 ;; Return value:  Size  Location     Type
 22955 ;;                  1    wreg      void 
 22956 ;; Registers used:
 22957 ;;		wreg, status,2
 22958 ;; Tracked objects:
 22959 ;;		On entry : 0/0
 22960 ;;		On exit  : 0/0
 22961 ;;		Unchanged: 0/0
 22962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22967 ;;Total ram usage:        0 bytes
 22968 ;; Hardware stack levels used:    1
 22969 ;; This function calls:
 22970 ;;		Nothing
 22971 ;; This function is called by:
 22972 ;;		_USBMSDInit
 22973 ;;		_MSDProcessCommandMediaAbsent
 22974 ;;		_MSDProcessCommandMediaPresent
 22975 ;;		_MSDErrorHandler
 22976 ;; This function uses a non-reentrant model
 22977 ;;
 22978                           
 22979                           	psect	text105
 22980  00639E                     __ptext105:
 22981                           	opt stack 0
 22982  00639E                     _ResetSenseData:
 22983                           	opt stack 26
 22984                           
 22985                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22986                           
 22987                           ;incstack = 0
 22988  00639E  0101               	movlb	1	; () banked
 22989  0063A0  911F               	bcf	_gblSenseData& (0+255),0,b
 22990  0063A2  931F               	bcf	_gblSenseData& (0+255),1,b
 22991  0063A4  951F               	bcf	_gblSenseData& (0+255),2,b
 22992  0063A6  971F               	bcf	_gblSenseData& (0+255),3,b
 22993  0063A8  891F               	bsf	_gblSenseData& (0+255),4,b
 22994  0063AA  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22995  0063AC  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22996                           
 22997                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22998  0063AE  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22999                           
 23000                           ; BSR set to: 1
 23001                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 23002  0063B0  0E00               	movlw	0
 23003  0063B2  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 23007  0063B4  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 23008  0063B6  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 23009  0063B8  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 23010  0063BA  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 23011                           
 23012                           ; BSR set to: 1
 23013                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 23014  0063BC  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 23015                           
 23016                           ; BSR set to: 1
 23017                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 23018  0063BE  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 23019                           
 23020                           ; BSR set to: 1
 23021                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 23022  0063C0  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 23023                           
 23024                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 23025  0063C2  0E00               	movlw	0
 23026  0063C4  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 23027                           
 23028                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 23029  0063C6  0E00               	movlw	0
 23030  0063C8  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 23031                           
 23032                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 23033  0063CA  0E00               	movlw	0
 23034  0063CC  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 23035                           
 23036                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 23037  0063CE  0E00               	movlw	0
 23038  0063D0  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 23039                           
 23040                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 23041  0063D2  0E0A               	movlw	10
 23042  0063D4  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 23043                           
 23044                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 23045  0063D6  0E00               	movlw	0
 23046  0063D8  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 23047  0063DA  0E00               	movlw	0
 23048  0063DC  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 23049  0063DE  0E00               	movlw	0
 23050  0063E0  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 23051  0063E2  0E00               	movlw	0
 23052  0063E4  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 23053                           
 23054                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 23055  0063E6  0E00               	movlw	0
 23056  0063E8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23057                           
 23058                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 23059  0063EA  0E00               	movlw	0
 23060  0063EC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23061                           
 23062                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 23063  0063EE  0E00               	movlw	0
 23064  0063F0  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 23065                           
 23066                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 23067  0063F2  0E00               	movlw	0
 23068  0063F4  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 23069                           
 23070                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 23071  0063F6  0E00               	movlw	0
 23072  0063F8  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 23073                           
 23074                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 23075  0063FA  0E00               	movlw	0
 23076  0063FC  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 23077                           
 23078                           ; BSR set to: 1
 23079  0063FE  0012               	return		;funcret
 23080  006400                     __end_of_ResetSenseData:
 23081                           	opt stack 0
 23082                           tosu	equ	0xFFF
 23083                           tosh	equ	0xFFE
 23084                           tosl	equ	0xFFD
 23085                           pclath	equ	0xFFA
 23086                           tblptru	equ	0xFF8
 23087                           tblptrh	equ	0xFF7
 23088                           tblptrl	equ	0xFF6
 23089                           tablat	equ	0xFF5
 23090                           prodh	equ	0xFF4
 23091                           prodl	equ	0xFF3
 23092                           intcon	equ	0xFF2
 23093                           intcon3	equ	0xFF0
 23094                           indf0	equ	0xFEF
 23095                           postinc0	equ	0xFEE
 23096                           fsr0h	equ	0xFEA
 23097                           fsr0l	equ	0xFE9
 23098                           wreg	equ	0xFE8
 23099                           indf1	equ	0xFE7
 23100                           postdec1	equ	0xFE5
 23101                           plusw1	equ	0xFE3
 23102                           fsr1h	equ	0xFE2
 23103                           fsr1l	equ	0xFE1
 23104                           indf2	equ	0xFDF
 23105                           postinc2	equ	0xFDE
 23106                           postdec2	equ	0xFDD
 23107                           plusw2	equ	0xFDB
 23108                           fsr2h	equ	0xFDA
 23109                           fsr2l	equ	0xFD9
 23110                           status	equ	0xFD8
 23111                           
 23112 ;; *************** function _ExternalFlash_SectorRead *****************
 23113 ;; Defined at:
 23114 ;;		line 40 in file "external_flash.c"
 23115 ;; Parameters:    Size  Location     Type
 23116 ;;  config          2   43[COMRAM] PTR void 
 23117 ;;		 -> NULL(0), 
 23118 ;;  sector_addr     4   45[COMRAM] unsigned long 
 23119 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 23120 ;;		 -> msd_buffer(512), 
 23121 ;; Auto vars:     Size  Location     Type
 23122 ;;  page            2   51[COMRAM] unsigned int 
 23123 ;; Return value:  Size  Location     Type
 23124 ;;                  1    wreg      unsigned char 
 23125 ;; Registers used:
 23126 ;;		wreg, status,2, status,0, cstack
 23127 ;; Tracked objects:
 23128 ;;		On entry : 0/0
 23129 ;;		On exit  : 0/0
 23130 ;;		Unchanged: 0/0
 23131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23132 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23135 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23136 ;;Total ram usage:       10 bytes
 23137 ;; Hardware stack levels used:    1
 23138 ;; Hardware stack levels required when called:    5
 23139 ;; This function calls:
 23140 ;;		_flash_sector_read
 23141 ;; This function is called by:
 23142 ;;		_MSDReadHandler
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text106
 23147  006E80                     __ptext106:
 23148                           	opt stack 0
 23149  006E80                     _ExternalFlash_SectorRead:
 23150                           	opt stack 20
 23151                           
 23152                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 23153                           
 23154                           ; BSR set to: 1
 23155                           ;incstack = 0
 23156  006E80  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 23157  006E84  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 23158                           
 23159                           ;external_flash.c: 45: if(sector_addr >= 8192)
 23160  006E88  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 23161  006E8A  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 23162  006E8C  E104               	bnz	u8110
 23163  006E8E  0E20               	movlw	32
 23164  006E90  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 23165  006E92  A0D8               	btfss	status,0,c
 23166  006E94  D002               	goto	l1929
 23167  006E96                     u8110:
 23168                           
 23169                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 23170  006E96  0E00               	movlw	0
 23171  006E98  0012               	return	
 23172  006E9A                     l1929:
 23173                           
 23174                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 23175  006E9A  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 23176  006E9E  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 23177  006EA2  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 23178  006EA6  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 23179  006EAA  EC59  F038         	call	_flash_sector_read	;wreg free
 23180                           
 23181                           ;external_flash.c: 53: return 1;
 23182  006EAE  0E01               	movlw	1
 23183  006EB0  0012               	return	
 23184  006EB2                     __end_of_ExternalFlash_SectorRead:
 23185                           	opt stack 0
 23186                           tosu	equ	0xFFF
 23187                           tosh	equ	0xFFE
 23188                           tosl	equ	0xFFD
 23189                           pclath	equ	0xFFA
 23190                           tblptru	equ	0xFF8
 23191                           tblptrh	equ	0xFF7
 23192                           tblptrl	equ	0xFF6
 23193                           tablat	equ	0xFF5
 23194                           prodh	equ	0xFF4
 23195                           prodl	equ	0xFF3
 23196                           intcon	equ	0xFF2
 23197                           intcon3	equ	0xFF0
 23198                           indf0	equ	0xFEF
 23199                           postinc0	equ	0xFEE
 23200                           fsr0h	equ	0xFEA
 23201                           fsr0l	equ	0xFE9
 23202                           wreg	equ	0xFE8
 23203                           indf1	equ	0xFE7
 23204                           postdec1	equ	0xFE5
 23205                           plusw1	equ	0xFE3
 23206                           fsr1h	equ	0xFE2
 23207                           fsr1l	equ	0xFE1
 23208                           indf2	equ	0xFDF
 23209                           postinc2	equ	0xFDE
 23210                           postdec2	equ	0xFDD
 23211                           plusw2	equ	0xFDB
 23212                           fsr2h	equ	0xFDA
 23213                           fsr2l	equ	0xFD9
 23214                           status	equ	0xFD8
 23215                           
 23216 ;; *************** function _flash_sector_read *****************
 23217 ;; Defined at:
 23218 ;;		line 426 in file "flash.c"
 23219 ;; Parameters:    Size  Location     Type
 23220 ;;  page            2   39[COMRAM] unsigned int 
 23221 ;;  data            2   41[COMRAM] PTR unsigned char 
 23222 ;;		 -> buffer(512), msd_buffer(512), 
 23223 ;; Auto vars:     Size  Location     Type
 23224 ;;		None
 23225 ;; Return value:  Size  Location     Type
 23226 ;;                  1    wreg      void 
 23227 ;; Registers used:
 23228 ;;		wreg, status,2, status,0, cstack
 23229 ;; Tracked objects:
 23230 ;;		On entry : 0/0
 23231 ;;		On exit  : 0/0
 23232 ;;		Unchanged: 0/0
 23233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23238 ;;Total ram usage:        4 bytes
 23239 ;; Hardware stack levels used:    1
 23240 ;; Hardware stack levels required when called:    4
 23241 ;; This function calls:
 23242 ;;		__flash_partial_read
 23243 ;; This function is called by:
 23244 ;;		_ExternalFlash_SectorRead
 23245 ;;		__find_nth_cluster
 23246 ;;		_fat_find_file
 23247 ;;		_fat_get_format_status
 23248 ;;		__get_available_cluster
 23249 ;;		__make_cluster_chain
 23250 ;; This function uses a non-reentrant model
 23251 ;;
 23252                           
 23253                           	psect	text107
 23254  0070B2                     __ptext107:
 23255                           	opt stack 0
 23256  0070B2                     _flash_sector_read:
 23257                           	opt stack 23
 23258                           
 23259                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 23260                           
 23261                           ;incstack = 0
 23262  0070B2  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 23263  0070B6  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 23264  0070BA  0E00               	movlw	0
 23265  0070BC  6E17               	movwf	__flash_partial_read@start+1,c
 23266  0070BE  0E00               	movlw	0
 23267  0070C0  6E16               	movwf	__flash_partial_read@start,c
 23268  0070C2  0E02               	movlw	2
 23269  0070C4  6E19               	movwf	__flash_partial_read@length+1,c
 23270  0070C6  0E00               	movlw	0
 23271  0070C8  6E18               	movwf	__flash_partial_read@length,c
 23272  0070CA  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 23273  0070CE  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 23274  0070D2  EC0E  F02F         	call	__flash_partial_read	;wreg free
 23275  0070D6  0012               	return		;funcret
 23276  0070D8                     __end_of_flash_sector_read:
 23277                           	opt stack 0
 23278                           tosu	equ	0xFFF
 23279                           tosh	equ	0xFFE
 23280                           tosl	equ	0xFFD
 23281                           pclath	equ	0xFFA
 23282                           tblptru	equ	0xFF8
 23283                           tblptrh	equ	0xFF7
 23284                           tblptrl	equ	0xFF6
 23285                           tablat	equ	0xFF5
 23286                           prodh	equ	0xFF4
 23287                           prodl	equ	0xFF3
 23288                           intcon	equ	0xFF2
 23289                           intcon3	equ	0xFF0
 23290                           indf0	equ	0xFEF
 23291                           postinc0	equ	0xFEE
 23292                           fsr0h	equ	0xFEA
 23293                           fsr0l	equ	0xFE9
 23294                           wreg	equ	0xFE8
 23295                           indf1	equ	0xFE7
 23296                           postdec1	equ	0xFE5
 23297                           plusw1	equ	0xFE3
 23298                           fsr1h	equ	0xFE2
 23299                           fsr1l	equ	0xFE1
 23300                           indf2	equ	0xFDF
 23301                           postinc2	equ	0xFDE
 23302                           postdec2	equ	0xFDD
 23303                           plusw2	equ	0xFDB
 23304                           fsr2h	equ	0xFDA
 23305                           fsr2l	equ	0xFD9
 23306                           status	equ	0xFD8
 23307                           
 23308 ;; *************** function __flash_partial_read *****************
 23309 ;; Defined at:
 23310 ;;		line 309 in file "flash.c"
 23311 ;; Parameters:    Size  Location     Type
 23312 ;;  page            2   19[COMRAM] unsigned int 
 23313 ;;  start           2   21[COMRAM] unsigned int 
 23314 ;;  length          2   23[COMRAM] unsigned int 
 23315 ;;  data            2   25[COMRAM] PTR unsigned char 
 23316 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 23317 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 23318 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 23319 ;;		 -> msd_buffer(512), 
 23320 ;; Auto vars:     Size  Location     Type
 23321 ;;  command         4   31[COMRAM] unsigned char [4]
 23322 ;;  address         4   35[COMRAM] unsigned long 
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  1    wreg      void 
 23325 ;; Registers used:
 23326 ;;		wreg, status,2, status,0, cstack
 23327 ;; Tracked objects:
 23328 ;;		On entry : 0/0
 23329 ;;		On exit  : 0/0
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23333 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23335 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23336 ;;Total ram usage:       20 bytes
 23337 ;; Hardware stack levels used:    1
 23338 ;; Hardware stack levels required when called:    3
 23339 ;; This function calls:
 23340 ;;		__flash_is_busy
 23341 ;;		_spi_tx_rx
 23342 ;; This function is called by:
 23343 ;;		_flash_sector_read
 23344 ;;		_flash_partial_read
 23345 ;; This function uses a non-reentrant model
 23346 ;;
 23347                           
 23348                           	psect	text108
 23349  005E1C                     __ptext108:
 23350                           	opt stack 0
 23351  005E1C                     __flash_partial_read:
 23352                           	opt stack 23
 23353                           
 23354                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 23355                           
 23356                           ;incstack = 0
 23357  005E1C  ECB5  F038         	call	__flash_is_busy	;wreg free
 23358  005E20  0900               	iorlw	0
 23359  005E22  A4D8               	btfss	status,2,c
 23360  005E24  D7FB               	goto	__flash_partial_read
 23361                           
 23362                           ;flash.c: 318: address = page;
 23363  005E26  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 23364  005E2A  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 23365  005E2E  6A26               	clrf	__flash_partial_read@address+2,c
 23366  005E30  6A27               	clrf	__flash_partial_read@address+3,c
 23367                           
 23368                           ;flash.c: 319: address <<= 9;
 23369  005E32  0E09               	movlw	9
 23370  005E34                     u7345:
 23371  005E34  90D8               	bcf	status,0,c
 23372  005E36  3624               	rlcf	__flash_partial_read@address,f,c
 23373  005E38  3625               	rlcf	__flash_partial_read@address+1,f,c
 23374  005E3A  3626               	rlcf	__flash_partial_read@address+2,f,c
 23375  005E3C  3627               	rlcf	__flash_partial_read@address+3,f,c
 23376  005E3E  2EE8               	decfsz	wreg,f,c
 23377  005E40  D7F9               	goto	u7345
 23378                           
 23379                           ;flash.c: 320: address |= start;
 23380  005E42  5016               	movf	__flash_partial_read@start,w,c
 23381  005E44  6E1C               	movwf	??__flash_partial_read& (0+255),c
 23382  005E46  5017               	movf	__flash_partial_read@start+1,w,c
 23383  005E48  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 23384  005E4A  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 23385  005E4C  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 23386  005E4E  501C               	movf	??__flash_partial_read,w,c
 23387  005E50  1224               	iorwf	__flash_partial_read@address,f,c
 23388  005E52  501D               	movf	??__flash_partial_read+1,w,c
 23389  005E54  1225               	iorwf	__flash_partial_read@address+1,f,c
 23390  005E56  501E               	movf	??__flash_partial_read+2,w,c
 23391  005E58  1226               	iorwf	__flash_partial_read@address+2,f,c
 23392  005E5A  501F               	movf	??__flash_partial_read+3,w,c
 23393  005E5C  1227               	iorwf	__flash_partial_read@address+3,f,c
 23394                           
 23395                           ;flash.c: 323: command[0] = 0x03;
 23396  005E5E  0E03               	movlw	3
 23397  005E60  6E20               	movwf	__flash_partial_read@command,c
 23398                           
 23399                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 23400  005E62  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 23401                           
 23402                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 23403  005E66  5025               	movf	__flash_partial_read@address+1,w,c
 23404  005E68  6E22               	movwf	__flash_partial_read@command+2,c
 23405                           
 23406                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 23407  005E6A  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 23408                           
 23409                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 23410  005E6E  0E20               	movlw	low __flash_partial_read@command
 23411  005E70  6E01               	movwf	spi_tx_rx@command,c
 23412  005E72  0E00               	movlw	high __flash_partial_read@command
 23413  005E74  6E02               	movwf	spi_tx_rx@command+1,c
 23414  005E76  0E00               	movlw	0
 23415  005E78  6E04               	movwf	spi_tx_rx@command_length+1,c
 23416  005E7A  0E04               	movlw	4
 23417  005E7C  6E03               	movwf	spi_tx_rx@command_length,c
 23418  005E7E  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 23419  005E82  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 23420  005E86  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 23421  005E8A  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 23422  005E8E  ECA3  F02C         	call	_spi_tx_rx	;wreg free
 23423  005E92  0012               	return		;funcret
 23424  005E94                     __end_of__flash_partial_read:
 23425                           	opt stack 0
 23426                           tosu	equ	0xFFF
 23427                           tosh	equ	0xFFE
 23428                           tosl	equ	0xFFD
 23429                           pclath	equ	0xFFA
 23430                           tblptru	equ	0xFF8
 23431                           tblptrh	equ	0xFF7
 23432                           tblptrl	equ	0xFF6
 23433                           tablat	equ	0xFF5
 23434                           prodh	equ	0xFF4
 23435                           prodl	equ	0xFF3
 23436                           intcon	equ	0xFF2
 23437                           intcon3	equ	0xFF0
 23438                           indf0	equ	0xFEF
 23439                           postinc0	equ	0xFEE
 23440                           fsr0h	equ	0xFEA
 23441                           fsr0l	equ	0xFE9
 23442                           wreg	equ	0xFE8
 23443                           indf1	equ	0xFE7
 23444                           postdec1	equ	0xFE5
 23445                           plusw1	equ	0xFE3
 23446                           fsr1h	equ	0xFE2
 23447                           fsr1l	equ	0xFE1
 23448                           indf2	equ	0xFDF
 23449                           postinc2	equ	0xFDE
 23450                           postdec2	equ	0xFDD
 23451                           plusw2	equ	0xFDB
 23452                           fsr2h	equ	0xFDA
 23453                           fsr2l	equ	0xFD9
 23454                           status	equ	0xFD8
 23455                           
 23456 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 23457 ;; Defined at:
 23458 ;;		line 993 in file "usb_device_msd.c"
 23459 ;; Parameters:    Size  Location     Type
 23460 ;;  DiExpected      2    0[COMRAM] unsigned int 
 23461 ;; Auto vars:     Size  Location     Type
 23462 ;;		None
 23463 ;; Return value:  Size  Location     Type
 23464 ;;                  1    wreg      void 
 23465 ;; Registers used:
 23466 ;;		wreg, status,2, status,0
 23467 ;; Tracked objects:
 23468 ;;		On entry : 0/0
 23469 ;;		On exit  : 0/0
 23470 ;;		Unchanged: 0/0
 23471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23476 ;;Total ram usage:        6 bytes
 23477 ;; Hardware stack levels used:    1
 23478 ;; This function calls:
 23479 ;;		Nothing
 23480 ;; This function is called by:
 23481 ;;		_MSDProcessCommandMediaPresent
 23482 ;; This function uses a non-reentrant model
 23483 ;;
 23484                           
 23485                           	psect	text109
 23486  005816                     __ptext109:
 23487                           	opt stack 0
 23488  005816                     _MSDComputeDeviceInAndResidue:
 23489                           	opt stack 26
 23490                           
 23491                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 23492                           
 23493                           ;incstack = 0
 23494  005816  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23495  005818  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23496  00581A  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23497  00581C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23498  00581E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23499  005820  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23500  005822  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 23501  005824  0101               	movlb	1	; () banked
 23502  005826  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23503  005828  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 23504  00582A  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 23505  00582C  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 23506  00582E  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 23507  005830  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 23508  005832  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 23509  005834  B0D8               	btfsc	status,0,c
 23510  005836  D00E               	goto	l659
 23511                           
 23512                           ; BSR set to: 1
 23513                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 23514  005838  0E00               	movlw	0
 23515  00583A  010D               	movlb	13	; () banked
 23516  00583C  6F88               	movwf	136,b	;volatile
 23517  00583E  0E00               	movlw	0
 23518  005840  6F89               	movwf	137,b	;volatile
 23519  005842  0E00               	movlw	0
 23520  005844  6F8A               	movwf	138,b	;volatile
 23521  005846  0E00               	movlw	0
 23522  005848  6F8B               	movwf	139,b	;volatile
 23523                           
 23524                           ; BSR set to: 13
 23525                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 23526  00584A  C108  F086         	movff	_gblCBW+8,_TransferLength
 23527  00584E  C109  F087         	movff	_gblCBW+9,_TransferLength+1
 23528                           
 23529                           ;usb_device_msd.c: 1002: }
 23530  005852  0012               	return	
 23531  005854                     l659:
 23532                           
 23533                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 23534                           
 23535                           ; BSR set to: 13
 23536  005854  0100               	movlb	0	; () banked
 23537  005856  5186               	movf	_TransferLength& (0+255),w,b
 23538  005858  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23539  00585A  5187               	movf	(_TransferLength+1)& (0+255),w,b
 23540  00585C  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23541  00585E  B0D8               	btfsc	status,0,c
 23542  005860  D004               	goto	l661
 23543                           
 23544                           ; BSR set to: 0
 23545                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 23546  005862  C001  F086         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 23547  005866  C002  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 23548  00586A                     l661:
 23549                           
 23550                           ; BSR set to: 0
 23551                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 23552                           
 23553                           ; BSR set to: 0
 23554  00586A  5186               	movf	_TransferLength& (0+255),w,b
 23555  00586C  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23556  00586E  5187               	movf	(_TransferLength+1)& (0+255),w,b
 23557  005870  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23558  005872  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23559  005874  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23560  005876  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 23561  005878  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 23562  00587A  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 23563  00587C  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 23564  00587E  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 23565  005880  0E00               	movlw	0
 23566  005882  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 23567  005884  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 23568  005886  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 23569  005888  0101               	movlb	1	; () banked
 23570  00588A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23571  00588C  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 23572  00588E  010D               	movlb	13	; () banked
 23573  005890  6F88               	movwf	136,b	;volatile
 23574  005892  0101               	movlb	1	; () banked
 23575  005894  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23576  005896  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 23577  005898  010D               	movlb	13	; () banked
 23578  00589A  6F89               	movwf	137,b	;volatile
 23579  00589C  0101               	movlb	1	; () banked
 23580  00589E  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23581  0058A0  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 23582  0058A2  010D               	movlb	13	; () banked
 23583  0058A4  6F8A               	movwf	138,b	;volatile
 23584  0058A6  0101               	movlb	1	; () banked
 23585  0058A8  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23586  0058AA  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 23587  0058AC  010D               	movlb	13	; () banked
 23588  0058AE  6F8B               	movwf	139,b	;volatile
 23589  0058B0  0012               	return	
 23590  0058B2                     __end_of_MSDComputeDeviceInAndResidue:
 23591                           	opt stack 0
 23592                           tosu	equ	0xFFF
 23593                           tosh	equ	0xFFE
 23594                           tosl	equ	0xFFD
 23595                           pclath	equ	0xFFA
 23596                           tblptru	equ	0xFF8
 23597                           tblptrh	equ	0xFF7
 23598                           tblptrl	equ	0xFF6
 23599                           tablat	equ	0xFF5
 23600                           prodh	equ	0xFF4
 23601                           prodl	equ	0xFF3
 23602                           intcon	equ	0xFF2
 23603                           intcon3	equ	0xFF0
 23604                           indf0	equ	0xFEF
 23605                           postinc0	equ	0xFEE
 23606                           fsr0h	equ	0xFEA
 23607                           fsr0l	equ	0xFE9
 23608                           wreg	equ	0xFE8
 23609                           indf1	equ	0xFE7
 23610                           postdec1	equ	0xFE5
 23611                           plusw1	equ	0xFE3
 23612                           fsr1h	equ	0xFE2
 23613                           fsr1l	equ	0xFE1
 23614                           indf2	equ	0xFDF
 23615                           postinc2	equ	0xFDE
 23616                           postdec2	equ	0xFDD
 23617                           plusw2	equ	0xFDB
 23618                           fsr2h	equ	0xFDA
 23619                           fsr2l	equ	0xFD9
 23620                           status	equ	0xFD8
 23621                           
 23622 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 23623 ;; Defined at:
 23624 ;;		line 18 in file "external_flash.c"
 23625 ;; Parameters:    Size  Location     Type
 23626 ;;  config          2    0[COMRAM] PTR void 
 23627 ;;		 -> NULL(0), 
 23628 ;; Auto vars:     Size  Location     Type
 23629 ;;		None
 23630 ;; Return value:  Size  Location     Type
 23631 ;;                  2    0[COMRAM] unsigned int 
 23632 ;; Registers used:
 23633 ;;		wreg, status,2
 23634 ;; Tracked objects:
 23635 ;;		On entry : 0/0
 23636 ;;		On exit  : 0/0
 23637 ;;		Unchanged: 0/0
 23638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23643 ;;Total ram usage:        2 bytes
 23644 ;; Hardware stack levels used:    1
 23645 ;; This function calls:
 23646 ;;		Nothing
 23647 ;; This function is called by:
 23648 ;;		_MSDProcessCommandMediaPresent
 23649 ;; This function uses a non-reentrant model
 23650 ;;
 23651                           
 23652                           	psect	text110
 23653  0073EC                     __ptext110:
 23654                           	opt stack 0
 23655  0073EC                     _ExternalFlash_SectorSizeRead:
 23656                           	opt stack 26
 23657                           
 23658                           ;external_flash.c: 20: return 512;
 23659                           
 23660                           ; BSR set to: 13
 23661                           ;incstack = 0
 23662  0073EC  0E02               	movlw	2
 23663  0073EE  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23664  0073F0  0E00               	movlw	0
 23665  0073F2  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23666  0073F4  0012               	return	
 23667  0073F6                     __end_of_ExternalFlash_SectorSizeRead:
 23668                           	opt stack 0
 23669                           tosu	equ	0xFFF
 23670                           tosh	equ	0xFFE
 23671                           tosl	equ	0xFFD
 23672                           pclath	equ	0xFFA
 23673                           tblptru	equ	0xFF8
 23674                           tblptrh	equ	0xFF7
 23675                           tblptrl	equ	0xFF6
 23676                           tablat	equ	0xFF5
 23677                           prodh	equ	0xFF4
 23678                           prodl	equ	0xFF3
 23679                           intcon	equ	0xFF2
 23680                           intcon3	equ	0xFF0
 23681                           indf0	equ	0xFEF
 23682                           postinc0	equ	0xFEE
 23683                           fsr0h	equ	0xFEA
 23684                           fsr0l	equ	0xFE9
 23685                           wreg	equ	0xFE8
 23686                           indf1	equ	0xFE7
 23687                           postdec1	equ	0xFE5
 23688                           plusw1	equ	0xFE3
 23689                           fsr1h	equ	0xFE2
 23690                           fsr1l	equ	0xFE1
 23691                           indf2	equ	0xFDF
 23692                           postinc2	equ	0xFDE
 23693                           postdec2	equ	0xFDD
 23694                           plusw2	equ	0xFDB
 23695                           fsr2h	equ	0xFDA
 23696                           fsr2l	equ	0xFD9
 23697                           status	equ	0xFD8
 23698                           
 23699 ;; *************** function _ExternalFlash_CapacityRead *****************
 23700 ;; Defined at:
 23701 ;;		line 23 in file "external_flash.c"
 23702 ;; Parameters:    Size  Location     Type
 23703 ;;  config          2    0[COMRAM] PTR void 
 23704 ;;		 -> NULL(0), 
 23705 ;; Auto vars:     Size  Location     Type
 23706 ;;		None
 23707 ;; Return value:  Size  Location     Type
 23708 ;;                  4    0[COMRAM] unsigned long 
 23709 ;; Registers used:
 23710 ;;		wreg, status,2
 23711 ;; Tracked objects:
 23712 ;;		On entry : 0/0
 23713 ;;		On exit  : 0/0
 23714 ;;		Unchanged: 0/0
 23715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23720 ;;Total ram usage:        4 bytes
 23721 ;; Hardware stack levels used:    1
 23722 ;; This function calls:
 23723 ;;		Nothing
 23724 ;; This function is called by:
 23725 ;;		_MSDProcessCommandMediaPresent
 23726 ;; This function uses a non-reentrant model
 23727 ;;
 23728                           
 23729                           	psect	text111
 23730  007358                     __ptext111:
 23731                           	opt stack 0
 23732  007358                     _ExternalFlash_CapacityRead:
 23733                           	opt stack 26
 23734                           
 23735                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23736                           
 23737                           ;incstack = 0
 23738  007358  0EFF               	movlw	255
 23739  00735A  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23740  00735C  0E1F               	movlw	31
 23741  00735E  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23742  007360  0E00               	movlw	0
 23743  007362  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23744  007364  0E00               	movlw	0
 23745  007366  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23746  007368  0012               	return	
 23747  00736A                     __end_of_ExternalFlash_CapacityRead:
 23748                           	opt stack 0
 23749                           tosu	equ	0xFFF
 23750                           tosh	equ	0xFFE
 23751                           tosl	equ	0xFFD
 23752                           pclath	equ	0xFFA
 23753                           tblptru	equ	0xFF8
 23754                           tblptrh	equ	0xFF7
 23755                           tblptrl	equ	0xFF6
 23756                           tablat	equ	0xFF5
 23757                           prodh	equ	0xFF4
 23758                           prodl	equ	0xFF3
 23759                           intcon	equ	0xFF2
 23760                           intcon3	equ	0xFF0
 23761                           indf0	equ	0xFEF
 23762                           postinc0	equ	0xFEE
 23763                           fsr0h	equ	0xFEA
 23764                           fsr0l	equ	0xFE9
 23765                           wreg	equ	0xFE8
 23766                           indf1	equ	0xFE7
 23767                           postdec1	equ	0xFE5
 23768                           plusw1	equ	0xFE3
 23769                           fsr1h	equ	0xFE2
 23770                           fsr1l	equ	0xFE1
 23771                           indf2	equ	0xFDF
 23772                           postinc2	equ	0xFDE
 23773                           postdec2	equ	0xFDD
 23774                           plusw2	equ	0xFDB
 23775                           fsr2h	equ	0xFDA
 23776                           fsr2l	equ	0xFD9
 23777                           status	equ	0xFD8
 23778                           
 23779 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23780 ;; Defined at:
 23781 ;;		line 10 in file "external_flash.c"
 23782 ;; Parameters:    Size  Location     Type
 23783 ;;  config          2    0[COMRAM] PTR void 
 23784 ;;		 -> NULL(0), 
 23785 ;; Auto vars:     Size  Location     Type
 23786 ;;		None
 23787 ;; Return value:  Size  Location     Type
 23788 ;;                  2    0[COMRAM] PTR struct .
 23789 ;; Registers used:
 23790 ;;		wreg, status,2, status,0
 23791 ;; Tracked objects:
 23792 ;;		On entry : 0/0
 23793 ;;		On exit  : 0/0
 23794 ;;		Unchanged: 0/0
 23795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23796 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23799 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23800 ;;Total ram usage:        2 bytes
 23801 ;; Hardware stack levels used:    1
 23802 ;; This function calls:
 23803 ;;		Nothing
 23804 ;; This function is called by:
 23805 ;;		_USBMSDInit
 23806 ;;		_MSDProcessCommand
 23807 ;; This function uses a non-reentrant model
 23808 ;;
 23809                           
 23810                           	psect	text112
 23811  007278                     __ptext112:
 23812                           	opt stack 0
 23813  007278                     _ExternalFlash_MediaInitialize:
 23814                           	opt stack 26
 23815                           
 23816                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23817                           
 23818                           ;incstack = 0
 23819  007278  0101               	movlb	1	; () banked
 23820  00727A  81E3               	bsf	(_mediaInformation+1)& (0+255),0,b
 23821                           
 23822                           ; BSR set to: 1
 23823                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23824  00727C  0E02               	movlw	2
 23825  00727E  6FE5               	movwf	(_mediaInformation+3)& (0+255),b
 23826  007280  0E00               	movlw	0
 23827  007282  6FE4               	movwf	(_mediaInformation+2)& (0+255),b
 23828                           
 23829                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23830  007284  0E00               	movlw	0
 23831  007286  6FE2               	movwf	_mediaInformation& (0+255),b
 23832                           
 23833                           ; BSR set to: 1
 23834                           ;external_flash.c: 15: return &mediaInformation;
 23835  007288  0EE2               	movlw	low _mediaInformation
 23836  00728A  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23837  00728C  0E01               	movlw	high _mediaInformation
 23838  00728E  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23839  007290  0012               	return	
 23840  007292                     __end_of_ExternalFlash_MediaInitialize:
 23841                           	opt stack 0
 23842                           tosu	equ	0xFFF
 23843                           tosh	equ	0xFFE
 23844                           tosl	equ	0xFFD
 23845                           pclath	equ	0xFFA
 23846                           tblptru	equ	0xFF8
 23847                           tblptrh	equ	0xFF7
 23848                           tblptrl	equ	0xFF6
 23849                           tablat	equ	0xFF5
 23850                           prodh	equ	0xFF4
 23851                           prodl	equ	0xFF3
 23852                           intcon	equ	0xFF2
 23853                           intcon3	equ	0xFF0
 23854                           indf0	equ	0xFEF
 23855                           postinc0	equ	0xFEE
 23856                           fsr0h	equ	0xFEA
 23857                           fsr0l	equ	0xFE9
 23858                           wreg	equ	0xFE8
 23859                           indf1	equ	0xFE7
 23860                           postdec1	equ	0xFE5
 23861                           plusw1	equ	0xFE3
 23862                           fsr1h	equ	0xFE2
 23863                           fsr1l	equ	0xFE1
 23864                           indf2	equ	0xFDF
 23865                           postinc2	equ	0xFDE
 23866                           postdec2	equ	0xFDD
 23867                           plusw2	equ	0xFDB
 23868                           fsr2h	equ	0xFDA
 23869                           fsr2l	equ	0xFD9
 23870                           status	equ	0xFD8
 23871                           
 23872 ;; *************** function _ExternalFlash_MediaDetect *****************
 23873 ;; Defined at:
 23874 ;;		line 29 in file "external_flash.c"
 23875 ;; Parameters:    Size  Location     Type
 23876 ;;  config          2    0[COMRAM] PTR void 
 23877 ;;		 -> NULL(0), 
 23878 ;; Auto vars:     Size  Location     Type
 23879 ;;		None
 23880 ;; Return value:  Size  Location     Type
 23881 ;;                  1    wreg      unsigned char 
 23882 ;; Registers used:
 23883 ;;		wreg
 23884 ;; Tracked objects:
 23885 ;;		On entry : 0/0
 23886 ;;		On exit  : 0/0
 23887 ;;		Unchanged: 0/0
 23888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23892 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23893 ;;Total ram usage:        2 bytes
 23894 ;; Hardware stack levels used:    1
 23895 ;; This function calls:
 23896 ;;		Nothing
 23897 ;; This function is called by:
 23898 ;;		_USBMSDInit
 23899 ;;		_MSDProcessCommand
 23900 ;; This function uses a non-reentrant model
 23901 ;;
 23902                           
 23903                           	psect	text113
 23904  007472                     __ptext113:
 23905                           	opt stack 0
 23906  007472                     _ExternalFlash_MediaDetect:
 23907                           	opt stack 26
 23908                           
 23909                           ;external_flash.c: 31: return 1;
 23910                           
 23911                           ; BSR set to: 1
 23912                           ;incstack = 0
 23913  007472  0E01               	movlw	1
 23914  007474  0012               	return	
 23915  007476                     __end_of_ExternalFlash_MediaDetect:
 23916                           	opt stack 0
 23917                           tosu	equ	0xFFF
 23918                           tosh	equ	0xFFE
 23919                           tosl	equ	0xFFD
 23920                           pclath	equ	0xFFA
 23921                           tblptru	equ	0xFF8
 23922                           tblptrh	equ	0xFF7
 23923                           tblptrl	equ	0xFF6
 23924                           tablat	equ	0xFF5
 23925                           prodh	equ	0xFF4
 23926                           prodl	equ	0xFF3
 23927                           intcon	equ	0xFF2
 23928                           intcon3	equ	0xFF0
 23929                           indf0	equ	0xFEF
 23930                           postinc0	equ	0xFEE
 23931                           fsr0h	equ	0xFEA
 23932                           fsr0l	equ	0xFE9
 23933                           wreg	equ	0xFE8
 23934                           indf1	equ	0xFE7
 23935                           postdec1	equ	0xFE5
 23936                           plusw1	equ	0xFE3
 23937                           fsr1h	equ	0xFE2
 23938                           fsr1l	equ	0xFE1
 23939                           indf2	equ	0xFDF
 23940                           postinc2	equ	0xFDE
 23941                           postdec2	equ	0xFDD
 23942                           plusw2	equ	0xFDB
 23943                           fsr2h	equ	0xFDA
 23944                           fsr2l	equ	0xFD9
 23945                           status	equ	0xFD8
 23946                           
 23947 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23948 ;; Defined at:
 23949 ;;		line 73 in file "app_device_custom_hid.c"
 23950 ;; Parameters:    Size  Location     Type
 23951 ;;		None
 23952 ;; Auto vars:     Size  Location     Type
 23953 ;;  idx             1    0        unsigned char 
 23954 ;; Return value:  Size  Location     Type
 23955 ;;                  1    wreg      void 
 23956 ;; Registers used:
 23957 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23958 ;; Tracked objects:
 23959 ;;		On entry : 0/0
 23960 ;;		On exit  : 0/0
 23961 ;;		Unchanged: 0/0
 23962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23967 ;;Total ram usage:        0 bytes
 23968 ;; Hardware stack levels used:    1
 23969 ;; Hardware stack levels required when called:    9
 23970 ;; This function calls:
 23971 ;;		_USBTransferOnePacket
 23972 ;;		_api_parse
 23973 ;;		_api_prepare
 23974 ;; This function is called by:
 23975 ;;		_main
 23976 ;; This function uses a non-reentrant model
 23977 ;;
 23978                           
 23979                           	psect	text114
 23980  00563A                     __ptext114:
 23981                           	opt stack 0
 23982  00563A                     _APP_DeviceCustomHIDTasks:
 23983                           	opt stack 21
 23984                           
 23985                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23986                           
 23987                           ;incstack = 0
 23988  00563A  0E20               	movlw	32
 23989  00563C  605F               	cpfslt	_USBDeviceState,c
 23990  00563E  D001               	goto	l936
 23991  005640  0012               	return	
 23992  005642                     l936:
 23993                           
 23994                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 23995  005642  B265               	btfsc	3941,1,c	;volatile
 23996  005644  0012               	return	
 23997                           
 23998                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23999                           
 24000                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 24001  005646  0101               	movlb	1	; () banked
 24002  005648  5171               	movf	_USBOutHandle& (0+255),w,b
 24003  00564A  1172               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 24004  00564C  B4D8               	btfsc	status,2,c
 24005  00564E  D006               	goto	u12430
 24006                           
 24007                           ; BSR set to: 1
 24008  005650  C171  FFD9         	movff	_USBOutHandle,fsr2l
 24009  005654  C172  FFDA         	movff	_USBOutHandle+1,fsr2h
 24010  005658  BEDF               	btfsc	indf2,7,c
 24011  00565A  0012               	return	
 24012  00565C                     u12430:
 24013                           
 24014                           ; BSR set to: 1
 24015                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 24016                           
 24017                           ; BSR set to: 1
 24018  00565C  516F               	movf	_USBInHandle& (0+255),w,b
 24019  00565E  1170               	iorwf	(_USBInHandle+1)& (0+255),w,b
 24020  005660  B4D8               	btfsc	status,2,c
 24021  005662  D006               	goto	u12450
 24022                           
 24023                           ; BSR set to: 1
 24024  005664  C16F  FFD9         	movff	_USBInHandle,fsr2l
 24025  005668  C170  FFDA         	movff	_USBInHandle+1,fsr2h
 24026  00566C  BEDF               	btfsc	indf2,7,c
 24027  00566E  D019               	goto	l942
 24028  005670                     u12450:
 24029                           
 24030                           ; BSR set to: 1
 24031                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 24032                           
 24033                           ; BSR set to: 1
 24034  005670  0E40               	movlw	low _ReceivedDataBuffer
 24035  005672  6E17               	movwf	api_prepare@inBuffer,c
 24036  005674  0E02               	movlw	high _ReceivedDataBuffer
 24037  005676  6E18               	movwf	api_prepare@inBuffer+1,c
 24038  005678  0E00               	movlw	low _ToSendDataBuffer
 24039  00567A  6E19               	movwf	api_prepare@outBuffer,c
 24040  00567C  0E02               	movlw	high _ToSendDataBuffer
 24041  00567E  6E1A               	movwf	api_prepare@outBuffer+1,c
 24042  005680  ECC3  F023         	call	_api_prepare	;wreg free
 24043                           
 24044                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 24045  005684  0E01               	movlw	1
 24046  005686  6E01               	movwf	USBTransferOnePacket@dir,c
 24047  005688  0E00               	movlw	low _ToSendDataBuffer
 24048  00568A  6E02               	movwf	USBTransferOnePacket@data,c
 24049  00568C  0E02               	movlw	high _ToSendDataBuffer
 24050  00568E  6E03               	movwf	USBTransferOnePacket@data+1,c
 24051  005690  0E40               	movlw	64
 24052  005692  6E04               	movwf	USBTransferOnePacket@len,c
 24053  005694  0E01               	movlw	1
 24054  005696  EC8F  F020         	call	_USBTransferOnePacket
 24055  00569A  C001  F16F         	movff	?_USBTransferOnePacket,_USBInHandle
 24056  00569E  C002  F170         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 24057  0056A2                     l942:
 24058                           
 24059                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 24060  0056A2  0E40               	movlw	low _ReceivedDataBuffer
 24061  0056A4  6E36               	movwf	api_parse@inBuffer,c
 24062  0056A6  0E02               	movlw	high _ReceivedDataBuffer
 24063  0056A8  6E37               	movwf	api_parse@inBuffer+1,c
 24064  0056AA  0E40               	movlw	64
 24065  0056AC  6E38               	movwf	api_parse@receivedDataLength,c
 24066  0056AE  0E00               	movlw	low _ToSendDataBuffer
 24067  0056B0  6E39               	movwf	api_parse@outBuffer,c
 24068  0056B2  0E02               	movlw	high _ToSendDataBuffer
 24069  0056B4  6E3A               	movwf	api_parse@outBuffer+1,c
 24070  0056B6  EC55  F01C         	call	_api_parse	;wreg free
 24071                           
 24072                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 24073  0056BA  0E00               	movlw	0
 24074  0056BC  6E01               	movwf	USBTransferOnePacket@dir,c
 24075  0056BE  0E40               	movlw	low _ReceivedDataBuffer
 24076  0056C0  6E02               	movwf	USBTransferOnePacket@data,c
 24077  0056C2  0E02               	movlw	high _ReceivedDataBuffer
 24078  0056C4  6E03               	movwf	USBTransferOnePacket@data+1,c
 24079  0056C6  0E40               	movlw	64
 24080  0056C8  6E04               	movwf	USBTransferOnePacket@len,c
 24081  0056CA  0E01               	movlw	1
 24082  0056CC  EC8F  F020         	call	_USBTransferOnePacket
 24083  0056D0  C001  F171         	movff	?_USBTransferOnePacket,_USBOutHandle
 24084  0056D4  C002  F172         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 24085  0056D8  0012               	return	
 24086  0056DA                     __end_of_APP_DeviceCustomHIDTasks:
 24087                           	opt stack 0
 24088                           tosu	equ	0xFFF
 24089                           tosh	equ	0xFFE
 24090                           tosl	equ	0xFFD
 24091                           pclath	equ	0xFFA
 24092                           tblptru	equ	0xFF8
 24093                           tblptrh	equ	0xFF7
 24094                           tblptrl	equ	0xFF6
 24095                           tablat	equ	0xFF5
 24096                           prodh	equ	0xFF4
 24097                           prodl	equ	0xFF3
 24098                           intcon	equ	0xFF2
 24099                           intcon3	equ	0xFF0
 24100                           indf0	equ	0xFEF
 24101                           postinc0	equ	0xFEE
 24102                           fsr0h	equ	0xFEA
 24103                           fsr0l	equ	0xFE9
 24104                           wreg	equ	0xFE8
 24105                           indf1	equ	0xFE7
 24106                           postdec1	equ	0xFE5
 24107                           plusw1	equ	0xFE3
 24108                           fsr1h	equ	0xFE2
 24109                           fsr1l	equ	0xFE1
 24110                           indf2	equ	0xFDF
 24111                           postinc2	equ	0xFDE
 24112                           postdec2	equ	0xFDD
 24113                           plusw2	equ	0xFDB
 24114                           fsr2h	equ	0xFDA
 24115                           fsr2l	equ	0xFD9
 24116                           status	equ	0xFD8
 24117                           
 24118 ;; *************** function _api_prepare *****************
 24119 ;; Defined at:
 24120 ;;		line 35 in file "api.c"
 24121 ;; Parameters:    Size  Location     Type
 24122 ;;  inBuffer        2   22[COMRAM] PTR unsigned char 
 24123 ;;		 -> ReceivedDataBuffer(64), 
 24124 ;;  outBuffer       2   24[COMRAM] PTR unsigned char 
 24125 ;;		 -> ToSendDataBuffer(64), 
 24126 ;; Auto vars:     Size  Location     Type
 24127 ;;  command         1   26[COMRAM] enum E6715
 24128 ;; Return value:  Size  Location     Type
 24129 ;;                  1    wreg      void 
 24130 ;; Registers used:
 24131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24132 ;; Tracked objects:
 24133 ;;		On entry : 0/0
 24134 ;;		On exit  : 0/0
 24135 ;;		Unchanged: 0/0
 24136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24138 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24140 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24141 ;;Total ram usage:        5 bytes
 24142 ;; Hardware stack levels used:    1
 24143 ;; Hardware stack levels required when called:    5
 24144 ;; This function calls:
 24145 ;;		__fill_buffer_get_bootloader_details
 24146 ;;		__fill_buffer_get_display
 24147 ;;		__fill_buffer_get_status
 24148 ;;		_memcpy
 24149 ;; This function is called by:
 24150 ;;		_APP_DeviceCustomHIDTasks
 24151 ;; This function uses a non-reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text115
 24155  004786                     __ptext115:
 24156                           	opt stack 0
 24157  004786                     _api_prepare:
 24158                           	opt stack 24
 24159                           
 24160                           ;api.c: 37: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 24161                           
 24162                           ;incstack = 0
 24163  004786  C017  FFD9         	movff	api_prepare@inBuffer,fsr2l
 24164  00478A  C018  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 24165  00478E  50DF               	movf	indf2,w,c
 24166  004790  6E1B               	movwf	api_prepare@command,c
 24167                           
 24168                           ;api.c: 39: if(command>0x7F)
 24169  004792  0E7F               	movlw	127
 24170  004794  641B               	cpfsgt	api_prepare@command,c
 24171  004796  D052               	goto	l2697
 24172                           
 24173                           ;api.c: 46: outBuffer[0] = 0x99;
 24174                           
 24175                           ;api.c: 42: {;api.c: 45: default:
 24176                           
 24177                           ;api.c: 40: {;api.c: 41: switch(command)
 24178  004798  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 24179  00479C  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 24180  0047A0  0E99               	movlw	153
 24181  0047A2  6EDF               	movwf	indf2,c
 24182                           
 24183                           ;api.c: 47: outBuffer[1] = 0x99;
 24184  0047A4  EE20 F001          	lfsr	2,1
 24185  0047A8  5019               	movf	api_prepare@outBuffer,w,c
 24186  0047AA  26D9               	addwf	fsr2l,f,c
 24187  0047AC  501A               	movf	api_prepare@outBuffer+1,w,c
 24188  0047AE  22DA               	addwfc	fsr2h,f,c
 24189  0047B0  0E99               	movlw	153
 24190  0047B2  6EDF               	movwf	indf2,c
 24191                           
 24192                           ;api.c: 48: }
 24193  0047B4  0012               	return	
 24194  0047B6                     
 24195                           ;api.c: 61: _fill_buffer_get_status(outBuffer);
 24196  0047B6  C019  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 24197  0047BA  C01A  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 24198  0047BE  EC0E  F020         	call	__fill_buffer_get_status	;wreg free
 24199                           
 24200                           ;api.c: 62: break;
 24201  0047C2  0012               	return	
 24202  0047C4                     
 24203                           ;api.c: 66: _fill_buffer_get_display(outBuffer, 0);
 24204  0047C4  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 24205  0047C8  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 24206  0047CC  0E00               	movlw	0
 24207  0047CE  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 24208  0047D0  ECD0  F027         	call	__fill_buffer_get_display	;wreg free
 24209                           
 24210                           ;api.c: 67: break;
 24211  0047D4  0012               	return	
 24212  0047D6                     
 24213                           ;api.c: 71: _fill_buffer_get_display(outBuffer, 1);
 24214  0047D6  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 24215  0047DA  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 24216  0047DE  0E01               	movlw	1
 24217  0047E0  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 24218  0047E2  ECD0  F027         	call	__fill_buffer_get_display	;wreg free
 24219                           
 24220                           ;api.c: 72: break;
 24221  0047E6  0012               	return	
 24222  0047E8                     
 24223                           ;api.c: 76: _fill_buffer_get_bootloader_details(outBuffer);
 24224  0047E8  C019  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 24225  0047EC  C01A  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 24226  0047F0  EC1E  F010         	call	__fill_buffer_get_bootloader_details	;wreg free
 24227                           
 24228                           ;api.c: 77: break;
 24229  0047F4  0012               	return	
 24230  0047F6                     
 24231                           ;api.c: 81: memcpy(outBuffer, inBuffer, 64);
 24232  0047F6  C019  F001         	movff	api_prepare@outBuffer,memcpy@d1
 24233  0047FA  C01A  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 24234  0047FE  C017  F003         	movff	api_prepare@inBuffer,memcpy@s1
 24235  004802  C018  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 24236  004806  5003               	movf	memcpy@s1,w,c
 24237  004808  1004               	iorwf	memcpy@s1+1,w,c
 24238  00480A  A4D8               	btfss	status,2,c
 24239  00480C  0E20               	movlw	32
 24240  00480E  6E05               	movwf	memcpy@s1+2,c
 24241  004810  0E00               	movlw	0
 24242  004812  6E07               	movwf	memcpy@n+1,c
 24243  004814  0E40               	movlw	64
 24244  004816  6E06               	movwf	memcpy@n,c
 24245  004818  EC07  F031         	call	_memcpy	;wreg free
 24246                           
 24247                           ;api.c: 82: break;
 24248  00481C  0012               	return	
 24249  00481E                     
 24250                           ;api.c: 85: outBuffer[0] = 0x99;
 24251  00481E  C019  FFD9         	movff	api_prepare@outBuffer,fsr2l
 24252  004822  C01A  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 24253  004826  0E99               	movlw	153
 24254  004828  6EDF               	movwf	indf2,c
 24255                           
 24256                           ;api.c: 86: outBuffer[1] = 0x99;
 24257  00482A  EE20 F001          	lfsr	2,1
 24258  00482E  5019               	movf	api_prepare@outBuffer,w,c
 24259  004830  26D9               	addwf	fsr2l,f,c
 24260  004832  501A               	movf	api_prepare@outBuffer+1,w,c
 24261  004834  22DA               	addwfc	fsr2h,f,c
 24262  004836  0E99               	movlw	153
 24263  004838  6EDF               	movwf	indf2,c
 24264                           
 24265                           ;api.c: 87: }
 24266  00483A  0012               	return	
 24267  00483C                     l2697:
 24268  00483C  501B               	movf	api_prepare@command,w,c
 24269                           
 24270                           ; Switch size 1, requested type "space"
 24271                           ; Number of cases is 6, Range of values is 0 to 32
 24272                           ; switch strategies available:
 24273                           ; Name         Instructions Cycles
 24274                           ; simple_byte           19    10 (average)
 24275                           ;	Chosen strategy is simple_byte
 24276  00483E  0A00               	xorlw	0	; case 0
 24277  004840  B4D8               	btfsc	status,2,c
 24278  004842  0012               	return	
 24279  004844  0A10               	xorlw	16	; case 16
 24280  004846  B4D8               	btfsc	status,2,c
 24281  004848  D7B6               	goto	l2700
 24282  00484A  0A01               	xorlw	1	; case 17
 24283  00484C  B4D8               	btfsc	status,2,c
 24284  00484E  D7BA               	goto	l2701
 24285  004850  0A03               	xorlw	3	; case 18
 24286  004852  B4D8               	btfsc	status,2,c
 24287  004854  D7C0               	goto	l2702
 24288  004856  0A01               	xorlw	1	; case 19
 24289  004858  B4D8               	btfsc	status,2,c
 24290  00485A  D7C6               	goto	l2703
 24291  00485C  0A33               	xorlw	51	; case 32
 24292  00485E  B4D8               	btfsc	status,2,c
 24293  004860  D7CA               	goto	l2704
 24294  004862  D7DD               	goto	l2705
 24295  004864                     __end_of_api_prepare:
 24296                           	opt stack 0
 24297                           tosu	equ	0xFFF
 24298                           tosh	equ	0xFFE
 24299                           tosl	equ	0xFFD
 24300                           pclath	equ	0xFFA
 24301                           tblptru	equ	0xFF8
 24302                           tblptrh	equ	0xFF7
 24303                           tblptrl	equ	0xFF6
 24304                           tablat	equ	0xFF5
 24305                           prodh	equ	0xFF4
 24306                           prodl	equ	0xFF3
 24307                           intcon	equ	0xFF2
 24308                           intcon3	equ	0xFF0
 24309                           indf0	equ	0xFEF
 24310                           postinc0	equ	0xFEE
 24311                           fsr0h	equ	0xFEA
 24312                           fsr0l	equ	0xFE9
 24313                           wreg	equ	0xFE8
 24314                           indf1	equ	0xFE7
 24315                           postdec1	equ	0xFE5
 24316                           plusw1	equ	0xFE3
 24317                           fsr1h	equ	0xFE2
 24318                           fsr1l	equ	0xFE1
 24319                           indf2	equ	0xFDF
 24320                           postinc2	equ	0xFDE
 24321                           postdec2	equ	0xFDD
 24322                           plusw2	equ	0xFDB
 24323                           fsr2h	equ	0xFDA
 24324                           fsr2l	equ	0xFD9
 24325                           status	equ	0xFD8
 24326                           
 24327 ;; *************** function _memcpy *****************
 24328 ;; Defined at:
 24329 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 24330 ;; Parameters:    Size  Location     Type
 24331 ;;  d1              2    0[COMRAM] PTR void 
 24332 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 24333 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 24334 ;;  s1              3    2[COMRAM] PTR const void 
 24335 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 24336 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 24337 ;;  n               2    5[COMRAM] unsigned int 
 24338 ;; Auto vars:     Size  Location     Type
 24339 ;;  s               3    7[COMRAM] PTR const unsigned char 
 24340 ;;		 -> ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), ReceivedDataBuffer(64), 
 24341 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 24342 ;;  d               2   10[COMRAM] PTR unsigned char 
 24343 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@root_entry(32), _flash_set_page_
      +size@command(4), 
 24344 ;;		 -> ToSendDataBuffer(64), msd_buffer(512), SetupPkt(8), 
 24345 ;;  tmp             1   12[COMRAM] unsigned char 
 24346 ;; Return value:  Size  Location     Type
 24347 ;;                  2    0[COMRAM] PTR void 
 24348 ;; Registers used:
 24349 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 24350 ;; Tracked objects:
 24351 ;;		On entry : 0/0
 24352 ;;		On exit  : 0/0
 24353 ;;		Unchanged: 0/0
 24354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24355 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24356 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24358 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24359 ;;Total ram usage:       13 bytes
 24360 ;; Hardware stack levels used:    1
 24361 ;; This function calls:
 24362 ;;		Nothing
 24363 ;; This function is called by:
 24364 ;;		_USBCtrlEPService
 24365 ;;		_MSDProcessCommandMediaPresent
 24366 ;;		__flash_set_page_size
 24367 ;;		_internalFlash_read
 24368 ;;		_api_prepare
 24369 ;;		_fat_create_file
 24370 ;; This function uses a non-reentrant model
 24371 ;;
 24372                           
 24373                           	psect	text116
 24374  00620E                     __ptext116:
 24375                           	opt stack 0
 24376  00620E                     _memcpy:
 24377                           	opt stack 27
 24378                           
 24379                           ;incstack = 0
 24380  00620E  C003  F008         	movff	memcpy@s1,memcpy@s
 24381  006212  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 24382  006216  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 24383  00621A  C001  F00B         	movff	memcpy@d1,memcpy@d
 24384  00621E  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 24385  006222  D01F               	goto	l3539
 24386  006224                     l10673:
 24387  006224  C008  FFF6         	movff	memcpy@s,tblptrl
 24388  006228  C009  FFF7         	movff	memcpy@s+1,tblptrh
 24389  00622C  C00A  FFF8         	movff	memcpy@s+2,tblptru
 24390  006230  BAF8               	btfsc	tblptru,5,c
 24391  006232  D003               	bra	u8227
 24392  006234  0008               	tblrd		*
 24393  006236  50F5               	movf	tablat,w,c
 24394  006238  D005               	bra	u8220
 24395  00623A                     u8227:
 24396  00623A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24397  00623E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24398  006242  50EF               	movf	indf0,w,c
 24399  006244                     u8220:
 24400  006244  6E0D               	movwf	memcpy@tmp,c
 24401  006246  0E01               	movlw	1
 24402  006248  2608               	addwf	memcpy@s,f,c
 24403  00624A  0E00               	movlw	0
 24404  00624C  2209               	addwfc	memcpy@s+1,f,c
 24405  00624E  0E00               	movlw	0
 24406  006250  220A               	addwfc	memcpy@s+2,f,c
 24407  006252  C00B  FFD9         	movff	memcpy@d,fsr2l
 24408  006256  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 24409  00625A  C00D  FFDF         	movff	memcpy@tmp,indf2
 24410  00625E  4A0B               	infsnz	memcpy@d,f,c
 24411  006260  2A0C               	incf	memcpy@d+1,f,c
 24412  006262                     l3539:
 24413  006262  0606               	decf	memcpy@n,f,c
 24414  006264  A0D8               	btfss	status,0,c
 24415  006266  0607               	decf	memcpy@n+1,f,c
 24416  006268  2806               	incf	memcpy@n,w,c
 24417  00626A  E1DC               	bnz	l10673
 24418  00626C  2807               	incf	memcpy@n+1,w,c
 24419  00626E  B4D8               	btfsc	status,2,c
 24420  006270  0012               	return	
 24421  006272  D7D8               	goto	l3540
 24422  006274                     __end_of_memcpy:
 24423                           	opt stack 0
 24424                           tosu	equ	0xFFF
 24425                           tosh	equ	0xFFE
 24426                           tosl	equ	0xFFD
 24427                           pclath	equ	0xFFA
 24428                           tblptru	equ	0xFF8
 24429                           tblptrh	equ	0xFF7
 24430                           tblptrl	equ	0xFF6
 24431                           tablat	equ	0xFF5
 24432                           prodh	equ	0xFF4
 24433                           prodl	equ	0xFF3
 24434                           intcon	equ	0xFF2
 24435                           intcon3	equ	0xFF0
 24436                           indf0	equ	0xFEF
 24437                           postinc0	equ	0xFEE
 24438                           fsr0h	equ	0xFEA
 24439                           fsr0l	equ	0xFE9
 24440                           wreg	equ	0xFE8
 24441                           indf1	equ	0xFE7
 24442                           postdec1	equ	0xFE5
 24443                           plusw1	equ	0xFE3
 24444                           fsr1h	equ	0xFE2
 24445                           fsr1l	equ	0xFE1
 24446                           indf2	equ	0xFDF
 24447                           postinc2	equ	0xFDE
 24448                           postdec2	equ	0xFDD
 24449                           plusw2	equ	0xFDB
 24450                           fsr2h	equ	0xFDA
 24451                           fsr2l	equ	0xFD9
 24452                           status	equ	0xFD8
 24453                           
 24454 ;; *************** function __fill_buffer_get_status *****************
 24455 ;; Defined at:
 24456 ;;		line 168 in file "api.c"
 24457 ;; Parameters:    Size  Location     Type
 24458 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24459 ;;		 -> ToSendDataBuffer(64), 
 24460 ;; Auto vars:     Size  Location     Type
 24461 ;;		None
 24462 ;; Return value:  Size  Location     Type
 24463 ;;                  1    wreg      void 
 24464 ;; Registers used:
 24465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24466 ;; Tracked objects:
 24467 ;;		On entry : 0/0
 24468 ;;		On exit  : 0/0
 24469 ;;		Unchanged: 0/0
 24470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24475 ;;Total ram usage:        2 bytes
 24476 ;; Hardware stack levels used:    1
 24477 ;; Hardware stack levels required when called:    4
 24478 ;; This function calls:
 24479 ;;		_flash_is_busy
 24480 ;;		_ui_get_status
 24481 ;; This function is called by:
 24482 ;;		_api_prepare
 24483 ;; This function uses a non-reentrant model
 24484 ;;
 24485                           
 24486                           	psect	text117
 24487  00401C                     __ptext117:
 24488                           	opt stack 0
 24489  00401C                     __fill_buffer_get_status:
 24490                           	opt stack 24
 24491                           
 24492                           ;api.c: 171: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24493                           
 24494                           ;incstack = 0
 24495  00401C  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24496  004020  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24497  004024  0E10               	movlw	16
 24498  004026  6EDF               	movwf	indf2,c
 24499                           
 24500                           ;api.c: 174: outBuffer[1] = 0x4B16 >> 8;
 24501  004028  EE20 F001          	lfsr	2,1
 24502  00402C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24503  00402E  26D9               	addwf	fsr2l,f,c
 24504  004030  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24505  004032  22DA               	addwfc	fsr2h,f,c
 24506  004034  0E4B               	movlw	75
 24507  004036  6EDF               	movwf	indf2,c
 24508                           
 24509                           ;api.c: 175: outBuffer[2] = (uint8_t) 0x4B16;
 24510  004038  EE20 F002          	lfsr	2,2
 24511  00403C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24512  00403E  26D9               	addwf	fsr2l,f,c
 24513  004040  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24514  004042  22DA               	addwfc	fsr2h,f,c
 24515  004044  0E16               	movlw	22
 24516  004046  6EDF               	movwf	indf2,c
 24517                           
 24518                           ;api.c: 178: outBuffer[3] = (uint8_t) flash_is_busy();
 24519  004048  EE20 F003          	lfsr	2,3
 24520  00404C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24521  00404E  26D9               	addwf	fsr2l,f,c
 24522  004050  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24523  004052  22DA               	addwfc	fsr2h,f,c
 24524  004054  ECFB  F039         	call	_flash_is_busy	;wreg free
 24525  004058  6EDF               	movwf	indf2,c
 24526                           
 24527                           ;api.c: 181: outBuffer[4] = 0x00;
 24528  00405A  EE20 F004          	lfsr	2,4
 24529  00405E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24530  004060  26D9               	addwf	fsr2l,f,c
 24531  004062  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24532  004064  22DA               	addwfc	fsr2h,f,c
 24533  004066  0E00               	movlw	0
 24534  004068  6EDF               	movwf	indf2,c
 24535                           
 24536                           ;api.c: 182: outBuffer[5] = 0x05;
 24537  00406A  EE20 F005          	lfsr	2,5
 24538  00406E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24539  004070  26D9               	addwf	fsr2l,f,c
 24540  004072  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24541  004074  22DA               	addwfc	fsr2h,f,c
 24542  004076  0E05               	movlw	5
 24543  004078  6EDF               	movwf	indf2,c
 24544                           
 24545                           ;api.c: 183: outBuffer[6] = 0x00;
 24546  00407A  EE20 F006          	lfsr	2,6
 24547  00407E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24548  004080  26D9               	addwf	fsr2l,f,c
 24549  004082  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24550  004084  22DA               	addwfc	fsr2h,f,c
 24551  004086  0E00               	movlw	0
 24552  004088  6EDF               	movwf	indf2,c
 24553                           
 24554                           ;api.c: 186: outBuffer[7] = ui_get_status();
 24555  00408A  EE20 F007          	lfsr	2,7
 24556  00408E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24557  004090  26D9               	addwf	fsr2l,f,c
 24558  004092  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24559  004094  22DA               	addwfc	fsr2h,f,c
 24560  004096  EC31  F03A         	call	_ui_get_status	;wreg free
 24561  00409A  6EDF               	movwf	indf2,c
 24562                           
 24563                           ;api.c: 189: outBuffer[8] = os.encoder1Count;
 24564  00409C  EE20 F008          	lfsr	2,8
 24565  0040A0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24566  0040A2  26D9               	addwf	fsr2l,f,c
 24567  0040A4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24568  0040A6  22DA               	addwfc	fsr2h,f,c
 24569  0040A8  C060  FFDF         	movff	_os,indf2
 24570                           
 24571                           ;api.c: 190: outBuffer[9] = os.button1;
 24572  0040AC  EE20 F009          	lfsr	2,9
 24573  0040B0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24574  0040B2  26D9               	addwf	fsr2l,f,c
 24575  0040B4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24576  0040B6  22DA               	addwfc	fsr2h,f,c
 24577  0040B8  C061  FFDF         	movff	_os+1,indf2
 24578                           
 24579                           ;api.c: 191: outBuffer[10] = os.encoder2Count;
 24580  0040BC  EE20 F00A          	lfsr	2,10
 24581  0040C0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24582  0040C2  26D9               	addwf	fsr2l,f,c
 24583  0040C4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24584  0040C6  22DA               	addwfc	fsr2h,f,c
 24585  0040C8  C062  FFDF         	movff	_os+2,indf2
 24586                           
 24587                           ;api.c: 192: outBuffer[11] = os.button2;
 24588  0040CC  EE20 F00B          	lfsr	2,11
 24589  0040D0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24590  0040D2  26D9               	addwf	fsr2l,f,c
 24591  0040D4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24592  0040D6  22DA               	addwfc	fsr2h,f,c
 24593  0040D8  C063  FFDF         	movff	_os+3,indf2
 24594                           
 24595                           ;api.c: 193: outBuffer[12] = os.timeSlot;
 24596  0040DC  EE20 F00C          	lfsr	2,12
 24597  0040E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24598  0040E2  26D9               	addwf	fsr2l,f,c
 24599  0040E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24600  0040E6  22DA               	addwfc	fsr2h,f,c
 24601  0040E8  C064  FFDF         	movff	_os+4,indf2
 24602                           
 24603                           ;api.c: 194: outBuffer[13] = os.done;
 24604  0040EC  EE20 F00D          	lfsr	2,13
 24605  0040F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24606  0040F2  26D9               	addwf	fsr2l,f,c
 24607  0040F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24608  0040F6  22DA               	addwfc	fsr2h,f,c
 24609  0040F8  C065  FFDF         	movff	_os+5,indf2
 24610                           
 24611                           ;api.c: 195: outBuffer[14] = os.bootloader_mode;
 24612  0040FC  EE20 F00E          	lfsr	2,14
 24613  004100  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24614  004102  26D9               	addwf	fsr2l,f,c
 24615  004104  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24616  004106  22DA               	addwfc	fsr2h,f,c
 24617  004108  C066  FFDF         	movff	_os+6,indf2
 24618                           
 24619                           ;api.c: 196: outBuffer[15] = os.display_mode;
 24620  00410C  EE20 F00F          	lfsr	2,15
 24621  004110  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24622  004112  26D9               	addwf	fsr2l,f,c
 24623  004114  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24624  004116  22DA               	addwfc	fsr2h,f,c
 24625  004118  C067  FFDF         	movff	_os+7,indf2
 24626  00411C  0012               	return		;funcret
 24627  00411E                     __end_of__fill_buffer_get_status:
 24628                           	opt stack 0
 24629                           tosu	equ	0xFFF
 24630                           tosh	equ	0xFFE
 24631                           tosl	equ	0xFFD
 24632                           pclath	equ	0xFFA
 24633                           tblptru	equ	0xFF8
 24634                           tblptrh	equ	0xFF7
 24635                           tblptrl	equ	0xFF6
 24636                           tablat	equ	0xFF5
 24637                           prodh	equ	0xFF4
 24638                           prodl	equ	0xFF3
 24639                           intcon	equ	0xFF2
 24640                           intcon3	equ	0xFF0
 24641                           indf0	equ	0xFEF
 24642                           postinc0	equ	0xFEE
 24643                           fsr0h	equ	0xFEA
 24644                           fsr0l	equ	0xFE9
 24645                           wreg	equ	0xFE8
 24646                           indf1	equ	0xFE7
 24647                           postdec1	equ	0xFE5
 24648                           plusw1	equ	0xFE3
 24649                           fsr1h	equ	0xFE2
 24650                           fsr1l	equ	0xFE1
 24651                           indf2	equ	0xFDF
 24652                           postinc2	equ	0xFDE
 24653                           postdec2	equ	0xFDD
 24654                           plusw2	equ	0xFDB
 24655                           fsr2h	equ	0xFDA
 24656                           fsr2l	equ	0xFD9
 24657                           status	equ	0xFD8
 24658                           
 24659 ;; *************** function _flash_is_busy *****************
 24660 ;; Defined at:
 24661 ;;		line 373 in file "flash.c"
 24662 ;; Parameters:    Size  Location     Type
 24663 ;;		None
 24664 ;; Auto vars:     Size  Location     Type
 24665 ;;  result          1   19[COMRAM] unsigned char 
 24666 ;; Return value:  Size  Location     Type
 24667 ;;                  1    wreg      unsigned char 
 24668 ;; Registers used:
 24669 ;;		wreg, status,2, status,0, cstack
 24670 ;; Tracked objects:
 24671 ;;		On entry : 0/0
 24672 ;;		On exit  : 0/0
 24673 ;;		Unchanged: 0/0
 24674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24679 ;;Total ram usage:        1 bytes
 24680 ;; Hardware stack levels used:    1
 24681 ;; Hardware stack levels required when called:    3
 24682 ;; This function calls:
 24683 ;;		__flash_is_busy
 24684 ;; This function is called by:
 24685 ;;		__fill_buffer_get_status
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text118
 24690  0073F6                     __ptext118:
 24691                           	opt stack 0
 24692  0073F6                     _flash_is_busy:
 24693                           	opt stack 24
 24694                           
 24695                           ;flash.c: 375: uint8_t result;;flash.c: 378: result = _flash_is_busy();
 24696                           
 24697                           ;incstack = 0
 24698  0073F6  ECB5  F038         	call	__flash_is_busy	;wreg free
 24699  0073FA  6E14               	movwf	flash_is_busy@result,c
 24700                           
 24701                           ;flash.c: 381: return result;
 24702  0073FC  5014               	movf	flash_is_busy@result,w,c
 24703  0073FE  0012               	return	
 24704  007400                     __end_of_flash_is_busy:
 24705                           	opt stack 0
 24706                           tosu	equ	0xFFF
 24707                           tosh	equ	0xFFE
 24708                           tosl	equ	0xFFD
 24709                           pclath	equ	0xFFA
 24710                           tblptru	equ	0xFF8
 24711                           tblptrh	equ	0xFF7
 24712                           tblptrl	equ	0xFF6
 24713                           tablat	equ	0xFF5
 24714                           prodh	equ	0xFF4
 24715                           prodl	equ	0xFF3
 24716                           intcon	equ	0xFF2
 24717                           intcon3	equ	0xFF0
 24718                           indf0	equ	0xFEF
 24719                           postinc0	equ	0xFEE
 24720                           fsr0h	equ	0xFEA
 24721                           fsr0l	equ	0xFE9
 24722                           wreg	equ	0xFE8
 24723                           indf1	equ	0xFE7
 24724                           postdec1	equ	0xFE5
 24725                           plusw1	equ	0xFE3
 24726                           fsr1h	equ	0xFE2
 24727                           fsr1l	equ	0xFE1
 24728                           indf2	equ	0xFDF
 24729                           postinc2	equ	0xFDE
 24730                           postdec2	equ	0xFDD
 24731                           plusw2	equ	0xFDB
 24732                           fsr2h	equ	0xFDA
 24733                           fsr2l	equ	0xFD9
 24734                           status	equ	0xFD8
 24735                           
 24736 ;; *************** function __fill_buffer_get_display *****************
 24737 ;; Defined at:
 24738 ;;		line 200 in file "api.c"
 24739 ;; Parameters:    Size  Location     Type
 24740 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24741 ;;		 -> ToSendDataBuffer(64), 
 24742 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24743 ;; Auto vars:     Size  Location     Type
 24744 ;;  position        1   15[COMRAM] unsigned char 
 24745 ;;  start_line      1   14[COMRAM] unsigned char 
 24746 ;;  line            1   13[COMRAM] unsigned char 
 24747 ;;  cntr            1   12[COMRAM] unsigned char 
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      void 
 24750 ;; Registers used:
 24751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24757 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24758 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24759 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24760 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24761 ;;Total ram usage:       12 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; Hardware stack levels required when called:    1
 24764 ;; This function calls:
 24765 ;;		_display_get_character
 24766 ;; This function is called by:
 24767 ;;		_api_prepare
 24768 ;; This function uses a non-reentrant model
 24769 ;;
 24770                           
 24771                           	psect	text119
 24772  004FA0                     __ptext119:
 24773                           	opt stack 0
 24774  004FA0                     __fill_buffer_get_display:
 24775                           	opt stack 27
 24776                           
 24777                           ;api.c: 202: uint8_t cntr;;api.c: 203: uint8_t line;;api.c: 204: uint8_t start_line;;api
      +                          .c: 205: uint8_t position;;api.c: 208: if(secondHalf)
 24778                           
 24779                           ;incstack = 0
 24780  004FA0  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24781  004FA2  B4D8               	btfsc	status,2,c
 24782  004FA4  D006               	goto	l2728
 24783                           
 24784                           ;api.c: 209: {;api.c: 210: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24785  004FA6  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24786  004FAA  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24787  004FAE  0E12               	movlw	18
 24788  004FB0  D005               	goto	L32
 24789  004FB2                     l2728:
 24790                           
 24791                           ;api.c: 212: else;api.c: 213: {;api.c: 214: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24792  004FB2  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24793  004FB6  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24794  004FBA  0E11               	movlw	17
 24795  004FBC                     L32:
 24796  004FBC  6EDF               	movwf	indf2,c
 24797                           
 24798                           ;api.c: 215: };api.c: 218: outBuffer[1] = 0x4B16 >> 8;
 24799  004FBE  EE20 F001          	lfsr	2,1
 24800  004FC2  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24801  004FC4  26D9               	addwf	fsr2l,f,c
 24802  004FC6  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24803  004FC8  22DA               	addwfc	fsr2h,f,c
 24804  004FCA  0E4B               	movlw	75
 24805  004FCC  6EDF               	movwf	indf2,c
 24806                           
 24807                           ;api.c: 219: outBuffer[2] = (uint8_t) 0x4B16;
 24808  004FCE  EE20 F002          	lfsr	2,2
 24809  004FD2  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24810  004FD4  26D9               	addwf	fsr2l,f,c
 24811  004FD6  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24812  004FD8  22DA               	addwfc	fsr2h,f,c
 24813  004FDA  0E16               	movlw	22
 24814  004FDC  6EDF               	movwf	indf2,c
 24815                           
 24816                           ;api.c: 222: cntr = 3;
 24817  004FDE  0E03               	movlw	3
 24818  004FE0  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24819                           
 24820                           ;api.c: 223: if(secondHalf)
 24821  004FE2  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24822  004FE4  B4D8               	btfsc	status,2,c
 24823  004FE6  D002               	goto	l2730
 24824                           
 24825                           ;api.c: 224: {;api.c: 225: start_line = 2;
 24826  004FE8  0E02               	movlw	2
 24827  004FEA  D001               	goto	L33
 24828  004FEC                     l2730:
 24829                           
 24830                           ;api.c: 227: else;api.c: 228: {;api.c: 229: start_line = 0;
 24831  004FEC  0E00               	movlw	0
 24832  004FEE                     L33:
 24833  004FEE  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24834                           
 24835                           ;api.c: 230: };api.c: 231: for(line=start_line; line<start_line+2; ++line)
 24836  004FF0  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24837  004FF4  D01A               	goto	l2732
 24838  004FF6                     
 24839                           ;api.c: 232: {;api.c: 233: for(position=0; position<20; ++position)
 24840  004FF6  0E00               	movlw	0
 24841  004FF8  6E10               	movwf	__fill_buffer_get_display@position,c
 24842  004FFA                     l13361:
 24843  004FFA  0E13               	movlw	19
 24844  004FFC  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24845  004FFE  D001               	goto	l2734
 24846  005000  D013               	goto	u11050
 24847  005002                     l2734:
 24848                           
 24849                           ;api.c: 234: {;api.c: 235: outBuffer[cntr] = display_get_character(line, position);
 24850  005002  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24851  005006  500E               	movf	__fill_buffer_get_display@line,w,c
 24852  005008  ECE3  F037         	call	_display_get_character
 24853  00500C  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24854  00500E  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24855  005010  0D01               	mullw	1
 24856  005012  50F3               	movf	prodl,w,c
 24857  005014  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24858  005016  6ED9               	movwf	fsr2l,c
 24859  005018  50F4               	movf	prodh,w,c
 24860  00501A  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24861  00501C  6EDA               	movwf	fsr2h,c
 24862  00501E  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24863                           
 24864                           ;api.c: 236: ++cntr;
 24865  005022  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24866  005024  2A10               	incf	__fill_buffer_get_display@position,f,c
 24867  005026  D7E9               	goto	l13361
 24868  005028                     u11050:
 24869  005028  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24870  00502A                     l2732:
 24871  00502A  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24872  00502C  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24873  00502E  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24874  005030  0E02               	movlw	2
 24875  005032  2608               	addwf	??__fill_buffer_get_display,f,c
 24876  005034  0E00               	movlw	0
 24877  005036  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24878  005038  500E               	movf	__fill_buffer_get_display@line,w,c
 24879  00503A  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24880  00503C  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24881  00503E  5008               	movf	??__fill_buffer_get_display,w,c
 24882  005040  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24883  005042  500B               	movf	??__fill_buffer_get_display+3,w,c
 24884  005044  0A80               	xorlw	128
 24885  005046  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24886  005048  5009               	movf	??__fill_buffer_get_display+1,w,c
 24887  00504A  0A80               	xorlw	128
 24888  00504C  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24889  00504E  B0D8               	btfsc	status,0,c
 24890  005050  0012               	return	
 24891  005052  D7D1               	goto	l2733
 24892  005054                     __end_of__fill_buffer_get_display:
 24893                           	opt stack 0
 24894                           tosu	equ	0xFFF
 24895                           tosh	equ	0xFFE
 24896                           tosl	equ	0xFFD
 24897                           pclath	equ	0xFFA
 24898                           tblptru	equ	0xFF8
 24899                           tblptrh	equ	0xFF7
 24900                           tblptrl	equ	0xFF6
 24901                           tablat	equ	0xFF5
 24902                           prodh	equ	0xFF4
 24903                           prodl	equ	0xFF3
 24904                           intcon	equ	0xFF2
 24905                           intcon3	equ	0xFF0
 24906                           indf0	equ	0xFEF
 24907                           postinc0	equ	0xFEE
 24908                           fsr0h	equ	0xFEA
 24909                           fsr0l	equ	0xFE9
 24910                           wreg	equ	0xFE8
 24911                           indf1	equ	0xFE7
 24912                           postdec1	equ	0xFE5
 24913                           plusw1	equ	0xFE3
 24914                           fsr1h	equ	0xFE2
 24915                           fsr1l	equ	0xFE1
 24916                           indf2	equ	0xFDF
 24917                           postinc2	equ	0xFDE
 24918                           postdec2	equ	0xFDD
 24919                           plusw2	equ	0xFDB
 24920                           fsr2h	equ	0xFDA
 24921                           fsr2l	equ	0xFD9
 24922                           status	equ	0xFD8
 24923                           
 24924 ;; *************** function _display_get_character *****************
 24925 ;; Defined at:
 24926 ;;		line 181 in file "display.c"
 24927 ;; Parameters:    Size  Location     Type
 24928 ;;  line            1    wreg     unsigned char 
 24929 ;;  position        1    0[COMRAM] unsigned char 
 24930 ;; Auto vars:     Size  Location     Type
 24931 ;;  line            1    3[COMRAM] unsigned char 
 24932 ;; Return value:  Size  Location     Type
 24933 ;;                  1    wreg      unsigned char 
 24934 ;; Registers used:
 24935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24936 ;; Tracked objects:
 24937 ;;		On entry : 0/0
 24938 ;;		On exit  : 0/0
 24939 ;;		Unchanged: 0/0
 24940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24944 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24945 ;;Total ram usage:        4 bytes
 24946 ;; Hardware stack levels used:    1
 24947 ;; This function calls:
 24948 ;;		Nothing
 24949 ;; This function is called by:
 24950 ;;		__fill_buffer_get_display
 24951 ;; This function uses a non-reentrant model
 24952 ;;
 24953                           
 24954                           	psect	text120
 24955  006FC6                     __ptext120:
 24956                           	opt stack 0
 24957  006FC6                     _display_get_character:
 24958                           	opt stack 27
 24959                           
 24960                           ;incstack = 0
 24961                           ;display_get_character@line stored from wreg
 24962  006FC6  6E04               	movwf	display_get_character@line,c
 24963                           
 24964                           ;display.c: 183: return display_content[line][position];
 24965  006FC8  5004               	movf	display_get_character@line,w,c
 24966  006FCA  0D14               	mullw	20
 24967  006FCC  0E7B               	movlw	low _display_content
 24968  006FCE  6E02               	movwf	??_display_get_character& (0+255),c
 24969  006FD0  0E01               	movlw	high _display_content
 24970  006FD2  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24971  006FD4  50F3               	movf	prodl,w,c
 24972  006FD6  2602               	addwf	??_display_get_character,f,c
 24973  006FD8  50F4               	movf	prodh,w,c
 24974  006FDA  2203               	addwfc	??_display_get_character+1,f,c
 24975  006FDC  5001               	movf	display_get_character@position,w,c
 24976  006FDE  0D01               	mullw	1
 24977  006FE0  50F3               	movf	prodl,w,c
 24978  006FE2  2402               	addwf	??_display_get_character,w,c
 24979  006FE4  6ED9               	movwf	fsr2l,c
 24980  006FE6  50F4               	movf	prodh,w,c
 24981  006FE8  2003               	addwfc	??_display_get_character+1,w,c
 24982  006FEA  6EDA               	movwf	fsr2h,c
 24983  006FEC  50DF               	movf	indf2,w,c
 24984  006FEE  0012               	return	
 24985  006FF0                     __end_of_display_get_character:
 24986                           	opt stack 0
 24987                           tosu	equ	0xFFF
 24988                           tosh	equ	0xFFE
 24989                           tosl	equ	0xFFD
 24990                           pclath	equ	0xFFA
 24991                           tblptru	equ	0xFF8
 24992                           tblptrh	equ	0xFF7
 24993                           tblptrl	equ	0xFF6
 24994                           tablat	equ	0xFF5
 24995                           prodh	equ	0xFF4
 24996                           prodl	equ	0xFF3
 24997                           intcon	equ	0xFF2
 24998                           intcon3	equ	0xFF0
 24999                           indf0	equ	0xFEF
 25000                           postinc0	equ	0xFEE
 25001                           fsr0h	equ	0xFEA
 25002                           fsr0l	equ	0xFE9
 25003                           wreg	equ	0xFE8
 25004                           indf1	equ	0xFE7
 25005                           postdec1	equ	0xFE5
 25006                           plusw1	equ	0xFE3
 25007                           fsr1h	equ	0xFE2
 25008                           fsr1l	equ	0xFE1
 25009                           indf2	equ	0xFDF
 25010                           postinc2	equ	0xFDE
 25011                           postdec2	equ	0xFDD
 25012                           plusw2	equ	0xFDB
 25013                           fsr2h	equ	0xFDA
 25014                           fsr2l	equ	0xFD9
 25015                           status	equ	0xFD8
 25016                           
 25017 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25018 ;; Defined at:
 25019 ;;		line 241 in file "api.c"
 25020 ;; Parameters:    Size  Location     Type
 25021 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25022 ;;		 -> ToSendDataBuffer(64), 
 25023 ;; Auto vars:     Size  Location     Type
 25024 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25025 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25026 ;;  cntr            1   10[COMRAM] unsigned char 
 25027 ;;  data_length     1    9[COMRAM] unsigned char 
 25028 ;; Return value:  Size  Location     Type
 25029 ;;                  1    wreg      void 
 25030 ;; Registers used:
 25031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25032 ;; Tracked objects:
 25033 ;;		On entry : 0/0
 25034 ;;		On exit  : 0/0
 25035 ;;		Unchanged: 0/0
 25036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25038 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25039 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25040 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25041 ;;Total ram usage:       13 bytes
 25042 ;; Hardware stack levels used:    1
 25043 ;; Hardware stack levels required when called:    1
 25044 ;; This function calls:
 25045 ;;		_bootloader_get_entries
 25046 ;;		_bootloader_get_error
 25047 ;;		_bootloader_get_file_size
 25048 ;;		_bootloader_get_flashPagesWritten
 25049 ;;		_bootloader_get_rec_address
 25050 ;;		_bootloader_get_rec_checksum
 25051 ;;		_bootloader_get_rec_checksumCheck
 25052 ;;		_bootloader_get_rec_data
 25053 ;;		_bootloader_get_rec_dataLength
 25054 ;;		_bootloader_get_rec_recordType
 25055 ;;		_bootloader_get_total_entries
 25056 ;; This function is called by:
 25057 ;;		_api_prepare
 25058 ;; This function uses a non-reentrant model
 25059 ;;
 25060                           
 25061                           	psect	text121
 25062  00203C                     __ptext121:
 25063                           	opt stack 0
 25064  00203C                     __fill_buffer_get_bootloader_details:
 25065                           	opt stack 27
 25066                           
 25067                           ;api.c: 243: uint8_t cntr;;api.c: 244: uint8_t data_length;;api.c: 245: uint16_t buffer_
      +                          small;;api.c: 246: uint32_t buffer_large;;api.c: 249: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25068                           
 25069                           ;incstack = 0
 25070  00203C  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25071  002040  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25072  002044  0E13               	movlw	19
 25073  002046  6EDF               	movwf	indf2,c
 25074                           
 25075                           ;api.c: 252: outBuffer[1] = ((unsigned char)(((0x4B16)>>8)&0xFF));
 25076  002048  EE20 F001          	lfsr	2,1
 25077  00204C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25078  00204E  26D9               	addwf	fsr2l,f,c
 25079  002050  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25080  002052  22DA               	addwfc	fsr2h,f,c
 25081  002054  0E4B               	movlw	75
 25082  002056  6EDF               	movwf	indf2,c
 25083                           
 25084                           ;api.c: 253: outBuffer[2] = ((unsigned char)((0x4B16)&0xFF));
 25085  002058  EE20 F002          	lfsr	2,2
 25086  00205C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25087  00205E  26D9               	addwf	fsr2l,f,c
 25088  002060  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25089  002062  22DA               	addwfc	fsr2h,f,c
 25090  002064  0E16               	movlw	22
 25091  002066  6EDF               	movwf	indf2,c
 25092                           
 25093                           ;api.c: 256: buffer_large = bootloader_get_file_size();
 25094  002068  ECB5  F039         	call	_bootloader_get_file_size	;wreg free
 25095  00206C  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25096  002070  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25097  002074  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25098  002078  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25099                           
 25100                           ;api.c: 257: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25101  00207C  EE20 F003          	lfsr	2,3
 25102  002080  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25103  002082  26D9               	addwf	fsr2l,f,c
 25104  002084  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25105  002086  22DA               	addwfc	fsr2h,f,c
 25106  002088  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25107  00208A  6EDF               	movwf	indf2,c
 25108                           
 25109                           ;api.c: 258: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25110  00208C  EE20 F004          	lfsr	2,4
 25111  002090  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25112  002092  26D9               	addwf	fsr2l,f,c
 25113  002094  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25114  002096  22DA               	addwfc	fsr2h,f,c
 25115  002098  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25116                           
 25117                           ;api.c: 259: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25118  00209C  EE20 F005          	lfsr	2,5
 25119  0020A0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25120  0020A2  26D9               	addwf	fsr2l,f,c
 25121  0020A4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25122  0020A6  22DA               	addwfc	fsr2h,f,c
 25123  0020A8  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25124  0020AA  6EDF               	movwf	indf2,c
 25125                           
 25126                           ;api.c: 260: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25127  0020AC  EE20 F006          	lfsr	2,6
 25128  0020B0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25129  0020B2  26D9               	addwf	fsr2l,f,c
 25130  0020B4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25131  0020B6  22DA               	addwfc	fsr2h,f,c
 25132  0020B8  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25133                           
 25134                           ;api.c: 262: buffer_small = bootloader_get_entries();
 25135  0020BC  EC0A  F03A         	call	_bootloader_get_entries	;wreg free
 25136  0020C0  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25137  0020C4  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25138                           
 25139                           ;api.c: 263: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25140  0020C8  EE20 F007          	lfsr	2,7
 25141  0020CC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25142  0020CE  26D9               	addwf	fsr2l,f,c
 25143  0020D0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25144  0020D2  22DA               	addwfc	fsr2h,f,c
 25145  0020D4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25146  0020D6  6EDF               	movwf	indf2,c
 25147                           
 25148                           ;api.c: 264: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25149  0020D8  EE20 F008          	lfsr	2,8
 25150  0020DC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25151  0020DE  26D9               	addwf	fsr2l,f,c
 25152  0020E0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25153  0020E2  22DA               	addwfc	fsr2h,f,c
 25154  0020E4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25155                           
 25156                           ;api.c: 266: buffer_small = bootloader_get_total_entries();
 25157  0020E8  EC14  F03A         	call	_bootloader_get_total_entries	;wreg free
 25158  0020EC  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25159  0020F0  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25160                           
 25161                           ;api.c: 267: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25162  0020F4  EE20 F009          	lfsr	2,9
 25163  0020F8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25164  0020FA  26D9               	addwf	fsr2l,f,c
 25165  0020FC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25166  0020FE  22DA               	addwfc	fsr2h,f,c
 25167  002100  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25168  002102  6EDF               	movwf	indf2,c
 25169                           
 25170                           ;api.c: 268: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25171  002104  EE20 F00A          	lfsr	2,10
 25172  002108  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25173  00210A  26D9               	addwf	fsr2l,f,c
 25174  00210C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25175  00210E  22DA               	addwfc	fsr2h,f,c
 25176  002110  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25177                           
 25178                           ;api.c: 270: outBuffer[11] = (uint8_t) bootloader_get_error();
 25179  002114  EE20 F00B          	lfsr	2,11
 25180  002118  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25181  00211A  26D9               	addwf	fsr2l,f,c
 25182  00211C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25183  00211E  22DA               	addwfc	fsr2h,f,c
 25184  002120  EC34  F03A         	call	_bootloader_get_error	;wreg free
 25185  002124  6EDF               	movwf	indf2,c
 25186                           
 25187                           ;api.c: 272: buffer_small = bootloader_get_flashPagesWritten();
 25188  002126  EC0F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 25189  00212A  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25190  00212E  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25191                           
 25192                           ;api.c: 273: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25193  002132  EE20 F00C          	lfsr	2,12
 25194  002136  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25195  002138  26D9               	addwf	fsr2l,f,c
 25196  00213A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25197  00213C  22DA               	addwfc	fsr2h,f,c
 25198  00213E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25199  002140  6EDF               	movwf	indf2,c
 25200                           
 25201                           ;api.c: 274: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25202  002142  EE20 F00D          	lfsr	2,13
 25203  002146  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25204  002148  26D9               	addwf	fsr2l,f,c
 25205  00214A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25206  00214C  22DA               	addwfc	fsr2h,f,c
 25207  00214E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25208                           
 25209                           ;api.c: 277: buffer_small = bootloader_get_rec_dataLength();
 25210  002152  EC00  F03A         	call	_bootloader_get_rec_dataLength	;wreg free
 25211  002156  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25212  00215A  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25213                           
 25214                           ;api.c: 278: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25215  00215E  EE20 F00E          	lfsr	2,14
 25216  002162  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25217  002164  26D9               	addwf	fsr2l,f,c
 25218  002166  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25219  002168  22DA               	addwfc	fsr2h,f,c
 25220  00216A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25221  00216C  6EDF               	movwf	indf2,c
 25222                           
 25223                           ;api.c: 279: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25224  00216E  EE20 F00F          	lfsr	2,15
 25225  002172  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25226  002174  26D9               	addwf	fsr2l,f,c
 25227  002176  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25228  002178  22DA               	addwfc	fsr2h,f,c
 25229  00217A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25230                           
 25231                           ;api.c: 281: buffer_small = bootloader_get_rec_address();
 25232  00217E  EC05  F03A         	call	_bootloader_get_rec_address	;wreg free
 25233  002182  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25234  002186  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25235                           
 25236                           ;api.c: 282: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25237  00218A  EE20 F010          	lfsr	2,16
 25238  00218E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25239  002190  26D9               	addwf	fsr2l,f,c
 25240  002192  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25241  002194  22DA               	addwfc	fsr2h,f,c
 25242  002196  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25243  002198  6EDF               	movwf	indf2,c
 25244                           
 25245                           ;api.c: 283: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25246  00219A  EE20 F011          	lfsr	2,17
 25247  00219E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25248  0021A0  26D9               	addwf	fsr2l,f,c
 25249  0021A2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25250  0021A4  22DA               	addwfc	fsr2h,f,c
 25251  0021A6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25252                           
 25253                           ;api.c: 285: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25254  0021AA  EE20 F012          	lfsr	2,18
 25255  0021AE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25256  0021B0  26D9               	addwf	fsr2l,f,c
 25257  0021B2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25258  0021B4  22DA               	addwfc	fsr2h,f,c
 25259  0021B6  EC28  F03A         	call	_bootloader_get_rec_recordType	;wreg free
 25260  0021BA  6EDF               	movwf	indf2,c
 25261                           
 25262                           ;api.c: 286: outBuffer[19] = bootloader_get_rec_checksum();
 25263  0021BC  EE20 F013          	lfsr	2,19
 25264  0021C0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25265  0021C2  26D9               	addwf	fsr2l,f,c
 25266  0021C4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25267  0021C6  22DA               	addwfc	fsr2h,f,c
 25268  0021C8  EC2E  F03A         	call	_bootloader_get_rec_checksum	;wreg free
 25269  0021CC  6EDF               	movwf	indf2,c
 25270                           
 25271                           ;api.c: 287: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25272  0021CE  EE20 F014          	lfsr	2,20
 25273  0021D2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25274  0021D4  26D9               	addwf	fsr2l,f,c
 25275  0021D6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25276  0021D8  22DA               	addwfc	fsr2h,f,c
 25277  0021DA  EC2B  F03A         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25278  0021DE  6EDF               	movwf	indf2,c
 25279                           
 25280                           ;api.c: 289: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25281  0021E0  EC00  F03A         	call	_bootloader_get_rec_dataLength	;wreg free
 25282  0021E4  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25283  0021E6  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25284                           
 25285                           ;api.c: 290: if(data_length>43)
 25286  0021E8  0E2B               	movlw	43
 25287  0021EA  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25288  0021EC  D002               	goto	l2740
 25289                           
 25290                           ;api.c: 291: {;api.c: 293: data_length = 43;
 25291  0021EE  0E2B               	movlw	43
 25292  0021F0  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25293  0021F2                     l2740:
 25294                           
 25295                           ;api.c: 294: };api.c: 295: for(cntr=0; cntr<data_length; ++cntr)
 25296  0021F2  0E00               	movlw	0
 25297  0021F4  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25298  0021F6  D014               	goto	l2741
 25299  0021F8                     
 25300                           ;api.c: 296: {;api.c: 297: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25301  0021F8  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25302  0021FA  EC85  F039         	call	_bootloader_get_rec_data
 25303  0021FE  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25304  002200  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25305  002202  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25306  002204  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25307  002206  0E15               	movlw	21
 25308  002208  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25309  00220A  0E00               	movlw	0
 25310  00220C  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25311  00220E  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25312  002210  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25313  002212  6ED9               	movwf	fsr2l,c
 25314  002214  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25315  002216  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25316  002218  6EDA               	movwf	fsr2h,c
 25317  00221A  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25318  00221E  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25319  002220                     l2741:
 25320  002220  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25321  002222  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25322  002224  B0D8               	btfsc	status,0,c
 25323  002226  0012               	return	
 25324  002228  D7E7               	goto	l2742
 25325  00222A                     __end_of__fill_buffer_get_bootloader_details:
 25326                           	opt stack 0
 25327                           tosu	equ	0xFFF
 25328                           tosh	equ	0xFFE
 25329                           tosl	equ	0xFFD
 25330                           pclath	equ	0xFFA
 25331                           tblptru	equ	0xFF8
 25332                           tblptrh	equ	0xFF7
 25333                           tblptrl	equ	0xFF6
 25334                           tablat	equ	0xFF5
 25335                           prodh	equ	0xFF4
 25336                           prodl	equ	0xFF3
 25337                           intcon	equ	0xFF2
 25338                           intcon3	equ	0xFF0
 25339                           indf0	equ	0xFEF
 25340                           postinc0	equ	0xFEE
 25341                           fsr0h	equ	0xFEA
 25342                           fsr0l	equ	0xFE9
 25343                           wreg	equ	0xFE8
 25344                           indf1	equ	0xFE7
 25345                           postdec1	equ	0xFE5
 25346                           plusw1	equ	0xFE3
 25347                           fsr1h	equ	0xFE2
 25348                           fsr1l	equ	0xFE1
 25349                           indf2	equ	0xFDF
 25350                           postinc2	equ	0xFDE
 25351                           postdec2	equ	0xFDD
 25352                           plusw2	equ	0xFDB
 25353                           fsr2h	equ	0xFDA
 25354                           fsr2l	equ	0xFD9
 25355                           status	equ	0xFD8
 25356                           
 25357 ;; *************** function _bootloader_get_rec_recordType *****************
 25358 ;; Defined at:
 25359 ;;		line 494 in file "bootloader.c"
 25360 ;; Parameters:    Size  Location     Type
 25361 ;;		None
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;		None
 25364 ;; Return value:  Size  Location     Type
 25365 ;;                  1    wreg      enum E6764
 25366 ;; Registers used:
 25367 ;;		wreg, status,2
 25368 ;; Tracked objects:
 25369 ;;		On entry : 0/0
 25370 ;;		On exit  : 0/0
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;Total ram usage:        0 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; This function calls:
 25380 ;;		Nothing
 25381 ;; This function is called by:
 25382 ;;		__fill_buffer_get_bootloader_details
 25383 ;; This function uses a non-reentrant model
 25384 ;;
 25385                           
 25386                           	psect	text122
 25387  007450                     __ptext122:
 25388                           	opt stack 0
 25389  007450                     _bootloader_get_rec_recordType:
 25390                           	opt stack 27
 25391                           
 25392                           ;bootloader.c: 496: return hex_file_entry.recordType;
 25393                           
 25394                           ;incstack = 0
 25395  007450  0101               	movlb	1	; () banked
 25396  007452  51CF               	movf	(_hex_file_entry+4)& (0+255),w,b
 25397  007454  0012               	return	
 25398  007456                     __end_of_bootloader_get_rec_recordType:
 25399                           	opt stack 0
 25400                           tosu	equ	0xFFF
 25401                           tosh	equ	0xFFE
 25402                           tosl	equ	0xFFD
 25403                           pclath	equ	0xFFA
 25404                           tblptru	equ	0xFF8
 25405                           tblptrh	equ	0xFF7
 25406                           tblptrl	equ	0xFF6
 25407                           tablat	equ	0xFF5
 25408                           prodh	equ	0xFF4
 25409                           prodl	equ	0xFF3
 25410                           intcon	equ	0xFF2
 25411                           intcon3	equ	0xFF0
 25412                           indf0	equ	0xFEF
 25413                           postinc0	equ	0xFEE
 25414                           fsr0h	equ	0xFEA
 25415                           fsr0l	equ	0xFE9
 25416                           wreg	equ	0xFE8
 25417                           indf1	equ	0xFE7
 25418                           postdec1	equ	0xFE5
 25419                           plusw1	equ	0xFE3
 25420                           fsr1h	equ	0xFE2
 25421                           fsr1l	equ	0xFE1
 25422                           indf2	equ	0xFDF
 25423                           postinc2	equ	0xFDE
 25424                           postdec2	equ	0xFDD
 25425                           plusw2	equ	0xFDB
 25426                           fsr2h	equ	0xFDA
 25427                           fsr2l	equ	0xFD9
 25428                           status	equ	0xFD8
 25429                           
 25430 ;; *************** function _bootloader_get_rec_dataLength *****************
 25431 ;; Defined at:
 25432 ;;		line 483 in file "bootloader.c"
 25433 ;; Parameters:    Size  Location     Type
 25434 ;;		None
 25435 ;; Auto vars:     Size  Location     Type
 25436 ;;		None
 25437 ;; Return value:  Size  Location     Type
 25438 ;;                  2    0[COMRAM] unsigned int 
 25439 ;; Registers used:
 25440 ;;		None
 25441 ;; Tracked objects:
 25442 ;;		On entry : 0/0
 25443 ;;		On exit  : 0/0
 25444 ;;		Unchanged: 0/0
 25445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25450 ;;Total ram usage:        2 bytes
 25451 ;; Hardware stack levels used:    1
 25452 ;; This function calls:
 25453 ;;		Nothing
 25454 ;; This function is called by:
 25455 ;;		__fill_buffer_get_bootloader_details
 25456 ;; This function uses a non-reentrant model
 25457 ;;
 25458                           
 25459                           	psect	text123
 25460  007400                     __ptext123:
 25461                           	opt stack 0
 25462  007400                     _bootloader_get_rec_dataLength:
 25463                           	opt stack 27
 25464                           
 25465                           ;bootloader.c: 485: return hex_file_entry.dataLength;
 25466                           
 25467                           ; BSR set to: 1
 25468                           ;incstack = 0
 25469  007400  C1CB  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25470  007404  C1CC  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25471  007408  0012               	return		;funcret
 25472  00740A                     __end_of_bootloader_get_rec_dataLength:
 25473                           	opt stack 0
 25474                           tosu	equ	0xFFF
 25475                           tosh	equ	0xFFE
 25476                           tosl	equ	0xFFD
 25477                           pclath	equ	0xFFA
 25478                           tblptru	equ	0xFF8
 25479                           tblptrh	equ	0xFF7
 25480                           tblptrl	equ	0xFF6
 25481                           tablat	equ	0xFF5
 25482                           prodh	equ	0xFF4
 25483                           prodl	equ	0xFF3
 25484                           intcon	equ	0xFF2
 25485                           intcon3	equ	0xFF0
 25486                           indf0	equ	0xFEF
 25487                           postinc0	equ	0xFEE
 25488                           fsr0h	equ	0xFEA
 25489                           fsr0l	equ	0xFE9
 25490                           wreg	equ	0xFE8
 25491                           indf1	equ	0xFE7
 25492                           postdec1	equ	0xFE5
 25493                           plusw1	equ	0xFE3
 25494                           fsr1h	equ	0xFE2
 25495                           fsr1l	equ	0xFE1
 25496                           indf2	equ	0xFDF
 25497                           postinc2	equ	0xFDE
 25498                           postdec2	equ	0xFDD
 25499                           plusw2	equ	0xFDB
 25500                           fsr2h	equ	0xFDA
 25501                           fsr2l	equ	0xFD9
 25502                           status	equ	0xFD8
 25503                           
 25504 ;; *************** function _bootloader_get_rec_data *****************
 25505 ;; Defined at:
 25506 ;;		line 499 in file "bootloader.c"
 25507 ;; Parameters:    Size  Location     Type
 25508 ;;  index           1    wreg     unsigned char 
 25509 ;; Auto vars:     Size  Location     Type
 25510 ;;  index           1    0[COMRAM] unsigned char 
 25511 ;; Return value:  Size  Location     Type
 25512 ;;                  1    wreg      unsigned char 
 25513 ;; Registers used:
 25514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25515 ;; Tracked objects:
 25516 ;;		On entry : 0/0
 25517 ;;		On exit  : 0/0
 25518 ;;		Unchanged: 0/0
 25519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25524 ;;Total ram usage:        1 bytes
 25525 ;; Hardware stack levels used:    1
 25526 ;; This function calls:
 25527 ;;		Nothing
 25528 ;; This function is called by:
 25529 ;;		__fill_buffer_get_bootloader_details
 25530 ;; This function uses a non-reentrant model
 25531 ;;
 25532                           
 25533                           	psect	text124
 25534  00730A                     __ptext124:
 25535                           	opt stack 0
 25536  00730A                     _bootloader_get_rec_data:
 25537                           	opt stack 27
 25538                           
 25539                           ;incstack = 0
 25540                           ;bootloader_get_rec_data@index stored from wreg
 25541  00730A  6E01               	movwf	bootloader_get_rec_data@index,c
 25542                           
 25543                           ;bootloader.c: 501: return hex_file_entry.data[index];
 25544  00730C  5001               	movf	bootloader_get_rec_data@index,w,c
 25545  00730E  0D01               	mullw	1
 25546  007310  0ED0               	movlw	low (_hex_file_entry+5)
 25547  007312  24F3               	addwf	prodl,w,c
 25548  007314  6ED9               	movwf	fsr2l,c
 25549  007316  0E01               	movlw	high (_hex_file_entry+5)
 25550  007318  20F4               	addwfc	prodh,w,c
 25551  00731A  6EDA               	movwf	fsr2h,c
 25552  00731C  50DF               	movf	indf2,w,c
 25553  00731E  0012               	return	
 25554  007320                     __end_of_bootloader_get_rec_data:
 25555                           	opt stack 0
 25556                           tosu	equ	0xFFF
 25557                           tosh	equ	0xFFE
 25558                           tosl	equ	0xFFD
 25559                           pclath	equ	0xFFA
 25560                           tblptru	equ	0xFF8
 25561                           tblptrh	equ	0xFF7
 25562                           tblptrl	equ	0xFF6
 25563                           tablat	equ	0xFF5
 25564                           prodh	equ	0xFF4
 25565                           prodl	equ	0xFF3
 25566                           intcon	equ	0xFF2
 25567                           intcon3	equ	0xFF0
 25568                           indf0	equ	0xFEF
 25569                           postinc0	equ	0xFEE
 25570                           fsr0h	equ	0xFEA
 25571                           fsr0l	equ	0xFE9
 25572                           wreg	equ	0xFE8
 25573                           indf1	equ	0xFE7
 25574                           postdec1	equ	0xFE5
 25575                           plusw1	equ	0xFE3
 25576                           fsr1h	equ	0xFE2
 25577                           fsr1l	equ	0xFE1
 25578                           indf2	equ	0xFDF
 25579                           postinc2	equ	0xFDE
 25580                           postdec2	equ	0xFDD
 25581                           plusw2	equ	0xFDB
 25582                           fsr2h	equ	0xFDA
 25583                           fsr2l	equ	0xFD9
 25584                           status	equ	0xFD8
 25585                           
 25586 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25587 ;; Defined at:
 25588 ;;		line 509 in file "bootloader.c"
 25589 ;; Parameters:    Size  Location     Type
 25590 ;;		None
 25591 ;; Auto vars:     Size  Location     Type
 25592 ;;		None
 25593 ;; Return value:  Size  Location     Type
 25594 ;;                  1    wreg      unsigned char 
 25595 ;; Registers used:
 25596 ;;		wreg, status,2
 25597 ;; Tracked objects:
 25598 ;;		On entry : 0/0
 25599 ;;		On exit  : 0/0
 25600 ;;		Unchanged: 0/0
 25601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25606 ;;Total ram usage:        0 bytes
 25607 ;; Hardware stack levels used:    1
 25608 ;; This function calls:
 25609 ;;		Nothing
 25610 ;; This function is called by:
 25611 ;;		__fill_buffer_get_bootloader_details
 25612 ;; This function uses a non-reentrant model
 25613 ;;
 25614                           
 25615                           	psect	text125
 25616  007456                     __ptext125:
 25617                           	opt stack 0
 25618  007456                     _bootloader_get_rec_checksumCheck:
 25619                           	opt stack 27
 25620                           
 25621                           ;bootloader.c: 511: return hex_file_entry.checksumCheck;
 25622                           
 25623                           ;incstack = 0
 25624  007456  0101               	movlb	1	; () banked
 25625  007458  51E1               	movf	(_hex_file_entry+22)& (0+255),w,b
 25626  00745A  0012               	return	
 25627  00745C                     __end_of_bootloader_get_rec_checksumCheck:
 25628                           	opt stack 0
 25629                           tosu	equ	0xFFF
 25630                           tosh	equ	0xFFE
 25631                           tosl	equ	0xFFD
 25632                           pclath	equ	0xFFA
 25633                           tblptru	equ	0xFF8
 25634                           tblptrh	equ	0xFF7
 25635                           tblptrl	equ	0xFF6
 25636                           tablat	equ	0xFF5
 25637                           prodh	equ	0xFF4
 25638                           prodl	equ	0xFF3
 25639                           intcon	equ	0xFF2
 25640                           intcon3	equ	0xFF0
 25641                           indf0	equ	0xFEF
 25642                           postinc0	equ	0xFEE
 25643                           fsr0h	equ	0xFEA
 25644                           fsr0l	equ	0xFE9
 25645                           wreg	equ	0xFE8
 25646                           indf1	equ	0xFE7
 25647                           postdec1	equ	0xFE5
 25648                           plusw1	equ	0xFE3
 25649                           fsr1h	equ	0xFE2
 25650                           fsr1l	equ	0xFE1
 25651                           indf2	equ	0xFDF
 25652                           postinc2	equ	0xFDE
 25653                           postdec2	equ	0xFDD
 25654                           plusw2	equ	0xFDB
 25655                           fsr2h	equ	0xFDA
 25656                           fsr2l	equ	0xFD9
 25657                           status	equ	0xFD8
 25658                           
 25659 ;; *************** function _bootloader_get_rec_checksum *****************
 25660 ;; Defined at:
 25661 ;;		line 504 in file "bootloader.c"
 25662 ;; Parameters:    Size  Location     Type
 25663 ;;		None
 25664 ;; Auto vars:     Size  Location     Type
 25665 ;;		None
 25666 ;; Return value:  Size  Location     Type
 25667 ;;                  1    wreg      unsigned char 
 25668 ;; Registers used:
 25669 ;;		wreg, status,2
 25670 ;; Tracked objects:
 25671 ;;		On entry : 0/0
 25672 ;;		On exit  : 0/0
 25673 ;;		Unchanged: 0/0
 25674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25679 ;;Total ram usage:        0 bytes
 25680 ;; Hardware stack levels used:    1
 25681 ;; This function calls:
 25682 ;;		Nothing
 25683 ;; This function is called by:
 25684 ;;		__fill_buffer_get_bootloader_details
 25685 ;; This function uses a non-reentrant model
 25686 ;;
 25687                           
 25688                           	psect	text126
 25689  00745C                     __ptext126:
 25690                           	opt stack 0
 25691  00745C                     _bootloader_get_rec_checksum:
 25692                           	opt stack 27
 25693                           
 25694                           ;bootloader.c: 506: return hex_file_entry.checksum;
 25695                           
 25696                           ; BSR set to: 1
 25697                           ;incstack = 0
 25698  00745C  0101               	movlb	1	; () banked
 25699  00745E  51E0               	movf	(_hex_file_entry+21)& (0+255),w,b
 25700  007460  0012               	return	
 25701  007462                     __end_of_bootloader_get_rec_checksum:
 25702                           	opt stack 0
 25703                           tosu	equ	0xFFF
 25704                           tosh	equ	0xFFE
 25705                           tosl	equ	0xFFD
 25706                           pclath	equ	0xFFA
 25707                           tblptru	equ	0xFF8
 25708                           tblptrh	equ	0xFF7
 25709                           tblptrl	equ	0xFF6
 25710                           tablat	equ	0xFF5
 25711                           prodh	equ	0xFF4
 25712                           prodl	equ	0xFF3
 25713                           intcon	equ	0xFF2
 25714                           intcon3	equ	0xFF0
 25715                           indf0	equ	0xFEF
 25716                           postinc0	equ	0xFEE
 25717                           fsr0h	equ	0xFEA
 25718                           fsr0l	equ	0xFE9
 25719                           wreg	equ	0xFE8
 25720                           indf1	equ	0xFE7
 25721                           postdec1	equ	0xFE5
 25722                           plusw1	equ	0xFE3
 25723                           fsr1h	equ	0xFE2
 25724                           fsr1l	equ	0xFE1
 25725                           indf2	equ	0xFDF
 25726                           postinc2	equ	0xFDE
 25727                           postdec2	equ	0xFDD
 25728                           plusw2	equ	0xFDB
 25729                           fsr2h	equ	0xFDA
 25730                           fsr2l	equ	0xFD9
 25731                           status	equ	0xFD8
 25732                           
 25733 ;; *************** function _api_parse *****************
 25734 ;; Defined at:
 25735 ;;		line 91 in file "api.c"
 25736 ;; Parameters:    Size  Location     Type
 25737 ;;  inBuffer        2   53[COMRAM] PTR unsigned char 
 25738 ;;		 -> ReceivedDataBuffer(64), 
 25739 ;;  receivedData    1   55[COMRAM] unsigned char 
 25740 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25741 ;;		 -> ToSendDataBuffer(64), 
 25742 ;; Auto vars:     Size  Location     Type
 25743 ;;  out_idx_ptr     2   60[COMRAM] PTR unsigned char 
 25744 ;;		 -> api_parse@out_idx(1), 
 25745 ;;  in_idx          1   63[COMRAM] unsigned char 
 25746 ;;  out_idx         1   62[COMRAM] unsigned char 
 25747 ;; Return value:  Size  Location     Type
 25748 ;;                  1    wreg      void 
 25749 ;; Registers used:
 25750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25751 ;; Tracked objects:
 25752 ;;		On entry : 0/0
 25753 ;;		On exit  : 0/0
 25754 ;;		Unchanged: 0/0
 25755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25756 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25759 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25760 ;;Total ram usage:       11 bytes
 25761 ;; Hardware stack levels used:    1
 25762 ;; Hardware stack levels required when called:    8
 25763 ;; This function calls:
 25764 ;;		__parse_command_long
 25765 ;;		__parse_command_short
 25766 ;; This function is called by:
 25767 ;;		_APP_DeviceCustomHIDTasks
 25768 ;; This function uses a non-reentrant model
 25769 ;;
 25770                           
 25771                           	psect	text127
 25772  0038AA                     __ptext127:
 25773                           	opt stack 0
 25774  0038AA                     _api_parse:
 25775                           	opt stack 21
 25776                           
 25777                           ;api.c: 95: uint8_t in_idx;;api.c: 96: uint8_t out_idx;;api.c: 97: uint8_t *out_idx_ptr;
      +                          ;api.c: 99: out_idx = 0;
 25778                           
 25779                           ; BSR set to: 1
 25780                           ;incstack = 0
 25781  0038AA  0E00               	movlw	0
 25782  0038AC  6E3F               	movwf	api_parse@out_idx,c
 25783                           
 25784                           ;api.c: 100: out_idx_ptr = &out_idx;
 25785  0038AE  0E3F               	movlw	low api_parse@out_idx
 25786  0038B0  6E3D               	movwf	api_parse@out_idx_ptr,c
 25787  0038B2  0E00               	movlw	high api_parse@out_idx
 25788  0038B4  6E3E               	movwf	api_parse@out_idx_ptr+1,c
 25789                           
 25790                           ;api.c: 102: if(inBuffer[0]>0x7F)
 25791  0038B6  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25792  0038BA  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25793  0038BE  0E7F               	movlw	127
 25794  0038C0  64DF               	cpfsgt	indf2,c
 25795  0038C2  D001               	goto	l2709
 25796  0038C4  0012               	return	
 25797  0038C6                     l2709:
 25798                           
 25799                           ;api.c: 107: };api.c: 109: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25800  0038C6  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25801  0038CA  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25802  0038CE  0E20               	movlw	32
 25803  0038D0  18DE               	xorwf	postinc2,w,c
 25804  0038D2  B4D8               	btfsc	status,2,c
 25805  0038D4  0012               	return	
 25806                           
 25807                           ;api.c: 114: };api.c: 116: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 25808                           
 25809                           ;api.c: 110: {;api.c: 113: return;
 25810  0038D6  C036  FFD9         	movff	api_parse@inBuffer,fsr2l
 25811  0038DA  C037  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25812  0038DE  50DF               	movf	indf2,w,c
 25813  0038E0  A4D8               	btfss	status,2,c
 25814  0038E2  D018               	goto	l2712
 25815                           
 25816                           ;api.c: 117: {;api.c: 119: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 25817  0038E4  C039  FFD9         	movff	api_parse@outBuffer,fsr2l
 25818  0038E8  C03A  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 25819  0038EC  0E00               	movlw	0
 25820  0038EE  6EDF               	movwf	indf2,c
 25821                           
 25822                           ;api.c: 122: outBuffer[1] = 0x4B16 >> 8;
 25823  0038F0  EE20 F001          	lfsr	2,1
 25824  0038F4  5039               	movf	api_parse@outBuffer,w,c
 25825  0038F6  26D9               	addwf	fsr2l,f,c
 25826  0038F8  503A               	movf	api_parse@outBuffer+1,w,c
 25827  0038FA  22DA               	addwfc	fsr2h,f,c
 25828  0038FC  0E4B               	movlw	75
 25829  0038FE  6EDF               	movwf	indf2,c
 25830                           
 25831                           ;api.c: 123: outBuffer[2] = (uint8_t) 0x4B16;
 25832  003900  EE20 F002          	lfsr	2,2
 25833  003904  5039               	movf	api_parse@outBuffer,w,c
 25834  003906  26D9               	addwf	fsr2l,f,c
 25835  003908  503A               	movf	api_parse@outBuffer+1,w,c
 25836  00390A  22DA               	addwfc	fsr2h,f,c
 25837  00390C  0E16               	movlw	22
 25838  00390E  6EDF               	movwf	indf2,c
 25839                           
 25840                           ;api.c: 126: out_idx = 3;
 25841  003910  0E03               	movlw	3
 25842  003912  6E3F               	movwf	api_parse@out_idx,c
 25843  003914                     l2712:
 25844                           
 25845                           ;api.c: 127: };api.c: 129: in_idx = 1;
 25846  003914  0E01               	movlw	1
 25847  003916  6E40               	movwf	api_parse@in_idx,c
 25848                           
 25849                           ;api.c: 130: while(in_idx<receivedDataLength)
 25850  003918  D055               	goto	l2718
 25851  00391A                     
 25852                           ;api.c: 131: {;api.c: 133: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 25853  00391A  5040               	movf	api_parse@in_idx,w,c
 25854  00391C  0D01               	mullw	1
 25855  00391E  50F3               	movf	prodl,w,c
 25856  003920  2436               	addwf	api_parse@inBuffer,w,c
 25857  003922  6ED9               	movwf	fsr2l,c
 25858  003924  50F4               	movf	prodh,w,c
 25859  003926  2037               	addwfc	api_parse@inBuffer+1,w,c
 25860  003928  6EDA               	movwf	fsr2h,c
 25861  00392A  0E99               	movlw	153
 25862  00392C  18DE               	xorwf	postinc2,w,c
 25863  00392E  B4D8               	btfsc	status,2,c
 25864  003930  0012               	return	
 25865  003932  D02D               	goto	l2716
 25866  003934                     
 25867                           ;api.c: 141: _parse_command_short(inBuffer[in_idx]);
 25868  003934  5040               	movf	api_parse@in_idx,w,c
 25869  003936  0D01               	mullw	1
 25870  003938  50F3               	movf	prodl,w,c
 25871  00393A  2436               	addwf	api_parse@inBuffer,w,c
 25872  00393C  6ED9               	movwf	fsr2l,c
 25873  00393E  50F4               	movf	prodh,w,c
 25874  003940  2037               	addwfc	api_parse@inBuffer+1,w,c
 25875  003942  6EDA               	movwf	fsr2h,c
 25876  003944  50DF               	movf	indf2,w,c
 25877  003946  EC36  F02D         	call	__parse_command_short
 25878  00394A  D00B               	goto	l13803
 25879  00394C                     
 25880                           ;api.c: 146: _parse_command_short(inBuffer[in_idx]);
 25881  00394C  5040               	movf	api_parse@in_idx,w,c
 25882  00394E  0D01               	mullw	1
 25883  003950  50F3               	movf	prodl,w,c
 25884  003952  2436               	addwf	api_parse@inBuffer,w,c
 25885  003954  6ED9               	movwf	fsr2l,c
 25886  003956  50F4               	movf	prodh,w,c
 25887  003958  2037               	addwfc	api_parse@inBuffer+1,w,c
 25888  00395A  6EDA               	movwf	fsr2h,c
 25889  00395C  50DF               	movf	indf2,w,c
 25890  00395E  EC36  F02D         	call	__parse_command_short
 25891  003962                     l13803:
 25892                           
 25893                           ;api.c: 147: ++in_idx;
 25894  003962  2A40               	incf	api_parse@in_idx,f,c
 25895                           
 25896                           ;api.c: 148: break;
 25897  003964  D02F               	goto	l2718
 25898  003966                     
 25899                           ;api.c: 151: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 25900  003966  5040               	movf	api_parse@in_idx,w,c
 25901  003968  0D01               	mullw	1
 25902  00396A  50F3               	movf	prodl,w,c
 25903  00396C  2436               	addwf	api_parse@inBuffer,w,c
 25904  00396E  6E2F               	movwf	__parse_command_long@data,c
 25905  003970  50F4               	movf	prodh,w,c
 25906  003972  2037               	addwfc	api_parse@inBuffer+1,w,c
 25907  003974  6E30               	movwf	__parse_command_long@data+1,c
 25908  003976  C039  F031         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 25909  00397A  C03A  F032         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 25910  00397E  C03D  F033         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 25911  003982  C03E  F034         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 25912  003986  EC9D  F036         	call	__parse_command_long	;wreg free
 25913  00398A  2640               	addwf	api_parse@in_idx,f,c
 25914                           
 25915                           ;api.c: 152: break;
 25916  00398C  D01B               	goto	l2718
 25917  00398E                     l2716:
 25918  00398E  5040               	movf	api_parse@in_idx,w,c
 25919  003990  0D01               	mullw	1
 25920  003992  50F3               	movf	prodl,w,c
 25921  003994  2436               	addwf	api_parse@inBuffer,w,c
 25922  003996  6ED9               	movwf	fsr2l,c
 25923  003998  50F4               	movf	prodh,w,c
 25924  00399A  2037               	addwfc	api_parse@inBuffer+1,w,c
 25925  00399C  6EDA               	movwf	fsr2h,c
 25926  00399E  50DF               	movf	indf2,w,c
 25927  0039A0  0BF0               	andlw	240
 25928  0039A2  6E3B               	movwf	??_api_parse& (0+255),c
 25929  0039A4  6A3C               	clrf	(??_api_parse+1)& (0+255),c
 25930                           
 25931                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25932                           ; Switch size 1, requested type "space"
 25933                           ; Number of cases is 1, Range of values is 0 to 0
 25934                           ; switch strategies available:
 25935                           ; Name         Instructions Cycles
 25936                           ; simple_byte            4     3 (average)
 25937                           ;	Chosen strategy is simple_byte
 25938  0039A6  503C               	movf	??_api_parse+1,w,c
 25939  0039A8  0A00               	xorlw	0	; case 0
 25940  0039AA  A4D8               	btfss	status,2,c
 25941  0039AC  0012               	return	
 25942                           
 25943                           ; Switch size 1, requested type "space"
 25944                           ; Number of cases is 3, Range of values is 32 to 80
 25945                           ; switch strategies available:
 25946                           ; Name         Instructions Cycles
 25947                           ; simple_byte           10     6 (average)
 25948                           ;	Chosen strategy is simple_byte
 25949  0039AE  503B               	movf	??_api_parse,w,c
 25950  0039B0  0A20               	xorlw	32	; case 32
 25951  0039B2  B4D8               	btfsc	status,2,c
 25952  0039B4  D7BF               	goto	l2717
 25953  0039B6  0A10               	xorlw	16	; case 48
 25954  0039B8  B4D8               	btfsc	status,2,c
 25955  0039BA  D7C8               	goto	l2719
 25956  0039BC  0A60               	xorlw	96	; case 80
 25957  0039BE  A4D8               	btfss	status,2,c
 25958  0039C0  0012               	return	
 25959  0039C2  D7D1               	goto	l2720
 25960  0039C4                     l2718:
 25961  0039C4  5038               	movf	api_parse@receivedDataLength,w,c
 25962  0039C6  5C40               	subwf	api_parse@in_idx,w,c
 25963  0039C8  B0D8               	btfsc	status,0,c
 25964  0039CA  0012               	return	
 25965  0039CC  D7A6               	goto	l2714
 25966  0039CE                     __end_of_api_parse:
 25967                           	opt stack 0
 25968                           tosu	equ	0xFFF
 25969                           tosh	equ	0xFFE
 25970                           tosl	equ	0xFFD
 25971                           pclath	equ	0xFFA
 25972                           tblptru	equ	0xFF8
 25973                           tblptrh	equ	0xFF7
 25974                           tblptrl	equ	0xFF6
 25975                           tablat	equ	0xFF5
 25976                           prodh	equ	0xFF4
 25977                           prodl	equ	0xFF3
 25978                           intcon	equ	0xFF2
 25979                           intcon3	equ	0xFF0
 25980                           indf0	equ	0xFEF
 25981                           postinc0	equ	0xFEE
 25982                           fsr0h	equ	0xFEA
 25983                           fsr0l	equ	0xFE9
 25984                           wreg	equ	0xFE8
 25985                           indf1	equ	0xFE7
 25986                           postdec1	equ	0xFE5
 25987                           plusw1	equ	0xFE3
 25988                           fsr1h	equ	0xFE2
 25989                           fsr1l	equ	0xFE1
 25990                           indf2	equ	0xFDF
 25991                           postinc2	equ	0xFDE
 25992                           postdec2	equ	0xFDD
 25993                           plusw2	equ	0xFDB
 25994                           fsr2h	equ	0xFDA
 25995                           fsr2l	equ	0xFD9
 25996                           status	equ	0xFD8
 25997                           
 25998 ;; *************** function __parse_command_short *****************
 25999 ;; Defined at:
 26000 ;;		line 301 in file "api.c"
 26001 ;; Parameters:    Size  Location     Type
 26002 ;;  cmd             1    wreg     unsigned char 
 26003 ;; Auto vars:     Size  Location     Type
 26004 ;;  cmd             1   35[COMRAM] unsigned char 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;                  1    wreg      void 
 26007 ;; Registers used:
 26008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26009 ;; Tracked objects:
 26010 ;;		On entry : 0/0
 26011 ;;		On exit  : 0/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26018 ;;Total ram usage:        1 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:    7
 26021 ;; This function calls:
 26022 ;;		_i2c_eeprom_writeByte
 26023 ;;		_reboot
 26024 ;;		_system_delay_ms
 26025 ;; This function is called by:
 26026 ;;		_api_parse
 26027 ;; This function uses a non-reentrant model
 26028 ;;
 26029                           
 26030                           	psect	text128
 26031  005A6C                     __ptext128:
 26032                           	opt stack 0
 26033  005A6C                     __parse_command_short:
 26034                           	opt stack 21
 26035                           
 26036                           ;incstack = 0
 26037                           ;__parse_command_short@cmd stored from wreg
 26038  005A6C  6E24               	movwf	__parse_command_short@cmd,c
 26039                           
 26040                           ;api.c: 303: switch(cmd)
 26041  005A6E  D033               	goto	l2747
 26042  005A70                     
 26043                           ;api.c: 306: i2c_eeprom_writeByte(0x100, 0x00);
 26044  005A70  0E01               	movlw	1
 26045  005A72  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26046  005A74  0E00               	movlw	0
 26047  005A76  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26048  005A78  0E00               	movlw	0
 26049  005A7A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26050  005A7C  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26051                           
 26052                           ;api.c: 307: system_delay_ms(10);
 26053  005A80  0E0A               	movlw	10
 26054  005A82  EC92  F038         	call	_system_delay_ms
 26055                           
 26056                           ;api.c: 308: reboot();
 26057  005A86  EC49  F039         	call	_reboot	;wreg free
 26058                           
 26059                           ;api.c: 309: break;
 26060  005A8A  0012               	return	
 26061  005A8C                     
 26062                           ;api.c: 312: i2c_eeprom_writeByte(0x100, 0x94);
 26063  005A8C  0E01               	movlw	1
 26064  005A8E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26065  005A90  0E00               	movlw	0
 26066  005A92  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26067  005A94  0E94               	movlw	148
 26068  005A96  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26069  005A98  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26070                           
 26071                           ;api.c: 313: system_delay_ms(10);
 26072  005A9C  0E0A               	movlw	10
 26073  005A9E  EC92  F038         	call	_system_delay_ms
 26074                           
 26075                           ;api.c: 314: reboot();
 26076  005AA2  EC49  F039         	call	_reboot	;wreg free
 26077                           
 26078                           ;api.c: 315: break;
 26079  005AA6  0012               	return	
 26080  005AA8                     
 26081                           ;api.c: 318: i2c_eeprom_writeByte(0x100, 0x78);
 26082  005AA8  0E01               	movlw	1
 26083  005AAA  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26084  005AAC  0E00               	movlw	0
 26085  005AAE  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26086  005AB0  0E78               	movlw	120
 26087  005AB2  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26088  005AB4  ECDC  F035         	call	_i2c_eeprom_writeByte	;wreg free
 26089                           
 26090                           ;api.c: 319: system_delay_ms(10);
 26091  005AB8  0E0A               	movlw	10
 26092  005ABA  EC92  F038         	call	_system_delay_ms
 26093                           
 26094                           ;api.c: 320: reboot();
 26095  005ABE  EC49  F039         	call	_reboot	;wreg free
 26096                           
 26097                           ;api.c: 321: break;
 26098  005AC2  0012               	return	
 26099  005AC4                     
 26100                           ;api.c: 324: --os.encoder1Count;
 26101  005AC4  0100               	movlb	0	; () banked
 26102  005AC6  0760               	decf	_os& (0+255),f,b
 26103                           
 26104                           ;api.c: 325: break;
 26105  005AC8  0012               	return	
 26106  005ACA                     
 26107                           ;api.c: 328: ++os.encoder1Count;
 26108                           
 26109                           ; BSR set to: 0
 26110  005ACA  0100               	movlb	0	; () banked
 26111  005ACC  2B60               	incf	_os& (0+255),f,b
 26112                           
 26113                           ;api.c: 329: break;
 26114  005ACE  0012               	return	
 26115  005AD0                     
 26116                           ;api.c: 332: ++os.button1;
 26117                           
 26118                           ; BSR set to: 0
 26119  005AD0  0100               	movlb	0	; () banked
 26120  005AD2  2B61               	incf	(_os+1)& (0+255),f,b
 26121                           
 26122                           ; BSR set to: 0
 26123                           ;api.c: 334: }
 26124                           
 26125                           ;api.c: 333: break;
 26126  005AD4  0012               	return	
 26127  005AD6                     l2747:
 26128                           
 26129                           ; BSR set to: 0
 26130  005AD6  5024               	movf	__parse_command_short@cmd,w,c
 26131                           
 26132                           ; Switch size 1, requested type "space"
 26133                           ; Number of cases is 6, Range of values is 32 to 62
 26134                           ; switch strategies available:
 26135                           ; Name         Instructions Cycles
 26136                           ; simple_byte           19    10 (average)
 26137                           ;	Chosen strategy is simple_byte
 26138  005AD8  0A20               	xorlw	32	; case 32
 26139  005ADA  B4D8               	btfsc	status,2,c
 26140  005ADC  D7C9               	goto	l2748
 26141  005ADE  0A01               	xorlw	1	; case 33
 26142  005AE0  B4D8               	btfsc	status,2,c
 26143  005AE2  D7D4               	goto	l2750
 26144  005AE4  0A03               	xorlw	3	; case 34
 26145  005AE6  B4D8               	btfsc	status,2,c
 26146  005AE8  D7DF               	goto	l2751
 26147  005AEA  0A1E               	xorlw	30	; case 60
 26148  005AEC  B4D8               	btfsc	status,2,c
 26149  005AEE  D7EA               	goto	l2752
 26150  005AF0  0A01               	xorlw	1	; case 61
 26151  005AF2  B4D8               	btfsc	status,2,c
 26152  005AF4  D7EA               	goto	l2753
 26153  005AF6  0A03               	xorlw	3	; case 62
 26154  005AF8  A4D8               	btfss	status,2,c
 26155  005AFA  0012               	return	
 26156  005AFC  D7E9               	goto	l2754
 26157  005AFE                     __end_of__parse_command_short:
 26158                           	opt stack 0
 26159                           tosu	equ	0xFFF
 26160                           tosh	equ	0xFFE
 26161                           tosl	equ	0xFFD
 26162                           pclath	equ	0xFFA
 26163                           tblptru	equ	0xFF8
 26164                           tblptrh	equ	0xFF7
 26165                           tblptrl	equ	0xFF6
 26166                           tablat	equ	0xFF5
 26167                           prodh	equ	0xFF4
 26168                           prodl	equ	0xFF3
 26169                           intcon	equ	0xFF2
 26170                           intcon3	equ	0xFF0
 26171                           indf0	equ	0xFEF
 26172                           postinc0	equ	0xFEE
 26173                           fsr0h	equ	0xFEA
 26174                           fsr0l	equ	0xFE9
 26175                           wreg	equ	0xFE8
 26176                           indf1	equ	0xFE7
 26177                           postdec1	equ	0xFE5
 26178                           plusw1	equ	0xFE3
 26179                           fsr1h	equ	0xFE2
 26180                           fsr1l	equ	0xFE1
 26181                           indf2	equ	0xFDF
 26182                           postinc2	equ	0xFDE
 26183                           postdec2	equ	0xFDD
 26184                           plusw2	equ	0xFDB
 26185                           fsr2h	equ	0xFDA
 26186                           fsr2l	equ	0xFD9
 26187                           status	equ	0xFD8
 26188                           
 26189 ;; *************** function _system_delay_ms *****************
 26190 ;; Defined at:
 26191 ;;		line 138 in file "os.c"
 26192 ;; Parameters:    Size  Location     Type
 26193 ;;  ms              1    wreg     unsigned char 
 26194 ;; Auto vars:     Size  Location     Type
 26195 ;;  ms              1    1[COMRAM] unsigned char 
 26196 ;;  cntr            1    2[COMRAM] unsigned char 
 26197 ;; Return value:  Size  Location     Type
 26198 ;;                  1    wreg      void 
 26199 ;; Registers used:
 26200 ;;		wreg, status,2, status,0, cstack
 26201 ;; Tracked objects:
 26202 ;;		On entry : 0/0
 26203 ;;		On exit  : 0/0
 26204 ;;		Unchanged: 0/0
 26205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26208 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26210 ;;Total ram usage:        3 bytes
 26211 ;; Hardware stack levels used:    1
 26212 ;; This function calls:
 26213 ;;		Nothing
 26214 ;; This function is called by:
 26215 ;;		_system_minimal_init
 26216 ;;		__ui_encoder
 26217 ;;		__parse_command_short
 26218 ;; This function uses a non-reentrant model
 26219 ;;
 26220                           
 26221                           	psect	text129
 26222  007124                     __ptext129:
 26223                           	opt stack 0
 26224  007124                     _system_delay_ms:
 26225                           	opt stack 28
 26226                           
 26227                           ;incstack = 0
 26228                           ;system_delay_ms@ms stored from wreg
 26229  007124  6E02               	movwf	system_delay_ms@ms,c
 26230                           
 26231                           ;os.c: 140: uint8_t cntr;;os.c: 141: for(cntr=0; cntr<ms; ++cntr)
 26232  007126  0E00               	movlw	0
 26233  007128  6E03               	movwf	system_delay_ms@cntr,c
 26234  00712A  D009               	goto	l1057
 26235  00712C                     
 26236                           ;os.c: 142: {;os.c: 143: _delay((unsigned long)((6)*(8000000/4000.0)));
 26237  00712C  0E10               	movlw	16
 26238  00712E  6E01               	movwf	??_system_delay_ms& (0+255),c
 26239  007130  0E94               	movlw	148
 26240  007132                     u13827:
 26241  007132  2EE8               	decfsz	wreg,f,c
 26242  007134  D7FE               	bra	u13827
 26243  007136  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26244  007138  D7FC               	bra	u13827
 26245  00713A  D000               	nop2	
 26246  00713C  2A03               	incf	system_delay_ms@cntr,f,c
 26247  00713E                     l1057:
 26248  00713E  5002               	movf	system_delay_ms@ms,w,c
 26249  007140  5C03               	subwf	system_delay_ms@cntr,w,c
 26250  007142  B0D8               	btfsc	status,0,c
 26251  007144  0012               	return	
 26252  007146  D7F2               	goto	l1058
 26253  007148                     __end_of_system_delay_ms:
 26254                           	opt stack 0
 26255                           tosu	equ	0xFFF
 26256                           tosh	equ	0xFFE
 26257                           tosl	equ	0xFFD
 26258                           pclath	equ	0xFFA
 26259                           tblptru	equ	0xFF8
 26260                           tblptrh	equ	0xFF7
 26261                           tblptrl	equ	0xFF6
 26262                           tablat	equ	0xFF5
 26263                           prodh	equ	0xFF4
 26264                           prodl	equ	0xFF3
 26265                           intcon	equ	0xFF2
 26266                           intcon3	equ	0xFF0
 26267                           indf0	equ	0xFEF
 26268                           postinc0	equ	0xFEE
 26269                           fsr0h	equ	0xFEA
 26270                           fsr0l	equ	0xFE9
 26271                           wreg	equ	0xFE8
 26272                           indf1	equ	0xFE7
 26273                           postdec1	equ	0xFE5
 26274                           plusw1	equ	0xFE3
 26275                           fsr1h	equ	0xFE2
 26276                           fsr1l	equ	0xFE1
 26277                           indf2	equ	0xFDF
 26278                           postinc2	equ	0xFDE
 26279                           postdec2	equ	0xFDD
 26280                           plusw2	equ	0xFDB
 26281                           fsr2h	equ	0xFDA
 26282                           fsr2l	equ	0xFD9
 26283                           status	equ	0xFD8
 26284                           
 26285 ;; *************** function _reboot *****************
 26286 ;; Defined at:
 26287 ;;		line 327 in file "os.c"
 26288 ;; Parameters:    Size  Location     Type
 26289 ;;		None
 26290 ;; Auto vars:     Size  Location     Type
 26291 ;;		None
 26292 ;; Return value:  Size  Location     Type
 26293 ;;                  1    wreg      void 
 26294 ;; Registers used:
 26295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26296 ;; Tracked objects:
 26297 ;;		On entry : 0/0
 26298 ;;		On exit  : 0/0
 26299 ;;		Unchanged: 0/0
 26300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26305 ;;Total ram usage:        0 bytes
 26306 ;; Hardware stack levels used:    1
 26307 ;; Hardware stack levels required when called:    6
 26308 ;; This function calls:
 26309 ;;		_display_prepare
 26310 ;;		_display_update
 26311 ;;		_ui_get_status
 26312 ;; This function is called by:
 26313 ;;		__ui_encoder
 26314 ;;		__parse_command_short
 26315 ;; This function uses a non-reentrant model
 26316 ;;
 26317                           
 26318                           	psect	text130
 26319  007292                     __ptext130:
 26320                           	opt stack 0
 26321  007292                     _reboot:
 26322                           	opt stack 22
 26323                           
 26324                           ;os.c: 330: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26325                           
 26326                           ;incstack = 0
 26327  007292  0E80               	movlw	128
 26328  007294  0100               	movlb	0	; () banked
 26329  007296  6F67               	movwf	(_os+7)& (0+255),b
 26330                           
 26331                           ; BSR set to: 0
 26332                           ;os.c: 331: display_prepare(os.display_mode);
 26333  007298  5167               	movf	(_os+7)& (0+255),w,b
 26334  00729A  EC32  F024         	call	_display_prepare
 26335                           
 26336                           ;os.c: 332: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26337  00729E  EC31  F03A         	call	_ui_get_status	;wreg free
 26338  0072A2  0A05               	xorlw	5
 26339  0072A4  B4D8               	btfsc	status,2,c
 26340                           
 26341                           ;os.c: 333: {;os.c: 334: display_update();
 26342  0072A6  EC9E  F030         	call	_display_update	;wreg free
 26343  0072AA                     
 26344                           ;os.c: 335: };os.c: 338: while(1);
 26345  0072AA  D7FF               	goto	l1084
 26346  0072AC                     __end_of_reboot:
 26347                           	opt stack 0
 26348                           tosu	equ	0xFFF
 26349                           tosh	equ	0xFFE
 26350                           tosl	equ	0xFFD
 26351                           pclath	equ	0xFFA
 26352                           tblptru	equ	0xFF8
 26353                           tblptrh	equ	0xFF7
 26354                           tblptrl	equ	0xFF6
 26355                           tablat	equ	0xFF5
 26356                           prodh	equ	0xFF4
 26357                           prodl	equ	0xFF3
 26358                           intcon	equ	0xFF2
 26359                           intcon3	equ	0xFF0
 26360                           indf0	equ	0xFEF
 26361                           postinc0	equ	0xFEE
 26362                           fsr0h	equ	0xFEA
 26363                           fsr0l	equ	0xFE9
 26364                           wreg	equ	0xFE8
 26365                           indf1	equ	0xFE7
 26366                           postdec1	equ	0xFE5
 26367                           plusw1	equ	0xFE3
 26368                           fsr1h	equ	0xFE2
 26369                           fsr1l	equ	0xFE1
 26370                           indf2	equ	0xFDF
 26371                           postinc2	equ	0xFDE
 26372                           postdec2	equ	0xFDD
 26373                           plusw2	equ	0xFDB
 26374                           fsr2h	equ	0xFDA
 26375                           fsr2l	equ	0xFD9
 26376                           status	equ	0xFD8
 26377                           
 26378 ;; *************** function _ui_get_status *****************
 26379 ;; Defined at:
 26380 ;;		line 115 in file "ui.c"
 26381 ;; Parameters:    Size  Location     Type
 26382 ;;		None
 26383 ;; Auto vars:     Size  Location     Type
 26384 ;;		None
 26385 ;; Return value:  Size  Location     Type
 26386 ;;                  1    wreg      enum E7922
 26387 ;; Registers used:
 26388 ;;		wreg, status,2
 26389 ;; Tracked objects:
 26390 ;;		On entry : 0/0
 26391 ;;		On exit  : 0/0
 26392 ;;		Unchanged: 0/0
 26393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26398 ;;Total ram usage:        0 bytes
 26399 ;; Hardware stack levels used:    1
 26400 ;; This function calls:
 26401 ;;		Nothing
 26402 ;; This function is called by:
 26403 ;;		_main
 26404 ;;		_reboot
 26405 ;;		__fill_buffer_get_status
 26406 ;; This function uses a non-reentrant model
 26407 ;;
 26408                           
 26409                           	psect	text131
 26410  007462                     __ptext131:
 26411                           	opt stack 0
 26412  007462                     _ui_get_status:
 26413                           	opt stack 27
 26414                           
 26415                           ;ui.c: 117: return userInterfaceStatus;
 26416                           
 26417                           ;incstack = 0
 26418  007462  0100               	movlb	0	; () banked
 26419  007464  5194               	movf	_userInterfaceStatus& (0+255),w,b
 26420  007466  0012               	return	
 26421  007468                     __end_of_ui_get_status:
 26422                           	opt stack 0
 26423                           tosu	equ	0xFFF
 26424                           tosh	equ	0xFFE
 26425                           tosl	equ	0xFFD
 26426                           pclath	equ	0xFFA
 26427                           tblptru	equ	0xFF8
 26428                           tblptrh	equ	0xFF7
 26429                           tblptrl	equ	0xFF6
 26430                           tablat	equ	0xFF5
 26431                           prodh	equ	0xFF4
 26432                           prodl	equ	0xFF3
 26433                           intcon	equ	0xFF2
 26434                           intcon3	equ	0xFF0
 26435                           indf0	equ	0xFEF
 26436                           postinc0	equ	0xFEE
 26437                           fsr0h	equ	0xFEA
 26438                           fsr0l	equ	0xFE9
 26439                           wreg	equ	0xFE8
 26440                           indf1	equ	0xFE7
 26441                           postdec1	equ	0xFE5
 26442                           plusw1	equ	0xFE3
 26443                           fsr1h	equ	0xFE2
 26444                           fsr1l	equ	0xFE1
 26445                           indf2	equ	0xFDF
 26446                           postinc2	equ	0xFDE
 26447                           postdec2	equ	0xFDD
 26448                           plusw2	equ	0xFDB
 26449                           fsr2h	equ	0xFDA
 26450                           fsr2l	equ	0xFD9
 26451                           status	equ	0xFD8
 26452                           
 26453 ;; *************** function _display_update *****************
 26454 ;; Defined at:
 26455 ;;		line 687 in file "display.c"
 26456 ;; Parameters:    Size  Location     Type
 26457 ;;		None
 26458 ;; Auto vars:     Size  Location     Type
 26459 ;;		None
 26460 ;; Return value:  Size  Location     Type
 26461 ;;                  1    wreg      void 
 26462 ;; Registers used:
 26463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26464 ;; Tracked objects:
 26465 ;;		On entry : 0/0
 26466 ;;		On exit  : 0/0
 26467 ;;		Unchanged: 0/0
 26468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26473 ;;Total ram usage:        0 bytes
 26474 ;; Hardware stack levels used:    1
 26475 ;; Hardware stack levels required when called:    4
 26476 ;; This function calls:
 26477 ;;		_i2c_display_cursor
 26478 ;;		_i2c_display_write_fixed
 26479 ;; This function is called by:
 26480 ;;		_main
 26481 ;;		_reboot
 26482 ;; This function uses a non-reentrant model
 26483 ;;
 26484                           
 26485                           	psect	text132
 26486  00613C                     __ptext132:
 26487                           	opt stack 0
 26488  00613C                     _display_update:
 26489                           	opt stack 23
 26490                           
 26491                           ;display.c: 689: i2c_display_cursor(0, 0);
 26492                           
 26493                           ; BSR set to: 0
 26494                           ;incstack = 0
 26495  00613C  0E00               	movlw	0
 26496  00613E  6E0E               	movwf	i2c_display_cursor@position,c
 26497  006140  0E00               	movlw	0
 26498  006142  ECF6  F038         	call	_i2c_display_cursor
 26499                           
 26500                           ;display.c: 690: i2c_display_write_fixed(&display_content[0][0], 20);
 26501  006146  0E7B               	movlw	low _display_content
 26502  006148  6E06               	movwf	i2c_display_write_fixed@data,c
 26503  00614A  0E01               	movlw	high _display_content
 26504  00614C  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26505  00614E  0E14               	movlw	20
 26506  006150  6E08               	movwf	i2c_display_write_fixed@length,c
 26507  006152  EC90  F034         	call	_i2c_display_write_fixed	;wreg free
 26508                           
 26509                           ;display.c: 691: i2c_display_cursor(1, 0);
 26510  006156  0E00               	movlw	0
 26511  006158  6E0E               	movwf	i2c_display_cursor@position,c
 26512  00615A  0E01               	movlw	1
 26513  00615C  ECF6  F038         	call	_i2c_display_cursor
 26514                           
 26515                           ;display.c: 692: i2c_display_write_fixed(&display_content[1][0], 20);
 26516  006160  0E8F               	movlw	low (_display_content+20)
 26517  006162  6E06               	movwf	i2c_display_write_fixed@data,c
 26518  006164  0E01               	movlw	high (_display_content+20)
 26519  006166  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26520  006168  0E14               	movlw	20
 26521  00616A  6E08               	movwf	i2c_display_write_fixed@length,c
 26522  00616C  EC90  F034         	call	_i2c_display_write_fixed	;wreg free
 26523                           
 26524                           ;display.c: 693: i2c_display_cursor(2, 0);
 26525  006170  0E00               	movlw	0
 26526  006172  6E0E               	movwf	i2c_display_cursor@position,c
 26527  006174  0E02               	movlw	2
 26528  006176  ECF6  F038         	call	_i2c_display_cursor
 26529                           
 26530                           ;display.c: 694: i2c_display_write_fixed(&display_content[2][0], 20);
 26531  00617A  0EA3               	movlw	low (_display_content+40)
 26532  00617C  6E06               	movwf	i2c_display_write_fixed@data,c
 26533  00617E  0E01               	movlw	high (_display_content+40)
 26534  006180  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26535  006182  0E14               	movlw	20
 26536  006184  6E08               	movwf	i2c_display_write_fixed@length,c
 26537  006186  EC90  F034         	call	_i2c_display_write_fixed	;wreg free
 26538                           
 26539                           ;display.c: 695: i2c_display_cursor(3, 0);
 26540  00618A  0E00               	movlw	0
 26541  00618C  6E0E               	movwf	i2c_display_cursor@position,c
 26542  00618E  0E03               	movlw	3
 26543  006190  ECF6  F038         	call	_i2c_display_cursor
 26544                           
 26545                           ;display.c: 696: i2c_display_write_fixed(&display_content[3][0], 20);
 26546  006194  0EB7               	movlw	low (_display_content+60)
 26547  006196  6E06               	movwf	i2c_display_write_fixed@data,c
 26548  006198  0E01               	movlw	high (_display_content+60)
 26549  00619A  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26550  00619C  0E14               	movlw	20
 26551  00619E  6E08               	movwf	i2c_display_write_fixed@length,c
 26552  0061A0  EC90  F034         	call	_i2c_display_write_fixed	;wreg free
 26553  0061A4  0012               	return		;funcret
 26554  0061A6                     __end_of_display_update:
 26555                           	opt stack 0
 26556                           tosu	equ	0xFFF
 26557                           tosh	equ	0xFFE
 26558                           tosl	equ	0xFFD
 26559                           pclath	equ	0xFFA
 26560                           tblptru	equ	0xFF8
 26561                           tblptrh	equ	0xFF7
 26562                           tblptrl	equ	0xFF6
 26563                           tablat	equ	0xFF5
 26564                           prodh	equ	0xFF4
 26565                           prodl	equ	0xFF3
 26566                           intcon	equ	0xFF2
 26567                           intcon3	equ	0xFF0
 26568                           indf0	equ	0xFEF
 26569                           postinc0	equ	0xFEE
 26570                           fsr0h	equ	0xFEA
 26571                           fsr0l	equ	0xFE9
 26572                           wreg	equ	0xFE8
 26573                           indf1	equ	0xFE7
 26574                           postdec1	equ	0xFE5
 26575                           plusw1	equ	0xFE3
 26576                           fsr1h	equ	0xFE2
 26577                           fsr1l	equ	0xFE1
 26578                           indf2	equ	0xFDF
 26579                           postinc2	equ	0xFDE
 26580                           postdec2	equ	0xFDD
 26581                           plusw2	equ	0xFDB
 26582                           fsr2h	equ	0xFDA
 26583                           fsr2l	equ	0xFD9
 26584                           status	equ	0xFD8
 26585                           
 26586 ;; *************** function _i2c_display_write_fixed *****************
 26587 ;; Defined at:
 26588 ;;		line 395 in file "i2c.c"
 26589 ;; Parameters:    Size  Location     Type
 26590 ;;  data            2    5[COMRAM] PTR unsigned char 
 26591 ;;		 -> display_content(80), 
 26592 ;;  length          1    7[COMRAM] unsigned char 
 26593 ;; Auto vars:     Size  Location     Type
 26594 ;;  pos             1    8[COMRAM] unsigned char 
 26595 ;; Return value:  Size  Location     Type
 26596 ;;                  1    wreg      void 
 26597 ;; Registers used:
 26598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26599 ;; Tracked objects:
 26600 ;;		On entry : 0/0
 26601 ;;		On exit  : 0/0
 26602 ;;		Unchanged: 0/0
 26603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26604 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26608 ;;Total ram usage:        4 bytes
 26609 ;; Hardware stack levels used:    1
 26610 ;; Hardware stack levels required when called:    1
 26611 ;; This function calls:
 26612 ;;		__i2c_send
 26613 ;;		__i2c_start
 26614 ;;		__i2c_stop
 26615 ;;		__i2c_wait_idle
 26616 ;; This function is called by:
 26617 ;;		_display_update
 26618 ;; This function uses a non-reentrant model
 26619 ;;
 26620                           
 26621                           	psect	text133
 26622  006920                     __ptext133:
 26623                           	opt stack 0
 26624  006920                     _i2c_display_write_fixed:
 26625                           	opt stack 25
 26626                           
 26627                           ;i2c.c: 397: uint8_t pos;;i2c.c: 402: _i2c_wait_idle();
 26628                           
 26629                           ;incstack = 0
 26630  006920  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 26631                           
 26632                           ;i2c.c: 403: _i2c_start();
 26633  006924  EC1D  F03A         	call	__i2c_start	;wreg free
 26634                           
 26635                           ;i2c.c: 404: _i2c_wait_idle();
 26636  006928  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 26637                           
 26638                           ;i2c.c: 405: _i2c_send(0b01111000);
 26639  00692C  0E78               	movlw	120
 26640  00692E  EC21  F03A         	call	__i2c_send
 26641                           
 26642                           ;i2c.c: 406: _i2c_wait_idle();
 26643  006932  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 26644                           
 26645                           ;i2c.c: 407: _i2c_send(0b01000000);
 26646  006936  0E40               	movlw	64
 26647  006938  EC21  F03A         	call	__i2c_send
 26648                           
 26649                           ;i2c.c: 408: _i2c_wait_idle();
 26650  00693C  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 26651                           
 26652                           ;i2c.c: 411: for(pos=0; pos<length; ++pos)
 26653  006940  0E00               	movlw	0
 26654  006942  6E09               	movwf	i2c_display_write_fixed@pos,c
 26655  006944  D00E               	goto	l1224
 26656  006946                     
 26657                           ;i2c.c: 412: {;i2c.c: 413: _i2c_send(data[pos]);
 26658  006946  5009               	movf	i2c_display_write_fixed@pos,w,c
 26659  006948  0D01               	mullw	1
 26660  00694A  50F3               	movf	prodl,w,c
 26661  00694C  2406               	addwf	i2c_display_write_fixed@data,w,c
 26662  00694E  6ED9               	movwf	fsr2l,c
 26663  006950  50F4               	movf	prodh,w,c
 26664  006952  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26665  006954  6EDA               	movwf	fsr2h,c
 26666  006956  50DF               	movf	indf2,w,c
 26667  006958  EC21  F03A         	call	__i2c_send
 26668                           
 26669                           ;i2c.c: 414: _i2c_wait_idle();
 26670  00695C  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 26671  006960  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26672  006962                     l1224:
 26673  006962  5008               	movf	i2c_display_write_fixed@length,w,c
 26674  006964  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26675  006966  A0D8               	btfss	status,0,c
 26676  006968  D7EE               	goto	l1225
 26677                           
 26678                           ;i2c.c: 415: };i2c.c: 417: _i2c_stop();
 26679  00696A  EC19  F03A         	call	__i2c_stop	;wreg free
 26680  00696E  0012               	return		;funcret
 26681  006970                     __end_of_i2c_display_write_fixed:
 26682                           	opt stack 0
 26683                           tosu	equ	0xFFF
 26684                           tosh	equ	0xFFE
 26685                           tosl	equ	0xFFD
 26686                           pclath	equ	0xFFA
 26687                           tblptru	equ	0xFF8
 26688                           tblptrh	equ	0xFF7
 26689                           tblptrl	equ	0xFF6
 26690                           tablat	equ	0xFF5
 26691                           prodh	equ	0xFF4
 26692                           prodl	equ	0xFF3
 26693                           intcon	equ	0xFF2
 26694                           intcon3	equ	0xFF0
 26695                           indf0	equ	0xFEF
 26696                           postinc0	equ	0xFEE
 26697                           fsr0h	equ	0xFEA
 26698                           fsr0l	equ	0xFE9
 26699                           wreg	equ	0xFE8
 26700                           indf1	equ	0xFE7
 26701                           postdec1	equ	0xFE5
 26702                           plusw1	equ	0xFE3
 26703                           fsr1h	equ	0xFE2
 26704                           fsr1l	equ	0xFE1
 26705                           indf2	equ	0xFDF
 26706                           postinc2	equ	0xFDE
 26707                           postdec2	equ	0xFDD
 26708                           plusw2	equ	0xFDB
 26709                           fsr2h	equ	0xFDA
 26710                           fsr2l	equ	0xFD9
 26711                           status	equ	0xFD8
 26712                           
 26713 ;; *************** function _i2c_display_cursor *****************
 26714 ;; Defined at:
 26715 ;;		line 355 in file "i2c.c"
 26716 ;; Parameters:    Size  Location     Type
 26717 ;;  line            1    wreg     unsigned char 
 26718 ;;  position        1   13[COMRAM] unsigned char 
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;  line            1   14[COMRAM] unsigned char 
 26721 ;;  address         1   15[COMRAM] unsigned char 
 26722 ;; Return value:  Size  Location     Type
 26723 ;;                  1    wreg      void 
 26724 ;; Registers used:
 26725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26726 ;; Tracked objects:
 26727 ;;		On entry : 0/0
 26728 ;;		On exit  : 0/0
 26729 ;;		Unchanged: 0/0
 26730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26731 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26734 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26735 ;;Total ram usage:        3 bytes
 26736 ;; Hardware stack levels used:    1
 26737 ;; Hardware stack levels required when called:    3
 26738 ;; This function calls:
 26739 ;;		__ic2_display_set_ddram_address
 26740 ;; This function is called by:
 26741 ;;		_display_update
 26742 ;; This function uses a non-reentrant model
 26743 ;;
 26744                           
 26745                           	psect	text134
 26746  0071EC                     __ptext134:
 26747                           	opt stack 0
 26748  0071EC                     _i2c_display_cursor:
 26749                           	opt stack 23
 26750                           
 26751                           ;incstack = 0
 26752                           ;i2c_display_cursor@line stored from wreg
 26753  0071EC  6E0F               	movwf	i2c_display_cursor@line,c
 26754                           
 26755                           ;i2c.c: 357: uint8_t address;;i2c.c: 360: line &= 0b11;
 26756  0071EE  0E03               	movlw	3
 26757  0071F0  160F               	andwf	i2c_display_cursor@line,f,c
 26758                           
 26759                           ;i2c.c: 361: address = line<<5;
 26760  0071F2  380F               	swapf	i2c_display_cursor@line,w,c
 26761  0071F4  46E8               	rlncf	wreg,f,c
 26762  0071F6  0BE0               	andlw	224
 26763  0071F8  6E10               	movwf	i2c_display_cursor@address,c
 26764                           
 26765                           ;i2c.c: 362: position &= 0b11111;
 26766  0071FA  0E1F               	movlw	31
 26767  0071FC  160E               	andwf	i2c_display_cursor@position,f,c
 26768                           
 26769                           ;i2c.c: 363: address |= position;
 26770  0071FE  500E               	movf	i2c_display_cursor@position,w,c
 26771  007200  1210               	iorwf	i2c_display_cursor@address,f,c
 26772                           
 26773                           ;i2c.c: 369: _ic2_display_set_ddram_address(address);
 26774  007202  5010               	movf	i2c_display_cursor@address,w,c
 26775  007204  ECE6  F038         	call	__ic2_display_set_ddram_address
 26776  007208  0012               	return		;funcret
 26777  00720A                     __end_of_i2c_display_cursor:
 26778                           	opt stack 0
 26779                           tosu	equ	0xFFF
 26780                           tosh	equ	0xFFE
 26781                           tosl	equ	0xFFD
 26782                           pclath	equ	0xFFA
 26783                           tblptru	equ	0xFF8
 26784                           tblptrh	equ	0xFF7
 26785                           tblptrl	equ	0xFF6
 26786                           tablat	equ	0xFF5
 26787                           prodh	equ	0xFF4
 26788                           prodl	equ	0xFF3
 26789                           intcon	equ	0xFF2
 26790                           intcon3	equ	0xFF0
 26791                           indf0	equ	0xFEF
 26792                           postinc0	equ	0xFEE
 26793                           fsr0h	equ	0xFEA
 26794                           fsr0l	equ	0xFE9
 26795                           wreg	equ	0xFE8
 26796                           indf1	equ	0xFE7
 26797                           postdec1	equ	0xFE5
 26798                           plusw1	equ	0xFE3
 26799                           fsr1h	equ	0xFE2
 26800                           fsr1l	equ	0xFE1
 26801                           indf2	equ	0xFDF
 26802                           postinc2	equ	0xFDE
 26803                           postdec2	equ	0xFDD
 26804                           plusw2	equ	0xFDB
 26805                           fsr2h	equ	0xFDA
 26806                           fsr2l	equ	0xFD9
 26807                           status	equ	0xFD8
 26808                           
 26809 ;; *************** function __ic2_display_set_ddram_address *****************
 26810 ;; Defined at:
 26811 ;;		line 326 in file "i2c.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;  address         1    wreg     unsigned char 
 26814 ;; Auto vars:     Size  Location     Type
 26815 ;;  address         1   10[COMRAM] unsigned char 
 26816 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26817 ;; Return value:  Size  Location     Type
 26818 ;;                  1    wreg      void 
 26819 ;; Registers used:
 26820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26821 ;; Tracked objects:
 26822 ;;		On entry : 0/0
 26823 ;;		On exit  : 0/0
 26824 ;;		Unchanged: 0/0
 26825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26829 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26830 ;;Total ram usage:        3 bytes
 26831 ;; Hardware stack levels used:    1
 26832 ;; Hardware stack levels required when called:    2
 26833 ;; This function calls:
 26834 ;;		__i2c_write
 26835 ;; This function is called by:
 26836 ;;		_i2c_display_cursor
 26837 ;; This function uses a non-reentrant model
 26838 ;;
 26839                           
 26840                           	psect	text135
 26841  0071CC                     __ptext135:
 26842                           	opt stack 0
 26843  0071CC                     __ic2_display_set_ddram_address:
 26844                           	opt stack 23
 26845                           
 26846                           ;incstack = 0
 26847                           ;__ic2_display_set_ddram_address@address stored from wreg
 26848  0071CC  6E0B               	movwf	__ic2_display_set_ddram_address@address,c
 26849                           
 26850                           ;i2c.c: 328: uint8_t data_array[2];;i2c.c: 329: data_array[0] = 0b00000000;
 26851  0071CE  0E00               	movlw	0
 26852  0071D0  6E0C               	movwf	__ic2_display_set_ddram_address@data_array,c
 26853                           
 26854                           ;i2c.c: 330: data_array[1] = 0b10000000 | address;
 26855  0071D2  500B               	movf	__ic2_display_set_ddram_address@address,w,c
 26856  0071D4  0980               	iorlw	128
 26857  0071D6  6E0D               	movwf	__ic2_display_set_ddram_address@data_array+1,c
 26858                           
 26859                           ;i2c.c: 336: _i2c_write(0b01111000, &data_array[0], 2);
 26860  0071D8  0E0C               	movlw	low __ic2_display_set_ddram_address@data_array
 26861  0071DA  6E06               	movwf	__i2c_write@data,c
 26862  0071DC  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 26863  0071DE  6E07               	movwf	__i2c_write@data+1,c
 26864  0071E0  0E02               	movlw	2
 26865  0071E2  6E08               	movwf	__i2c_write@length,c
 26866  0071E4  0E78               	movlw	120
 26867  0071E6  EC73  F035         	call	__i2c_write
 26868  0071EA  0012               	return		;funcret
 26869  0071EC                     __end_of__ic2_display_set_ddram_address:
 26870                           	opt stack 0
 26871                           tosu	equ	0xFFF
 26872                           tosh	equ	0xFFE
 26873                           tosl	equ	0xFFD
 26874                           pclath	equ	0xFFA
 26875                           tblptru	equ	0xFF8
 26876                           tblptrh	equ	0xFF7
 26877                           tblptrl	equ	0xFF6
 26878                           tablat	equ	0xFF5
 26879                           prodh	equ	0xFF4
 26880                           prodl	equ	0xFF3
 26881                           intcon	equ	0xFF2
 26882                           intcon3	equ	0xFF0
 26883                           indf0	equ	0xFEF
 26884                           postinc0	equ	0xFEE
 26885                           fsr0h	equ	0xFEA
 26886                           fsr0l	equ	0xFE9
 26887                           wreg	equ	0xFE8
 26888                           indf1	equ	0xFE7
 26889                           postdec1	equ	0xFE5
 26890                           plusw1	equ	0xFE3
 26891                           fsr1h	equ	0xFE2
 26892                           fsr1l	equ	0xFE1
 26893                           indf2	equ	0xFDF
 26894                           postinc2	equ	0xFDE
 26895                           postdec2	equ	0xFDD
 26896                           plusw2	equ	0xFDB
 26897                           fsr2h	equ	0xFDA
 26898                           fsr2l	equ	0xFD9
 26899                           status	equ	0xFD8
 26900                           
 26901 ;; *************** function _display_prepare *****************
 26902 ;; Defined at:
 26903 ;;		line 377 in file "display.c"
 26904 ;; Parameters:    Size  Location     Type
 26905 ;;  mode            1    wreg     unsigned char 
 26906 ;; Auto vars:     Size  Location     Type
 26907 ;;  mode            1   34[COMRAM] unsigned char 
 26908 ;; Return value:  Size  Location     Type
 26909 ;;                  1    wreg      void 
 26910 ;; Registers used:
 26911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26912 ;; Tracked objects:
 26913 ;;		On entry : 0/0
 26914 ;;		On exit  : 0/0
 26915 ;;		Unchanged: 0/0
 26916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26921 ;;Total ram usage:        3 bytes
 26922 ;; Hardware stack levels used:    1
 26923 ;; Hardware stack levels required when called:    5
 26924 ;; This function calls:
 26925 ;;		__display_checked
 26926 ;;		__display_clear
 26927 ;;		__display_done
 26928 ;;		__display_failed
 26929 ;;		__display_found
 26930 ;;		__display_programming
 26931 ;;		__display_rebooting
 26932 ;;		__display_search
 26933 ;;		__display_start
 26934 ;;		__display_suspended
 26935 ;;		__display_verify
 26936 ;; This function is called by:
 26937 ;;		_main
 26938 ;;		_reboot
 26939 ;; This function uses a non-reentrant model
 26940 ;;
 26941                           
 26942                           	psect	text136
 26943  004864                     __ptext136:
 26944                           	opt stack 0
 26945  004864                     _display_prepare:
 26946                           	opt stack 22
 26947                           
 26948                           ;incstack = 0
 26949                           ;display_prepare@mode stored from wreg
 26950  004864  6E23               	movwf	display_prepare@mode,c
 26951                           
 26952                           ;display.c: 379: _display_clear();
 26953  004866  EC4F  F035         	call	__display_clear	;wreg free
 26954                           
 26955                           ;display.c: 381: switch(mode&0xF0)
 26956  00486A  D01E               	goto	l1565
 26957  00486C                     
 26958                           ;display.c: 384: _display_start();
 26959  00486C  ECF6  F012         	call	__display_start	;wreg free
 26960                           
 26961                           ;display.c: 385: break;
 26962  004870  D04D               	goto	l1577
 26963  004872                     
 26964                           ;display.c: 388: _display_search();
 26965  004872  ECD4  F019         	call	__display_search	;wreg free
 26966                           
 26967                           ;display.c: 389: break;
 26968  004876  D04A               	goto	l1577
 26969  004878                     
 26970                           ;display.c: 392: _display_found();
 26971  004878  EC15  F011         	call	__display_found	;wreg free
 26972                           
 26973                           ;display.c: 393: break;
 26974  00487C  D047               	goto	l1577
 26975  00487E                     
 26976                           ;display.c: 396: _display_verify();
 26977  00487E  ECC1  F01B         	call	__display_verify	;wreg free
 26978                           
 26979                           ;display.c: 397: break;
 26980  004882  D044               	goto	l1577
 26981  004884                     
 26982                           ;display.c: 400: _display_checked();
 26983  004884  EC4F  F016         	call	__display_checked	;wreg free
 26984                           
 26985                           ;display.c: 401: break;
 26986  004888  D041               	goto	l1577
 26987  00488A                     
 26988                           ;display.c: 404: _display_failed();
 26989  00488A  EC96  F007         	call	__display_failed	;wreg free
 26990                           
 26991                           ;display.c: 405: break;
 26992  00488E  D03E               	goto	l1577
 26993  004890                     
 26994                           ;display.c: 408: _display_programming();
 26995  004890  ECE2  F013         	call	__display_programming	;wreg free
 26996                           
 26997                           ;display.c: 409: break;
 26998  004894  D03B               	goto	l1577
 26999  004896                     
 27000                           ;display.c: 412: _display_done();
 27001  004896  ECC6  F017         	call	__display_done	;wreg free
 27002                           
 27003                           ;display.c: 413: break;
 27004  00489A  D038               	goto	l1577
 27005  00489C                     
 27006                           ;display.c: 416: _display_rebooting();
 27007  00489C  EC68  F033         	call	__display_rebooting	;wreg free
 27008                           
 27009                           ;display.c: 417: break;
 27010  0048A0  D035               	goto	l1577
 27011  0048A2                     
 27012                           ;display.c: 420: _display_suspended();
 27013  0048A2  EC2B  F019         	call	__display_suspended	;wreg free
 27014                           
 27015                           ;display.c: 422: }
 27016                           
 27017                           ;display.c: 421: break;
 27018  0048A6  D032               	goto	l1577
 27019  0048A8                     l1565:
 27020  0048A8  5023               	movf	display_prepare@mode,w,c
 27021  0048AA  0BF0               	andlw	240
 27022  0048AC  6E21               	movwf	??_display_prepare& (0+255),c
 27023  0048AE  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27024                           
 27025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27026                           ; Switch size 1, requested type "space"
 27027                           ; Number of cases is 1, Range of values is 0 to 0
 27028                           ; switch strategies available:
 27029                           ; Name         Instructions Cycles
 27030                           ; simple_byte            4     3 (average)
 27031                           ;	Chosen strategy is simple_byte
 27032  0048B0  5022               	movf	??_display_prepare+1,w,c
 27033  0048B2  0A00               	xorlw	0	; case 0
 27034  0048B4  A4D8               	btfss	status,2,c
 27035  0048B6  D02A               	goto	l1577
 27036                           
 27037                           ; Switch size 1, requested type "space"
 27038                           ; Number of cases is 10, Range of values is 0 to 144
 27039                           ; switch strategies available:
 27040                           ; Name         Instructions Cycles
 27041                           ; simple_byte           31    16 (average)
 27042                           ;	Chosen strategy is simple_byte
 27043  0048B8  5021               	movf	??_display_prepare,w,c
 27044  0048BA  0A00               	xorlw	0	; case 0
 27045  0048BC  B4D8               	btfsc	status,2,c
 27046  0048BE  D7D6               	goto	l1566
 27047  0048C0  0A10               	xorlw	16	; case 16
 27048  0048C2  B4D8               	btfsc	status,2,c
 27049  0048C4  D7D6               	goto	l1568
 27050  0048C6  0A30               	xorlw	48	; case 32
 27051  0048C8  B4D8               	btfsc	status,2,c
 27052  0048CA  D7D6               	goto	l1569
 27053  0048CC  0A10               	xorlw	16	; case 48
 27054  0048CE  B4D8               	btfsc	status,2,c
 27055  0048D0  D7D6               	goto	l1570
 27056  0048D2  0A70               	xorlw	112	; case 64
 27057  0048D4  B4D8               	btfsc	status,2,c
 27058  0048D6  D7D6               	goto	l1571
 27059  0048D8  0A10               	xorlw	16	; case 80
 27060  0048DA  B4D8               	btfsc	status,2,c
 27061  0048DC  D7D6               	goto	l1572
 27062  0048DE  0A30               	xorlw	48	; case 96
 27063  0048E0  B4D8               	btfsc	status,2,c
 27064  0048E2  D7D6               	goto	l1573
 27065  0048E4  0A10               	xorlw	16	; case 112
 27066  0048E6  B4D8               	btfsc	status,2,c
 27067  0048E8  D7D6               	goto	l1574
 27068  0048EA  0AF0               	xorlw	240	; case 128
 27069  0048EC  B4D8               	btfsc	status,2,c
 27070  0048EE  D7D6               	goto	l1575
 27071  0048F0  0A10               	xorlw	16	; case 144
 27072  0048F2  B4D8               	btfsc	status,2,c
 27073  0048F4  D7D6               	goto	l1576
 27074                           
 27075                           ;display.c: 425: switch((os.timeSlot>>5)&0b11)
 27076  0048F6  D00A               	goto	l1577
 27077  0048F8                     
 27078                           ;display.c: 432: display_content[0][18] = '.';
 27079  0048F8  0E2E               	movlw	46
 27080  0048FA  0101               	movlb	1	; () banked
 27081  0048FC  6F8D               	movwf	(_display_content+18)& (0+255),b
 27082  0048FE                     l1579:
 27083                           
 27084                           ;display.c: 440: display_content[0][17] = '.';
 27085  0048FE  0E2E               	movlw	46
 27086  004900  0101               	movlb	1	; () banked
 27087  004902  6F8C               	movwf	(_display_content+17)& (0+255),b
 27088  004904                     l1580:
 27089                           
 27090                           ;display.c: 448: display_content[0][16] = '.';
 27091  004904  0E2E               	movlw	46
 27092  004906  0101               	movlb	1	; () banked
 27093  004908  6F8B               	movwf	(_display_content+16)& (0+255),b
 27094                           
 27095                           ;display.c: 451: }
 27096  00490A  D015               	goto	l1581
 27097  00490C                     l1577:
 27098                           
 27099                           ; BSR set to: 1
 27100  00490C  0100               	movlb	0	; () banked
 27101  00490E  3964               	swapf	(_os+4)& (0+255),w,b
 27102  004910  42E8               	rrncf	wreg,f,c
 27103  004912  0B07               	andlw	7
 27104  004914  0B03               	andlw	3
 27105  004916  6E21               	movwf	??_display_prepare& (0+255),c
 27106  004918  6A22               	clrf	(??_display_prepare+1)& (0+255),c
 27107                           
 27108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27109                           ; Switch size 1, requested type "space"
 27110                           ; Number of cases is 1, Range of values is 0 to 0
 27111                           ; switch strategies available:
 27112                           ; Name         Instructions Cycles
 27113                           ; simple_byte            4     3 (average)
 27114                           ;	Chosen strategy is simple_byte
 27115  00491A  5022               	movf	??_display_prepare+1,w,c
 27116  00491C  0A00               	xorlw	0	; case 0
 27117  00491E  A4D8               	btfss	status,2,c
 27118  004920  D00A               	goto	l1581
 27119                           
 27120                           ; BSR set to: 0
 27121                           ; Switch size 1, requested type "space"
 27122                           ; Number of cases is 3, Range of values is 1 to 3
 27123                           ; switch strategies available:
 27124                           ; Name         Instructions Cycles
 27125                           ; simple_byte           10     6 (average)
 27126                           ;	Chosen strategy is simple_byte
 27127  004922  5021               	movf	??_display_prepare,w,c
 27128  004924  0A01               	xorlw	1	; case 1
 27129  004926  B4D8               	btfsc	status,2,c
 27130  004928  D7ED               	goto	l1580
 27131  00492A  0A03               	xorlw	3	; case 2
 27132  00492C  B4D8               	btfsc	status,2,c
 27133  00492E  D7E7               	goto	l1579
 27134  004930  0A01               	xorlw	1	; case 3
 27135  004932  B4D8               	btfsc	status,2,c
 27136  004934  D7E1               	goto	l1578
 27137  004936                     l1581:
 27138                           
 27139                           ;display.c: 455: if(INTCONbits.GIE)
 27140  004936  AEF2               	btfss	intcon,7,c	;volatile
 27141  004938  0012               	return	
 27142                           
 27143                           ;display.c: 456: {;display.c: 457: display_content[0][18] = 'I';
 27144  00493A  0E49               	movlw	73
 27145  00493C  0101               	movlb	1	; () banked
 27146  00493E  6F8D               	movwf	(_display_content+18)& (0+255),b
 27147  004940  0012               	return	
 27148  004942                     __end_of_display_prepare:
 27149                           	opt stack 0
 27150                           tosu	equ	0xFFF
 27151                           tosh	equ	0xFFE
 27152                           tosl	equ	0xFFD
 27153                           pclath	equ	0xFFA
 27154                           tblptru	equ	0xFF8
 27155                           tblptrh	equ	0xFF7
 27156                           tblptrl	equ	0xFF6
 27157                           tablat	equ	0xFF5
 27158                           prodh	equ	0xFF4
 27159                           prodl	equ	0xFF3
 27160                           intcon	equ	0xFF2
 27161                           intcon3	equ	0xFF0
 27162                           indf0	equ	0xFEF
 27163                           postinc0	equ	0xFEE
 27164                           fsr0h	equ	0xFEA
 27165                           fsr0l	equ	0xFE9
 27166                           wreg	equ	0xFE8
 27167                           indf1	equ	0xFE7
 27168                           postdec1	equ	0xFE5
 27169                           plusw1	equ	0xFE3
 27170                           fsr1h	equ	0xFE2
 27171                           fsr1l	equ	0xFE1
 27172                           indf2	equ	0xFDF
 27173                           postinc2	equ	0xFDE
 27174                           postdec2	equ	0xFDD
 27175                           plusw2	equ	0xFDB
 27176                           fsr2h	equ	0xFDA
 27177                           fsr2l	equ	0xFD9
 27178                           status	equ	0xFD8
 27179                           
 27180 ;; *************** function __display_verify *****************
 27181 ;; Defined at:
 27182 ;;		line 527 in file "display.c"
 27183 ;; Parameters:    Size  Location     Type
 27184 ;;		None
 27185 ;; Auto vars:     Size  Location     Type
 27186 ;;  cntr            1   30[COMRAM] unsigned char 
 27187 ;;  start           1    0        unsigned char 
 27188 ;; Return value:  Size  Location     Type
 27189 ;;                  1    wreg      void 
 27190 ;; Registers used:
 27191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27192 ;; Tracked objects:
 27193 ;;		On entry : 0/0
 27194 ;;		On exit  : 0/0
 27195 ;;		Unchanged: 0/0
 27196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27201 ;;Total ram usage:        3 bytes
 27202 ;; Hardware stack levels used:    1
 27203 ;; Hardware stack levels required when called:    4
 27204 ;; This function calls:
 27205 ;;		__display_itoa_u16
 27206 ;;		_bootloader_get_entries
 27207 ;; This function is called by:
 27208 ;;		_display_prepare
 27209 ;; This function uses a non-reentrant model
 27210 ;;
 27211                           
 27212                           	psect	text137
 27213  003782                     __ptext137:
 27214                           	opt stack 0
 27215  003782                     __display_verify:
 27216                           	opt stack 22
 27217                           
 27218                           ;display.c: 529: uint8_t cntr;;display.c: 530: uint8_t start;;display.c: 531: cntr = 0;
 27219                           
 27220                           ;incstack = 0
 27221  003782  0E00               	movlw	0
 27222  003784  6E1F               	movwf	__display_verify@cntr,c
 27223                           
 27224                           ;display.c: 532: while(verify_line1[cntr])
 27225  003786  D017               	goto	l1634
 27226  003788                     
 27227                           ;display.c: 533: display_content[0][cntr] = verify_line1[cntr++];
 27228  003788  501F               	movf	__display_verify@cntr,w,c
 27229  00378A  0D01               	mullw	1
 27230  00378C  0E52               	movlw	low _verify_line1
 27231  00378E  24F3               	addwf	prodl,w,c
 27232  003790  6EF6               	movwf	tblptrl,c
 27233  003792  0E8D               	movlw	high _verify_line1
 27234  003794  20F4               	addwfc	prodh,w,c
 27235  003796  6EF7               	movwf	tblptrh,c
 27236  003798                     	if	1	;There are 3 active tblptr bytes
 27237  003798  6AF8               	clrf	tblptru,c
 27238  00379A  0E00               	movlw	low (__mediumconst shr (0+16))
 27239  00379C  22F8               	addwfc	tblptru,f,c
 27240  00379E                     	endif
 27241  00379E  501F               	movf	__display_verify@cntr,w,c
 27242  0037A0  0D01               	mullw	1
 27243  0037A2  0E7B               	movlw	low _display_content
 27244  0037A4  24F3               	addwf	prodl,w,c
 27245  0037A6  6ED9               	movwf	fsr2l,c
 27246  0037A8  0E01               	movlw	high _display_content
 27247  0037AA  20F4               	addwfc	prodh,w,c
 27248  0037AC  6EDA               	movwf	fsr2h,c
 27249  0037AE  0008               	tblrd		*
 27250  0037B0  CFF5 FFDF          	movff	tablat,indf2
 27251  0037B4  2A1F               	incf	__display_verify@cntr,f,c
 27252  0037B6                     l1634:
 27253  0037B6  501F               	movf	__display_verify@cntr,w,c
 27254  0037B8  0D01               	mullw	1
 27255  0037BA  0E52               	movlw	low _verify_line1
 27256  0037BC  24F3               	addwf	prodl,w,c
 27257  0037BE  6EF6               	movwf	tblptrl,c
 27258  0037C0  0E8D               	movlw	high _verify_line1
 27259  0037C2  20F4               	addwfc	prodh,w,c
 27260  0037C4  6EF7               	movwf	tblptrh,c
 27261  0037C6                     	if	1	;There are 3 active tblptr bytes
 27262  0037C6  6AF8               	clrf	tblptru,c
 27263  0037C8  0E00               	movlw	low (__mediumconst shr (0+16))
 27264  0037CA  22F8               	addwfc	tblptru,f,c
 27265  0037CC                     	endif
 27266  0037CC  0008               	tblrd		*
 27267  0037CE  50F5               	movf	tablat,w,c
 27268  0037D0  0900               	iorlw	0
 27269  0037D2  A4D8               	btfss	status,2,c
 27270  0037D4  D7D9               	goto	l1635
 27271                           
 27272                           ;display.c: 534: cntr = 0;
 27273  0037D6  0E00               	movlw	0
 27274  0037D8  6E1F               	movwf	__display_verify@cntr,c
 27275                           
 27276                           ;display.c: 535: while(verify_line2[cntr])
 27277  0037DA  D017               	goto	l1637
 27278  0037DC                     
 27279                           ;display.c: 536: display_content[1][cntr] = verify_line2[cntr++];
 27280  0037DC  501F               	movf	__display_verify@cntr,w,c
 27281  0037DE  0D01               	mullw	1
 27282  0037E0  0EE5               	movlw	low _verify_line2
 27283  0037E2  24F3               	addwf	prodl,w,c
 27284  0037E4  6EF6               	movwf	tblptrl,c
 27285  0037E6  0E8D               	movlw	high _verify_line2
 27286  0037E8  20F4               	addwfc	prodh,w,c
 27287  0037EA  6EF7               	movwf	tblptrh,c
 27288  0037EC                     	if	1	;There are 3 active tblptr bytes
 27289  0037EC  6AF8               	clrf	tblptru,c
 27290  0037EE  0E00               	movlw	low (__mediumconst shr (0+16))
 27291  0037F0  22F8               	addwfc	tblptru,f,c
 27292  0037F2                     	endif
 27293  0037F2  501F               	movf	__display_verify@cntr,w,c
 27294  0037F4  0D01               	mullw	1
 27295  0037F6  0E8F               	movlw	low (_display_content+20)
 27296  0037F8  24F3               	addwf	prodl,w,c
 27297  0037FA  6ED9               	movwf	fsr2l,c
 27298  0037FC  0E01               	movlw	high (_display_content+20)
 27299  0037FE  20F4               	addwfc	prodh,w,c
 27300  003800  6EDA               	movwf	fsr2h,c
 27301  003802  0008               	tblrd		*
 27302  003804  CFF5 FFDF          	movff	tablat,indf2
 27303  003808  2A1F               	incf	__display_verify@cntr,f,c
 27304  00380A                     l1637:
 27305  00380A  501F               	movf	__display_verify@cntr,w,c
 27306  00380C  0D01               	mullw	1
 27307  00380E  0EE5               	movlw	low _verify_line2
 27308  003810  24F3               	addwf	prodl,w,c
 27309  003812  6EF6               	movwf	tblptrl,c
 27310  003814  0E8D               	movlw	high _verify_line2
 27311  003816  20F4               	addwfc	prodh,w,c
 27312  003818  6EF7               	movwf	tblptrh,c
 27313  00381A                     	if	1	;There are 3 active tblptr bytes
 27314  00381A  6AF8               	clrf	tblptru,c
 27315  00381C  0E00               	movlw	low (__mediumconst shr (0+16))
 27316  00381E  22F8               	addwfc	tblptru,f,c
 27317  003820                     	endif
 27318  003820  0008               	tblrd		*
 27319  003822  50F5               	movf	tablat,w,c
 27320  003824  0900               	iorlw	0
 27321  003826  A4D8               	btfss	status,2,c
 27322  003828  D7D9               	goto	l1638
 27323                           
 27324                           ;display.c: 537: cntr = 0;
 27325  00382A  0E00               	movlw	0
 27326  00382C  6E1F               	movwf	__display_verify@cntr,c
 27327                           
 27328                           ;display.c: 538: while(verify_line3[cntr])
 27329  00382E  D017               	goto	l1640
 27330  003830                     
 27331                           ;display.c: 539: display_content[2][cntr] = verify_line3[cntr++];
 27332  003830  501F               	movf	__display_verify@cntr,w,c
 27333  003832  0D01               	mullw	1
 27334  003834  0E5D               	movlw	low _verify_line3
 27335  003836  24F3               	addwf	prodl,w,c
 27336  003838  6EF6               	movwf	tblptrl,c
 27337  00383A  0E8E               	movlw	high _verify_line3
 27338  00383C  20F4               	addwfc	prodh,w,c
 27339  00383E  6EF7               	movwf	tblptrh,c
 27340  003840                     	if	1	;There are 3 active tblptr bytes
 27341  003840  6AF8               	clrf	tblptru,c
 27342  003842  0E00               	movlw	low (__mediumconst shr (0+16))
 27343  003844  22F8               	addwfc	tblptru,f,c
 27344  003846                     	endif
 27345  003846  501F               	movf	__display_verify@cntr,w,c
 27346  003848  0D01               	mullw	1
 27347  00384A  0EA3               	movlw	low (_display_content+40)
 27348  00384C  24F3               	addwf	prodl,w,c
 27349  00384E  6ED9               	movwf	fsr2l,c
 27350  003850  0E01               	movlw	high (_display_content+40)
 27351  003852  20F4               	addwfc	prodh,w,c
 27352  003854  6EDA               	movwf	fsr2h,c
 27353  003856  0008               	tblrd		*
 27354  003858  CFF5 FFDF          	movff	tablat,indf2
 27355  00385C  2A1F               	incf	__display_verify@cntr,f,c
 27356  00385E                     l1640:
 27357  00385E  501F               	movf	__display_verify@cntr,w,c
 27358  003860  0D01               	mullw	1
 27359  003862  0E5D               	movlw	low _verify_line3
 27360  003864  24F3               	addwf	prodl,w,c
 27361  003866  6EF6               	movwf	tblptrl,c
 27362  003868  0E8E               	movlw	high _verify_line3
 27363  00386A  20F4               	addwfc	prodh,w,c
 27364  00386C  6EF7               	movwf	tblptrh,c
 27365  00386E                     	if	1	;There are 3 active tblptr bytes
 27366  00386E  6AF8               	clrf	tblptru,c
 27367  003870  0E00               	movlw	low (__mediumconst shr (0+16))
 27368  003872  22F8               	addwfc	tblptru,f,c
 27369  003874                     	endif
 27370  003874  0008               	tblrd		*
 27371  003876  50F5               	movf	tablat,w,c
 27372  003878  0900               	iorlw	0
 27373  00387A  A4D8               	btfss	status,2,c
 27374  00387C  D7D9               	goto	l1641
 27375                           
 27376                           ;display.c: 540: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27377  00387E  EC0A  F03A         	call	_bootloader_get_entries	;wreg free
 27378  003882  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27379  003886  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27380  00388A  501F               	movf	__display_verify@cntr,w,c
 27381  00388C  6E1D               	movwf	??__display_verify& (0+255),c
 27382  00388E  6A1E               	clrf	(??__display_verify+1)& (0+255),c
 27383  003890  0E01               	movlw	1
 27384  003892  261D               	addwf	??__display_verify,f,c
 27385  003894  0E00               	movlw	0
 27386  003896  221E               	addwfc	??__display_verify+1,f,c
 27387  003898  0EA3               	movlw	low (_display_content+40)
 27388  00389A  241D               	addwf	??__display_verify,w,c
 27389  00389C  6E1B               	movwf	__display_itoa_u16@text,c
 27390  00389E  0E01               	movlw	high (_display_content+40)
 27391  0038A0  201E               	addwfc	??__display_verify+1,w,c
 27392  0038A2  6E1C               	movwf	__display_itoa_u16@text+1,c
 27393  0038A4  EC2A  F028         	call	__display_itoa_u16	;wreg free
 27394  0038A8  0012               	return		;funcret
 27395  0038AA                     __end_of__display_verify:
 27396                           	opt stack 0
 27397                           tosu	equ	0xFFF
 27398                           tosh	equ	0xFFE
 27399                           tosl	equ	0xFFD
 27400                           pclath	equ	0xFFA
 27401                           tblptru	equ	0xFF8
 27402                           tblptrh	equ	0xFF7
 27403                           tblptrl	equ	0xFF6
 27404                           tablat	equ	0xFF5
 27405                           prodh	equ	0xFF4
 27406                           prodl	equ	0xFF3
 27407                           intcon	equ	0xFF2
 27408                           intcon3	equ	0xFF0
 27409                           indf0	equ	0xFEF
 27410                           postinc0	equ	0xFEE
 27411                           fsr0h	equ	0xFEA
 27412                           fsr0l	equ	0xFE9
 27413                           wreg	equ	0xFE8
 27414                           indf1	equ	0xFE7
 27415                           postdec1	equ	0xFE5
 27416                           plusw1	equ	0xFE3
 27417                           fsr1h	equ	0xFE2
 27418                           fsr1l	equ	0xFE1
 27419                           indf2	equ	0xFDF
 27420                           postinc2	equ	0xFDE
 27421                           postdec2	equ	0xFDD
 27422                           plusw2	equ	0xFDB
 27423                           fsr2h	equ	0xFDA
 27424                           fsr2l	equ	0xFD9
 27425                           status	equ	0xFD8
 27426                           
 27427 ;; *************** function __display_suspended *****************
 27428 ;; Defined at:
 27429 ;;		line 665 in file "display.c"
 27430 ;; Parameters:    Size  Location     Type
 27431 ;;		None
 27432 ;; Auto vars:     Size  Location     Type
 27433 ;;  cntr            1    0[COMRAM] unsigned char 
 27434 ;; Return value:  Size  Location     Type
 27435 ;;                  1    wreg      void 
 27436 ;; Registers used:
 27437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27438 ;; Tracked objects:
 27439 ;;		On entry : 0/0
 27440 ;;		On exit  : 0/0
 27441 ;;		Unchanged: 0/0
 27442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27447 ;;Total ram usage:        1 bytes
 27448 ;; Hardware stack levels used:    1
 27449 ;; This function calls:
 27450 ;;		Nothing
 27451 ;; This function is called by:
 27452 ;;		_display_prepare
 27453 ;; This function uses a non-reentrant model
 27454 ;;
 27455                           
 27456                           	psect	text138
 27457  003256                     __ptext138:
 27458                           	opt stack 0
 27459  003256                     __display_suspended:
 27460                           	opt stack 26
 27461                           
 27462                           ;display.c: 667: uint8_t cntr;;display.c: 670: cntr = 0;
 27463                           
 27464                           ;incstack = 0
 27465  003256  0E00               	movlw	0
 27466  003258  6E01               	movwf	__display_suspended@cntr,c
 27467                           
 27468                           ;display.c: 671: while(suspended_line1[cntr])
 27469  00325A  D017               	goto	l1731
 27470  00325C                     
 27471                           ;display.c: 672: display_content[0][cntr] = suspended_line1[cntr++];
 27472  00325C  5001               	movf	__display_suspended@cntr,w,c
 27473  00325E  0D01               	mullw	1
 27474  003260  0ECA               	movlw	low _suspended_line1
 27475  003262  24F3               	addwf	prodl,w,c
 27476  003264  6EF6               	movwf	tblptrl,c
 27477  003266  0E8C               	movlw	high _suspended_line1
 27478  003268  20F4               	addwfc	prodh,w,c
 27479  00326A  6EF7               	movwf	tblptrh,c
 27480  00326C                     	if	1	;There are 3 active tblptr bytes
 27481  00326C  6AF8               	clrf	tblptru,c
 27482  00326E  0E00               	movlw	low (__mediumconst shr (0+16))
 27483  003270  22F8               	addwfc	tblptru,f,c
 27484  003272                     	endif
 27485  003272  5001               	movf	__display_suspended@cntr,w,c
 27486  003274  0D01               	mullw	1
 27487  003276  0E7B               	movlw	low _display_content
 27488  003278  24F3               	addwf	prodl,w,c
 27489  00327A  6ED9               	movwf	fsr2l,c
 27490  00327C  0E01               	movlw	high _display_content
 27491  00327E  20F4               	addwfc	prodh,w,c
 27492  003280  6EDA               	movwf	fsr2h,c
 27493  003282  0008               	tblrd		*
 27494  003284  CFF5 FFDF          	movff	tablat,indf2
 27495  003288  2A01               	incf	__display_suspended@cntr,f,c
 27496  00328A                     l1731:
 27497  00328A  5001               	movf	__display_suspended@cntr,w,c
 27498  00328C  0D01               	mullw	1
 27499  00328E  0ECA               	movlw	low _suspended_line1
 27500  003290  24F3               	addwf	prodl,w,c
 27501  003292  6EF6               	movwf	tblptrl,c
 27502  003294  0E8C               	movlw	high _suspended_line1
 27503  003296  20F4               	addwfc	prodh,w,c
 27504  003298  6EF7               	movwf	tblptrh,c
 27505  00329A                     	if	1	;There are 3 active tblptr bytes
 27506  00329A  6AF8               	clrf	tblptru,c
 27507  00329C  0E00               	movlw	low (__mediumconst shr (0+16))
 27508  00329E  22F8               	addwfc	tblptru,f,c
 27509  0032A0                     	endif
 27510  0032A0  0008               	tblrd		*
 27511  0032A2  50F5               	movf	tablat,w,c
 27512  0032A4  0900               	iorlw	0
 27513  0032A6  A4D8               	btfss	status,2,c
 27514  0032A8  D7D9               	goto	l1732
 27515                           
 27516                           ;display.c: 674: cntr = 0;
 27517  0032AA  0E00               	movlw	0
 27518  0032AC  6E01               	movwf	__display_suspended@cntr,c
 27519                           
 27520                           ;display.c: 675: while(suspended_line2[cntr])
 27521  0032AE  D017               	goto	l1734
 27522  0032B0                     
 27523                           ;display.c: 676: display_content[1][cntr] = suspended_line2[cntr++];
 27524  0032B0  5001               	movf	__display_suspended@cntr,w,c
 27525  0032B2  0D01               	mullw	1
 27526  0032B4  0E1A               	movlw	low _suspended_line2
 27527  0032B6  24F3               	addwf	prodl,w,c
 27528  0032B8  6EF6               	movwf	tblptrl,c
 27529  0032BA  0E8E               	movlw	high _suspended_line2
 27530  0032BC  20F4               	addwfc	prodh,w,c
 27531  0032BE  6EF7               	movwf	tblptrh,c
 27532  0032C0                     	if	1	;There are 3 active tblptr bytes
 27533  0032C0  6AF8               	clrf	tblptru,c
 27534  0032C2  0E00               	movlw	low (__mediumconst shr (0+16))
 27535  0032C4  22F8               	addwfc	tblptru,f,c
 27536  0032C6                     	endif
 27537  0032C6  5001               	movf	__display_suspended@cntr,w,c
 27538  0032C8  0D01               	mullw	1
 27539  0032CA  0E8F               	movlw	low (_display_content+20)
 27540  0032CC  24F3               	addwf	prodl,w,c
 27541  0032CE  6ED9               	movwf	fsr2l,c
 27542  0032D0  0E01               	movlw	high (_display_content+20)
 27543  0032D2  20F4               	addwfc	prodh,w,c
 27544  0032D4  6EDA               	movwf	fsr2h,c
 27545  0032D6  0008               	tblrd		*
 27546  0032D8  CFF5 FFDF          	movff	tablat,indf2
 27547  0032DC  2A01               	incf	__display_suspended@cntr,f,c
 27548  0032DE                     l1734:
 27549  0032DE  5001               	movf	__display_suspended@cntr,w,c
 27550  0032E0  0D01               	mullw	1
 27551  0032E2  0E1A               	movlw	low _suspended_line2
 27552  0032E4  24F3               	addwf	prodl,w,c
 27553  0032E6  6EF6               	movwf	tblptrl,c
 27554  0032E8  0E8E               	movlw	high _suspended_line2
 27555  0032EA  20F4               	addwfc	prodh,w,c
 27556  0032EC  6EF7               	movwf	tblptrh,c
 27557  0032EE                     	if	1	;There are 3 active tblptr bytes
 27558  0032EE  6AF8               	clrf	tblptru,c
 27559  0032F0  0E00               	movlw	low (__mediumconst shr (0+16))
 27560  0032F2  22F8               	addwfc	tblptru,f,c
 27561  0032F4                     	endif
 27562  0032F4  0008               	tblrd		*
 27563  0032F6  50F5               	movf	tablat,w,c
 27564  0032F8  0900               	iorlw	0
 27565  0032FA  A4D8               	btfss	status,2,c
 27566  0032FC  D7D9               	goto	l1735
 27567                           
 27568                           ;display.c: 678: cntr = 0;
 27569  0032FE  0E00               	movlw	0
 27570  003300  6E01               	movwf	__display_suspended@cntr,c
 27571                           
 27572                           ;display.c: 679: while(suspended_line3[cntr])
 27573  003302  D017               	goto	l1737
 27574  003304                     
 27575                           ;display.c: 680: display_content[2][cntr] = suspended_line3[cntr++];
 27576  003304  5001               	movf	__display_suspended@cntr,w,c
 27577  003306  0D01               	mullw	1
 27578  003308  0E7E               	movlw	low _suspended_line3
 27579  00330A  24F3               	addwf	prodl,w,c
 27580  00330C  6EF6               	movwf	tblptrl,c
 27581  00330E  0E8E               	movlw	high _suspended_line3
 27582  003310  20F4               	addwfc	prodh,w,c
 27583  003312  6EF7               	movwf	tblptrh,c
 27584  003314                     	if	1	;There are 3 active tblptr bytes
 27585  003314  6AF8               	clrf	tblptru,c
 27586  003316  0E00               	movlw	low (__mediumconst shr (0+16))
 27587  003318  22F8               	addwfc	tblptru,f,c
 27588  00331A                     	endif
 27589  00331A  5001               	movf	__display_suspended@cntr,w,c
 27590  00331C  0D01               	mullw	1
 27591  00331E  0EA3               	movlw	low (_display_content+40)
 27592  003320  24F3               	addwf	prodl,w,c
 27593  003322  6ED9               	movwf	fsr2l,c
 27594  003324  0E01               	movlw	high (_display_content+40)
 27595  003326  20F4               	addwfc	prodh,w,c
 27596  003328  6EDA               	movwf	fsr2h,c
 27597  00332A  0008               	tblrd		*
 27598  00332C  CFF5 FFDF          	movff	tablat,indf2
 27599  003330  2A01               	incf	__display_suspended@cntr,f,c
 27600  003332                     l1737:
 27601  003332  5001               	movf	__display_suspended@cntr,w,c
 27602  003334  0D01               	mullw	1
 27603  003336  0E7E               	movlw	low _suspended_line3
 27604  003338  24F3               	addwf	prodl,w,c
 27605  00333A  6EF6               	movwf	tblptrl,c
 27606  00333C  0E8E               	movlw	high _suspended_line3
 27607  00333E  20F4               	addwfc	prodh,w,c
 27608  003340  6EF7               	movwf	tblptrh,c
 27609  003342                     	if	1	;There are 3 active tblptr bytes
 27610  003342  6AF8               	clrf	tblptru,c
 27611  003344  0E00               	movlw	low (__mediumconst shr (0+16))
 27612  003346  22F8               	addwfc	tblptru,f,c
 27613  003348                     	endif
 27614  003348  0008               	tblrd		*
 27615  00334A  50F5               	movf	tablat,w,c
 27616  00334C  0900               	iorlw	0
 27617  00334E  A4D8               	btfss	status,2,c
 27618  003350  D7D9               	goto	l1738
 27619                           
 27620                           ;display.c: 682: cntr = 0;
 27621  003352  0E00               	movlw	0
 27622  003354  6E01               	movwf	__display_suspended@cntr,c
 27623                           
 27624                           ;display.c: 683: while(suspended_line4[cntr])
 27625  003356  D017               	goto	l1740
 27626  003358                     
 27627                           ;display.c: 684: display_content[3][cntr] = suspended_line4[cntr++];
 27628  003358  5001               	movf	__display_suspended@cntr,w,c
 27629  00335A  0D01               	mullw	1
 27630  00335C  0E25               	movlw	low _suspended_line4
 27631  00335E  24F3               	addwf	prodl,w,c
 27632  003360  6EF6               	movwf	tblptrl,c
 27633  003362  0E8C               	movlw	high _suspended_line4
 27634  003364  20F4               	addwfc	prodh,w,c
 27635  003366  6EF7               	movwf	tblptrh,c
 27636  003368                     	if	1	;There are 3 active tblptr bytes
 27637  003368  6AF8               	clrf	tblptru,c
 27638  00336A  0E00               	movlw	low (__mediumconst shr (0+16))
 27639  00336C  22F8               	addwfc	tblptru,f,c
 27640  00336E                     	endif
 27641  00336E  5001               	movf	__display_suspended@cntr,w,c
 27642  003370  0D01               	mullw	1
 27643  003372  0EB7               	movlw	low (_display_content+60)
 27644  003374  24F3               	addwf	prodl,w,c
 27645  003376  6ED9               	movwf	fsr2l,c
 27646  003378  0E01               	movlw	high (_display_content+60)
 27647  00337A  20F4               	addwfc	prodh,w,c
 27648  00337C  6EDA               	movwf	fsr2h,c
 27649  00337E  0008               	tblrd		*
 27650  003380  CFF5 FFDF          	movff	tablat,indf2
 27651  003384  2A01               	incf	__display_suspended@cntr,f,c
 27652  003386                     l1740:
 27653  003386  5001               	movf	__display_suspended@cntr,w,c
 27654  003388  0D01               	mullw	1
 27655  00338A  0E25               	movlw	low _suspended_line4
 27656  00338C  24F3               	addwf	prodl,w,c
 27657  00338E  6EF6               	movwf	tblptrl,c
 27658  003390  0E8C               	movlw	high _suspended_line4
 27659  003392  20F4               	addwfc	prodh,w,c
 27660  003394  6EF7               	movwf	tblptrh,c
 27661  003396                     	if	1	;There are 3 active tblptr bytes
 27662  003396  6AF8               	clrf	tblptru,c
 27663  003398  0E00               	movlw	low (__mediumconst shr (0+16))
 27664  00339A  22F8               	addwfc	tblptru,f,c
 27665  00339C                     	endif
 27666  00339C  0008               	tblrd		*
 27667  00339E  50F5               	movf	tablat,w,c
 27668  0033A0  0900               	iorlw	0
 27669  0033A2  B4D8               	btfsc	status,2,c
 27670  0033A4  0012               	return	
 27671  0033A6  D7D8               	goto	l1741
 27672  0033A8                     __end_of__display_suspended:
 27673                           	opt stack 0
 27674                           tosu	equ	0xFFF
 27675                           tosh	equ	0xFFE
 27676                           tosl	equ	0xFFD
 27677                           pclath	equ	0xFFA
 27678                           tblptru	equ	0xFF8
 27679                           tblptrh	equ	0xFF7
 27680                           tblptrl	equ	0xFF6
 27681                           tablat	equ	0xFF5
 27682                           prodh	equ	0xFF4
 27683                           prodl	equ	0xFF3
 27684                           intcon	equ	0xFF2
 27685                           intcon3	equ	0xFF0
 27686                           indf0	equ	0xFEF
 27687                           postinc0	equ	0xFEE
 27688                           fsr0h	equ	0xFEA
 27689                           fsr0l	equ	0xFE9
 27690                           wreg	equ	0xFE8
 27691                           indf1	equ	0xFE7
 27692                           postdec1	equ	0xFE5
 27693                           plusw1	equ	0xFE3
 27694                           fsr1h	equ	0xFE2
 27695                           fsr1l	equ	0xFE1
 27696                           indf2	equ	0xFDF
 27697                           postinc2	equ	0xFDE
 27698                           postdec2	equ	0xFDD
 27699                           plusw2	equ	0xFDB
 27700                           fsr2h	equ	0xFDA
 27701                           fsr2l	equ	0xFD9
 27702                           status	equ	0xFD8
 27703                           
 27704 ;; *************** function __display_start *****************
 27705 ;; Defined at:
 27706 ;;		line 461 in file "display.c"
 27707 ;; Parameters:    Size  Location     Type
 27708 ;;		None
 27709 ;; Auto vars:     Size  Location     Type
 27710 ;;  cntr            1   28[COMRAM] unsigned char 
 27711 ;; Return value:  Size  Location     Type
 27712 ;;                  1    wreg      void 
 27713 ;; Registers used:
 27714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27715 ;; Tracked objects:
 27716 ;;		On entry : 0/0
 27717 ;;		On exit  : 0/0
 27718 ;;		Unchanged: 0/0
 27719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27724 ;;Total ram usage:        1 bytes
 27725 ;; Hardware stack levels used:    1
 27726 ;; Hardware stack levels required when called:    4
 27727 ;; This function calls:
 27728 ;;		__display_itoa_u16
 27729 ;; This function is called by:
 27730 ;;		_display_prepare
 27731 ;; This function uses a non-reentrant model
 27732 ;;
 27733                           
 27734                           	psect	text139
 27735  0025EC                     __ptext139:
 27736                           	opt stack 0
 27737  0025EC                     __display_start:
 27738                           	opt stack 22
 27739                           
 27740                           ;display.c: 463: uint8_t cntr;;display.c: 464: cntr = 0;
 27741                           
 27742                           ;incstack = 0
 27743  0025EC  0E00               	movlw	0
 27744  0025EE  6E1D               	movwf	__display_start@cntr,c
 27745                           
 27746                           ;display.c: 465: while(start_line1[cntr])
 27747  0025F0  D017               	goto	l1586
 27748  0025F2                     
 27749                           ;display.c: 466: display_content[0][cntr] = start_line1[cntr++];
 27750  0025F2  501D               	movf	__display_start@cntr,w,c
 27751  0025F4  0D01               	mullw	1
 27752  0025F6  0E96               	movlw	low _start_line1
 27753  0025F8  24F3               	addwf	prodl,w,c
 27754  0025FA  6EF6               	movwf	tblptrl,c
 27755  0025FC  0E8D               	movlw	high _start_line1
 27756  0025FE  20F4               	addwfc	prodh,w,c
 27757  002600  6EF7               	movwf	tblptrh,c
 27758  002602                     	if	1	;There are 3 active tblptr bytes
 27759  002602  6AF8               	clrf	tblptru,c
 27760  002604  0E00               	movlw	low (__mediumconst shr (0+16))
 27761  002606  22F8               	addwfc	tblptru,f,c
 27762  002608                     	endif
 27763  002608  501D               	movf	__display_start@cntr,w,c
 27764  00260A  0D01               	mullw	1
 27765  00260C  0E7B               	movlw	low _display_content
 27766  00260E  24F3               	addwf	prodl,w,c
 27767  002610  6ED9               	movwf	fsr2l,c
 27768  002612  0E01               	movlw	high _display_content
 27769  002614  20F4               	addwfc	prodh,w,c
 27770  002616  6EDA               	movwf	fsr2h,c
 27771  002618  0008               	tblrd		*
 27772  00261A  CFF5 FFDF          	movff	tablat,indf2
 27773  00261E  2A1D               	incf	__display_start@cntr,f,c
 27774  002620                     l1586:
 27775  002620  501D               	movf	__display_start@cntr,w,c
 27776  002622  0D01               	mullw	1
 27777  002624  0E96               	movlw	low _start_line1
 27778  002626  24F3               	addwf	prodl,w,c
 27779  002628  6EF6               	movwf	tblptrl,c
 27780  00262A  0E8D               	movlw	high _start_line1
 27781  00262C  20F4               	addwfc	prodh,w,c
 27782  00262E  6EF7               	movwf	tblptrh,c
 27783  002630                     	if	1	;There are 3 active tblptr bytes
 27784  002630  6AF8               	clrf	tblptru,c
 27785  002632  0E00               	movlw	low (__mediumconst shr (0+16))
 27786  002634  22F8               	addwfc	tblptru,f,c
 27787  002636                     	endif
 27788  002636  0008               	tblrd		*
 27789  002638  50F5               	movf	tablat,w,c
 27790  00263A  0900               	iorlw	0
 27791  00263C  A4D8               	btfss	status,2,c
 27792  00263E  D7D9               	goto	l1587
 27793                           
 27794                           ;display.c: 467: cntr = 0;
 27795  002640  0E00               	movlw	0
 27796  002642  6E1D               	movwf	__display_start@cntr,c
 27797                           
 27798                           ;display.c: 468: while(start_line2[cntr])
 27799  002644  D017               	goto	l1589
 27800  002646                     
 27801                           ;display.c: 469: display_content[1][cntr] = start_line2[cntr++];
 27802  002646  501D               	movf	__display_start@cntr,w,c
 27803  002648  0D01               	mullw	1
 27804  00264A  0E4C               	movlw	low _start_line2
 27805  00264C  24F3               	addwf	prodl,w,c
 27806  00264E  6EF6               	movwf	tblptrl,c
 27807  002650  0E8E               	movlw	high _start_line2
 27808  002652  20F4               	addwfc	prodh,w,c
 27809  002654  6EF7               	movwf	tblptrh,c
 27810  002656                     	if	1	;There are 3 active tblptr bytes
 27811  002656  6AF8               	clrf	tblptru,c
 27812  002658  0E00               	movlw	low (__mediumconst shr (0+16))
 27813  00265A  22F8               	addwfc	tblptru,f,c
 27814  00265C                     	endif
 27815  00265C  501D               	movf	__display_start@cntr,w,c
 27816  00265E  0D01               	mullw	1
 27817  002660  0E8F               	movlw	low (_display_content+20)
 27818  002662  24F3               	addwf	prodl,w,c
 27819  002664  6ED9               	movwf	fsr2l,c
 27820  002666  0E01               	movlw	high (_display_content+20)
 27821  002668  20F4               	addwfc	prodh,w,c
 27822  00266A  6EDA               	movwf	fsr2h,c
 27823  00266C  0008               	tblrd		*
 27824  00266E  CFF5 FFDF          	movff	tablat,indf2
 27825  002672  2A1D               	incf	__display_start@cntr,f,c
 27826  002674                     l1589:
 27827  002674  501D               	movf	__display_start@cntr,w,c
 27828  002676  0D01               	mullw	1
 27829  002678  0E4C               	movlw	low _start_line2
 27830  00267A  24F3               	addwf	prodl,w,c
 27831  00267C  6EF6               	movwf	tblptrl,c
 27832  00267E  0E8E               	movlw	high _start_line2
 27833  002680  20F4               	addwfc	prodh,w,c
 27834  002682  6EF7               	movwf	tblptrh,c
 27835  002684                     	if	1	;There are 3 active tblptr bytes
 27836  002684  6AF8               	clrf	tblptru,c
 27837  002686  0E00               	movlw	low (__mediumconst shr (0+16))
 27838  002688  22F8               	addwfc	tblptru,f,c
 27839  00268A                     	endif
 27840  00268A  0008               	tblrd		*
 27841  00268C  50F5               	movf	tablat,w,c
 27842  00268E  0900               	iorlw	0
 27843  002690  A4D8               	btfss	status,2,c
 27844  002692  D7D9               	goto	l1590
 27845                           
 27846                           ;display.c: 470: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27847  002694  0E00               	movlw	0
 27848  002696  6E1A               	movwf	__display_itoa_u16@value+1,c
 27849  002698  0E00               	movlw	0
 27850  00269A  6E19               	movwf	__display_itoa_u16@value,c
 27851  00269C  501D               	movf	__display_start@cntr,w,c
 27852  00269E  0D01               	mullw	1
 27853  0026A0  0E8F               	movlw	low (_display_content+20)
 27854  0026A2  24F3               	addwf	prodl,w,c
 27855  0026A4  6E1B               	movwf	__display_itoa_u16@text,c
 27856  0026A6  0E01               	movlw	high (_display_content+20)
 27857  0026A8  20F4               	addwfc	prodh,w,c
 27858  0026AA  6E1C               	movwf	__display_itoa_u16@text+1,c
 27859  0026AC  EC2A  F028         	call	__display_itoa_u16	;wreg free
 27860  0026B0  261D               	addwf	__display_start@cntr,f,c
 27861                           
 27862                           ;display.c: 471: display_content[1][cntr++] = '.';
 27863  0026B2  501D               	movf	__display_start@cntr,w,c
 27864  0026B4  0D01               	mullw	1
 27865  0026B6  0E8F               	movlw	low (_display_content+20)
 27866  0026B8  24F3               	addwf	prodl,w,c
 27867  0026BA  6ED9               	movwf	fsr2l,c
 27868  0026BC  0E01               	movlw	high (_display_content+20)
 27869  0026BE  20F4               	addwfc	prodh,w,c
 27870  0026C0  6EDA               	movwf	fsr2h,c
 27871  0026C2  0E2E               	movlw	46
 27872  0026C4  6EDF               	movwf	indf2,c
 27873  0026C6  2A1D               	incf	__display_start@cntr,f,c
 27874                           
 27875                           ;display.c: 472: cntr += _display_itoa_u16(0x05, &display_content[1][cntr]);
 27876  0026C8  0E00               	movlw	0
 27877  0026CA  6E1A               	movwf	__display_itoa_u16@value+1,c
 27878  0026CC  0E05               	movlw	5
 27879  0026CE  6E19               	movwf	__display_itoa_u16@value,c
 27880  0026D0  501D               	movf	__display_start@cntr,w,c
 27881  0026D2  0D01               	mullw	1
 27882  0026D4  0E8F               	movlw	low (_display_content+20)
 27883  0026D6  24F3               	addwf	prodl,w,c
 27884  0026D8  6E1B               	movwf	__display_itoa_u16@text,c
 27885  0026DA  0E01               	movlw	high (_display_content+20)
 27886  0026DC  20F4               	addwfc	prodh,w,c
 27887  0026DE  6E1C               	movwf	__display_itoa_u16@text+1,c
 27888  0026E0  EC2A  F028         	call	__display_itoa_u16	;wreg free
 27889  0026E4  261D               	addwf	__display_start@cntr,f,c
 27890                           
 27891                           ;display.c: 473: display_content[1][cntr++] = '.';
 27892  0026E6  501D               	movf	__display_start@cntr,w,c
 27893  0026E8  0D01               	mullw	1
 27894  0026EA  0E8F               	movlw	low (_display_content+20)
 27895  0026EC  24F3               	addwf	prodl,w,c
 27896  0026EE  6ED9               	movwf	fsr2l,c
 27897  0026F0  0E01               	movlw	high (_display_content+20)
 27898  0026F2  20F4               	addwfc	prodh,w,c
 27899  0026F4  6EDA               	movwf	fsr2h,c
 27900  0026F6  0E2E               	movlw	46
 27901  0026F8  6EDF               	movwf	indf2,c
 27902  0026FA  2A1D               	incf	__display_start@cntr,f,c
 27903                           
 27904                           ;display.c: 474: cntr += _display_itoa_u16(0x00, &display_content[1][cntr]);
 27905  0026FC  0E00               	movlw	0
 27906  0026FE  6E1A               	movwf	__display_itoa_u16@value+1,c
 27907  002700  0E00               	movlw	0
 27908  002702  6E19               	movwf	__display_itoa_u16@value,c
 27909  002704  501D               	movf	__display_start@cntr,w,c
 27910  002706  0D01               	mullw	1
 27911  002708  0E8F               	movlw	low (_display_content+20)
 27912  00270A  24F3               	addwf	prodl,w,c
 27913  00270C  6E1B               	movwf	__display_itoa_u16@text,c
 27914  00270E  0E01               	movlw	high (_display_content+20)
 27915  002710  20F4               	addwfc	prodh,w,c
 27916  002712  6E1C               	movwf	__display_itoa_u16@text+1,c
 27917  002714  EC2A  F028         	call	__display_itoa_u16	;wreg free
 27918  002718  261D               	addwf	__display_start@cntr,f,c
 27919                           
 27920                           ;display.c: 475: cntr = 0;
 27921  00271A  0E00               	movlw	0
 27922  00271C  6E1D               	movwf	__display_start@cntr,c
 27923                           
 27924                           ;display.c: 476: while(start_line3[cntr])
 27925  00271E  D017               	goto	l1592
 27926  002720                     
 27927                           ;display.c: 477: display_content[2][cntr] = start_line3[cntr++];
 27928  002720  501D               	movf	__display_start@cntr,w,c
 27929  002722  0D01               	mullw	1
 27930  002724  0E7F               	movlw	low _start_line3
 27931  002726  24F3               	addwf	prodl,w,c
 27932  002728  6EF6               	movwf	tblptrl,c
 27933  00272A  0E8E               	movlw	high _start_line3
 27934  00272C  20F4               	addwfc	prodh,w,c
 27935  00272E  6EF7               	movwf	tblptrh,c
 27936  002730                     	if	1	;There are 3 active tblptr bytes
 27937  002730  6AF8               	clrf	tblptru,c
 27938  002732  0E00               	movlw	low (__mediumconst shr (0+16))
 27939  002734  22F8               	addwfc	tblptru,f,c
 27940  002736                     	endif
 27941  002736  501D               	movf	__display_start@cntr,w,c
 27942  002738  0D01               	mullw	1
 27943  00273A  0EA3               	movlw	low (_display_content+40)
 27944  00273C  24F3               	addwf	prodl,w,c
 27945  00273E  6ED9               	movwf	fsr2l,c
 27946  002740  0E01               	movlw	high (_display_content+40)
 27947  002742  20F4               	addwfc	prodh,w,c
 27948  002744  6EDA               	movwf	fsr2h,c
 27949  002746  0008               	tblrd		*
 27950  002748  CFF5 FFDF          	movff	tablat,indf2
 27951  00274C  2A1D               	incf	__display_start@cntr,f,c
 27952  00274E                     l1592:
 27953  00274E  501D               	movf	__display_start@cntr,w,c
 27954  002750  0D01               	mullw	1
 27955  002752  0E7F               	movlw	low _start_line3
 27956  002754  24F3               	addwf	prodl,w,c
 27957  002756  6EF6               	movwf	tblptrl,c
 27958  002758  0E8E               	movlw	high _start_line3
 27959  00275A  20F4               	addwfc	prodh,w,c
 27960  00275C  6EF7               	movwf	tblptrh,c
 27961  00275E                     	if	1	;There are 3 active tblptr bytes
 27962  00275E  6AF8               	clrf	tblptru,c
 27963  002760  0E00               	movlw	low (__mediumconst shr (0+16))
 27964  002762  22F8               	addwfc	tblptru,f,c
 27965  002764                     	endif
 27966  002764  0008               	tblrd		*
 27967  002766  50F5               	movf	tablat,w,c
 27968  002768  0900               	iorlw	0
 27969  00276A  A4D8               	btfss	status,2,c
 27970  00276C  D7D9               	goto	l1593
 27971                           
 27972                           ;display.c: 478: cntr = 0;
 27973  00276E  0E00               	movlw	0
 27974  002770  6E1D               	movwf	__display_start@cntr,c
 27975                           
 27976                           ;display.c: 479: while(start_line4[cntr])
 27977  002772  D017               	goto	l1595
 27978  002774                     
 27979                           ;display.c: 480: display_content[3][cntr] = start_line4[cntr++];
 27980  002774  501D               	movf	__display_start@cntr,w,c
 27981  002776  0D01               	mullw	1
 27982  002778  0ED6               	movlw	low _start_line4
 27983  00277A  24F3               	addwf	prodl,w,c
 27984  00277C  6EF6               	movwf	tblptrl,c
 27985  00277E  0E8D               	movlw	high _start_line4
 27986  002780  20F4               	addwfc	prodh,w,c
 27987  002782  6EF7               	movwf	tblptrh,c
 27988  002784                     	if	1	;There are 3 active tblptr bytes
 27989  002784  6AF8               	clrf	tblptru,c
 27990  002786  0E00               	movlw	low (__mediumconst shr (0+16))
 27991  002788  22F8               	addwfc	tblptru,f,c
 27992  00278A                     	endif
 27993  00278A  501D               	movf	__display_start@cntr,w,c
 27994  00278C  0D01               	mullw	1
 27995  00278E  0EB7               	movlw	low (_display_content+60)
 27996  002790  24F3               	addwf	prodl,w,c
 27997  002792  6ED9               	movwf	fsr2l,c
 27998  002794  0E01               	movlw	high (_display_content+60)
 27999  002796  20F4               	addwfc	prodh,w,c
 28000  002798  6EDA               	movwf	fsr2h,c
 28001  00279A  0008               	tblrd		*
 28002  00279C  CFF5 FFDF          	movff	tablat,indf2
 28003  0027A0  2A1D               	incf	__display_start@cntr,f,c
 28004  0027A2                     l1595:
 28005  0027A2  501D               	movf	__display_start@cntr,w,c
 28006  0027A4  0D01               	mullw	1
 28007  0027A6  0ED6               	movlw	low _start_line4
 28008  0027A8  24F3               	addwf	prodl,w,c
 28009  0027AA  6EF6               	movwf	tblptrl,c
 28010  0027AC  0E8D               	movlw	high _start_line4
 28011  0027AE  20F4               	addwfc	prodh,w,c
 28012  0027B0  6EF7               	movwf	tblptrh,c
 28013  0027B2                     	if	1	;There are 3 active tblptr bytes
 28014  0027B2  6AF8               	clrf	tblptru,c
 28015  0027B4  0E00               	movlw	low (__mediumconst shr (0+16))
 28016  0027B6  22F8               	addwfc	tblptru,f,c
 28017  0027B8                     	endif
 28018  0027B8  0008               	tblrd		*
 28019  0027BA  50F5               	movf	tablat,w,c
 28020  0027BC  0900               	iorlw	0
 28021  0027BE  B4D8               	btfsc	status,2,c
 28022  0027C0  0012               	return	
 28023  0027C2  D7D8               	goto	l1596
 28024  0027C4                     __end_of__display_start:
 28025                           	opt stack 0
 28026                           tosu	equ	0xFFF
 28027                           tosh	equ	0xFFE
 28028                           tosl	equ	0xFFD
 28029                           pclath	equ	0xFFA
 28030                           tblptru	equ	0xFF8
 28031                           tblptrh	equ	0xFF7
 28032                           tblptrl	equ	0xFF6
 28033                           tablat	equ	0xFF5
 28034                           prodh	equ	0xFF4
 28035                           prodl	equ	0xFF3
 28036                           intcon	equ	0xFF2
 28037                           intcon3	equ	0xFF0
 28038                           indf0	equ	0xFEF
 28039                           postinc0	equ	0xFEE
 28040                           fsr0h	equ	0xFEA
 28041                           fsr0l	equ	0xFE9
 28042                           wreg	equ	0xFE8
 28043                           indf1	equ	0xFE7
 28044                           postdec1	equ	0xFE5
 28045                           plusw1	equ	0xFE3
 28046                           fsr1h	equ	0xFE2
 28047                           fsr1l	equ	0xFE1
 28048                           indf2	equ	0xFDF
 28049                           postinc2	equ	0xFDE
 28050                           postdec2	equ	0xFDD
 28051                           plusw2	equ	0xFDB
 28052                           fsr2h	equ	0xFDA
 28053                           fsr2l	equ	0xFD9
 28054                           status	equ	0xFD8
 28055                           
 28056 ;; *************** function __display_search *****************
 28057 ;; Defined at:
 28058 ;;		line 483 in file "display.c"
 28059 ;; Parameters:    Size  Location     Type
 28060 ;;		None
 28061 ;; Auto vars:     Size  Location     Type
 28062 ;;  cntr            1    0[COMRAM] unsigned char 
 28063 ;; Return value:  Size  Location     Type
 28064 ;;                  1    wreg      void 
 28065 ;; Registers used:
 28066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28067 ;; Tracked objects:
 28068 ;;		On entry : 0/0
 28069 ;;		On exit  : 0/0
 28070 ;;		Unchanged: 0/0
 28071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28076 ;;Total ram usage:        1 bytes
 28077 ;; Hardware stack levels used:    1
 28078 ;; This function calls:
 28079 ;;		Nothing
 28080 ;; This function is called by:
 28081 ;;		_display_prepare
 28082 ;; This function uses a non-reentrant model
 28083 ;;
 28084                           
 28085                           	psect	text140
 28086  0033A8                     __ptext140:
 28087                           	opt stack 0
 28088  0033A8                     __display_search:
 28089                           	opt stack 26
 28090                           
 28091                           ;display.c: 485: uint8_t cntr;;display.c: 486: cntr = 0;
 28092                           
 28093                           ;incstack = 0
 28094  0033A8  0E00               	movlw	0
 28095  0033AA  6E01               	movwf	__display_search@cntr,c
 28096                           
 28097                           ;display.c: 487: while(search_line1[cntr])
 28098  0033AC  D017               	goto	l1601
 28099  0033AE                     
 28100                           ;display.c: 488: display_content[0][cntr] = search_line1[cntr++];
 28101  0033AE  5001               	movf	__display_search@cntr,w,c
 28102  0033B0  0D01               	mullw	1
 28103  0033B2  0E85               	movlw	low _search_line1
 28104  0033B4  24F3               	addwf	prodl,w,c
 28105  0033B6  6EF6               	movwf	tblptrl,c
 28106  0033B8  0E8D               	movlw	high _search_line1
 28107  0033BA  20F4               	addwfc	prodh,w,c
 28108  0033BC  6EF7               	movwf	tblptrh,c
 28109  0033BE                     	if	1	;There are 3 active tblptr bytes
 28110  0033BE  6AF8               	clrf	tblptru,c
 28111  0033C0  0E00               	movlw	low (__mediumconst shr (0+16))
 28112  0033C2  22F8               	addwfc	tblptru,f,c
 28113  0033C4                     	endif
 28114  0033C4  5001               	movf	__display_search@cntr,w,c
 28115  0033C6  0D01               	mullw	1
 28116  0033C8  0E7B               	movlw	low _display_content
 28117  0033CA  24F3               	addwf	prodl,w,c
 28118  0033CC  6ED9               	movwf	fsr2l,c
 28119  0033CE  0E01               	movlw	high _display_content
 28120  0033D0  20F4               	addwfc	prodh,w,c
 28121  0033D2  6EDA               	movwf	fsr2h,c
 28122  0033D4  0008               	tblrd		*
 28123  0033D6  CFF5 FFDF          	movff	tablat,indf2
 28124  0033DA  2A01               	incf	__display_search@cntr,f,c
 28125  0033DC                     l1601:
 28126  0033DC  5001               	movf	__display_search@cntr,w,c
 28127  0033DE  0D01               	mullw	1
 28128  0033E0  0E85               	movlw	low _search_line1
 28129  0033E2  24F3               	addwf	prodl,w,c
 28130  0033E4  6EF6               	movwf	tblptrl,c
 28131  0033E6  0E8D               	movlw	high _search_line1
 28132  0033E8  20F4               	addwfc	prodh,w,c
 28133  0033EA  6EF7               	movwf	tblptrh,c
 28134  0033EC                     	if	1	;There are 3 active tblptr bytes
 28135  0033EC  6AF8               	clrf	tblptru,c
 28136  0033EE  0E00               	movlw	low (__mediumconst shr (0+16))
 28137  0033F0  22F8               	addwfc	tblptru,f,c
 28138  0033F2                     	endif
 28139  0033F2  0008               	tblrd		*
 28140  0033F4  50F5               	movf	tablat,w,c
 28141  0033F6  0900               	iorlw	0
 28142  0033F8  A4D8               	btfss	status,2,c
 28143  0033FA  D7D9               	goto	l1602
 28144                           
 28145                           ;display.c: 489: cntr = 0;
 28146  0033FC  0E00               	movlw	0
 28147  0033FE  6E01               	movwf	__display_search@cntr,c
 28148                           
 28149                           ;display.c: 490: while(search_line2[cntr])
 28150  003400  D017               	goto	l1604
 28151  003402                     
 28152                           ;display.c: 491: display_content[1][cntr] = search_line2[cntr++];
 28153  003402  5001               	movf	__display_search@cntr,w,c
 28154  003404  0D01               	mullw	1
 28155  003406  0E26               	movlw	low _search_line2
 28156  003408  24F3               	addwf	prodl,w,c
 28157  00340A  6EF6               	movwf	tblptrl,c
 28158  00340C  0E8E               	movlw	high _search_line2
 28159  00340E  20F4               	addwfc	prodh,w,c
 28160  003410  6EF7               	movwf	tblptrh,c
 28161  003412                     	if	1	;There are 3 active tblptr bytes
 28162  003412  6AF8               	clrf	tblptru,c
 28163  003414  0E00               	movlw	low (__mediumconst shr (0+16))
 28164  003416  22F8               	addwfc	tblptru,f,c
 28165  003418                     	endif
 28166  003418  5001               	movf	__display_search@cntr,w,c
 28167  00341A  0D01               	mullw	1
 28168  00341C  0E8F               	movlw	low (_display_content+20)
 28169  00341E  24F3               	addwf	prodl,w,c
 28170  003420  6ED9               	movwf	fsr2l,c
 28171  003422  0E01               	movlw	high (_display_content+20)
 28172  003424  20F4               	addwfc	prodh,w,c
 28173  003426  6EDA               	movwf	fsr2h,c
 28174  003428  0008               	tblrd		*
 28175  00342A  CFF5 FFDF          	movff	tablat,indf2
 28176  00342E  2A01               	incf	__display_search@cntr,f,c
 28177  003430                     l1604:
 28178  003430  5001               	movf	__display_search@cntr,w,c
 28179  003432  0D01               	mullw	1
 28180  003434  0E26               	movlw	low _search_line2
 28181  003436  24F3               	addwf	prodl,w,c
 28182  003438  6EF6               	movwf	tblptrl,c
 28183  00343A  0E8E               	movlw	high _search_line2
 28184  00343C  20F4               	addwfc	prodh,w,c
 28185  00343E  6EF7               	movwf	tblptrh,c
 28186  003440                     	if	1	;There are 3 active tblptr bytes
 28187  003440  6AF8               	clrf	tblptru,c
 28188  003442  0E00               	movlw	low (__mediumconst shr (0+16))
 28189  003444  22F8               	addwfc	tblptru,f,c
 28190  003446                     	endif
 28191  003446  0008               	tblrd		*
 28192  003448  50F5               	movf	tablat,w,c
 28193  00344A  0900               	iorlw	0
 28194  00344C  A4D8               	btfss	status,2,c
 28195  00344E  D7D9               	goto	l1605
 28196                           
 28197                           ;display.c: 492: cntr = 0;
 28198  003450  0E00               	movlw	0
 28199  003452  6E01               	movwf	__display_search@cntr,c
 28200                           
 28201                           ;display.c: 493: while(search_line3[cntr])
 28202  003454  D017               	goto	l1607
 28203  003456                     
 28204                           ;display.c: 494: display_content[2][cntr] = search_line3[cntr++];
 28205  003456  5001               	movf	__display_search@cntr,w,c
 28206  003458  0D01               	mullw	1
 28207  00345A  0E74               	movlw	low _search_line3
 28208  00345C  24F3               	addwf	prodl,w,c
 28209  00345E  6EF6               	movwf	tblptrl,c
 28210  003460  0E8D               	movlw	high _search_line3
 28211  003462  20F4               	addwfc	prodh,w,c
 28212  003464  6EF7               	movwf	tblptrh,c
 28213  003466                     	if	1	;There are 3 active tblptr bytes
 28214  003466  6AF8               	clrf	tblptru,c
 28215  003468  0E00               	movlw	low (__mediumconst shr (0+16))
 28216  00346A  22F8               	addwfc	tblptru,f,c
 28217  00346C                     	endif
 28218  00346C  5001               	movf	__display_search@cntr,w,c
 28219  00346E  0D01               	mullw	1
 28220  003470  0EA3               	movlw	low (_display_content+40)
 28221  003472  24F3               	addwf	prodl,w,c
 28222  003474  6ED9               	movwf	fsr2l,c
 28223  003476  0E01               	movlw	high (_display_content+40)
 28224  003478  20F4               	addwfc	prodh,w,c
 28225  00347A  6EDA               	movwf	fsr2h,c
 28226  00347C  0008               	tblrd		*
 28227  00347E  CFF5 FFDF          	movff	tablat,indf2
 28228  003482  2A01               	incf	__display_search@cntr,f,c
 28229  003484                     l1607:
 28230  003484  5001               	movf	__display_search@cntr,w,c
 28231  003486  0D01               	mullw	1
 28232  003488  0E74               	movlw	low _search_line3
 28233  00348A  24F3               	addwf	prodl,w,c
 28234  00348C  6EF6               	movwf	tblptrl,c
 28235  00348E  0E8D               	movlw	high _search_line3
 28236  003490  20F4               	addwfc	prodh,w,c
 28237  003492  6EF7               	movwf	tblptrh,c
 28238  003494                     	if	1	;There are 3 active tblptr bytes
 28239  003494  6AF8               	clrf	tblptru,c
 28240  003496  0E00               	movlw	low (__mediumconst shr (0+16))
 28241  003498  22F8               	addwfc	tblptru,f,c
 28242  00349A                     	endif
 28243  00349A  0008               	tblrd		*
 28244  00349C  50F5               	movf	tablat,w,c
 28245  00349E  0900               	iorlw	0
 28246  0034A0  A4D8               	btfss	status,2,c
 28247  0034A2  D7D9               	goto	l1608
 28248                           
 28249                           ;display.c: 495: cntr = 0;
 28250  0034A4  0E00               	movlw	0
 28251  0034A6  6E01               	movwf	__display_search@cntr,c
 28252                           
 28253                           ;display.c: 496: while(search_line4[cntr])
 28254  0034A8  D017               	goto	l1610
 28255  0034AA                     
 28256                           ;display.c: 497: display_content[3][cntr] = search_line4[cntr++];
 28257  0034AA  5001               	movf	__display_search@cntr,w,c
 28258  0034AC  0D01               	mullw	1
 28259  0034AE  0EB7               	movlw	low _search_line4
 28260  0034B0  24F3               	addwf	prodl,w,c
 28261  0034B2  6EF6               	movwf	tblptrl,c
 28262  0034B4  0E8D               	movlw	high _search_line4
 28263  0034B6  20F4               	addwfc	prodh,w,c
 28264  0034B8  6EF7               	movwf	tblptrh,c
 28265  0034BA                     	if	1	;There are 3 active tblptr bytes
 28266  0034BA  6AF8               	clrf	tblptru,c
 28267  0034BC  0E00               	movlw	low (__mediumconst shr (0+16))
 28268  0034BE  22F8               	addwfc	tblptru,f,c
 28269  0034C0                     	endif
 28270  0034C0  5001               	movf	__display_search@cntr,w,c
 28271  0034C2  0D01               	mullw	1
 28272  0034C4  0EB7               	movlw	low (_display_content+60)
 28273  0034C6  24F3               	addwf	prodl,w,c
 28274  0034C8  6ED9               	movwf	fsr2l,c
 28275  0034CA  0E01               	movlw	high (_display_content+60)
 28276  0034CC  20F4               	addwfc	prodh,w,c
 28277  0034CE  6EDA               	movwf	fsr2h,c
 28278  0034D0  0008               	tblrd		*
 28279  0034D2  CFF5 FFDF          	movff	tablat,indf2
 28280  0034D6  2A01               	incf	__display_search@cntr,f,c
 28281  0034D8                     l1610:
 28282  0034D8  5001               	movf	__display_search@cntr,w,c
 28283  0034DA  0D01               	mullw	1
 28284  0034DC  0EB7               	movlw	low _search_line4
 28285  0034DE  24F3               	addwf	prodl,w,c
 28286  0034E0  6EF6               	movwf	tblptrl,c
 28287  0034E2  0E8D               	movlw	high _search_line4
 28288  0034E4  20F4               	addwfc	prodh,w,c
 28289  0034E6  6EF7               	movwf	tblptrh,c
 28290  0034E8                     	if	1	;There are 3 active tblptr bytes
 28291  0034E8  6AF8               	clrf	tblptru,c
 28292  0034EA  0E00               	movlw	low (__mediumconst shr (0+16))
 28293  0034EC  22F8               	addwfc	tblptru,f,c
 28294  0034EE                     	endif
 28295  0034EE  0008               	tblrd		*
 28296  0034F0  50F5               	movf	tablat,w,c
 28297  0034F2  0900               	iorlw	0
 28298  0034F4  B4D8               	btfsc	status,2,c
 28299  0034F6  0012               	return	
 28300  0034F8  D7D8               	goto	l1611
 28301  0034FA                     __end_of__display_search:
 28302                           	opt stack 0
 28303                           tosu	equ	0xFFF
 28304                           tosh	equ	0xFFE
 28305                           tosl	equ	0xFFD
 28306                           pclath	equ	0xFFA
 28307                           tblptru	equ	0xFF8
 28308                           tblptrh	equ	0xFF7
 28309                           tblptrl	equ	0xFF6
 28310                           tablat	equ	0xFF5
 28311                           prodh	equ	0xFF4
 28312                           prodl	equ	0xFF3
 28313                           intcon	equ	0xFF2
 28314                           intcon3	equ	0xFF0
 28315                           indf0	equ	0xFEF
 28316                           postinc0	equ	0xFEE
 28317                           fsr0h	equ	0xFEA
 28318                           fsr0l	equ	0xFE9
 28319                           wreg	equ	0xFE8
 28320                           indf1	equ	0xFE7
 28321                           postdec1	equ	0xFE5
 28322                           plusw1	equ	0xFE3
 28323                           fsr1h	equ	0xFE2
 28324                           fsr1l	equ	0xFE1
 28325                           indf2	equ	0xFDF
 28326                           postinc2	equ	0xFDE
 28327                           postdec2	equ	0xFDD
 28328                           plusw2	equ	0xFDB
 28329                           fsr2h	equ	0xFDA
 28330                           fsr2l	equ	0xFD9
 28331                           status	equ	0xFD8
 28332                           
 28333 ;; *************** function __display_rebooting *****************
 28334 ;; Defined at:
 28335 ;;		line 657 in file "display.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;		None
 28338 ;; Auto vars:     Size  Location     Type
 28339 ;;  cntr            1    0[COMRAM] unsigned char 
 28340 ;; Return value:  Size  Location     Type
 28341 ;;                  1    wreg      void 
 28342 ;; Registers used:
 28343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28344 ;; Tracked objects:
 28345 ;;		On entry : 0/0
 28346 ;;		On exit  : 0/0
 28347 ;;		Unchanged: 0/0
 28348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28353 ;;Total ram usage:        1 bytes
 28354 ;; Hardware stack levels used:    1
 28355 ;; This function calls:
 28356 ;;		Nothing
 28357 ;; This function is called by:
 28358 ;;		_display_prepare
 28359 ;; This function uses a non-reentrant model
 28360 ;;
 28361                           
 28362                           	psect	text141
 28363  0066D0                     __ptext141:
 28364                           	opt stack 0
 28365  0066D0                     __display_rebooting:
 28366                           	opt stack 26
 28367                           
 28368                           ;display.c: 659: uint8_t cntr;;display.c: 660: cntr = 0;
 28369                           
 28370                           ;incstack = 0
 28371  0066D0  0E00               	movlw	0
 28372  0066D2  6E01               	movwf	__display_rebooting@cntr,c
 28373                           
 28374                           ;display.c: 661: while(reboot_line1[cntr])
 28375  0066D4  D017               	goto	l1725
 28376  0066D6                     
 28377                           ;display.c: 662: display_content[0][cntr] = reboot_line1[cntr++];
 28378  0066D6  5001               	movf	__display_rebooting@cntr,w,c
 28379  0066D8  0D01               	mullw	1
 28380  0066DA  0E0E               	movlw	low _reboot_line1
 28381  0066DC  24F3               	addwf	prodl,w,c
 28382  0066DE  6EF6               	movwf	tblptrl,c
 28383  0066E0  0E8E               	movlw	high _reboot_line1
 28384  0066E2  20F4               	addwfc	prodh,w,c
 28385  0066E4  6EF7               	movwf	tblptrh,c
 28386  0066E6                     	if	1	;There are 3 active tblptr bytes
 28387  0066E6  6AF8               	clrf	tblptru,c
 28388  0066E8  0E00               	movlw	low (__mediumconst shr (0+16))
 28389  0066EA  22F8               	addwfc	tblptru,f,c
 28390  0066EC                     	endif
 28391  0066EC  5001               	movf	__display_rebooting@cntr,w,c
 28392  0066EE  0D01               	mullw	1
 28393  0066F0  0E7B               	movlw	low _display_content
 28394  0066F2  24F3               	addwf	prodl,w,c
 28395  0066F4  6ED9               	movwf	fsr2l,c
 28396  0066F6  0E01               	movlw	high _display_content
 28397  0066F8  20F4               	addwfc	prodh,w,c
 28398  0066FA  6EDA               	movwf	fsr2h,c
 28399  0066FC  0008               	tblrd		*
 28400  0066FE  CFF5 FFDF          	movff	tablat,indf2
 28401  006702  2A01               	incf	__display_rebooting@cntr,f,c
 28402  006704                     l1725:
 28403  006704  5001               	movf	__display_rebooting@cntr,w,c
 28404  006706  0D01               	mullw	1
 28405  006708  0E0E               	movlw	low _reboot_line1
 28406  00670A  24F3               	addwf	prodl,w,c
 28407  00670C  6EF6               	movwf	tblptrl,c
 28408  00670E  0E8E               	movlw	high _reboot_line1
 28409  006710  20F4               	addwfc	prodh,w,c
 28410  006712  6EF7               	movwf	tblptrh,c
 28411  006714                     	if	1	;There are 3 active tblptr bytes
 28412  006714  6AF8               	clrf	tblptru,c
 28413  006716  0E00               	movlw	low (__mediumconst shr (0+16))
 28414  006718  22F8               	addwfc	tblptru,f,c
 28415  00671A                     	endif
 28416  00671A  0008               	tblrd		*
 28417  00671C  50F5               	movf	tablat,w,c
 28418  00671E  0900               	iorlw	0
 28419  006720  B4D8               	btfsc	status,2,c
 28420  006722  0012               	return	
 28421  006724  D7D8               	goto	l1726
 28422  006726                     __end_of__display_rebooting:
 28423                           	opt stack 0
 28424                           tosu	equ	0xFFF
 28425                           tosh	equ	0xFFE
 28426                           tosl	equ	0xFFD
 28427                           pclath	equ	0xFFA
 28428                           tblptru	equ	0xFF8
 28429                           tblptrh	equ	0xFF7
 28430                           tblptrl	equ	0xFF6
 28431                           tablat	equ	0xFF5
 28432                           prodh	equ	0xFF4
 28433                           prodl	equ	0xFF3
 28434                           intcon	equ	0xFF2
 28435                           intcon3	equ	0xFF0
 28436                           indf0	equ	0xFEF
 28437                           postinc0	equ	0xFEE
 28438                           fsr0h	equ	0xFEA
 28439                           fsr0l	equ	0xFE9
 28440                           wreg	equ	0xFE8
 28441                           indf1	equ	0xFE7
 28442                           postdec1	equ	0xFE5
 28443                           plusw1	equ	0xFE3
 28444                           fsr1h	equ	0xFE2
 28445                           fsr1l	equ	0xFE1
 28446                           indf2	equ	0xFDF
 28447                           postinc2	equ	0xFDE
 28448                           postdec2	equ	0xFDD
 28449                           plusw2	equ	0xFDB
 28450                           fsr2h	equ	0xFDA
 28451                           fsr2l	equ	0xFD9
 28452                           status	equ	0xFD8
 28453                           
 28454 ;; *************** function __display_programming *****************
 28455 ;; Defined at:
 28456 ;;		line 615 in file "display.c"
 28457 ;; Parameters:    Size  Location     Type
 28458 ;;		None
 28459 ;; Auto vars:     Size  Location     Type
 28460 ;;  cntr            1   28[COMRAM] unsigned char 
 28461 ;; Return value:  Size  Location     Type
 28462 ;;                  1    wreg      void 
 28463 ;; Registers used:
 28464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28465 ;; Tracked objects:
 28466 ;;		On entry : 0/0
 28467 ;;		On exit  : 0/0
 28468 ;;		Unchanged: 0/0
 28469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28474 ;;Total ram usage:        1 bytes
 28475 ;; Hardware stack levels used:    1
 28476 ;; Hardware stack levels required when called:    4
 28477 ;; This function calls:
 28478 ;;		__display_itoa_u16
 28479 ;;		_bootloader_get_entries
 28480 ;;		_bootloader_get_flashPagesWritten
 28481 ;;		_bootloader_get_total_entries
 28482 ;; This function is called by:
 28483 ;;		_display_prepare
 28484 ;; This function uses a non-reentrant model
 28485 ;;
 28486                           
 28487                           	psect	text142
 28488  0027C4                     __ptext142:
 28489                           	opt stack 0
 28490  0027C4                     __display_programming:
 28491                           	opt stack 22
 28492                           
 28493                           ;display.c: 617: uint8_t cntr;;display.c: 618: cntr = 0;
 28494                           
 28495                           ;incstack = 0
 28496  0027C4  0E00               	movlw	0
 28497  0027C6  6E1D               	movwf	__display_programming@cntr,c
 28498                           
 28499                           ;display.c: 619: while(programming_line1[cntr])
 28500  0027C8  D017               	goto	l1695
 28501  0027CA                     
 28502                           ;display.c: 620: display_content[0][cntr] = programming_line1[cntr++];
 28503  0027CA  501D               	movf	__display_programming@cntr,w,c
 28504  0027CC  0D01               	mullw	1
 28505  0027CE  0E0E               	movlw	low _programming_line1
 28506  0027D0  24F3               	addwf	prodl,w,c
 28507  0027D2  6EF6               	movwf	tblptrl,c
 28508  0027D4  0E8D               	movlw	high _programming_line1
 28509  0027D6  20F4               	addwfc	prodh,w,c
 28510  0027D8  6EF7               	movwf	tblptrh,c
 28511  0027DA                     	if	1	;There are 3 active tblptr bytes
 28512  0027DA  6AF8               	clrf	tblptru,c
 28513  0027DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28514  0027DE  22F8               	addwfc	tblptru,f,c
 28515  0027E0                     	endif
 28516  0027E0  501D               	movf	__display_programming@cntr,w,c
 28517  0027E2  0D01               	mullw	1
 28518  0027E4  0E7B               	movlw	low _display_content
 28519  0027E6  24F3               	addwf	prodl,w,c
 28520  0027E8  6ED9               	movwf	fsr2l,c
 28521  0027EA  0E01               	movlw	high _display_content
 28522  0027EC  20F4               	addwfc	prodh,w,c
 28523  0027EE  6EDA               	movwf	fsr2h,c
 28524  0027F0  0008               	tblrd		*
 28525  0027F2  CFF5 FFDF          	movff	tablat,indf2
 28526  0027F6  2A1D               	incf	__display_programming@cntr,f,c
 28527  0027F8                     l1695:
 28528  0027F8  501D               	movf	__display_programming@cntr,w,c
 28529  0027FA  0D01               	mullw	1
 28530  0027FC  0E0E               	movlw	low _programming_line1
 28531  0027FE  24F3               	addwf	prodl,w,c
 28532  002800  6EF6               	movwf	tblptrl,c
 28533  002802  0E8D               	movlw	high _programming_line1
 28534  002804  20F4               	addwfc	prodh,w,c
 28535  002806  6EF7               	movwf	tblptrh,c
 28536  002808                     	if	1	;There are 3 active tblptr bytes
 28537  002808  6AF8               	clrf	tblptru,c
 28538  00280A  0E00               	movlw	low (__mediumconst shr (0+16))
 28539  00280C  22F8               	addwfc	tblptru,f,c
 28540  00280E                     	endif
 28541  00280E  0008               	tblrd		*
 28542  002810  50F5               	movf	tablat,w,c
 28543  002812  0900               	iorlw	0
 28544  002814  A4D8               	btfss	status,2,c
 28545  002816  D7D9               	goto	l1696
 28546                           
 28547                           ;display.c: 622: cntr = 0;
 28548  002818  0E00               	movlw	0
 28549  00281A  6E1D               	movwf	__display_programming@cntr,c
 28550                           
 28551                           ;display.c: 623: while(programming_line2[cntr])
 28552  00281C  D017               	goto	l1698
 28553  00281E                     
 28554                           ;display.c: 624: display_content[1][cntr] = programming_line2[cntr++];
 28555  00281E  501D               	movf	__display_programming@cntr,w,c
 28556  002820  0D01               	mullw	1
 28557  002822  0EB7               	movlw	low _programming_line2
 28558  002824  24F3               	addwf	prodl,w,c
 28559  002826  6EF6               	movwf	tblptrl,c
 28560  002828  0E8C               	movlw	high _programming_line2
 28561  00282A  20F4               	addwfc	prodh,w,c
 28562  00282C  6EF7               	movwf	tblptrh,c
 28563  00282E                     	if	1	;There are 3 active tblptr bytes
 28564  00282E  6AF8               	clrf	tblptru,c
 28565  002830  0E00               	movlw	low (__mediumconst shr (0+16))
 28566  002832  22F8               	addwfc	tblptru,f,c
 28567  002834                     	endif
 28568  002834  501D               	movf	__display_programming@cntr,w,c
 28569  002836  0D01               	mullw	1
 28570  002838  0E8F               	movlw	low (_display_content+20)
 28571  00283A  24F3               	addwf	prodl,w,c
 28572  00283C  6ED9               	movwf	fsr2l,c
 28573  00283E  0E01               	movlw	high (_display_content+20)
 28574  002840  20F4               	addwfc	prodh,w,c
 28575  002842  6EDA               	movwf	fsr2h,c
 28576  002844  0008               	tblrd		*
 28577  002846  CFF5 FFDF          	movff	tablat,indf2
 28578  00284A  2A1D               	incf	__display_programming@cntr,f,c
 28579  00284C                     l1698:
 28580  00284C  501D               	movf	__display_programming@cntr,w,c
 28581  00284E  0D01               	mullw	1
 28582  002850  0EB7               	movlw	low _programming_line2
 28583  002852  24F3               	addwf	prodl,w,c
 28584  002854  6EF6               	movwf	tblptrl,c
 28585  002856  0E8C               	movlw	high _programming_line2
 28586  002858  20F4               	addwfc	prodh,w,c
 28587  00285A  6EF7               	movwf	tblptrh,c
 28588  00285C                     	if	1	;There are 3 active tblptr bytes
 28589  00285C  6AF8               	clrf	tblptru,c
 28590  00285E  0E00               	movlw	low (__mediumconst shr (0+16))
 28591  002860  22F8               	addwfc	tblptru,f,c
 28592  002862                     	endif
 28593  002862  0008               	tblrd		*
 28594  002864  50F5               	movf	tablat,w,c
 28595  002866  0900               	iorlw	0
 28596  002868  A4D8               	btfss	status,2,c
 28597  00286A  D7D9               	goto	l1699
 28598                           
 28599                           ;display.c: 626: cntr = 0;
 28600  00286C  0E00               	movlw	0
 28601  00286E  6E1D               	movwf	__display_programming@cntr,c
 28602                           
 28603                           ;display.c: 627: while(programming_line3[cntr])
 28604  002870  D017               	goto	l1701
 28605  002872                     
 28606                           ;display.c: 628: display_content[2][cntr] = programming_line3[cntr++];
 28607  002872  501D               	movf	__display_programming@cntr,w,c
 28608  002874  0D01               	mullw	1
 28609  002876  0E31               	movlw	low _programming_line3
 28610  002878  24F3               	addwf	prodl,w,c
 28611  00287A  6EF6               	movwf	tblptrl,c
 28612  00287C  0E8E               	movlw	high _programming_line3
 28613  00287E  20F4               	addwfc	prodh,w,c
 28614  002880  6EF7               	movwf	tblptrh,c
 28615  002882                     	if	1	;There are 3 active tblptr bytes
 28616  002882  6AF8               	clrf	tblptru,c
 28617  002884  0E00               	movlw	low (__mediumconst shr (0+16))
 28618  002886  22F8               	addwfc	tblptru,f,c
 28619  002888                     	endif
 28620  002888  501D               	movf	__display_programming@cntr,w,c
 28621  00288A  0D01               	mullw	1
 28622  00288C  0EA3               	movlw	low (_display_content+40)
 28623  00288E  24F3               	addwf	prodl,w,c
 28624  002890  6ED9               	movwf	fsr2l,c
 28625  002892  0E01               	movlw	high (_display_content+40)
 28626  002894  20F4               	addwfc	prodh,w,c
 28627  002896  6EDA               	movwf	fsr2h,c
 28628  002898  0008               	tblrd		*
 28629  00289A  CFF5 FFDF          	movff	tablat,indf2
 28630  00289E  2A1D               	incf	__display_programming@cntr,f,c
 28631  0028A0                     l1701:
 28632  0028A0  501D               	movf	__display_programming@cntr,w,c
 28633  0028A2  0D01               	mullw	1
 28634  0028A4  0E31               	movlw	low _programming_line3
 28635  0028A6  24F3               	addwf	prodl,w,c
 28636  0028A8  6EF6               	movwf	tblptrl,c
 28637  0028AA  0E8E               	movlw	high _programming_line3
 28638  0028AC  20F4               	addwfc	prodh,w,c
 28639  0028AE  6EF7               	movwf	tblptrh,c
 28640  0028B0                     	if	1	;There are 3 active tblptr bytes
 28641  0028B0  6AF8               	clrf	tblptru,c
 28642  0028B2  0E00               	movlw	low (__mediumconst shr (0+16))
 28643  0028B4  22F8               	addwfc	tblptru,f,c
 28644  0028B6                     	endif
 28645  0028B6  0008               	tblrd		*
 28646  0028B8  50F5               	movf	tablat,w,c
 28647  0028BA  0900               	iorlw	0
 28648  0028BC  A4D8               	btfss	status,2,c
 28649  0028BE  D7D9               	goto	l1702
 28650                           
 28651                           ;display.c: 629: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28652  0028C0  EC0A  F03A         	call	_bootloader_get_entries	;wreg free
 28653  0028C4  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28654  0028C8  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28655  0028CC  501D               	movf	__display_programming@cntr,w,c
 28656  0028CE  0D01               	mullw	1
 28657  0028D0  0EA3               	movlw	low (_display_content+40)
 28658  0028D2  24F3               	addwf	prodl,w,c
 28659  0028D4  6E1B               	movwf	__display_itoa_u16@text,c
 28660  0028D6  0E01               	movlw	high (_display_content+40)
 28661  0028D8  20F4               	addwfc	prodh,w,c
 28662  0028DA  6E1C               	movwf	__display_itoa_u16@text+1,c
 28663  0028DC  EC2A  F028         	call	__display_itoa_u16	;wreg free
 28664  0028E0  261D               	addwf	__display_programming@cntr,f,c
 28665                           
 28666                           ;display.c: 630: display_content[2][cntr++] = '/';
 28667  0028E2  501D               	movf	__display_programming@cntr,w,c
 28668  0028E4  0D01               	mullw	1
 28669  0028E6  0EA3               	movlw	low (_display_content+40)
 28670  0028E8  24F3               	addwf	prodl,w,c
 28671  0028EA  6ED9               	movwf	fsr2l,c
 28672  0028EC  0E01               	movlw	high (_display_content+40)
 28673  0028EE  20F4               	addwfc	prodh,w,c
 28674  0028F0  6EDA               	movwf	fsr2h,c
 28675  0028F2  0E2F               	movlw	47
 28676  0028F4  6EDF               	movwf	indf2,c
 28677  0028F6  2A1D               	incf	__display_programming@cntr,f,c
 28678                           
 28679                           ;display.c: 631: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28680  0028F8  EC14  F03A         	call	_bootloader_get_total_entries	;wreg free
 28681  0028FC  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28682  002900  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28683  002904  501D               	movf	__display_programming@cntr,w,c
 28684  002906  0D01               	mullw	1
 28685  002908  0EA3               	movlw	low (_display_content+40)
 28686  00290A  24F3               	addwf	prodl,w,c
 28687  00290C  6E1B               	movwf	__display_itoa_u16@text,c
 28688  00290E  0E01               	movlw	high (_display_content+40)
 28689  002910  20F4               	addwfc	prodh,w,c
 28690  002912  6E1C               	movwf	__display_itoa_u16@text+1,c
 28691  002914  EC2A  F028         	call	__display_itoa_u16	;wreg free
 28692                           
 28693                           ;display.c: 633: cntr = 0;
 28694  002918  0E00               	movlw	0
 28695  00291A  6E1D               	movwf	__display_programming@cntr,c
 28696                           
 28697                           ;display.c: 634: while(programming_line4[cntr])
 28698  00291C  D017               	goto	l1704
 28699  00291E                     
 28700                           ;display.c: 635: display_content[3][cntr] = programming_line4[cntr++];
 28701  00291E  501D               	movf	__display_programming@cntr,w,c
 28702  002920  0D01               	mullw	1
 28703  002922  0EFD               	movlw	low _programming_line4
 28704  002924  24F3               	addwf	prodl,w,c
 28705  002926  6EF6               	movwf	tblptrl,c
 28706  002928  0E8C               	movlw	high _programming_line4
 28707  00292A  20F4               	addwfc	prodh,w,c
 28708  00292C  6EF7               	movwf	tblptrh,c
 28709  00292E                     	if	1	;There are 3 active tblptr bytes
 28710  00292E  6AF8               	clrf	tblptru,c
 28711  002930  0E00               	movlw	low (__mediumconst shr (0+16))
 28712  002932  22F8               	addwfc	tblptru,f,c
 28713  002934                     	endif
 28714  002934  501D               	movf	__display_programming@cntr,w,c
 28715  002936  0D01               	mullw	1
 28716  002938  0EB7               	movlw	low (_display_content+60)
 28717  00293A  24F3               	addwf	prodl,w,c
 28718  00293C  6ED9               	movwf	fsr2l,c
 28719  00293E  0E01               	movlw	high (_display_content+60)
 28720  002940  20F4               	addwfc	prodh,w,c
 28721  002942  6EDA               	movwf	fsr2h,c
 28722  002944  0008               	tblrd		*
 28723  002946  CFF5 FFDF          	movff	tablat,indf2
 28724  00294A  2A1D               	incf	__display_programming@cntr,f,c
 28725  00294C                     l1704:
 28726  00294C  501D               	movf	__display_programming@cntr,w,c
 28727  00294E  0D01               	mullw	1
 28728  002950  0EFD               	movlw	low _programming_line4
 28729  002952  24F3               	addwf	prodl,w,c
 28730  002954  6EF6               	movwf	tblptrl,c
 28731  002956  0E8C               	movlw	high _programming_line4
 28732  002958  20F4               	addwfc	prodh,w,c
 28733  00295A  6EF7               	movwf	tblptrh,c
 28734  00295C                     	if	1	;There are 3 active tblptr bytes
 28735  00295C  6AF8               	clrf	tblptru,c
 28736  00295E  0E00               	movlw	low (__mediumconst shr (0+16))
 28737  002960  22F8               	addwfc	tblptru,f,c
 28738  002962                     	endif
 28739  002962  0008               	tblrd		*
 28740  002964  50F5               	movf	tablat,w,c
 28741  002966  0900               	iorlw	0
 28742  002968  A4D8               	btfss	status,2,c
 28743  00296A  D7D9               	goto	l1705
 28744                           
 28745                           ;display.c: 636: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28746  00296C  EC0F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 28747  002970  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28748  002974  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28749  002978  501D               	movf	__display_programming@cntr,w,c
 28750  00297A  0D01               	mullw	1
 28751  00297C  0EB7               	movlw	low (_display_content+60)
 28752  00297E  24F3               	addwf	prodl,w,c
 28753  002980  6E1B               	movwf	__display_itoa_u16@text,c
 28754  002982  0E01               	movlw	high (_display_content+60)
 28755  002984  20F4               	addwfc	prodh,w,c
 28756  002986  6E1C               	movwf	__display_itoa_u16@text+1,c
 28757  002988  EC2A  F028         	call	__display_itoa_u16	;wreg free
 28758  00298C  0012               	return		;funcret
 28759  00298E                     __end_of__display_programming:
 28760                           	opt stack 0
 28761                           tosu	equ	0xFFF
 28762                           tosh	equ	0xFFE
 28763                           tosl	equ	0xFFD
 28764                           pclath	equ	0xFFA
 28765                           tblptru	equ	0xFF8
 28766                           tblptrh	equ	0xFF7
 28767                           tblptrl	equ	0xFF6
 28768                           tablat	equ	0xFF5
 28769                           prodh	equ	0xFF4
 28770                           prodl	equ	0xFF3
 28771                           intcon	equ	0xFF2
 28772                           intcon3	equ	0xFF0
 28773                           indf0	equ	0xFEF
 28774                           postinc0	equ	0xFEE
 28775                           fsr0h	equ	0xFEA
 28776                           fsr0l	equ	0xFE9
 28777                           wreg	equ	0xFE8
 28778                           indf1	equ	0xFE7
 28779                           postdec1	equ	0xFE5
 28780                           plusw1	equ	0xFE3
 28781                           fsr1h	equ	0xFE2
 28782                           fsr1l	equ	0xFE1
 28783                           indf2	equ	0xFDF
 28784                           postinc2	equ	0xFDE
 28785                           postdec2	equ	0xFDD
 28786                           plusw2	equ	0xFDB
 28787                           fsr2h	equ	0xFDA
 28788                           fsr2l	equ	0xFD9
 28789                           status	equ	0xFD8
 28790                           
 28791 ;; *************** function __display_found *****************
 28792 ;; Defined at:
 28793 ;;		line 500 in file "display.c"
 28794 ;; Parameters:    Size  Location     Type
 28795 ;;		None
 28796 ;; Auto vars:     Size  Location     Type
 28797 ;;  cntr            1   24[COMRAM] unsigned char 
 28798 ;;  start           1   23[COMRAM] unsigned char 
 28799 ;; Return value:  Size  Location     Type
 28800 ;;                  1    wreg      void 
 28801 ;; Registers used:
 28802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28803 ;; Tracked objects:
 28804 ;;		On entry : 0/0
 28805 ;;		On exit  : 0/0
 28806 ;;		Unchanged: 0/0
 28807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28809 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28811 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28812 ;;Total ram usage:        4 bytes
 28813 ;; Hardware stack levels used:    1
 28814 ;; Hardware stack levels required when called:    2
 28815 ;; This function calls:
 28816 ;;		__display_itoa_u32
 28817 ;;		_bootloader_get_file_size
 28818 ;; This function is called by:
 28819 ;;		_display_prepare
 28820 ;; This function uses a non-reentrant model
 28821 ;;
 28822                           
 28823                           	psect	text143
 28824  00222A                     __ptext143:
 28825                           	opt stack 0
 28826  00222A                     __display_found:
 28827                           	opt stack 24
 28828                           
 28829                           ;display.c: 502: uint8_t cntr;;display.c: 503: uint8_t start;;display.c: 505: cntr = 0;
 28830                           
 28831                           ;incstack = 0
 28832  00222A  0E00               	movlw	0
 28833  00222C  6E19               	movwf	__display_found@cntr,c
 28834                           
 28835                           ;display.c: 506: while(found_line1[cntr])
 28836  00222E  D017               	goto	l1616
 28837  002230                     
 28838                           ;display.c: 507: display_content[0][cntr] = found_line1[cntr++];
 28839  002230  5019               	movf	__display_found@cntr,w,c
 28840  002232  0D01               	mullw	1
 28841  002234  0E63               	movlw	low _found_line1
 28842  002236  24F3               	addwf	prodl,w,c
 28843  002238  6EF6               	movwf	tblptrl,c
 28844  00223A  0E8D               	movlw	high _found_line1
 28845  00223C  20F4               	addwfc	prodh,w,c
 28846  00223E  6EF7               	movwf	tblptrh,c
 28847  002240                     	if	1	;There are 3 active tblptr bytes
 28848  002240  6AF8               	clrf	tblptru,c
 28849  002242  0E00               	movlw	low (__mediumconst shr (0+16))
 28850  002244  22F8               	addwfc	tblptru,f,c
 28851  002246                     	endif
 28852  002246  5019               	movf	__display_found@cntr,w,c
 28853  002248  0D01               	mullw	1
 28854  00224A  0E7B               	movlw	low _display_content
 28855  00224C  24F3               	addwf	prodl,w,c
 28856  00224E  6ED9               	movwf	fsr2l,c
 28857  002250  0E01               	movlw	high _display_content
 28858  002252  20F4               	addwfc	prodh,w,c
 28859  002254  6EDA               	movwf	fsr2h,c
 28860  002256  0008               	tblrd		*
 28861  002258  CFF5 FFDF          	movff	tablat,indf2
 28862  00225C  2A19               	incf	__display_found@cntr,f,c
 28863  00225E                     l1616:
 28864  00225E  5019               	movf	__display_found@cntr,w,c
 28865  002260  0D01               	mullw	1
 28866  002262  0E63               	movlw	low _found_line1
 28867  002264  24F3               	addwf	prodl,w,c
 28868  002266  6EF6               	movwf	tblptrl,c
 28869  002268  0E8D               	movlw	high _found_line1
 28870  00226A  20F4               	addwfc	prodh,w,c
 28871  00226C  6EF7               	movwf	tblptrh,c
 28872  00226E                     	if	1	;There are 3 active tblptr bytes
 28873  00226E  6AF8               	clrf	tblptru,c
 28874  002270  0E00               	movlw	low (__mediumconst shr (0+16))
 28875  002272  22F8               	addwfc	tblptru,f,c
 28876  002274                     	endif
 28877  002274  0008               	tblrd		*
 28878  002276  50F5               	movf	tablat,w,c
 28879  002278  0900               	iorlw	0
 28880  00227A  A4D8               	btfss	status,2,c
 28881  00227C  D7D9               	goto	l1617
 28882                           
 28883                           ;display.c: 509: cntr = 0;
 28884  00227E  0E00               	movlw	0
 28885  002280  6E19               	movwf	__display_found@cntr,c
 28886                           
 28887                           ;display.c: 510: while(found_line2[cntr])
 28888  002282  D017               	goto	l1619
 28889  002284                     
 28890                           ;display.c: 511: display_content[1][cntr] = found_line2[cntr++];
 28891  002284  5019               	movf	__display_found@cntr,w,c
 28892  002286  0D01               	mullw	1
 28893  002288  0EF3               	movlw	low _found_line2
 28894  00228A  24F3               	addwf	prodl,w,c
 28895  00228C  6EF6               	movwf	tblptrl,c
 28896  00228E  0E8D               	movlw	high _found_line2
 28897  002290  20F4               	addwfc	prodh,w,c
 28898  002292  6EF7               	movwf	tblptrh,c
 28899  002294                     	if	1	;There are 3 active tblptr bytes
 28900  002294  6AF8               	clrf	tblptru,c
 28901  002296  0E00               	movlw	low (__mediumconst shr (0+16))
 28902  002298  22F8               	addwfc	tblptru,f,c
 28903  00229A                     	endif
 28904  00229A  5019               	movf	__display_found@cntr,w,c
 28905  00229C  0D01               	mullw	1
 28906  00229E  0E8F               	movlw	low (_display_content+20)
 28907  0022A0  24F3               	addwf	prodl,w,c
 28908  0022A2  6ED9               	movwf	fsr2l,c
 28909  0022A4  0E01               	movlw	high (_display_content+20)
 28910  0022A6  20F4               	addwfc	prodh,w,c
 28911  0022A8  6EDA               	movwf	fsr2h,c
 28912  0022AA  0008               	tblrd		*
 28913  0022AC  CFF5 FFDF          	movff	tablat,indf2
 28914  0022B0  2A19               	incf	__display_found@cntr,f,c
 28915  0022B2                     l1619:
 28916  0022B2  5019               	movf	__display_found@cntr,w,c
 28917  0022B4  0D01               	mullw	1
 28918  0022B6  0EF3               	movlw	low _found_line2
 28919  0022B8  24F3               	addwf	prodl,w,c
 28920  0022BA  6EF6               	movwf	tblptrl,c
 28921  0022BC  0E8D               	movlw	high _found_line2
 28922  0022BE  20F4               	addwfc	prodh,w,c
 28923  0022C0  6EF7               	movwf	tblptrh,c
 28924  0022C2                     	if	1	;There are 3 active tblptr bytes
 28925  0022C2  6AF8               	clrf	tblptru,c
 28926  0022C4  0E00               	movlw	low (__mediumconst shr (0+16))
 28927  0022C6  22F8               	addwfc	tblptru,f,c
 28928  0022C8                     	endif
 28929  0022C8  0008               	tblrd		*
 28930  0022CA  50F5               	movf	tablat,w,c
 28931  0022CC  0900               	iorlw	0
 28932  0022CE  A4D8               	btfss	status,2,c
 28933  0022D0  D7D9               	goto	l1620
 28934                           
 28935                           ;display.c: 513: cntr = 0;
 28936  0022D2  0E00               	movlw	0
 28937  0022D4  6E19               	movwf	__display_found@cntr,c
 28938                           
 28939                           ;display.c: 514: while(found_line3[cntr])
 28940  0022D6  D017               	goto	l1622
 28941  0022D8                     
 28942                           ;display.c: 515: display_content[2][cntr] = found_line3[cntr++];
 28943  0022D8  5019               	movf	__display_found@cntr,w,c
 28944  0022DA  0D01               	mullw	1
 28945  0022DC  0E65               	movlw	low _found_line3
 28946  0022DE  24F3               	addwf	prodl,w,c
 28947  0022E0  6EF6               	movwf	tblptrl,c
 28948  0022E2  0E8E               	movlw	high _found_line3
 28949  0022E4  20F4               	addwfc	prodh,w,c
 28950  0022E6  6EF7               	movwf	tblptrh,c
 28951  0022E8                     	if	1	;There are 3 active tblptr bytes
 28952  0022E8  6AF8               	clrf	tblptru,c
 28953  0022EA  0E00               	movlw	low (__mediumconst shr (0+16))
 28954  0022EC  22F8               	addwfc	tblptru,f,c
 28955  0022EE                     	endif
 28956  0022EE  5019               	movf	__display_found@cntr,w,c
 28957  0022F0  0D01               	mullw	1
 28958  0022F2  0EA3               	movlw	low (_display_content+40)
 28959  0022F4  24F3               	addwf	prodl,w,c
 28960  0022F6  6ED9               	movwf	fsr2l,c
 28961  0022F8  0E01               	movlw	high (_display_content+40)
 28962  0022FA  20F4               	addwfc	prodh,w,c
 28963  0022FC  6EDA               	movwf	fsr2h,c
 28964  0022FE  0008               	tblrd		*
 28965  002300  CFF5 FFDF          	movff	tablat,indf2
 28966  002304  2A19               	incf	__display_found@cntr,f,c
 28967  002306                     l1622:
 28968  002306  5019               	movf	__display_found@cntr,w,c
 28969  002308  0D01               	mullw	1
 28970  00230A  0E65               	movlw	low _found_line3
 28971  00230C  24F3               	addwf	prodl,w,c
 28972  00230E  6EF6               	movwf	tblptrl,c
 28973  002310  0E8E               	movlw	high _found_line3
 28974  002312  20F4               	addwfc	prodh,w,c
 28975  002314  6EF7               	movwf	tblptrh,c
 28976  002316                     	if	1	;There are 3 active tblptr bytes
 28977  002316  6AF8               	clrf	tblptru,c
 28978  002318  0E00               	movlw	low (__mediumconst shr (0+16))
 28979  00231A  22F8               	addwfc	tblptru,f,c
 28980  00231C                     	endif
 28981  00231C  0008               	tblrd		*
 28982  00231E  50F5               	movf	tablat,w,c
 28983  002320  0900               	iorlw	0
 28984  002322  A4D8               	btfss	status,2,c
 28985  002324  D7D9               	goto	l1623
 28986                           
 28987                           ;display.c: 516: start = cntr;
 28988  002326  C019  F018         	movff	__display_found@cntr,__display_found@start
 28989                           
 28990                           ;display.c: 517: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr+1]);
 28991  00232A  ECB5  F039         	call	_bootloader_get_file_size	;wreg free
 28992  00232E  C001  F00E         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28993  002332  C002  F00F         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28994  002336  C003  F010         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28995  00233A  C004  F011         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28996  00233E  5019               	movf	__display_found@cntr,w,c
 28997  002340  6E16               	movwf	??__display_found& (0+255),c
 28998  002342  6A17               	clrf	(??__display_found+1)& (0+255),c
 28999  002344  0E01               	movlw	1
 29000  002346  2616               	addwf	??__display_found,f,c
 29001  002348  0E00               	movlw	0
 29002  00234A  2217               	addwfc	??__display_found+1,f,c
 29003  00234C  0EA3               	movlw	low (_display_content+40)
 29004  00234E  2416               	addwf	??__display_found,w,c
 29005  002350  6E12               	movwf	__display_itoa_u32@text,c
 29006  002352  0E01               	movlw	high (_display_content+40)
 29007  002354  2017               	addwfc	??__display_found+1,w,c
 29008  002356  6E13               	movwf	__display_itoa_u32@text+1,c
 29009  002358  EC7F  F018         	call	__display_itoa_u32	;wreg free
 29010  00235C  2618               	addwf	__display_found@start,f,c
 29011                           
 29012                           ;display.c: 518: cntr = 0;
 29013  00235E  0E00               	movlw	0
 29014  002360  6E19               	movwf	__display_found@cntr,c
 29015                           
 29016                           ;display.c: 519: while(found_line3b[cntr])
 29017  002362  D01C               	goto	l1625
 29018  002364                     
 29019                           ;display.c: 520: display_content[2][start+cntr] = found_line3b[cntr++];
 29020  002364  5019               	movf	__display_found@cntr,w,c
 29021  002366  0D01               	mullw	1
 29022  002368  0E75               	movlw	low _found_line3b
 29023  00236A  24F3               	addwf	prodl,w,c
 29024  00236C  6EF6               	movwf	tblptrl,c
 29025  00236E  0E8E               	movlw	high _found_line3b
 29026  002370  20F4               	addwfc	prodh,w,c
 29027  002372  6EF7               	movwf	tblptrh,c
 29028  002374                     	if	1	;There are 3 active tblptr bytes
 29029  002374  6AF8               	clrf	tblptru,c
 29030  002376  0E00               	movlw	low (__mediumconst shr (0+16))
 29031  002378  22F8               	addwfc	tblptru,f,c
 29032  00237A                     	endif
 29033  00237A  5019               	movf	__display_found@cntr,w,c
 29034  00237C  C018  F016         	movff	__display_found@start,??__display_found
 29035  002380  6A17               	clrf	(??__display_found+1)& (0+255),c
 29036  002382  2616               	addwf	??__display_found,f,c
 29037  002384  0E00               	movlw	0
 29038  002386  2217               	addwfc	??__display_found+1,f,c
 29039  002388  0EA3               	movlw	low (_display_content+40)
 29040  00238A  2416               	addwf	??__display_found,w,c
 29041  00238C  6ED9               	movwf	fsr2l,c
 29042  00238E  0E01               	movlw	high (_display_content+40)
 29043  002390  2017               	addwfc	??__display_found+1,w,c
 29044  002392  6EDA               	movwf	fsr2h,c
 29045  002394  0008               	tblrd		*
 29046  002396  CFF5 FFDF          	movff	tablat,indf2
 29047  00239A  2A19               	incf	__display_found@cntr,f,c
 29048  00239C                     l1625:
 29049  00239C  5019               	movf	__display_found@cntr,w,c
 29050  00239E  0D01               	mullw	1
 29051  0023A0  0E75               	movlw	low _found_line3b
 29052  0023A2  24F3               	addwf	prodl,w,c
 29053  0023A4  6EF6               	movwf	tblptrl,c
 29054  0023A6  0E8E               	movlw	high _found_line3b
 29055  0023A8  20F4               	addwfc	prodh,w,c
 29056  0023AA  6EF7               	movwf	tblptrh,c
 29057  0023AC                     	if	1	;There are 3 active tblptr bytes
 29058  0023AC  6AF8               	clrf	tblptru,c
 29059  0023AE  0E00               	movlw	low (__mediumconst shr (0+16))
 29060  0023B0  22F8               	addwfc	tblptru,f,c
 29061  0023B2                     	endif
 29062  0023B2  0008               	tblrd		*
 29063  0023B4  50F5               	movf	tablat,w,c
 29064  0023B6  0900               	iorlw	0
 29065  0023B8  A4D8               	btfss	status,2,c
 29066  0023BA  D7D4               	goto	l1626
 29067                           
 29068                           ;display.c: 522: cntr = 0;
 29069  0023BC  0E00               	movlw	0
 29070  0023BE  6E19               	movwf	__display_found@cntr,c
 29071                           
 29072                           ;display.c: 523: while(found_line4[cntr])
 29073  0023C0  D017               	goto	l1628
 29074  0023C2                     
 29075                           ;display.c: 524: display_content[3][cntr] = found_line4[cntr++];
 29076  0023C2  5019               	movf	__display_found@cntr,w,c
 29077  0023C4  0D01               	mullw	1
 29078  0023C6  0E8E               	movlw	low _found_line4
 29079  0023C8  24F3               	addwf	prodl,w,c
 29080  0023CA  6EF6               	movwf	tblptrl,c
 29081  0023CC  0E8C               	movlw	high _found_line4
 29082  0023CE  20F4               	addwfc	prodh,w,c
 29083  0023D0  6EF7               	movwf	tblptrh,c
 29084  0023D2                     	if	1	;There are 3 active tblptr bytes
 29085  0023D2  6AF8               	clrf	tblptru,c
 29086  0023D4  0E00               	movlw	low (__mediumconst shr (0+16))
 29087  0023D6  22F8               	addwfc	tblptru,f,c
 29088  0023D8                     	endif
 29089  0023D8  5019               	movf	__display_found@cntr,w,c
 29090  0023DA  0D01               	mullw	1
 29091  0023DC  0EB7               	movlw	low (_display_content+60)
 29092  0023DE  24F3               	addwf	prodl,w,c
 29093  0023E0  6ED9               	movwf	fsr2l,c
 29094  0023E2  0E01               	movlw	high (_display_content+60)
 29095  0023E4  20F4               	addwfc	prodh,w,c
 29096  0023E6  6EDA               	movwf	fsr2h,c
 29097  0023E8  0008               	tblrd		*
 29098  0023EA  CFF5 FFDF          	movff	tablat,indf2
 29099  0023EE  2A19               	incf	__display_found@cntr,f,c
 29100  0023F0                     l1628:
 29101  0023F0  5019               	movf	__display_found@cntr,w,c
 29102  0023F2  0D01               	mullw	1
 29103  0023F4  0E8E               	movlw	low _found_line4
 29104  0023F6  24F3               	addwf	prodl,w,c
 29105  0023F8  6EF6               	movwf	tblptrl,c
 29106  0023FA  0E8C               	movlw	high _found_line4
 29107  0023FC  20F4               	addwfc	prodh,w,c
 29108  0023FE  6EF7               	movwf	tblptrh,c
 29109  002400                     	if	1	;There are 3 active tblptr bytes
 29110  002400  6AF8               	clrf	tblptru,c
 29111  002402  0E00               	movlw	low (__mediumconst shr (0+16))
 29112  002404  22F8               	addwfc	tblptru,f,c
 29113  002406                     	endif
 29114  002406  0008               	tblrd		*
 29115  002408  50F5               	movf	tablat,w,c
 29116  00240A  0900               	iorlw	0
 29117  00240C  B4D8               	btfsc	status,2,c
 29118  00240E  0012               	return	
 29119  002410  D7D8               	goto	l1629
 29120  002412                     __end_of__display_found:
 29121                           	opt stack 0
 29122                           tosu	equ	0xFFF
 29123                           tosh	equ	0xFFE
 29124                           tosl	equ	0xFFD
 29125                           pclath	equ	0xFFA
 29126                           tblptru	equ	0xFF8
 29127                           tblptrh	equ	0xFF7
 29128                           tblptrl	equ	0xFF6
 29129                           tablat	equ	0xFF5
 29130                           prodh	equ	0xFF4
 29131                           prodl	equ	0xFF3
 29132                           intcon	equ	0xFF2
 29133                           intcon3	equ	0xFF0
 29134                           indf0	equ	0xFEF
 29135                           postinc0	equ	0xFEE
 29136                           fsr0h	equ	0xFEA
 29137                           fsr0l	equ	0xFE9
 29138                           wreg	equ	0xFE8
 29139                           indf1	equ	0xFE7
 29140                           postdec1	equ	0xFE5
 29141                           plusw1	equ	0xFE3
 29142                           fsr1h	equ	0xFE2
 29143                           fsr1l	equ	0xFE1
 29144                           indf2	equ	0xFDF
 29145                           postinc2	equ	0xFDE
 29146                           postdec2	equ	0xFDD
 29147                           plusw2	equ	0xFDB
 29148                           fsr2h	equ	0xFDA
 29149                           fsr2l	equ	0xFD9
 29150                           status	equ	0xFD8
 29151                           
 29152 ;; *************** function _bootloader_get_file_size *****************
 29153 ;; Defined at:
 29154 ;;		line 463 in file "bootloader.c"
 29155 ;; Parameters:    Size  Location     Type
 29156 ;;		None
 29157 ;; Auto vars:     Size  Location     Type
 29158 ;;		None
 29159 ;; Return value:  Size  Location     Type
 29160 ;;                  4    0[COMRAM] unsigned long 
 29161 ;; Registers used:
 29162 ;;		None
 29163 ;; Tracked objects:
 29164 ;;		On entry : 0/0
 29165 ;;		On exit  : 0/0
 29166 ;;		Unchanged: 0/0
 29167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29172 ;;Total ram usage:        4 bytes
 29173 ;; Hardware stack levels used:    1
 29174 ;; This function calls:
 29175 ;;		Nothing
 29176 ;; This function is called by:
 29177 ;;		__display_found
 29178 ;;		__fill_buffer_get_bootloader_details
 29179 ;; This function uses a non-reentrant model
 29180 ;;
 29181                           
 29182                           	psect	text144
 29183  00736A                     __ptext144:
 29184                           	opt stack 0
 29185  00736A                     _bootloader_get_file_size:
 29186                           	opt stack 25
 29187                           
 29188                           ;bootloader.c: 465: return hex_file_size;
 29189                           
 29190                           ;incstack = 0
 29191  00736A  C07A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29192  00736E  C07B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29193  007372  C07C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29194  007376  C07D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29195  00737A  0012               	return		;funcret
 29196  00737C                     __end_of_bootloader_get_file_size:
 29197                           	opt stack 0
 29198                           tosu	equ	0xFFF
 29199                           tosh	equ	0xFFE
 29200                           tosl	equ	0xFFD
 29201                           pclath	equ	0xFFA
 29202                           tblptru	equ	0xFF8
 29203                           tblptrh	equ	0xFF7
 29204                           tblptrl	equ	0xFF6
 29205                           tablat	equ	0xFF5
 29206                           prodh	equ	0xFF4
 29207                           prodl	equ	0xFF3
 29208                           intcon	equ	0xFF2
 29209                           intcon3	equ	0xFF0
 29210                           indf0	equ	0xFEF
 29211                           postinc0	equ	0xFEE
 29212                           fsr0h	equ	0xFEA
 29213                           fsr0l	equ	0xFE9
 29214                           wreg	equ	0xFE8
 29215                           indf1	equ	0xFE7
 29216                           postdec1	equ	0xFE5
 29217                           plusw1	equ	0xFE3
 29218                           fsr1h	equ	0xFE2
 29219                           fsr1l	equ	0xFE1
 29220                           indf2	equ	0xFDF
 29221                           postinc2	equ	0xFDE
 29222                           postdec2	equ	0xFDD
 29223                           plusw2	equ	0xFDB
 29224                           fsr2h	equ	0xFDA
 29225                           fsr2l	equ	0xFD9
 29226                           status	equ	0xFD8
 29227                           
 29228 ;; *************** function __display_failed *****************
 29229 ;; Defined at:
 29230 ;;		line 565 in file "display.c"
 29231 ;; Parameters:    Size  Location     Type
 29232 ;;		None
 29233 ;; Auto vars:     Size  Location     Type
 29234 ;;  cntr            1   28[COMRAM] unsigned char 
 29235 ;;  start           1    0        unsigned char 
 29236 ;; Return value:  Size  Location     Type
 29237 ;;                  1    wreg      void 
 29238 ;; Registers used:
 29239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29240 ;; Tracked objects:
 29241 ;;		On entry : 0/0
 29242 ;;		On exit  : 0/0
 29243 ;;		Unchanged: 0/0
 29244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29246 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29248 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29249 ;;Total ram usage:        1 bytes
 29250 ;; Hardware stack levels used:    1
 29251 ;; Hardware stack levels required when called:    4
 29252 ;; This function calls:
 29253 ;;		__display_itoa_u16
 29254 ;;		__display_itoa_u32
 29255 ;;		_bootloader_get_entries
 29256 ;;		_bootloader_get_error
 29257 ;;		_bootloader_get_rec_address
 29258 ;; This function is called by:
 29259 ;;		_display_prepare
 29260 ;; This function uses a non-reentrant model
 29261 ;;
 29262                           
 29263                           	psect	text145
 29264  000F2C                     __ptext145:
 29265                           	opt stack 0
 29266  000F2C                     __display_failed:
 29267                           	opt stack 22
 29268                           
 29269                           ;display.c: 567: uint8_t cntr;;display.c: 568: uint8_t start;;display.c: 569: cntr = 0;
 29270                           
 29271                           ;incstack = 0
 29272  000F2C  0E00               	movlw	0
 29273  000F2E  6E1D               	movwf	__display_failed@cntr,c
 29274                           
 29275                           ;display.c: 570: while(failed_line1[cntr])
 29276  000F30  D017               	goto	l1661
 29277  000F32                     
 29278                           ;display.c: 571: display_content[0][cntr] = failed_line1[cntr++];
 29279  000F32  501D               	movf	__display_failed@cntr,w,c
 29280  000F34  0D01               	mullw	1
 29281  000F36  0E30               	movlw	low _failed_line1
 29282  000F38  24F3               	addwf	prodl,w,c
 29283  000F3A  6EF6               	movwf	tblptrl,c
 29284  000F3C  0E8D               	movlw	high _failed_line1
 29285  000F3E  20F4               	addwfc	prodh,w,c
 29286  000F40  6EF7               	movwf	tblptrh,c
 29287  000F42                     	if	1	;There are 3 active tblptr bytes
 29288  000F42  6AF8               	clrf	tblptru,c
 29289  000F44  0E00               	movlw	low (__mediumconst shr (0+16))
 29290  000F46  22F8               	addwfc	tblptru,f,c
 29291  000F48                     	endif
 29292  000F48  501D               	movf	__display_failed@cntr,w,c
 29293  000F4A  0D01               	mullw	1
 29294  000F4C  0E7B               	movlw	low _display_content
 29295  000F4E  24F3               	addwf	prodl,w,c
 29296  000F50  6ED9               	movwf	fsr2l,c
 29297  000F52  0E01               	movlw	high _display_content
 29298  000F54  20F4               	addwfc	prodh,w,c
 29299  000F56  6EDA               	movwf	fsr2h,c
 29300  000F58  0008               	tblrd		*
 29301  000F5A  CFF5 FFDF          	movff	tablat,indf2
 29302  000F5E  2A1D               	incf	__display_failed@cntr,f,c
 29303  000F60                     l1661:
 29304  000F60  501D               	movf	__display_failed@cntr,w,c
 29305  000F62  0D01               	mullw	1
 29306  000F64  0E30               	movlw	low _failed_line1
 29307  000F66  24F3               	addwf	prodl,w,c
 29308  000F68  6EF6               	movwf	tblptrl,c
 29309  000F6A  0E8D               	movlw	high _failed_line1
 29310  000F6C  20F4               	addwfc	prodh,w,c
 29311  000F6E  6EF7               	movwf	tblptrh,c
 29312  000F70                     	if	1	;There are 3 active tblptr bytes
 29313  000F70  6AF8               	clrf	tblptru,c
 29314  000F72  0E00               	movlw	low (__mediumconst shr (0+16))
 29315  000F74  22F8               	addwfc	tblptru,f,c
 29316  000F76                     	endif
 29317  000F76  0008               	tblrd		*
 29318  000F78  50F5               	movf	tablat,w,c
 29319  000F7A  0900               	iorlw	0
 29320  000F7C  A4D8               	btfss	status,2,c
 29321  000F7E  D7D9               	goto	l1662
 29322                           
 29323                           ;display.c: 572: cntr = 0;
 29324  000F80  0E00               	movlw	0
 29325  000F82  6E1D               	movwf	__display_failed@cntr,c
 29326                           
 29327                           ;display.c: 573: while(failed_line2[cntr])
 29328  000F84  D017               	goto	l1664
 29329  000F86                     
 29330                           ;display.c: 574: display_content[1][cntr] = failed_line2[cntr++];
 29331  000F86  501D               	movf	__display_failed@cntr,w,c
 29332  000F88  0D01               	mullw	1
 29333  000F8A  0EA7               	movlw	low _failed_line2
 29334  000F8C  24F3               	addwf	prodl,w,c
 29335  000F8E  6EF6               	movwf	tblptrl,c
 29336  000F90  0E8D               	movlw	high _failed_line2
 29337  000F92  20F4               	addwfc	prodh,w,c
 29338  000F94  6EF7               	movwf	tblptrh,c
 29339  000F96                     	if	1	;There are 3 active tblptr bytes
 29340  000F96  6AF8               	clrf	tblptru,c
 29341  000F98  0E00               	movlw	low (__mediumconst shr (0+16))
 29342  000F9A  22F8               	addwfc	tblptru,f,c
 29343  000F9C                     	endif
 29344  000F9C  501D               	movf	__display_failed@cntr,w,c
 29345  000F9E  0D01               	mullw	1
 29346  000FA0  0E8F               	movlw	low (_display_content+20)
 29347  000FA2  24F3               	addwf	prodl,w,c
 29348  000FA4  6ED9               	movwf	fsr2l,c
 29349  000FA6  0E01               	movlw	high (_display_content+20)
 29350  000FA8  20F4               	addwfc	prodh,w,c
 29351  000FAA  6EDA               	movwf	fsr2h,c
 29352  000FAC  0008               	tblrd		*
 29353  000FAE  CFF5 FFDF          	movff	tablat,indf2
 29354  000FB2  2A1D               	incf	__display_failed@cntr,f,c
 29355  000FB4                     l1664:
 29356  000FB4  501D               	movf	__display_failed@cntr,w,c
 29357  000FB6  0D01               	mullw	1
 29358  000FB8  0EA7               	movlw	low _failed_line2
 29359  000FBA  24F3               	addwf	prodl,w,c
 29360  000FBC  6EF6               	movwf	tblptrl,c
 29361  000FBE  0E8D               	movlw	high _failed_line2
 29362  000FC0  20F4               	addwfc	prodh,w,c
 29363  000FC2  6EF7               	movwf	tblptrh,c
 29364  000FC4                     	if	1	;There are 3 active tblptr bytes
 29365  000FC4  6AF8               	clrf	tblptru,c
 29366  000FC6  0E00               	movlw	low (__mediumconst shr (0+16))
 29367  000FC8  22F8               	addwfc	tblptru,f,c
 29368  000FCA                     	endif
 29369  000FCA  0008               	tblrd		*
 29370  000FCC  50F5               	movf	tablat,w,c
 29371  000FCE  0900               	iorlw	0
 29372  000FD0  A4D8               	btfss	status,2,c
 29373  000FD2  D7D9               	goto	l1665
 29374                           
 29375                           ;display.c: 576: cntr = 0;
 29376  000FD4  0E00               	movlw	0
 29377  000FD6  6E1D               	movwf	__display_failed@cntr,c
 29378                           
 29379                           ;display.c: 577: switch(bootloader_get_error())
 29380  000FD8  D0D6               	goto	l1667
 29381  000FDA                     
 29382                           ;display.c: 581: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29383  000FDA  501D               	movf	__display_failed@cntr,w,c
 29384  000FDC  0D01               	mullw	1
 29385  000FDE  0E64               	movlw	low _failed_line3_startCode
 29386  000FE0  24F3               	addwf	prodl,w,c
 29387  000FE2  6EF6               	movwf	tblptrl,c
 29388  000FE4  0E8C               	movlw	high _failed_line3_startCode
 29389  000FE6  20F4               	addwfc	prodh,w,c
 29390  000FE8  6EF7               	movwf	tblptrh,c
 29391  000FEA                     	if	1	;There are 3 active tblptr bytes
 29392  000FEA  6AF8               	clrf	tblptru,c
 29393  000FEC  0E00               	movlw	low (__mediumconst shr (0+16))
 29394  000FEE  22F8               	addwfc	tblptru,f,c
 29395  000FF0                     	endif
 29396  000FF0  501D               	movf	__display_failed@cntr,w,c
 29397  000FF2  0D01               	mullw	1
 29398  000FF4  0EA3               	movlw	low (_display_content+40)
 29399  000FF6  24F3               	addwf	prodl,w,c
 29400  000FF8  6ED9               	movwf	fsr2l,c
 29401  000FFA  0E01               	movlw	high (_display_content+40)
 29402  000FFC  20F4               	addwfc	prodh,w,c
 29403  000FFE  6EDA               	movwf	fsr2h,c
 29404  001000  0008               	tblrd		*
 29405  001002  CFF5 FFDF          	movff	tablat,indf2
 29406  001006  2A1D               	incf	__display_failed@cntr,f,c
 29407  001008  501D               	movf	__display_failed@cntr,w,c
 29408  00100A  0D01               	mullw	1
 29409  00100C  0E64               	movlw	low _failed_line3_startCode
 29410  00100E  24F3               	addwf	prodl,w,c
 29411  001010  6EF6               	movwf	tblptrl,c
 29412  001012  0E8C               	movlw	high _failed_line3_startCode
 29413  001014  20F4               	addwfc	prodh,w,c
 29414  001016  6EF7               	movwf	tblptrh,c
 29415  001018                     	if	1	;There are 3 active tblptr bytes
 29416  001018  6AF8               	clrf	tblptru,c
 29417  00101A  0E00               	movlw	low (__mediumconst shr (0+16))
 29418  00101C  22F8               	addwfc	tblptru,f,c
 29419  00101E                     	endif
 29420  00101E  0008               	tblrd		*
 29421  001020  50F5               	movf	tablat,w,c
 29422  001022  0900               	iorlw	0
 29423  001024  B4D8               	btfsc	status,2,c
 29424  001026  D0C0               	goto	l1672
 29425  001028  D7D8               	goto	l1670
 29426  00102A                     
 29427                           ;display.c: 586: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29428  00102A  501D               	movf	__display_failed@cntr,w,c
 29429  00102C  0D01               	mullw	1
 29430  00102E  0E1F               	movlw	low _failed_line3_checksum
 29431  001030  24F3               	addwf	prodl,w,c
 29432  001032  6EF6               	movwf	tblptrl,c
 29433  001034  0E8D               	movlw	high _failed_line3_checksum
 29434  001036  20F4               	addwfc	prodh,w,c
 29435  001038  6EF7               	movwf	tblptrh,c
 29436  00103A                     	if	1	;There are 3 active tblptr bytes
 29437  00103A  6AF8               	clrf	tblptru,c
 29438  00103C  0E00               	movlw	low (__mediumconst shr (0+16))
 29439  00103E  22F8               	addwfc	tblptru,f,c
 29440  001040                     	endif
 29441  001040  501D               	movf	__display_failed@cntr,w,c
 29442  001042  0D01               	mullw	1
 29443  001044  0EA3               	movlw	low (_display_content+40)
 29444  001046  24F3               	addwf	prodl,w,c
 29445  001048  6ED9               	movwf	fsr2l,c
 29446  00104A  0E01               	movlw	high (_display_content+40)
 29447  00104C  20F4               	addwfc	prodh,w,c
 29448  00104E  6EDA               	movwf	fsr2h,c
 29449  001050  0008               	tblrd		*
 29450  001052  CFF5 FFDF          	movff	tablat,indf2
 29451  001056  2A1D               	incf	__display_failed@cntr,f,c
 29452  001058  501D               	movf	__display_failed@cntr,w,c
 29453  00105A  0D01               	mullw	1
 29454  00105C  0E1F               	movlw	low _failed_line3_checksum
 29455  00105E  24F3               	addwf	prodl,w,c
 29456  001060  6EF6               	movwf	tblptrl,c
 29457  001062  0E8D               	movlw	high _failed_line3_checksum
 29458  001064  20F4               	addwfc	prodh,w,c
 29459  001066  6EF7               	movwf	tblptrh,c
 29460  001068                     	if	1	;There are 3 active tblptr bytes
 29461  001068  6AF8               	clrf	tblptru,c
 29462  00106A  0E00               	movlw	low (__mediumconst shr (0+16))
 29463  00106C  22F8               	addwfc	tblptru,f,c
 29464  00106E                     	endif
 29465  00106E  0008               	tblrd		*
 29466  001070  50F5               	movf	tablat,w,c
 29467  001072  0900               	iorlw	0
 29468  001074  B4D8               	btfsc	status,2,c
 29469  001076  D098               	goto	l1672
 29470  001078  D7D8               	goto	l1675
 29471  00107A                     
 29472                           ;display.c: 593: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29473  00107A  501D               	movf	__display_failed@cntr,w,c
 29474  00107C  0D01               	mullw	1
 29475  00107E  0E4F               	movlw	low _failed_line3_noNextRecord
 29476  001080  24F3               	addwf	prodl,w,c
 29477  001082  6EF6               	movwf	tblptrl,c
 29478  001084  0E8C               	movlw	high _failed_line3_noNextRecord
 29479  001086  20F4               	addwfc	prodh,w,c
 29480  001088  6EF7               	movwf	tblptrh,c
 29481  00108A                     	if	1	;There are 3 active tblptr bytes
 29482  00108A  6AF8               	clrf	tblptru,c
 29483  00108C  0E00               	movlw	low (__mediumconst shr (0+16))
 29484  00108E  22F8               	addwfc	tblptru,f,c
 29485  001090                     	endif
 29486  001090  501D               	movf	__display_failed@cntr,w,c
 29487  001092  0D01               	mullw	1
 29488  001094  0EA3               	movlw	low (_display_content+40)
 29489  001096  24F3               	addwf	prodl,w,c
 29490  001098  6ED9               	movwf	fsr2l,c
 29491  00109A  0E01               	movlw	high (_display_content+40)
 29492  00109C  20F4               	addwfc	prodh,w,c
 29493  00109E  6EDA               	movwf	fsr2h,c
 29494  0010A0  0008               	tblrd		*
 29495  0010A2  CFF5 FFDF          	movff	tablat,indf2
 29496  0010A6  2A1D               	incf	__display_failed@cntr,f,c
 29497  0010A8  501D               	movf	__display_failed@cntr,w,c
 29498  0010AA  0D01               	mullw	1
 29499  0010AC  0E4F               	movlw	low _failed_line3_noNextRecord
 29500  0010AE  24F3               	addwf	prodl,w,c
 29501  0010B0  6EF6               	movwf	tblptrl,c
 29502  0010B2  0E8C               	movlw	high _failed_line3_noNextRecord
 29503  0010B4  20F4               	addwfc	prodh,w,c
 29504  0010B6  6EF7               	movwf	tblptrh,c
 29505  0010B8                     	if	1	;There are 3 active tblptr bytes
 29506  0010B8  6AF8               	clrf	tblptru,c
 29507  0010BA  0E00               	movlw	low (__mediumconst shr (0+16))
 29508  0010BC  22F8               	addwfc	tblptru,f,c
 29509  0010BE                     	endif
 29510  0010BE  0008               	tblrd		*
 29511  0010C0  50F5               	movf	tablat,w,c
 29512  0010C2  0900               	iorlw	0
 29513  0010C4  B4D8               	btfsc	status,2,c
 29514  0010C6  D070               	goto	l1672
 29515  0010C8  D7D8               	goto	l1679
 29516  0010CA                     
 29517                           ;display.c: 598: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29518  0010CA  501D               	movf	__display_failed@cntr,w,c
 29519  0010CC  0D01               	mullw	1
 29520  0010CE  0EC7               	movlw	low _failed_line3_dataTooLong
 29521  0010D0  24F3               	addwf	prodl,w,c
 29522  0010D2  6EF6               	movwf	tblptrl,c
 29523  0010D4  0E8D               	movlw	high _failed_line3_dataTooLong
 29524  0010D6  20F4               	addwfc	prodh,w,c
 29525  0010D8  6EF7               	movwf	tblptrh,c
 29526  0010DA                     	if	1	;There are 3 active tblptr bytes
 29527  0010DA  6AF8               	clrf	tblptru,c
 29528  0010DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29529  0010DE  22F8               	addwfc	tblptru,f,c
 29530  0010E0                     	endif
 29531  0010E0  501D               	movf	__display_failed@cntr,w,c
 29532  0010E2  0D01               	mullw	1
 29533  0010E4  0EA3               	movlw	low (_display_content+40)
 29534  0010E6  24F3               	addwf	prodl,w,c
 29535  0010E8  6ED9               	movwf	fsr2l,c
 29536  0010EA  0E01               	movlw	high (_display_content+40)
 29537  0010EC  20F4               	addwfc	prodh,w,c
 29538  0010EE  6EDA               	movwf	fsr2h,c
 29539  0010F0  0008               	tblrd		*
 29540  0010F2  CFF5 FFDF          	movff	tablat,indf2
 29541  0010F6  2A1D               	incf	__display_failed@cntr,f,c
 29542  0010F8  501D               	movf	__display_failed@cntr,w,c
 29543  0010FA  0D01               	mullw	1
 29544  0010FC  0EC7               	movlw	low _failed_line3_dataTooLong
 29545  0010FE  24F3               	addwf	prodl,w,c
 29546  001100  6EF6               	movwf	tblptrl,c
 29547  001102  0E8D               	movlw	high _failed_line3_dataTooLong
 29548  001104  20F4               	addwfc	prodh,w,c
 29549  001106  6EF7               	movwf	tblptrh,c
 29550  001108                     	if	1	;There are 3 active tblptr bytes
 29551  001108  6AF8               	clrf	tblptru,c
 29552  00110A  0E00               	movlw	low (__mediumconst shr (0+16))
 29553  00110C  22F8               	addwfc	tblptru,f,c
 29554  00110E                     	endif
 29555  00110E  0008               	tblrd		*
 29556  001110  50F5               	movf	tablat,w,c
 29557  001112  0900               	iorlw	0
 29558  001114  B4D8               	btfsc	status,2,c
 29559  001116  D048               	goto	l1672
 29560  001118  D7D8               	goto	l1683
 29561  00111A                     
 29562                           ;display.c: 603: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 29563  00111A  501D               	movf	__display_failed@cntr,w,c
 29564  00111C  0D01               	mullw	1
 29565  00111E  0EA3               	movlw	low _failed_line3_addressRange
 29566  001120  24F3               	addwf	prodl,w,c
 29567  001122  6EF6               	movwf	tblptrl,c
 29568  001124  0E8C               	movlw	high _failed_line3_addressRange
 29569  001126  20F4               	addwfc	prodh,w,c
 29570  001128  6EF7               	movwf	tblptrh,c
 29571  00112A                     	if	1	;There are 3 active tblptr bytes
 29572  00112A  6AF8               	clrf	tblptru,c
 29573  00112C  0E00               	movlw	low (__mediumconst shr (0+16))
 29574  00112E  22F8               	addwfc	tblptru,f,c
 29575  001130                     	endif
 29576  001130  501D               	movf	__display_failed@cntr,w,c
 29577  001132  0D01               	mullw	1
 29578  001134  0EA3               	movlw	low (_display_content+40)
 29579  001136  24F3               	addwf	prodl,w,c
 29580  001138  6ED9               	movwf	fsr2l,c
 29581  00113A  0E01               	movlw	high (_display_content+40)
 29582  00113C  20F4               	addwfc	prodh,w,c
 29583  00113E  6EDA               	movwf	fsr2h,c
 29584  001140  0008               	tblrd		*
 29585  001142  CFF5 FFDF          	movff	tablat,indf2
 29586  001146  2A1D               	incf	__display_failed@cntr,f,c
 29587  001148  501D               	movf	__display_failed@cntr,w,c
 29588  00114A  0D01               	mullw	1
 29589  00114C  0EA3               	movlw	low _failed_line3_addressRange
 29590  00114E  24F3               	addwf	prodl,w,c
 29591  001150  6EF6               	movwf	tblptrl,c
 29592  001152  0E8C               	movlw	high _failed_line3_addressRange
 29593  001154  20F4               	addwfc	prodh,w,c
 29594  001156  6EF7               	movwf	tblptrh,c
 29595  001158                     	if	1	;There are 3 active tblptr bytes
 29596  001158  6AF8               	clrf	tblptru,c
 29597  00115A  0E00               	movlw	low (__mediumconst shr (0+16))
 29598  00115C  22F8               	addwfc	tblptru,f,c
 29599  00115E                     	endif
 29600  00115E  0008               	tblrd		*
 29601  001160  50F5               	movf	tablat,w,c
 29602  001162  0900               	iorlw	0
 29603  001164  A4D8               	btfss	status,2,c
 29604  001166  D7D9               	goto	l1687
 29605                           
 29606                           ;display.c: 604: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29607  001168  EC05  F03A         	call	_bootloader_get_rec_address	;wreg free
 29608  00116C  C001  F00E         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29609  001170  C002  F00F         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29610  001174  6A10               	clrf	__display_itoa_u32@value+2,c
 29611  001176  6A11               	clrf	__display_itoa_u32@value+3,c
 29612  001178  0EC5               	movlw	low (_display_content+74)
 29613  00117A  6E12               	movwf	__display_itoa_u32@text,c
 29614  00117C  0E01               	movlw	high (_display_content+74)
 29615  00117E  6E13               	movwf	__display_itoa_u32@text+1,c
 29616  001180  EC7F  F018         	call	__display_itoa_u32	;wreg free
 29617                           
 29618                           ;display.c: 607: }
 29619                           
 29620                           ;display.c: 605: break;
 29621  001184  D011               	goto	l1672
 29622  001186                     l1667:
 29623  001186  EC34  F03A         	call	_bootloader_get_error	;wreg free
 29624                           
 29625                           ; Switch size 1, requested type "space"
 29626                           ; Number of cases is 5, Range of values is 11 to 15
 29627                           ; switch strategies available:
 29628                           ; Name         Instructions Cycles
 29629                           ; simple_byte           16     9 (average)
 29630                           ;	Chosen strategy is simple_byte
 29631  00118A  0A0B               	xorlw	11	; case 11
 29632  00118C  B4D8               	btfsc	status,2,c
 29633  00118E  D7DC               	goto	l1686
 29634  001190  0A07               	xorlw	7	; case 12
 29635  001192  B4D8               	btfsc	status,2,c
 29636  001194  D7B1               	goto	l1682
 29637  001196  0A01               	xorlw	1	; case 13
 29638  001198  B4D8               	btfsc	status,2,c
 29639  00119A  D786               	goto	l1678
 29640  00119C  0A03               	xorlw	3	; case 14
 29641  00119E  B4D8               	btfsc	status,2,c
 29642  0011A0  D75B               	goto	l1674
 29643  0011A2  0A01               	xorlw	1	; case 15
 29644  0011A4  B4D8               	btfsc	status,2,c
 29645  0011A6  D730               	goto	l1669
 29646  0011A8                     l1672:
 29647                           
 29648                           ;display.c: 609: cntr = 0;
 29649  0011A8  0E00               	movlw	0
 29650  0011AA  6E1D               	movwf	__display_failed@cntr,c
 29651                           
 29652                           ;display.c: 610: while(failed_line4[cntr])
 29653  0011AC  D017               	goto	l1689
 29654  0011AE                     
 29655                           ;display.c: 611: display_content[3][cntr] = failed_line4[cntr++];
 29656  0011AE  501D               	movf	__display_failed@cntr,w,c
 29657  0011B0  0D01               	mullw	1
 29658  0011B2  0E3A               	movlw	low _failed_line4
 29659  0011B4  24F3               	addwf	prodl,w,c
 29660  0011B6  6EF6               	movwf	tblptrl,c
 29661  0011B8  0E8E               	movlw	high _failed_line4
 29662  0011BA  20F4               	addwfc	prodh,w,c
 29663  0011BC  6EF7               	movwf	tblptrh,c
 29664  0011BE                     	if	1	;There are 3 active tblptr bytes
 29665  0011BE  6AF8               	clrf	tblptru,c
 29666  0011C0  0E00               	movlw	low (__mediumconst shr (0+16))
 29667  0011C2  22F8               	addwfc	tblptru,f,c
 29668  0011C4                     	endif
 29669  0011C4  501D               	movf	__display_failed@cntr,w,c
 29670  0011C6  0D01               	mullw	1
 29671  0011C8  0EB7               	movlw	low (_display_content+60)
 29672  0011CA  24F3               	addwf	prodl,w,c
 29673  0011CC  6ED9               	movwf	fsr2l,c
 29674  0011CE  0E01               	movlw	high (_display_content+60)
 29675  0011D0  20F4               	addwfc	prodh,w,c
 29676  0011D2  6EDA               	movwf	fsr2h,c
 29677  0011D4  0008               	tblrd		*
 29678  0011D6  CFF5 FFDF          	movff	tablat,indf2
 29679  0011DA  2A1D               	incf	__display_failed@cntr,f,c
 29680  0011DC                     l1689:
 29681  0011DC  501D               	movf	__display_failed@cntr,w,c
 29682  0011DE  0D01               	mullw	1
 29683  0011E0  0E3A               	movlw	low _failed_line4
 29684  0011E2  24F3               	addwf	prodl,w,c
 29685  0011E4  6EF6               	movwf	tblptrl,c
 29686  0011E6  0E8E               	movlw	high _failed_line4
 29687  0011E8  20F4               	addwfc	prodh,w,c
 29688  0011EA  6EF7               	movwf	tblptrh,c
 29689  0011EC                     	if	1	;There are 3 active tblptr bytes
 29690  0011EC  6AF8               	clrf	tblptru,c
 29691  0011EE  0E00               	movlw	low (__mediumconst shr (0+16))
 29692  0011F0  22F8               	addwfc	tblptru,f,c
 29693  0011F2                     	endif
 29694  0011F2  0008               	tblrd		*
 29695  0011F4  50F5               	movf	tablat,w,c
 29696  0011F6  0900               	iorlw	0
 29697  0011F8  A4D8               	btfss	status,2,c
 29698  0011FA  D7D9               	goto	l1690
 29699                           
 29700                           ;display.c: 612: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29701  0011FC  EC0A  F03A         	call	_bootloader_get_entries	;wreg free
 29702  001200  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29703  001204  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29704  001208  501D               	movf	__display_failed@cntr,w,c
 29705  00120A  0D01               	mullw	1
 29706  00120C  0EB7               	movlw	low (_display_content+60)
 29707  00120E  24F3               	addwf	prodl,w,c
 29708  001210  6E1B               	movwf	__display_itoa_u16@text,c
 29709  001212  0E01               	movlw	high (_display_content+60)
 29710  001214  20F4               	addwfc	prodh,w,c
 29711  001216  6E1C               	movwf	__display_itoa_u16@text+1,c
 29712  001218  EC2A  F028         	call	__display_itoa_u16	;wreg free
 29713  00121C  0012               	return		;funcret
 29714  00121E                     __end_of__display_failed:
 29715                           	opt stack 0
 29716                           tosu	equ	0xFFF
 29717                           tosh	equ	0xFFE
 29718                           tosl	equ	0xFFD
 29719                           pclath	equ	0xFFA
 29720                           tblptru	equ	0xFF8
 29721                           tblptrh	equ	0xFF7
 29722                           tblptrl	equ	0xFF6
 29723                           tablat	equ	0xFF5
 29724                           prodh	equ	0xFF4
 29725                           prodl	equ	0xFF3
 29726                           intcon	equ	0xFF2
 29727                           intcon3	equ	0xFF0
 29728                           indf0	equ	0xFEF
 29729                           postinc0	equ	0xFEE
 29730                           fsr0h	equ	0xFEA
 29731                           fsr0l	equ	0xFE9
 29732                           wreg	equ	0xFE8
 29733                           indf1	equ	0xFE7
 29734                           postdec1	equ	0xFE5
 29735                           plusw1	equ	0xFE3
 29736                           fsr1h	equ	0xFE2
 29737                           fsr1l	equ	0xFE1
 29738                           indf2	equ	0xFDF
 29739                           postinc2	equ	0xFDE
 29740                           postdec2	equ	0xFDD
 29741                           plusw2	equ	0xFDB
 29742                           fsr2h	equ	0xFDA
 29743                           fsr2l	equ	0xFD9
 29744                           status	equ	0xFD8
 29745                           
 29746 ;; *************** function _bootloader_get_rec_address *****************
 29747 ;; Defined at:
 29748 ;;		line 488 in file "bootloader.c"
 29749 ;; Parameters:    Size  Location     Type
 29750 ;;		None
 29751 ;; Auto vars:     Size  Location     Type
 29752 ;;		None
 29753 ;; Return value:  Size  Location     Type
 29754 ;;                  2    0[COMRAM] unsigned int 
 29755 ;; Registers used:
 29756 ;;		None
 29757 ;; Tracked objects:
 29758 ;;		On entry : 0/0
 29759 ;;		On exit  : 0/0
 29760 ;;		Unchanged: 0/0
 29761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29766 ;;Total ram usage:        2 bytes
 29767 ;; Hardware stack levels used:    1
 29768 ;; This function calls:
 29769 ;;		Nothing
 29770 ;; This function is called by:
 29771 ;;		__display_failed
 29772 ;;		__fill_buffer_get_bootloader_details
 29773 ;; This function uses a non-reentrant model
 29774 ;;
 29775                           
 29776                           	psect	text146
 29777  00740A                     __ptext146:
 29778                           	opt stack 0
 29779  00740A                     _bootloader_get_rec_address:
 29780                           	opt stack 25
 29781                           
 29782                           ;bootloader.c: 491: return hex_file_entry.address;
 29783                           
 29784                           ;incstack = 0
 29785  00740A  C1CD  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29786  00740E  C1CE  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29787  007412  0012               	return		;funcret
 29788  007414                     __end_of_bootloader_get_rec_address:
 29789                           	opt stack 0
 29790                           tosu	equ	0xFFF
 29791                           tosh	equ	0xFFE
 29792                           tosl	equ	0xFFD
 29793                           pclath	equ	0xFFA
 29794                           tblptru	equ	0xFF8
 29795                           tblptrh	equ	0xFF7
 29796                           tblptrl	equ	0xFF6
 29797                           tablat	equ	0xFF5
 29798                           prodh	equ	0xFF4
 29799                           prodl	equ	0xFF3
 29800                           intcon	equ	0xFF2
 29801                           intcon3	equ	0xFF0
 29802                           indf0	equ	0xFEF
 29803                           postinc0	equ	0xFEE
 29804                           fsr0h	equ	0xFEA
 29805                           fsr0l	equ	0xFE9
 29806                           wreg	equ	0xFE8
 29807                           indf1	equ	0xFE7
 29808                           postdec1	equ	0xFE5
 29809                           plusw1	equ	0xFE3
 29810                           fsr1h	equ	0xFE2
 29811                           fsr1l	equ	0xFE1
 29812                           indf2	equ	0xFDF
 29813                           postinc2	equ	0xFDE
 29814                           postdec2	equ	0xFDD
 29815                           plusw2	equ	0xFDB
 29816                           fsr2h	equ	0xFDA
 29817                           fsr2l	equ	0xFD9
 29818                           status	equ	0xFD8
 29819                           
 29820 ;; *************** function _bootloader_get_error *****************
 29821 ;; Defined at:
 29822 ;;		line 478 in file "bootloader.c"
 29823 ;; Parameters:    Size  Location     Type
 29824 ;;		None
 29825 ;; Auto vars:     Size  Location     Type
 29826 ;;		None
 29827 ;; Return value:  Size  Location     Type
 29828 ;;                  1    wreg      enum E7008
 29829 ;; Registers used:
 29830 ;;		wreg, status,2
 29831 ;; Tracked objects:
 29832 ;;		On entry : 0/0
 29833 ;;		On exit  : 0/0
 29834 ;;		Unchanged: 0/0
 29835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29840 ;;Total ram usage:        0 bytes
 29841 ;; Hardware stack levels used:    1
 29842 ;; This function calls:
 29843 ;;		Nothing
 29844 ;; This function is called by:
 29845 ;;		__display_failed
 29846 ;;		__fill_buffer_get_bootloader_details
 29847 ;; This function uses a non-reentrant model
 29848 ;;
 29849                           
 29850                           	psect	text147
 29851  007468                     __ptext147:
 29852                           	opt stack 0
 29853  007468                     _bootloader_get_error:
 29854                           	opt stack 25
 29855                           
 29856                           ;bootloader.c: 480: return last_error;
 29857                           
 29858                           ;incstack = 0
 29859  007468  0100               	movlb	0	; () banked
 29860  00746A  5192               	movf	_last_error& (0+255),w,b
 29861  00746C  0012               	return	
 29862  00746E                     __end_of_bootloader_get_error:
 29863                           	opt stack 0
 29864                           tosu	equ	0xFFF
 29865                           tosh	equ	0xFFE
 29866                           tosl	equ	0xFFD
 29867                           pclath	equ	0xFFA
 29868                           tblptru	equ	0xFF8
 29869                           tblptrh	equ	0xFF7
 29870                           tblptrl	equ	0xFF6
 29871                           tablat	equ	0xFF5
 29872                           prodh	equ	0xFF4
 29873                           prodl	equ	0xFF3
 29874                           intcon	equ	0xFF2
 29875                           intcon3	equ	0xFF0
 29876                           indf0	equ	0xFEF
 29877                           postinc0	equ	0xFEE
 29878                           fsr0h	equ	0xFEA
 29879                           fsr0l	equ	0xFE9
 29880                           wreg	equ	0xFE8
 29881                           indf1	equ	0xFE7
 29882                           postdec1	equ	0xFE5
 29883                           plusw1	equ	0xFE3
 29884                           fsr1h	equ	0xFE2
 29885                           fsr1l	equ	0xFE1
 29886                           indf2	equ	0xFDF
 29887                           postinc2	equ	0xFDE
 29888                           postdec2	equ	0xFDD
 29889                           plusw2	equ	0xFDB
 29890                           fsr2h	equ	0xFDA
 29891                           fsr2l	equ	0xFD9
 29892                           status	equ	0xFD8
 29893                           
 29894 ;; *************** function _bootloader_get_entries *****************
 29895 ;; Defined at:
 29896 ;;		line 468 in file "bootloader.c"
 29897 ;; Parameters:    Size  Location     Type
 29898 ;;		None
 29899 ;; Auto vars:     Size  Location     Type
 29900 ;;		None
 29901 ;; Return value:  Size  Location     Type
 29902 ;;                  2    0[COMRAM] unsigned int 
 29903 ;; Registers used:
 29904 ;;		None
 29905 ;; Tracked objects:
 29906 ;;		On entry : 0/0
 29907 ;;		On exit  : 0/0
 29908 ;;		Unchanged: 0/0
 29909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29913 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29914 ;;Total ram usage:        2 bytes
 29915 ;; Hardware stack levels used:    1
 29916 ;; This function calls:
 29917 ;;		Nothing
 29918 ;; This function is called by:
 29919 ;;		__display_verify
 29920 ;;		__display_failed
 29921 ;;		__display_programming
 29922 ;;		__fill_buffer_get_bootloader_details
 29923 ;; This function uses a non-reentrant model
 29924 ;;
 29925                           
 29926                           	psect	text148
 29927  007414                     __ptext148:
 29928                           	opt stack 0
 29929  007414                     _bootloader_get_entries:
 29930                           	opt stack 25
 29931                           
 29932                           ;bootloader.c: 470: return hex_file_entries;
 29933                           
 29934                           ; BSR set to: 0
 29935                           ;incstack = 0
 29936  007414  C169  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29937  007418  C16A  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29938  00741C  0012               	return		;funcret
 29939  00741E                     __end_of_bootloader_get_entries:
 29940                           	opt stack 0
 29941                           tosu	equ	0xFFF
 29942                           tosh	equ	0xFFE
 29943                           tosl	equ	0xFFD
 29944                           pclath	equ	0xFFA
 29945                           tblptru	equ	0xFF8
 29946                           tblptrh	equ	0xFF7
 29947                           tblptrl	equ	0xFF6
 29948                           tablat	equ	0xFF5
 29949                           prodh	equ	0xFF4
 29950                           prodl	equ	0xFF3
 29951                           intcon	equ	0xFF2
 29952                           intcon3	equ	0xFF0
 29953                           indf0	equ	0xFEF
 29954                           postinc0	equ	0xFEE
 29955                           fsr0h	equ	0xFEA
 29956                           fsr0l	equ	0xFE9
 29957                           wreg	equ	0xFE8
 29958                           indf1	equ	0xFE7
 29959                           postdec1	equ	0xFE5
 29960                           plusw1	equ	0xFE3
 29961                           fsr1h	equ	0xFE2
 29962                           fsr1l	equ	0xFE1
 29963                           indf2	equ	0xFDF
 29964                           postinc2	equ	0xFDE
 29965                           postdec2	equ	0xFDD
 29966                           plusw2	equ	0xFDB
 29967                           fsr2h	equ	0xFDA
 29968                           fsr2l	equ	0xFD9
 29969                           status	equ	0xFD8
 29970                           
 29971 ;; *************** function __display_itoa_u32 *****************
 29972 ;; Defined at:
 29973 ;;		line 283 in file "display.c"
 29974 ;; Parameters:    Size  Location     Type
 29975 ;;  value           4   13[COMRAM] unsigned long 
 29976 ;;  text            2   17[COMRAM] PTR unsigned char 
 29977 ;;		 -> display_content(80), 
 29978 ;; Auto vars:     Size  Location     Type
 29979 ;;  number_of_di    1   20[COMRAM] unsigned char 
 29980 ;;  cntr            1   19[COMRAM] char 
 29981 ;; Return value:  Size  Location     Type
 29982 ;;                  1    wreg      unsigned char 
 29983 ;; Registers used:
 29984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29985 ;; Tracked objects:
 29986 ;;		On entry : 0/0
 29987 ;;		On exit  : 0/0
 29988 ;;		Unchanged: 0/0
 29989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29990 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29994 ;;Total ram usage:        8 bytes
 29995 ;; Hardware stack levels used:    1
 29996 ;; Hardware stack levels required when called:    1
 29997 ;; This function calls:
 29998 ;;		___lldiv
 29999 ;;		___llmod
 30000 ;;		___wmul
 30001 ;; This function is called by:
 30002 ;;		__display_found
 30003 ;;		__display_failed
 30004 ;; This function uses a non-reentrant model
 30005 ;;
 30006                           
 30007                           	psect	text149
 30008  0030FE                     __ptext149:
 30009                           	opt stack 0
 30010  0030FE                     __display_itoa_u32:
 30011                           	opt stack 24
 30012                           
 30013                           ;display.c: 285: uint8_t number_of_digits;;display.c: 286: int8_t cntr;;display.c: 289: 
      +                          if(value<10) {number_of_digits = 1;}
 30014                           
 30015                           ;incstack = 0
 30016  0030FE  5011               	movf	__display_itoa_u32@value+3,w,c
 30017  003100  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30018  003102  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30019  003104  E106               	bnz	l10493
 30020  003106  0E0A               	movlw	10
 30021  003108  5C0E               	subwf	__display_itoa_u32@value,w,c
 30022  00310A  B0D8               	btfsc	status,0,c
 30023  00310C  D002               	goto	l1520
 30024  00310E  0E01               	movlw	1
 30025  003110  D059               	goto	L42
 30026  003112                     l1520:
 30027  003112                     l10493:
 30028                           
 30029                           ;display.c: 290: else if(value<100) {number_of_digits = 2;}
 30030  003112  5011               	movf	__display_itoa_u32@value+3,w,c
 30031  003114  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30032  003116  100F               	iorwf	__display_itoa_u32@value+1,w,c
 30033  003118  E106               	bnz	l10497
 30034  00311A  0E64               	movlw	100
 30035  00311C  5C0E               	subwf	__display_itoa_u32@value,w,c
 30036  00311E  B0D8               	btfsc	status,0,c
 30037  003120  D002               	goto	l1522
 30038  003122  0E02               	movlw	2
 30039  003124  D04F               	goto	L42
 30040  003126                     l1522:
 30041  003126                     l10497:
 30042                           
 30043                           ;display.c: 291: else if(value<1000) {number_of_digits = 3;}
 30044  003126  5011               	movf	__display_itoa_u32@value+3,w,c
 30045  003128  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30046  00312A  E108               	bnz	l10501
 30047  00312C  0EE8               	movlw	232
 30048  00312E  5C0E               	subwf	__display_itoa_u32@value,w,c
 30049  003130  0E03               	movlw	3
 30050  003132  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30051  003134  B0D8               	btfsc	status,0,c
 30052  003136  D002               	goto	l1524
 30053  003138  0E03               	movlw	3
 30054  00313A  D044               	goto	L42
 30055  00313C                     l1524:
 30056  00313C                     l10501:
 30057                           
 30058                           ;display.c: 292: else if(value<10000) {number_of_digits = 4;}
 30059  00313C  5011               	movf	__display_itoa_u32@value+3,w,c
 30060  00313E  1010               	iorwf	__display_itoa_u32@value+2,w,c
 30061  003140  E108               	bnz	l10505
 30062  003142  0E10               	movlw	16
 30063  003144  5C0E               	subwf	__display_itoa_u32@value,w,c
 30064  003146  0E27               	movlw	39
 30065  003148  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30066  00314A  B0D8               	btfsc	status,0,c
 30067  00314C  D002               	goto	l1526
 30068  00314E  0E04               	movlw	4
 30069  003150  D039               	goto	L42
 30070  003152                     l1526:
 30071  003152                     l10505:
 30072                           
 30073                           ;display.c: 293: else if(value<100000) {number_of_digits = 5;}
 30074  003152  5011               	movf	__display_itoa_u32@value+3,w,c
 30075  003154  E10A               	bnz	l10509
 30076  003156  0EA0               	movlw	160
 30077  003158  5C0E               	subwf	__display_itoa_u32@value,w,c
 30078  00315A  0E86               	movlw	134
 30079  00315C  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30080  00315E  0E01               	movlw	1
 30081  003160  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30082  003162  B0D8               	btfsc	status,0,c
 30083  003164  D002               	goto	l1528
 30084  003166  0E05               	movlw	5
 30085  003168  D02D               	goto	L42
 30086  00316A                     l1528:
 30087  00316A                     l10509:
 30088                           
 30089                           ;display.c: 294: else if(value<1000000) {number_of_digits = 6;}
 30090  00316A  5011               	movf	__display_itoa_u32@value+3,w,c
 30091  00316C  E10A               	bnz	l10513
 30092  00316E  0E40               	movlw	64
 30093  003170  5C0E               	subwf	__display_itoa_u32@value,w,c
 30094  003172  0E42               	movlw	66
 30095  003174  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30096  003176  0E0F               	movlw	15
 30097  003178  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30098  00317A  B0D8               	btfsc	status,0,c
 30099  00317C  D002               	goto	l1530
 30100  00317E  0E06               	movlw	6
 30101  003180  D021               	goto	L42
 30102  003182                     l1530:
 30103  003182                     l10513:
 30104                           
 30105                           ;display.c: 295: else if(value<10000000) {number_of_digits = 7;}
 30106  003182  5011               	movf	__display_itoa_u32@value+3,w,c
 30107  003184  E10A               	bnz	l10517
 30108  003186  0E80               	movlw	128
 30109  003188  5C0E               	subwf	__display_itoa_u32@value,w,c
 30110  00318A  0E96               	movlw	150
 30111  00318C  580F               	subwfb	__display_itoa_u32@value+1,w,c
 30112  00318E  0E98               	movlw	152
 30113  003190  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30114  003192  B0D8               	btfsc	status,0,c
 30115  003194  D002               	goto	l1532
 30116  003196  0E07               	movlw	7
 30117  003198  D015               	goto	L42
 30118  00319A                     l1532:
 30119  00319A                     l10517:
 30120                           
 30121                           ;display.c: 296: else if(value<100000000) {number_of_digits = 8;}
 30122  00319A  0EE1               	movlw	225
 30123  00319C  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30124  00319E  0EF5               	movlw	245
 30125  0031A0  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30126  0031A2  0E05               	movlw	5
 30127  0031A4  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30128  0031A6  B0D8               	btfsc	status,0,c
 30129  0031A8  D002               	goto	l1534
 30130  0031AA  0E08               	movlw	8
 30131  0031AC  D00B               	goto	L42
 30132  0031AE                     l1534:
 30133                           
 30134                           ;display.c: 297: else if(value<1000000000) {number_of_digits = 9;}
 30135  0031AE  0ECA               	movlw	202
 30136  0031B0  5C0F               	subwf	__display_itoa_u32@value+1,w,c
 30137  0031B2  0E9A               	movlw	154
 30138  0031B4  5810               	subwfb	__display_itoa_u32@value+2,w,c
 30139  0031B6  0E3B               	movlw	59
 30140  0031B8  5811               	subwfb	__display_itoa_u32@value+3,w,c
 30141  0031BA  B0D8               	btfsc	status,0,c
 30142  0031BC  D002               	goto	l1536
 30143  0031BE  0E09               	movlw	9
 30144  0031C0  D001               	goto	L42
 30145  0031C2                     l1536:
 30146                           
 30147                           ;display.c: 298: else {number_of_digits = 10;}
 30148  0031C2  0E0A               	movlw	10
 30149  0031C4                     L42:
 30150  0031C4  6E15               	movwf	__display_itoa_u32@number_of_digits,c
 30151                           
 30152                           ;display.c: 300: for(cntr=number_of_digits-1; cntr>=0; --cntr)
 30153  0031C6  0415               	decf	__display_itoa_u32@number_of_digits,w,c
 30154  0031C8  6E14               	movwf	__display_itoa_u32@cntr,c
 30155  0031CA                     l10529:
 30156  0031CA  BE14               	btfsc	__display_itoa_u32@cntr,7,c
 30157  0031CC  D042               	goto	u8100
 30158                           
 30159                           ;display.c: 301: {;display.c: 302: text[cntr] = (value%10) + 0x30;
 30160  0031CE  5014               	movf	__display_itoa_u32@cntr,w,c
 30161  0031D0  6E01               	movwf	___wmul@multiplier,c
 30162  0031D2  6A02               	clrf	___wmul@multiplier+1,c
 30163  0031D4  BE01               	btfsc	___wmul@multiplier,7,c
 30164  0031D6  0602               	decf	___wmul@multiplier+1,f,c
 30165  0031D8  0E00               	movlw	0
 30166  0031DA  6E04               	movwf	___wmul@multiplicand+1,c
 30167  0031DC  0E01               	movlw	1
 30168  0031DE  6E03               	movwf	___wmul@multiplicand,c
 30169  0031E0  EC6C  F038         	call	___wmul	;wreg free
 30170  0031E4  5001               	movf	?___wmul,w,c
 30171  0031E6  2412               	addwf	__display_itoa_u32@text,w,c
 30172  0031E8  6ED9               	movwf	fsr2l,c
 30173  0031EA  5002               	movf	?___wmul+1,w,c
 30174  0031EC  2013               	addwfc	__display_itoa_u32@text+1,w,c
 30175  0031EE  6EDA               	movwf	fsr2h,c
 30176  0031F0  C00E  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30177  0031F4  C00F  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30178  0031F8  C010  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30179  0031FC  C011  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30180  003200  0E0A               	movlw	10
 30181  003202  6E05               	movwf	___llmod@divisor,c
 30182  003204  0E00               	movlw	0
 30183  003206  6E06               	movwf	___llmod@divisor+1,c
 30184  003208  0E00               	movlw	0
 30185  00320A  6E07               	movwf	___llmod@divisor+2,c
 30186  00320C  0E00               	movlw	0
 30187  00320E  6E08               	movwf	___llmod@divisor+3,c
 30188  003210  EC3A  F031         	call	___llmod	;wreg free
 30189  003214  5001               	movf	?___llmod,w,c
 30190  003216  0F30               	addlw	48
 30191  003218  6EDF               	movwf	indf2,c
 30192                           
 30193                           ;display.c: 303: value /= 10;
 30194  00321A  C00E  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30195  00321E  C00F  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30196  003222  C010  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30197  003226  C011  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30198  00322A  0E0A               	movlw	10
 30199  00322C  6E05               	movwf	___lldiv@divisor,c
 30200  00322E  0E00               	movlw	0
 30201  003230  6E06               	movwf	___lldiv@divisor+1,c
 30202  003232  0E00               	movlw	0
 30203  003234  6E07               	movwf	___lldiv@divisor+2,c
 30204  003236  0E00               	movlw	0
 30205  003238  6E08               	movwf	___lldiv@divisor+3,c
 30206  00323A  EC90  F02E         	call	___lldiv	;wreg free
 30207  00323E  C001  F00E         	movff	?___lldiv,__display_itoa_u32@value
 30208  003242  C002  F00F         	movff	?___lldiv+1,__display_itoa_u32@value+1
 30209  003246  C003  F010         	movff	?___lldiv+2,__display_itoa_u32@value+2
 30210  00324A  C004  F011         	movff	?___lldiv+3,__display_itoa_u32@value+3
 30211  00324E  0614               	decf	__display_itoa_u32@cntr,f,c
 30212  003250  D7BC               	goto	l10529
 30213  003252                     u8100:
 30214                           
 30215                           ;display.c: 304: };display.c: 306: return number_of_digits;
 30216  003252  5015               	movf	__display_itoa_u32@number_of_digits,w,c
 30217  003254  0012               	return	
 30218  003256                     __end_of__display_itoa_u32:
 30219                           	opt stack 0
 30220                           tosu	equ	0xFFF
 30221                           tosh	equ	0xFFE
 30222                           tosl	equ	0xFFD
 30223                           pclath	equ	0xFFA
 30224                           tblptru	equ	0xFF8
 30225                           tblptrh	equ	0xFF7
 30226                           tblptrl	equ	0xFF6
 30227                           tablat	equ	0xFF5
 30228                           prodh	equ	0xFF4
 30229                           prodl	equ	0xFF3
 30230                           intcon	equ	0xFF2
 30231                           intcon3	equ	0xFF0
 30232                           indf0	equ	0xFEF
 30233                           postinc0	equ	0xFEE
 30234                           fsr0h	equ	0xFEA
 30235                           fsr0l	equ	0xFE9
 30236                           wreg	equ	0xFE8
 30237                           indf1	equ	0xFE7
 30238                           postdec1	equ	0xFE5
 30239                           plusw1	equ	0xFE3
 30240                           fsr1h	equ	0xFE2
 30241                           fsr1l	equ	0xFE1
 30242                           indf2	equ	0xFDF
 30243                           postinc2	equ	0xFDE
 30244                           postdec2	equ	0xFDD
 30245                           plusw2	equ	0xFDB
 30246                           fsr2h	equ	0xFDA
 30247                           fsr2l	equ	0xFD9
 30248                           status	equ	0xFD8
 30249                           
 30250 ;; *************** function ___wmul *****************
 30251 ;; Defined at:
 30252 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 30253 ;; Parameters:    Size  Location     Type
 30254 ;;  multiplier      2    0[COMRAM] unsigned int 
 30255 ;;  multiplicand    2    2[COMRAM] unsigned int 
 30256 ;; Auto vars:     Size  Location     Type
 30257 ;;  product         2    4[COMRAM] unsigned int 
 30258 ;; Return value:  Size  Location     Type
 30259 ;;                  2    0[COMRAM] unsigned int 
 30260 ;; Registers used:
 30261 ;;		wreg, status,2, status,0, prodl, prodh
 30262 ;; Tracked objects:
 30263 ;;		On entry : 0/0
 30264 ;;		On exit  : 0/0
 30265 ;;		Unchanged: 0/0
 30266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30271 ;;Total ram usage:        6 bytes
 30272 ;; Hardware stack levels used:    1
 30273 ;; This function calls:
 30274 ;;		Nothing
 30275 ;; This function is called by:
 30276 ;;		__display_itoa_u32
 30277 ;; This function uses a non-reentrant model
 30278 ;;
 30279                           
 30280                           	psect	text150
 30281  0070D8                     __ptext150:
 30282                           	opt stack 0
 30283  0070D8                     ___wmul:
 30284                           	opt stack 24
 30285                           
 30286                           ;incstack = 0
 30287  0070D8  5001               	movf	___wmul@multiplier,w,c
 30288  0070DA  0203               	mulwf	___wmul@multiplicand,c
 30289  0070DC  CFF3 F005          	movff	prodl,___wmul@product
 30290  0070E0  CFF4 F006          	movff	prodh,___wmul@product+1
 30291  0070E4  5001               	movf	___wmul@multiplier,w,c
 30292  0070E6  0204               	mulwf	___wmul@multiplicand+1,c
 30293  0070E8  50F3               	movf	prodl,w,c
 30294  0070EA  2606               	addwf	___wmul@product+1,f,c
 30295  0070EC  5002               	movf	___wmul@multiplier+1,w,c
 30296  0070EE  0203               	mulwf	___wmul@multiplicand,c
 30297  0070F0  50F3               	movf	prodl,w,c
 30298  0070F2  2606               	addwf	___wmul@product+1,f,c
 30299  0070F4  C005  F001         	movff	___wmul@product,?___wmul
 30300  0070F8  C006  F002         	movff	___wmul@product+1,?___wmul+1
 30301  0070FC  0012               	return	
 30302  0070FE                     __end_of___wmul:
 30303                           	opt stack 0
 30304                           tosu	equ	0xFFF
 30305                           tosh	equ	0xFFE
 30306                           tosl	equ	0xFFD
 30307                           pclath	equ	0xFFA
 30308                           tblptru	equ	0xFF8
 30309                           tblptrh	equ	0xFF7
 30310                           tblptrl	equ	0xFF6
 30311                           tablat	equ	0xFF5
 30312                           prodh	equ	0xFF4
 30313                           prodl	equ	0xFF3
 30314                           intcon	equ	0xFF2
 30315                           intcon3	equ	0xFF0
 30316                           indf0	equ	0xFEF
 30317                           postinc0	equ	0xFEE
 30318                           fsr0h	equ	0xFEA
 30319                           fsr0l	equ	0xFE9
 30320                           wreg	equ	0xFE8
 30321                           indf1	equ	0xFE7
 30322                           postdec1	equ	0xFE5
 30323                           plusw1	equ	0xFE3
 30324                           fsr1h	equ	0xFE2
 30325                           fsr1l	equ	0xFE1
 30326                           indf2	equ	0xFDF
 30327                           postinc2	equ	0xFDE
 30328                           postdec2	equ	0xFDD
 30329                           plusw2	equ	0xFDB
 30330                           fsr2h	equ	0xFDA
 30331                           fsr2l	equ	0xFD9
 30332                           status	equ	0xFD8
 30333                           
 30334 ;; *************** function ___llmod *****************
 30335 ;; Defined at:
 30336 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30337 ;; Parameters:    Size  Location     Type
 30338 ;;  dividend        4    0[COMRAM] unsigned long 
 30339 ;;  divisor         4    4[COMRAM] unsigned long 
 30340 ;; Auto vars:     Size  Location     Type
 30341 ;;  counter         1    8[COMRAM] unsigned char 
 30342 ;; Return value:  Size  Location     Type
 30343 ;;                  4    0[COMRAM] unsigned long 
 30344 ;; Registers used:
 30345 ;;		wreg, status,2, status,0
 30346 ;; Tracked objects:
 30347 ;;		On entry : 0/0
 30348 ;;		On exit  : 0/0
 30349 ;;		Unchanged: 0/0
 30350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30351 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30354 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30355 ;;Total ram usage:        9 bytes
 30356 ;; Hardware stack levels used:    1
 30357 ;; This function calls:
 30358 ;;		Nothing
 30359 ;; This function is called by:
 30360 ;;		__display_itoa_u32
 30361 ;; This function uses a non-reentrant model
 30362 ;;
 30363                           
 30364                           	psect	text151
 30365  006274                     __ptext151:
 30366                           	opt stack 0
 30367  006274                     ___llmod:
 30368                           	opt stack 24
 30369                           
 30370                           ;incstack = 0
 30371  006274  5005               	movf	___llmod@divisor,w,c
 30372  006276  1006               	iorwf	___llmod@divisor+1,w,c
 30373  006278  1007               	iorwf	___llmod@divisor+2,w,c
 30374  00627A  1008               	iorwf	___llmod@divisor+3,w,c
 30375  00627C  B4D8               	btfsc	status,2,c
 30376  00627E  D024               	goto	l3277
 30377  006280  0E01               	movlw	1
 30378  006282  6E09               	movwf	___llmod@counter,c
 30379  006284  D006               	goto	l3272
 30380  006286  90D8               	bcf	status,0,c
 30381  006288  3605               	rlcf	___llmod@divisor,f,c
 30382  00628A  3606               	rlcf	___llmod@divisor+1,f,c
 30383  00628C  3607               	rlcf	___llmod@divisor+2,f,c
 30384  00628E  3608               	rlcf	___llmod@divisor+3,f,c
 30385  006290  2A09               	incf	___llmod@counter,f,c
 30386  006292                     l3272:
 30387  006292  AE08               	btfss	___llmod@divisor+3,7,c
 30388  006294  D7F8               	goto	l3273
 30389  006296                     u7590:
 30390  006296  5005               	movf	___llmod@divisor,w,c
 30391  006298  5C01               	subwf	___llmod@dividend,w,c
 30392  00629A  5006               	movf	___llmod@divisor+1,w,c
 30393  00629C  5802               	subwfb	___llmod@dividend+1,w,c
 30394  00629E  5007               	movf	___llmod@divisor+2,w,c
 30395  0062A0  5803               	subwfb	___llmod@dividend+2,w,c
 30396  0062A2  5008               	movf	___llmod@divisor+3,w,c
 30397  0062A4  5804               	subwfb	___llmod@dividend+3,w,c
 30398  0062A6  A0D8               	btfss	status,0,c
 30399  0062A8  D008               	goto	l3276
 30400  0062AA  5005               	movf	___llmod@divisor,w,c
 30401  0062AC  5E01               	subwf	___llmod@dividend,f,c
 30402  0062AE  5006               	movf	___llmod@divisor+1,w,c
 30403  0062B0  5A02               	subwfb	___llmod@dividend+1,f,c
 30404  0062B2  5007               	movf	___llmod@divisor+2,w,c
 30405  0062B4  5A03               	subwfb	___llmod@dividend+2,f,c
 30406  0062B6  5008               	movf	___llmod@divisor+3,w,c
 30407  0062B8  5A04               	subwfb	___llmod@dividend+3,f,c
 30408  0062BA                     l3276:
 30409  0062BA  90D8               	bcf	status,0,c
 30410  0062BC  3208               	rrcf	___llmod@divisor+3,f,c
 30411  0062BE  3207               	rrcf	___llmod@divisor+2,f,c
 30412  0062C0  3206               	rrcf	___llmod@divisor+1,f,c
 30413  0062C2  3205               	rrcf	___llmod@divisor,f,c
 30414  0062C4  2E09               	decfsz	___llmod@counter,f,c
 30415  0062C6  D7E7               	goto	u7590
 30416  0062C8                     l3277:
 30417  0062C8  C001  F001         	movff	___llmod@dividend,?___llmod
 30418  0062CC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30419  0062D0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30420  0062D4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30421  0062D8  0012               	return		;funcret
 30422  0062DA                     __end_of___llmod:
 30423                           	opt stack 0
 30424                           tosu	equ	0xFFF
 30425                           tosh	equ	0xFFE
 30426                           tosl	equ	0xFFD
 30427                           pclath	equ	0xFFA
 30428                           tblptru	equ	0xFF8
 30429                           tblptrh	equ	0xFF7
 30430                           tblptrl	equ	0xFF6
 30431                           tablat	equ	0xFF5
 30432                           prodh	equ	0xFF4
 30433                           prodl	equ	0xFF3
 30434                           intcon	equ	0xFF2
 30435                           intcon3	equ	0xFF0
 30436                           indf0	equ	0xFEF
 30437                           postinc0	equ	0xFEE
 30438                           fsr0h	equ	0xFEA
 30439                           fsr0l	equ	0xFE9
 30440                           wreg	equ	0xFE8
 30441                           indf1	equ	0xFE7
 30442                           postdec1	equ	0xFE5
 30443                           plusw1	equ	0xFE3
 30444                           fsr1h	equ	0xFE2
 30445                           fsr1l	equ	0xFE1
 30446                           indf2	equ	0xFDF
 30447                           postinc2	equ	0xFDE
 30448                           postdec2	equ	0xFDD
 30449                           plusw2	equ	0xFDB
 30450                           fsr2h	equ	0xFDA
 30451                           fsr2l	equ	0xFD9
 30452                           status	equ	0xFD8
 30453                           
 30454 ;; *************** function ___lldiv *****************
 30455 ;; Defined at:
 30456 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30457 ;; Parameters:    Size  Location     Type
 30458 ;;  dividend        4    0[COMRAM] unsigned long 
 30459 ;;  divisor         4    4[COMRAM] unsigned long 
 30460 ;; Auto vars:     Size  Location     Type
 30461 ;;  quotient        4    8[COMRAM] unsigned long 
 30462 ;;  counter         1   12[COMRAM] unsigned char 
 30463 ;; Return value:  Size  Location     Type
 30464 ;;                  4    0[COMRAM] unsigned long 
 30465 ;; Registers used:
 30466 ;;		wreg, status,2, status,0
 30467 ;; Tracked objects:
 30468 ;;		On entry : 0/0
 30469 ;;		On exit  : 0/0
 30470 ;;		Unchanged: 0/0
 30471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30472 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30473 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30475 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30476 ;;Total ram usage:       13 bytes
 30477 ;; Hardware stack levels used:    1
 30478 ;; This function calls:
 30479 ;;		Nothing
 30480 ;; This function is called by:
 30481 ;;		__display_itoa_u32
 30482 ;; This function uses a non-reentrant model
 30483 ;;
 30484                           
 30485                           	psect	text152
 30486  005D20                     __ptext152:
 30487                           	opt stack 0
 30488  005D20                     ___lldiv:
 30489                           	opt stack 24
 30490                           
 30491                           ;incstack = 0
 30492  005D20  0E00               	movlw	0
 30493  005D22  6E09               	movwf	___lldiv@quotient,c
 30494  005D24  0E00               	movlw	0
 30495  005D26  6E0A               	movwf	___lldiv@quotient+1,c
 30496  005D28  0E00               	movlw	0
 30497  005D2A  6E0B               	movwf	___lldiv@quotient+2,c
 30498  005D2C  0E00               	movlw	0
 30499  005D2E  6E0C               	movwf	___lldiv@quotient+3,c
 30500  005D30  5005               	movf	___lldiv@divisor,w,c
 30501  005D32  1006               	iorwf	___lldiv@divisor+1,w,c
 30502  005D34  1007               	iorwf	___lldiv@divisor+2,w,c
 30503  005D36  1008               	iorwf	___lldiv@divisor+3,w,c
 30504  005D38  B4D8               	btfsc	status,2,c
 30505  005D3A  D02A               	goto	l2896
 30506  005D3C  0E01               	movlw	1
 30507  005D3E  6E0D               	movwf	___lldiv@counter,c
 30508  005D40  D006               	goto	l2891
 30509  005D42  90D8               	bcf	status,0,c
 30510  005D44  3605               	rlcf	___lldiv@divisor,f,c
 30511  005D46  3606               	rlcf	___lldiv@divisor+1,f,c
 30512  005D48  3607               	rlcf	___lldiv@divisor+2,f,c
 30513  005D4A  3608               	rlcf	___lldiv@divisor+3,f,c
 30514  005D4C  2A0D               	incf	___lldiv@counter,f,c
 30515  005D4E                     l2891:
 30516  005D4E  AE08               	btfss	___lldiv@divisor+3,7,c
 30517  005D50  D7F8               	goto	l2892
 30518  005D52                     u7560:
 30519  005D52  90D8               	bcf	status,0,c
 30520  005D54  3609               	rlcf	___lldiv@quotient,f,c
 30521  005D56  360A               	rlcf	___lldiv@quotient+1,f,c
 30522  005D58  360B               	rlcf	___lldiv@quotient+2,f,c
 30523  005D5A  360C               	rlcf	___lldiv@quotient+3,f,c
 30524  005D5C  5005               	movf	___lldiv@divisor,w,c
 30525  005D5E  5C01               	subwf	___lldiv@dividend,w,c
 30526  005D60  5006               	movf	___lldiv@divisor+1,w,c
 30527  005D62  5802               	subwfb	___lldiv@dividend+1,w,c
 30528  005D64  5007               	movf	___lldiv@divisor+2,w,c
 30529  005D66  5803               	subwfb	___lldiv@dividend+2,w,c
 30530  005D68  5008               	movf	___lldiv@divisor+3,w,c
 30531  005D6A  5804               	subwfb	___lldiv@dividend+3,w,c
 30532  005D6C  A0D8               	btfss	status,0,c
 30533  005D6E  D009               	goto	l2895
 30534  005D70  5005               	movf	___lldiv@divisor,w,c
 30535  005D72  5E01               	subwf	___lldiv@dividend,f,c
 30536  005D74  5006               	movf	___lldiv@divisor+1,w,c
 30537  005D76  5A02               	subwfb	___lldiv@dividend+1,f,c
 30538  005D78  5007               	movf	___lldiv@divisor+2,w,c
 30539  005D7A  5A03               	subwfb	___lldiv@dividend+2,f,c
 30540  005D7C  5008               	movf	___lldiv@divisor+3,w,c
 30541  005D7E  5A04               	subwfb	___lldiv@dividend+3,f,c
 30542  005D80  8009               	bsf	___lldiv@quotient,0,c
 30543  005D82                     l2895:
 30544  005D82  90D8               	bcf	status,0,c
 30545  005D84  3208               	rrcf	___lldiv@divisor+3,f,c
 30546  005D86  3207               	rrcf	___lldiv@divisor+2,f,c
 30547  005D88  3206               	rrcf	___lldiv@divisor+1,f,c
 30548  005D8A  3205               	rrcf	___lldiv@divisor,f,c
 30549  005D8C  2E0D               	decfsz	___lldiv@counter,f,c
 30550  005D8E  D7E1               	goto	u7560
 30551  005D90                     l2896:
 30552  005D90  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30553  005D94  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30554  005D98  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30555  005D9C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30556  005DA0  0012               	return		;funcret
 30557  005DA2                     __end_of___lldiv:
 30558                           	opt stack 0
 30559                           tosu	equ	0xFFF
 30560                           tosh	equ	0xFFE
 30561                           tosl	equ	0xFFD
 30562                           pclath	equ	0xFFA
 30563                           tblptru	equ	0xFF8
 30564                           tblptrh	equ	0xFF7
 30565                           tblptrl	equ	0xFF6
 30566                           tablat	equ	0xFF5
 30567                           prodh	equ	0xFF4
 30568                           prodl	equ	0xFF3
 30569                           intcon	equ	0xFF2
 30570                           intcon3	equ	0xFF0
 30571                           indf0	equ	0xFEF
 30572                           postinc0	equ	0xFEE
 30573                           fsr0h	equ	0xFEA
 30574                           fsr0l	equ	0xFE9
 30575                           wreg	equ	0xFE8
 30576                           indf1	equ	0xFE7
 30577                           postdec1	equ	0xFE5
 30578                           plusw1	equ	0xFE3
 30579                           fsr1h	equ	0xFE2
 30580                           fsr1l	equ	0xFE1
 30581                           indf2	equ	0xFDF
 30582                           postinc2	equ	0xFDE
 30583                           postdec2	equ	0xFDD
 30584                           plusw2	equ	0xFDB
 30585                           fsr2h	equ	0xFDA
 30586                           fsr2l	equ	0xFD9
 30587                           status	equ	0xFD8
 30588                           
 30589 ;; *************** function __display_done *****************
 30590 ;; Defined at:
 30591 ;;		line 639 in file "display.c"
 30592 ;; Parameters:    Size  Location     Type
 30593 ;;		None
 30594 ;; Auto vars:     Size  Location     Type
 30595 ;;  cntr            1   28[COMRAM] unsigned char 
 30596 ;; Return value:  Size  Location     Type
 30597 ;;                  1    wreg      void 
 30598 ;; Registers used:
 30599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30600 ;; Tracked objects:
 30601 ;;		On entry : 0/0
 30602 ;;		On exit  : 0/0
 30603 ;;		Unchanged: 0/0
 30604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30609 ;;Total ram usage:        1 bytes
 30610 ;; Hardware stack levels used:    1
 30611 ;; Hardware stack levels required when called:    4
 30612 ;; This function calls:
 30613 ;;		__display_itoa_u16
 30614 ;;		_bootloader_get_flashPagesWritten
 30615 ;; This function is called by:
 30616 ;;		_display_prepare
 30617 ;; This function uses a non-reentrant model
 30618 ;;
 30619                           
 30620                           	psect	text153
 30621  002F8C                     __ptext153:
 30622                           	opt stack 0
 30623  002F8C                     __display_done:
 30624                           	opt stack 22
 30625                           
 30626                           ;display.c: 641: uint8_t cntr;;display.c: 642: cntr = 0;
 30627                           
 30628                           ;incstack = 0
 30629  002F8C  0E00               	movlw	0
 30630  002F8E  6E1D               	movwf	__display_done@cntr,c
 30631                           
 30632                           ;display.c: 643: while(done_line1[cntr])
 30633  002F90  D017               	goto	l1710
 30634  002F92                     
 30635                           ;display.c: 644: display_content[0][cntr] = done_line1[cntr++];
 30636  002F92  501D               	movf	__display_done@cntr,w,c
 30637  002F94  0D01               	mullw	1
 30638  002F96  0EEC               	movlw	low _done_line1
 30639  002F98  24F3               	addwf	prodl,w,c
 30640  002F9A  6EF6               	movwf	tblptrl,c
 30641  002F9C  0E8C               	movlw	high _done_line1
 30642  002F9E  20F4               	addwfc	prodh,w,c
 30643  002FA0  6EF7               	movwf	tblptrh,c
 30644  002FA2                     	if	1	;There are 3 active tblptr bytes
 30645  002FA2  6AF8               	clrf	tblptru,c
 30646  002FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 30647  002FA6  22F8               	addwfc	tblptru,f,c
 30648  002FA8                     	endif
 30649  002FA8  501D               	movf	__display_done@cntr,w,c
 30650  002FAA  0D01               	mullw	1
 30651  002FAC  0E7B               	movlw	low _display_content
 30652  002FAE  24F3               	addwf	prodl,w,c
 30653  002FB0  6ED9               	movwf	fsr2l,c
 30654  002FB2  0E01               	movlw	high _display_content
 30655  002FB4  20F4               	addwfc	prodh,w,c
 30656  002FB6  6EDA               	movwf	fsr2h,c
 30657  002FB8  0008               	tblrd		*
 30658  002FBA  CFF5 FFDF          	movff	tablat,indf2
 30659  002FBE  2A1D               	incf	__display_done@cntr,f,c
 30660  002FC0                     l1710:
 30661  002FC0  501D               	movf	__display_done@cntr,w,c
 30662  002FC2  0D01               	mullw	1
 30663  002FC4  0EEC               	movlw	low _done_line1
 30664  002FC6  24F3               	addwf	prodl,w,c
 30665  002FC8  6EF6               	movwf	tblptrl,c
 30666  002FCA  0E8C               	movlw	high _done_line1
 30667  002FCC  20F4               	addwfc	prodh,w,c
 30668  002FCE  6EF7               	movwf	tblptrh,c
 30669  002FD0                     	if	1	;There are 3 active tblptr bytes
 30670  002FD0  6AF8               	clrf	tblptru,c
 30671  002FD2  0E00               	movlw	low (__mediumconst shr (0+16))
 30672  002FD4  22F8               	addwfc	tblptru,f,c
 30673  002FD6                     	endif
 30674  002FD6  0008               	tblrd		*
 30675  002FD8  50F5               	movf	tablat,w,c
 30676  002FDA  0900               	iorlw	0
 30677  002FDC  A4D8               	btfss	status,2,c
 30678  002FDE  D7D9               	goto	l1711
 30679                           
 30680                           ;display.c: 645: cntr = 0;
 30681  002FE0  0E00               	movlw	0
 30682  002FE2  6E1D               	movwf	__display_done@cntr,c
 30683                           
 30684                           ;display.c: 646: while(done_line2[cntr])
 30685  002FE4  D017               	goto	l1713
 30686  002FE6                     
 30687                           ;display.c: 647: display_content[1][cntr] = done_line2[cntr++];
 30688  002FE6  501D               	movf	__display_done@cntr,w,c
 30689  002FE8  0D01               	mullw	1
 30690  002FEA  0E55               	movlw	low _done_line2
 30691  002FEC  24F3               	addwf	prodl,w,c
 30692  002FEE  6EF6               	movwf	tblptrl,c
 30693  002FF0  0E8E               	movlw	high _done_line2
 30694  002FF2  20F4               	addwfc	prodh,w,c
 30695  002FF4  6EF7               	movwf	tblptrh,c
 30696  002FF6                     	if	1	;There are 3 active tblptr bytes
 30697  002FF6  6AF8               	clrf	tblptru,c
 30698  002FF8  0E00               	movlw	low (__mediumconst shr (0+16))
 30699  002FFA  22F8               	addwfc	tblptru,f,c
 30700  002FFC                     	endif
 30701  002FFC  501D               	movf	__display_done@cntr,w,c
 30702  002FFE  0D01               	mullw	1
 30703  003000  0E8F               	movlw	low (_display_content+20)
 30704  003002  24F3               	addwf	prodl,w,c
 30705  003004  6ED9               	movwf	fsr2l,c
 30706  003006  0E01               	movlw	high (_display_content+20)
 30707  003008  20F4               	addwfc	prodh,w,c
 30708  00300A  6EDA               	movwf	fsr2h,c
 30709  00300C  0008               	tblrd		*
 30710  00300E  CFF5 FFDF          	movff	tablat,indf2
 30711  003012  2A1D               	incf	__display_done@cntr,f,c
 30712  003014                     l1713:
 30713  003014  501D               	movf	__display_done@cntr,w,c
 30714  003016  0D01               	mullw	1
 30715  003018  0E55               	movlw	low _done_line2
 30716  00301A  24F3               	addwf	prodl,w,c
 30717  00301C  6EF6               	movwf	tblptrl,c
 30718  00301E  0E8E               	movlw	high _done_line2
 30719  003020  20F4               	addwfc	prodh,w,c
 30720  003022  6EF7               	movwf	tblptrh,c
 30721  003024                     	if	1	;There are 3 active tblptr bytes
 30722  003024  6AF8               	clrf	tblptru,c
 30723  003026  0E00               	movlw	low (__mediumconst shr (0+16))
 30724  003028  22F8               	addwfc	tblptru,f,c
 30725  00302A                     	endif
 30726  00302A  0008               	tblrd		*
 30727  00302C  50F5               	movf	tablat,w,c
 30728  00302E  0900               	iorlw	0
 30729  003030  A4D8               	btfss	status,2,c
 30730  003032  D7D9               	goto	l1714
 30731                           
 30732                           ;display.c: 648: cntr = 0;
 30733  003034  0E00               	movlw	0
 30734  003036  6E1D               	movwf	__display_done@cntr,c
 30735                           
 30736                           ;display.c: 649: while(done_line3[cntr])
 30737  003038  D017               	goto	l1716
 30738  00303A                     
 30739                           ;display.c: 650: display_content[2][cntr] = done_line3[cntr++];
 30740  00303A  501D               	movf	__display_done@cntr,w,c
 30741  00303C  0D01               	mullw	1
 30742  00303E  0EDB               	movlw	low _done_line3
 30743  003040  24F3               	addwf	prodl,w,c
 30744  003042  6EF6               	movwf	tblptrl,c
 30745  003044  0E8C               	movlw	high _done_line3
 30746  003046  20F4               	addwfc	prodh,w,c
 30747  003048  6EF7               	movwf	tblptrh,c
 30748  00304A                     	if	1	;There are 3 active tblptr bytes
 30749  00304A  6AF8               	clrf	tblptru,c
 30750  00304C  0E00               	movlw	low (__mediumconst shr (0+16))
 30751  00304E  22F8               	addwfc	tblptru,f,c
 30752  003050                     	endif
 30753  003050  501D               	movf	__display_done@cntr,w,c
 30754  003052  0D01               	mullw	1
 30755  003054  0EA3               	movlw	low (_display_content+40)
 30756  003056  24F3               	addwf	prodl,w,c
 30757  003058  6ED9               	movwf	fsr2l,c
 30758  00305A  0E01               	movlw	high (_display_content+40)
 30759  00305C  20F4               	addwfc	prodh,w,c
 30760  00305E  6EDA               	movwf	fsr2h,c
 30761  003060  0008               	tblrd		*
 30762  003062  CFF5 FFDF          	movff	tablat,indf2
 30763  003066  2A1D               	incf	__display_done@cntr,f,c
 30764  003068                     l1716:
 30765  003068  501D               	movf	__display_done@cntr,w,c
 30766  00306A  0D01               	mullw	1
 30767  00306C  0EDB               	movlw	low _done_line3
 30768  00306E  24F3               	addwf	prodl,w,c
 30769  003070  6EF6               	movwf	tblptrl,c
 30770  003072  0E8C               	movlw	high _done_line3
 30771  003074  20F4               	addwfc	prodh,w,c
 30772  003076  6EF7               	movwf	tblptrh,c
 30773  003078                     	if	1	;There are 3 active tblptr bytes
 30774  003078  6AF8               	clrf	tblptru,c
 30775  00307A  0E00               	movlw	low (__mediumconst shr (0+16))
 30776  00307C  22F8               	addwfc	tblptru,f,c
 30777  00307E                     	endif
 30778  00307E  0008               	tblrd		*
 30779  003080  50F5               	movf	tablat,w,c
 30780  003082  0900               	iorlw	0
 30781  003084  A4D8               	btfss	status,2,c
 30782  003086  D7D9               	goto	l1717
 30783                           
 30784                           ;display.c: 651: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30785  003088  EC0F  F03A         	call	_bootloader_get_flashPagesWritten	;wreg free
 30786  00308C  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30787  003090  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30788  003094  501D               	movf	__display_done@cntr,w,c
 30789  003096  0D01               	mullw	1
 30790  003098  0EA3               	movlw	low (_display_content+40)
 30791  00309A  24F3               	addwf	prodl,w,c
 30792  00309C  6E1B               	movwf	__display_itoa_u16@text,c
 30793  00309E  0E01               	movlw	high (_display_content+40)
 30794  0030A0  20F4               	addwfc	prodh,w,c
 30795  0030A2  6E1C               	movwf	__display_itoa_u16@text+1,c
 30796  0030A4  EC2A  F028         	call	__display_itoa_u16	;wreg free
 30797                           
 30798                           ;display.c: 652: cntr = 0;
 30799  0030A8  0E00               	movlw	0
 30800  0030AA  6E1D               	movwf	__display_done@cntr,c
 30801                           
 30802                           ;display.c: 653: while(done_line4[cntr])
 30803  0030AC  D017               	goto	l1719
 30804  0030AE                     
 30805                           ;display.c: 654: display_content[3][cntr] = done_line4[cntr++];
 30806  0030AE  501D               	movf	__display_done@cntr,w,c
 30807  0030B0  0D01               	mullw	1
 30808  0030B2  0E3A               	movlw	low _done_line4
 30809  0030B4  24F3               	addwf	prodl,w,c
 30810  0030B6  6EF6               	movwf	tblptrl,c
 30811  0030B8  0E8C               	movlw	high _done_line4
 30812  0030BA  20F4               	addwfc	prodh,w,c
 30813  0030BC  6EF7               	movwf	tblptrh,c
 30814  0030BE                     	if	1	;There are 3 active tblptr bytes
 30815  0030BE  6AF8               	clrf	tblptru,c
 30816  0030C0  0E00               	movlw	low (__mediumconst shr (0+16))
 30817  0030C2  22F8               	addwfc	tblptru,f,c
 30818  0030C4                     	endif
 30819  0030C4  501D               	movf	__display_done@cntr,w,c
 30820  0030C6  0D01               	mullw	1
 30821  0030C8  0EB7               	movlw	low (_display_content+60)
 30822  0030CA  24F3               	addwf	prodl,w,c
 30823  0030CC  6ED9               	movwf	fsr2l,c
 30824  0030CE  0E01               	movlw	high (_display_content+60)
 30825  0030D0  20F4               	addwfc	prodh,w,c
 30826  0030D2  6EDA               	movwf	fsr2h,c
 30827  0030D4  0008               	tblrd		*
 30828  0030D6  CFF5 FFDF          	movff	tablat,indf2
 30829  0030DA  2A1D               	incf	__display_done@cntr,f,c
 30830  0030DC                     l1719:
 30831  0030DC  501D               	movf	__display_done@cntr,w,c
 30832  0030DE  0D01               	mullw	1
 30833  0030E0  0E3A               	movlw	low _done_line4
 30834  0030E2  24F3               	addwf	prodl,w,c
 30835  0030E4  6EF6               	movwf	tblptrl,c
 30836  0030E6  0E8C               	movlw	high _done_line4
 30837  0030E8  20F4               	addwfc	prodh,w,c
 30838  0030EA  6EF7               	movwf	tblptrh,c
 30839  0030EC                     	if	1	;There are 3 active tblptr bytes
 30840  0030EC  6AF8               	clrf	tblptru,c
 30841  0030EE  0E00               	movlw	low (__mediumconst shr (0+16))
 30842  0030F0  22F8               	addwfc	tblptru,f,c
 30843  0030F2                     	endif
 30844  0030F2  0008               	tblrd		*
 30845  0030F4  50F5               	movf	tablat,w,c
 30846  0030F6  0900               	iorlw	0
 30847  0030F8  B4D8               	btfsc	status,2,c
 30848  0030FA  0012               	return	
 30849  0030FC  D7D8               	goto	l1720
 30850  0030FE                     __end_of__display_done:
 30851                           	opt stack 0
 30852                           tosu	equ	0xFFF
 30853                           tosh	equ	0xFFE
 30854                           tosl	equ	0xFFD
 30855                           pclath	equ	0xFFA
 30856                           tblptru	equ	0xFF8
 30857                           tblptrh	equ	0xFF7
 30858                           tblptrl	equ	0xFF6
 30859                           tablat	equ	0xFF5
 30860                           prodh	equ	0xFF4
 30861                           prodl	equ	0xFF3
 30862                           intcon	equ	0xFF2
 30863                           intcon3	equ	0xFF0
 30864                           indf0	equ	0xFEF
 30865                           postinc0	equ	0xFEE
 30866                           fsr0h	equ	0xFEA
 30867                           fsr0l	equ	0xFE9
 30868                           wreg	equ	0xFE8
 30869                           indf1	equ	0xFE7
 30870                           postdec1	equ	0xFE5
 30871                           plusw1	equ	0xFE3
 30872                           fsr1h	equ	0xFE2
 30873                           fsr1l	equ	0xFE1
 30874                           indf2	equ	0xFDF
 30875                           postinc2	equ	0xFDE
 30876                           postdec2	equ	0xFDD
 30877                           plusw2	equ	0xFDB
 30878                           fsr2h	equ	0xFDA
 30879                           fsr2l	equ	0xFD9
 30880                           status	equ	0xFD8
 30881                           
 30882 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30883 ;; Defined at:
 30884 ;;		line 514 in file "bootloader.c"
 30885 ;; Parameters:    Size  Location     Type
 30886 ;;		None
 30887 ;; Auto vars:     Size  Location     Type
 30888 ;;		None
 30889 ;; Return value:  Size  Location     Type
 30890 ;;                  2    0[COMRAM] unsigned int 
 30891 ;; Registers used:
 30892 ;;		None
 30893 ;; Tracked objects:
 30894 ;;		On entry : 0/0
 30895 ;;		On exit  : 0/0
 30896 ;;		Unchanged: 0/0
 30897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30902 ;;Total ram usage:        2 bytes
 30903 ;; Hardware stack levels used:    1
 30904 ;; This function calls:
 30905 ;;		Nothing
 30906 ;; This function is called by:
 30907 ;;		__display_programming
 30908 ;;		__display_done
 30909 ;;		__fill_buffer_get_bootloader_details
 30910 ;; This function uses a non-reentrant model
 30911 ;;
 30912                           
 30913                           	psect	text154
 30914  00741E                     __ptext154:
 30915                           	opt stack 0
 30916  00741E                     _bootloader_get_flashPagesWritten:
 30917                           	opt stack 25
 30918                           
 30919                           ;bootloader.c: 516: return flash_pages_written;
 30920                           
 30921                           ;incstack = 0
 30922  00741E  C165  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30923  007422  C166  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30924  007426  0012               	return		;funcret
 30925  007428                     __end_of_bootloader_get_flashPagesWritten:
 30926                           	opt stack 0
 30927                           tosu	equ	0xFFF
 30928                           tosh	equ	0xFFE
 30929                           tosl	equ	0xFFD
 30930                           pclath	equ	0xFFA
 30931                           tblptru	equ	0xFF8
 30932                           tblptrh	equ	0xFF7
 30933                           tblptrl	equ	0xFF6
 30934                           tablat	equ	0xFF5
 30935                           prodh	equ	0xFF4
 30936                           prodl	equ	0xFF3
 30937                           intcon	equ	0xFF2
 30938                           intcon3	equ	0xFF0
 30939                           indf0	equ	0xFEF
 30940                           postinc0	equ	0xFEE
 30941                           fsr0h	equ	0xFEA
 30942                           fsr0l	equ	0xFE9
 30943                           wreg	equ	0xFE8
 30944                           indf1	equ	0xFE7
 30945                           postdec1	equ	0xFE5
 30946                           plusw1	equ	0xFE3
 30947                           fsr1h	equ	0xFE2
 30948                           fsr1l	equ	0xFE1
 30949                           indf2	equ	0xFDF
 30950                           postinc2	equ	0xFDE
 30951                           postdec2	equ	0xFDD
 30952                           plusw2	equ	0xFDB
 30953                           fsr2h	equ	0xFDA
 30954                           fsr2l	equ	0xFD9
 30955                           status	equ	0xFD8
 30956                           
 30957 ;; *************** function __display_clear *****************
 30958 ;; Defined at:
 30959 ;;		line 186 in file "display.c"
 30960 ;; Parameters:    Size  Location     Type
 30961 ;;		None
 30962 ;; Auto vars:     Size  Location     Type
 30963 ;;  col             1    3[COMRAM] unsigned char 
 30964 ;;  row             1    2[COMRAM] unsigned char 
 30965 ;; Return value:  Size  Location     Type
 30966 ;;                  1    wreg      void 
 30967 ;; Registers used:
 30968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30969 ;; Tracked objects:
 30970 ;;		On entry : 0/0
 30971 ;;		On exit  : 0/0
 30972 ;;		Unchanged: 0/0
 30973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30977 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30978 ;;Total ram usage:        4 bytes
 30979 ;; Hardware stack levels used:    1
 30980 ;; This function calls:
 30981 ;;		Nothing
 30982 ;; This function is called by:
 30983 ;;		_display_prepare
 30984 ;; This function uses a non-reentrant model
 30985 ;;
 30986                           
 30987                           	psect	text155
 30988  006A9E                     __ptext155:
 30989                           	opt stack 0
 30990  006A9E                     __display_clear:
 30991                           	opt stack 26
 30992                           
 30993                           ;display.c: 188: uint8_t row;;display.c: 189: uint8_t col;;display.c: 190: for(row=0;row
      +                          <4;++row)
 30994                           
 30995                           ;incstack = 0
 30996  006A9E  0E00               	movlw	0
 30997  006AA0  6E03               	movwf	__display_clear@row,c
 30998  006AA2                     l10893:
 30999  006AA2  0E03               	movlw	3
 31000  006AA4  6403               	cpfsgt	__display_clear@row,c
 31001  006AA6  D001               	goto	l1476
 31002  006AA8  0012               	return	
 31003  006AAA                     l1476:
 31004                           
 31005                           ;display.c: 191: {;display.c: 192: for(col=0;col<20;++col)
 31006  006AAA  0E00               	movlw	0
 31007  006AAC  6E04               	movwf	__display_clear@col,c
 31008  006AAE                     l10899:
 31009  006AAE  0E13               	movlw	19
 31010  006AB0  6404               	cpfsgt	__display_clear@col,c
 31011  006AB2  D001               	goto	l1478
 31012  006AB4  D016               	goto	u8580
 31013  006AB6                     l1478:
 31014                           
 31015                           ;display.c: 193: {;display.c: 194: display_content[row][col] = ' ';
 31016  006AB6  5003               	movf	__display_clear@row,w,c
 31017  006AB8  0D14               	mullw	20
 31018  006ABA  0E7B               	movlw	low _display_content
 31019  006ABC  6E01               	movwf	??__display_clear& (0+255),c
 31020  006ABE  0E01               	movlw	high _display_content
 31021  006AC0  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31022  006AC2  50F3               	movf	prodl,w,c
 31023  006AC4  2601               	addwf	??__display_clear,f,c
 31024  006AC6  50F4               	movf	prodh,w,c
 31025  006AC8  2202               	addwfc	??__display_clear+1,f,c
 31026  006ACA  5004               	movf	__display_clear@col,w,c
 31027  006ACC  0D01               	mullw	1
 31028  006ACE  50F3               	movf	prodl,w,c
 31029  006AD0  2401               	addwf	??__display_clear,w,c
 31030  006AD2  6ED9               	movwf	fsr2l,c
 31031  006AD4  50F4               	movf	prodh,w,c
 31032  006AD6  2002               	addwfc	??__display_clear+1,w,c
 31033  006AD8  6EDA               	movwf	fsr2h,c
 31034  006ADA  0E20               	movlw	32
 31035  006ADC  6EDF               	movwf	indf2,c
 31036  006ADE  2A04               	incf	__display_clear@col,f,c
 31037  006AE0  D7E6               	goto	l10899
 31038  006AE2                     u8580:
 31039  006AE2  2A03               	incf	__display_clear@row,f,c
 31040  006AE4  D7DE               	goto	l10893
 31041  006AE6                     __end_of__display_clear:
 31042                           	opt stack 0
 31043                           tosu	equ	0xFFF
 31044                           tosh	equ	0xFFE
 31045                           tosl	equ	0xFFD
 31046                           pclath	equ	0xFFA
 31047                           tblptru	equ	0xFF8
 31048                           tblptrh	equ	0xFF7
 31049                           tblptrl	equ	0xFF6
 31050                           tablat	equ	0xFF5
 31051                           prodh	equ	0xFF4
 31052                           prodl	equ	0xFF3
 31053                           intcon	equ	0xFF2
 31054                           intcon3	equ	0xFF0
 31055                           indf0	equ	0xFEF
 31056                           postinc0	equ	0xFEE
 31057                           fsr0h	equ	0xFEA
 31058                           fsr0l	equ	0xFE9
 31059                           wreg	equ	0xFE8
 31060                           indf1	equ	0xFE7
 31061                           postdec1	equ	0xFE5
 31062                           plusw1	equ	0xFE3
 31063                           fsr1h	equ	0xFE2
 31064                           fsr1l	equ	0xFE1
 31065                           indf2	equ	0xFDF
 31066                           postinc2	equ	0xFDE
 31067                           postdec2	equ	0xFDD
 31068                           plusw2	equ	0xFDB
 31069                           fsr2h	equ	0xFDA
 31070                           fsr2l	equ	0xFD9
 31071                           status	equ	0xFD8
 31072                           
 31073 ;; *************** function __display_checked *****************
 31074 ;; Defined at:
 31075 ;;		line 543 in file "display.c"
 31076 ;; Parameters:    Size  Location     Type
 31077 ;;		None
 31078 ;; Auto vars:     Size  Location     Type
 31079 ;;  cntr            1   31[COMRAM] unsigned char 
 31080 ;;  start           1   30[COMRAM] unsigned char 
 31081 ;; Return value:  Size  Location     Type
 31082 ;;                  1    wreg      void 
 31083 ;; Registers used:
 31084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31085 ;; Tracked objects:
 31086 ;;		On entry : 0/0
 31087 ;;		On exit  : 0/0
 31088 ;;		Unchanged: 0/0
 31089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31093 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31094 ;;Total ram usage:        4 bytes
 31095 ;; Hardware stack levels used:    1
 31096 ;; Hardware stack levels required when called:    4
 31097 ;; This function calls:
 31098 ;;		__display_itoa_u16
 31099 ;;		_bootloader_get_total_entries
 31100 ;; This function is called by:
 31101 ;;		_display_prepare
 31102 ;; This function uses a non-reentrant model
 31103 ;;
 31104                           
 31105                           	psect	text156
 31106  002C9E                     __ptext156:
 31107                           	opt stack 0
 31108  002C9E                     __display_checked:
 31109                           	opt stack 22
 31110                           
 31111                           ;display.c: 545: uint8_t cntr;;display.c: 546: uint8_t start;;display.c: 547: cntr = 0;
 31112                           
 31113                           ;incstack = 0
 31114  002C9E  0E00               	movlw	0
 31115  002CA0  6E20               	movwf	__display_checked@cntr,c
 31116                           
 31117                           ;display.c: 548: while(checked_line1[cntr])
 31118  002CA2  D017               	goto	l1646
 31119  002CA4                     
 31120                           ;display.c: 549: display_content[0][cntr] = checked_line1[cntr++];
 31121  002CA4  5020               	movf	__display_checked@cntr,w,c
 31122  002CA6  0D01               	mullw	1
 31123  002CA8  0E41               	movlw	low _checked_line1
 31124  002CAA  24F3               	addwf	prodl,w,c
 31125  002CAC  6EF6               	movwf	tblptrl,c
 31126  002CAE  0E8D               	movlw	high _checked_line1
 31127  002CB0  20F4               	addwfc	prodh,w,c
 31128  002CB2  6EF7               	movwf	tblptrh,c
 31129  002CB4                     	if	1	;There are 3 active tblptr bytes
 31130  002CB4  6AF8               	clrf	tblptru,c
 31131  002CB6  0E00               	movlw	low (__mediumconst shr (0+16))
 31132  002CB8  22F8               	addwfc	tblptru,f,c
 31133  002CBA                     	endif
 31134  002CBA  5020               	movf	__display_checked@cntr,w,c
 31135  002CBC  0D01               	mullw	1
 31136  002CBE  0E7B               	movlw	low _display_content
 31137  002CC0  24F3               	addwf	prodl,w,c
 31138  002CC2  6ED9               	movwf	fsr2l,c
 31139  002CC4  0E01               	movlw	high _display_content
 31140  002CC6  20F4               	addwfc	prodh,w,c
 31141  002CC8  6EDA               	movwf	fsr2h,c
 31142  002CCA  0008               	tblrd		*
 31143  002CCC  CFF5 FFDF          	movff	tablat,indf2
 31144  002CD0  2A20               	incf	__display_checked@cntr,f,c
 31145  002CD2                     l1646:
 31146  002CD2  5020               	movf	__display_checked@cntr,w,c
 31147  002CD4  0D01               	mullw	1
 31148  002CD6  0E41               	movlw	low _checked_line1
 31149  002CD8  24F3               	addwf	prodl,w,c
 31150  002CDA  6EF6               	movwf	tblptrl,c
 31151  002CDC  0E8D               	movlw	high _checked_line1
 31152  002CDE  20F4               	addwfc	prodh,w,c
 31153  002CE0  6EF7               	movwf	tblptrh,c
 31154  002CE2                     	if	1	;There are 3 active tblptr bytes
 31155  002CE2  6AF8               	clrf	tblptru,c
 31156  002CE4  0E00               	movlw	low (__mediumconst shr (0+16))
 31157  002CE6  22F8               	addwfc	tblptru,f,c
 31158  002CE8                     	endif
 31159  002CE8  0008               	tblrd		*
 31160  002CEA  50F5               	movf	tablat,w,c
 31161  002CEC  0900               	iorlw	0
 31162  002CEE  A4D8               	btfss	status,2,c
 31163  002CF0  D7D9               	goto	l1647
 31164                           
 31165                           ;display.c: 550: cntr = 0;
 31166  002CF2  0E00               	movlw	0
 31167  002CF4  6E20               	movwf	__display_checked@cntr,c
 31168                           
 31169                           ;display.c: 551: while(checked_line2[cntr])
 31170  002CF6  D017               	goto	l1649
 31171  002CF8                     
 31172                           ;display.c: 552: display_content[1][cntr] = checked_line2[cntr++];
 31173  002CF8  5020               	movf	__display_checked@cntr,w,c
 31174  002CFA  0D01               	mullw	1
 31175  002CFC  0E01               	movlw	low _checked_line2
 31176  002CFE  24F3               	addwf	prodl,w,c
 31177  002D00  6EF6               	movwf	tblptrl,c
 31178  002D02  0E8E               	movlw	high _checked_line2
 31179  002D04  20F4               	addwfc	prodh,w,c
 31180  002D06  6EF7               	movwf	tblptrh,c
 31181  002D08                     	if	1	;There are 3 active tblptr bytes
 31182  002D08  6AF8               	clrf	tblptru,c
 31183  002D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 31184  002D0C  22F8               	addwfc	tblptru,f,c
 31185  002D0E                     	endif
 31186  002D0E  5020               	movf	__display_checked@cntr,w,c
 31187  002D10  0D01               	mullw	1
 31188  002D12  0E8F               	movlw	low (_display_content+20)
 31189  002D14  24F3               	addwf	prodl,w,c
 31190  002D16  6ED9               	movwf	fsr2l,c
 31191  002D18  0E01               	movlw	high (_display_content+20)
 31192  002D1A  20F4               	addwfc	prodh,w,c
 31193  002D1C  6EDA               	movwf	fsr2h,c
 31194  002D1E  0008               	tblrd		*
 31195  002D20  CFF5 FFDF          	movff	tablat,indf2
 31196  002D24  2A20               	incf	__display_checked@cntr,f,c
 31197  002D26                     l1649:
 31198  002D26  5020               	movf	__display_checked@cntr,w,c
 31199  002D28  0D01               	mullw	1
 31200  002D2A  0E01               	movlw	low _checked_line2
 31201  002D2C  24F3               	addwf	prodl,w,c
 31202  002D2E  6EF6               	movwf	tblptrl,c
 31203  002D30  0E8E               	movlw	high _checked_line2
 31204  002D32  20F4               	addwfc	prodh,w,c
 31205  002D34  6EF7               	movwf	tblptrh,c
 31206  002D36                     	if	1	;There are 3 active tblptr bytes
 31207  002D36  6AF8               	clrf	tblptru,c
 31208  002D38  0E00               	movlw	low (__mediumconst shr (0+16))
 31209  002D3A  22F8               	addwfc	tblptru,f,c
 31210  002D3C                     	endif
 31211  002D3C  0008               	tblrd		*
 31212  002D3E  50F5               	movf	tablat,w,c
 31213  002D40  0900               	iorlw	0
 31214  002D42  A4D8               	btfss	status,2,c
 31215  002D44  D7D9               	goto	l1650
 31216                           
 31217                           ;display.c: 554: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31218  002D46  EC14  F03A         	call	_bootloader_get_total_entries	;wreg free
 31219  002D4A  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31220  002D4E  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31221  002D52  0EA3               	movlw	low (_display_content+40)
 31222  002D54  6E1B               	movwf	__display_itoa_u16@text,c
 31223  002D56  0E01               	movlw	high (_display_content+40)
 31224  002D58  6E1C               	movwf	__display_itoa_u16@text+1,c
 31225  002D5A  EC2A  F028         	call	__display_itoa_u16	;wreg free
 31226  002D5E  6E1F               	movwf	__display_checked@start,c
 31227                           
 31228                           ;display.c: 555: start++;
 31229  002D60  2A1F               	incf	__display_checked@start,f,c
 31230                           
 31231                           ;display.c: 556: cntr = 0;
 31232  002D62  0E00               	movlw	0
 31233  002D64  6E20               	movwf	__display_checked@cntr,c
 31234                           
 31235                           ;display.c: 557: while(checked_line3[cntr])
 31236  002D66  D01C               	goto	l1652
 31237  002D68                     
 31238                           ;display.c: 558: display_content[2][start+cntr] = checked_line3[cntr++];
 31239  002D68  5020               	movf	__display_checked@cntr,w,c
 31240  002D6A  0D01               	mullw	1
 31241  002D6C  0E43               	movlw	low _checked_line3
 31242  002D6E  24F3               	addwf	prodl,w,c
 31243  002D70  6EF6               	movwf	tblptrl,c
 31244  002D72  0E8E               	movlw	high _checked_line3
 31245  002D74  20F4               	addwfc	prodh,w,c
 31246  002D76  6EF7               	movwf	tblptrh,c
 31247  002D78                     	if	1	;There are 3 active tblptr bytes
 31248  002D78  6AF8               	clrf	tblptru,c
 31249  002D7A  0E00               	movlw	low (__mediumconst shr (0+16))
 31250  002D7C  22F8               	addwfc	tblptru,f,c
 31251  002D7E                     	endif
 31252  002D7E  5020               	movf	__display_checked@cntr,w,c
 31253  002D80  C01F  F01D         	movff	__display_checked@start,??__display_checked
 31254  002D84  6A1E               	clrf	(??__display_checked+1)& (0+255),c
 31255  002D86  261D               	addwf	??__display_checked,f,c
 31256  002D88  0E00               	movlw	0
 31257  002D8A  221E               	addwfc	??__display_checked+1,f,c
 31258  002D8C  0EA3               	movlw	low (_display_content+40)
 31259  002D8E  241D               	addwf	??__display_checked,w,c
 31260  002D90  6ED9               	movwf	fsr2l,c
 31261  002D92  0E01               	movlw	high (_display_content+40)
 31262  002D94  201E               	addwfc	??__display_checked+1,w,c
 31263  002D96  6EDA               	movwf	fsr2h,c
 31264  002D98  0008               	tblrd		*
 31265  002D9A  CFF5 FFDF          	movff	tablat,indf2
 31266  002D9E  2A20               	incf	__display_checked@cntr,f,c
 31267  002DA0                     l1652:
 31268  002DA0  5020               	movf	__display_checked@cntr,w,c
 31269  002DA2  0D01               	mullw	1
 31270  002DA4  0E43               	movlw	low _checked_line3
 31271  002DA6  24F3               	addwf	prodl,w,c
 31272  002DA8  6EF6               	movwf	tblptrl,c
 31273  002DAA  0E8E               	movlw	high _checked_line3
 31274  002DAC  20F4               	addwfc	prodh,w,c
 31275  002DAE  6EF7               	movwf	tblptrh,c
 31276  002DB0                     	if	1	;There are 3 active tblptr bytes
 31277  002DB0  6AF8               	clrf	tblptru,c
 31278  002DB2  0E00               	movlw	low (__mediumconst shr (0+16))
 31279  002DB4  22F8               	addwfc	tblptru,f,c
 31280  002DB6                     	endif
 31281  002DB6  0008               	tblrd		*
 31282  002DB8  50F5               	movf	tablat,w,c
 31283  002DBA  0900               	iorlw	0
 31284  002DBC  A4D8               	btfss	status,2,c
 31285  002DBE  D7D4               	goto	l1653
 31286                           
 31287                           ;display.c: 560: cntr = 0;
 31288  002DC0  0E00               	movlw	0
 31289  002DC2  6E20               	movwf	__display_checked@cntr,c
 31290                           
 31291                           ;display.c: 561: while(checked_line4[cntr])
 31292  002DC4  D017               	goto	l1655
 31293  002DC6                     
 31294                           ;display.c: 562: display_content[3][cntr] = checked_line4[cntr++];
 31295  002DC6  5020               	movf	__display_checked@cntr,w,c
 31296  002DC8  0D01               	mullw	1
 31297  002DCA  0E79               	movlw	low _checked_line4
 31298  002DCC  24F3               	addwf	prodl,w,c
 31299  002DCE  6EF6               	movwf	tblptrl,c
 31300  002DD0  0E8C               	movlw	high _checked_line4
 31301  002DD2  20F4               	addwfc	prodh,w,c
 31302  002DD4  6EF7               	movwf	tblptrh,c
 31303  002DD6                     	if	1	;There are 3 active tblptr bytes
 31304  002DD6  6AF8               	clrf	tblptru,c
 31305  002DD8  0E00               	movlw	low (__mediumconst shr (0+16))
 31306  002DDA  22F8               	addwfc	tblptru,f,c
 31307  002DDC                     	endif
 31308  002DDC  5020               	movf	__display_checked@cntr,w,c
 31309  002DDE  0D01               	mullw	1
 31310  002DE0  0EB7               	movlw	low (_display_content+60)
 31311  002DE2  24F3               	addwf	prodl,w,c
 31312  002DE4  6ED9               	movwf	fsr2l,c
 31313  002DE6  0E01               	movlw	high (_display_content+60)
 31314  002DE8  20F4               	addwfc	prodh,w,c
 31315  002DEA  6EDA               	movwf	fsr2h,c
 31316  002DEC  0008               	tblrd		*
 31317  002DEE  CFF5 FFDF          	movff	tablat,indf2
 31318  002DF2  2A20               	incf	__display_checked@cntr,f,c
 31319  002DF4                     l1655:
 31320  002DF4  5020               	movf	__display_checked@cntr,w,c
 31321  002DF6  0D01               	mullw	1
 31322  002DF8  0E79               	movlw	low _checked_line4
 31323  002DFA  24F3               	addwf	prodl,w,c
 31324  002DFC  6EF6               	movwf	tblptrl,c
 31325  002DFE  0E8C               	movlw	high _checked_line4
 31326  002E00  20F4               	addwfc	prodh,w,c
 31327  002E02  6EF7               	movwf	tblptrh,c
 31328  002E04                     	if	1	;There are 3 active tblptr bytes
 31329  002E04  6AF8               	clrf	tblptru,c
 31330  002E06  0E00               	movlw	low (__mediumconst shr (0+16))
 31331  002E08  22F8               	addwfc	tblptru,f,c
 31332  002E0A                     	endif
 31333  002E0A  0008               	tblrd		*
 31334  002E0C  50F5               	movf	tablat,w,c
 31335  002E0E  0900               	iorlw	0
 31336  002E10  B4D8               	btfsc	status,2,c
 31337  002E12  0012               	return	
 31338  002E14  D7D8               	goto	l1656
 31339  002E16                     __end_of__display_checked:
 31340                           	opt stack 0
 31341                           tosu	equ	0xFFF
 31342                           tosh	equ	0xFFE
 31343                           tosl	equ	0xFFD
 31344                           pclath	equ	0xFFA
 31345                           tblptru	equ	0xFF8
 31346                           tblptrh	equ	0xFF7
 31347                           tblptrl	equ	0xFF6
 31348                           tablat	equ	0xFF5
 31349                           prodh	equ	0xFF4
 31350                           prodl	equ	0xFF3
 31351                           intcon	equ	0xFF2
 31352                           intcon3	equ	0xFF0
 31353                           indf0	equ	0xFEF
 31354                           postinc0	equ	0xFEE
 31355                           fsr0h	equ	0xFEA
 31356                           fsr0l	equ	0xFE9
 31357                           wreg	equ	0xFE8
 31358                           indf1	equ	0xFE7
 31359                           postdec1	equ	0xFE5
 31360                           plusw1	equ	0xFE3
 31361                           fsr1h	equ	0xFE2
 31362                           fsr1l	equ	0xFE1
 31363                           indf2	equ	0xFDF
 31364                           postinc2	equ	0xFDE
 31365                           postdec2	equ	0xFDD
 31366                           plusw2	equ	0xFDB
 31367                           fsr2h	equ	0xFDA
 31368                           fsr2l	equ	0xFD9
 31369                           status	equ	0xFD8
 31370                           
 31371 ;; *************** function _bootloader_get_total_entries *****************
 31372 ;; Defined at:
 31373 ;;		line 473 in file "bootloader.c"
 31374 ;; Parameters:    Size  Location     Type
 31375 ;;		None
 31376 ;; Auto vars:     Size  Location     Type
 31377 ;;		None
 31378 ;; Return value:  Size  Location     Type
 31379 ;;                  2    0[COMRAM] unsigned int 
 31380 ;; Registers used:
 31381 ;;		None
 31382 ;; Tracked objects:
 31383 ;;		On entry : 0/0
 31384 ;;		On exit  : 0/0
 31385 ;;		Unchanged: 0/0
 31386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31391 ;;Total ram usage:        2 bytes
 31392 ;; Hardware stack levels used:    1
 31393 ;; This function calls:
 31394 ;;		Nothing
 31395 ;; This function is called by:
 31396 ;;		__display_checked
 31397 ;;		__display_programming
 31398 ;;		__fill_buffer_get_bootloader_details
 31399 ;; This function uses a non-reentrant model
 31400 ;;
 31401                           
 31402                           	psect	text157
 31403  007428                     __ptext157:
 31404                           	opt stack 0
 31405  007428                     _bootloader_get_total_entries:
 31406                           	opt stack 25
 31407                           
 31408                           ;bootloader.c: 475: return total_hex_file_entries;
 31409                           
 31410                           ;incstack = 0
 31411  007428  C167  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31412  00742C  C168  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31413  007430  0012               	return		;funcret
 31414  007432                     __end_of_bootloader_get_total_entries:
 31415                           	opt stack 0
 31416                           tosu	equ	0xFFF
 31417                           tosh	equ	0xFFE
 31418                           tosl	equ	0xFFD
 31419                           pclath	equ	0xFFA
 31420                           tblptru	equ	0xFF8
 31421                           tblptrh	equ	0xFF7
 31422                           tblptrl	equ	0xFF6
 31423                           tablat	equ	0xFF5
 31424                           prodh	equ	0xFF4
 31425                           prodl	equ	0xFF3
 31426                           intcon	equ	0xFF2
 31427                           intcon3	equ	0xFF0
 31428                           indf0	equ	0xFEF
 31429                           postinc0	equ	0xFEE
 31430                           fsr0h	equ	0xFEA
 31431                           fsr0l	equ	0xFE9
 31432                           wreg	equ	0xFE8
 31433                           indf1	equ	0xFE7
 31434                           postdec1	equ	0xFE5
 31435                           plusw1	equ	0xFE3
 31436                           fsr1h	equ	0xFE2
 31437                           fsr1l	equ	0xFE1
 31438                           indf2	equ	0xFDF
 31439                           postinc2	equ	0xFDE
 31440                           postdec2	equ	0xFDD
 31441                           plusw2	equ	0xFDB
 31442                           fsr2h	equ	0xFDA
 31443                           fsr2l	equ	0xFD9
 31444                           status	equ	0xFD8
 31445                           
 31446 ;; *************** function __display_itoa_u16 *****************
 31447 ;; Defined at:
 31448 ;;		line 199 in file "display.c"
 31449 ;; Parameters:    Size  Location     Type
 31450 ;;  value           2   24[COMRAM] unsigned int 
 31451 ;;  text            2   26[COMRAM] PTR unsigned char 
 31452 ;;		 -> display_content(80), 
 31453 ;; Auto vars:     Size  Location     Type
 31454 ;;		None
 31455 ;; Return value:  Size  Location     Type
 31456 ;;                  1    wreg      unsigned char 
 31457 ;; Registers used:
 31458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31459 ;; Tracked objects:
 31460 ;;		On entry : 0/0
 31461 ;;		On exit  : 0/0
 31462 ;;		Unchanged: 0/0
 31463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31468 ;;Total ram usage:        4 bytes
 31469 ;; Hardware stack levels used:    1
 31470 ;; Hardware stack levels required when called:    3
 31471 ;; This function calls:
 31472 ;;		_itoa
 31473 ;; This function is called by:
 31474 ;;		__display_start
 31475 ;;		__display_verify
 31476 ;;		__display_checked
 31477 ;;		__display_failed
 31478 ;;		__display_programming
 31479 ;;		__display_done
 31480 ;; This function uses a non-reentrant model
 31481 ;;
 31482                           
 31483                           	psect	text158
 31484  005054                     __ptext158:
 31485                           	opt stack 0
 31486  005054                     __display_itoa_u16:
 31487                           	opt stack 22
 31488                           
 31489                           ;display.c: 201: itoa(text, value, 10);
 31490                           
 31491                           ;incstack = 0
 31492  005054  C01B  F011         	movff	__display_itoa_u16@text,itoa@buf
 31493  005058  C01C  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 31494  00505C  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 31495  005060  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 31496  005064  0E00               	movlw	0
 31497  005066  6E16               	movwf	itoa@base+1,c
 31498  005068  0E0A               	movlw	10
 31499  00506A  6E15               	movwf	itoa@base,c
 31500  00506C  EC1F  F036         	call	_itoa	;wreg free
 31501                           
 31502                           ;display.c: 202: if(value>9999)
 31503  005070  0E10               	movlw	16
 31504  005072  5C19               	subwf	__display_itoa_u16@value,w,c
 31505  005074  0E27               	movlw	39
 31506  005076  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31507  005078  A0D8               	btfss	status,0,c
 31508  00507A  D00A               	goto	l1483
 31509                           
 31510                           ;display.c: 203: {;display.c: 204: *(text+5) = ' ';
 31511  00507C  EE20 F005          	lfsr	2,5
 31512  005080  501B               	movf	__display_itoa_u16@text,w,c
 31513  005082  26D9               	addwf	fsr2l,f,c
 31514  005084  501C               	movf	__display_itoa_u16@text+1,w,c
 31515  005086  22DA               	addwfc	fsr2h,f,c
 31516  005088  0E20               	movlw	32
 31517  00508A  6EDF               	movwf	indf2,c
 31518                           
 31519                           ;display.c: 205: return 5;
 31520  00508C  0E05               	movlw	5
 31521                           
 31522                           ;display.c: 206: }
 31523  00508E  0012               	return	
 31524  005090                     l1483:
 31525                           
 31526                           ;display.c: 207: else if (value>999)
 31527  005090  0EE8               	movlw	232
 31528  005092  5C19               	subwf	__display_itoa_u16@value,w,c
 31529  005094  0E03               	movlw	3
 31530  005096  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31531  005098  A0D8               	btfss	status,0,c
 31532  00509A  D00A               	goto	l1486
 31533                           
 31534                           ;display.c: 208: {;display.c: 209: *(text+4) = ' ';
 31535  00509C  EE20 F004          	lfsr	2,4
 31536  0050A0  501B               	movf	__display_itoa_u16@text,w,c
 31537  0050A2  26D9               	addwf	fsr2l,f,c
 31538  0050A4  501C               	movf	__display_itoa_u16@text+1,w,c
 31539  0050A6  22DA               	addwfc	fsr2h,f,c
 31540  0050A8  0E20               	movlw	32
 31541  0050AA  6EDF               	movwf	indf2,c
 31542                           
 31543                           ;display.c: 210: return 4;
 31544  0050AC  0E04               	movlw	4
 31545                           
 31546                           ;display.c: 211: }
 31547  0050AE  0012               	return	
 31548  0050B0                     l1486:
 31549                           
 31550                           ;display.c: 212: else if (value>99)
 31551  0050B0  501A               	movf	__display_itoa_u16@value+1,w,c
 31552  0050B2  E104               	bnz	u7980
 31553  0050B4  0E64               	movlw	100
 31554  0050B6  5C19               	subwf	__display_itoa_u16@value,w,c
 31555  0050B8  A0D8               	btfss	status,0,c
 31556  0050BA  D00A               	goto	l1488
 31557  0050BC                     u7980:
 31558                           
 31559                           ;display.c: 213: {;display.c: 214: *(text+3) = ' ';
 31560  0050BC  EE20 F003          	lfsr	2,3
 31561  0050C0  501B               	movf	__display_itoa_u16@text,w,c
 31562  0050C2  26D9               	addwf	fsr2l,f,c
 31563  0050C4  501C               	movf	__display_itoa_u16@text+1,w,c
 31564  0050C6  22DA               	addwfc	fsr2h,f,c
 31565  0050C8  0E20               	movlw	32
 31566  0050CA  6EDF               	movwf	indf2,c
 31567                           
 31568                           ;display.c: 215: return 3;
 31569  0050CC  0E03               	movlw	3
 31570                           
 31571                           ;display.c: 216: }
 31572  0050CE  0012               	return	
 31573  0050D0                     l1488:
 31574                           
 31575                           ;display.c: 217: else if (value>9)
 31576  0050D0  501A               	movf	__display_itoa_u16@value+1,w,c
 31577  0050D2  E104               	bnz	u7990
 31578  0050D4  0E0A               	movlw	10
 31579  0050D6  5C19               	subwf	__display_itoa_u16@value,w,c
 31580  0050D8  A0D8               	btfss	status,0,c
 31581  0050DA  D00A               	goto	l1490
 31582  0050DC                     u7990:
 31583                           
 31584                           ;display.c: 218: {;display.c: 219: *(text+2) = ' ';
 31585  0050DC  EE20 F002          	lfsr	2,2
 31586  0050E0  501B               	movf	__display_itoa_u16@text,w,c
 31587  0050E2  26D9               	addwf	fsr2l,f,c
 31588  0050E4  501C               	movf	__display_itoa_u16@text+1,w,c
 31589  0050E6  22DA               	addwfc	fsr2h,f,c
 31590  0050E8  0E20               	movlw	32
 31591  0050EA  6EDF               	movwf	indf2,c
 31592                           
 31593                           ;display.c: 220: return 2;
 31594  0050EC  0E02               	movlw	2
 31595                           
 31596                           ;display.c: 221: }
 31597  0050EE  0012               	return	
 31598  0050F0                     l1490:
 31599                           
 31600                           ;display.c: 222: else;display.c: 223: {;display.c: 224: *(text+1) = ' ';
 31601  0050F0  EE20 F001          	lfsr	2,1
 31602  0050F4  501B               	movf	__display_itoa_u16@text,w,c
 31603  0050F6  26D9               	addwf	fsr2l,f,c
 31604  0050F8  501C               	movf	__display_itoa_u16@text+1,w,c
 31605  0050FA  22DA               	addwfc	fsr2h,f,c
 31606  0050FC  0E20               	movlw	32
 31607  0050FE  6EDF               	movwf	indf2,c
 31608                           
 31609                           ;display.c: 225: return 1;
 31610  005100  0E01               	movlw	1
 31611  005102  0012               	return	
 31612  005104                     __end_of__display_itoa_u16:
 31613                           	opt stack 0
 31614                           tosu	equ	0xFFF
 31615                           tosh	equ	0xFFE
 31616                           tosl	equ	0xFFD
 31617                           pclath	equ	0xFFA
 31618                           tblptru	equ	0xFF8
 31619                           tblptrh	equ	0xFF7
 31620                           tblptrl	equ	0xFF6
 31621                           tablat	equ	0xFF5
 31622                           prodh	equ	0xFF4
 31623                           prodl	equ	0xFF3
 31624                           intcon	equ	0xFF2
 31625                           intcon3	equ	0xFF0
 31626                           indf0	equ	0xFEF
 31627                           postinc0	equ	0xFEE
 31628                           fsr0h	equ	0xFEA
 31629                           fsr0l	equ	0xFE9
 31630                           wreg	equ	0xFE8
 31631                           indf1	equ	0xFE7
 31632                           postdec1	equ	0xFE5
 31633                           plusw1	equ	0xFE3
 31634                           fsr1h	equ	0xFE2
 31635                           fsr1l	equ	0xFE1
 31636                           indf2	equ	0xFDF
 31637                           postinc2	equ	0xFDE
 31638                           postdec2	equ	0xFDD
 31639                           plusw2	equ	0xFDB
 31640                           fsr2h	equ	0xFDA
 31641                           fsr2l	equ	0xFD9
 31642                           status	equ	0xFD8
 31643                           
 31644 ;; *************** function _itoa *****************
 31645 ;; Defined at:
 31646 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31647 ;; Parameters:    Size  Location     Type
 31648 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31649 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31650 ;;  val             2   18[COMRAM] int 
 31651 ;;  base            2   20[COMRAM] int 
 31652 ;; Auto vars:     Size  Location     Type
 31653 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31654 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31655 ;; Return value:  Size  Location     Type
 31656 ;;                  2   16[COMRAM] PTR unsigned char 
 31657 ;; Registers used:
 31658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31659 ;; Tracked objects:
 31660 ;;		On entry : 0/0
 31661 ;;		On exit  : 0/0
 31662 ;;		Unchanged: 0/0
 31663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31664 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31667 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31668 ;;Total ram usage:        8 bytes
 31669 ;; Hardware stack levels used:    1
 31670 ;; Hardware stack levels required when called:    2
 31671 ;; This function calls:
 31672 ;;		_utoa
 31673 ;; This function is called by:
 31674 ;;		__display_itoa_u16
 31675 ;;		__display_itoa
 31676 ;; This function uses a non-reentrant model
 31677 ;;
 31678                           
 31679                           	psect	text159
 31680  006C3E                     __ptext159:
 31681                           	opt stack 0
 31682  006C3E                     _itoa:
 31683                           	opt stack 22
 31684                           
 31685                           ;incstack = 0
 31686  006C3E  C011  F017         	movff	itoa@buf,itoa@cp
 31687  006C42  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31688  006C46  AE14               	btfss	itoa@val+1,7,c
 31689  006C48  D00C               	goto	l3527
 31690  006C4A  C011  FFD9         	movff	itoa@buf,fsr2l
 31691  006C4E  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31692  006C52  0E2D               	movlw	45
 31693  006C54  6EDF               	movwf	indf2,c
 31694  006C56  4A11               	infsnz	itoa@buf,f,c
 31695  006C58  2A12               	incf	itoa@buf+1,f,c
 31696  006C5A  6C13               	negf	itoa@val,c
 31697  006C5C  1E14               	comf	itoa@val+1,f,c
 31698  006C5E  B0D8               	btfsc	status,0,c
 31699  006C60  2A14               	incf	itoa@val+1,f,c
 31700  006C62                     l3527:
 31701  006C62  C011  F008         	movff	itoa@buf,utoa@buf
 31702  006C66  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31703  006C6A  C013  F00A         	movff	itoa@val,utoa@val
 31704  006C6E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31705  006C72  C015  F00C         	movff	itoa@base,utoa@base
 31706  006C76  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31707  006C7A  EC7B  F02A         	call	_utoa	;wreg free
 31708  006C7E  0012               	return	
 31709  006C80                     __end_of_itoa:
 31710                           	opt stack 0
 31711                           tosu	equ	0xFFF
 31712                           tosh	equ	0xFFE
 31713                           tosl	equ	0xFFD
 31714                           pclath	equ	0xFFA
 31715                           tblptru	equ	0xFF8
 31716                           tblptrh	equ	0xFF7
 31717                           tblptrl	equ	0xFF6
 31718                           tablat	equ	0xFF5
 31719                           prodh	equ	0xFF4
 31720                           prodl	equ	0xFF3
 31721                           intcon	equ	0xFF2
 31722                           intcon3	equ	0xFF0
 31723                           indf0	equ	0xFEF
 31724                           postinc0	equ	0xFEE
 31725                           fsr0h	equ	0xFEA
 31726                           fsr0l	equ	0xFE9
 31727                           wreg	equ	0xFE8
 31728                           indf1	equ	0xFE7
 31729                           postdec1	equ	0xFE5
 31730                           plusw1	equ	0xFE3
 31731                           fsr1h	equ	0xFE2
 31732                           fsr1l	equ	0xFE1
 31733                           indf2	equ	0xFDF
 31734                           postinc2	equ	0xFDE
 31735                           postdec2	equ	0xFDD
 31736                           plusw2	equ	0xFDB
 31737                           fsr2h	equ	0xFDA
 31738                           fsr2l	equ	0xFD9
 31739                           status	equ	0xFD8
 31740                           
 31741 ;; *************** function _utoa *****************
 31742 ;; Defined at:
 31743 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31744 ;; Parameters:    Size  Location     Type
 31745 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31746 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31747 ;;  val             2    9[COMRAM] unsigned int 
 31748 ;;  base            2   11[COMRAM] int 
 31749 ;; Auto vars:     Size  Location     Type
 31750 ;;  v               2   13[COMRAM] unsigned int 
 31751 ;;  c               1   15[COMRAM] unsigned char 
 31752 ;; Return value:  Size  Location     Type
 31753 ;;                  2    7[COMRAM] PTR unsigned char 
 31754 ;; Registers used:
 31755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31756 ;; Tracked objects:
 31757 ;;		On entry : 0/0
 31758 ;;		On exit  : 0/0
 31759 ;;		Unchanged: 0/0
 31760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31764 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31765 ;;Total ram usage:        9 bytes
 31766 ;; Hardware stack levels used:    1
 31767 ;; Hardware stack levels required when called:    1
 31768 ;; This function calls:
 31769 ;;		___lwdiv
 31770 ;;		___lwmod
 31771 ;; This function is called by:
 31772 ;;		_itoa
 31773 ;; This function uses a non-reentrant model
 31774 ;;
 31775                           
 31776                           	psect	text160
 31777  0054F6                     __ptext160:
 31778                           	opt stack 0
 31779  0054F6                     _utoa:
 31780                           	opt stack 22
 31781                           
 31782                           ;incstack = 0
 31783  0054F6  C00A  F00E         	movff	utoa@val,utoa@v
 31784  0054FA  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31785  0054FE  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31786  005502  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31787  005506  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31788  00550A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31789  00550E  EC67  F034         	call	___lwdiv	;wreg free
 31790  005512  C001  F00E         	movff	?___lwdiv,utoa@v
 31791  005516  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31792  00551A  4A08               	infsnz	utoa@buf,f,c
 31793  00551C  2A09               	incf	utoa@buf+1,f,c
 31794  00551E  500E               	movf	utoa@v,w,c
 31795  005520  100F               	iorwf	utoa@v+1,w,c
 31796  005522  A4D8               	btfss	status,2,c
 31797  005524  D7EC               	goto	l3531
 31798  005526  C008  FFD9         	movff	utoa@buf,fsr2l
 31799  00552A  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31800  00552E  0E00               	movlw	0
 31801  005530  6EDF               	movwf	indf2,c
 31802  005532  0608               	decf	utoa@buf,f,c
 31803  005534  A0D8               	btfss	status,0,c
 31804  005536  0609               	decf	utoa@buf+1,f,c
 31805  005538  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31806  00553C  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31807  005540  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31808  005544  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31809  005548  EC40  F036         	call	___lwmod	;wreg free
 31810  00554C  5001               	movf	?___lwmod,w,c
 31811  00554E  6E10               	movwf	utoa@c,c
 31812  005550  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31813  005554  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31814  005558  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31815  00555C  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31816  005560  EC67  F034         	call	___lwdiv	;wreg free
 31817  005564  C001  F00A         	movff	?___lwdiv,utoa@val
 31818  005568  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31819  00556C  0E09               	movlw	9
 31820  00556E  6410               	cpfsgt	utoa@c,c
 31821  005570  D002               	goto	l3534
 31822  005572  0E07               	movlw	7
 31823  005574  2610               	addwf	utoa@c,f,c
 31824  005576                     l3534:
 31825  005576  0E30               	movlw	48
 31826  005578  2610               	addwf	utoa@c,f,c
 31827  00557A  C008  FFD9         	movff	utoa@buf,fsr2l
 31828  00557E  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31829  005582  C010  FFDF         	movff	utoa@c,indf2
 31830  005586  0608               	decf	utoa@buf,f,c
 31831  005588  A0D8               	btfss	status,0,c
 31832  00558A  0609               	decf	utoa@buf+1,f,c
 31833  00558C  500A               	movf	utoa@val,w,c
 31834  00558E  100B               	iorwf	utoa@val+1,w,c
 31835  005590  A4D8               	btfss	status,2,c
 31836  005592  D7D2               	goto	l3533
 31837                           
 31838                           ;	Return value of _utoa is never used
 31839  005594  4A08               	infsnz	utoa@buf,f,c
 31840  005596  2A09               	incf	utoa@buf+1,f,c
 31841  005598  0012               	return	
 31842  00559A                     __end_of_utoa:
 31843                           	opt stack 0
 31844                           tosu	equ	0xFFF
 31845                           tosh	equ	0xFFE
 31846                           tosl	equ	0xFFD
 31847                           pclath	equ	0xFFA
 31848                           tblptru	equ	0xFF8
 31849                           tblptrh	equ	0xFF7
 31850                           tblptrl	equ	0xFF6
 31851                           tablat	equ	0xFF5
 31852                           prodh	equ	0xFF4
 31853                           prodl	equ	0xFF3
 31854                           intcon	equ	0xFF2
 31855                           intcon3	equ	0xFF0
 31856                           indf0	equ	0xFEF
 31857                           postinc0	equ	0xFEE
 31858                           fsr0h	equ	0xFEA
 31859                           fsr0l	equ	0xFE9
 31860                           wreg	equ	0xFE8
 31861                           indf1	equ	0xFE7
 31862                           postdec1	equ	0xFE5
 31863                           plusw1	equ	0xFE3
 31864                           fsr1h	equ	0xFE2
 31865                           fsr1l	equ	0xFE1
 31866                           indf2	equ	0xFDF
 31867                           postinc2	equ	0xFDE
 31868                           postdec2	equ	0xFDD
 31869                           plusw2	equ	0xFDB
 31870                           fsr2h	equ	0xFDA
 31871                           fsr2l	equ	0xFD9
 31872                           status	equ	0xFD8
 31873                           
 31874 ;; *************** function ___lwmod *****************
 31875 ;; Defined at:
 31876 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;  dividend        2    0[COMRAM] unsigned int 
 31879 ;;  divisor         2    2[COMRAM] unsigned int 
 31880 ;; Auto vars:     Size  Location     Type
 31881 ;;  counter         1    4[COMRAM] unsigned char 
 31882 ;; Return value:  Size  Location     Type
 31883 ;;                  2    0[COMRAM] unsigned int 
 31884 ;; Registers used:
 31885 ;;		wreg, status,2, status,0
 31886 ;; Tracked objects:
 31887 ;;		On entry : 0/0
 31888 ;;		On exit  : 0/0
 31889 ;;		Unchanged: 0/0
 31890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31894 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31895 ;;Total ram usage:        5 bytes
 31896 ;; Hardware stack levels used:    1
 31897 ;; This function calls:
 31898 ;;		Nothing
 31899 ;; This function is called by:
 31900 ;;		_utoa
 31901 ;; This function uses a non-reentrant model
 31902 ;;
 31903                           
 31904                           	psect	text161
 31905  006C80                     __ptext161:
 31906                           	opt stack 0
 31907  006C80                     ___lwmod:
 31908                           	opt stack 22
 31909                           
 31910                           ;incstack = 0
 31911  006C80  5003               	movf	___lwmod@divisor,w,c
 31912  006C82  1004               	iorwf	___lwmod@divisor+1,w,c
 31913  006C84  B4D8               	btfsc	status,2,c
 31914  006C86  D018               	goto	l3358
 31915  006C88  0E01               	movlw	1
 31916  006C8A  6E05               	movwf	___lwmod@counter,c
 31917  006C8C  D004               	goto	l3353
 31918  006C8E  90D8               	bcf	status,0,c
 31919  006C90  3603               	rlcf	___lwmod@divisor,f,c
 31920  006C92  3604               	rlcf	___lwmod@divisor+1,f,c
 31921  006C94  2A05               	incf	___lwmod@counter,f,c
 31922  006C96                     l3353:
 31923  006C96  AE04               	btfss	___lwmod@divisor+1,7,c
 31924  006C98  D7FA               	goto	l3354
 31925  006C9A                     u7040:
 31926  006C9A  5003               	movf	___lwmod@divisor,w,c
 31927  006C9C  5C01               	subwf	___lwmod@dividend,w,c
 31928  006C9E  5004               	movf	___lwmod@divisor+1,w,c
 31929  006CA0  5802               	subwfb	___lwmod@dividend+1,w,c
 31930  006CA2  A0D8               	btfss	status,0,c
 31931  006CA4  D004               	goto	l3357
 31932  006CA6  5003               	movf	___lwmod@divisor,w,c
 31933  006CA8  5E01               	subwf	___lwmod@dividend,f,c
 31934  006CAA  5004               	movf	___lwmod@divisor+1,w,c
 31935  006CAC  5A02               	subwfb	___lwmod@dividend+1,f,c
 31936  006CAE                     l3357:
 31937  006CAE  90D8               	bcf	status,0,c
 31938  006CB0  3204               	rrcf	___lwmod@divisor+1,f,c
 31939  006CB2  3203               	rrcf	___lwmod@divisor,f,c
 31940  006CB4  2E05               	decfsz	___lwmod@counter,f,c
 31941  006CB6  D7F1               	goto	u7040
 31942  006CB8                     l3358:
 31943  006CB8  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31944  006CBC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31945  006CC0  0012               	return		;funcret
 31946  006CC2                     __end_of___lwmod:
 31947                           	opt stack 0
 31948                           tosu	equ	0xFFF
 31949                           tosh	equ	0xFFE
 31950                           tosl	equ	0xFFD
 31951                           pclath	equ	0xFFA
 31952                           tblptru	equ	0xFF8
 31953                           tblptrh	equ	0xFF7
 31954                           tblptrl	equ	0xFF6
 31955                           tablat	equ	0xFF5
 31956                           prodh	equ	0xFF4
 31957                           prodl	equ	0xFF3
 31958                           intcon	equ	0xFF2
 31959                           intcon3	equ	0xFF0
 31960                           indf0	equ	0xFEF
 31961                           postinc0	equ	0xFEE
 31962                           fsr0h	equ	0xFEA
 31963                           fsr0l	equ	0xFE9
 31964                           wreg	equ	0xFE8
 31965                           indf1	equ	0xFE7
 31966                           postdec1	equ	0xFE5
 31967                           plusw1	equ	0xFE3
 31968                           fsr1h	equ	0xFE2
 31969                           fsr1l	equ	0xFE1
 31970                           indf2	equ	0xFDF
 31971                           postinc2	equ	0xFDE
 31972                           postdec2	equ	0xFDD
 31973                           plusw2	equ	0xFDB
 31974                           fsr2h	equ	0xFDA
 31975                           fsr2l	equ	0xFD9
 31976                           status	equ	0xFD8
 31977                           
 31978 ;; *************** function ___lwdiv *****************
 31979 ;; Defined at:
 31980 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31981 ;; Parameters:    Size  Location     Type
 31982 ;;  dividend        2    0[COMRAM] unsigned int 
 31983 ;;  divisor         2    2[COMRAM] unsigned int 
 31984 ;; Auto vars:     Size  Location     Type
 31985 ;;  quotient        2    4[COMRAM] unsigned int 
 31986 ;;  counter         1    6[COMRAM] unsigned char 
 31987 ;; Return value:  Size  Location     Type
 31988 ;;                  2    0[COMRAM] unsigned int 
 31989 ;; Registers used:
 31990 ;;		wreg, status,2, status,0
 31991 ;; Tracked objects:
 31992 ;;		On entry : 0/0
 31993 ;;		On exit  : 0/0
 31994 ;;		Unchanged: 0/0
 31995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31997 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31999 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32000 ;;Total ram usage:        7 bytes
 32001 ;; Hardware stack levels used:    1
 32002 ;; This function calls:
 32003 ;;		Nothing
 32004 ;; This function is called by:
 32005 ;;		_utoa
 32006 ;; This function uses a non-reentrant model
 32007 ;;
 32008                           
 32009                           	psect	text162
 32010  0068CE                     __ptext162:
 32011                           	opt stack 0
 32012  0068CE                     ___lwdiv:
 32013                           	opt stack 22
 32014                           
 32015                           ;incstack = 0
 32016  0068CE  0E00               	movlw	0
 32017  0068D0  6E06               	movwf	___lwdiv@quotient+1,c
 32018  0068D2  0E00               	movlw	0
 32019  0068D4  6E05               	movwf	___lwdiv@quotient,c
 32020  0068D6  5003               	movf	___lwdiv@divisor,w,c
 32021  0068D8  1004               	iorwf	___lwdiv@divisor+1,w,c
 32022  0068DA  B4D8               	btfsc	status,2,c
 32023  0068DC  D01C               	goto	l3348
 32024  0068DE  0E01               	movlw	1
 32025  0068E0  6E07               	movwf	___lwdiv@counter,c
 32026  0068E2  D004               	goto	l3343
 32027  0068E4  90D8               	bcf	status,0,c
 32028  0068E6  3603               	rlcf	___lwdiv@divisor,f,c
 32029  0068E8  3604               	rlcf	___lwdiv@divisor+1,f,c
 32030  0068EA  2A07               	incf	___lwdiv@counter,f,c
 32031  0068EC                     l3343:
 32032  0068EC  AE04               	btfss	___lwdiv@divisor+1,7,c
 32033  0068EE  D7FA               	goto	l3344
 32034  0068F0                     u7010:
 32035  0068F0  90D8               	bcf	status,0,c
 32036  0068F2  3605               	rlcf	___lwdiv@quotient,f,c
 32037  0068F4  3606               	rlcf	___lwdiv@quotient+1,f,c
 32038  0068F6  5003               	movf	___lwdiv@divisor,w,c
 32039  0068F8  5C01               	subwf	___lwdiv@dividend,w,c
 32040  0068FA  5004               	movf	___lwdiv@divisor+1,w,c
 32041  0068FC  5802               	subwfb	___lwdiv@dividend+1,w,c
 32042  0068FE  A0D8               	btfss	status,0,c
 32043  006900  D005               	goto	l3347
 32044  006902  5003               	movf	___lwdiv@divisor,w,c
 32045  006904  5E01               	subwf	___lwdiv@dividend,f,c
 32046  006906  5004               	movf	___lwdiv@divisor+1,w,c
 32047  006908  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32048  00690A  8005               	bsf	___lwdiv@quotient,0,c
 32049  00690C                     l3347:
 32050  00690C  90D8               	bcf	status,0,c
 32051  00690E  3204               	rrcf	___lwdiv@divisor+1,f,c
 32052  006910  3203               	rrcf	___lwdiv@divisor,f,c
 32053  006912  2E07               	decfsz	___lwdiv@counter,f,c
 32054  006914  D7ED               	goto	u7010
 32055  006916                     l3348:
 32056  006916  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32057  00691A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32058  00691E  0012               	return		;funcret
 32059  006920                     __end_of___lwdiv:
 32060                           	opt stack 0
 32061                           tosu	equ	0xFFF
 32062                           tosh	equ	0xFFE
 32063                           tosl	equ	0xFFD
 32064                           pclath	equ	0xFFA
 32065                           tblptru	equ	0xFF8
 32066                           tblptrh	equ	0xFF7
 32067                           tblptrl	equ	0xFF6
 32068                           tablat	equ	0xFF5
 32069                           prodh	equ	0xFF4
 32070                           prodl	equ	0xFF3
 32071                           intcon	equ	0xFF2
 32072                           intcon3	equ	0xFF0
 32073                           indf0	equ	0xFEF
 32074                           postinc0	equ	0xFEE
 32075                           fsr0h	equ	0xFEA
 32076                           fsr0l	equ	0xFE9
 32077                           wreg	equ	0xFE8
 32078                           indf1	equ	0xFE7
 32079                           postdec1	equ	0xFE5
 32080                           plusw1	equ	0xFE3
 32081                           fsr1h	equ	0xFE2
 32082                           fsr1l	equ	0xFE1
 32083                           indf2	equ	0xFDF
 32084                           postinc2	equ	0xFDE
 32085                           postdec2	equ	0xFDD
 32086                           plusw2	equ	0xFDB
 32087                           fsr2h	equ	0xFDA
 32088                           fsr2l	equ	0xFD9
 32089                           status	equ	0xFD8
 32090                           
 32091 ;; *************** function _i2c_eeprom_writeByte *****************
 32092 ;; Defined at:
 32093 ;;		line 187 in file "i2c.c"
 32094 ;; Parameters:    Size  Location     Type
 32095 ;;  address         2   10[COMRAM] unsigned int 
 32096 ;;  data            1   12[COMRAM] unsigned char 
 32097 ;; Auto vars:     Size  Location     Type
 32098 ;;  dat             2   16[COMRAM] unsigned char [2]
 32099 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32100 ;; Return value:  Size  Location     Type
 32101 ;;                  1    wreg      void 
 32102 ;; Registers used:
 32103 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32104 ;; Tracked objects:
 32105 ;;		On entry : 0/0
 32106 ;;		On exit  : 0/0
 32107 ;;		Unchanged: 0/0
 32108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32110 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32112 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32113 ;;Total ram usage:        9 bytes
 32114 ;; Hardware stack levels used:    1
 32115 ;; Hardware stack levels required when called:    2
 32116 ;; This function calls:
 32117 ;;		__i2c_eeprom_busy
 32118 ;;		__i2c_write
 32119 ;; This function is called by:
 32120 ;;		__normal_mode
 32121 ;;		__ui_encoder
 32122 ;;		__parse_command_short
 32123 ;; This function uses a non-reentrant model
 32124 ;;
 32125                           
 32126                           	psect	text163
 32127  006BB8                     __ptext163:
 32128                           	opt stack 0
 32129  006BB8                     _i2c_eeprom_writeByte:
 32130                           	opt stack 26
 32131                           
 32132                           ;i2c.c: 189: uint8_t slave_address;;i2c.c: 190: uint8_t dat[2];;i2c.c: 193: while(_i2c_e
      +                          eprom_busy());
 32133                           
 32134                           ;incstack = 0
 32135  006BB8  EC7F  F038         	call	__i2c_eeprom_busy	;wreg free
 32136  006BBC  0900               	iorlw	0
 32137  006BBE  A4D8               	btfss	status,2,c
 32138  006BC0  D7FB               	goto	_i2c_eeprom_writeByte
 32139                           
 32140                           ;i2c.c: 195: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 32141  006BC2  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32142  006BC6  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32143  006BCA  0E07               	movlw	7
 32144  006BCC  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32145  006BCE                     u10045:
 32146  006BCE  90D8               	bcf	status,0,c
 32147  006BD0  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32148  006BD2  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32149  006BD4  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32150  006BD6  D7FB               	goto	u10045
 32151  006BD8  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32152  006BDA  0B0E               	andlw	14
 32153  006BDC  09A0               	iorlw	160
 32154  006BDE  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32155                           
 32156                           ;i2c.c: 196: dat[0] = address & 0xFF;
 32157  006BE0  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32158                           
 32159                           ;i2c.c: 197: dat[1] = data;
 32160  006BE4  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32161                           
 32162                           ;i2c.c: 199: _i2c_write(slave_address, &dat[0], 2);
 32163  006BE8  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32164  006BEA  6E06               	movwf	__i2c_write@data,c
 32165  006BEC  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32166  006BEE  6E07               	movwf	__i2c_write@data+1,c
 32167  006BF0  0E02               	movlw	2
 32168  006BF2  6E08               	movwf	__i2c_write@length,c
 32169  006BF4  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32170  006BF6  EC73  F035         	call	__i2c_write
 32171  006BFA  0012               	return		;funcret
 32172  006BFC                     __end_of_i2c_eeprom_writeByte:
 32173                           	opt stack 0
 32174                           tosu	equ	0xFFF
 32175                           tosh	equ	0xFFE
 32176                           tosl	equ	0xFFD
 32177                           pclath	equ	0xFFA
 32178                           tblptru	equ	0xFF8
 32179                           tblptrh	equ	0xFF7
 32180                           tblptrl	equ	0xFF6
 32181                           tablat	equ	0xFF5
 32182                           prodh	equ	0xFF4
 32183                           prodl	equ	0xFF3
 32184                           intcon	equ	0xFF2
 32185                           intcon3	equ	0xFF0
 32186                           indf0	equ	0xFEF
 32187                           postinc0	equ	0xFEE
 32188                           fsr0h	equ	0xFEA
 32189                           fsr0l	equ	0xFE9
 32190                           wreg	equ	0xFE8
 32191                           indf1	equ	0xFE7
 32192                           postdec1	equ	0xFE5
 32193                           plusw1	equ	0xFE3
 32194                           fsr1h	equ	0xFE2
 32195                           fsr1l	equ	0xFE1
 32196                           indf2	equ	0xFDF
 32197                           postinc2	equ	0xFDE
 32198                           postdec2	equ	0xFDD
 32199                           plusw2	equ	0xFDB
 32200                           fsr2h	equ	0xFDA
 32201                           fsr2l	equ	0xFD9
 32202                           status	equ	0xFD8
 32203                           
 32204 ;; *************** function __i2c_write *****************
 32205 ;; Defined at:
 32206 ;;		line 83 in file "i2c.c"
 32207 ;; Parameters:    Size  Location     Type
 32208 ;;  slave_addres    1    wreg     unsigned char 
 32209 ;;  data            2    5[COMRAM] PTR unsigned char 
 32210 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 32211 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 32212 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 32213 ;;  length          1    7[COMRAM] unsigned char 
 32214 ;; Auto vars:     Size  Location     Type
 32215 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32216 ;;  cntr            1    9[COMRAM] unsigned char 
 32217 ;; Return value:  Size  Location     Type
 32218 ;;                  1    wreg      void 
 32219 ;; Registers used:
 32220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32221 ;; Tracked objects:
 32222 ;;		On entry : 0/0
 32223 ;;		On exit  : 0/0
 32224 ;;		Unchanged: 0/0
 32225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32226 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32229 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32230 ;;Total ram usage:        5 bytes
 32231 ;; Hardware stack levels used:    1
 32232 ;; Hardware stack levels required when called:    1
 32233 ;; This function calls:
 32234 ;;		__i2c_send
 32235 ;;		__i2c_start
 32236 ;;		__i2c_stop
 32237 ;;		__i2c_wait_idle
 32238 ;; This function is called by:
 32239 ;;		_i2c_eeprom_writeByte
 32240 ;;		_i2c_eeprom_readByte
 32241 ;;		_i2c_display_init
 32242 ;;		__ic2_display_set_ddram_address
 32243 ;;		__ic2_display_set_cgram_address
 32244 ;;		_i2c_display_program_custom_character
 32245 ;;		_i2c_adc_start
 32246 ;;		_i2c_eeprom_write
 32247 ;;		_i2c_eeprom_read
 32248 ;;		__i2c_display_send_init_sequence
 32249 ;; This function uses a non-reentrant model
 32250 ;;
 32251                           
 32252                           	psect	text164
 32253  006AE6                     __ptext164:
 32254                           	opt stack 0
 32255  006AE6                     __i2c_write:
 32256                           	opt stack 25
 32257                           
 32258                           ;incstack = 0
 32259                           ;__i2c_write@slave_address stored from wreg
 32260  006AE6  6E09               	movwf	__i2c_write@slave_address,c
 32261                           
 32262                           ;i2c.c: 85: uint8_t cntr;;i2c.c: 87: _i2c_wait_idle();
 32263  006AE8  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32264                           
 32265                           ;i2c.c: 88: _i2c_start();
 32266  006AEC  EC1D  F03A         	call	__i2c_start	;wreg free
 32267                           
 32268                           ;i2c.c: 89: _i2c_wait_idle();
 32269  006AF0  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32270                           
 32271                           ;i2c.c: 90: _i2c_send(slave_address);
 32272  006AF4  5009               	movf	__i2c_write@slave_address,w,c
 32273  006AF6  EC21  F03A         	call	__i2c_send
 32274                           
 32275                           ;i2c.c: 91: _i2c_wait_idle();
 32276  006AFA  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32277                           
 32278                           ;i2c.c: 93: for(cntr=0; cntr<length; ++cntr)
 32279  006AFE  0E00               	movlw	0
 32280  006B00  6E0A               	movwf	__i2c_write@cntr,c
 32281  006B02  D00E               	goto	l1151
 32282  006B04                     
 32283                           ;i2c.c: 94: {;i2c.c: 95: _i2c_send(data[cntr]);
 32284  006B04  500A               	movf	__i2c_write@cntr,w,c
 32285  006B06  0D01               	mullw	1
 32286  006B08  50F3               	movf	prodl,w,c
 32287  006B0A  2406               	addwf	__i2c_write@data,w,c
 32288  006B0C  6ED9               	movwf	fsr2l,c
 32289  006B0E  50F4               	movf	prodh,w,c
 32290  006B10  2007               	addwfc	__i2c_write@data+1,w,c
 32291  006B12  6EDA               	movwf	fsr2h,c
 32292  006B14  50DF               	movf	indf2,w,c
 32293  006B16  EC21  F03A         	call	__i2c_send
 32294                           
 32295                           ;i2c.c: 96: _i2c_wait_idle();
 32296  006B1A  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32297  006B1E  2A0A               	incf	__i2c_write@cntr,f,c
 32298  006B20                     l1151:
 32299  006B20  5008               	movf	__i2c_write@length,w,c
 32300  006B22  5C0A               	subwf	__i2c_write@cntr,w,c
 32301  006B24  A0D8               	btfss	status,0,c
 32302  006B26  D7EE               	goto	l1152
 32303                           
 32304                           ;i2c.c: 97: };i2c.c: 99: _i2c_stop();
 32305  006B28  EC19  F03A         	call	__i2c_stop	;wreg free
 32306  006B2C  0012               	return		;funcret
 32307  006B2E                     __end_of__i2c_write:
 32308                           	opt stack 0
 32309                           tosu	equ	0xFFF
 32310                           tosh	equ	0xFFE
 32311                           tosl	equ	0xFFD
 32312                           pclath	equ	0xFFA
 32313                           tblptru	equ	0xFF8
 32314                           tblptrh	equ	0xFF7
 32315                           tblptrl	equ	0xFF6
 32316                           tablat	equ	0xFF5
 32317                           prodh	equ	0xFF4
 32318                           prodl	equ	0xFF3
 32319                           intcon	equ	0xFF2
 32320                           intcon3	equ	0xFF0
 32321                           indf0	equ	0xFEF
 32322                           postinc0	equ	0xFEE
 32323                           fsr0h	equ	0xFEA
 32324                           fsr0l	equ	0xFE9
 32325                           wreg	equ	0xFE8
 32326                           indf1	equ	0xFE7
 32327                           postdec1	equ	0xFE5
 32328                           plusw1	equ	0xFE3
 32329                           fsr1h	equ	0xFE2
 32330                           fsr1l	equ	0xFE1
 32331                           indf2	equ	0xFDF
 32332                           postinc2	equ	0xFDE
 32333                           postdec2	equ	0xFDD
 32334                           plusw2	equ	0xFDB
 32335                           fsr2h	equ	0xFDA
 32336                           fsr2l	equ	0xFD9
 32337                           status	equ	0xFD8
 32338                           
 32339 ;; *************** function __i2c_eeprom_busy *****************
 32340 ;; Defined at:
 32341 ;;		line 168 in file "i2c.c"
 32342 ;; Parameters:    Size  Location     Type
 32343 ;;		None
 32344 ;; Auto vars:     Size  Location     Type
 32345 ;;  busy            1    5[COMRAM] unsigned char 
 32346 ;; Return value:  Size  Location     Type
 32347 ;;                  1    wreg      unsigned char 
 32348 ;; Registers used:
 32349 ;;		wreg, status,2, status,0, cstack
 32350 ;; Tracked objects:
 32351 ;;		On entry : 0/0
 32352 ;;		On exit  : 0/0
 32353 ;;		Unchanged: 0/0
 32354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32359 ;;Total ram usage:        1 bytes
 32360 ;; Hardware stack levels used:    1
 32361 ;; Hardware stack levels required when called:    1
 32362 ;; This function calls:
 32363 ;;		__i2c_send
 32364 ;;		__i2c_start
 32365 ;;		__i2c_stop
 32366 ;;		__i2c_wait_idle
 32367 ;; This function is called by:
 32368 ;;		_i2c_eeprom_writeByte
 32369 ;;		_i2c_eeprom_readByte
 32370 ;;		_i2c_eeprom_write
 32371 ;;		_i2c_eeprom_read
 32372 ;; This function uses a non-reentrant model
 32373 ;;
 32374                           
 32375                           	psect	text165
 32376  0070FE                     __ptext165:
 32377                           	opt stack 0
 32378  0070FE                     __i2c_eeprom_busy:
 32379                           	opt stack 26
 32380                           
 32381                           ;i2c.c: 170: uint8_t busy;;i2c.c: 171: _i2c_wait_idle();
 32382                           
 32383                           ;incstack = 0
 32384  0070FE  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32385                           
 32386                           ;i2c.c: 172: _i2c_start();
 32387  007102  EC1D  F03A         	call	__i2c_start	;wreg free
 32388                           
 32389                           ;i2c.c: 173: _i2c_wait_idle();
 32390  007106  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32391                           
 32392                           ;i2c.c: 174: _i2c_send(0b10100000);
 32393  00710A  0EA0               	movlw	160
 32394  00710C  EC21  F03A         	call	__i2c_send
 32395                           
 32396                           ;i2c.c: 175: _i2c_wait_idle();
 32397  007110  EC8E  F032         	call	__i2c_wait_idle	;wreg free
 32398                           
 32399                           ;i2c.c: 179: busy = SSP1CON2bits.ACKSTAT;
 32400  007114  0E00               	movlw	0
 32401  007116  BCC5               	btfsc	4037,6,c	;volatile
 32402  007118  0E01               	movlw	1
 32403  00711A  6E06               	movwf	__i2c_eeprom_busy@busy,c
 32404                           
 32405                           ;i2c.c: 180: _i2c_stop();
 32406  00711C  EC19  F03A         	call	__i2c_stop	;wreg free
 32407                           
 32408                           ;i2c.c: 182: return 0;
 32409  007120  0E00               	movlw	0
 32410  007122  0012               	return	
 32411  007124                     __end_of__i2c_eeprom_busy:
 32412                           	opt stack 0
 32413                           tosu	equ	0xFFF
 32414                           tosh	equ	0xFFE
 32415                           tosl	equ	0xFFD
 32416                           pclath	equ	0xFFA
 32417                           tblptru	equ	0xFF8
 32418                           tblptrh	equ	0xFF7
 32419                           tblptrl	equ	0xFF6
 32420                           tablat	equ	0xFF5
 32421                           prodh	equ	0xFF4
 32422                           prodl	equ	0xFF3
 32423                           intcon	equ	0xFF2
 32424                           intcon3	equ	0xFF0
 32425                           indf0	equ	0xFEF
 32426                           postinc0	equ	0xFEE
 32427                           fsr0h	equ	0xFEA
 32428                           fsr0l	equ	0xFE9
 32429                           wreg	equ	0xFE8
 32430                           indf1	equ	0xFE7
 32431                           postdec1	equ	0xFE5
 32432                           plusw1	equ	0xFE3
 32433                           fsr1h	equ	0xFE2
 32434                           fsr1l	equ	0xFE1
 32435                           indf2	equ	0xFDF
 32436                           postinc2	equ	0xFDE
 32437                           postdec2	equ	0xFDD
 32438                           plusw2	equ	0xFDB
 32439                           fsr2h	equ	0xFDA
 32440                           fsr2l	equ	0xFD9
 32441                           status	equ	0xFD8
 32442                           
 32443 ;; *************** function __i2c_wait_idle *****************
 32444 ;; Defined at:
 32445 ;;		line 39 in file "i2c.c"
 32446 ;; Parameters:    Size  Location     Type
 32447 ;;		None
 32448 ;; Auto vars:     Size  Location     Type
 32449 ;;		None
 32450 ;; Return value:  Size  Location     Type
 32451 ;;                  1    wreg      void 
 32452 ;; Registers used:
 32453 ;;		wreg, status,2, status,0
 32454 ;; Tracked objects:
 32455 ;;		On entry : 0/0
 32456 ;;		On exit  : 0/0
 32457 ;;		Unchanged: 0/0
 32458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32461 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32462 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32463 ;;Total ram usage:        5 bytes
 32464 ;; Hardware stack levels used:    1
 32465 ;; This function calls:
 32466 ;;		Nothing
 32467 ;; This function is called by:
 32468 ;;		__i2c_write
 32469 ;;		__i2c_read
 32470 ;;		__i2c_eeprom_busy
 32471 ;;		_i2c_display_write_fixed
 32472 ;;		_i2c_adc_read
 32473 ;;		_i2c_display_write
 32474 ;; This function uses a non-reentrant model
 32475 ;;
 32476                           
 32477                           	psect	text166
 32478  00651C                     __ptext166:
 32479                           	opt stack 0
 32480  00651C                     __i2c_wait_idle:
 32481                           	opt stack 25
 32482                           
 32483                           ;i2c.c: 41: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32484                           
 32485                           ;incstack = 0
 32486  00651C  A4C7               	btfss	4039,2,c	;volatile
 32487  00651E  D003               	goto	u7110
 32488  006520  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32489  006522  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32490  006524  D001               	goto	u7118
 32491  006526                     u7110:
 32492  006526  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32493  006528                     u7118:
 32494  006528  A0C5               	btfss	4037,0,c	;volatile
 32495  00652A  D003               	goto	u7120
 32496  00652C  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32497  00652E  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32498  006530  D001               	goto	u7128
 32499  006532                     u7120:
 32500  006532  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32501  006534                     u7128:
 32502  006534  A2C5               	btfss	4037,1,c	;volatile
 32503  006536  D003               	goto	u7130
 32504  006538  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32505  00653A  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32506  00653C  D001               	goto	u7138
 32507  00653E                     u7130:
 32508  00653E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32509  006540                     u7138:
 32510  006540  A4C5               	btfss	4037,2,c	;volatile
 32511  006542  D003               	goto	u7140
 32512  006544  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32513  006546  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32514  006548  D001               	goto	u7148
 32515  00654A                     u7140:
 32516  00654A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32517  00654C                     u7148:
 32518  00654C  A6C5               	btfss	4037,3,c	;volatile
 32519  00654E  D003               	goto	u7150
 32520  006550  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32521  006552  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32522  006554  D001               	goto	u7158
 32523  006556                     u7150:
 32524  006556  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32525  006558                     u7158:
 32526  006558  A8C5               	btfss	4037,4,c	;volatile
 32527  00655A  D002               	goto	u7160
 32528  00655C  0E01               	movlw	1
 32529  00655E  D001               	goto	u7166
 32530  006560                     u7160:
 32531  006560  0E00               	movlw	0
 32532  006562                     u7166:
 32533  006562  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32534  006564  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32535  006566  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32536  006568  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32537  00656A  1001               	iorwf	??__i2c_wait_idle,w,c
 32538  00656C  0900               	iorlw	0
 32539  00656E  B4D8               	btfsc	status,2,c
 32540  006570  0012               	return	
 32541  006572  D7D4               	goto	__i2c_wait_idle
 32542  006574                     __end_of__i2c_wait_idle:
 32543                           	opt stack 0
 32544                           tosu	equ	0xFFF
 32545                           tosh	equ	0xFFE
 32546                           tosl	equ	0xFFD
 32547                           pclath	equ	0xFFA
 32548                           tblptru	equ	0xFF8
 32549                           tblptrh	equ	0xFF7
 32550                           tblptrl	equ	0xFF6
 32551                           tablat	equ	0xFF5
 32552                           prodh	equ	0xFF4
 32553                           prodl	equ	0xFF3
 32554                           intcon	equ	0xFF2
 32555                           intcon3	equ	0xFF0
 32556                           indf0	equ	0xFEF
 32557                           postinc0	equ	0xFEE
 32558                           fsr0h	equ	0xFEA
 32559                           fsr0l	equ	0xFE9
 32560                           wreg	equ	0xFE8
 32561                           indf1	equ	0xFE7
 32562                           postdec1	equ	0xFE5
 32563                           plusw1	equ	0xFE3
 32564                           fsr1h	equ	0xFE2
 32565                           fsr1l	equ	0xFE1
 32566                           indf2	equ	0xFDF
 32567                           postinc2	equ	0xFDE
 32568                           postdec2	equ	0xFDD
 32569                           plusw2	equ	0xFDB
 32570                           fsr2h	equ	0xFDA
 32571                           fsr2l	equ	0xFD9
 32572                           status	equ	0xFD8
 32573                           
 32574 ;; *************** function __i2c_stop *****************
 32575 ;; Defined at:
 32576 ;;		line 62 in file "i2c.c"
 32577 ;; Parameters:    Size  Location     Type
 32578 ;;		None
 32579 ;; Auto vars:     Size  Location     Type
 32580 ;;		None
 32581 ;; Return value:  Size  Location     Type
 32582 ;;                  1    wreg      void 
 32583 ;; Registers used:
 32584 ;;		None
 32585 ;; Tracked objects:
 32586 ;;		On entry : 0/0
 32587 ;;		On exit  : 0/0
 32588 ;;		Unchanged: 0/0
 32589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32594 ;;Total ram usage:        0 bytes
 32595 ;; Hardware stack levels used:    1
 32596 ;; This function calls:
 32597 ;;		Nothing
 32598 ;; This function is called by:
 32599 ;;		__i2c_write
 32600 ;;		__i2c_read
 32601 ;;		__i2c_eeprom_busy
 32602 ;;		_i2c_display_write_fixed
 32603 ;;		_i2c_adc_read
 32604 ;;		_i2c_display_write
 32605 ;; This function uses a non-reentrant model
 32606 ;;
 32607                           
 32608                           	psect	text167
 32609  007432                     __ptext167:
 32610                           	opt stack 0
 32611  007432                     __i2c_stop:
 32612                           	opt stack 25
 32613                           
 32614                           ;i2c.c: 64: SSP1CON2bits.PEN = 1;
 32615                           
 32616                           ;incstack = 0
 32617  007432  84C5               	bsf	4037,2,c	;volatile
 32618  007434  A4C5               	btfss	4037,2,c	;volatile
 32619  007436  0012               	return	
 32620  007438  D7FD               	goto	l1134
 32621  00743A                     __end_of__i2c_stop:
 32622                           	opt stack 0
 32623                           tosu	equ	0xFFF
 32624                           tosh	equ	0xFFE
 32625                           tosl	equ	0xFFD
 32626                           pclath	equ	0xFFA
 32627                           tblptru	equ	0xFF8
 32628                           tblptrh	equ	0xFF7
 32629                           tblptrl	equ	0xFF6
 32630                           tablat	equ	0xFF5
 32631                           prodh	equ	0xFF4
 32632                           prodl	equ	0xFF3
 32633                           intcon	equ	0xFF2
 32634                           intcon3	equ	0xFF0
 32635                           indf0	equ	0xFEF
 32636                           postinc0	equ	0xFEE
 32637                           fsr0h	equ	0xFEA
 32638                           fsr0l	equ	0xFE9
 32639                           wreg	equ	0xFE8
 32640                           indf1	equ	0xFE7
 32641                           postdec1	equ	0xFE5
 32642                           plusw1	equ	0xFE3
 32643                           fsr1h	equ	0xFE2
 32644                           fsr1l	equ	0xFE1
 32645                           indf2	equ	0xFDF
 32646                           postinc2	equ	0xFDE
 32647                           postdec2	equ	0xFDD
 32648                           plusw2	equ	0xFDB
 32649                           fsr2h	equ	0xFDA
 32650                           fsr2l	equ	0xFD9
 32651                           status	equ	0xFD8
 32652                           
 32653 ;; *************** function __i2c_start *****************
 32654 ;; Defined at:
 32655 ;;		line 44 in file "i2c.c"
 32656 ;; Parameters:    Size  Location     Type
 32657 ;;		None
 32658 ;; Auto vars:     Size  Location     Type
 32659 ;;		None
 32660 ;; Return value:  Size  Location     Type
 32661 ;;                  1    wreg      void 
 32662 ;; Registers used:
 32663 ;;		None
 32664 ;; Tracked objects:
 32665 ;;		On entry : 0/0
 32666 ;;		On exit  : 0/0
 32667 ;;		Unchanged: 0/0
 32668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32673 ;;Total ram usage:        0 bytes
 32674 ;; Hardware stack levels used:    1
 32675 ;; This function calls:
 32676 ;;		Nothing
 32677 ;; This function is called by:
 32678 ;;		__i2c_write
 32679 ;;		__i2c_read
 32680 ;;		__i2c_eeprom_busy
 32681 ;;		_i2c_display_write_fixed
 32682 ;;		_i2c_adc_read
 32683 ;;		_i2c_display_write
 32684 ;; This function uses a non-reentrant model
 32685 ;;
 32686                           
 32687                           	psect	text168
 32688  00743A                     __ptext168:
 32689                           	opt stack 0
 32690  00743A                     __i2c_start:
 32691                           	opt stack 25
 32692                           
 32693                           ;i2c.c: 46: SSP1CON2bits.SEN=1;
 32694                           
 32695                           ;incstack = 0
 32696  00743A  80C5               	bsf	4037,0,c	;volatile
 32697  00743C  A0C5               	btfss	4037,0,c	;volatile
 32698  00743E  0012               	return	
 32699  007440  D7FD               	goto	l1119
 32700  007442                     __end_of__i2c_start:
 32701                           	opt stack 0
 32702                           tosu	equ	0xFFF
 32703                           tosh	equ	0xFFE
 32704                           tosl	equ	0xFFD
 32705                           pclath	equ	0xFFA
 32706                           tblptru	equ	0xFF8
 32707                           tblptrh	equ	0xFF7
 32708                           tblptrl	equ	0xFF6
 32709                           tablat	equ	0xFF5
 32710                           prodh	equ	0xFF4
 32711                           prodl	equ	0xFF3
 32712                           intcon	equ	0xFF2
 32713                           intcon3	equ	0xFF0
 32714                           indf0	equ	0xFEF
 32715                           postinc0	equ	0xFEE
 32716                           fsr0h	equ	0xFEA
 32717                           fsr0l	equ	0xFE9
 32718                           wreg	equ	0xFE8
 32719                           indf1	equ	0xFE7
 32720                           postdec1	equ	0xFE5
 32721                           plusw1	equ	0xFE3
 32722                           fsr1h	equ	0xFE2
 32723                           fsr1l	equ	0xFE1
 32724                           indf2	equ	0xFDF
 32725                           postinc2	equ	0xFDE
 32726                           postdec2	equ	0xFDD
 32727                           plusw2	equ	0xFDB
 32728                           fsr2h	equ	0xFDA
 32729                           fsr2l	equ	0xFD9
 32730                           status	equ	0xFD8
 32731                           
 32732 ;; *************** function __i2c_send *****************
 32733 ;; Defined at:
 32734 ;;		line 50 in file "i2c.c"
 32735 ;; Parameters:    Size  Location     Type
 32736 ;;  dat             1    wreg     unsigned char 
 32737 ;; Auto vars:     Size  Location     Type
 32738 ;;  dat             1    0[COMRAM] unsigned char 
 32739 ;; Return value:  Size  Location     Type
 32740 ;;                  1    wreg      void 
 32741 ;; Registers used:
 32742 ;;		wreg
 32743 ;; Tracked objects:
 32744 ;;		On entry : 0/0
 32745 ;;		On exit  : 0/0
 32746 ;;		Unchanged: 0/0
 32747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32752 ;;Total ram usage:        1 bytes
 32753 ;; Hardware stack levels used:    1
 32754 ;; This function calls:
 32755 ;;		Nothing
 32756 ;; This function is called by:
 32757 ;;		__i2c_write
 32758 ;;		__i2c_read
 32759 ;;		__i2c_eeprom_busy
 32760 ;;		_i2c_display_write_fixed
 32761 ;;		_i2c_adc_read
 32762 ;;		_i2c_display_write
 32763 ;; This function uses a non-reentrant model
 32764 ;;
 32765                           
 32766                           	psect	text169
 32767  007442                     __ptext169:
 32768                           	opt stack 0
 32769  007442                     __i2c_send:
 32770                           	opt stack 25
 32771                           
 32772                           ;incstack = 0
 32773                           ;__i2c_send@dat stored from wreg
 32774  007442  6E01               	movwf	__i2c_send@dat,c
 32775                           
 32776                           ;i2c.c: 52: SSP1BUF = dat;
 32777  007444  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32778  007448  0012               	return		;funcret
 32779  00744A                     __end_of__i2c_send:
 32780                           	opt stack 0
 32781                           tosu	equ	0xFFF
 32782                           tosh	equ	0xFFE
 32783                           tosl	equ	0xFFD
 32784                           pclath	equ	0xFFA
 32785                           tblptru	equ	0xFF8
 32786                           tblptrh	equ	0xFF7
 32787                           tblptrl	equ	0xFF6
 32788                           tablat	equ	0xFF5
 32789                           prodh	equ	0xFF4
 32790                           prodl	equ	0xFF3
 32791                           intcon	equ	0xFF2
 32792                           intcon3	equ	0xFF0
 32793                           indf0	equ	0xFEF
 32794                           postinc0	equ	0xFEE
 32795                           fsr0h	equ	0xFEA
 32796                           fsr0l	equ	0xFE9
 32797                           wreg	equ	0xFE8
 32798                           indf1	equ	0xFE7
 32799                           postdec1	equ	0xFE5
 32800                           plusw1	equ	0xFE3
 32801                           fsr1h	equ	0xFE2
 32802                           fsr1l	equ	0xFE1
 32803                           indf2	equ	0xFDF
 32804                           postinc2	equ	0xFDE
 32805                           postdec2	equ	0xFDD
 32806                           plusw2	equ	0xFDB
 32807                           fsr2h	equ	0xFDA
 32808                           fsr2l	equ	0xFD9
 32809                           status	equ	0xFD8
 32810                           
 32811 ;; *************** function __parse_command_long *****************
 32812 ;; Defined at:
 32813 ;;		line 337 in file "api.c"
 32814 ;; Parameters:    Size  Location     Type
 32815 ;;  data            2   46[COMRAM] PTR unsigned char 
 32816 ;;		 -> ReceivedDataBuffer(64), 
 32817 ;;  out_buffer      2   48[COMRAM] PTR unsigned char 
 32818 ;;		 -> ToSendDataBuffer(64), 
 32819 ;;  out_idx_ptr     2   50[COMRAM] PTR unsigned char 
 32820 ;;		 -> api_parse@out_idx(1), 
 32821 ;; Auto vars:     Size  Location     Type
 32822 ;;  length          1   52[COMRAM] unsigned char 
 32823 ;; Return value:  Size  Location     Type
 32824 ;;                  1    wreg      unsigned char 
 32825 ;; Registers used:
 32826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32827 ;; Tracked objects:
 32828 ;;		On entry : 0/0
 32829 ;;		On exit  : 0/0
 32830 ;;		Unchanged: 0/0
 32831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32836 ;;Total ram usage:        7 bytes
 32837 ;; Hardware stack levels used:    1
 32838 ;; Hardware stack levels required when called:    7
 32839 ;; This function calls:
 32840 ;;		__parse_format_drive
 32841 ;; This function is called by:
 32842 ;;		_api_parse
 32843 ;; This function uses a non-reentrant model
 32844 ;;
 32845                           
 32846                           	psect	text170
 32847  006D3A                     __ptext170:
 32848                           	opt stack 0
 32849  006D3A                     __parse_command_long:
 32850                           	opt stack 21
 32851                           
 32852                           ;api.c: 339: uint8_t length = 65;
 32853                           
 32854                           ;incstack = 0
 32855  006D3A  0E41               	movlw	65
 32856  006D3C  6E35               	movwf	__parse_command_long@length,c
 32857                           
 32858                           ;api.c: 341: switch(data[0])
 32859  006D3E  D010               	goto	l2758
 32860  006D40                     
 32861                           ;api.c: 344: length = _parse_format_drive(data, out_buffer, out_idx_ptr);
 32862  006D40  C02F  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32863  006D44  C030  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32864  006D48  C031  F029         	movff	__parse_command_long@out_buffer,__parse_format_drive@out_buffer
 32865  006D4C  C032  F02A         	movff	__parse_command_long@out_buffer+1,__parse_format_drive@out_buffer+1
 32866  006D50  C033  F02B         	movff	__parse_command_long@out_idx_ptr,__parse_format_drive@out_idx_ptr
 32867  006D54  C034  F02C         	movff	__parse_command_long@out_idx_ptr+1,__parse_format_drive@out_idx_ptr+1
 32868  006D58  EC2D  F029         	call	__parse_format_drive	;wreg free
 32869  006D5C  6E35               	movwf	__parse_command_long@length,c
 32870                           
 32871                           ;api.c: 346: }
 32872                           
 32873                           ;api.c: 345: break;
 32874  006D5E  D008               	goto	l2760
 32875  006D60                     l2758:
 32876  006D60  C02F  FFD9         	movff	__parse_command_long@data,fsr2l
 32877  006D64  C030  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32878  006D68  50DF               	movf	indf2,w,c
 32879                           
 32880                           ; Switch size 1, requested type "space"
 32881                           ; Number of cases is 1, Range of values is 86 to 86
 32882                           ; switch strategies available:
 32883                           ; Name         Instructions Cycles
 32884                           ; simple_byte            4     3 (average)
 32885                           ;	Chosen strategy is simple_byte
 32886  006D6A  0A56               	xorlw	86	; case 86
 32887  006D6C  B4D8               	btfsc	status,2,c
 32888  006D6E  D7E8               	goto	l2759
 32889  006D70                     l2760:
 32890                           
 32891                           ;api.c: 348: return length;
 32892  006D70  5035               	movf	__parse_command_long@length,w,c
 32893  006D72  0012               	return	
 32894  006D74                     __end_of__parse_command_long:
 32895                           	opt stack 0
 32896                           tosu	equ	0xFFF
 32897                           tosh	equ	0xFFE
 32898                           tosl	equ	0xFFD
 32899                           pclath	equ	0xFFA
 32900                           tblptru	equ	0xFF8
 32901                           tblptrh	equ	0xFF7
 32902                           tblptrl	equ	0xFF6
 32903                           tablat	equ	0xFF5
 32904                           prodh	equ	0xFF4
 32905                           prodl	equ	0xFF3
 32906                           intcon	equ	0xFF2
 32907                           intcon3	equ	0xFF0
 32908                           indf0	equ	0xFEF
 32909                           postinc0	equ	0xFEE
 32910                           fsr0h	equ	0xFEA
 32911                           fsr0l	equ	0xFE9
 32912                           wreg	equ	0xFE8
 32913                           indf1	equ	0xFE7
 32914                           postdec1	equ	0xFE5
 32915                           plusw1	equ	0xFE3
 32916                           fsr1h	equ	0xFE2
 32917                           fsr1l	equ	0xFE1
 32918                           indf2	equ	0xFDF
 32919                           postinc2	equ	0xFDE
 32920                           postdec2	equ	0xFDD
 32921                           plusw2	equ	0xFDB
 32922                           fsr2h	equ	0xFDA
 32923                           fsr2l	equ	0xFD9
 32924                           status	equ	0xFD8
 32925                           
 32926 ;; *************** function __parse_format_drive *****************
 32927 ;; Defined at:
 32928 ;;		line 351 in file "api.c"
 32929 ;; Parameters:    Size  Location     Type
 32930 ;;  data            2   38[COMRAM] PTR unsigned char 
 32931 ;;		 -> ReceivedDataBuffer(64), 
 32932 ;;  out_buffer      2   40[COMRAM] PTR unsigned char 
 32933 ;;		 -> ToSendDataBuffer(64), 
 32934 ;;  out_idx_ptr     2   42[COMRAM] PTR unsigned char 
 32935 ;;		 -> api_parse@out_idx(1), 
 32936 ;; Auto vars:     Size  Location     Type
 32937 ;;  return_value    1   45[COMRAM] unsigned char 
 32938 ;; Return value:  Size  Location     Type
 32939 ;;                  1    wreg      unsigned char 
 32940 ;; Registers used:
 32941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32942 ;; Tracked objects:
 32943 ;;		On entry : 0/0
 32944 ;;		On exit  : 0/0
 32945 ;;		Unchanged: 0/0
 32946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32950 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32951 ;;Total ram usage:        8 bytes
 32952 ;; Hardware stack levels used:    1
 32953 ;; Hardware stack levels required when called:    6
 32954 ;; This function calls:
 32955 ;;		_fat_format
 32956 ;; This function is called by:
 32957 ;;		__parse_command_long
 32958 ;; This function uses a non-reentrant model
 32959 ;;
 32960                           
 32961                           	psect	text171
 32962  00525A                     __ptext171:
 32963                           	opt stack 0
 32964  00525A                     __parse_format_drive:
 32965                           	opt stack 21
 32966                           
 32967                           ;api.c: 355: uint8_t return_value;;api.c: 357: if((data[0]!=COMMAND_FORMAT_DRIVE) || (da
      +                          ta[1]!=0xDA) || (data[2]!=0x22))
 32968                           
 32969                           ;incstack = 0
 32970  00525A  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 32971  00525E  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 32972  005262  0E56               	movlw	86
 32973  005264  18DE               	xorwf	postinc2,w,c
 32974  005266  A4D8               	btfss	status,2,c
 32975  005268  D014               	goto	u10260
 32976  00526A  EE20 F001          	lfsr	2,1
 32977  00526E  5027               	movf	__parse_format_drive@data,w,c
 32978  005270  26D9               	addwf	fsr2l,f,c
 32979  005272  5028               	movf	__parse_format_drive@data+1,w,c
 32980  005274  22DA               	addwfc	fsr2h,f,c
 32981  005276  0EDA               	movlw	218
 32982  005278  18DE               	xorwf	postinc2,w,c
 32983  00527A  A4D8               	btfss	status,2,c
 32984  00527C  D00A               	goto	u10260
 32985  00527E  EE20 F002          	lfsr	2,2
 32986  005282  5027               	movf	__parse_format_drive@data,w,c
 32987  005284  26D9               	addwf	fsr2l,f,c
 32988  005286  5028               	movf	__parse_format_drive@data+1,w,c
 32989  005288  22DA               	addwfc	fsr2h,f,c
 32990  00528A  0E22               	movlw	34
 32991  00528C  18DE               	xorwf	postinc2,w,c
 32992  00528E  B4D8               	btfsc	status,2,c
 32993  005290  D002               	goto	l2764
 32994  005292                     u10260:
 32995                           
 32996                           ;api.c: 358: {;api.c: 359: return 3;
 32997  005292  0E03               	movlw	3
 32998  005294  0012               	return	
 32999  005296                     l2764:
 33000                           
 33001                           ;api.c: 360: };api.c: 362: return_value = fat_format();
 33002  005296  EC1E  F00F         	call	_fat_format	;wreg free
 33003  00529A  6E2E               	movwf	__parse_format_drive@return_value,c
 33004                           
 33005                           ;api.c: 365: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 33006  00529C  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33007  0052A0  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33008  0052A4  50DF               	movf	indf2,w,c
 33009  0052A6  B4D8               	btfsc	status,2,c
 33010  0052A8  D02B               	goto	l2768
 33011  0052AA  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33012  0052AE  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33013  0052B2  0E3F               	movlw	63
 33014  0052B4  60DF               	cpfslt	indf2,c
 33015  0052B6  D024               	goto	l2768
 33016                           
 33017                           ;api.c: 366: {;api.c: 367: out_buffer[(*out_idx_ptr)++] = COMMAND_FORMAT_DRIVE;
 33018  0052B8  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33019  0052BC  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33020  0052C0  CFDF F02D          	movff	indf2,??__parse_format_drive
 33021  0052C4  0E01               	movlw	1
 33022  0052C6  26DF               	addwf	indf2,f,c
 33023  0052C8  502D               	movf	??__parse_format_drive,w,c
 33024  0052CA  0D01               	mullw	1
 33025  0052CC  50F3               	movf	prodl,w,c
 33026  0052CE  2429               	addwf	__parse_format_drive@out_buffer,w,c
 33027  0052D0  6ED9               	movwf	fsr2l,c
 33028  0052D2  50F4               	movf	prodh,w,c
 33029  0052D4  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 33030  0052D6  6EDA               	movwf	fsr2h,c
 33031  0052D8  0E56               	movlw	86
 33032  0052DA  6EDF               	movwf	indf2,c
 33033                           
 33034                           ;api.c: 368: out_buffer[(*out_idx_ptr)++] = return_value;
 33035  0052DC  C02B  FFD9         	movff	__parse_format_drive@out_idx_ptr,fsr2l
 33036  0052E0  C02C  FFDA         	movff	__parse_format_drive@out_idx_ptr+1,fsr2h
 33037  0052E4  CFDF F02D          	movff	indf2,??__parse_format_drive
 33038  0052E8  0E01               	movlw	1
 33039  0052EA  26DF               	addwf	indf2,f,c
 33040  0052EC  502D               	movf	??__parse_format_drive,w,c
 33041  0052EE  0D01               	mullw	1
 33042  0052F0  50F3               	movf	prodl,w,c
 33043  0052F2  2429               	addwf	__parse_format_drive@out_buffer,w,c
 33044  0052F4  6ED9               	movwf	fsr2l,c
 33045  0052F6  50F4               	movf	prodh,w,c
 33046  0052F8  202A               	addwfc	__parse_format_drive@out_buffer+1,w,c
 33047  0052FA  6EDA               	movwf	fsr2h,c
 33048  0052FC  C02E  FFDF         	movff	__parse_format_drive@return_value,indf2
 33049  005300                     l2768:
 33050                           
 33051                           ;api.c: 369: };api.c: 371: return 3;
 33052  005300  0E03               	movlw	3
 33053  005302  0012               	return	
 33054  005304                     __end_of__parse_format_drive:
 33055                           	opt stack 0
 33056                           tosu	equ	0xFFF
 33057                           tosh	equ	0xFFE
 33058                           tosl	equ	0xFFD
 33059                           pclath	equ	0xFFA
 33060                           tblptru	equ	0xFF8
 33061                           tblptrh	equ	0xFF7
 33062                           tblptrl	equ	0xFF6
 33063                           tablat	equ	0xFF5
 33064                           prodh	equ	0xFF4
 33065                           prodl	equ	0xFF3
 33066                           intcon	equ	0xFF2
 33067                           intcon3	equ	0xFF0
 33068                           indf0	equ	0xFEF
 33069                           postinc0	equ	0xFEE
 33070                           fsr0h	equ	0xFEA
 33071                           fsr0l	equ	0xFE9
 33072                           wreg	equ	0xFE8
 33073                           indf1	equ	0xFE7
 33074                           postdec1	equ	0xFE5
 33075                           plusw1	equ	0xFE3
 33076                           fsr1h	equ	0xFE2
 33077                           fsr1l	equ	0xFE1
 33078                           indf2	equ	0xFDF
 33079                           postinc2	equ	0xFDE
 33080                           postdec2	equ	0xFDD
 33081                           plusw2	equ	0xFDB
 33082                           fsr2h	equ	0xFDA
 33083                           fsr2l	equ	0xFD9
 33084                           status	equ	0xFD8
 33085                           
 33086 ;; *************** function _fat_format *****************
 33087 ;; Defined at:
 33088 ;;		line 1320 in file "fat16.c"
 33089 ;; Parameters:    Size  Location     Type
 33090 ;;		None
 33091 ;; Auto vars:     Size  Location     Type
 33092 ;;  cntr            2   36[COMRAM] unsigned int 
 33093 ;; Return value:  Size  Location     Type
 33094 ;;                  1    wreg      unsigned char 
 33095 ;; Registers used:
 33096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33097 ;; Tracked objects:
 33098 ;;		On entry : 0/0
 33099 ;;		On exit  : 0/0
 33100 ;;		Unchanged: 0/0
 33101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33106 ;;Total ram usage:        2 bytes
 33107 ;; Hardware stack levels used:    1
 33108 ;; Hardware stack levels required when called:    5
 33109 ;; This function calls:
 33110 ;;		__get_data
 33111 ;;		__get_fat
 33112 ;;		__get_fbr
 33113 ;;		__get_mbr
 33114 ;;		__get_root
 33115 ;;		_flash_sector_write
 33116 ;; This function is called by:
 33117 ;;		_fat_init
 33118 ;;		__parse_format_drive
 33119 ;; This function uses a non-reentrant model
 33120 ;;
 33121                           
 33122                           	psect	text172
 33123  001E3C                     __ptext172:
 33124                           	opt stack 0
 33125  001E3C                     _fat_format:
 33126                           	opt stack 23
 33127                           
 33128                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
 33129                           
 33130                           ;incstack = 0
 33131  001E3C  0E00               	movlw	0
 33132  001E3E  6E26               	movwf	fat_format@cntr+1,c
 33133  001E40  0E00               	movlw	0
 33134  001E42  6E25               	movwf	fat_format@cntr,c
 33135  001E44                     l12253:
 33136  001E44  0E02               	movlw	2
 33137  001E46  5C26               	subwf	fat_format@cntr+1,w,c
 33138  001E48  B0D8               	btfsc	status,0,c
 33139  001E4A  D010               	goto	u9700
 33140                           
 33141                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
 33142  001E4C  0ECC               	movlw	low _buffer
 33143  001E4E  2425               	addwf	fat_format@cntr,w,c
 33144  001E50  6ED9               	movwf	fsr2l,c
 33145  001E52  0E02               	movlw	high _buffer
 33146  001E54  2026               	addwfc	fat_format@cntr+1,w,c
 33147  001E56  6EDA               	movwf	fsr2h,c
 33148  001E58  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 33149  001E5C  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 33150  001E60  ECE6  F025         	call	__get_mbr	;wreg free
 33151  001E64  6EDF               	movwf	indf2,c
 33152  001E66  4A25               	infsnz	fat_format@cntr,f,c
 33153  001E68  2A26               	incf	fat_format@cntr+1,f,c
 33154  001E6A  D7EC               	goto	l12253
 33155  001E6C                     u9700:
 33156                           
 33157                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
 33158  001E6C  0E00               	movlw	0
 33159  001E6E  6E21               	movwf	flash_sector_write@page+1,c
 33160  001E70  0E00               	movlw	0
 33161  001E72  6E20               	movwf	flash_sector_write@page,c
 33162  001E74  0ECC               	movlw	low _buffer
 33163  001E76  6E22               	movwf	flash_sector_write@data,c
 33164  001E78  0E02               	movlw	high _buffer
 33165  001E7A  6E23               	movwf	flash_sector_write@data+1,c
 33166  001E7C  EC06  F035         	call	_flash_sector_write	;wreg free
 33167                           
 33168                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
 33169  001E80  0E00               	movlw	0
 33170  001E82  6E26               	movwf	fat_format@cntr+1,c
 33171  001E84  0E00               	movlw	0
 33172  001E86  6E25               	movwf	fat_format@cntr,c
 33173  001E88                     l12267:
 33174  001E88  0E02               	movlw	2
 33175  001E8A  5C26               	subwf	fat_format@cntr+1,w,c
 33176  001E8C  B0D8               	btfsc	status,0,c
 33177  001E8E  D010               	goto	u9720
 33178                           
 33179                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
 33180  001E90  0ECC               	movlw	low _buffer
 33181  001E92  2425               	addwf	fat_format@cntr,w,c
 33182  001E94  6ED9               	movwf	fsr2l,c
 33183  001E96  0E02               	movlw	high _buffer
 33184  001E98  2026               	addwfc	fat_format@cntr+1,w,c
 33185  001E9A  6EDA               	movwf	fsr2h,c
 33186  001E9C  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 33187  001EA0  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 33188  001EA4  ECAD  F00B         	call	__get_fbr	;wreg free
 33189  001EA8  6EDF               	movwf	indf2,c
 33190  001EAA  4A25               	infsnz	fat_format@cntr,f,c
 33191  001EAC  2A26               	incf	fat_format@cntr+1,f,c
 33192  001EAE  D7EC               	goto	l12267
 33193  001EB0                     u9720:
 33194                           
 33195                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
 33196  001EB0  0E00               	movlw	0
 33197  001EB2  6E21               	movwf	flash_sector_write@page+1,c
 33198  001EB4  0E01               	movlw	1
 33199  001EB6  6E20               	movwf	flash_sector_write@page,c
 33200  001EB8  0ECC               	movlw	low _buffer
 33201  001EBA  6E22               	movwf	flash_sector_write@data,c
 33202  001EBC  0E02               	movlw	high _buffer
 33203  001EBE  6E23               	movwf	flash_sector_write@data+1,c
 33204  001EC0  EC06  F035         	call	_flash_sector_write	;wreg free
 33205                           
 33206                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
 33207  001EC4  0E00               	movlw	0
 33208  001EC6  6E26               	movwf	fat_format@cntr+1,c
 33209  001EC8  0E00               	movlw	0
 33210  001ECA  6E25               	movwf	fat_format@cntr,c
 33211  001ECC                     l12281:
 33212  001ECC  0E02               	movlw	2
 33213  001ECE  5C26               	subwf	fat_format@cntr+1,w,c
 33214  001ED0  B0D8               	btfsc	status,0,c
 33215  001ED2  D010               	goto	u9740
 33216                           
 33217                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
 33218  001ED4  0ECC               	movlw	low _buffer
 33219  001ED6  2425               	addwf	fat_format@cntr,w,c
 33220  001ED8  6ED9               	movwf	fsr2l,c
 33221  001EDA  0E02               	movlw	high _buffer
 33222  001EDC  2026               	addwfc	fat_format@cntr+1,w,c
 33223  001EDE  6EDA               	movwf	fsr2h,c
 33224  001EE0  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 33225  001EE4  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 33226  001EE8  ECBE  F033         	call	__get_fat	;wreg free
 33227  001EEC  6EDF               	movwf	indf2,c
 33228  001EEE  4A25               	infsnz	fat_format@cntr,f,c
 33229  001EF0  2A26               	incf	fat_format@cntr+1,f,c
 33230  001EF2  D7EC               	goto	l12281
 33231  001EF4                     u9740:
 33232                           
 33233                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
 33234  001EF4  0E00               	movlw	0
 33235  001EF6  6E21               	movwf	flash_sector_write@page+1,c
 33236  001EF8  0E02               	movlw	2
 33237  001EFA  6E20               	movwf	flash_sector_write@page,c
 33238  001EFC  0ECC               	movlw	low _buffer
 33239  001EFE  6E22               	movwf	flash_sector_write@data,c
 33240  001F00  0E02               	movlw	high _buffer
 33241  001F02  6E23               	movwf	flash_sector_write@data+1,c
 33242  001F04  EC06  F035         	call	_flash_sector_write	;wreg free
 33243                           
 33244                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
 33245  001F08  0E00               	movlw	0
 33246  001F0A  6E26               	movwf	fat_format@cntr+1,c
 33247  001F0C  0E00               	movlw	0
 33248  001F0E  6E25               	movwf	fat_format@cntr,c
 33249  001F10                     l12295:
 33250  001F10  0E02               	movlw	2
 33251  001F12  5C26               	subwf	fat_format@cntr+1,w,c
 33252  001F14  B0D8               	btfsc	status,0,c
 33253  001F16  D00B               	goto	u9760
 33254                           
 33255                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
 33256  001F18  0ECC               	movlw	low _buffer
 33257  001F1A  2425               	addwf	fat_format@cntr,w,c
 33258  001F1C  6ED9               	movwf	fsr2l,c
 33259  001F1E  0E02               	movlw	high _buffer
 33260  001F20  2026               	addwfc	fat_format@cntr+1,w,c
 33261  001F22  6EDA               	movwf	fsr2h,c
 33262  001F24  0E00               	movlw	0
 33263  001F26  6EDF               	movwf	indf2,c
 33264  001F28  4A25               	infsnz	fat_format@cntr,f,c
 33265  001F2A  2A26               	incf	fat_format@cntr+1,f,c
 33266  001F2C  D7F1               	goto	l12295
 33267  001F2E                     u9760:
 33268                           
 33269                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
 33270  001F2E  0E00               	movlw	0
 33271  001F30  6E26               	movwf	fat_format@cntr+1,c
 33272  001F32  0E03               	movlw	3
 33273  001F34  6E25               	movwf	fat_format@cntr,c
 33274  001F36                     l12307:
 33275  001F36  5026               	movf	fat_format@cntr+1,w,c
 33276  001F38  E111               	bnz	l12317
 33277  001F3A  0E22               	movlw	34
 33278  001F3C  5C25               	subwf	fat_format@cntr,w,c
 33279  001F3E  B0D8               	btfsc	status,0,c
 33280  001F40  D00D               	goto	u9780
 33281                           
 33282                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
 33283  001F42  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33284  001F46  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33285  001F4A  0ECC               	movlw	low _buffer
 33286  001F4C  6E22               	movwf	flash_sector_write@data,c
 33287  001F4E  0E02               	movlw	high _buffer
 33288  001F50  6E23               	movwf	flash_sector_write@data+1,c
 33289  001F52  EC06  F035         	call	_flash_sector_write	;wreg free
 33290  001F56  4A25               	infsnz	fat_format@cntr,f,c
 33291  001F58  2A26               	incf	fat_format@cntr+1,f,c
 33292  001F5A  D7ED               	goto	l12307
 33293  001F5C                     u9780:
 33294  001F5C                     l12317:
 33295                           
 33296                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
 33297  001F5C  0E00               	movlw	0
 33298  001F5E  6E26               	movwf	fat_format@cntr+1,c
 33299  001F60  0E00               	movlw	0
 33300  001F62  6E25               	movwf	fat_format@cntr,c
 33301  001F64                     l12319:
 33302  001F64  0E02               	movlw	2
 33303  001F66  5C26               	subwf	fat_format@cntr+1,w,c
 33304  001F68  B0D8               	btfsc	status,0,c
 33305  001F6A  D010               	goto	u9800
 33306                           
 33307                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
 33308  001F6C  0ECC               	movlw	low _buffer
 33309  001F6E  2425               	addwf	fat_format@cntr,w,c
 33310  001F70  6ED9               	movwf	fsr2l,c
 33311  001F72  0E02               	movlw	high _buffer
 33312  001F74  2026               	addwfc	fat_format@cntr+1,w,c
 33313  001F76  6EDA               	movwf	fsr2h,c
 33314  001F78  C025  F001         	movff	fat_format@cntr,__get_root@idx
 33315  001F7C  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 33316  001F80  ECC7  F014         	call	__get_root	;wreg free
 33317  001F84  6EDF               	movwf	indf2,c
 33318  001F86  4A25               	infsnz	fat_format@cntr,f,c
 33319  001F88  2A26               	incf	fat_format@cntr+1,f,c
 33320  001F8A  D7EC               	goto	l12319
 33321  001F8C                     u9800:
 33322                           
 33323                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
 33324  001F8C  0E00               	movlw	0
 33325  001F8E  6E21               	movwf	flash_sector_write@page+1,c
 33326  001F90  0E22               	movlw	34
 33327  001F92  6E20               	movwf	flash_sector_write@page,c
 33328  001F94  0ECC               	movlw	low _buffer
 33329  001F96  6E22               	movwf	flash_sector_write@data,c
 33330  001F98  0E02               	movlw	high _buffer
 33331  001F9A  6E23               	movwf	flash_sector_write@data+1,c
 33332  001F9C  EC06  F035         	call	_flash_sector_write	;wreg free
 33333                           
 33334                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
 33335  001FA0  0E00               	movlw	0
 33336  001FA2  6E26               	movwf	fat_format@cntr+1,c
 33337  001FA4  0E00               	movlw	0
 33338  001FA6  6E25               	movwf	fat_format@cntr,c
 33339  001FA8                     l12333:
 33340  001FA8  0E02               	movlw	2
 33341  001FAA  5C26               	subwf	fat_format@cntr+1,w,c
 33342  001FAC  B0D8               	btfsc	status,0,c
 33343  001FAE  D00B               	goto	u9820
 33344                           
 33345                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
 33346  001FB0  0ECC               	movlw	low _buffer
 33347  001FB2  2425               	addwf	fat_format@cntr,w,c
 33348  001FB4  6ED9               	movwf	fsr2l,c
 33349  001FB6  0E02               	movlw	high _buffer
 33350  001FB8  2026               	addwfc	fat_format@cntr+1,w,c
 33351  001FBA  6EDA               	movwf	fsr2h,c
 33352  001FBC  0E00               	movlw	0
 33353  001FBE  6EDF               	movwf	indf2,c
 33354  001FC0  4A25               	infsnz	fat_format@cntr,f,c
 33355  001FC2  2A26               	incf	fat_format@cntr+1,f,c
 33356  001FC4  D7F1               	goto	l12333
 33357  001FC6                     u9820:
 33358                           
 33359                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
 33360  001FC6  0E00               	movlw	0
 33361  001FC8  6E26               	movwf	fat_format@cntr+1,c
 33362  001FCA  0E23               	movlw	35
 33363  001FCC  6E25               	movwf	fat_format@cntr,c
 33364  001FCE                     l12345:
 33365  001FCE  5026               	movf	fat_format@cntr+1,w,c
 33366  001FD0  E111               	bnz	l12355
 33367  001FD2  0E26               	movlw	38
 33368  001FD4  5C25               	subwf	fat_format@cntr,w,c
 33369  001FD6  B0D8               	btfsc	status,0,c
 33370  001FD8  D00D               	goto	u9840
 33371                           
 33372                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
 33373  001FDA  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33374  001FDE  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33375  001FE2  0ECC               	movlw	low _buffer
 33376  001FE4  6E22               	movwf	flash_sector_write@data,c
 33377  001FE6  0E02               	movlw	high _buffer
 33378  001FE8  6E23               	movwf	flash_sector_write@data+1,c
 33379  001FEA  EC06  F035         	call	_flash_sector_write	;wreg free
 33380  001FEE  4A25               	infsnz	fat_format@cntr,f,c
 33381  001FF0  2A26               	incf	fat_format@cntr+1,f,c
 33382  001FF2  D7ED               	goto	l12345
 33383  001FF4                     u9840:
 33384  001FF4                     l12355:
 33385                           
 33386                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
 33387  001FF4  0E00               	movlw	0
 33388  001FF6  6E26               	movwf	fat_format@cntr+1,c
 33389  001FF8  0E00               	movlw	0
 33390  001FFA  6E25               	movwf	fat_format@cntr,c
 33391  001FFC                     l12357:
 33392  001FFC  0E02               	movlw	2
 33393  001FFE  5C26               	subwf	fat_format@cntr+1,w,c
 33394  002000  B0D8               	btfsc	status,0,c
 33395  002002  D010               	goto	u9860
 33396                           
 33397                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
 33398  002004  0ECC               	movlw	low _buffer
 33399  002006  2425               	addwf	fat_format@cntr,w,c
 33400  002008  6ED9               	movwf	fsr2l,c
 33401  00200A  0E02               	movlw	high _buffer
 33402  00200C  2026               	addwfc	fat_format@cntr+1,w,c
 33403  00200E  6EDA               	movwf	fsr2h,c
 33404  002010  C025  F001         	movff	fat_format@cntr,__get_data@idx
 33405  002014  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 33406  002018  EC0C  F038         	call	__get_data	;wreg free
 33407  00201C  6EDF               	movwf	indf2,c
 33408  00201E  4A25               	infsnz	fat_format@cntr,f,c
 33409  002020  2A26               	incf	fat_format@cntr+1,f,c
 33410  002022  D7EC               	goto	l12357
 33411  002024                     u9860:
 33412                           
 33413                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
 33414  002024  0E00               	movlw	0
 33415  002026  6E21               	movwf	flash_sector_write@page+1,c
 33416  002028  0E26               	movlw	38
 33417  00202A  6E20               	movwf	flash_sector_write@page,c
 33418  00202C  0ECC               	movlw	low _buffer
 33419  00202E  6E22               	movwf	flash_sector_write@data,c
 33420  002030  0E02               	movlw	high _buffer
 33421  002032  6E23               	movwf	flash_sector_write@data+1,c
 33422  002034  EC06  F035         	call	_flash_sector_write	;wreg free
 33423                           
 33424                           ;fat16.c: 1379: return 0x00;
 33425  002038  0E00               	movlw	0
 33426  00203A  0012               	return	
 33427  00203C                     __end_of_fat_format:
 33428                           	opt stack 0
 33429                           tosu	equ	0xFFF
 33430                           tosh	equ	0xFFE
 33431                           tosl	equ	0xFFD
 33432                           pclath	equ	0xFFA
 33433                           tblptru	equ	0xFF8
 33434                           tblptrh	equ	0xFF7
 33435                           tblptrl	equ	0xFF6
 33436                           tablat	equ	0xFF5
 33437                           prodh	equ	0xFF4
 33438                           prodl	equ	0xFF3
 33439                           intcon	equ	0xFF2
 33440                           intcon3	equ	0xFF0
 33441                           indf0	equ	0xFEF
 33442                           postinc0	equ	0xFEE
 33443                           fsr0h	equ	0xFEA
 33444                           fsr0l	equ	0xFE9
 33445                           wreg	equ	0xFE8
 33446                           indf1	equ	0xFE7
 33447                           postdec1	equ	0xFE5
 33448                           plusw1	equ	0xFE3
 33449                           fsr1h	equ	0xFE2
 33450                           fsr1l	equ	0xFE1
 33451                           indf2	equ	0xFDF
 33452                           postinc2	equ	0xFDE
 33453                           postdec2	equ	0xFDD
 33454                           plusw2	equ	0xFDB
 33455                           fsr2h	equ	0xFDA
 33456                           fsr2l	equ	0xFD9
 33457                           status	equ	0xFD8
 33458                           
 33459 ;; *************** function _flash_sector_write *****************
 33460 ;; Defined at:
 33461 ;;		line 434 in file "flash.c"
 33462 ;; Parameters:    Size  Location     Type
 33463 ;;  page            2   31[COMRAM] unsigned int 
 33464 ;;  data            2   33[COMRAM] PTR unsigned char 
 33465 ;;		 -> buffer(512), msd_buffer(512), 
 33466 ;; Auto vars:     Size  Location     Type
 33467 ;;  match           1   35[COMRAM] enum E6898
 33468 ;; Return value:  Size  Location     Type
 33469 ;;                  1    wreg      void 
 33470 ;; Registers used:
 33471 ;;		wreg, status,2, status,0, cstack
 33472 ;; Tracked objects:
 33473 ;;		On entry : 0/0
 33474 ;;		On exit  : 0/0
 33475 ;;		Unchanged: 0/0
 33476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33480 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33481 ;;Total ram usage:        5 bytes
 33482 ;; Hardware stack levels used:    1
 33483 ;; Hardware stack levels required when called:    4
 33484 ;; This function calls:
 33485 ;;		__flash_compare_page_to_buffer
 33486 ;;		__flash_write_page_from_buffer
 33487 ;;		__flash_write_to_buffer
 33488 ;; This function is called by:
 33489 ;;		_ExternalFlash_SectorWrite
 33490 ;;		_fat_format
 33491 ;;		__make_cluster_chain
 33492 ;; This function uses a non-reentrant model
 33493 ;;
 33494                           
 33495                           	psect	text173
 33496  006A0C                     __ptext173:
 33497                           	opt stack 0
 33498  006A0C                     _flash_sector_write:
 33499                           	opt stack 23
 33500                           
 33501                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 33502                           
 33503                           ;incstack = 0
 33504  006A0C  0E00               	movlw	0
 33505  006A0E  6E15               	movwf	__flash_write_to_buffer@start+1,c
 33506  006A10  0E00               	movlw	0
 33507  006A12  6E14               	movwf	__flash_write_to_buffer@start,c
 33508  006A14  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 33509  006A18  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 33510  006A1C  0E02               	movlw	2
 33511  006A1E  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 33512  006A20  0E00               	movlw	0
 33513  006A22  6E18               	movwf	__flash_write_to_buffer@data_length,c
 33514  006A24  0E00               	movlw	0
 33515  006A26  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 33516  006A28  ECB8  F034         	call	__flash_write_to_buffer	;wreg free
 33517                           
 33518                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 33519  006A2C  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 33520  006A30  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 33521  006A34  0E00               	movlw	0
 33522  006A36  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 33523  006A38  EC4A  F02F         	call	__flash_compare_page_to_buffer	;wreg free
 33524  006A3C  6E24               	movwf	flash_sector_write@match,c
 33525                           
 33526                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 33527  006A3E  0424               	decf	flash_sector_write@match,w,c
 33528  006A40  A4D8               	btfss	status,2,c
 33529  006A42  0012               	return	
 33530                           
 33531                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 33532  006A44  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 33533  006A48  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 33534  006A4C  0E00               	movlw	0
 33535  006A4E  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 33536  006A50  ECBA  F032         	call	__flash_write_page_from_buffer	;wreg free
 33537  006A54  0012               	return	
 33538  006A56                     __end_of_flash_sector_write:
 33539                           	opt stack 0
 33540                           tosu	equ	0xFFF
 33541                           tosh	equ	0xFFE
 33542                           tosl	equ	0xFFD
 33543                           pclath	equ	0xFFA
 33544                           tblptru	equ	0xFF8
 33545                           tblptrh	equ	0xFF7
 33546                           tblptrl	equ	0xFF6
 33547                           tablat	equ	0xFF5
 33548                           prodh	equ	0xFF4
 33549                           prodl	equ	0xFF3
 33550                           intcon	equ	0xFF2
 33551                           intcon3	equ	0xFF0
 33552                           indf0	equ	0xFEF
 33553                           postinc0	equ	0xFEE
 33554                           fsr0h	equ	0xFEA
 33555                           fsr0l	equ	0xFE9
 33556                           wreg	equ	0xFE8
 33557                           indf1	equ	0xFE7
 33558                           postdec1	equ	0xFE5
 33559                           plusw1	equ	0xFE3
 33560                           fsr1h	equ	0xFE2
 33561                           fsr1l	equ	0xFE1
 33562                           indf2	equ	0xFDF
 33563                           postinc2	equ	0xFDE
 33564                           postdec2	equ	0xFDD
 33565                           plusw2	equ	0xFDB
 33566                           fsr2h	equ	0xFDA
 33567                           fsr2l	equ	0xFD9
 33568                           status	equ	0xFD8
 33569                           
 33570 ;; *************** function __flash_write_to_buffer *****************
 33571 ;; Defined at:
 33572 ;;		line 236 in file "flash.c"
 33573 ;; Parameters:    Size  Location     Type
 33574 ;;  start           2   19[COMRAM] unsigned int 
 33575 ;;  data            2   21[COMRAM] PTR unsigned char 
 33576 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33577 ;;		 -> buffer(512), msd_buffer(512), 
 33578 ;;  data_length     2   23[COMRAM] unsigned int 
 33579 ;;  buffer          1   25[COMRAM] enum E6894
 33580 ;; Auto vars:     Size  Location     Type
 33581 ;;  command         4   26[COMRAM] unsigned char [4]
 33582 ;; Return value:  Size  Location     Type
 33583 ;;                  1    wreg      void 
 33584 ;; Registers used:
 33585 ;;		wreg, status,2, status,0, cstack
 33586 ;; Tracked objects:
 33587 ;;		On entry : 0/0
 33588 ;;		On exit  : 0/0
 33589 ;;		Unchanged: 0/0
 33590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33591 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33592 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33594 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33595 ;;Total ram usage:       11 bytes
 33596 ;; Hardware stack levels used:    1
 33597 ;; Hardware stack levels required when called:    3
 33598 ;; This function calls:
 33599 ;;		__flash_is_busy
 33600 ;;		_spi_tx_tx
 33601 ;; This function is called by:
 33602 ;;		_flash_sector_write
 33603 ;;		_flash_partial_write
 33604 ;;		_flash_write_to_buffer
 33605 ;; This function uses a non-reentrant model
 33606 ;;
 33607                           
 33608                           	psect	text174
 33609  006970                     __ptext174:
 33610                           	opt stack 0
 33611  006970                     __flash_write_to_buffer:
 33612                           	opt stack 23
 33613                           
 33614                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 33615                           
 33616                           ;incstack = 0
 33617  006970  ECB5  F038         	call	__flash_is_busy	;wreg free
 33618  006974  0900               	iorlw	0
 33619  006976  A4D8               	btfss	status,2,c
 33620  006978  D7FB               	goto	__flash_write_to_buffer
 33621                           
 33622                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 33623  00697A  501A               	movf	__flash_write_to_buffer@buffer,w,c
 33624  00697C  A4D8               	btfss	status,2,c
 33625  00697E  D002               	goto	l1821
 33626                           
 33627                           ;flash.c: 245: command[0] = 0x84;
 33628  006980  0E84               	movlw	132
 33629  006982  6E1B               	movwf	__flash_write_to_buffer@command,c
 33630  006984                     l1821:
 33631                           
 33632                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 33633  006984  041A               	decf	__flash_write_to_buffer@buffer,w,c
 33634  006986  A4D8               	btfss	status,2,c
 33635  006988  D002               	goto	l1822
 33636                           
 33637                           ;flash.c: 247: command[0] = 0x87;
 33638  00698A  0E87               	movlw	135
 33639  00698C  6E1B               	movwf	__flash_write_to_buffer@command,c
 33640  00698E                     l1822:
 33641                           
 33642                           ;flash.c: 249: command[1] = 0x00;
 33643  00698E  0E00               	movlw	0
 33644  006990  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 33645                           
 33646                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 33647  006992  5015               	movf	__flash_write_to_buffer@start+1,w,c
 33648  006994  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 33649                           
 33650                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 33651  006996  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 33652                           
 33653                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 33654  00699A  0E1B               	movlw	low __flash_write_to_buffer@command
 33655  00699C  6E01               	movwf	spi_tx_tx@command,c
 33656  00699E  0E00               	movlw	high __flash_write_to_buffer@command
 33657  0069A0  6E02               	movwf	spi_tx_tx@command+1,c
 33658  0069A2  0E00               	movlw	0
 33659  0069A4  6E04               	movwf	spi_tx_tx@command_length+1,c
 33660  0069A6  0E04               	movlw	4
 33661  0069A8  6E03               	movwf	spi_tx_tx@command_length,c
 33662  0069AA  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 33663  0069AE  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 33664  0069B2  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 33665  0069B6  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 33666  0069BA  ECC5  F02D         	call	_spi_tx_tx	;wreg free
 33667  0069BE  0012               	return		;funcret
 33668  0069C0                     __end_of__flash_write_to_buffer:
 33669                           	opt stack 0
 33670                           tosu	equ	0xFFF
 33671                           tosh	equ	0xFFE
 33672                           tosl	equ	0xFFD
 33673                           pclath	equ	0xFFA
 33674                           tblptru	equ	0xFF8
 33675                           tblptrh	equ	0xFF7
 33676                           tblptrl	equ	0xFF6
 33677                           tablat	equ	0xFF5
 33678                           prodh	equ	0xFF4
 33679                           prodl	equ	0xFF3
 33680                           intcon	equ	0xFF2
 33681                           intcon3	equ	0xFF0
 33682                           indf0	equ	0xFEF
 33683                           postinc0	equ	0xFEE
 33684                           fsr0h	equ	0xFEA
 33685                           fsr0l	equ	0xFE9
 33686                           wreg	equ	0xFE8
 33687                           indf1	equ	0xFE7
 33688                           postdec1	equ	0xFE5
 33689                           plusw1	equ	0xFE3
 33690                           fsr1h	equ	0xFE2
 33691                           fsr1l	equ	0xFE1
 33692                           indf2	equ	0xFDF
 33693                           postinc2	equ	0xFDE
 33694                           postdec2	equ	0xFDD
 33695                           plusw2	equ	0xFDB
 33696                           fsr2h	equ	0xFDA
 33697                           fsr2l	equ	0xFD9
 33698                           status	equ	0xFD8
 33699                           
 33700 ;; *************** function _spi_tx_tx *****************
 33701 ;; Defined at:
 33702 ;;		line 146 in file "spi.c"
 33703 ;; Parameters:    Size  Location     Type
 33704 ;;  command         2    0[COMRAM] PTR unsigned char 
 33705 ;;		 -> _flash_write_to_buffer@command(4), 
 33706 ;;  command_leng    2    2[COMRAM] unsigned int 
 33707 ;;  data            2    4[COMRAM] PTR unsigned char 
 33708 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), _delete_root@deleted_value(1
      +), 
 33709 ;;		 -> buffer(512), msd_buffer(512), 
 33710 ;;  data_length     2    6[COMRAM] unsigned int 
 33711 ;; Auto vars:     Size  Location     Type
 33712 ;;		None
 33713 ;; Return value:  Size  Location     Type
 33714 ;;                  1    wreg      void 
 33715 ;; Registers used:
 33716 ;;		wreg, status,2, status,0
 33717 ;; Tracked objects:
 33718 ;;		On entry : 0/0
 33719 ;;		On exit  : 0/0
 33720 ;;		Unchanged: 0/0
 33721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33722 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33725 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33726 ;;Total ram usage:       12 bytes
 33727 ;; Hardware stack levels used:    1
 33728 ;; This function calls:
 33729 ;;		Nothing
 33730 ;; This function is called by:
 33731 ;;		__flash_write_to_buffer
 33732 ;; This function uses a non-reentrant model
 33733 ;;
 33734                           
 33735                           	psect	text175
 33736  005B8A                     __ptext175:
 33737                           	opt stack 0
 33738  005B8A                     _spi_tx_tx:
 33739                           	opt stack 25
 33740                           
 33741                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 33742                           
 33743                           ;incstack = 0
 33744  005B8A  9E88               	bcf	3976,7,c	;volatile
 33745                           
 33746                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 33747  005B8C  9C88               	bcf	3976,6,c	;volatile
 33748                           
 33749                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 33750  005B8E  8A88               	bsf	3976,5,c	;volatile
 33751                           
 33752                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 33753  005B90  9888               	bcf	3976,4,c	;volatile
 33754                           
 33755                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 33756  005B92  9688               	bcf	3976,3,c	;volatile
 33757                           
 33758                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 33759  005B94  8488               	bsf	3976,2,c	;volatile
 33760                           
 33761                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 33762  005B96  9288               	bcf	3976,1,c	;volatile
 33763                           
 33764                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 33765  005B98  9886               	bcf	3974,4,c	;volatile
 33766  005B9A  9A86               	bcf	3974,5,c	;volatile
 33767  005B9C  9C86               	bcf	3974,6,c	;volatile
 33768  005B9E  9E86               	bcf	3974,7,c	;volatile
 33769                           
 33770                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 33771  005BA0  9086               	bcf	3974,0,c	;volatile
 33772  005BA2  9286               	bcf	3974,1,c	;volatile
 33773  005BA4  9486               	bcf	3974,2,c	;volatile
 33774  005BA6  9686               	bcf	3974,3,c	;volatile
 33775                           
 33776                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 33777  005BA8  5002               	movf	spi_tx_tx@command+1,w,c
 33778  005BAA  6E6A               	movwf	3946,c	;volatile
 33779                           
 33780                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 33781  005BAC  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 33782                           
 33783                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 33784  005BB0  0EFF               	movlw	255
 33785  005BB2  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33786  005BB4  0EFF               	movlw	255
 33787  005BB6  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33788  005BB8  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 33789  005BBC  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 33790  005BC0  5009               	movf	??_spi_tx_tx,w,c
 33791  005BC2  260B               	addwf	??_spi_tx_tx+2,f,c
 33792  005BC4  500A               	movf	??_spi_tx_tx+1,w,c
 33793  005BC6  220C               	addwfc	??_spi_tx_tx+3,f,c
 33794  005BC8  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33795  005BCC  6A0C               	clrf	??_spi_tx_tx+3,c
 33796  005BCE  500B               	movf	??_spi_tx_tx+2,w,c
 33797  005BD0  6E66               	movwf	3942,c	;volatile
 33798                           
 33799                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 33800  005BD2  0403               	decf	spi_tx_tx@command_length,w,c
 33801  005BD4  6E67               	movwf	3943,c	;volatile
 33802                           
 33803                           ;spi.c: 174: LATDbits.LD7 = 0;
 33804  005BD6  9E8C               	bcf	3980,7,c	;volatile
 33805                           
 33806                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 33807  005BD8  8088               	bsf	3976,0,c	;volatile
 33808  005BDA  B088               	btfsc	3976,0,c	;volatile
 33809  005BDC  D7FE               	goto	l2846
 33810                           
 33811                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 33812  005BDE  5006               	movf	spi_tx_tx@data+1,w,c
 33813  005BE0  6E6A               	movwf	3946,c	;volatile
 33814                           
 33815                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 33816  005BE2  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 33817                           
 33818                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 33819  005BE6  0EFF               	movlw	255
 33820  005BE8  6E09               	movwf	??_spi_tx_tx& (0+255),c
 33821  005BEA  0EFF               	movlw	255
 33822  005BEC  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 33823  005BEE  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 33824  005BF2  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 33825  005BF6  5009               	movf	??_spi_tx_tx,w,c
 33826  005BF8  260B               	addwf	??_spi_tx_tx+2,f,c
 33827  005BFA  500A               	movf	??_spi_tx_tx+1,w,c
 33828  005BFC  220C               	addwfc	??_spi_tx_tx+3,f,c
 33829  005BFE  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 33830  005C02  6A0C               	clrf	??_spi_tx_tx+3,c
 33831  005C04  500B               	movf	??_spi_tx_tx+2,w,c
 33832  005C06  6E66               	movwf	3942,c	;volatile
 33833                           
 33834                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 33835  005C08  0407               	decf	spi_tx_tx@data_length,w,c
 33836  005C0A  6E67               	movwf	3943,c	;volatile
 33837                           
 33838                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 33839  005C0C  8088               	bsf	3976,0,c	;volatile
 33840  005C0E  B088               	btfsc	3976,0,c	;volatile
 33841  005C10  D7FE               	goto	l2849
 33842                           
 33843                           ;spi.c: 193: LATDbits.LD7 = 1;
 33844  005C12  8E8C               	bsf	3980,7,c	;volatile
 33845  005C14  0012               	return		;funcret
 33846  005C16                     __end_of_spi_tx_tx:
 33847                           	opt stack 0
 33848                           tosu	equ	0xFFF
 33849                           tosh	equ	0xFFE
 33850                           tosl	equ	0xFFD
 33851                           pclath	equ	0xFFA
 33852                           tblptru	equ	0xFF8
 33853                           tblptrh	equ	0xFF7
 33854                           tblptrl	equ	0xFF6
 33855                           tablat	equ	0xFF5
 33856                           prodh	equ	0xFF4
 33857                           prodl	equ	0xFF3
 33858                           intcon	equ	0xFF2
 33859                           intcon3	equ	0xFF0
 33860                           indf0	equ	0xFEF
 33861                           postinc0	equ	0xFEE
 33862                           fsr0h	equ	0xFEA
 33863                           fsr0l	equ	0xFE9
 33864                           wreg	equ	0xFE8
 33865                           indf1	equ	0xFE7
 33866                           postdec1	equ	0xFE5
 33867                           plusw1	equ	0xFE3
 33868                           fsr1h	equ	0xFE2
 33869                           fsr1l	equ	0xFE1
 33870                           indf2	equ	0xFDF
 33871                           postinc2	equ	0xFDE
 33872                           postdec2	equ	0xFDD
 33873                           plusw2	equ	0xFDB
 33874                           fsr2h	equ	0xFDA
 33875                           fsr2l	equ	0xFD9
 33876                           status	equ	0xFD8
 33877                           
 33878 ;; *************** function __flash_write_page_from_buffer *****************
 33879 ;; Defined at:
 33880 ;;		line 258 in file "flash.c"
 33881 ;; Parameters:    Size  Location     Type
 33882 ;;  page            2   19[COMRAM] unsigned int 
 33883 ;;  buffer          1   21[COMRAM] enum E6894
 33884 ;; Auto vars:     Size  Location     Type
 33885 ;;  command         4   25[COMRAM] unsigned char [4]
 33886 ;; Return value:  Size  Location     Type
 33887 ;;                  1    wreg      void 
 33888 ;; Registers used:
 33889 ;;		wreg, status,2, status,0, cstack
 33890 ;; Tracked objects:
 33891 ;;		On entry : 0/0
 33892 ;;		On exit  : 0/0
 33893 ;;		Unchanged: 0/0
 33894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33895 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33896 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33897 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33898 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33899 ;;Total ram usage:       10 bytes
 33900 ;; Hardware stack levels used:    1
 33901 ;; Hardware stack levels required when called:    3
 33902 ;; This function calls:
 33903 ;;		__flash_is_busy
 33904 ;;		_spi_tx
 33905 ;; This function is called by:
 33906 ;;		_flash_sector_write
 33907 ;;		_flash_partial_write
 33908 ;;		_flash_write_page_from_buffer
 33909 ;; This function uses a non-reentrant model
 33910 ;;
 33911                           
 33912                           	psect	text176
 33913  006574                     __ptext176:
 33914                           	opt stack 0
 33915  006574                     __flash_write_page_from_buffer:
 33916                           	opt stack 23
 33917                           
 33918                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 33919                           
 33920                           ;incstack = 0
 33921  006574  ECB5  F038         	call	__flash_is_busy	;wreg free
 33922  006578  0900               	iorlw	0
 33923  00657A  A4D8               	btfss	status,2,c
 33924  00657C  D7FB               	goto	__flash_write_page_from_buffer
 33925                           
 33926                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 33927  00657E  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 33928  006580  A4D8               	btfss	status,2,c
 33929  006582  D002               	goto	l1829
 33930                           
 33931                           ;flash.c: 267: command[0] = 0x83;
 33932  006584  0E83               	movlw	131
 33933  006586  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33934  006588                     l1829:
 33935                           
 33936                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 33937  006588  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 33938  00658A  A4D8               	btfss	status,2,c
 33939  00658C  D002               	goto	l1830
 33940                           
 33941                           ;flash.c: 269: command[0] = 0x86;
 33942  00658E  0E86               	movlw	134
 33943  006590  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 33944  006592                     l1830:
 33945                           
 33946                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 33947  006592  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 33948  006596  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 33949  00659A  0E07               	movlw	7
 33950  00659C  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 33951  00659E                     u7325:
 33952  00659E  90D8               	bcf	status,0,c
 33953  0065A0  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 33954  0065A2  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 33955  0065A4  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 33956  0065A6  D7FB               	goto	u7325
 33957  0065A8  5017               	movf	??__flash_write_page_from_buffer,w,c
 33958  0065AA  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 33959                           
 33960                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 33961  0065AC  5014               	movf	__flash_write_page_from_buffer@page,w,c
 33962  0065AE  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 33963  0065B0  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 33964                           
 33965                           ;flash.c: 273: command[3] = 0x00;
 33966  0065B2  0E00               	movlw	0
 33967  0065B4  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 33968                           
 33969                           ;flash.c: 276: spi_tx(command, 4);
 33970  0065B6  0E1A               	movlw	low __flash_write_page_from_buffer@command
 33971  0065B8  6E01               	movwf	spi_tx@data,c
 33972  0065BA  0E00               	movlw	high __flash_write_page_from_buffer@command
 33973  0065BC  6E02               	movwf	spi_tx@data+1,c
 33974  0065BE  0E00               	movlw	0
 33975  0065C0  6E04               	movwf	spi_tx@length+1,c
 33976  0065C2  0E04               	movlw	4
 33977  0065C4  6E03               	movwf	spi_tx@length,c
 33978  0065C6  ECE6  F032         	call	_spi_tx	;wreg free
 33979  0065CA  0012               	return		;funcret
 33980  0065CC                     __end_of__flash_write_page_from_buffer:
 33981                           	opt stack 0
 33982                           tosu	equ	0xFFF
 33983                           tosh	equ	0xFFE
 33984                           tosl	equ	0xFFD
 33985                           pclath	equ	0xFFA
 33986                           tblptru	equ	0xFF8
 33987                           tblptrh	equ	0xFF7
 33988                           tblptrl	equ	0xFF6
 33989                           tablat	equ	0xFF5
 33990                           prodh	equ	0xFF4
 33991                           prodl	equ	0xFF3
 33992                           intcon	equ	0xFF2
 33993                           intcon3	equ	0xFF0
 33994                           indf0	equ	0xFEF
 33995                           postinc0	equ	0xFEE
 33996                           fsr0h	equ	0xFEA
 33997                           fsr0l	equ	0xFE9
 33998                           wreg	equ	0xFE8
 33999                           indf1	equ	0xFE7
 34000                           postdec1	equ	0xFE5
 34001                           plusw1	equ	0xFE3
 34002                           fsr1h	equ	0xFE2
 34003                           fsr1l	equ	0xFE1
 34004                           indf2	equ	0xFDF
 34005                           postinc2	equ	0xFDE
 34006                           postdec2	equ	0xFDD
 34007                           plusw2	equ	0xFDB
 34008                           fsr2h	equ	0xFDA
 34009                           fsr2l	equ	0xFD9
 34010                           status	equ	0xFD8
 34011                           
 34012 ;; *************** function __flash_compare_page_to_buffer *****************
 34013 ;; Defined at:
 34014 ;;		line 176 in file "flash.c"
 34015 ;; Parameters:    Size  Location     Type
 34016 ;;  page            2   19[COMRAM] unsigned int 
 34017 ;;  buffer          1   21[COMRAM] enum E6894
 34018 ;; Auto vars:     Size  Location     Type
 34019 ;;  command         4   27[COMRAM] unsigned char [4]
 34020 ;;  status          2   25[COMRAM] unsigned int 
 34021 ;; Return value:  Size  Location     Type
 34022 ;;                  1    wreg      enum E6898
 34023 ;; Registers used:
 34024 ;;		wreg, status,2, status,0, cstack
 34025 ;; Tracked objects:
 34026 ;;		On entry : 0/0
 34027 ;;		On exit  : 0/0
 34028 ;;		Unchanged: 0/0
 34029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34030 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34031 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34032 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34033 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34034 ;;Total ram usage:       12 bytes
 34035 ;; Hardware stack levels used:    1
 34036 ;; Hardware stack levels required when called:    3
 34037 ;; This function calls:
 34038 ;;		__flash_get_status
 34039 ;;		__flash_is_busy
 34040 ;;		_spi_tx
 34041 ;; This function is called by:
 34042 ;;		_flash_sector_write
 34043 ;;		_flash_partial_write
 34044 ;; This function uses a non-reentrant model
 34045 ;;
 34046                           
 34047                           	psect	text177
 34048  005E94                     __ptext177:
 34049                           	opt stack 0
 34050  005E94                     __flash_compare_page_to_buffer:
 34051                           	opt stack 23
 34052                           
 34053                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34054                           
 34055                           ;incstack = 0
 34056  005E94  ECB5  F038         	call	__flash_is_busy	;wreg free
 34057  005E98  0900               	iorlw	0
 34058  005E9A  A4D8               	btfss	status,2,c
 34059  005E9C  D7FB               	goto	__flash_compare_page_to_buffer
 34060                           
 34061                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34062  005E9E  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 34063  005EA0  A4D8               	btfss	status,2,c
 34064  005EA2  D002               	goto	l1802
 34065                           
 34066                           ;flash.c: 186: command[0] = 0x60;
 34067  005EA4  0E60               	movlw	96
 34068  005EA6  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 34069  005EA8                     l1802:
 34070                           
 34071                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34072  005EA8  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 34073  005EAA  A4D8               	btfss	status,2,c
 34074  005EAC  D002               	goto	l1803
 34075                           
 34076                           ;flash.c: 188: command[0] = 0x60;
 34077  005EAE  0E60               	movlw	96
 34078  005EB0  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 34079  005EB2                     l1803:
 34080                           
 34081                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34082  005EB2  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 34083  005EB6  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 34084  005EBA  0E07               	movlw	7
 34085  005EBC  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 34086  005EBE                     u7235:
 34087  005EBE  90D8               	bcf	status,0,c
 34088  005EC0  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 34089  005EC2  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 34090  005EC4  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 34091  005EC6  D7FB               	goto	u7235
 34092  005EC8  5017               	movf	??__flash_compare_page_to_buffer,w,c
 34093  005ECA  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 34094                           
 34095                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 34096  005ECC  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 34097  005ECE  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 34098  005ED0  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 34099                           
 34100                           ;flash.c: 192: command[3] = 0x00;
 34101  005ED2  0E00               	movlw	0
 34102  005ED4  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 34103                           
 34104                           ;flash.c: 195: spi_tx(command, 4);
 34105  005ED6  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 34106  005ED8  6E01               	movwf	spi_tx@data,c
 34107  005EDA  0E00               	movlw	high __flash_compare_page_to_buffer@command
 34108  005EDC  6E02               	movwf	spi_tx@data+1,c
 34109  005EDE  0E00               	movlw	0
 34110  005EE0  6E04               	movwf	spi_tx@length+1,c
 34111  005EE2  0E04               	movlw	4
 34112  005EE4  6E03               	movwf	spi_tx@length,c
 34113  005EE6  ECE6  F032         	call	_spi_tx	;wreg free
 34114  005EEA  ECB5  F038         	call	__flash_is_busy	;wreg free
 34115  005EEE  0900               	iorlw	0
 34116  005EF0  A4D8               	btfss	status,2,c
 34117  005EF2  D7FB               	goto	l1805
 34118                           
 34119                           ;flash.c: 201: status = _flash_get_status();
 34120  005EF4  EC59  F037         	call	__flash_get_status	;wreg free
 34121  005EF8  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 34122  005EFC  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 34123                           
 34124                           ;flash.c: 204: if(status & 0b0000000001000000)
 34125  005F00  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 34126  005F02  D002               	goto	l1807
 34127                           
 34128                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 34129  005F04  0E01               	movlw	1
 34130                           
 34131                           ;flash.c: 208: }
 34132  005F06  0012               	return	
 34133  005F08                     l1807:
 34134                           
 34135                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 34136  005F08  0E00               	movlw	0
 34137  005F0A  0012               	return	
 34138  005F0C                     __end_of__flash_compare_page_to_buffer:
 34139                           	opt stack 0
 34140                           tosu	equ	0xFFF
 34141                           tosh	equ	0xFFE
 34142                           tosl	equ	0xFFD
 34143                           pclath	equ	0xFFA
 34144                           tblptru	equ	0xFF8
 34145                           tblptrh	equ	0xFF7
 34146                           tblptrl	equ	0xFF6
 34147                           tablat	equ	0xFF5
 34148                           prodh	equ	0xFF4
 34149                           prodl	equ	0xFF3
 34150                           intcon	equ	0xFF2
 34151                           intcon3	equ	0xFF0
 34152                           indf0	equ	0xFEF
 34153                           postinc0	equ	0xFEE
 34154                           fsr0h	equ	0xFEA
 34155                           fsr0l	equ	0xFE9
 34156                           wreg	equ	0xFE8
 34157                           indf1	equ	0xFE7
 34158                           postdec1	equ	0xFE5
 34159                           plusw1	equ	0xFE3
 34160                           fsr1h	equ	0xFE2
 34161                           fsr1l	equ	0xFE1
 34162                           indf2	equ	0xFDF
 34163                           postinc2	equ	0xFDE
 34164                           postdec2	equ	0xFDD
 34165                           plusw2	equ	0xFDB
 34166                           fsr2h	equ	0xFDA
 34167                           fsr2l	equ	0xFD9
 34168                           status	equ	0xFD8
 34169                           
 34170 ;; *************** function __flash_is_busy *****************
 34171 ;; Defined at:
 34172 ;;		line 281 in file "flash.c"
 34173 ;; Parameters:    Size  Location     Type
 34174 ;;		None
 34175 ;; Auto vars:     Size  Location     Type
 34176 ;;  status          2   17[COMRAM] unsigned int 
 34177 ;; Return value:  Size  Location     Type
 34178 ;;                  1    wreg      unsigned char 
 34179 ;; Registers used:
 34180 ;;		wreg, status,2, status,0, cstack
 34181 ;; Tracked objects:
 34182 ;;		On entry : 0/0
 34183 ;;		On exit  : 0/0
 34184 ;;		Unchanged: 0/0
 34185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34190 ;;Total ram usage:        2 bytes
 34191 ;; Hardware stack levels used:    1
 34192 ;; Hardware stack levels required when called:    2
 34193 ;; This function calls:
 34194 ;;		__flash_get_status
 34195 ;;		__flash_wakeup
 34196 ;; This function is called by:
 34197 ;;		__flash_set_page_size
 34198 ;;		__flash_compare_page_to_buffer
 34199 ;;		__flash_write_to_buffer
 34200 ;;		__flash_write_page_from_buffer
 34201 ;;		__flash_partial_read
 34202 ;;		_flash_is_busy
 34203 ;;		__flash_copy_page_to_buffer
 34204 ;;		__flash_erase_page
 34205 ;;		__flash_buffer_read
 34206 ;;		_flash_set_power_state
 34207 ;;		_flash_partial_write
 34208 ;; This function uses a non-reentrant model
 34209 ;;
 34210                           
 34211                           	psect	text178
 34212  00716A                     __ptext178:
 34213                           	opt stack 0
 34214  00716A                     __flash_is_busy:
 34215                           	opt stack 25
 34216                           
 34217                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 34218                           
 34219                           ;incstack = 0
 34220  00716A  0100               	movlb	0	; () banked
 34221  00716C  5193               	movf	_power_state& (0+255),w,b
 34222  00716E  A4D8               	btfss	status,2,c
 34223                           
 34224                           ; BSR set to: 0
 34225                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 34226  007170  EC93  F033         	call	__flash_wakeup	;wreg free
 34227                           
 34228                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 34229  007174  EC59  F037         	call	__flash_get_status	;wreg free
 34230  007178  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 34231  00717C  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 34232                           
 34233                           ;flash.c: 295: if(status & 0b0000000010000000)
 34234  007180  AE12               	btfss	__flash_is_busy@status,7,c
 34235  007182  D002               	goto	l1835
 34236                           
 34237                           ;flash.c: 296: {;flash.c: 298: return 0;
 34238  007184  0E00               	movlw	0
 34239                           
 34240                           ;flash.c: 299: }
 34241  007186  0012               	return	
 34242  007188                     l1835:
 34243                           
 34244                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 34245  007188  0E01               	movlw	1
 34246  00718A  0012               	return	
 34247  00718C                     __end_of__flash_is_busy:
 34248                           	opt stack 0
 34249                           tosu	equ	0xFFF
 34250                           tosh	equ	0xFFE
 34251                           tosl	equ	0xFFD
 34252                           pclath	equ	0xFFA
 34253                           tblptru	equ	0xFF8
 34254                           tblptrh	equ	0xFF7
 34255                           tblptrl	equ	0xFF6
 34256                           tablat	equ	0xFF5
 34257                           prodh	equ	0xFF4
 34258                           prodl	equ	0xFF3
 34259                           intcon	equ	0xFF2
 34260                           intcon3	equ	0xFF0
 34261                           indf0	equ	0xFEF
 34262                           postinc0	equ	0xFEE
 34263                           fsr0h	equ	0xFEA
 34264                           fsr0l	equ	0xFE9
 34265                           wreg	equ	0xFE8
 34266                           indf1	equ	0xFE7
 34267                           postdec1	equ	0xFE5
 34268                           plusw1	equ	0xFE3
 34269                           fsr1h	equ	0xFE2
 34270                           fsr1l	equ	0xFE1
 34271                           indf2	equ	0xFDF
 34272                           postinc2	equ	0xFDE
 34273                           postdec2	equ	0xFDD
 34274                           plusw2	equ	0xFDB
 34275                           fsr2h	equ	0xFDA
 34276                           fsr2l	equ	0xFD9
 34277                           status	equ	0xFD8
 34278                           
 34279 ;; *************** function __flash_wakeup *****************
 34280 ;; Defined at:
 34281 ;;		line 128 in file "flash.c"
 34282 ;; Parameters:    Size  Location     Type
 34283 ;;		None
 34284 ;; Auto vars:     Size  Location     Type
 34285 ;;  command         1    8[COMRAM] unsigned char 
 34286 ;; Return value:  Size  Location     Type
 34287 ;;                  1    wreg      void 
 34288 ;; Registers used:
 34289 ;;		wreg, status,2, status,0, cstack
 34290 ;; Tracked objects:
 34291 ;;		On entry : 0/0
 34292 ;;		On exit  : 0/0
 34293 ;;		Unchanged: 0/0
 34294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34298 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34299 ;;Total ram usage:        1 bytes
 34300 ;; Hardware stack levels used:    1
 34301 ;; Hardware stack levels required when called:    1
 34302 ;; This function calls:
 34303 ;;		_spi_tx
 34304 ;; This function is called by:
 34305 ;;		__flash_is_busy
 34306 ;;		_flash_set_power_state
 34307 ;; This function uses a non-reentrant model
 34308 ;;
 34309                           
 34310                           	psect	text179
 34311  006726                     __ptext179:
 34312                           	opt stack 0
 34313  006726                     __flash_wakeup:
 34314                           	opt stack 25
 34315                           
 34316                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 34317                           
 34318                           ;incstack = 0
 34319  006726  D021               	goto	l1784
 34320  006728                     
 34321                           ;flash.c: 135: command = 0xAB;
 34322  006728  0EAB               	movlw	171
 34323  00672A  6E09               	movwf	__flash_wakeup@command,c
 34324                           
 34325                           ;flash.c: 136: spi_tx(&command, 1);
 34326  00672C  0E09               	movlw	low __flash_wakeup@command
 34327  00672E  6E01               	movwf	spi_tx@data,c
 34328  006730  0E00               	movlw	high __flash_wakeup@command
 34329  006732  6E02               	movwf	spi_tx@data+1,c
 34330  006734  0E00               	movlw	0
 34331  006736  6E04               	movwf	spi_tx@length+1,c
 34332  006738  0E01               	movlw	1
 34333  00673A  6E03               	movwf	spi_tx@length,c
 34334  00673C  ECE6  F032         	call	_spi_tx	;wreg free
 34335                           
 34336                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 34337  006740  0E17               	movlw	23
 34338  006742                     u13837:
 34339  006742  2EE8               	decfsz	wreg,f,c
 34340  006744  D7FE               	bra	u13837
 34341  006746  F000               	nop	
 34342                           
 34343                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 34344  006748  0E00               	movlw	0
 34345  00674A  0100               	movlb	0	; () banked
 34346  00674C  6F93               	movwf	_power_state& (0+255),b
 34347                           
 34348                           ;flash.c: 139: break;
 34349  00674E  0012               	return	
 34350  006750                     l1787:
 34351                           
 34352                           ; BSR set to: 0
 34353                           ;flash.c: 144: LATDbits.LD7 = 0;
 34354  006750  9E8C               	bcf	3980,7,c	;volatile
 34355                           
 34356                           ; BSR set to: 0
 34357                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 34358  006752  0E0D               	movlw	13
 34359  006754                     u13847:
 34360  006754  2EE8               	decfsz	wreg,f,c
 34361  006756  D7FE               	bra	u13847
 34362  006758  F000               	nop	
 34363                           
 34364                           ;flash.c: 146: LATDbits.LD7 = 1;
 34365  00675A  8E8C               	bsf	3980,7,c	;volatile
 34366                           
 34367                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 34368  00675C  0E50               	movlw	80
 34369  00675E                     u13857:
 34370  00675E  2EE8               	decfsz	wreg,f,c
 34371  006760  D7FE               	bra	u13857
 34372                           
 34373                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 34374  006762  0E00               	movlw	0
 34375  006764  0100               	movlb	0	; () banked
 34376  006766  6F93               	movwf	_power_state& (0+255),b
 34377                           
 34378                           ; BSR set to: 0
 34379                           ;flash.c: 150: }
 34380                           
 34381                           ;flash.c: 149: break;
 34382  006768  0012               	return	
 34383  00676A                     l1784:
 34384                           
 34385                           ; BSR set to: 0
 34386  00676A  0100               	movlb	0	; () banked
 34387  00676C  5193               	movf	_power_state& (0+255),w,b
 34388                           
 34389                           ; Switch size 1, requested type "space"
 34390                           ; Number of cases is 2, Range of values is 1 to 2
 34391                           ; switch strategies available:
 34392                           ; Name         Instructions Cycles
 34393                           ; simple_byte            7     4 (average)
 34394                           ;	Chosen strategy is simple_byte
 34395  00676E  0A01               	xorlw	1	; case 1
 34396  006770  B4D8               	btfsc	status,2,c
 34397  006772  D7DA               	goto	l1785
 34398  006774  0A03               	xorlw	3	; case 2
 34399  006776  A4D8               	btfss	status,2,c
 34400  006778  0012               	return	
 34401  00677A  D7EA               	goto	l1787
 34402  00677C                     __end_of__flash_wakeup:
 34403                           	opt stack 0
 34404                           tosu	equ	0xFFF
 34405                           tosh	equ	0xFFE
 34406                           tosl	equ	0xFFD
 34407                           pclath	equ	0xFFA
 34408                           tblptru	equ	0xFF8
 34409                           tblptrh	equ	0xFF7
 34410                           tblptrl	equ	0xFF6
 34411                           tablat	equ	0xFF5
 34412                           prodh	equ	0xFF4
 34413                           prodl	equ	0xFF3
 34414                           intcon	equ	0xFF2
 34415                           intcon3	equ	0xFF0
 34416                           indf0	equ	0xFEF
 34417                           postinc0	equ	0xFEE
 34418                           fsr0h	equ	0xFEA
 34419                           fsr0l	equ	0xFE9
 34420                           wreg	equ	0xFE8
 34421                           indf1	equ	0xFE7
 34422                           postdec1	equ	0xFE5
 34423                           plusw1	equ	0xFE3
 34424                           fsr1h	equ	0xFE2
 34425                           fsr1l	equ	0xFE1
 34426                           indf2	equ	0xFDF
 34427                           postinc2	equ	0xFDE
 34428                           postdec2	equ	0xFDD
 34429                           plusw2	equ	0xFDB
 34430                           fsr2h	equ	0xFDA
 34431                           fsr2l	equ	0xFD9
 34432                           status	equ	0xFD8
 34433                           
 34434 ;; *************** function _spi_tx *****************
 34435 ;; Defined at:
 34436 ;;		line 108 in file "spi.c"
 34437 ;; Parameters:    Size  Location     Type
 34438 ;;  data            2    0[COMRAM] PTR unsigned char 
 34439 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 34440 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 34441 ;;  length          2    2[COMRAM] unsigned int 
 34442 ;; Auto vars:     Size  Location     Type
 34443 ;;		None
 34444 ;; Return value:  Size  Location     Type
 34445 ;;                  1    wreg      void 
 34446 ;; Registers used:
 34447 ;;		wreg, status,2, status,0
 34448 ;; Tracked objects:
 34449 ;;		On entry : 0/0
 34450 ;;		On exit  : 0/0
 34451 ;;		Unchanged: 0/0
 34452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34453 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34456 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34457 ;;Total ram usage:        8 bytes
 34458 ;; Hardware stack levels used:    1
 34459 ;; This function calls:
 34460 ;;		Nothing
 34461 ;; This function is called by:
 34462 ;;		__flash_set_page_size
 34463 ;;		__flash_wakeup
 34464 ;;		__flash_compare_page_to_buffer
 34465 ;;		__flash_write_page_from_buffer
 34466 ;;		__flash_copy_page_to_buffer
 34467 ;;		__flash_erase_page
 34468 ;;		_flash_set_power_state
 34469 ;; This function uses a non-reentrant model
 34470 ;;
 34471                           
 34472                           	psect	text180
 34473  0065CC                     __ptext180:
 34474                           	opt stack 0
 34475  0065CC                     _spi_tx:
 34476                           	opt stack 27
 34477                           
 34478                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 34479                           
 34480                           ; BSR set to: 0
 34481                           ;incstack = 0
 34482  0065CC  9E88               	bcf	3976,7,c	;volatile
 34483                           
 34484                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 34485  0065CE  9C88               	bcf	3976,6,c	;volatile
 34486                           
 34487                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 34488  0065D0  8A88               	bsf	3976,5,c	;volatile
 34489                           
 34490                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 34491  0065D2  9888               	bcf	3976,4,c	;volatile
 34492                           
 34493                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 34494  0065D4  9688               	bcf	3976,3,c	;volatile
 34495                           
 34496                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 34497  0065D6  8488               	bsf	3976,2,c	;volatile
 34498                           
 34499                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 34500  0065D8  9288               	bcf	3976,1,c	;volatile
 34501                           
 34502                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 34503  0065DA  9886               	bcf	3974,4,c	;volatile
 34504  0065DC  9A86               	bcf	3974,5,c	;volatile
 34505  0065DE  9C86               	bcf	3974,6,c	;volatile
 34506  0065E0  9E86               	bcf	3974,7,c	;volatile
 34507                           
 34508                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 34509  0065E2  9086               	bcf	3974,0,c	;volatile
 34510  0065E4  9286               	bcf	3974,1,c	;volatile
 34511  0065E6  9486               	bcf	3974,2,c	;volatile
 34512  0065E8  9686               	bcf	3974,3,c	;volatile
 34513                           
 34514                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34515  0065EA  5002               	movf	spi_tx@data+1,w,c
 34516  0065EC  6E6A               	movwf	3946,c	;volatile
 34517                           
 34518                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34519  0065EE  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 34520                           
 34521                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 34522  0065F2  0EFF               	movlw	255
 34523  0065F4  6E05               	movwf	??_spi_tx& (0+255),c
 34524  0065F6  0EFF               	movlw	255
 34525  0065F8  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 34526  0065FA  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 34527  0065FE  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 34528  006602  5005               	movf	??_spi_tx,w,c
 34529  006604  2607               	addwf	??_spi_tx+2,f,c
 34530  006606  5006               	movf	??_spi_tx+1,w,c
 34531  006608  2208               	addwfc	??_spi_tx+3,f,c
 34532  00660A  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 34533  00660E  6A08               	clrf	??_spi_tx+3,c
 34534  006610  5007               	movf	??_spi_tx+2,w,c
 34535  006612  6E66               	movwf	3942,c	;volatile
 34536                           
 34537                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 34538  006614  0403               	decf	spi_tx@length,w,c
 34539  006616  6E67               	movwf	3943,c	;volatile
 34540                           
 34541                           ;spi.c: 136: LATDbits.LD7 = 0;
 34542  006618  9E8C               	bcf	3980,7,c	;volatile
 34543                           
 34544                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 34545  00661A  8088               	bsf	3976,0,c	;volatile
 34546  00661C  B088               	btfsc	3976,0,c	;volatile
 34547  00661E  D7FE               	goto	l2840
 34548                           
 34549                           ;spi.c: 139: LATDbits.LD7 = 1;
 34550  006620  8E8C               	bsf	3980,7,c	;volatile
 34551  006622  0012               	return		;funcret
 34552  006624                     __end_of_spi_tx:
 34553                           	opt stack 0
 34554                           tosu	equ	0xFFF
 34555                           tosh	equ	0xFFE
 34556                           tosl	equ	0xFFD
 34557                           pclath	equ	0xFFA
 34558                           tblptru	equ	0xFF8
 34559                           tblptrh	equ	0xFF7
 34560                           tblptrl	equ	0xFF6
 34561                           tablat	equ	0xFF5
 34562                           prodh	equ	0xFF4
 34563                           prodl	equ	0xFF3
 34564                           intcon	equ	0xFF2
 34565                           intcon3	equ	0xFF0
 34566                           indf0	equ	0xFEF
 34567                           postinc0	equ	0xFEE
 34568                           fsr0h	equ	0xFEA
 34569                           fsr0l	equ	0xFE9
 34570                           wreg	equ	0xFE8
 34571                           indf1	equ	0xFE7
 34572                           postdec1	equ	0xFE5
 34573                           plusw1	equ	0xFE3
 34574                           fsr1h	equ	0xFE2
 34575                           fsr1l	equ	0xFE1
 34576                           indf2	equ	0xFDF
 34577                           postinc2	equ	0xFDE
 34578                           postdec2	equ	0xFDD
 34579                           plusw2	equ	0xFDB
 34580                           fsr2h	equ	0xFDA
 34581                           fsr2l	equ	0xFD9
 34582                           status	equ	0xFD8
 34583                           
 34584 ;; *************** function __flash_get_status *****************
 34585 ;; Defined at:
 34586 ;;		line 117 in file "flash.c"
 34587 ;; Parameters:    Size  Location     Type
 34588 ;;		None
 34589 ;; Auto vars:     Size  Location     Type
 34590 ;;  status          2   15[COMRAM] unsigned int 
 34591 ;;  command         1   14[COMRAM] unsigned char 
 34592 ;; Return value:  Size  Location     Type
 34593 ;;                  2   12[COMRAM] unsigned int 
 34594 ;; Registers used:
 34595 ;;		wreg, status,2, status,0, cstack
 34596 ;; Tracked objects:
 34597 ;;		On entry : 0/0
 34598 ;;		On exit  : 0/0
 34599 ;;		Unchanged: 0/0
 34600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34602 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34604 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34605 ;;Total ram usage:        5 bytes
 34606 ;; Hardware stack levels used:    1
 34607 ;; Hardware stack levels required when called:    1
 34608 ;; This function calls:
 34609 ;;		_spi_tx_rx
 34610 ;; This function is called by:
 34611 ;;		__flash_compare_page_to_buffer
 34612 ;;		__flash_is_busy
 34613 ;; This function uses a non-reentrant model
 34614 ;;
 34615                           
 34616                           	psect	text181
 34617  006EB2                     __ptext181:
 34618                           	opt stack 0
 34619  006EB2                     __flash_get_status:
 34620                           	opt stack 25
 34621                           
 34622                           ;flash.c: 121: uint8_t command = 0xD7;
 34623                           
 34624                           ;incstack = 0
 34625  006EB2  0ED7               	movlw	215
 34626  006EB4  6E0F               	movwf	__flash_get_status@command,c
 34627                           
 34628                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 34629  006EB6  0E0F               	movlw	low __flash_get_status@command
 34630  006EB8  6E01               	movwf	spi_tx_rx@command,c
 34631  006EBA  0E00               	movlw	high __flash_get_status@command
 34632  006EBC  6E02               	movwf	spi_tx_rx@command+1,c
 34633  006EBE  0E00               	movlw	0
 34634  006EC0  6E04               	movwf	spi_tx_rx@command_length+1,c
 34635  006EC2  0E01               	movlw	1
 34636  006EC4  6E03               	movwf	spi_tx_rx@command_length,c
 34637  006EC6  0E10               	movlw	low __flash_get_status@status
 34638  006EC8  6E05               	movwf	spi_tx_rx@data,c
 34639  006ECA  0E00               	movlw	high __flash_get_status@status
 34640  006ECC  6E06               	movwf	spi_tx_rx@data+1,c
 34641  006ECE  0E00               	movlw	0
 34642  006ED0  6E08               	movwf	spi_tx_rx@data_length+1,c
 34643  006ED2  0E02               	movlw	2
 34644  006ED4  6E07               	movwf	spi_tx_rx@data_length,c
 34645  006ED6  ECA3  F02C         	call	_spi_tx_rx	;wreg free
 34646                           
 34647                           ;flash.c: 124: return status;
 34648  006EDA  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 34649  006EDE  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 34650  006EE2  0012               	return	
 34651  006EE4                     __end_of__flash_get_status:
 34652                           	opt stack 0
 34653                           tosu	equ	0xFFF
 34654                           tosh	equ	0xFFE
 34655                           tosl	equ	0xFFD
 34656                           pclath	equ	0xFFA
 34657                           tblptru	equ	0xFF8
 34658                           tblptrh	equ	0xFF7
 34659                           tblptrl	equ	0xFF6
 34660                           tablat	equ	0xFF5
 34661                           prodh	equ	0xFF4
 34662                           prodl	equ	0xFF3
 34663                           intcon	equ	0xFF2
 34664                           intcon3	equ	0xFF0
 34665                           indf0	equ	0xFEF
 34666                           postinc0	equ	0xFEE
 34667                           fsr0h	equ	0xFEA
 34668                           fsr0l	equ	0xFE9
 34669                           wreg	equ	0xFE8
 34670                           indf1	equ	0xFE7
 34671                           postdec1	equ	0xFE5
 34672                           plusw1	equ	0xFE3
 34673                           fsr1h	equ	0xFE2
 34674                           fsr1l	equ	0xFE1
 34675                           indf2	equ	0xFDF
 34676                           postinc2	equ	0xFDE
 34677                           postdec2	equ	0xFDD
 34678                           plusw2	equ	0xFDB
 34679                           fsr2h	equ	0xFDA
 34680                           fsr2l	equ	0xFD9
 34681                           status	equ	0xFD8
 34682                           
 34683 ;; *************** function _spi_tx_rx *****************
 34684 ;; Defined at:
 34685 ;;		line 199 in file "spi.c"
 34686 ;; Parameters:    Size  Location     Type
 34687 ;;  command         2    0[COMRAM] PTR unsigned char 
 34688 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 34689 ;;  command_leng    2    2[COMRAM] unsigned int 
 34690 ;;  data            2    4[COMRAM] PTR unsigned char 
 34691 ;;		 -> _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), fat_modify_file@root(32), 
 34692 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), fat_get_file_size@file_size(4),
      + 
 34693 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@first_byte(1), buffer(512), 
 34694 ;;		 -> _flash_get_status@status(2), msd_buffer(512), 
 34695 ;;  data_length     2    6[COMRAM] unsigned int 
 34696 ;; Auto vars:     Size  Location     Type
 34697 ;;		None
 34698 ;; Return value:  Size  Location     Type
 34699 ;;                  1    wreg      void 
 34700 ;; Registers used:
 34701 ;;		wreg, status,2, status,0
 34702 ;; Tracked objects:
 34703 ;;		On entry : 0/0
 34704 ;;		On exit  : 0/0
 34705 ;;		Unchanged: 0/0
 34706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34707 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34710 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34711 ;;Total ram usage:       12 bytes
 34712 ;; Hardware stack levels used:    1
 34713 ;; This function calls:
 34714 ;;		Nothing
 34715 ;; This function is called by:
 34716 ;;		__flash_get_status
 34717 ;;		__flash_partial_read
 34718 ;;		__flash_buffer_read
 34719 ;; This function uses a non-reentrant model
 34720 ;;
 34721                           
 34722                           	psect	text182
 34723  005946                     __ptext182:
 34724                           	opt stack 0
 34725  005946                     _spi_tx_rx:
 34726                           	opt stack 25
 34727                           
 34728                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 34729                           
 34730                           ;incstack = 0
 34731  005946  9E88               	bcf	3976,7,c	;volatile
 34732                           
 34733                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 34734  005948  9C88               	bcf	3976,6,c	;volatile
 34735                           
 34736                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 34737  00594A  8A88               	bsf	3976,5,c	;volatile
 34738                           
 34739                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 34740  00594C  9888               	bcf	3976,4,c	;volatile
 34741                           
 34742                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 34743  00594E  9688               	bcf	3976,3,c	;volatile
 34744                           
 34745                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 34746  005950  8488               	bsf	3976,2,c	;volatile
 34747                           
 34748                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 34749  005952  9288               	bcf	3976,1,c	;volatile
 34750                           
 34751                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 34752  005954  9886               	bcf	3974,4,c	;volatile
 34753  005956  9A86               	bcf	3974,5,c	;volatile
 34754  005958  9C86               	bcf	3974,6,c	;volatile
 34755  00595A  9E86               	bcf	3974,7,c	;volatile
 34756                           
 34757                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 34758  00595C  9086               	bcf	3974,0,c	;volatile
 34759  00595E  9286               	bcf	3974,1,c	;volatile
 34760  005960  9486               	bcf	3974,2,c	;volatile
 34761  005962  9686               	bcf	3974,3,c	;volatile
 34762                           
 34763                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34764  005964  5002               	movf	spi_tx_rx@command+1,w,c
 34765  005966  6E6A               	movwf	3946,c	;volatile
 34766                           
 34767                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34768  005968  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 34769                           
 34770                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34771  00596C  0EFF               	movlw	255
 34772  00596E  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34773  005970  0EFF               	movlw	255
 34774  005972  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34775  005974  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 34776  005978  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 34777  00597C  5009               	movf	??_spi_tx_rx,w,c
 34778  00597E  260B               	addwf	??_spi_tx_rx+2,f,c
 34779  005980  500A               	movf	??_spi_tx_rx+1,w,c
 34780  005982  220C               	addwfc	??_spi_tx_rx+3,f,c
 34781  005984  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34782  005988  6A0C               	clrf	??_spi_tx_rx+3,c
 34783  00598A  500B               	movf	??_spi_tx_rx+2,w,c
 34784  00598C  6E66               	movwf	3942,c	;volatile
 34785                           
 34786                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34787  00598E  0403               	decf	spi_tx_rx@command_length,w,c
 34788  005990  6E67               	movwf	3943,c	;volatile
 34789                           
 34790                           ;spi.c: 227: LATDbits.LD7 = 0;
 34791  005992  9E8C               	bcf	3980,7,c	;volatile
 34792                           
 34793                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 34794  005994  8088               	bsf	3976,0,c	;volatile
 34795  005996  B088               	btfsc	3976,0,c	;volatile
 34796  005998  D7FE               	goto	l2855
 34797                           
 34798                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 34799  00599A  9A88               	bcf	3976,5,c	;volatile
 34800                           
 34801                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 34802  00599C  8888               	bsf	3976,4,c	;volatile
 34803                           
 34804                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 34805  00599E  9688               	bcf	3976,3,c	;volatile
 34806                           
 34807                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 34808  0059A0  9488               	bcf	3976,2,c	;volatile
 34809                           
 34810                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34811  0059A2  5006               	movf	spi_tx_rx@data+1,w,c
 34812  0059A4  6E68               	movwf	3944,c	;volatile
 34813                           
 34814                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34815  0059A6  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 34816                           
 34817                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34818  0059AA  0EFF               	movlw	255
 34819  0059AC  6E09               	movwf	??_spi_tx_rx& (0+255),c
 34820  0059AE  0EFF               	movlw	255
 34821  0059B0  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 34822  0059B2  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 34823  0059B6  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 34824  0059BA  5009               	movf	??_spi_tx_rx,w,c
 34825  0059BC  260B               	addwf	??_spi_tx_rx+2,f,c
 34826  0059BE  500A               	movf	??_spi_tx_rx+1,w,c
 34827  0059C0  220C               	addwfc	??_spi_tx_rx+3,f,c
 34828  0059C2  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 34829  0059C6  6A0C               	clrf	??_spi_tx_rx+3,c
 34830  0059C8  500B               	movf	??_spi_tx_rx+2,w,c
 34831  0059CA  6E66               	movwf	3942,c	;volatile
 34832                           
 34833                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34834  0059CC  0407               	decf	spi_tx_rx@data_length,w,c
 34835  0059CE  6E67               	movwf	3943,c	;volatile
 34836                           
 34837                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 34838  0059D0  8088               	bsf	3976,0,c	;volatile
 34839  0059D2  B088               	btfsc	3976,0,c	;volatile
 34840  0059D4  D7FE               	goto	l2858
 34841                           
 34842                           ;spi.c: 254: LATDbits.LD7 = 1;
 34843  0059D6  8E8C               	bsf	3980,7,c	;volatile
 34844  0059D8  0012               	return		;funcret
 34845  0059DA                     __end_of_spi_tx_rx:
 34846                           	opt stack 0
 34847                           tosu	equ	0xFFF
 34848                           tosh	equ	0xFFE
 34849                           tosl	equ	0xFFD
 34850                           pclath	equ	0xFFA
 34851                           tblptru	equ	0xFF8
 34852                           tblptrh	equ	0xFF7
 34853                           tblptrl	equ	0xFF6
 34854                           tablat	equ	0xFF5
 34855                           prodh	equ	0xFF4
 34856                           prodl	equ	0xFF3
 34857                           intcon	equ	0xFF2
 34858                           intcon3	equ	0xFF0
 34859                           indf0	equ	0xFEF
 34860                           postinc0	equ	0xFEE
 34861                           fsr0h	equ	0xFEA
 34862                           fsr0l	equ	0xFE9
 34863                           wreg	equ	0xFE8
 34864                           indf1	equ	0xFE7
 34865                           postdec1	equ	0xFE5
 34866                           plusw1	equ	0xFE3
 34867                           fsr1h	equ	0xFE2
 34868                           fsr1l	equ	0xFE1
 34869                           indf2	equ	0xFDF
 34870                           postinc2	equ	0xFDE
 34871                           postdec2	equ	0xFDD
 34872                           plusw2	equ	0xFDB
 34873                           fsr2h	equ	0xFDA
 34874                           fsr2l	equ	0xFD9
 34875                           status	equ	0xFD8
 34876                           
 34877 ;; *************** function __get_root *****************
 34878 ;; Defined at:
 34879 ;;		line 1210 in file "fat16.c"
 34880 ;; Parameters:    Size  Location     Type
 34881 ;;  idx             2    0[COMRAM] unsigned int 
 34882 ;; Auto vars:     Size  Location     Type
 34883 ;;		None
 34884 ;; Return value:  Size  Location     Type
 34885 ;;                  1    wreg      unsigned char 
 34886 ;; Registers used:
 34887 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34888 ;; Tracked objects:
 34889 ;;		On entry : 0/0
 34890 ;;		On exit  : 0/0
 34891 ;;		Unchanged: 0/0
 34892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34897 ;;Total ram usage:        6 bytes
 34898 ;; Hardware stack levels used:    1
 34899 ;; This function calls:
 34900 ;;		Nothing
 34901 ;; This function is called by:
 34902 ;;		_fat_format
 34903 ;; This function uses a non-reentrant model
 34904 ;;
 34905                           
 34906                           	psect	text183
 34907  00298E                     __ptext183:
 34908                           	opt stack 0
 34909  00298E                     __get_root:
 34910                           	opt stack 27
 34911                           
 34912                           ;fat16.c: 1212: if(idx < 0x20)
 34913                           
 34914                           ;incstack = 0
 34915  00298E  5002               	movf	__get_root@idx+1,w,c
 34916  002990  E11D               	bnz	l11643
 34917  002992  0E20               	movlw	32
 34918  002994  5C01               	subwf	__get_root@idx,w,c
 34919  002996  B0D8               	btfsc	status,0,c
 34920  002998  D019               	goto	l2261
 34921                           
 34922                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
 34923  00299A  5002               	movf	__get_root@idx+1,w,c
 34924  00299C  E110               	bnz	l11637
 34925  00299E  0E0B               	movlw	11
 34926  0029A0  5C01               	subwf	__get_root@idx,w,c
 34927  0029A2  B0D8               	btfsc	status,0,c
 34928  0029A4  D00C               	goto	l2259
 34929                           
 34930                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
 34931  0029A6  0EDD               	movlw	low STR_9
 34932  0029A8  2401               	addwf	__get_root@idx,w,c
 34933  0029AA  6EF6               	movwf	tblptrl,c
 34934  0029AC  0E8F               	movlw	high STR_9
 34935  0029AE  2002               	addwfc	__get_root@idx+1,w,c
 34936  0029B0  6EF7               	movwf	tblptrh,c
 34937  0029B2                     	if	1	;There are 3 active tblptr bytes
 34938  0029B2  6AF8               	clrf	tblptru,c
 34939  0029B4  0E00               	movlw	low (__mediumconst shr (0+16))
 34940  0029B6  22F8               	addwfc	tblptru,f,c
 34941  0029B8                     	endif
 34942  0029B8  0008               	tblrd		*
 34943  0029BA  50F5               	movf	tablat,w,c
 34944  0029BC  0012               	return	
 34945  0029BE                     l2259:
 34946  0029BE                     l11637:
 34947                           
 34948                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
 34949  0029BE  0E0B               	movlw	11
 34950  0029C0  1801               	xorwf	__get_root@idx,w,c
 34951  0029C2  1002               	iorwf	__get_root@idx+1,w,c
 34952  0029C4  A4D8               	btfss	status,2,c
 34953  0029C6  D002               	goto	l2261
 34954                           
 34955                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
 34956  0029C8  0E08               	movlw	8
 34957  0029CA  0012               	return	
 34958  0029CC                     l2261:
 34959  0029CC                     l11643:
 34960                           
 34961                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
 34962  0029CC  5002               	movf	__get_root@idx+1,w,c
 34963  0029CE  E103               	bnz	u9041
 34964  0029D0  0E40               	movlw	64
 34965  0029D2  5C01               	subwf	__get_root@idx,w,c
 34966  0029D4  B0D8               	btfsc	status,0,c
 34967  0029D6                     u9041:
 34968  0029D6  D0A4               	goto	l2287
 34969                           
 34970                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
 34971  0029D8  0E20               	movlw	32
 34972  0029DA  5E01               	subwf	__get_root@idx,f,c
 34973  0029DC  0E00               	movlw	0
 34974  0029DE  5A02               	subwfb	__get_root@idx+1,f,c
 34975                           
 34976                           ;fat16.c: 1226: if(idx < 0+8)
 34977  0029E0  5002               	movf	__get_root@idx+1,w,c
 34978  0029E2  E110               	bnz	l11651
 34979  0029E4  0E08               	movlw	8
 34980  0029E6  5C01               	subwf	__get_root@idx,w,c
 34981  0029E8  B0D8               	btfsc	status,0,c
 34982  0029EA  D00C               	goto	l2263
 34983                           
 34984                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
 34985  0029EC  0EE9               	movlw	low STR_10
 34986  0029EE  2401               	addwf	__get_root@idx,w,c
 34987  0029F0  6EF6               	movwf	tblptrl,c
 34988  0029F2  0E8F               	movlw	high STR_10
 34989  0029F4  2002               	addwfc	__get_root@idx+1,w,c
 34990  0029F6  6EF7               	movwf	tblptrh,c
 34991  0029F8                     	if	1	;There are 3 active tblptr bytes
 34992  0029F8  6AF8               	clrf	tblptru,c
 34993  0029FA  0E00               	movlw	low (__mediumconst shr (0+16))
 34994  0029FC  22F8               	addwfc	tblptru,f,c
 34995  0029FE                     	endif
 34996  0029FE  0008               	tblrd		*
 34997  002A00  50F5               	movf	tablat,w,c
 34998  002A02  0012               	return	
 34999  002A04                     l2263:
 35000  002A04                     l11651:
 35001                           
 35002                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
 35003  002A04  5002               	movf	__get_root@idx+1,w,c
 35004  002A06  E146               	bnz	l11743
 35005  002A08  0E0B               	movlw	11
 35006  002A0A  5C01               	subwf	__get_root@idx,w,c
 35007  002A0C  B0D8               	btfsc	status,0,c
 35008  002A0E  D042               	goto	l2265
 35009                           
 35010                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
 35011  002A10  0EF8               	movlw	248
 35012  002A12  6E03               	movwf	??__get_root& (0+255),c
 35013  002A14  0EFF               	movlw	255
 35014  002A16  6E04               	movwf	(??__get_root+1)& (0+255),c
 35015  002A18  C001  F005         	movff	__get_root@idx,??__get_root+2
 35016  002A1C  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 35017  002A20  5003               	movf	??__get_root,w,c
 35018  002A22  2605               	addwf	??__get_root+2,f,c
 35019  002A24  5004               	movf	??__get_root+1,w,c
 35020  002A26  2206               	addwfc	??__get_root+3,f,c
 35021  002A28  0EFB               	movlw	low STR_11
 35022  002A2A  2405               	addwf	??__get_root+2,w,c
 35023  002A2C  6EF6               	movwf	tblptrl,c
 35024  002A2E  0E8F               	movlw	high STR_11
 35025  002A30  2006               	addwfc	??__get_root+3,w,c
 35026  002A32  6EF7               	movwf	tblptrh,c
 35027  002A34                     	if	1	;There are 3 active tblptr bytes
 35028  002A34  6AF8               	clrf	tblptru,c
 35029  002A36  0E00               	movlw	low (__mediumconst shr (0+16))
 35030  002A38  22F8               	addwfc	tblptru,f,c
 35031  002A3A                     	endif
 35032  002A3A  0008               	tblrd		*
 35033  002A3C  50F5               	movf	tablat,w,c
 35034  002A3E  0012               	return	
 35035  002A40                     
 35036                           ;fat16.c: 1237: return 0x20;
 35037  002A40  0E20               	movlw	32
 35038  002A42  0012               	return	
 35039  002A44                     
 35040                           ;fat16.c: 1239: return 0x06;
 35041  002A44  0E06               	movlw	6
 35042  002A46  0012               	return	
 35043  002A48                     
 35044                           ;fat16.c: 1241: return 0x28;
 35045  002A48  0E28               	movlw	40
 35046  002A4A  0012               	return	
 35047  002A4C                     
 35048                           ;fat16.c: 1243: return 0x78;
 35049  002A4C  0E78               	movlw	120
 35050  002A4E  0012               	return	
 35051  002A50                     
 35052                           ;fat16.c: 1245: return 0xDE;
 35053  002A50  0EDE               	movlw	222
 35054  002A52  0012               	return	
 35055  002A54                     
 35056                           ;fat16.c: 1247: return 0x38;
 35057  002A54  0E38               	movlw	56
 35058  002A56  0012               	return	
 35059  002A58                     
 35060                           ;fat16.c: 1249: return 0x5F;
 35061  002A58  0E5F               	movlw	95
 35062  002A5A  0012               	return	
 35063  002A5C                     
 35064                           ;fat16.c: 1251: return 0x4B;
 35065  002A5C  0E4B               	movlw	75
 35066  002A5E  0012               	return	
 35067  002A60                     
 35068                           ;fat16.c: 1253: return 0x00;
 35069  002A60  0E00               	movlw	0
 35070  002A62  0012               	return	
 35071  002A64                     
 35072                           ;fat16.c: 1255: return 0x00;
 35073  002A64  0E00               	movlw	0
 35074  002A66  0012               	return	
 35075  002A68                     
 35076                           ;fat16.c: 1257: return 0x04;
 35077  002A68  0E04               	movlw	4
 35078  002A6A  0012               	return	
 35079  002A6C                     
 35080                           ;fat16.c: 1259: return 0x77;
 35081  002A6C  0E77               	movlw	119
 35082  002A6E  0012               	return	
 35083  002A70                     
 35084                           ;fat16.c: 1261: return 0xDE;
 35085  002A70  0EDE               	movlw	222
 35086  002A72  0012               	return	
 35087  002A74                     
 35088                           ;fat16.c: 1263: return 0x38;
 35089  002A74  0E38               	movlw	56
 35090  002A76  0012               	return	
 35091  002A78                     
 35092                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
 35093  002A78  0E02               	movlw	2
 35094  002A7A  0012               	return	
 35095  002A7C                     
 35096                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 35097  002A7C  0E00               	movlw	0
 35098  002A7E  0012               	return	
 35099  002A80                     
 35100                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 35101  002A80  0E0C               	movlw	12
 35102  002A82  0012               	return	
 35103  002A84                     
 35104                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 35105  002A84  0E00               	movlw	0
 35106  002A86  0012               	return	
 35107  002A88                     
 35108                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 35109  002A88  0E00               	movlw	0
 35110  002A8A  0012               	return	
 35111  002A8C                     
 35112                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35113  002A8C  0E00               	movlw	0
 35114  002A8E  0012               	return	
 35115  002A90                     
 35116                           ;fat16.c: 1277: return 0x00;
 35117  002A90  0E00               	movlw	0
 35118  002A92  0012               	return	
 35119  002A94                     l2265:
 35120  002A94                     l11743:
 35121  002A94  C001  F003         	movff	__get_root@idx,??__get_root
 35122  002A98  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 35123                           
 35124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35125                           ; Switch size 1, requested type "space"
 35126                           ; Number of cases is 1, Range of values is 0 to 0
 35127                           ; switch strategies available:
 35128                           ; Name         Instructions Cycles
 35129                           ; simple_byte            4     3 (average)
 35130                           ;	Chosen strategy is simple_byte
 35131  002A9C  5004               	movf	??__get_root+1,w,c
 35132  002A9E  0A00               	xorlw	0	; case 0
 35133  002AA0  A4D8               	btfss	status,2,c
 35134  002AA2  D7F6               	goto	l2286
 35135                           
 35136                           ; Switch size 1, requested type "space"
 35137                           ; Number of cases is 20, Range of values is 11 to 31
 35138                           ; switch strategies available:
 35139                           ; Name         Instructions Cycles
 35140                           ; simple_byte           61    31 (average)
 35141                           ;	Chosen strategy is simple_byte
 35142  002AA4  5003               	movf	??__get_root,w,c
 35143  002AA6  0A0B               	xorlw	11	; case 11
 35144  002AA8  B4D8               	btfsc	status,2,c
 35145  002AAA  D7CA               	goto	l2266
 35146  002AAC  0A06               	xorlw	6	; case 13
 35147  002AAE  B4D8               	btfsc	status,2,c
 35148  002AB0  D7C9               	goto	l2267
 35149  002AB2  0A03               	xorlw	3	; case 14
 35150  002AB4  B4D8               	btfsc	status,2,c
 35151  002AB6  D7C8               	goto	l2268
 35152  002AB8  0A01               	xorlw	1	; case 15
 35153  002ABA  B4D8               	btfsc	status,2,c
 35154  002ABC  D7C7               	goto	l2269
 35155  002ABE  0A1F               	xorlw	31	; case 16
 35156  002AC0  B4D8               	btfsc	status,2,c
 35157  002AC2  D7C6               	goto	l2270
 35158  002AC4  0A01               	xorlw	1	; case 17
 35159  002AC6  B4D8               	btfsc	status,2,c
 35160  002AC8  D7C5               	goto	l2271
 35161  002ACA  0A03               	xorlw	3	; case 18
 35162  002ACC  B4D8               	btfsc	status,2,c
 35163  002ACE  D7C4               	goto	l2272
 35164  002AD0  0A01               	xorlw	1	; case 19
 35165  002AD2  B4D8               	btfsc	status,2,c
 35166  002AD4  D7C3               	goto	l2273
 35167  002AD6  0A07               	xorlw	7	; case 20
 35168  002AD8  B4D8               	btfsc	status,2,c
 35169  002ADA  D7C2               	goto	l2274
 35170  002ADC  0A01               	xorlw	1	; case 21
 35171  002ADE  B4D8               	btfsc	status,2,c
 35172  002AE0  D7C1               	goto	l2275
 35173  002AE2  0A03               	xorlw	3	; case 22
 35174  002AE4  B4D8               	btfsc	status,2,c
 35175  002AE6  D7C0               	goto	l2276
 35176  002AE8  0A01               	xorlw	1	; case 23
 35177  002AEA  B4D8               	btfsc	status,2,c
 35178  002AEC  D7BF               	goto	l2277
 35179  002AEE  0A0F               	xorlw	15	; case 24
 35180  002AF0  B4D8               	btfsc	status,2,c
 35181  002AF2  D7BE               	goto	l2278
 35182  002AF4  0A01               	xorlw	1	; case 25
 35183  002AF6  B4D8               	btfsc	status,2,c
 35184  002AF8  D7BD               	goto	l2279
 35185  002AFA  0A03               	xorlw	3	; case 26
 35186  002AFC  B4D8               	btfsc	status,2,c
 35187  002AFE  D7BC               	goto	l2280
 35188  002B00  0A01               	xorlw	1	; case 27
 35189  002B02  B4D8               	btfsc	status,2,c
 35190  002B04  D7BB               	goto	l2281
 35191  002B06  0A07               	xorlw	7	; case 28
 35192  002B08  B4D8               	btfsc	status,2,c
 35193  002B0A  D7BA               	goto	l2282
 35194  002B0C  0A01               	xorlw	1	; case 29
 35195  002B0E  B4D8               	btfsc	status,2,c
 35196  002B10  D7B9               	goto	l2283
 35197  002B12  0A03               	xorlw	3	; case 30
 35198  002B14  B4D8               	btfsc	status,2,c
 35199  002B16  D7B8               	goto	l2284
 35200  002B18  0A01               	xorlw	1	; case 31
 35201  002B1A  B4D8               	btfsc	status,2,c
 35202  002B1C  D7B7               	goto	l2285
 35203  002B1E  D7B8               	goto	l2286
 35204  002B20                     l2287:
 35205                           
 35206                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
 35207  002B20  0E00               	movlw	0
 35208  002B22  0012               	return	
 35209  002B24                     __end_of__get_root:
 35210                           	opt stack 0
 35211                           tosu	equ	0xFFF
 35212                           tosh	equ	0xFFE
 35213                           tosl	equ	0xFFD
 35214                           pclath	equ	0xFFA
 35215                           tblptru	equ	0xFF8
 35216                           tblptrh	equ	0xFF7
 35217                           tblptrl	equ	0xFF6
 35218                           tablat	equ	0xFF5
 35219                           prodh	equ	0xFF4
 35220                           prodl	equ	0xFF3
 35221                           intcon	equ	0xFF2
 35222                           intcon3	equ	0xFF0
 35223                           indf0	equ	0xFEF
 35224                           postinc0	equ	0xFEE
 35225                           fsr0h	equ	0xFEA
 35226                           fsr0l	equ	0xFE9
 35227                           wreg	equ	0xFE8
 35228                           indf1	equ	0xFE7
 35229                           postdec1	equ	0xFE5
 35230                           plusw1	equ	0xFE3
 35231                           fsr1h	equ	0xFE2
 35232                           fsr1l	equ	0xFE1
 35233                           indf2	equ	0xFDF
 35234                           postinc2	equ	0xFDE
 35235                           postdec2	equ	0xFDD
 35236                           plusw2	equ	0xFDB
 35237                           fsr2h	equ	0xFDA
 35238                           fsr2l	equ	0xFD9
 35239                           status	equ	0xFD8
 35240                           
 35241 ;; *************** function __get_mbr *****************
 35242 ;; Defined at:
 35243 ;;		line 1037 in file "fat16.c"
 35244 ;; Parameters:    Size  Location     Type
 35245 ;;  idx             2    0[COMRAM] unsigned int 
 35246 ;; Auto vars:     Size  Location     Type
 35247 ;;		None
 35248 ;; Return value:  Size  Location     Type
 35249 ;;                  1    wreg      unsigned char 
 35250 ;; Registers used:
 35251 ;;		wreg, status,2, status,0
 35252 ;; Tracked objects:
 35253 ;;		On entry : 0/0
 35254 ;;		On exit  : 0/0
 35255 ;;		Unchanged: 0/0
 35256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35261 ;;Total ram usage:        4 bytes
 35262 ;; Hardware stack levels used:    1
 35263 ;; This function calls:
 35264 ;;		Nothing
 35265 ;; This function is called by:
 35266 ;;		_fat_get_format_status
 35267 ;;		_fat_format
 35268 ;; This function uses a non-reentrant model
 35269 ;;
 35270                           
 35271                           	psect	text184
 35272  004BCC                     __ptext184:
 35273                           	opt stack 0
 35274  004BCC                     __get_mbr:
 35275                           	opt stack 27
 35276                           
 35277                           ;fat16.c: 1039: switch (idx)
 35278                           
 35279                           ;incstack = 0
 35280  004BCC  D026               	goto	l2168
 35281  004BCE                     
 35282                           ;fat16.c: 1042: return 0x80;
 35283  004BCE  0E80               	movlw	128
 35284  004BD0  0012               	return	
 35285  004BD2                     
 35286                           ;fat16.c: 1044: return 0;
 35287  004BD2  0E00               	movlw	0
 35288  004BD4  0012               	return	
 35289  004BD6                     
 35290                           ;fat16.c: 1046: return 2;
 35291  004BD6  0E02               	movlw	2
 35292  004BD8  0012               	return	
 35293  004BDA                     
 35294                           ;fat16.c: 1048: return 0;
 35295  004BDA  0E00               	movlw	0
 35296  004BDC  0012               	return	
 35297  004BDE                     
 35298                           ;fat16.c: 1050: return 0x04;
 35299  004BDE  0E04               	movlw	4
 35300  004BE0  0012               	return	
 35301  004BE2                     
 35302                           ;fat16.c: 1052: return 2;
 35303  004BE2  0E02               	movlw	2
 35304  004BE4  0012               	return	
 35305  004BE6                     
 35306                           ;fat16.c: 1054: return 3;
 35307  004BE6  0E03               	movlw	3
 35308  004BE8  0012               	return	
 35309  004BEA                     
 35310                           ;fat16.c: 1056: return 8;
 35311  004BEA  0E08               	movlw	8
 35312  004BEC  0012               	return	
 35313  004BEE                     
 35314                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
 35315  004BEE  0E01               	movlw	1
 35316  004BF0  0012               	return	
 35317  004BF2                     
 35318                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
 35319  004BF2  0E00               	movlw	0
 35320  004BF4  0012               	return	
 35321  004BF6                     
 35322                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 35323  004BF6  0E00               	movlw	0
 35324  004BF8  0012               	return	
 35325  004BFA                     
 35326                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35327  004BFA  0E00               	movlw	0
 35328  004BFC  0012               	return	
 35329  004BFE                     
 35330                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 35331  004BFE  0EFF               	movlw	255
 35332  004C00  0012               	return	
 35333  004C02                     
 35334                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 35335  004C02  0E1F               	movlw	31
 35336  004C04  0012               	return	
 35337  004C06                     
 35338                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 35339  004C06  0E00               	movlw	0
 35340  004C08  0012               	return	
 35341  004C0A                     
 35342                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 35343  004C0A  0E00               	movlw	0
 35344  004C0C  0012               	return	
 35345  004C0E                     
 35346                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 35347  004C0E  0E55               	movlw	85
 35348  004C10  0012               	return	
 35349  004C12                     
 35350                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 35351  004C12  0EAA               	movlw	170
 35352  004C14  0012               	return	
 35353  004C16                     
 35354                           ;fat16.c: 1078: return 0X00;
 35355  004C16  0E00               	movlw	0
 35356                           
 35357                           ;fat16.c: 1079: }
 35358  004C18  0012               	return	
 35359  004C1A                     l2168:
 35360  004C1A  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 35361  004C1E  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 35362                           
 35363                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35364                           ; Switch size 1, requested type "space"
 35365                           ; Number of cases is 1, Range of values is 1 to 1
 35366                           ; switch strategies available:
 35367                           ; Name         Instructions Cycles
 35368                           ; simple_byte            4     3 (average)
 35369                           ;	Chosen strategy is simple_byte
 35370  004C22  5004               	movf	??__get_mbr+1,w,c
 35371  004C24  0A01               	xorlw	1	; case 1
 35372  004C26  A4D8               	btfss	status,2,c
 35373  004C28  D7F6               	goto	l2188
 35374                           
 35375                           ; Switch size 1, requested type "space"
 35376                           ; Number of cases is 18, Range of values is 190 to 255
 35377                           ; switch strategies available:
 35378                           ; Name         Instructions Cycles
 35379                           ; simple_byte           55    28 (average)
 35380                           ;	Chosen strategy is simple_byte
 35381  004C2A  5003               	movf	??__get_mbr,w,c
 35382  004C2C  0ABE               	xorlw	190	; case 190
 35383  004C2E  B4D8               	btfsc	status,2,c
 35384  004C30  D7CE               	goto	l2169
 35385  004C32  0A01               	xorlw	1	; case 191
 35386  004C34  B4D8               	btfsc	status,2,c
 35387  004C36  D7CD               	goto	l2171
 35388  004C38  0A7F               	xorlw	127	; case 192
 35389  004C3A  B4D8               	btfsc	status,2,c
 35390  004C3C  D7CC               	goto	l2172
 35391  004C3E  0A01               	xorlw	1	; case 193
 35392  004C40  B4D8               	btfsc	status,2,c
 35393  004C42  D7CB               	goto	l2173
 35394  004C44  0A03               	xorlw	3	; case 194
 35395  004C46  B4D8               	btfsc	status,2,c
 35396  004C48  D7CA               	goto	l2174
 35397  004C4A  0A01               	xorlw	1	; case 195
 35398  004C4C  B4D8               	btfsc	status,2,c
 35399  004C4E  D7C9               	goto	l2175
 35400  004C50  0A07               	xorlw	7	; case 196
 35401  004C52  B4D8               	btfsc	status,2,c
 35402  004C54  D7C8               	goto	l2176
 35403  004C56  0A01               	xorlw	1	; case 197
 35404  004C58  B4D8               	btfsc	status,2,c
 35405  004C5A  D7C7               	goto	l2177
 35406  004C5C  0A03               	xorlw	3	; case 198
 35407  004C5E  B4D8               	btfsc	status,2,c
 35408  004C60  D7C6               	goto	l2178
 35409  004C62  0A01               	xorlw	1	; case 199
 35410  004C64  B4D8               	btfsc	status,2,c
 35411  004C66  D7C5               	goto	l2179
 35412  004C68  0A0F               	xorlw	15	; case 200
 35413  004C6A  B4D8               	btfsc	status,2,c
 35414  004C6C  D7C4               	goto	l2180
 35415  004C6E  0A01               	xorlw	1	; case 201
 35416  004C70  B4D8               	btfsc	status,2,c
 35417  004C72  D7C3               	goto	l2181
 35418  004C74  0A03               	xorlw	3	; case 202
 35419  004C76  B4D8               	btfsc	status,2,c
 35420  004C78  D7C2               	goto	l2182
 35421  004C7A  0A01               	xorlw	1	; case 203
 35422  004C7C  B4D8               	btfsc	status,2,c
 35423  004C7E  D7C1               	goto	l2183
 35424  004C80  0A07               	xorlw	7	; case 204
 35425  004C82  B4D8               	btfsc	status,2,c
 35426  004C84  D7C0               	goto	l2184
 35427  004C86  0A01               	xorlw	1	; case 205
 35428  004C88  B4D8               	btfsc	status,2,c
 35429  004C8A  D7BF               	goto	l2185
 35430  004C8C  0A33               	xorlw	51	; case 254
 35431  004C8E  B4D8               	btfsc	status,2,c
 35432  004C90  D7BE               	goto	l2186
 35433  004C92  0A01               	xorlw	1	; case 255
 35434  004C94  B4D8               	btfsc	status,2,c
 35435  004C96  D7BD               	goto	l2187
 35436  004C98  D7BE               	goto	l2188
 35437  004C9A                     __end_of__get_mbr:
 35438                           	opt stack 0
 35439                           tosu	equ	0xFFF
 35440                           tosh	equ	0xFFE
 35441                           tosl	equ	0xFFD
 35442                           pclath	equ	0xFFA
 35443                           tblptru	equ	0xFF8
 35444                           tblptrh	equ	0xFF7
 35445                           tblptrl	equ	0xFF6
 35446                           tablat	equ	0xFF5
 35447                           prodh	equ	0xFF4
 35448                           prodl	equ	0xFF3
 35449                           intcon	equ	0xFF2
 35450                           intcon3	equ	0xFF0
 35451                           indf0	equ	0xFEF
 35452                           postinc0	equ	0xFEE
 35453                           fsr0h	equ	0xFEA
 35454                           fsr0l	equ	0xFE9
 35455                           wreg	equ	0xFE8
 35456                           indf1	equ	0xFE7
 35457                           postdec1	equ	0xFE5
 35458                           plusw1	equ	0xFE3
 35459                           fsr1h	equ	0xFE2
 35460                           fsr1l	equ	0xFE1
 35461                           indf2	equ	0xFDF
 35462                           postinc2	equ	0xFDE
 35463                           postdec2	equ	0xFDD
 35464                           plusw2	equ	0xFDB
 35465                           fsr2h	equ	0xFDA
 35466                           fsr2l	equ	0xFD9
 35467                           status	equ	0xFD8
 35468                           
 35469 ;; *************** function __get_fbr *****************
 35470 ;; Defined at:
 35471 ;;		line 1082 in file "fat16.c"
 35472 ;; Parameters:    Size  Location     Type
 35473 ;;  idx             2    0[COMRAM] unsigned int 
 35474 ;; Auto vars:     Size  Location     Type
 35475 ;;		None
 35476 ;; Return value:  Size  Location     Type
 35477 ;;                  1    wreg      unsigned char 
 35478 ;; Registers used:
 35479 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35480 ;; Tracked objects:
 35481 ;;		On entry : 0/0
 35482 ;;		On exit  : 0/0
 35483 ;;		Unchanged: 0/0
 35484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35489 ;;Total ram usage:        4 bytes
 35490 ;; Hardware stack levels used:    1
 35491 ;; This function calls:
 35492 ;;		Nothing
 35493 ;; This function is called by:
 35494 ;;		_fat_get_format_status
 35495 ;;		_fat_format
 35496 ;; This function uses a non-reentrant model
 35497 ;;
 35498                           
 35499                           	psect	text185
 35500  00175A                     __ptext185:
 35501                           	opt stack 0
 35502  00175A                     __get_fbr:
 35503                           	opt stack 27
 35504                           
 35505                           ;fat16.c: 1084: switch (idx)
 35506                           
 35507                           ;incstack = 0
 35508  00175A  D091               	goto	l2192
 35509  00175C                     
 35510                           ;fat16.c: 1087: return 0xEB;
 35511  00175C  0EEB               	movlw	235
 35512  00175E  0012               	return	
 35513  001760                     
 35514                           ;fat16.c: 1089: return 0x3C;
 35515  001760  0E3C               	movlw	60
 35516  001762  0012               	return	
 35517  001764                     
 35518                           ;fat16.c: 1091: return 0x90;
 35519  001764  0E90               	movlw	144
 35520  001766  0012               	return	
 35521  001768                     
 35522                           ;fat16.c: 1093: return "MSDOS5.0"[0];
 35523  001768  0EF2               	movlw	low STR_1
 35524  00176A  6EF6               	movwf	tblptrl,c
 35525  00176C                     	if	1	;There is more than 1 active tblptr byte
 35526  00176C  0E8F               	movlw	high STR_1
 35527  00176E  6EF7               	movwf	tblptrh,c
 35528  001770                     	endif
 35529  001770                     	if	1	;There are 3 active tblptr bytes
 35530  001770  0E00               	movlw	low (STR_1 shr (0+16))
 35531  001772  6EF8               	movwf	tblptru,c
 35532  001774                     	endif
 35533  001774  0008               	tblrd		*
 35534  001776  50F5               	movf	tablat,w,c
 35535  001778  0012               	return	
 35536  00177A                     
 35537                           ;fat16.c: 1095: return "MSDOS5.0"[1];
 35538  00177A  0EF3               	movlw	low (STR_1+1)
 35539  00177C  6EF6               	movwf	tblptrl,c
 35540  00177E  0E8F               	movlw	high (STR_1+1)
 35541  001780  6EF7               	movwf	tblptrh,c
 35542  001782                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35543  001782  6AF8               	clrf	tblptru,c
 35544  001784                     	endif
 35545  001784                     	if	0	;tblptru may be non-zero
 35546  001784                     	endif
 35547  001784  0008               	tblrd		*
 35548  001786  50F5               	movf	tablat,w,c
 35549  001788  0012               	return	
 35550  00178A                     
 35551                           ;fat16.c: 1097: return "MSDOS5.0"[2];
 35552  00178A  0EF4               	movlw	low (STR_1+2)
 35553  00178C  6EF6               	movwf	tblptrl,c
 35554  00178E  0E8F               	movlw	high (STR_1+2)
 35555  001790  6EF7               	movwf	tblptrh,c
 35556  001792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35557  001792  6AF8               	clrf	tblptru,c
 35558  001794                     	endif
 35559  001794                     	if	0	;tblptru may be non-zero
 35560  001794                     	endif
 35561  001794  0008               	tblrd		*
 35562  001796  50F5               	movf	tablat,w,c
 35563  001798  0012               	return	
 35564  00179A                     
 35565                           ;fat16.c: 1099: return "MSDOS5.0"[3];
 35566  00179A  0EF5               	movlw	low (STR_1+3)
 35567  00179C  6EF6               	movwf	tblptrl,c
 35568  00179E  0E8F               	movlw	high (STR_1+3)
 35569  0017A0  6EF7               	movwf	tblptrh,c
 35570  0017A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35571  0017A2  6AF8               	clrf	tblptru,c
 35572  0017A4                     	endif
 35573  0017A4                     	if	0	;tblptru may be non-zero
 35574  0017A4                     	endif
 35575  0017A4  0008               	tblrd		*
 35576  0017A6  50F5               	movf	tablat,w,c
 35577  0017A8  0012               	return	
 35578  0017AA                     
 35579                           ;fat16.c: 1101: return "MSDOS5.0"[4];
 35580  0017AA  0EF6               	movlw	low (STR_1+4)
 35581  0017AC  6EF6               	movwf	tblptrl,c
 35582  0017AE  0E8F               	movlw	high (STR_1+4)
 35583  0017B0  6EF7               	movwf	tblptrh,c
 35584  0017B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35585  0017B2  6AF8               	clrf	tblptru,c
 35586  0017B4                     	endif
 35587  0017B4                     	if	0	;tblptru may be non-zero
 35588  0017B4                     	endif
 35589  0017B4  0008               	tblrd		*
 35590  0017B6  50F5               	movf	tablat,w,c
 35591  0017B8  0012               	return	
 35592  0017BA                     
 35593                           ;fat16.c: 1103: return "MSDOS5.0"[5];
 35594  0017BA  0EF7               	movlw	low (STR_1+5)
 35595  0017BC  6EF6               	movwf	tblptrl,c
 35596  0017BE  0E8F               	movlw	high (STR_1+5)
 35597  0017C0  6EF7               	movwf	tblptrh,c
 35598  0017C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35599  0017C2  6AF8               	clrf	tblptru,c
 35600  0017C4                     	endif
 35601  0017C4                     	if	0	;tblptru may be non-zero
 35602  0017C4                     	endif
 35603  0017C4  0008               	tblrd		*
 35604  0017C6  50F5               	movf	tablat,w,c
 35605  0017C8  0012               	return	
 35606  0017CA                     
 35607                           ;fat16.c: 1105: return "MSDOS5.0"[6];
 35608  0017CA  0EF8               	movlw	low (STR_1+6)
 35609  0017CC  6EF6               	movwf	tblptrl,c
 35610  0017CE  0E8F               	movlw	high (STR_1+6)
 35611  0017D0  6EF7               	movwf	tblptrh,c
 35612  0017D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35613  0017D2  6AF8               	clrf	tblptru,c
 35614  0017D4                     	endif
 35615  0017D4                     	if	0	;tblptru may be non-zero
 35616  0017D4                     	endif
 35617  0017D4  0008               	tblrd		*
 35618  0017D6  50F5               	movf	tablat,w,c
 35619  0017D8  0012               	return	
 35620  0017DA                     
 35621                           ;fat16.c: 1107: return "MSDOS5.0"[7];
 35622  0017DA  0EF9               	movlw	low (STR_1+7)
 35623  0017DC  6EF6               	movwf	tblptrl,c
 35624  0017DE  0E8F               	movlw	high (STR_1+7)
 35625  0017E0  6EF7               	movwf	tblptrh,c
 35626  0017E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35627  0017E2  6AF8               	clrf	tblptru,c
 35628  0017E4                     	endif
 35629  0017E4                     	if	0	;tblptru may be non-zero
 35630  0017E4                     	endif
 35631  0017E4  0008               	tblrd		*
 35632  0017E6  50F5               	movf	tablat,w,c
 35633  0017E8  0012               	return	
 35634  0017EA                     
 35635                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
 35636  0017EA  0E00               	movlw	0
 35637  0017EC  0012               	return	
 35638  0017EE                     
 35639                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 35640  0017EE  0E02               	movlw	2
 35641  0017F0  0012               	return	
 35642  0017F2                     
 35643                           ;fat16.c: 1113: return 1;
 35644  0017F2  0E01               	movlw	1
 35645  0017F4  0012               	return	
 35646  0017F6                     
 35647                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
 35648  0017F6  0E01               	movlw	1
 35649  0017F8  0012               	return	
 35650  0017FA                     
 35651                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 35652  0017FA  0E00               	movlw	0
 35653  0017FC  0012               	return	
 35654  0017FE                     
 35655                           ;fat16.c: 1119: return 1;
 35656  0017FE  0E01               	movlw	1
 35657  001800  0012               	return	
 35658  001802                     
 35659                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
 35660  001802  0E40               	movlw	64
 35661  001804  0012               	return	
 35662  001806                     
 35663                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 35664  001806  0E00               	movlw	0
 35665  001808  0012               	return	
 35666  00180A                     
 35667                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
 35668  00180A  0EFF               	movlw	255
 35669  00180C  0012               	return	
 35670  00180E                     
 35671                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35672  00180E  0E1F               	movlw	31
 35673  001810  0012               	return	
 35674  001812                     
 35675                           ;fat16.c: 1129: return 0XF8;
 35676  001812  0EF8               	movlw	248
 35677  001814  0012               	return	
 35678  001816                     
 35679                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 35680  001816  0E20               	movlw	32
 35681  001818  0012               	return	
 35682  00181A                     
 35683                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35684  00181A  0E00               	movlw	0
 35685  00181C  0012               	return	
 35686  00181E                     
 35687                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 35688  00181E  0E3F               	movlw	63
 35689  001820  0012               	return	
 35690  001822                     
 35691                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35692  001822  0E00               	movlw	0
 35693  001824  0012               	return	
 35694  001826                     
 35695                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 35696  001826  0E10               	movlw	16
 35697  001828  0012               	return	
 35698  00182A                     
 35699                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35700  00182A  0E00               	movlw	0
 35701  00182C  0012               	return	
 35702  00182E                     
 35703                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35704  00182E  0E00               	movlw	0
 35705  001830  0012               	return	
 35706  001832                     
 35707                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35708  001832  0E00               	movlw	0
 35709  001834  0012               	return	
 35710  001836                     
 35711                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35712  001836  0E00               	movlw	0
 35713  001838  0012               	return	
 35714  00183A                     
 35715                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35716  00183A  0E00               	movlw	0
 35717  00183C  0012               	return	
 35718  00183E                     
 35719                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35720  00183E  0E01               	movlw	1
 35721  001840  0012               	return	
 35722  001842                     
 35723                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35724  001842  0E00               	movlw	0
 35725  001844  0012               	return	
 35726  001846                     
 35727                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35728  001846  0E22               	movlw	34
 35729  001848  0012               	return	
 35730  00184A                     
 35731                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35732  00184A  0E00               	movlw	0
 35733  00184C  0012               	return	
 35734  00184E                     
 35735                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35736                           
 35737                           ;fat16.c: 1160: case 0x2F:
 35738  00184E  0E00               	movlw	0
 35739  001850  0012               	return	
 35740  001852                     
 35741                           ;fat16.c: 1163: return 'F';
 35742  001852  0E46               	movlw	70
 35743  001854  0012               	return	
 35744  001856                     
 35745                           ;fat16.c: 1165: return 'A';
 35746  001856  0E41               	movlw	65
 35747  001858  0012               	return	
 35748  00185A                     
 35749                           ;fat16.c: 1167: return 'T';
 35750  00185A  0E54               	movlw	84
 35751  00185C  0012               	return	
 35752  00185E                     
 35753                           ;fat16.c: 1169: return '1';
 35754  00185E  0E31               	movlw	49
 35755  001860  0012               	return	
 35756  001862                     
 35757                           ;fat16.c: 1171: return '6';
 35758  001862  0E36               	movlw	54
 35759  001864  0012               	return	
 35760  001866                     
 35761                           ;fat16.c: 1173: return ' ';
 35762  001866  0E20               	movlw	32
 35763  001868  0012               	return	
 35764  00186A                     
 35765                           ;fat16.c: 1175: return ' ';
 35766  00186A  0E20               	movlw	32
 35767  00186C  0012               	return	
 35768  00186E                     
 35769                           ;fat16.c: 1177: return ' ';
 35770  00186E  0E20               	movlw	32
 35771  001870  0012               	return	
 35772  001872                     
 35773                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35774  001872  0E55               	movlw	85
 35775  001874  0012               	return	
 35776  001876                     
 35777                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35778  001876  0EAA               	movlw	170
 35779  001878  0012               	return	
 35780  00187A                     
 35781                           ;fat16.c: 1183: return 0X00;
 35782  00187A  0E00               	movlw	0
 35783                           
 35784                           ;fat16.c: 1184: }
 35785  00187C  0012               	return	
 35786  00187E                     l2192:
 35787  00187E  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35788  001882  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35789                           
 35790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35791                           ; Switch size 1, requested type "space"
 35792                           ; Number of cases is 2, Range of values is 0 to 1
 35793                           ; switch strategies available:
 35794                           ; Name         Instructions Cycles
 35795                           ; simple_byte            7     4 (average)
 35796                           ;	Chosen strategy is simple_byte
 35797  001886  5004               	movf	??__get_fbr+1,w,c
 35798  001888  0A00               	xorlw	0	; case 0
 35799  00188A  B4D8               	btfsc	status,2,c
 35800  00188C  D004               	goto	l15555
 35801  00188E  0A01               	xorlw	1	; case 1
 35802  001890  B4D8               	btfsc	status,2,c
 35803  001892  D08D               	goto	l15557
 35804  001894  D7F2               	goto	l2242
 35805  001896                     l15555:
 35806                           
 35807                           ; Switch size 1, requested type "space"
 35808                           ; Number of cases is 46, Range of values is 0 to 61
 35809                           ; switch strategies available:
 35810                           ; Name         Instructions Cycles
 35811                           ; simple_byte          139    70 (average)
 35812                           ;	Chosen strategy is simple_byte
 35813  001896  5003               	movf	??__get_fbr,w,c
 35814  001898  0A00               	xorlw	0	; case 0
 35815  00189A  B4D8               	btfsc	status,2,c
 35816  00189C  D75F               	goto	l2193
 35817  00189E  0A01               	xorlw	1	; case 1
 35818  0018A0  B4D8               	btfsc	status,2,c
 35819  0018A2  D75E               	goto	l2195
 35820  0018A4  0A03               	xorlw	3	; case 2
 35821  0018A6  B4D8               	btfsc	status,2,c
 35822  0018A8  D75D               	goto	l2196
 35823  0018AA  0A01               	xorlw	1	; case 3
 35824  0018AC  B4D8               	btfsc	status,2,c
 35825  0018AE  D75C               	goto	l2197
 35826  0018B0  0A07               	xorlw	7	; case 4
 35827  0018B2  B4D8               	btfsc	status,2,c
 35828  0018B4  D762               	goto	l2198
 35829  0018B6  0A01               	xorlw	1	; case 5
 35830  0018B8  B4D8               	btfsc	status,2,c
 35831  0018BA  D767               	goto	l2199
 35832  0018BC  0A03               	xorlw	3	; case 6
 35833  0018BE  B4D8               	btfsc	status,2,c
 35834  0018C0  D76C               	goto	l2200
 35835  0018C2  0A01               	xorlw	1	; case 7
 35836  0018C4  B4D8               	btfsc	status,2,c
 35837  0018C6  D771               	goto	l2201
 35838  0018C8  0A0F               	xorlw	15	; case 8
 35839  0018CA  B4D8               	btfsc	status,2,c
 35840  0018CC  D776               	goto	l2202
 35841  0018CE  0A01               	xorlw	1	; case 9
 35842  0018D0  B4D8               	btfsc	status,2,c
 35843  0018D2  D77B               	goto	l2203
 35844  0018D4  0A03               	xorlw	3	; case 10
 35845  0018D6  B4D8               	btfsc	status,2,c
 35846  0018D8  D780               	goto	l2204
 35847  0018DA  0A01               	xorlw	1	; case 11
 35848  0018DC  B4D8               	btfsc	status,2,c
 35849  0018DE  D785               	goto	l2205
 35850  0018E0  0A07               	xorlw	7	; case 12
 35851  0018E2  B4D8               	btfsc	status,2,c
 35852  0018E4  D784               	goto	l2206
 35853  0018E6  0A01               	xorlw	1	; case 13
 35854  0018E8  B4D8               	btfsc	status,2,c
 35855  0018EA  D783               	goto	l2207
 35856  0018EC  0A03               	xorlw	3	; case 14
 35857  0018EE  B4D8               	btfsc	status,2,c
 35858  0018F0  D782               	goto	l2208
 35859  0018F2  0A01               	xorlw	1	; case 15
 35860  0018F4  B4D8               	btfsc	status,2,c
 35861  0018F6  D781               	goto	l2209
 35862  0018F8  0A1F               	xorlw	31	; case 16
 35863  0018FA  B4D8               	btfsc	status,2,c
 35864  0018FC  D780               	goto	l2210
 35865  0018FE  0A01               	xorlw	1	; case 17
 35866  001900  B4D8               	btfsc	status,2,c
 35867  001902  D77F               	goto	l2211
 35868  001904  0A03               	xorlw	3	; case 18
 35869  001906  B4D8               	btfsc	status,2,c
 35870  001908  D77E               	goto	l2212
 35871  00190A  0A01               	xorlw	1	; case 19
 35872  00190C  B4D8               	btfsc	status,2,c
 35873  00190E  D77D               	goto	l2213
 35874  001910  0A07               	xorlw	7	; case 20
 35875  001912  B4D8               	btfsc	status,2,c
 35876  001914  D77C               	goto	l2214
 35877  001916  0A01               	xorlw	1	; case 21
 35878  001918  B4D8               	btfsc	status,2,c
 35879  00191A  D77B               	goto	l2215
 35880  00191C  0A03               	xorlw	3	; case 22
 35881  00191E  B4D8               	btfsc	status,2,c
 35882  001920  D77A               	goto	l2216
 35883  001922  0A01               	xorlw	1	; case 23
 35884  001924  B4D8               	btfsc	status,2,c
 35885  001926  D779               	goto	l2217
 35886  001928  0A0F               	xorlw	15	; case 24
 35887  00192A  B4D8               	btfsc	status,2,c
 35888  00192C  D778               	goto	l2218
 35889  00192E  0A01               	xorlw	1	; case 25
 35890  001930  B4D8               	btfsc	status,2,c
 35891  001932  D777               	goto	l2219
 35892  001934  0A03               	xorlw	3	; case 26
 35893  001936  B4D8               	btfsc	status,2,c
 35894  001938  D776               	goto	l2220
 35895  00193A  0A01               	xorlw	1	; case 27
 35896  00193C  B4D8               	btfsc	status,2,c
 35897  00193E  D775               	goto	l2221
 35898  001940  0A07               	xorlw	7	; case 28
 35899  001942  B4D8               	btfsc	status,2,c
 35900  001944  D774               	goto	l2222
 35901  001946  0A01               	xorlw	1	; case 29
 35902  001948  B4D8               	btfsc	status,2,c
 35903  00194A  D773               	goto	l2223
 35904  00194C  0A03               	xorlw	3	; case 30
 35905  00194E  B4D8               	btfsc	status,2,c
 35906  001950  D772               	goto	l2224
 35907  001952  0A01               	xorlw	1	; case 31
 35908  001954  B4D8               	btfsc	status,2,c
 35909  001956  D771               	goto	l2225
 35910  001958  0A37               	xorlw	55	; case 40
 35911  00195A  B4D8               	btfsc	status,2,c
 35912  00195C  D770               	goto	l2226
 35913  00195E  0A01               	xorlw	1	; case 41
 35914  001960  B4D8               	btfsc	status,2,c
 35915  001962  D76F               	goto	l2227
 35916  001964  0A05               	xorlw	5	; case 44
 35917  001966  B4D8               	btfsc	status,2,c
 35918  001968  D76E               	goto	l2228
 35919  00196A  0A01               	xorlw	1	; case 45
 35920  00196C  B4D8               	btfsc	status,2,c
 35921  00196E  D76D               	goto	l2229
 35922  001970  0A03               	xorlw	3	; case 46
 35923  001972  B4D8               	btfsc	status,2,c
 35924  001974  D76C               	goto	l2230
 35925  001976  0A01               	xorlw	1	; case 47
 35926  001978  B4D8               	btfsc	status,2,c
 35927  00197A  D769               	goto	l2230
 35928  00197C  0A19               	xorlw	25	; case 54
 35929  00197E  B4D8               	btfsc	status,2,c
 35930  001980  D768               	goto	l2232
 35931  001982  0A01               	xorlw	1	; case 55
 35932  001984  B4D8               	btfsc	status,2,c
 35933  001986  D767               	goto	l2233
 35934  001988  0A0F               	xorlw	15	; case 56
 35935  00198A  B4D8               	btfsc	status,2,c
 35936  00198C  D766               	goto	l2234
 35937  00198E  0A01               	xorlw	1	; case 57
 35938  001990  B4D8               	btfsc	status,2,c
 35939  001992  D765               	goto	l2235
 35940  001994  0A03               	xorlw	3	; case 58
 35941  001996  B4D8               	btfsc	status,2,c
 35942  001998  D764               	goto	l2236
 35943  00199A  0A01               	xorlw	1	; case 59
 35944  00199C  B4D8               	btfsc	status,2,c
 35945  00199E  D763               	goto	l2237
 35946  0019A0  0A07               	xorlw	7	; case 60
 35947  0019A2  B4D8               	btfsc	status,2,c
 35948  0019A4  D762               	goto	l2238
 35949  0019A6  0A01               	xorlw	1	; case 61
 35950  0019A8  B4D8               	btfsc	status,2,c
 35951  0019AA  D761               	goto	l2239
 35952  0019AC  D766               	goto	l2242
 35953  0019AE                     l15557:
 35954                           
 35955                           ; Switch size 1, requested type "space"
 35956                           ; Number of cases is 2, Range of values is 254 to 255
 35957                           ; switch strategies available:
 35958                           ; Name         Instructions Cycles
 35959                           ; simple_byte            7     4 (average)
 35960                           ;	Chosen strategy is simple_byte
 35961  0019AE  5003               	movf	??__get_fbr,w,c
 35962  0019B0  0AFE               	xorlw	254	; case 254
 35963  0019B2  B4D8               	btfsc	status,2,c
 35964  0019B4  D75E               	goto	l2240
 35965  0019B6  0A01               	xorlw	1	; case 255
 35966  0019B8  B4D8               	btfsc	status,2,c
 35967  0019BA  D75D               	goto	l2241
 35968  0019BC  D75E               	goto	l2242
 35969  0019BE                     __end_of__get_fbr:
 35970                           	opt stack 0
 35971                           tosu	equ	0xFFF
 35972                           tosh	equ	0xFFE
 35973                           tosl	equ	0xFFD
 35974                           pclath	equ	0xFFA
 35975                           tblptru	equ	0xFF8
 35976                           tblptrh	equ	0xFF7
 35977                           tblptrl	equ	0xFF6
 35978                           tablat	equ	0xFF5
 35979                           prodh	equ	0xFF4
 35980                           prodl	equ	0xFF3
 35981                           intcon	equ	0xFF2
 35982                           intcon3	equ	0xFF0
 35983                           indf0	equ	0xFEF
 35984                           postinc0	equ	0xFEE
 35985                           fsr0h	equ	0xFEA
 35986                           fsr0l	equ	0xFE9
 35987                           wreg	equ	0xFE8
 35988                           indf1	equ	0xFE7
 35989                           postdec1	equ	0xFE5
 35990                           plusw1	equ	0xFE3
 35991                           fsr1h	equ	0xFE2
 35992                           fsr1l	equ	0xFE1
 35993                           indf2	equ	0xFDF
 35994                           postinc2	equ	0xFDE
 35995                           postdec2	equ	0xFDD
 35996                           plusw2	equ	0xFDB
 35997                           fsr2h	equ	0xFDA
 35998                           fsr2l	equ	0xFD9
 35999                           status	equ	0xFD8
 36000                           
 36001 ;; *************** function __get_fat *****************
 36002 ;; Defined at:
 36003 ;;		line 1187 in file "fat16.c"
 36004 ;; Parameters:    Size  Location     Type
 36005 ;;  idx             2    0[COMRAM] unsigned int 
 36006 ;; Auto vars:     Size  Location     Type
 36007 ;;		None
 36008 ;; Return value:  Size  Location     Type
 36009 ;;                  1    wreg      unsigned char 
 36010 ;; Registers used:
 36011 ;;		wreg, status,2, status,0
 36012 ;; Tracked objects:
 36013 ;;		On entry : 0/0
 36014 ;;		On exit  : 0/0
 36015 ;;		Unchanged: 0/0
 36016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36021 ;;Total ram usage:        4 bytes
 36022 ;; Hardware stack levels used:    1
 36023 ;; This function calls:
 36024 ;;		Nothing
 36025 ;; This function is called by:
 36026 ;;		_fat_format
 36027 ;; This function uses a non-reentrant model
 36028 ;;
 36029                           
 36030                           	psect	text186
 36031  00677C                     __ptext186:
 36032                           	opt stack 0
 36033  00677C                     __get_fat:
 36034                           	opt stack 27
 36035                           
 36036                           ;fat16.c: 1189: switch (idx)
 36037                           
 36038                           ;incstack = 0
 36039  00677C  D00E               	goto	l2246
 36040  00677E                     
 36041                           ;fat16.c: 1193: return 0xF8;
 36042  00677E  0EF8               	movlw	248
 36043  006780  0012               	return	
 36044  006782                     
 36045                           ;fat16.c: 1195: return 0xFF;
 36046  006782  0EFF               	movlw	255
 36047  006784  0012               	return	
 36048  006786                     
 36049                           ;fat16.c: 1197: return 0xFF;
 36050  006786  0EFF               	movlw	255
 36051  006788  0012               	return	
 36052  00678A                     
 36053                           ;fat16.c: 1199: return 0xFF;
 36054  00678A  0EFF               	movlw	255
 36055  00678C  0012               	return	
 36056  00678E                     
 36057                           ;fat16.c: 1202: return 0xFF;
 36058  00678E  0EFF               	movlw	255
 36059  006790  0012               	return	
 36060  006792                     
 36061                           ;fat16.c: 1204: return 0xFF;
 36062  006792  0EFF               	movlw	255
 36063  006794  0012               	return	
 36064  006796                     
 36065                           ;fat16.c: 1206: return 0X00;
 36066  006796  0E00               	movlw	0
 36067                           
 36068                           ;fat16.c: 1207: }
 36069  006798  0012               	return	
 36070  00679A                     l2246:
 36071  00679A  C001  F003         	movff	__get_fat@idx,??__get_fat
 36072  00679E  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 36073                           
 36074                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36075                           ; Switch size 1, requested type "space"
 36076                           ; Number of cases is 1, Range of values is 0 to 0
 36077                           ; switch strategies available:
 36078                           ; Name         Instructions Cycles
 36079                           ; simple_byte            4     3 (average)
 36080                           ;	Chosen strategy is simple_byte
 36081  0067A2  5004               	movf	??__get_fat+1,w,c
 36082  0067A4  0A00               	xorlw	0	; case 0
 36083  0067A6  A4D8               	btfss	status,2,c
 36084  0067A8  D7F6               	goto	l2254
 36085                           
 36086                           ; Switch size 1, requested type "space"
 36087                           ; Number of cases is 6, Range of values is 0 to 5
 36088                           ; switch strategies available:
 36089                           ; Name         Instructions Cycles
 36090                           ; simple_byte           19    10 (average)
 36091                           ;	Chosen strategy is simple_byte
 36092  0067AA  5003               	movf	??__get_fat,w,c
 36093  0067AC  0A00               	xorlw	0	; case 0
 36094  0067AE  B4D8               	btfsc	status,2,c
 36095  0067B0  D7E6               	goto	l2247
 36096  0067B2  0A01               	xorlw	1	; case 1
 36097  0067B4  B4D8               	btfsc	status,2,c
 36098  0067B6  D7E5               	goto	l2249
 36099  0067B8  0A03               	xorlw	3	; case 2
 36100  0067BA  B4D8               	btfsc	status,2,c
 36101  0067BC  D7E4               	goto	l2250
 36102  0067BE  0A01               	xorlw	1	; case 3
 36103  0067C0  B4D8               	btfsc	status,2,c
 36104  0067C2  D7E3               	goto	l2251
 36105  0067C4  0A07               	xorlw	7	; case 4
 36106  0067C6  B4D8               	btfsc	status,2,c
 36107  0067C8  D7E2               	goto	l2252
 36108  0067CA  0A01               	xorlw	1	; case 5
 36109  0067CC  B4D8               	btfsc	status,2,c
 36110  0067CE  D7E1               	goto	l2253
 36111  0067D0  D7E2               	goto	l2254
 36112  0067D2                     __end_of__get_fat:
 36113                           	opt stack 0
 36114                           tosu	equ	0xFFF
 36115                           tosh	equ	0xFFE
 36116                           tosl	equ	0xFFD
 36117                           pclath	equ	0xFFA
 36118                           tblptru	equ	0xFF8
 36119                           tblptrh	equ	0xFF7
 36120                           tblptrl	equ	0xFF6
 36121                           tablat	equ	0xFF5
 36122                           prodh	equ	0xFF4
 36123                           prodl	equ	0xFF3
 36124                           intcon	equ	0xFF2
 36125                           intcon3	equ	0xFF0
 36126                           indf0	equ	0xFEF
 36127                           postinc0	equ	0xFEE
 36128                           fsr0h	equ	0xFEA
 36129                           fsr0l	equ	0xFE9
 36130                           wreg	equ	0xFE8
 36131                           indf1	equ	0xFE7
 36132                           postdec1	equ	0xFE5
 36133                           plusw1	equ	0xFE3
 36134                           fsr1h	equ	0xFE2
 36135                           fsr1l	equ	0xFE1
 36136                           indf2	equ	0xFDF
 36137                           postinc2	equ	0xFDE
 36138                           postdec2	equ	0xFDD
 36139                           plusw2	equ	0xFDB
 36140                           fsr2h	equ	0xFDA
 36141                           fsr2l	equ	0xFD9
 36142                           status	equ	0xFD8
 36143                           
 36144 ;; *************** function __get_data *****************
 36145 ;; Defined at:
 36146 ;;		line 1283 in file "fat16.c"
 36147 ;; Parameters:    Size  Location     Type
 36148 ;;  idx             2    0[COMRAM] unsigned int 
 36149 ;; Auto vars:     Size  Location     Type
 36150 ;;		None
 36151 ;; Return value:  Size  Location     Type
 36152 ;;                  1    wreg      unsigned char 
 36153 ;; Registers used:
 36154 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 36155 ;; Tracked objects:
 36156 ;;		On entry : 0/0
 36157 ;;		On exit  : 0/0
 36158 ;;		Unchanged: 0/0
 36159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36164 ;;Total ram usage:        2 bytes
 36165 ;; Hardware stack levels used:    1
 36166 ;; This function calls:
 36167 ;;		Nothing
 36168 ;; This function is called by:
 36169 ;;		_fat_format
 36170 ;; This function uses a non-reentrant model
 36171 ;;
 36172                           
 36173                           	psect	text187
 36174  007018                     __ptext187:
 36175                           	opt stack 0
 36176  007018                     __get_data:
 36177                           	opt stack 27
 36178                           
 36179                           ;fat16.c: 1285: if(idx < 12)
 36180                           
 36181                           ;incstack = 0
 36182  007018  5002               	movf	__get_data@idx+1,w,c
 36183  00701A  E110               	bnz	l11759
 36184  00701C  0E0C               	movlw	12
 36185  00701E  5C01               	subwf	__get_data@idx,w,c
 36186  007020  B0D8               	btfsc	status,0,c
 36187  007022  D00C               	goto	l2290
 36188                           
 36189                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 36190  007024  0ED0               	movlw	low STR_12
 36191  007026  2401               	addwf	__get_data@idx,w,c
 36192  007028  6EF6               	movwf	tblptrl,c
 36193  00702A  0E8F               	movlw	high STR_12
 36194  00702C  2002               	addwfc	__get_data@idx+1,w,c
 36195  00702E  6EF7               	movwf	tblptrh,c
 36196  007030                     	if	1	;There are 3 active tblptr bytes
 36197  007030  6AF8               	clrf	tblptru,c
 36198  007032  0E00               	movlw	low (__mediumconst shr (0+16))
 36199  007034  22F8               	addwfc	tblptru,f,c
 36200  007036                     	endif
 36201  007036  0008               	tblrd		*
 36202  007038  50F5               	movf	tablat,w,c
 36203  00703A  0012               	return	
 36204  00703C                     l2290:
 36205  00703C                     l11759:
 36206                           
 36207                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 36208  00703C  0E00               	movlw	0
 36209  00703E  0012               	return	
 36210  007040                     __end_of__get_data:
 36211                           	opt stack 0
 36212                           tosu	equ	0xFFF
 36213                           tosh	equ	0xFFE
 36214                           tosl	equ	0xFFD
 36215                           pclath	equ	0xFFA
 36216                           tblptru	equ	0xFF8
 36217                           tblptrh	equ	0xFF7
 36218                           tblptrl	equ	0xFF6
 36219                           tablat	equ	0xFF5
 36220                           prodh	equ	0xFF4
 36221                           prodl	equ	0xFF3
 36222                           intcon	equ	0xFF2
 36223                           intcon3	equ	0xFF0
 36224                           indf0	equ	0xFEF
 36225                           postinc0	equ	0xFEE
 36226                           fsr0h	equ	0xFEA
 36227                           fsr0l	equ	0xFE9
 36228                           wreg	equ	0xFE8
 36229                           indf1	equ	0xFE7
 36230                           postdec1	equ	0xFE5
 36231                           plusw1	equ	0xFE3
 36232                           fsr1h	equ	0xFE2
 36233                           fsr1l	equ	0xFE1
 36234                           indf2	equ	0xFDF
 36235                           postinc2	equ	0xFDE
 36236                           postdec2	equ	0xFDD
 36237                           plusw2	equ	0xFDB
 36238                           fsr2h	equ	0xFDA
 36239                           fsr2l	equ	0xFD9
 36240                           status	equ	0xFD8
 36241                           
 36242 ;; *************** function _USBTransferOnePacket *****************
 36243 ;; Defined at:
 36244 ;;		line 995 in file "usb_device.c"
 36245 ;; Parameters:    Size  Location     Type
 36246 ;;  ep              1    wreg     unsigned char 
 36247 ;;  dir             1    0[COMRAM] unsigned char 
 36248 ;;  data            2    1[COMRAM] PTR unsigned char 
 36249 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 36250 ;;		 -> msd_cbw(31), NULL(0), 
 36251 ;;  len             1    3[COMRAM] unsigned char 
 36252 ;; Auto vars:     Size  Location     Type
 36253 ;;  ep              1    8[COMRAM] unsigned char 
 36254 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 36255 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 36256 ;; Return value:  Size  Location     Type
 36257 ;;                  2    0[COMRAM] PTR void 
 36258 ;; Registers used:
 36259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36260 ;; Tracked objects:
 36261 ;;		On entry : 0/0
 36262 ;;		On exit  : 0/0
 36263 ;;		Unchanged: 0/0
 36264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36266 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36268 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36269 ;;Total ram usage:       11 bytes
 36270 ;; Hardware stack levels used:    1
 36271 ;; This function calls:
 36272 ;;		Nothing
 36273 ;; This function is called by:
 36274 ;;		_USBMSDInit
 36275 ;;		_USBCheckMSDRequest
 36276 ;;		_MSDTasks
 36277 ;;		_MSDProcessCommandMediaPresent
 36278 ;;		_MSDReadHandler
 36279 ;;		_MSDWriteHandler
 36280 ;;		_MSDTransferTerminated
 36281 ;;		_APP_DeviceCustomHIDInitialize
 36282 ;;		_APP_DeviceCustomHIDTasks
 36283 ;; This function uses a non-reentrant model
 36284 ;;
 36285                           
 36286                           	psect	text188
 36287  00411E                     __ptext188:
 36288                           	opt stack 0
 36289  00411E                     _USBTransferOnePacket:
 36290                           	opt stack 27
 36291                           
 36292                           ;incstack = 0
 36293                           ;USBTransferOnePacket@ep stored from wreg
 36294  00411E  6E09               	movwf	USBTransferOnePacket@ep,c
 36295                           
 36296                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 36297  004120  5001               	movf	USBTransferOnePacket@dir,w,c
 36298  004122  B4D8               	btfsc	status,2,c
 36299  004124  D007               	goto	l183
 36300                           
 36301                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 36302  004126  5009               	movf	USBTransferOnePacket@ep,w,c
 36303  004128  0D02               	mullw	2
 36304  00412A  0E74               	movlw	low _pBDTEntryIn
 36305  00412C  24F3               	addwf	prodl,w,c
 36306  00412E  6ED9               	movwf	fsr2l,c
 36307  004130  0E00               	movlw	high _pBDTEntryIn
 36308  004132  D006               	goto	L43
 36309  004134                     l183:
 36310                           
 36311                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 36312  004134  5009               	movf	USBTransferOnePacket@ep,w,c
 36313  004136  0D02               	mullw	2
 36314  004138  0E39               	movlw	low _pBDTEntryOut
 36315  00413A  24F3               	addwf	prodl,w,c
 36316  00413C  6ED9               	movwf	fsr2l,c
 36317  00413E  0E01               	movlw	high _pBDTEntryOut
 36318  004140                     L43:
 36319  004140  20F4               	addwfc	prodh,w,c
 36320  004142  6EDA               	movwf	fsr2h,c
 36321  004144  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 36322  004148  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 36323                           
 36324                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 36325  00414C  500A               	movf	USBTransferOnePacket@handle,w,c
 36326  00414E  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 36327  004150  A4D8               	btfss	status,2,c
 36328  004152  D005               	goto	l185
 36329                           
 36330                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 36331  004154  0E00               	movlw	0
 36332  004156  6E01               	movwf	?_USBTransferOnePacket,c
 36333  004158  0E00               	movlw	0
 36334  00415A  6E02               	movwf	?_USBTransferOnePacket+1,c
 36335  00415C  0012               	return	
 36336  00415E                     l185:
 36337                           
 36338                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 36339  00415E  EE20 F002          	lfsr	2,2
 36340  004162  500A               	movf	USBTransferOnePacket@handle,w,c
 36341  004164  26D9               	addwf	fsr2l,f,c
 36342  004166  500B               	movf	USBTransferOnePacket@handle+1,w,c
 36343  004168  22DA               	addwfc	fsr2h,f,c
 36344  00416A  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 36345  00416E  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 36346                           
 36347                           ;usb_device.c: 1030: handle->CNT = len;
 36348  004172  EE20 F001          	lfsr	2,1
 36349  004176  500A               	movf	USBTransferOnePacket@handle,w,c
 36350  004178  26D9               	addwf	fsr2l,f,c
 36351  00417A  500B               	movf	USBTransferOnePacket@handle+1,w,c
 36352  00417C  22DA               	addwfc	fsr2h,f,c
 36353  00417E  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 36354                           
 36355                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 36356  004182  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36357  004186  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36358  00418A  0E40               	movlw	64
 36359  00418C  16DF               	andwf	indf2,f,c
 36360                           
 36361                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 36362  00418E  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36363  004192  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36364  004196  0E00               	movlw	0
 36365  004198  86DB               	bsf	plusw2,3,c
 36366                           
 36367                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 36368  00419A  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 36369  00419E  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 36370  0041A2  0E00               	movlw	0
 36371  0041A4  8EDB               	bsf	plusw2,7,c
 36372                           
 36373                           ;usb_device.c: 1036: if(dir != 0)
 36374  0041A6  5001               	movf	USBTransferOnePacket@dir,w,c
 36375  0041A8  B4D8               	btfsc	status,2,c
 36376  0041AA  D018               	goto	l187
 36377                           
 36378                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 36379  0041AC  5009               	movf	USBTransferOnePacket@ep,w,c
 36380  0041AE  0D02               	mullw	2
 36381  0041B0  0E74               	movlw	low _pBDTEntryIn
 36382  0041B2  24F3               	addwf	prodl,w,c
 36383  0041B4  6ED9               	movwf	fsr2l,c
 36384  0041B6  0E00               	movlw	high _pBDTEntryIn
 36385  0041B8  20F4               	addwfc	prodh,w,c
 36386  0041BA  6EDA               	movwf	fsr2h,c
 36387  0041BC  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 36388  0041C0  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 36389  0041C4  0E04               	movlw	4
 36390  0041C6  1805               	xorwf	??_USBTransferOnePacket,w,c
 36391  0041C8  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 36392  0041CA  5006               	movf	??_USBTransferOnePacket+1,w,c
 36393  0041CC  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 36394  0041CE  5009               	movf	USBTransferOnePacket@ep,w,c
 36395  0041D0  0D02               	mullw	2
 36396  0041D2  0E74               	movlw	low _pBDTEntryIn
 36397  0041D4  24F3               	addwf	prodl,w,c
 36398  0041D6  6ED9               	movwf	fsr2l,c
 36399  0041D8  0E00               	movlw	high _pBDTEntryIn
 36400  0041DA  D017               	goto	L44
 36401  0041DC                     l187:
 36402                           
 36403                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 36404  0041DC  5009               	movf	USBTransferOnePacket@ep,w,c
 36405  0041DE  0D02               	mullw	2
 36406  0041E0  0E39               	movlw	low _pBDTEntryOut
 36407  0041E2  24F3               	addwf	prodl,w,c
 36408  0041E4  6ED9               	movwf	fsr2l,c
 36409  0041E6  0E01               	movlw	high _pBDTEntryOut
 36410  0041E8  20F4               	addwfc	prodh,w,c
 36411  0041EA  6EDA               	movwf	fsr2h,c
 36412  0041EC  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 36413  0041F0  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 36414  0041F4  0E04               	movlw	4
 36415  0041F6  1805               	xorwf	??_USBTransferOnePacket,w,c
 36416  0041F8  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 36417  0041FA  5006               	movf	??_USBTransferOnePacket+1,w,c
 36418  0041FC  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 36419  0041FE  5009               	movf	USBTransferOnePacket@ep,w,c
 36420  004200  0D02               	mullw	2
 36421  004202  0E39               	movlw	low _pBDTEntryOut
 36422  004204  24F3               	addwf	prodl,w,c
 36423  004206  6ED9               	movwf	fsr2l,c
 36424  004208  0E01               	movlw	high _pBDTEntryOut
 36425  00420A                     L44:
 36426  00420A  20F4               	addwfc	prodh,w,c
 36427  00420C  6EDA               	movwf	fsr2h,c
 36428  00420E  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 36429  004212  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 36430                           
 36431                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 36432  004216  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 36433  00421A  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 36434  00421E  0012               	return	
 36435  004220                     __end_of_USBTransferOnePacket:
 36436                           	opt stack 0
 36437                           tosu	equ	0xFFF
 36438                           tosh	equ	0xFFE
 36439                           tosl	equ	0xFFD
 36440                           pclath	equ	0xFFA
 36441                           tblptru	equ	0xFF8
 36442                           tblptrh	equ	0xFF7
 36443                           tblptrl	equ	0xFF6
 36444                           tablat	equ	0xFF5
 36445                           prodh	equ	0xFF4
 36446                           prodl	equ	0xFF3
 36447                           intcon	equ	0xFF2
 36448                           intcon3	equ	0xFF0
 36449                           indf0	equ	0xFEF
 36450                           postinc0	equ	0xFEE
 36451                           fsr0h	equ	0xFEA
 36452                           fsr0l	equ	0xFE9
 36453                           wreg	equ	0xFE8
 36454                           indf1	equ	0xFE7
 36455                           postdec1	equ	0xFE5
 36456                           plusw1	equ	0xFE3
 36457                           fsr1h	equ	0xFE2
 36458                           fsr1l	equ	0xFE1
 36459                           indf2	equ	0xFDF
 36460                           postinc2	equ	0xFDE
 36461                           postdec2	equ	0xFDD
 36462                           plusw2	equ	0xFDB
 36463                           fsr2h	equ	0xFDA
 36464                           fsr2l	equ	0xFD9
 36465                           status	equ	0xFD8
 36466                           tosu	equ	0xFFF
 36467                           tosh	equ	0xFFE
 36468                           tosl	equ	0xFFD
 36469                           pclath	equ	0xFFA
 36470                           tblptru	equ	0xFF8
 36471                           tblptrh	equ	0xFF7
 36472                           tblptrl	equ	0xFF6
 36473                           tablat	equ	0xFF5
 36474                           prodh	equ	0xFF4
 36475                           prodl	equ	0xFF3
 36476                           intcon	equ	0xFF2
 36477                           intcon3	equ	0xFF0
 36478                           indf0	equ	0xFEF
 36479                           postinc0	equ	0xFEE
 36480                           fsr0h	equ	0xFEA
 36481                           fsr0l	equ	0xFE9
 36482                           wreg	equ	0xFE8
 36483                           indf1	equ	0xFE7
 36484                           postdec1	equ	0xFE5
 36485                           plusw1	equ	0xFE3
 36486                           fsr1h	equ	0xFE2
 36487                           fsr1l	equ	0xFE1
 36488                           indf2	equ	0xFDF
 36489                           postinc2	equ	0xFDE
 36490                           postdec2	equ	0xFDD
 36491                           plusw2	equ	0xFDB
 36492                           fsr2h	equ	0xFDA
 36493                           fsr2l	equ	0xFD9
 36494                           status	equ	0xFD8
 36495                           
 36496                           	psect	text189
 36497  000000                     __ptext189:
 36498                           	opt stack 0
 36499                           tosu	equ	0xFFF
 36500                           tosh	equ	0xFFE
 36501                           tosl	equ	0xFFD
 36502                           pclath	equ	0xFFA
 36503                           tblptru	equ	0xFF8
 36504                           tblptrh	equ	0xFF7
 36505                           tblptrl	equ	0xFF6
 36506                           tablat	equ	0xFF5
 36507                           prodh	equ	0xFF4
 36508                           prodl	equ	0xFF3
 36509                           intcon	equ	0xFF2
 36510                           intcon3	equ	0xFF0
 36511                           indf0	equ	0xFEF
 36512                           postinc0	equ	0xFEE
 36513                           fsr0h	equ	0xFEA
 36514                           fsr0l	equ	0xFE9
 36515                           wreg	equ	0xFE8
 36516                           indf1	equ	0xFE7
 36517                           postdec1	equ	0xFE5
 36518                           plusw1	equ	0xFE3
 36519                           fsr1h	equ	0xFE2
 36520                           fsr1l	equ	0xFE1
 36521                           indf2	equ	0xFDF
 36522                           postinc2	equ	0xFDE
 36523                           postdec2	equ	0xFDD
 36524                           plusw2	equ	0xFDB
 36525                           fsr2h	equ	0xFDA
 36526                           fsr2l	equ	0xFD9
 36527                           status	equ	0xFD8
 36528                           
 36529                           	psect	rparam
 36530  0000                     tosu	equ	0xFFF
 36531                           tosh	equ	0xFFE
 36532                           tosl	equ	0xFFD
 36533                           pclath	equ	0xFFA
 36534                           tblptru	equ	0xFF8
 36535                           tblptrh	equ	0xFF7
 36536                           tblptrl	equ	0xFF6
 36537                           tablat	equ	0xFF5
 36538                           prodh	equ	0xFF4
 36539                           prodl	equ	0xFF3
 36540                           intcon	equ	0xFF2
 36541                           intcon3	equ	0xFF0
 36542                           indf0	equ	0xFEF
 36543                           postinc0	equ	0xFEE
 36544                           fsr0h	equ	0xFEA
 36545                           fsr0l	equ	0xFE9
 36546                           wreg	equ	0xFE8
 36547                           indf1	equ	0xFE7
 36548                           postdec1	equ	0xFE5
 36549                           plusw1	equ	0xFE3
 36550                           fsr1h	equ	0xFE2
 36551                           fsr1l	equ	0xFE1
 36552                           indf2	equ	0xFDF
 36553                           postinc2	equ	0xFDE
 36554                           postdec2	equ	0xFDD
 36555                           plusw2	equ	0xFDB
 36556                           fsr2h	equ	0xFDA
 36557                           fsr2l	equ	0xFD9
 36558                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    939
    Data        47
    BSS         2033
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     73     159
    BANK1           256      0     253
    BANK2           256      0     204
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 9
		 -> bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), ReceivedDataBuffer(BANK2[64]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_format_drive@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_format_drive@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(COMRAM[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK2[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK2[64]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), fat_resize_file@root(COMRAM[32]), 
		 -> fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(COMRAM[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(COMRAM[2]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 4
		 -> bootloader_extension(CODE[4]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 9
		 -> bootloader_filename(CODE[9]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(COMRAM[32]), 
		 -> fat_resize_file@root(COMRAM[32]), fat_read_from_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), buffer(BIGRAMll[512]), 
		 -> msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> fat_resize_file@root(COMRAM[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(COMRAM[32]), _delete_root@deleted_value(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_oe(CODE[8]), bit_pattern_ue(CODE[8]), bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), 
		 -> bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(COMRAM[11]), _ic2_display_set_cgram_address@data_array(COMRAM[3]), _ic2_display_set_ddram_address@data_array(COMRAM[2]), i2c_display_init@init_sequence(COMRAM[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(COMRAM[32]), _flash_set_page_size@command(COMRAM[4]), 
		 -> ToSendDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_bootloader_run
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    _system_minimal_init->_system_delay_ms
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->_internalFlash_addressFromPage
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->_internalFlash_addressFromPage
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    __bootloader_find_file->_fat_get_file_size
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_status
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_prepare->__display_checked
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u16
    __display_itoa_u32->___lldiv
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    __parse_command_long->__parse_format_drive
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  617619
                                             92 COMRAM     2     2      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   58195
                        __ui_encoder
                       _display_init
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0    6488
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4550
                                             14 COMRAM    19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    2009
                                             10 COMRAM     4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1938
                                             10 COMRAM    10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   51707
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      46
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32113
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6638
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138279
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62249
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   53713
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             16    14      2     830
                                              8 COMRAM    14    12      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3437
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                             10     8      2     714
                                              8 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     670
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     402
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35431
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 COMRAM    10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7929
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22251
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7123
                                             39 COMRAM     8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7483
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              8     2      6     668
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5952
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2810
                                             17 COMRAM     7     5      2
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106628
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106628
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101464
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51483
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49725
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24963
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13866
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 COMRAM     4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   83106
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4    7749
                                             22 COMRAM     5     1      4
__fill_buffer_get_bootloader_details
           __fill_buffer_get_display
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    3155
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _flash_is_busy                                        1     1      0    2714
                                             19 COMRAM     1     1      0
                     __flash_is_busy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   72044
                                             53 COMRAM    11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   51729
                                             35 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   48519
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3234
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     824
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2410
                                             13 COMRAM     3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_ddram_address                       3     3      0    1984
                                             10 COMRAM     3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   45285
                                             32 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                 __display_suspended
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    4369
                                             28 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_suspended                                   1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0    4530
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    4505
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0    8969
                                             21 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   13266
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    8     2      6    8561
                                             13 COMRAM     8     2      6
                            ___lldiv
                            ___llmod
                             ___wmul
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7141
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    4437
                                             28 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    4439
                                             28 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    4     0      4    4143
                                             24 COMRAM     4     0      4
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    2121
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3142
                                             10 COMRAM     9     6      3
                   __i2c_eeprom_busy
                         __i2c_write
 ---------------------------------------------------------------------------------
 (5) __i2c_write                                           5     2      3    1914
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 COMRAM     1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (6) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (6) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (6) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19573
                                             46 COMRAM     7     1      6
                __parse_format_drive
 ---------------------------------------------------------------------------------
 (4) __parse_format_drive                                  8     2      6   19194
                                             38 COMRAM     8     2      6
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_eeprom_busy
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 ___wmul
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
             __display_suspended
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   _utoa
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_ddram_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
         _ui_get_status
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _i2c_eeprom_writeByte
       __i2c_eeprom_busy
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
         _internalFlash_addressFromPage
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         ___wmul
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
     __display_suspended
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _jump_to_main_program
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _ui_init
   _system_minimal_init
     _i2c_init
     _system_delay_ms
   _system_minimal_init_undo
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               ___wmul
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
           __display_suspended
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 _utoa
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_ddram_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
         _ui_get_status
       _system_delay_ms
     _display_init
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CC       9       79.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FD       7       98.8%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C7      31        0.0%
DATA                 0      0     8C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 25 23:21:31 2019

                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E6D  
                                 __system_timer0_init 718C  
                                                  _os 0060  
                                       _USBDeviceInit 34FA  
                                 ___wmul@multiplicand 0003  
                                  _USBCheckHIDRequest 4402  
                         ??__data_sector_from_cluster 0003  
                                    __i2c_eeprom_busy 70FE  
                __bootloader_verify_file@return_value 00EC  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 000B  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 4DAA  
                                                 l210 57E2  
                                                 l220 4248  
                                                 l141 3568  
                                                 l214 5914  
                                                 l310 5198  
                                                 l150 2E3E  
                                                 l143 35A4  
                                                 l303 6DD8  
                                                 l151 2E36  
                                                 l320 6470  
                                                 l208 57C8  
                                                 l224 42CA  
                                                 l304 6DD6  
                                                 l152 2E34  
                                                 l241 4BC4  
                                                 l233 4B18  
                                                 l161 2EB6  
                                                 l242 4B8C  
                                                 l330 4D54  
                                                 l322 64BA  
                                                 l235 4B22  
                                                 l331 4D1A  
                                                 l251 3A96  
                                                 l411 4450  
                                                 l219 42A0  
                                                 l139 3540  
                                                 l171 2F44  
                                                 l163 2ECC  
                                                 l155 2E58  
                                                 l252 3A7C  
                                                 l412 441E  
                                                 l260 46F0  
                                                 l164 2ED8  
                                                 l156 2E68  
                                                 l237 4B84  
                                                 l333 4D3A  
                                                 l309 519E  
                                                 l173 2F68  
                                                 l165 2F00  
                                                 l157 2E70  
                                                 l238 4B4C  
                                                 l422 4472  
                                                 l414 4462  
                         __end_of_USBStdGetDscHandler 3782  
                                                 l262 4764  
                                                 l350 4360  
                                                 l166 2F0A  
                                                 l158 2E84  
                                                 l183 4134  
                                                 l191 3D68  
                                                 l423 448A  
                                                 l415 443C  
                                                 l271 366E  
                                                 l343 43BE  
                                                 l175 2F84  
                                                 l159 2E90  
                                                 l328 4CD2  
                                                 l248 3A20  
                                                 l424 4496  
                                                 l360 14FA  
                                                 l272 36FC  
                                                 l352 4366  
                                                 l344 4330  
                                                 l168 2F1C  
                                                 l185 415E  
                                                 l329 4CD6  
                                                 l249 39FE  
                                                 l521 3F06  
                                                 l425 44AE  
                                                 l361 1500  
                                                 l281 522E  
                                                 l353 4384  
                                                 l610 6372  
                                                 l178 6D0E  
                                                 l418 44BA  
                                                 l530 4E3A  
                                                 l274 3704  
                                                 l282 51BC  
                                                 l354 43A0  
                                                 l346 433A  
                                                 l187 41DC  
                                                 l603 637A  
                                                 l179 6D1C  
                                                 l371 1620  
                                                 l363 156C  
                                                 l275 375A  
                                                 l347 4340  
                                                 l620 04BE  
                                                 l604 633E  
                                                 l372 163C  
                                                 l268 376A  
                                                 l348 4346  
                                                 l621 04C8  
                                                 l381 1734  
                                                 l365 15B4  
                                                 l277 3762  
                                                 l269 365A  
                                                 l285 5244  
                                                 l349 435A  
                                                 l710 44F4  
                                                 l702 1466  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 635A  
                                                 l518 3F0E  
                                                 l534 4EA0  
                                                 l374 16A2  
                                                 l286 51CE  
                                                 l703 147E  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 3E82  
                                                 l375 16AE  
                                                 l367 15D6  
                                                 l287 51D4  
                                                 l295 6BB4  
                                                 l712 450A  
                                                 l704 1496  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6366  
                                                 l800 5C4A  
                                                 l376 1728  
                                                 l288 51F2  
                                                 l296 6BB2  
                                                 l721 4596  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 636C  
                                                 l561 1B0C  
                                                 l529 4ED6  
                                                 l369 1656  
                                                 l722 4580  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1BF8  
                                                 l562 1AF6  
                                                 l546 4EA8  
                                                 l810 5C3C  
                                                 l715 453A  
                                                 l651 07CC  
                                                 l571 1B28  
                                                 l563 1ACA  
                                                 l555 19C8  
                                                 l379 16E2  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1AD2  
                                                 l804 5C18  
                                                 l661 586A  
                                                 l741 3F42  
                                                 l733 45A8  
                                                 l645 0784  
                                                 l573 1B3A  
                                                 l805 5C20  
                                                 l750 3F76  
                                                 l718 4546  
                                                 l670 2474  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1AEA  
                                                 l806 5C28  
                                                 l751 3F82  
                                                 l719 4560  
                                                 l671 247E  
                                                 l575 1B5C  
                                                 l559 19EA  
                                                 l903 689A  
                                                 l752 3F94  
                                                 l680 25AC  
                                                 l672 2492  
                                                 l648 07CE  
                                                 l592 3B56  
                                                 l576 1B64  
                                                 l808 5C32  
                                                 l753 3FA0  
                                                 l737 45B8  
                                                 l665 25C2  
                                                 l649 07A8  
                                                 l577 1B88  
                                                 l905 68A6  
                                                 l754 3FB2  
                                                 l674 24DC  
                                                 l666 2414  
                                                 l690 12C6  
                                                 l586 1BDA  
                                                 l659 5854  
                                                 l747 3FF4  
                                                 l755 3FE8  
                                                 l675 2504  
                                                 l691 12D2  
                                                 l748 3F6E  
                                                 l668 25E6  
                                                 l676 2534  
                                                 l684 14AC  
                                                 l692 12F2  
                                                 l596 3BEE  
                                                 l764 6698  
                                                 _BDT 000D00  
                                                 l677 2546  
                                                 l669 2468  
                                                 l693 133C  
                                                 l685 1220  
                                                 l597 3BE8  
                                                 l589 1BE2  
                                                 l942 56A2  
                                                 l678 254C  
                                                 l694 1316  
                                                 l870 4998  
                                                 l679 2560  
                                                 l687 14D0  
                                                 l695 1382  
                                                 l599 3BF2  
                                                 l767 66CE  
                                                 l871 49A0  
                                                 l863 495A  
                                                 l936 5642  
                                                 l696 137A  
                                                 l688 12C0  
                                                 l872 49A8  
                                                 l864 4968  
                                                 l873 49B0  
                                                 l698 1396  
                                                 l882 64E6  
                                                 l866 49D2  
                                                 l874 49B8  
                                                 l699 13FE  
                                                 l875 49C2  
                                                 l867 4988  
                                                 l868 4A16  
                                                 l885 650C  
                                                 l869 4990  
                                                 l886 6518  
                                                 l896 68B8  
                                                 l897 687E  
                                                 l978 734E  
                                                 l899 6888  
                                                 _LBA 0082  
                                       ?_display_init 0001  
                                                 _LUN 01E9  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                            __size_of__display_failed 02F2  
                                         _start_line1 8D96  
                                         _start_line2 8E4C  
                                         _start_line3 8E7F  
                                         _start_line4 8DD6  
                                  api_prepare@command 001B  
                                          _USBSuspend 6EE4  
                                  _internalFlash_read 6DE4  
                              __end_of_display_update 61A6  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 2E16  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 005F  
                            __size_of__display_verify 0128  
                           __size_of_i2c_display_init 0048  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 007A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 56DA  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 0017  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1041 5362  
                                                l1050 537E  
                                                l1043 5336  
                                                l1140 73E6  
                                                l1052 5392  
                                                l1053 539C  
                                                l1045 534A  
                                                l1134 7434  
                                                l1054 53A4  
                                                l1046 5354  
                                                l1230 5F28  
                                                l1310 3C18  
                                                l1119 743C  
                                                l1151 6B20  
                                                l1047 535C  
                                                l1311 3C2A  
                                                l2200 179A  
                                                l1152 6B04  
                                                l1224 6962  
                                                l1128 73DA  
                                                l1304 3CDE  
                                                l1312 3C3E  
                                                l2201 17AA  
                                                l1225 6946  
                                                l1057 713E  
                                                l2017 5766  
                                                l1305 3BFA  
                                                l2210 17FE  
                                                l2202 17BA  
                                                l1058 712C  
                                                l1146 73D2  
                                                l2018 5700  
                                                l2130 1C5A  
                                                l1314 3C62  
                                                l2211 1802  
                                                l2203 17CA  
                                                l2019 574A  
                                                l1315 3C86  
                                                l2220 1826  
                                                l2212 1806  
                                                l2204 17DA  
                                                l1084 72AA  
                                                l2132 1E24  
                                                l2300 54EC  
                                                l2221 182A  
                                                l2213 180A  
                                                l2205 17EA  
                                                l1157 5B3A  
                                                l2133 1D12  
                                                l1317 3CA2  
                                                l2230 184E  
                                                l2222 182E  
                                                l2214 180E  
                                                l2206 17EE  
                                                l1158 5B1E  
                                                l2134 1D3A  
                                                l1318 3CCE  
                                                l2223 1832  
                                                l2215 1812  
                                                l2207 17F2  
                                                l2135 1DE2  
                                                l1271 2B8A  
                                                l1263 2B46  
                                                l2240 1872  
                                                l2232 1852  
                                                l2224 1836  
                                                l2216 1816  
                                                l2208 17F6  
                                                l1520 3112  
                                                l2056 62E6  
                                                l2241 1876  
                                                l2233 1856  
                                                l2225 183A  
                                                l2217 181A  
                                                l2209 17FA  
                                                l1601 33DC  
                                                l1257 2C62  
                                                l2250 6786  
                                                l2242 187A  
                                                l2234 185A  
                                                l2226 183E  
                                                l2218 181E  
                                                l1530 3182  
                                                l1522 3126  
                                                l1610 34D8  
                                                l1602 33AE  
                                                l2058 6338  
                                                l2330 5FEE  
                                                l1258 2B26  
                                                l2251 678A  
                                                l2235 185E  
                                                l2227 1842  
                                                l2219 1822  
                                                l2171 4BD2  
                                                l1611 34AA  
                                                l1179 6848  
                                                l2083 46A2  
                                                l1291 2C3A  
                                                l1283 2BEC  
                                                l1275 2BA8  
                                                l1267 2B64  
                                                l2252 678E  
                                                l2236 1862  
                                                l2228 1846  
                                                l2180 4BF6  
                                                l2172 4BD6  
                                                l1532 319A  
                                                l1524 313C  
                                                l1620 2284  
                                                l1604 3430  
                                                l2092 468C  
                                                l2253 6792  
                                                l2237 1866  
                                                l2229 184A  
                                                l2181 4BFA  
                                                l2173 4BDA  
                                                l2261 29CC  
                                                l1701 28A0  
                                                l1605 3402  
                                                l2246 679A  
                                                l2254 6796  
                                                l2238 186A  
                                                l2182 4BFE  
                                                l2174 4BDE  
                                                l2270 2A50  
                                                l1710 2FC0  
                                                l1534 31AE  
                                                l1526 3152  
                                                l1622 2306  
                                                l1702 2872  
                                                l2086 4618  
                                                l2510 0BF6  
                                                l2247 677E  
                                                l2239 186E  
                                                l2183 4C02  
                                                l2175 4BE2  
                                                l2271 2A54  
                                                l2263 2A04  
                                                l1711 2F92  
                                                l1623 22D8  
                                                l1607 3484  
                                                l2095 607A  
                                                l2351 6F52  
                                                l2511 09FE  
                                                l2503 08A0  
                                                l1287 2C0A  
                                                l1279 2BC6  
                                                l2192 187E  
                                                l2168 4C1A  
                                                l2184 4C06  
                                                l2176 4BE6  
                                                l2280 2A78  
                                                l2272 2A58  
                                                l1720 30AE  
                                                l1536 31C2  
                                                l1528 316A  
                                                l1616 225E  
                                                l1704 294C  
                                                l1608 3456  
                                                l1640 385E  
                                                l2328 5F8C  
                                                l2520 0BA6  
                                                l2249 6782  
                                                l2193 175C  
                                                l2185 4C0A  
                                                l2177 4BEA  
                                                l2169 4BCE  
                                                l2265 2A94  
                                                l2281 2A7C  
                                                l2273 2A5C  
                                                l1713 3014  
                                                l1625 239C  
                                                l1617 2230  
                                                l1705 291E  
                                                l1641 3830  
                                                l2353 6F5C  
                                                l2505 092A  
                                                l2290 703C  
                                                l2186 4C0E  
                                                l2178 4BEE  
                                                l2282 2A80  
                                                l2274 2A60  
                                                l2266 2A40  
                                                l1802 5EA8  
                                                l1490 50F0  
                                                l1650 2CF8  
                                                l1714 2FE6  
                                                l1626 2364  
                                                l1634 37B6  
                                                l1570 487E  
                                                l2602 613A  
                                                l2370 0188  
                                                l2522 0BC2  
                                                l2514 0A3A  
                                                l2506 0992  
                                                l2195 1760  
                                                l2187 4C12  
                                                l2179 4BF2  
                                                l2283 2A84  
                                                l2275 2A64  
                                                l2267 2A44  
                                                l2259 29BE  
                                                l1803 5EB2  
                                                l1483 5090  
                                                l1619 22B2  
                                                l1731 328A  
                                                l1635 3788  
                                                l1571 4884  
                                                l2611 4F68  
                                                l2355 6F6A  
                                                l2507 09EC  
                                                l2196 1764  
                                                l2188 4C16  
                                                l2284 2A88  
                                                l2276 2A68  
                                                l2268 2A48  
                                                l1652 2DA0  
                                                l1476 6AAA  
                                                l1716 3068  
                                                l1628 23F0  
                                                l1740 3386  
                                                l1732 325C  
                                                l1580 4904  
                                                l1572 488A  
                                                l2700 47B6  
                                                l2380 0458  
                                                l2372 033E  
                                                l2516 0AE8  
                                                l2460 61CA  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 1768  
                                                l2285 2A8C  
                                                l2277 2A6C  
                                                l2269 2A4C  
                                                l1805 5EEA  
                                                l1821 6984  
                                                l1653 2D68  
                                                l1717 303A  
                                                l1661 0F60  
                                                l1629 23C2  
                                                l1725 6704  
                                                l1741 3358  
                                                l1637 380A  
                                                l1581 4936  
                                                l1565 48A8  
                                                l1573 4890  
                                                l2701 47C4  
                                                l2373 0310  
                                                l2517 0BAC  
                                                l2198 177A  
                                                l2286 2A90  
                                                l2278 2A70  
                                                l1830 6592  
                                                l1822 698E  
                                                l1486 50B0  
                                                l1646 2CD2  
                                                l1478 6AB6  
                                                l1670 0FDA  
                                                l1662 0F32  
                                                l1726 66D6  
                                                l1590 2646  
                                                l1734 32DE  
                                                l1638 37DC  
                                                l1574 4896  
                                                l1566 486C  
                                                l2702 47D6  
                                                l2470 4A28  
                                                l2382 048A  
                                                l2366 003E  
                                                l2518 0AF2  
                                                l2454 61DC  
                                                l2199 178A  
                                                l2287 2B20  
                                                l2279 2A74  
                                                l1807 5F08  
                                                l3343 68EC  
                                                l1655 2DF4  
                                                l1647 2CA4  
                                                l1719 30DC  
                                                l1735 32B0  
                                                l1575 489C  
                                                l2703 47E8  
                                                l2471 4A7E  
                                                l2615 6FFE  
                                                l2375 039C  
                                                l2519 0B6A  
                                                l2463 61D0  
                                                l2455 61B2  
                                                l3344 68E4  
                                                l1488 50D0  
                                                l1656 2DC6  
                                                l3272 6292  
                                                l1672 11A8  
                                                l1664 0FB4  
                                                l1592 274E  
                                                l1576 48A2  
                                                l1568 4872  
                                                l2720 3966  
                                                l2712 3914  
                                                l2704 47F6  
                                                l2624 6E18  
                                                l2608 4F9E  
                                                l2376 03C0  
                                                l2368 00B4  
                                                l2296 549C  
                                                l3353 6C96  
                                                l1649 2D26  
                                                l3273 6286  
                                                l1665 0F86  
                                                l1593 2720  
                                                l1737 3332  
                                                l1577 490C  
                                                l1569 4878  
                                                l2705 481E  
                                                l2481 5620  
                                                l2473 4AD4  
                                                l2609 4F5C  
                                                l2369 0202  
                                                l3354 6C8E  
                                                l1690 11AE  
                                                l1682 10F8  
                                                l1674 1058  
                                                l1586 2620  
                                                l1738 3304  
                                                l1578 48F8  
                                                l2714 391A  
                                                l2730 4FEC  
                                                l2474 4AD6  
                                                l2378 0426  
                                                l2490 0D60  
                                                l2458 61BE  
                                                l1835 7188  
                                                l3347 690C  
                                                l3531 54FE  
                                                l1667 1186  
                                                l1683 10CA  
                                                l1675 102A  
                                                l1595 27A2  
                                                l1587 25F2  
                                                l1579 48FE  
                                                l2475 4AE0  
                                                l2491 0DDA  
                                                l3348 6916  
                                                l3276 62BA  
                                                l1596 2774  
                                                l2716 398E  
                                                l2740 21F2  
                                                l2732 502A  
                                                l3540 6224  
                                                l1829 6588  
                                                l3357 6CAE  
                                                l3533 5538  
                                                l3277 62C8  
                                                l1669 1008  
                                                l1589 2674  
                                                l2717 3934  
                                                l2709 38C6  
                                                l2741 2220  
                                                l2733 4FF6  
                                                l1933 6E68  
                                                l2469 4AEC  
                                                l2493 0E3A  
                                                l3358 6CB8  
                                                l3534 5576  
                                                l1686 1148  
                                                l1678 10A8  
                                                l2750 5A8C  
                                                l2718 39C4  
                                                l2742 21F8  
                                                l2734 5002  
                                                l2494 0E6C  
                                                l2486 0C4C  
                                                l3527 6C62  
                                                l1687 111A  
                                                l1679 107A  
                                                l1695 27F8  
                                                l2751 5AA8  
                                                l2719 394C  
                                                l2495 0E9A  
                                                l2487 0C70  
                                                l2840 661C  
                                                l1784 676A  
                                                l2760 6D70  
                                                l1696 27CA  
                                                l2752 5AC4  
                                                l2728 4FB2  
                                                l2496 0EF6  
                                                l1776 5DDA  
                                                l2832 6CEA  
                                                l1785 6728  
                                                l1689 11DC  
                                                l2753 5ACA  
                                                l1929 6E9A  
                                                l3545 6FB4  
                                                l2489 0CF8  
                                                l1777 5E06  
                                                l2833 6CC6  
                                                l1698 284C  
                                                l2754 5AD0  
                                                l3546 6FA4  
                                                l2498 0F18  
                                                l2834 6CF8  
                                                l1787 6750  
                                                l1699 281E  
                                                l2747 5AD6  
                                                l3539 6262  
                                                l2835 6CD8  
                                                l2764 5296  
                                                l2748 5A70  
                                                l3557 5D06  
                                                l2846 5BDA  
                                                l2758 6D60  
                                                l3558 5C9E  
                                                l2855 5996  
                                                l2759 6D40  
                                                l3559 5CFE  
                                                l2768 5300  
                                                l2849 5C0E  
                                                l2697 483C  
                                                l2858 59D2  
                                                l2891 5D4E  
                                                l2892 5D42  
                           ?__offset_from_file_number 0001  
                                                l2895 5D82  
                                                l2896 5D90  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8D52  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8E0E  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E4C  
                               __end_of_checked_line4 8C8E  
                                      _bootloader_run 61A6  
                                 ?_internalFlash_read 000E  
                                                u7010 68F0  
                                                u7110 6526  
                                                u7120 6532  
                                                u7040 6C9A  
                                                u7130 653E  
                                                u7140 654A  
                                                u8100 3252  
                                                u7150 6556  
                                                u7118 6528  
                                                u8110 6E96  
                                                u7160 6560  
                                                u7128 6534  
                                                u8120 6E64  
                                                u8200 4BB4  
                                                u7138 6540  
                                                u7235 5EBE  
                                                u7148 654C  
                                                u8220 6244  
                                                u7325 659E  
                                                u7166 6562  
                                                u7158 6558  
                                                u8207 4BAA  
                               ??_USBCtrlTrfTxService 0001  
                                                u7408 3EA2  
                                                u9200 36F6  
                                                u9041 29D6  
                                                u7345 5E34  
                                                u7409 3EB4  
                                                u8227 623A  
                                                u8180 4B74  
                                                u7444 3EF8  
                                                u7428 3EC6  
                                                u9220 374E  
                                                u8245 243A  
                                                u7445 3EF2  
                                                u7429 3EDA  
                                                u7470 3F2E  
                                                u7710 4E82  
                                                u9150 471C  
                                                u9207 36EC  
                                                _UCFG 000F39  
                                                u7560 5D52  
                                                u8355 1246  
                                                u8187 4B6A  
                                                u9227 3744  
                                                u8508 1440  
                                                _UEP0 000F26  
                                                u8509 1454  
                                                _UEP1 000F27  
                                                u7590 6296  
                                                u7910 45B4  
                                                u8438 1348  
                                                u9190 36C6  
                                                u8439 135C  
                                                u7840 457C  
                                                u8480 1438  
                                                u9440 16C8  
                                                u8298 24B6  
                                                u8490 143A  
                                                u8378 127A  
                                                u9610 074C  
                                                u8299 24CA  
                                                u8379 128E  
                                                _UEIE 000F37  
                                                u9700 1E6C  
                                                u8580 6AE2  
                                                u9620 075E  
                                                u9540 062C  
                                                u9508 052C  
                                                u9509 0540  
                                                u9197 36BC  
                                                u7870 4592  
                                                u9518 055C  
                                                u9519 0570  
                                                u9800 1F8C  
                                                u9720 1EB0  
                                                u7890 45A4  
                                                u9650 07D6  
                                                u9820 1FC6  
                                                u9740 1EF4  
                                                u7980 50BC  
                                                u7990 50DC  
                                                u9558 064C  
                                                u9559 0660  
                                                u9840 1FF4  
                                                u9760 1F2E  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9860 2024  
                                                u9780 1F5C  
                                                u9685 709E  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                                api_parse@out_idx_ptr 003D  
                                      _ResetSenseData 639E  
                                                _enc1 0096  
                                                _enc2 0095  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0179  
                                                _main 4942  
                             _bit_pattern_verticalbar 8FB8  
                                                _itoa 6C3E  
                         __size_of_APP_DeviceMSDTasks 0012  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 4942  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 54F6  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                             __bootloader_verify_file 0C0E  
                           _ExternalFlash_MediaDetect 7472  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 739C  
                               _display_get_character 6FC6  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8D41  
                                __end_of_failed_line2 8DB7  
                                __end_of_failed_line4 8E43  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4402  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0171  
                    __end_of__fat_sector_from_cluster 72DC  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 2E16  
                                      _hex_file_entry 01CB  
                              _bootloader_get_entries 7414  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 6EB2  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 016D  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                                               l10501 313C  
                                               l10229 4436  
                                               l10415 6888  
                                               l10513 3182  
                                               l10505 3152  
                                               l10347 4546  
                                               l10419 68A6  
                                               l10517 319A  
                                               l10509 316A  
                                               l13005 46A2  
                                               l10529 31CA  
                                               l10641 4B22  
                                               l12307 1F36  
                                               l12059 05FC  
                                               l13107 54BE  
                                               l12333 1FA8  
                                               l12317 1F5C  
                                               l12253 1E44  
                                               l10493 3112  
                                               l13213 4A7E  
                                               l12319 1F64  
                                               l10751 25BC  
                                               l12345 1FCE  
                                               l12281 1ECC  
                                               l10497 3126  
                                               l10673 6224  
                                               l10593 6FA4  
                                               l11651 2A04  
                                               l11643 29CC  
                                               l12355 1FF4  
                                               l12267 1E88  
                                               l11637 29BE  
                                               l12357 1FFC  
                                               l11743 2A94  
                                               l12295 1F10  
                                               l14063 0C68  
                                               l13361 4FFA  
                                               l14321 2F14  
                                               l13089 546E  
                                               l11827 46E8  
                                               l10893 6AA2  
                                               l13285 4F60  
                                               l11759 703C  
                                               l13527 359C  
                                               l12655 5C9E  
                                               l13279 4F54  
                                               l10899 6AAE  
                                               l13803 3962  
                                               l14195 0B6A  
                                               l13637 19E2  
                                               l12925 5F20  
                                               l12937 5DA4  
                                               l13499 3538  
                                               l12971 45FA  
                                               l15541 5C62  
                                               l15543 5C96  
                                        spi_tx@length 0003  
                                               l15555 1896  
                                               l15557 19AE  
                                  ?__flash_get_status 000D  
                                      ??_display_init 0022  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 5DA2  
                                               u10110 5736  
                                               ?_utoa 0008  
                                               u11000 4F82  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u11100 355C  
                                               u10045 6BCE  
                                               u10150 6334  
                                               u10215 6F22  
                                               u11050 5028  
                                               u11130 3600  
                                               u10170 5CCE  
                                               u12010 08EC  
                                               u10260 5292  
                                               u10404 3B3A  
                                               u10405 3B34  
                                               u10414 3B6C  
                                               u10415 3B66  
                                               u10600 46A2  
                                               u11250 19DE  
                                               u10195 6000  
                                               u10454 3BBE  
                                               u10438 3B8E  
                                               u10390 3B24  
                                               u11270 1A12  
                                               u10455 3BB8  
                                               u10439 3BA0  
                                               u10471 6A60  
                                               u11440 1BBC  
                                               u10640 5FEA  
                                     __end_of___llmod 62DA  
                                               u10378 3AF2  
                                               u12330 2F88  
                              __end_of_USBDeviceTasks 2F8C  
                                               u10650 1C34  
                                               u10730 54A2  
                                               u11610 2B9E  
                                               u10490 5F6C  
                                               u10379 3B06  
                                               u12430 565C  
                                               u10590 4698  
                                               u11710 2C50  
                                               u11630 2BBC  
                                               u11550 2B3C  
                                               u11455 6832  
                                               u10655 1C2A  
                                               u10760 54F2  
                                               u12450 5670  
                                               u12370 6514  
                                               u11650 2BDA  
                                               u11570 2B5A  
                                               u10675 1CCC  
                                               u10860 4A4E  
                                               u10940 6106  
                                               u10780 00A2  
                                               u11910 0CBA  
                                               u11670 2C00  
                                               u11590 2B78  
                                               u10935 7246  
                                               u10880 4AAA  
                                               u10960 4F1E  
                                               u11690 2C1E  
                                               u12820 3CC8  
                                               u12740 3C08  
                                               u12750 3C50  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u13807 6A70  
                                               u13817 6A82  
                                               u13827 7132  
                                               u13837 6742  
                                               u13847 6754  
                                               u13857 675E  
                                     __end_of___lwdiv 6920  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0016  
                                     __end_of___lwmod 6CC2  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                               _PORTA 000F80  
                                               _PORTE 000F84  
                               ??__parse_format_drive 002D  
                                _file_minimum_address 0147  
                                    ??__display_start 001D  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00FA  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 00D1  
                           __end_of__find_nth_cluster 5778  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 1C16  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 4E26  
                     __end_of_internalFlash_getBuffer 73CE  
                     __end_of_USBCtrlEPAllowDataStage 5816  
                                               _sd000 8FCC  
                                               _sd001 8EC0  
                                               _sd002 8EF4  
                                               _sd003 8F63  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 620E  
                       __end_of_MSDTransferTerminated 66D0  
               __i2c_display_send_init_sequence@F6825 02BB  
                                        _gblCBWLength 009A  
                           ??_internalFlash_writePage 000B  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                              __end_of_ResetSenseData 6400  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 002F  
                           __data_sector_from_cluster 73AA  
                           fat_get_format_status@cntr 002E  
                                               pclath 000FFA  
                                     __end_of_ui_init 7346  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 009E  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 613C  
                          __end_of__display_rebooting 6726  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 0020  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 5D20  
                               hexCharsToUint8@retVal 0006  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                                      _MSDReadHandler 2412  
         i2c_display_program_custom_character@address 0020  
                        __size_of_USBStdSetCfgHandler 00E0  
               __bootloader_check_address@byte_status 000B  
                       internalFlash_readPage@address 0018  
                                     __initialization 53AC  
                           __end_of__flash_get_status 6EE4  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                                 _system_minimal_init 72F4  
               __end_of_ExternalFlash_MediaInitialize 7292  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7278  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0018  
                                         _FileAddress 0163  
                                        __end_of_main 4A1E  
                                        __end_of_itoa 6C80  
                       __end_of_system_encoder_enable 72C4  
                          i2c_eeprom_readByte@address 0012  
              __end_of__ic2_display_set_ddram_address 71EC  
             __size_of__ic2_display_set_ddram_address 0020  
                      __ic2_display_set_ddram_address 71CC  
                     __end_of_i2c_display_write_fixed 6970  
                                        __end_of_utoa 559A  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 651C  
                                    _timer_pseudo_isr 5304  
                       fat_read_from_file_fast@offset 00B9  
                            __parse_command_short@cmd 0024  
                  fat_read_from_file_fast@read_length 00BD  
                                    __end_of_i2c_init 7226  
                       fat_read_from_file_fast@sector 00B5  
                            __end_of__i2c_acknowledge 73EC  
                                     _hex_file_offset 007E  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 730A  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 016B  
                                api_prepare@outBuffer 0019  
                                              ??_main 005D  
                                    __end_of__i2c_get 73E2  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 017A  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00CB  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                            _fat_get_file_information 5F80  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7472  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 746E  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                __size_of_api_prepare 00DE  
                               ??__bootloader_program 00C3  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                                _i2c_eeprom_writeByte 6BB8  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                          __end_of__display_suspended 33A8  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7124  
                              __flash_write_to_buffer 6970  
              __end_of__ic2_display_set_cgram_address 7066  
             __size_of__ic2_display_set_cgram_address 0026  
                      __ic2_display_set_cgram_address 7040  
                                _start_from_byte_next 0091  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 72F4  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 001D  
                                     ?_ResetSenseData 0001  
                                          __i2c_start 743A  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 6AE6  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 00C3  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 67D2  
                                    __end_of__get_fbr 19BE  
                                    __end_of__get_mbr 4C9A  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPOR21 000ED5  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 0054  
                                   ??__display_verify 001D  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 25EC  
                                 _flash_pages_written 0165  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 559A  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 738C  
                   __bootloader_program@page_to_write 00FC  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00AC  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 4FA0  
                        __end_of__flash_set_page_size 5E1C  
                                     _hexCharsToUint8 7226  
                                     ??_USBDeviceInit 0009  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 6062  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                              ___wmul 70D8  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
                                           ??___lwdiv 0005  
           SYSTEM_Initialize@pll_startup_counter_2930 0003  
                                          _SoftDetach 0099  
                                           ??___lwmod 0005  
                                              _buffer 02CC  
                                   _USBEnableEndpoint 6CFE  
                       __bootloader_program@address32 00F5  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 620E  
                                  ?_fat_get_file_size 0036  
                                              _memset 6F9A  
                    __end_of__sector_from_file_number 6F9A  
                                              clear_0 5406  
                                              clear_1 541A  
                                              clear_2 542C  
                                              clear_3 5438  
                                              clear_4 5444  
                           _ExternalFlash_SectorWrite 6E4E  
                                   api_parse@inBuffer 0036  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F46  
                                              _reboot 7292  
                __bootloader_check_address@worst_case 000A  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 3BF8  
                                              _spi_tx 65CC  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0009  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7066  
                                              _tx_buf 02C4  
                               i2c_display_init@F6828 02B2  
                          __parse_command_long@length 0035  
            i2c_display_program_custom_character@cntr 0021  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                        __end_of_jump_to_main_program 7450  
                               __end_of_fat_find_file 46A6  
                      __parse_command_long@out_buffer 0031  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 0092  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 8C24  
                          __size_of__find_nth_cluster 009E  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6460  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6400  
                                              tblptru 000FF8  
                                    __end_of_spi_init 6CFE  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                 ?_flash_partial_read 0028  
                                    _i2c_display_init 6A56  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 633C  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                               __end_of_ui_get_status 7468  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AB  
                          ??_APP_DeviceCustomHIDTasks 0041  
                                __CFG_LS48MHZ$SYS48X8 000000  
                                   _SYSTEM_Initialize 687A  
                            __end_of__i2c_eeprom_busy 7124  
                                          __accesstop 0060  
                             __end_of__initialization 544C  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                __end_of_display_init 6A0C  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0172  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 73D8  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                         __end_of__parse_command_long 6D74  
                   __end_of_failed_line3_noNextRecord 8C64  
                                  __size_of__get_data 0028  
                           __end_of_fat_get_file_size 60D0  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 6D3A  
                            _bootloader_get_file_size 736A  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8EF4  
                                       __end_of_sd002 8F22  
                                       __end_of_sd003 8F7D  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7476  
                                        __pidataBANK1 7320  
                                        __pidataBANK2 725E  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7428  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 741E  
                ExternalFlash_SectorWrite@sector_addr 0027  
                     __end_of_bit_pattern_verticalbar 8FC0  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 00B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 0F2C  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4D62  
                                 _userInterfaceStatus 0094  
                                 display_prepare@mode 0023  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 3F16  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                       __size_of__display_programming 01CA  
                             __end_of_system_delay_ms 7148  
                                  __size_of_api_parse 0124  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0169  
                      __end_of_failed_line3_startCode 8C79  
                                  _flash_sector_write 6A0C  
                                  __size_of__spi_init 0038  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8D30  
                                        _failed_line2 8DA7  
                                        _failed_line4 8E3A  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A0  
                           __end_of_SYSTEM_Initialize 68CE  
                                   __end_of__i2c_read 5B8A  
                                   __end_of__i2c_send 744A  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 51B0  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 743A  
                                         ?__i2c_start 0001  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                    __size_of_i2c_display_write_fixed 0050  
                                    _USBStallEndpoint 3D08  
                        __size_of_i2c_eeprom_readByte 0054  
                                          _gblNumBLKS 014F  
                                           ?_i2c_init 0001  
                                    _mediaInformation 01E2  
                             __end_of_hexCharsToUint8 7242  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 54F6  
                                       __flash_wakeup 6726  
                            __fill_buffer_get_display 4FA0  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 0074  
                               __size_of__normal_mode 005C  
                         __size_of_i2c_display_cursor 001E  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4320  
               __end_of_APP_DeviceCustomHIDInitialize 6E4E  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 6E1A  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                           __bootloader_check_address 4A1E  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                                             ?___wmul 0001  
                                          _fat_format 1E3C  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                                           MSDTasks@i 0052  
                                             ?_memcpy 0001  
                                             ?_memset 0001  
                                          _device_dsc 8F7D  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001D  
                                    _USBCtrlEPService 5104  
                                             ?_ui_run 0001  
                                          _ep_data_in 0160  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 013F  
                                  __display_clear@row 0003  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 2F8C  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3AE6  
           __ic2_display_set_ddram_address@data_array 000C  
                                  _USBCheckStdRequest 4320  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8E80  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                          _flash_init 739C  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4BCC  
                                   __end_of__get_data 7040  
                                 _USBStdSetCfgHandler 46A6  
                                  __display_done@cntr 001D  
                                   __end_of__get_root 2B24  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                          _done_line1 8CEC  
                                          _done_line2 8E55  
                                          _done_line3 8CDB  
                                          _done_line4 8C3A  
                                             _SSP1ADD 000FC8  
                       i2c_display_init@init_sequence 000C  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7320  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0167  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 5DA2  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 53AC  
                                        __normal_mode 64C0  
                          __end_of_APP_DeviceMSDTasks 7358  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 667A  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 73B8  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00EB  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 5F0C  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 5E94  
                                          ??_i2c_init 0001  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8F8F  
                           ?__sector_from_file_number 0001  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 67D2  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 00B7  
                      __end_of_bootloader_get_entries 741E  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 39CE  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3AE6  
                                     hexCharToUint8@c 0001  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
                                   __end_of__spi_init 6DAC  
                         __size_of_USBCheckHIDRequest 00E2  
                                             __Lparam 0000  
                                _jump_to_main_program 744A  
                                   __end_of_hid_rpt01 8F63  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 001D  
                             __end_of_MSDErrorHandler 401C  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 5FF2  
                                          _last_error 0092  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0200  
                   __end_of__data_sector_from_cluster 73B8  
                            ?_internalFlash_erasePage 0009  
                                __end_of_found_line3b 8E7C  
                                             ___lldiv 5D20  
                                    ??_USBDeviceTasks 0020  
                                     __size_of___wmul 0026  
                                             ___llmod 6274  
                                             ___lwdiv 68CE  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 6C80  
                                   _fast_read_cluster 00AF  
                                  __display_rebooting 66D0  
                         __end_of__parse_format_drive 5304  
      i2c_display_program_custom_character@data_array 0015  
                         __size_of_internalFlash_read 0036  
                                   ?__i2c_acknowledge 0001  
              __ic2_display_set_cgram_address@address 000E  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 71CC  
                                             __pcinit 53AC  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                              __display_itoa_u32@cntr 0014  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 8EC0  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u16@text 001B  
                              __display_itoa_u32@text 0012  
                                      ?__display_done 0001  
                                             __ptext0 4942  
                                             __ptext1 3BF8  
                                     __display_failed 0F2C  
                                             __ptext2 72AC  
                                             __ptext3 69C0  
                                             __ptext4 5F0C  
                                             __ptext5 7040  
                                             __ptext6 6A56  
                                             __ptext7 2B24  
                                             __ptext8 5304  
                                             __ptext9 73B8  
                                             _inPipes 006E  
                                     __size_of_ui_run 0110  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A1  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                  __display_itoa_u32@number_of_digits 0015  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 71AC  
                             __read_value_from_offset 6B2E  
                             _fat_read_from_file_fast 1C16  
                                        ??_USBSuspend 0018  
                                     __display_search 33A8  
                                  __end_of_USBMSDInit 3F16  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 738C  
                                             _msd_cbw 000D40  
                                     __display_verify 3782  
                                             _msd_csw 000D80  
                                __i2c_not_acknowledge 73CE  
                            __offset_from_file_number 708C  
                                             _ui_init 7334  
                    ??__ic2_display_set_ddram_address 000B  
                     ?__ic2_display_set_ddram_address 0001  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7400  
                                  __end_of_USB_CD_Ptr 8E7E  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                               __size_of_display_init 004C  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 5C9C  
                                end_of_initialization 544C  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 667A  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 222A  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 203C  
                      ?_MSDProcessCommandMediaPresent 0001  
                                  __end_of_USB_SD_Ptr 8E75  
                          __end_of_bit_pattern_degree 8FB8  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 008C  
                           __end_of_MSDProcessCommand 3BF8  
                                             itoa@buf 0011  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                                     _USB1msTickCount 0153  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 6BFC  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
                               ??_USBStdSetCfgHandler 0018  
                     __parse_command_long@out_idx_ptr 0033  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                                  __display_suspended 3256  
                        ?_bootloader_get_rec_checksum 0001  
                    ??__ic2_display_set_cgram_address 000B  
                     ?__ic2_display_set_cgram_address 0001  
                                  __end_of_USBSuspend 6F14  
                             _USBCtrlEPAllowDataStage 5778  
                                   __end_of_spi_tx_rx 59DA  
                                   __end_of_spi_tx_tx 5C16  
                            __end_of_i2c_display_init 6A9E  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 73F6  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 73EC  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                    __size_of__fill_buffer_get_status 0102  
                                       ??__ui_encoder 0024  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4220  
                                             utoa@val 000A  
                                           _MSD_State 009F  
                                 ?__display_suspended 0001  
                         __end_of__bootloader_program 0C0E  
                               _system_encoder_enable 72AC  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 001B  
                          _USBStatusStageEnabledFlag1 00A4  
                          _USBStatusStageEnabledFlag2 00A3  
                      __parse_format_drive@out_buffer 0029  
                                      _bit_pattern_ae 8FA8  
                                      _bit_pattern_oe 8F98  
                                      _bit_pattern_ue 8FA0  
                                  USBEnableEndpoint@p 000A  
                                           _PORTAbits 000F80  
                                           _PORTEbits 000F84  
                      __end_of__flash_write_to_buffer 69C0  
                                    __CFG_DSBOREN$OFF 000000  
                                        _display_init 69C0  
                      internalFlash_writePage@address 0013  
                            ?_internalFlash_writePage 0009  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                  api_parse@outBuffer 0039  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0240  
                                  _BothEP0OutUOWNsSet 00A7  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 02CC  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 6920  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                                ??__display_suspended 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B3  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01E8  
                                       _checked_line1 8D41  
                                       _checked_line2 8E01  
                                       _checked_line3 8E43  
                                       _checked_line4 8C79  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8DC7  
                             __size_of__display_start 01D8  
                                     _suspended_line1 8CCA  
                                     _suspended_line2 8E1A  
                                     _suspended_line3 8E7E  
                                     _suspended_line4 8C25  
                        __end_of_USBTransferOnePacket 4220  
                                   ?__i2c_eeprom_busy 0001  
                               __i2c_eeprom_busy@busy 0006  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 0011  
                        __end_of__parse_command_short 5AFE  
               __end_of_internalFlash_pageFromAddress 725E  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7242  
                                  ??__i2c_eeprom_busy 0006  
                                __end_of_reboot_line1 8E1A  
                                __end_of_search_line1 8D96  
                                __end_of_search_line2 8E31  
                                __end_of_search_line3 8D85  
                                __end_of_search_line4 8DC7  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 62DA  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 121E  
                                    ?_MSDErrorHandler 0001  
                  __find_nth_cluster@sector_in_buffer 003E  
                              _USBCtrlTrfSetupHandler 59DA  
                       ??_bootloader_get_rec_checksum 0001  
                      __bootloader_program@entry_page 00CD  
                              __end_of_bit_pattern_ae 8FB0  
                              __display_checked@start 001F  
                    ExternalFlash_CapacityRead@config 0001  
                              __end_of_bit_pattern_oe 8FA0  
                              __end_of_bit_pattern_ue 8FA8  
                            __size_of_display_prepare 00DE  
                             __end_of__display_search 34FA  
                               __end_of_USBDeviceInit 3648  
               __end_of_USBIncrement1msInternalTimers 716A  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7148  
                                     ??__display_done 001D  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                                      __end_of___wmul 70FE  
                             __end_of__display_verify 38AA  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 3E10  
                                 _i2c_eeprom_readByte 6826  
                 __bootloader_program@start_from_byte 00F9  
                         __end_of_system_minimal_init 730A  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CA3  
                                      __end_of_memcpy 6274  
                                     _MSDRetryAttempt 009B  
                                      __end_of_memset 6FC6  
                                      __end_of_reboot 72AC  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                                   _USBBusIsSuspended 00A9  
                                      __end_of_ui_run 3D08  
                                      __end_of_spi_tx 6624  
                                 __end_of__ui_encoder 2C9E  
                           __flash_set_page_size@size 0018  
                                 start_initialization 53AC  
                             ?_USBStdGetStatusHandler 0001  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 4864  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0018  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                                     _USBMSDOutHandle 008A  
                        __end_of_USBConfigureEndpoint 5946  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 175A  
                                 __flash_partial_read 5E1C  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 0200  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 0098  
                                      _hexCharToUint8 6F42  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 4E26  
                            _fast_read_cluster_number 00AD  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 298E  
                            __end_of_USBCtrlEPService 51B0  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 71AC  
                                           __i2c_read 5AFE  
                                           __i2c_send 7442  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7432  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 001C  
                           ??_USBCtrlEPAllowDataStage 0002  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 746E  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8D30  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 008E  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 5FF2  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 000E  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D0E  
                                   _programming_line2 8CB7  
                                   _programming_line3 8E31  
                                   _programming_line4 8CFD  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0026  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                            ??___wmul 0005  
                                 _USBStdGetDscHandler 3648  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT12 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00A0  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01E9  
                                         __pdataBANK2 02B2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 003A  
                                            ??_reboot 0024  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0024  
                                  __end_of__i2c_start 7442  
                                            ??_spi_tx 0005  
                                  __end_of__i2c_write 6B2E  
                            __end_of_system_full_init 6826  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B4  
                      __end_of_USBStdGetStatusHandler 525A  
                          ??_system_minimal_init_undo 0001  
                            __fat_sector_from_cluster 72C4  
                         api_parse@receivedDataLength 0038  
                                    api_parse@out_idx 003F  
                                         __pbssCOMRAM 005F  
                   __end_of__bootloader_check_address 4AF8  
               __end_of_internalFlash_addressFromPage 6F42  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 6F14  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B5  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 45C6  
             __bootloader_program@address_within_page 00CF  
                             __end_of_suspended_line1 8CDB  
                             __end_of_suspended_line2 8E26  
                             __end_of_suspended_line3 8E7F  
                             __end_of_suspended_line4 8C3A  
                              __end_of_hexCharToUint8 6F6E  
                           __size_of__display_checked 0178  
                                           _gblBLKLen 014B  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 716A  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6062  
        __end_of_i2c_display_program_custom_character 5F80  
       __size_of_i2c_display_program_custom_character 0074  
              ??_i2c_display_program_custom_character 0011  
               ?_i2c_display_program_custom_character 000F  
                _i2c_display_program_custom_character 5F0C  
                                        _found_line3b 8E75  
                                           __get_data 7018  
                                   _flash_sector_read 70B2  
                    __bootloader_program@return_value 00F1  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 6B74  
                     __end_of_fat_read_from_file_fast 1E3C  
                                           __get_root 298E  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 6DE4  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 720A  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 6B74  
                                        _pBDTEntryOut 0139  
                                          ?__i2c_stop 0001  
                                           __read_fat 6624  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8D1F  
                           __end_of_programming_line2 8CCA  
                           __end_of_programming_line3 8E3A  
                           __end_of_programming_line4 8D0E  
                    __end_of_ExternalFlash_SectorRead 6EB2  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7432  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7428  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5452  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 38AA  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 401C  
                                  _APP_DeviceMSDTasks 7346  
                                       __pmediumconst 8C24  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 6E4E  
                                           __ptext101 2412  
                                           __ptext110 73EC  
                                           __ptext102 44E4  
                                           __ptext111 7358  
                                           __ptext103 3F16  
                                           __ptext120 6FC6  
                                           __ptext112 7278  
                                           __ptext104 3D08  
                                           __ptext121 203C  
                                           __ptext113 7472  
                                           __ptext105 639E  
                                           __ptext130 7292  
                                           __ptext122 7450  
                                           __ptext114 563A  
                                           __ptext106 6E80  
                                           __ptext131 7462  
                                           __ptext123 7400  
                                           __ptext115 4786  
                                           __ptext107 70B2  
                                           __ptext140 33A8  
                                           __ptext132 613C  
                                           __ptext124 730A  
                                           __ptext116 620E  
                                           __ptext108 5E1C  
                                           __ptext141 66D0  
                                           __ptext133 6920  
                                           __ptext125 7456  
                                           __ptext117 401C  
                                           __ptext109 5816  
                                           __ptext150 70D8  
                                           __ptext142 27C4  
                                           __ptext134 71EC  
                                           __ptext126 745C  
                                           __ptext118 73F6  
                                           __ptext151 6274  
                                           __ptext143 222A  
                                           __ptext135 71CC  
                                           __ptext127 38AA  
                                           __ptext119 4FA0  
                                           __ptext160 54F6  
                                           __ptext152 5D20  
                                           __ptext144 736A  
                                           __ptext136 4864  
                                           __ptext128 5A6C  
                                           __ptext161 6C80  
                                           __ptext153 2F8C  
                                           __ptext145 0F2C  
                                           __ptext137 3782  
                                           __ptext129 7124  
                                           __ptext170 6D3A  
                                           __ptext162 68CE  
                                           __ptext154 741E  
                                           __ptext146 740A  
                                           __ptext138 3256  
                                           __ptext171 525A  
                                           __ptext163 6BB8  
                                           __ptext155 6A9E  
                                           __ptext147 7468  
                                           __ptext139 25EC  
                                           __ptext180 65CC  
                                           __ptext172 1E3C  
                                           __ptext164 6AE6  
                                           __ptext156 2C9E  
                                           __ptext148 7414  
                                           __ptext181 6EB2  
                                           __ptext173 6A0C  
                                           __ptext165 70FE  
                                           __ptext157 7428  
                                           __ptext149 30FE  
                                           __ptext182 5946  
                                           __ptext174 6970  
                                           __ptext166 651C  
                                           __ptext158 5054  
                                           __ptext183 298E  
                                           __ptext175 5B8A  
                                           __ptext167 7432  
                                           __ptext159 6C3E  
                                           __ptext184 4BCC  
                                           __ptext176 6574  
                                           __ptext168 743A  
                                           __ptext185 175A  
                                           __ptext177 5E94  
                                           __ptext169 7442  
                                           __ptext186 677C  
                                           __ptext178 716A  
                                           __ptext187 7018  
                                           __ptext179 6726  
                                           __ptext188 411E  
                                           __ptext189 0000  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 004A  
                                            ?___lwdiv 0001  
                                           __spi_init 6D74  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F46  
                                         __ui_encoder 2B24  
                                           _idle_rate 00B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 4786  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0143  
                                     __i2c_write@cntr 000A  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                      internalFlash_erasePage@address 000F  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 411E  
           __ic2_display_set_cgram_address@data_array 000B  
                          ?_ExternalFlash_MediaDetect 0001  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0021  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 5A6C  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 718C  
                                       _fat_find_file 45C6  
                       __size_of_i2c_eeprom_writeByte 0044  
                                            ?_ui_init 0001  
                           __display_programming@cntr 001D  
                                   __display_itoa_u32 30FE  
                                   __display_itoa_u16 5054  
                    __size_of_internalFlash_erasePage 006C  
                        __end_of_USBCtrlTrfOutHandler 64C0  
                           __end_of_flash_sector_read 70D8  
                               ??_USBStdGetDscHandler 0001  
                                 __end_of_found_line1 8D74  
                                 __end_of_found_line2 8E01  
                                 __end_of_found_line3 8E6D  
                                 __end_of_found_line4 8CA3  
                                         _ep_data_out 015D  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 740A  
              __size_of_bootloader_get_rec_dataLength 000A  
                       _bootloader_get_rec_dataLength 7400  
                                       _MSDWriteState 009C  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u16 0019  
                                  ?__display_itoa_u32 000E  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 6A9E  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                             ?_internalFlash_readPage 0016  
                                      __display_found 222A  
                    __end_of_bootloader_get_file_size 737C  
                                         _file_buffer 0280  
                                     _config_internal 015A  
                                          ?__get_root 0001  
                                       _ui_get_status 7462  
                                     _config_external 0157  
                                      __display_start 25EC  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 6FF0  
                                         _file_number 00FE  
                                      ___wmul@product 0005  
                                            _LATAbits 000F89  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                          __end_of_USBCheckHIDRequest 44E4  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                 ??__display_itoa_u16 001D  
                                 ??__display_itoa_u32 0014  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                            __fat_offset_from_cluster 72DC  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                   __bootloader_verify_file@address32 00F0  
                          __end_of_internalFlash_read 6E1A  
                                          ?_api_parse 0036  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                                            _MSDTasks 19BE  
                          _USBDeferINDataStagePackets 00A2  
                                        ??_fat_format 0025  
                                _active_configuration 0090  
                                   ?_i2c_display_init 0001  
                             spi_tx_rx@command_length 0003  
                                  _bit_pattern_degree 8FB0  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                                _USBConfigureEndpoint 58B2  
                          ?__data_sector_from_cluster 0001  
              __ic2_display_set_ddram_address@address 000B  
                                  ??_i2c_display_init 000B  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 5946  
                                           _spi_tx_tx 5B8A  
                                __display_verify@cntr 001F  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0088  
                               flash_sector_read@data 002A  
                                __display_programming 27C4  
                                   ___wmul@multiplier 0001  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                           __end_of__display_itoa_u16 5104  
                           __end_of__display_itoa_u32 3256  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8D63  
                                __end_of_verify_line2 8DF3  
                                __end_of_verify_line3 8E65  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AA  
                   __end_of_ExternalFlash_MediaDetect 7476  
                        __size_of__parse_format_drive 00AA  
                                        _reboot_line1 8E0E  
                                        _search_line1 8D85  
                                        _search_line2 8E26  
                                        _search_line3 8D74  
                                        _search_line4 8DB7  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 00BF  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 5054  
                        ??_bootloader_get_rec_address 0003  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 6AE6  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 7468  
                               __display_checked@cntr 0020  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 2412  
                             __end_of_USBStallHandler 6BB8  
                            __sector_from_file_number 6F6E  
                      __end_of_internalFlash_readPage 6C3E  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 27C4  
                                         _INTCON3bits 000FF0  
                                           copy_data0 53C0  
                                           copy_data1 53E0  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 4786  
                                  __end_of_fat_format 203C  
                                 __display_found@cntr 0019  
                                            _i2c_init 720A  
                                         ??__i2c_read 0009  
                    __size_of_internalFlash_writePage 00B8  
                                         ??__i2c_send 0001  
                                        _MSDReadState 009D  
                                         ??__i2c_stop 0001  
                                  __end_of_device_dsc 8F8F  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 73D8  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 0012  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                                            __Hrparam 0000  
                         __end_of_bootloader_filename 8F98  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 73AA  
                                      _TransferLength 0086  
                                _bootloader_extension 8FC8  
                          __end_of_USBCheckMSDRequest 4EE8  
                                     api_parse@in_idx 0040  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 6E80  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 000A  
                                  __end_of_done_line1 8CFD  
                                  __end_of_done_line2 8E5D  
                                  __end_of_done_line3 8CEC  
                                  __end_of_done_line4 8C4F  
                                      __i2c_wait_idle 651C  
                                     _MSDWriteHandler 121E  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 0097  
                           __size_of__i2c_eeprom_busy 0026  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 73C4  
                                         _found_line1 8D63  
                                         _found_line2 8DF3  
                                         _found_line3 8E65  
                                         _found_line4 8C8E  
                                            __get_fat 677C  
                                            __get_fbr 175A  
                                            __get_mbr 4BCC  
                                  ??_USBStallEndpoint 0002  
                  __end_of_ExternalFlash_CapacityRead 736A  
                          _ExternalFlash_CapacityRead 7358  
                             ??_MSDTransferTerminated 000E  
                             __display_suspended@cntr 0001  
                        __size_of__bootloader_program 03B4  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0176  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u16@value 0019  
                             __display_itoa_u32@value 000E  
                                            _fat_init 737C  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                          __size_of_flash_sector_read 0026  
                                    __display_checked 2C9E  
               __end_of_bootloader_get_rec_recordType 7456  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7450  
                                            __ptext10 72F4  
                                            __ptext11 720A  
                                            __ptext20 718C  
                                            __ptext12 67D2  
                                            __ptext21 71AC  
                                            __ptext13 7334  
                                            __ptext30 4EE8  
                                            __ptext22 744A  
                                            __ptext14 739C  
                                            __ptext31 6BFC  
                                            __ptext23 61A6  
                                            __ptext15 6CC2  
                                            __ptext40 56DA  
                                            __ptext32 6DE4  
                                            __ptext24 0C0E  
                                            __ptext16 6D74  
                                            __ptext41 6B2E  
                                            __ptext33 7242  
                                            __ptext25 085A  
                                            __ptext17 5DA2  
                                            __ptext50 62DA  
                                            __ptext42 6624  
                                            __ptext34 73C4  
                                            __ptext26 0020  
                                            __ptext18 737C  
                                            __ptext51 7066  
                                            __ptext43 72C4  
                                            __ptext35 60D0  
                                            __ptext27 7226  
                                            __ptext19 5452  
                                            __ptext60 73D8  
                                            __ptext52 6F6E  
                                            __ptext44 72DC  
                                            __ptext36 6FF0  
                                            __ptext28 5FF2  
                                            __ptext61 73E2  
                                            __ptext53 708C  
                                            __ptext45 73AA  
                                            __ptext37 6400  
                                            __ptext29 6F42  
                                            __ptext70 4220  
                                            __ptext62 2E16  
                                            __ptext54 45C6  
                                            __ptext46 5F80  
                                            __ptext38 6F14  
                                            __ptext71 5778  
                                            __ptext63 6DAC  
                                            __ptext55 5C9C  
                                            __ptext47 4A1E  
                                            __ptext39 1C16  
                                            __ptext80 4402  
                                            __ptext72 4320  
                                            __ptext64 6EE4  
                                            __ptext56 64C0  
                                            __ptext48 559A  
                                            __ptext81 687A  
                                            __ptext73 46A6  
                                            __ptext65 6B74  
                                            __ptext57 6826  
                                            __ptext49 6062  
                                            __ptext90 4D62  
                                            __ptext82 667A  
                                            __ptext74 6F9A  
                                            __ptext66 7148  
                                            __ptext58 5AFE  
                                            __ptext91 4C9A  
                                            __ptext83 738C  
                                            __ptext75 51B0  
                                            __ptext67 34FA  
                                            __ptext59 73CE  
                                            __ptext92 4AF8  
                                            __ptext84 3E10  
                                            __ptext76 3648  
                                            __ptext68 5104  
                                            __ptext93 7346  
                                            __ptext85 6E1A  
                                            __ptext77 14D6  
                                            __ptext69 59DA  
                                            __ptext94 19BE  
                                            __ptext86 6CFE  
                                            __ptext78 5C16  
                                            __ptext95 3AE6  
                                            __ptext87 58B2  
                                            __ptext79 4E26  
                                            __ptext96 633C  
                                            __ptext88 6460  
                                            __ptext97 049C  
                                            __ptext89 39CE  
                                            __ptext98 121E  
                                            __ptext99 746E  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0012  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 639E  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 633C  
                                         ??__get_data 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_root 0003  
                         __size_of__display_suspended 0152  
                             __size_of_bootloader_run 0068  
                                    __size_of_strncmp 0084  
                                 __parse_command_long 6D3A  
                   __end_of_failed_line3_addressRange 8CB7  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                      __size_of__bootloader_find_file 00A0  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 56DA  
                       __end_of__bootloader_find_file 563A  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 677C  
                      __end_of_USBCtrlTrfSetupHandler 5A6C  
                                       __size_of_main 00DC  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F22  
                                       __size_of_utoa 00A4  
                                         ??__read_fat 0032  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 00BB  
                                  ??_USBCtrlEPService 001E  
                    __size_of__bootloader_verify_file 031E  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 745C  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7456  
                                 _USBCtrlTrfInHandler 4C9A  
                  _MSDProcessCommandMediaPresent$2390 003C  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 003B  
                              __end_of__i2c_wait_idle 6574  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
     i2c_display_program_custom_character@bit_pattern 000F  
                                            _spi_init 6CC2  
                                _USBCtrlTrfOutHandler 6460  
                    __end_of__offset_from_file_number 70B2  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 4D62  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 73C4  
                                ?__parse_command_long 002F  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                    __parse_format_drive@return_value 002E  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                 __display_start@cntr 001D  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 30FE  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 0024  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A5  
                          __size_of__display_itoa_u16 00B0  
                          __size_of__display_itoa_u32 0158  
                     __end_of__fill_buffer_get_status 411E  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7018  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 6FF0  
                             _internalFlash_erasePage 60D0  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 58B2  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5816  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                                 __end_of_start_line1 8DA7  
                                 __end_of_start_line2 8E55  
                                 __end_of_start_line3 8E80  
                                 __end_of_start_line4 8DE5  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 73F6  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 73E2  
                              bootloader_run@timeslot 005C  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0062  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 5C9C  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 5C16  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 6E80  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 65CC  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6574  
                SYSTEM_Initialize@pll_startup_counter 0001  
                                     _display_content 017B  
                          __end_of_flash_partial_read 708C  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 14D6  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7462  
                         _bootloader_get_rec_checksum 745C  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                        __bootloader_verify_file@root 00CB  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 4864  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8D1F  
                                 _USBCtrlTrfRxService 39CE  
                           __size_of_timer_pseudo_isr 00A8  
                                  _USBWakeFromSuspend 6DAC  
                               ??__parse_command_long 0035  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 000F  
                         internalFlash_writePage@page 0009  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 71EC  
                              ??__display_programming 001D  
                             _USBStdFeatureReqHandler 14D6  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4AF8  
                                        ?_api_prepare 0017  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0173  
                    __size_of_bootloader_get_rec_data 0016  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8DD6  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7414  
                          _bootloader_get_rec_address 740A  
                               _USBAlternateInterface 01E7  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 687A  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0177  
                           _failed_line3_noNextRecord 8C4F  
                          ?__bootloader_check_address 0001  
                     __parse_format_drive@out_idx_ptr 002B  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00A8  
                                      _display_update 613C  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8C64  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 44E4  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0175  
                             _internalFlash_writePage 4EE8  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 3E10  
                        _USBStatusStageTimeoutCounter 00A6  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 000C  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 5E94  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 6BFC  
                                        _verify_line1 8D52  
                                        _verify_line2 8DE5  
                                        _verify_line3 8E5D  
                                 __parse_format_drive 525A  
                                          _USB_CD_Ptr 8E7C  
                                         _power_state 0093  
                                         _USBInHandle 016F  
                            _APP_DeviceCustomHIDTasks 563A  
                          __end_of_flash_sector_write 6A56  
